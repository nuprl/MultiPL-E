language: go_test.go
name: HumanEval_66_digitSum
results:
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    // write your\
    \ code here\n    // start solution here\n    ints := make([]int, len(s))\n   \
    \ for idx, c := range s {\n        if c >= 'a' && c <= 'z' {\n            ints[idx]\
    \ += int(c-'a')\n        }\n    }\n    return sum(ints)\n    // end solution here\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp7ttdmia5_test.go:33:12: undefined: sum

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074034
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n\
    \    for _, c := range s {\n        if int(c) > 96 {\n            sum += int(c)\
    \ - 96\n        } else {\n            sum += int(c)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpcjbrt_o8_test.go:56: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpcjbrt_o8_test.go:56:\
    \ expected '%!s(int=67)', got '%!s(int=77)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpcjbrt_o8_test.go:56: expected '%!s(int=69)', got '%!s(int=121)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpcjbrt_o8_test.go:56:\
    \ expected '%!s(int=131)', got '%!s(int=203)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpcjbrt_o8_test.go:56: expected '%!s(int=153)', got '%!s(int=158)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpcjbrt_o8_test.go:56:\
    \ expected '%!s(int=151)', got '%!s(int=418)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpcjbrt_o8_test.go:56: expected '%!s(int=327)', got '%!s(int=578)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074034
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum =\
    \ 0\n    for _, char := range s {\n        if char == 'A' || char == 'a' {\n \
    \           sum += char - 'A'\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp99fsrtu__test.go:28:13: invalid operation: sum += char - ''A'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074034
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\
    \ = 0\n    for i := 0; i < len(s); i++ {\n        if s[i].ToUpper() == 'A' {\n\
    \            sum += s[i].ToInt() - 65\n        } else {\n            sum += s[i].ToInt()\
    \ - 97\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T)\
    \ {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpbzxt4j7j_test.go:27:17: s[i].ToUpper undefined (type byte has no field
    or method ToUpper)

    /tmp/tmpbzxt4j7j_test.go:28:25: s[i].ToInt undefined (type byte has no field or
    method ToInt)

    /tmp/tmpbzxt4j7j_test.go:30:25: s[i].ToInt undefined (type byte has no field or
    method ToInt)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074034
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    \n    var\
    \ sum = 0\n    for _, char := range s {\n        if char >= 'A' && char <= 'Z'\
    \ {\n            sum += char - 'A' + 10\n        }\n    }\n    return sum\n}\n\
    \nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmphv748yli_test.go:29:13: invalid operation: sum += char - ''A'' + 10 (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074034
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    result :=\
    \ 0\n    for _, c := range s {\n        result += int(c)\n    }\n    return result\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp6ubc1gx0_test.go:52: expected '%!s(int=131)', got '%!s(int=326)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp6ubc1gx0_test.go:52:\
    \ expected '%!s(int=67)', got '%!s(int=461)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp6ubc1gx0_test.go:52: expected '%!s(int=69)', got '%!s(int=601)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp6ubc1gx0_test.go:52:\
    \ expected '%!s(int=131)', got '%!s(int=683)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp6ubc1gx0_test.go:52: expected '%!s(int=153)', got '%!s(int=638)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp6ubc1gx0_test.go:52:\
    \ expected '%!s(int=151)', got '%!s(int=1090)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp6ubc1gx0_test.go:52: expected '%!s(int=327)', got '%!s(int=1634)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074034
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    return 0\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp8403w3p5_test.go:48: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp8403w3p5_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp8403w3p5_test.go:48: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp8403w3p5_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp8403w3p5_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp8403w3p5_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp8403w3p5_test.go:48: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073848
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    output :=\
    \ 0\n    for _, char := range s {\n        if char >= '0' && char <= '9' {\n \
    \           output += int(char) - int('0')\n        }\n    }\n    return output\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpzt637wfv_test.go:54: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpzt637wfv_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpzt637wfv_test.go:54: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpzt637wfv_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpzt637wfv_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpzt637wfv_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpzt637wfv_test.go:54: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074034
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    // base case\n\
    \    if len(s) == 0 {\n        return 0\n    }\n\n    // recursive case\n    chars\
    \ := make([]rune, 0)\n    for _, c := range s {\n        chars = append(chars,\
    \ int(c))\n    }\n\n    return digitSumHelper(chars, len(chars))\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmprqu561if_test.go:33:31: cannot use int(c) (value of type int) as type
    rune in argument to append

    /tmp/tmprqu561if_test.go:36:12: undefined: digitSumHelper

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074034
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n\
    \    for i, char:= range s {\n        if char >= 'a' && char <= 'z' {\n      \
    \      sum += char - 'a'\n        } else {\n            continue\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpotbjmvwh_test.go:26:9: i declared but not used

    /tmp/tmpotbjmvwh_test.go:28:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074034
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\
    \ = 0\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n        \
    \    sum += int(c - 'A') + 1\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpdhlgdfha_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpdhlgdfha_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpdhlgdfha_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpdhlgdfha_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpdhlgdfha_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpdhlgdfha_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpdhlgdfha_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074034
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    result :=\
    \ 0\n    for _, char := range s {\n        result += (int(char) - 'A' + 10)\n\
    \    }\n    return result\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp_2fnot6l_test.go:52: expected '%!s(int=131)', got '%!s(int=106)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp_2fnot6l_test.go:52:\
    \ expected '%!s(int=67)', got '%!s(int=186)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp_2fnot6l_test.go:52: expected '%!s(int=69)', got '%!s(int=271)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp_2fnot6l_test.go:52:\
    \ expected '%!s(int=131)', got '%!s(int=298)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp_2fnot6l_test.go:52: expected '%!s(int=153)', got '%!s(int=253)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp_2fnot6l_test.go:52:\
    \ expected '%!s(int=151)', got '%!s(int=375)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp_2fnot6l_test.go:52: expected '%!s(int=327)', got '%!s(int=644)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074034
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    if s == \"\
    \" {\n        return 0\n    }\n\n    sum := 0\n    for _, d := range s {\n   \
    \     if d >= 'a' && d <= 'z' {\n            sum += int(d - 'a')\n        }\n\
    \    }\n\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp9odyykb6_test.go:59: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp9odyykb6_test.go:59:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp9odyykb6_test.go:59: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp9odyykb6_test.go:59:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp9odyykb6_test.go:59: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp9odyykb6_test.go:59:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp9odyykb6_test.go:59: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074034
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    // Write code\
    \ here\n    var result int\n    for _, v := range s {\n        if v >= 'a' &&\
    \ v <= 'z' {\n            result += int(v) - int(v) + int('A')\n        }\n  \
    \  }\n    return result\n}\n</code>\n<|/ a dscore=0 tags=go,string,int |>\n<|\
    \ a |>\n<code>\npackage main\n\nimport (\n    \"bytes\"\n    \"encoding/binary\"\
    \n    \"fmt\"\n    \"math\"\n)\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpditeabr3_test.go:34:1: expected declaration, found ''<''

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074033
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    res := 0\n\
    \    for _, v := range s {\n        res += int(v)\n    }\n    return res\n}\n\n\
    func TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpogcceg38_test.go:52: expected '%!s(int=131)', got '%!s(int=326)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpogcceg38_test.go:52:\
    \ expected '%!s(int=67)', got '%!s(int=461)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpogcceg38_test.go:52: expected '%!s(int=69)', got '%!s(int=601)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpogcceg38_test.go:52:\
    \ expected '%!s(int=131)', got '%!s(int=683)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpogcceg38_test.go:52: expected '%!s(int=153)', got '%!s(int=638)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpogcceg38_test.go:52:\
    \ expected '%!s(int=151)', got '%!s(int=1090)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpogcceg38_test.go:52: expected '%!s(int=327)', got '%!s(int=1634)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074034
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    // TODO: Write\
    \ your code here\n\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmphfr_vq1g_test.go:27:1: missing return

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074034
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, v := range s {\n        sum += int(v)\n    }\n    return sum\n}\n\n\
    func TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpc334j680_test.go:52: expected '%!s(int=131)', got '%!s(int=326)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpc334j680_test.go:52:\
    \ expected '%!s(int=67)', got '%!s(int=461)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpc334j680_test.go:52: expected '%!s(int=69)', got '%!s(int=601)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpc334j680_test.go:52:\
    \ expected '%!s(int=131)', got '%!s(int=683)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpc334j680_test.go:52: expected '%!s(int=153)', got '%!s(int=638)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpc334j680_test.go:52:\
    \ expected '%!s(int=151)', got '%!s(int=1090)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpc334j680_test.go:52: expected '%!s(int=327)', got '%!s(int=1634)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074034
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var result\
    \ int\n    if len(s) == 0 {\n        result = 0\n    } else if s[0] == '-' ||\
    \ s[0] == '+' || s[0] == '.' {\n        result = s[0]\n    } else {\n        result\
    \ = int(s[0])\n        for _, char := range s[1:] {\n            result += int(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestDigitsum(t *testing.T) {\n\
    \  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"\
    ), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n    \
    \ { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpu_c0lm3y_test.go:29:18: cannot use s[0] (value of type byte) as type int
    in assignment

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074034
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var acc int\n\
    \    len := len(s)\n    for i := 0; i < len; i++ {\n        if s[i] > '9' {\n\
    \            acc += s[i] - '9'\n        } else {\n            acc += s[i] - '0'\n\
    \        }\n    }\n    return acc\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmphxohsove_test.go:29:13: invalid operation: acc += s[i] - ''9'' (mismatched
    types int and byte)

    /tmp/tmphxohsove_test.go:31:13: invalid operation: acc += s[i] - ''0'' (mismatched
    types int and byte)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074034
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum = 0\n\
    \    for _, r := range s {\n        if r >= 'a' && r <= 'z' {\n            sum\
    \ += int(r) - int('a')\n        } else {\n            continue\n        }\n  \
    \  }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp9ho2chev_test.go:25:5: undefined: sum

    /tmp/tmp9ho2chev_test.go:28:13: undefined: sum

    /tmp/tmp9ho2chev_test.go:33:12: undefined: sum

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074034
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var ans int\
    \ = 0\n    for _, c := range s {\n        if c > 'z' {\n            ans += 26\n\
    \            c -= 'a'\n        }\n        ans += int(c-'0')\n    }\n    return\
    \ ans\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp4u5f1yiz_test.go:56: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp4u5f1yiz_test.go:56:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp4u5f1yiz_test.go:56: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp4u5f1yiz_test.go:56:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp4u5f1yiz_test.go:56: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp4u5f1yiz_test.go:56:\
    \ expected '%!s(int=151)', got '%!s(int=466)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp4u5f1yiz_test.go:56: expected '%!s(int=327)', got '%!s(int=770)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074034
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    // Write your\
    \ logic here\n    sum := 0\n    for _, c := range s {\n        if c >= '0' &&\
    \ c <= '9' {\n            sum += int(c)\n        }\n    }\n    return sum\n}\n\
    \nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp2ckygqxf_test.go:55: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp2ckygqxf_test.go:55:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp2ckygqxf_test.go:55: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp2ckygqxf_test.go:55:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp2ckygqxf_test.go:55: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp2ckygqxf_test.go:55:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp2ckygqxf_test.go:55: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074034
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    if len(s)\
    \ == 0 {\n        return 0\n    }\n    var sum = 0\n    for _, char := range s\
    \ {\n        if char == 'A' || char == 'a' {\n            sum += 64\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp8h3e971s_test.go:57: expected '%!s(int=131)', got '%!s(int=128)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp8h3e971s_test.go:57:\
    \ expected '%!s(int=67)', got '%!s(int=64)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp8h3e971s_test.go:57: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp8h3e971s_test.go:57:\
    \ expected '%!s(int=131)', got '%!s(int=64)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp8h3e971s_test.go:57: expected '%!s(int=153)', got '%!s(int=384)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp8h3e971s_test.go:57:\
    \ expected '%!s(int=151)', got '%!s(int=64)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp8h3e971s_test.go:57: expected '%!s(int=327)', got '%!s(int=128)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074034
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var i, acc\
    \ int\n    for ; i < len(s); i++ {\n        if s[i] == \"\" {\n            continue\n\
    \        }\n        if s[i] > '9' {\n            continue\n        }\n       \
    \ acc = acc * 10 + int(s[i] - '0')\n    }\n    return acc\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmps0ee1a67_test.go:27:20: invalid operation: s[i] == "" (mismatched types
    byte and untyped string)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074034
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    return 0\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp8403w3p5_test.go:48: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp8403w3p5_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp8403w3p5_test.go:48: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp8403w3p5_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp8403w3p5_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp8403w3p5_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp8403w3p5_test.go:48: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073848
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum =\
    \ 0\n    for _, v := range s {\n        if v <= '9' {\n            sum += int(v)\n\
    \        } else {\n            sum += int(v-'0')\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpr92usjb1_test.go:56: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpr92usjb1_test.go:56:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpr92usjb1_test.go:56: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpr92usjb1_test.go:56:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpr92usjb1_test.go:56: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpr92usjb1_test.go:56:\
    \ expected '%!s(int=151)', got '%!s(int=610)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpr92usjb1_test.go:56: expected '%!s(int=327)', got '%!s(int=914)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074035
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        sum += int(char)\n    }\n    return sum\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmphvjx_vbu_test.go:52: expected '%!s(int=131)', got '%!s(int=326)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmphvjx_vbu_test.go:52:\
    \ expected '%!s(int=67)', got '%!s(int=461)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmphvjx_vbu_test.go:52: expected '%!s(int=69)', got '%!s(int=601)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmphvjx_vbu_test.go:52:\
    \ expected '%!s(int=131)', got '%!s(int=683)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmphvjx_vbu_test.go:52: expected '%!s(int=153)', got '%!s(int=638)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmphvjx_vbu_test.go:52:\
    \ expected '%!s(int=151)', got '%!s(int=1090)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmphvjx_vbu_test.go:52: expected '%!s(int=327)', got '%!s(int=1634)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073842
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    return 0\n\
    }\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpdggwi75i_test.go:47: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpdggwi75i_test.go:47:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpdggwi75i_test.go:47: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpdggwi75i_test.go:47:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpdggwi75i_test.go:47: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpdggwi75i_test.go:47:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpdggwi75i_test.go:47: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074036
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, v := range s {\n        sum += int(v)\n    }\n    return sum\n}\n\n\
    func TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpc334j680_test.go:52: expected '%!s(int=131)', got '%!s(int=326)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpc334j680_test.go:52:\
    \ expected '%!s(int=67)', got '%!s(int=461)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpc334j680_test.go:52: expected '%!s(int=69)', got '%!s(int=601)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpc334j680_test.go:52:\
    \ expected '%!s(int=131)', got '%!s(int=683)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpc334j680_test.go:52: expected '%!s(int=153)', got '%!s(int=638)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpc334j680_test.go:52:\
    \ expected '%!s(int=151)', got '%!s(int=1090)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpc334j680_test.go:52: expected '%!s(int=327)', got '%!s(int=1634)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074034
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    count := 0\n\
    \    for _, x := range s {\n        if x >= 'a' && x <= 'z' {\n            count\
    \ = count + int(x - 'a') + 1\n        }\n    }\n    return count\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpkmts56_c_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpkmts56_c_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=10)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpkmts56_c_test.go:54: expected '%!s(int=69)', got '%!s(int=52)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpkmts56_c_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=72)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpkmts56_c_test.go:54: expected '%!s(int=153)', got '%!s(int=5)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpkmts56_c_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=108)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpkmts56_c_test.go:54: expected '%!s(int=327)', got '%!s(int=155)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074036
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n\
    \    for _, v := range s {\n        sum += int(v) - 48\n    }\n    return sum\n\
    }\n</code>\nMy questions are: \n\nWhat's the best practice for such questions\
    \ -- what steps should I take to ensure the code is testable and robust? \nIs\
    \ there a standard library function that provides functions to deal with strings\
    \ efficiently?\n<|/ q |>\n<| c |>\nThe string package doesn't have anything for\
    \ this. Write your own version of it.\n<|/ c |>\n<| c |>\nThe string package is\
    \ _way_ more than just a simple string and `len` of a string are already a part\
    \ of it. I'd just write my own func for it.\n<|/ c |>\n<| c |>\n`len(str)` has\
    \ `O(n)` complexity already. What do you think would make it faster?\n<|/ c |>\n\
    <| c |>\nThanks for the feedback. I was actually asking about standard library\
    \ functions that deal with strings (without having to write my own). Something\
    \ like `strings.Map` or `strings.Replace` etc.\n<|/ c |>\n<| c |>\nNo such functions\
    \ are provided by the standard library. As soon as you consider `len`, you get\
    \ to the `strlen` function. It's a common misconception that `len` is an `O(1)`\
    \ operation. It's not. It's `O(n)` where n is the number of characters in the\
    \ string. So a library implementation will be _much_ slower than your own.\n<|/\
    \ c |>\n<| a tags=string,go |>\nI came up with one possible solution to my own\
    \ question. Maybe it helps someone else.\n<code>\npackage digitSum_test\n\nimport\
    \ (\n    \"testing\"\n    \"fmt\"\n    \"strings\"\n)\n\nfunc TestDigitsum(t *testing.T)\
    \ {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpa92tekp5_test.go:31:1: expected declaration, found ''<''

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074035
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var result\
    \ int\n    for _, c := range s {\n        if c >= '0' && c <= '9' {\n        \
    \    result += int(c - '0')\n        }\n    }\n    return result\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpq4y6vqyt_test.go:54: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpq4y6vqyt_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpq4y6vqyt_test.go:54: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpq4y6vqyt_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpq4y6vqyt_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpq4y6vqyt_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpq4y6vqyt_test.go:54: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074036
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    return sumUpToIndex(s)\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp3awu96cf_test.go:25:12: undefined: sumUpToIndex

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074035
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    return 0\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp8403w3p5_test.go:48: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp8403w3p5_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp8403w3p5_test.go:48: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp8403w3p5_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp8403w3p5_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp8403w3p5_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp8403w3p5_test.go:48: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073848
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    ans := 0\n\
    \    for _, c := range s {\n        if c > '9' {\n            ans += int(c-'0')\n\
    \        } else {\n            ans += int(10+c-'0')\n        }\n    }\n    return\
    \ ans\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpx1p6uxrm_test.go:56: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpx1p6uxrm_test.go:56:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpx1p6uxrm_test.go:56: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpx1p6uxrm_test.go:56:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpx1p6uxrm_test.go:56: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpx1p6uxrm_test.go:56:\
    \ expected '%!s(int=151)', got '%!s(int=496)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpx1p6uxrm_test.go:56: expected '%!s(int=327)', got '%!s(int=800)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074036
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    // Start coding\
    \ here\n    // Write your code here\n    sumUpper := 0\n    for _, r := range\
    \ s {\n        if ('A' <= r && r <= 'Z') {\n            sumUpper += int(r) - int('A')\n\
    \        }\n    }\n    return sumUpper\n}\n</code>\nPlayground\n<|/ a dscore=1\
    \ |>\n<| a tags=recursion,algorithm,go dscore=1 |>\nYou can do it using only recursion\
    \ and basic functions:\n\nSplit the string into its lower and upper case\nFind\
    \ the sum of all the lower case characters recursively\nAdd the sum of lower case\
    \ characters\n\n<code>\npackage main\n\nimport (\n    \"fmt\"\n    \"strings\"\
    \n)\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmp4w3h35qs_test.go:35:1: expected declaration, found ''<''

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074035
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    ch := 0\n    for _, r := range s {\n        if r == 'A' || r == 'a' {\n \
    \           sum += 48\n        } else if r == 'B' || r == 'b' {\n            sum\
    \ += 49\n        } else if r == 'C' || r == 'c' {\n            sum += 50\n   \
    \     } else if r == 'D' || r == 'd' {\n            sum += 51\n        } else\
    \ if r == 'E' || r == 'e' {\n            sum += 52\n        } else if r == 'F'\
    \ || r == 'f' {\n            sum += 53\n        } else if r == 'G' || r == 'g'\
    \ {\n            sum += 54\n        } else if r == 'H' || r == 'h' {\n       \
    \     sum += 55\n        } else if r == 'I' || r == 'i' {\n            sum +=\
    \ 56\n        } else if r == 'J' || r == 'j' {\n            sum += 57\n      \
    \  } else if r == 'K' || r == 'k' {\n            sum += 58\n        } else if\
    \ r == 'L' || r == 'l' {\n            sum += 59\n        } else if r == 'M' ||\
    \ r == 'm' {\n            sum += 60\n        } else if r == 'N' || r == 'n' {\n\
    \            sum += 61\n        } else if r == 'O' || r == 'o' {\n           \
    \ sum += 62\n        } else if r == 'P' || r == 'p' {\n            sum += 63\n\
    \        } else if r == 'Q' || r == 'q' {\n            sum += 64\n        } else\
    \ if r == 'R' || r == 'r' {\n            sum += 65\n        } else if r == 'S'\
    \ || r == 's' {\n            sum += 66\n        } else if r == 'T' || r == 't'\
    \ {\n            sum += 67\n        } else if r == 'U' || r == 'u' {\n       \
    \     sum += 68\n        } else if r == 'V' || r == 'v' {\n            sum +=\
    \ 69\n        } else if r == 'W' || r == 'w' {\n            sum += 70\n      \
    \  } else if r == 'X' || r == 'x' {\n            sum += 71\n        } else if\
    \ r == 'Y' || r == 'y' {\n            sum += 72\n        } else if r == 'Z' ||\
    \ r == 'z' {\n            sum += 73\n        }\n    }\n    return sum\n}\nfunc\
    \ TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpkmnszza2_test.go:26:5: ch declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074035
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum =\
    \ 0\n    for _, i := range s {\n        if i > 48 && i < 58 {\n            sum\
    \ += int(i - 48)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T)\
    \ {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpyzzwitsh_test.go:54: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpyzzwitsh_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpyzzwitsh_test.go:54: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpyzzwitsh_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpyzzwitsh_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpyzzwitsh_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpyzzwitsh_test.go:54: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074036
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum = 0\n\
    \    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum\
    \ += int(c - 'A' + 10)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpu4n_p3co_test.go:25:5: undefined: sum

    /tmp/tmpu4n_p3co_test.go:28:13: undefined: sum

    /tmp/tmpu4n_p3co_test.go:31:12: undefined: sum

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074035
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    // Return\
    \ the sum of all of the digits of every character in the string\n    result :=\
    \ 0\n    digitCount := 0\n    for _, char := range s {\n        if char >= '0'\
    \ && char <= '9' {\n            result += int(char) - '0'\n            digitCount++\n\
    \        }\n    }\n    if digitCount > 0 {\n        result = result / digitCount\n\
    \    }\n    return result\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpjnjfj88t_test.go:60: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpjnjfj88t_test.go:60:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpjnjfj88t_test.go:60: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpjnjfj88t_test.go:60:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpjnjfj88t_test.go:60: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpjnjfj88t_test.go:60:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpjnjfj88t_test.go:60: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074036
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\
    \ = 0\n    for _, char := range s {\n        if char > 'z' {\n            sum\
    \ -= 26\n        }\n        sum += int(char)\n    }\n    return sum\n}\n</code>\n\
    <|/ a tags=go |>\n<| c |>\nIt would help to add some explanation. Just dumping\
    \ code on SO is not a good idea.\n<|/ c |>\n<| c |>\nHow about `fmt.Sprintf(\"\
    %+v\", digitSum(\"aAaaaXa\"))`?\n<|/ c |>\n<| c |>\nWhy not just `func digitSum(s\
    \ string) int { return len(strings.Map(func(r rune) int { if r > 'z' { return\
    \ r-26 }; return int(r) }, s)) }`?\n<|/ c |>\n<| a dscore=0 tags=go |>\nI created\
    \ a package based on this answer:\n<code>\npackage main\n\nimport \"fmt\"\nimport\
    \ \"strings\"\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpyx_w7m_q_test.go:34:1: expected declaration, found ''<''

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074035
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum =\
    \ 0\n    for _, char := range s {\n        sum += int(char - 'A' + 1)\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpcd28llw9_test.go:52: expected '%!s(int=131)', got '%!s(int=70)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpcd28llw9_test.go:52:\
    \ expected '%!s(int=67)', got '%!s(int=141)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpcd28llw9_test.go:52: expected '%!s(int=69)', got '%!s(int=217)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpcd28llw9_test.go:52:\
    \ expected '%!s(int=131)', got '%!s(int=235)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpcd28llw9_test.go:52: expected '%!s(int=153)', got '%!s(int=190)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpcd28llw9_test.go:52:\
    \ expected '%!s(int=151)', got '%!s(int=258)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpcd28llw9_test.go:52: expected '%!s(int=327)', got '%!s(int=482)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074036
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    if len(s)\
    \ == 0 {\n        return 0\n    }\n\n    return int(s[len(s)-1])\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmphqftnqkp_test.go:52: expected '%!s(int=131)', got '%!s(int=66)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmphqftnqkp_test.go:52:\
    \ expected '%!s(int=67)', got '%!s(int=100)'\n    --- FAIL: TestDigitsum/test_num__4\
    \ (0.00s)\n        tmphqftnqkp_test.go:52: expected '%!s(int=131)', got '%!s(int=100)'\n\
    \    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmphqftnqkp_test.go:52:\
    \ expected '%!s(int=153)', got '%!s(int=97)'\n    --- FAIL: TestDigitsum/test_num__6\
    \ (0.00s)\n        tmphqftnqkp_test.go:52: expected '%!s(int=151)', got '%!s(int=63)'\n\
    \    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmphqftnqkp_test.go:52:\
    \ expected '%!s(int=327)', got '%!s(int=116)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074036
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum =\
    \ 0\n    for _, char := range s {\n        if char >= '0' && char <= '9' {\n \
    \           sum += int(char-'0')\n        }\n    }\n    return sum\n}\n\nfunc\
    \ TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpca3g5ffh_test.go:54: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpca3g5ffh_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpca3g5ffh_test.go:54: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpca3g5ffh_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpca3g5ffh_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpca3g5ffh_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpca3g5ffh_test.go:54: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074036
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    return 0\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp8403w3p5_test.go:48: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp8403w3p5_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp8403w3p5_test.go:48: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp8403w3p5_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp8403w3p5_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp8403w3p5_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp8403w3p5_test.go:48: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073848
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum =\
    \ 0\n    for _, v := range s {\n        if v > 9 {\n            sum += int(v)\
    \ - 10\n        } else {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp62bmf3um_test.go:56: expected '%!s(int=131)', got '%!s(int=286)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp62bmf3um_test.go:56:\
    \ expected '%!s(int=67)', got '%!s(int=411)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp62bmf3um_test.go:56: expected '%!s(int=69)', got '%!s(int=541)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp62bmf3um_test.go:56:\
    \ expected '%!s(int=131)', got '%!s(int=613)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp62bmf3um_test.go:56: expected '%!s(int=153)', got '%!s(int=568)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp62bmf3um_test.go:56:\
    \ expected '%!s(int=151)', got '%!s(int=960)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp62bmf3um_test.go:56: expected '%!s(int=327)', got '%!s(int=1454)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074036
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var res =\
    \ 0\n    for _, r := range s {\n        if r == 'A' || r == 'a' {\n          \
    \  res += 26\n        } else {\n            res += int(r)\n        }\n    }\n\
    \    return res\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpftgpn8eo_test.go:56: expected '%!s(int=131)', got '%!s(int=216)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpftgpn8eo_test.go:56:\
    \ expected '%!s(int=67)', got '%!s(int=390)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpftgpn8eo_test.go:56: expected '%!s(int=69)', got '%!s(int=601)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpftgpn8eo_test.go:56:\
    \ expected '%!s(int=131)', got '%!s(int=644)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpftgpn8eo_test.go:56: expected '%!s(int=153)', got '%!s(int=244)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpftgpn8eo_test.go:56:\
    \ expected '%!s(int=151)', got '%!s(int=1019)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpftgpn8eo_test.go:56: expected '%!s(int=327)', got '%!s(int=1492)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074036
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var result\
    \ = int (0)\n    for _, char := range s {\n        if char >= 'A' && char <= 'Z'\
    \ {\n            result += char - 'A' + 1\n        }\n    }\n    return result\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmphwmpb3u__test.go:28:13: invalid operation: result += char - ''A'' + 1
    (mismatched types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074036
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\
    \ = 0\n    switch len(s) {\n    case   0:\n        return 0\n    case 1:\n   \
    \     sum *= int(s[0])\n        return sum\n    default:\n        for i := 0;\
    \ i < len(s); i++ {\n            sum += int(s[i])\n        }\n        return sum\n\
    \    }\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpq65x0g8n_test.go:60: expected '%!s(int=131)', got '%!s(int=326)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpq65x0g8n_test.go:60:\
    \ expected '%!s(int=67)', got '%!s(int=461)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpq65x0g8n_test.go:60: expected '%!s(int=69)', got '%!s(int=601)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpq65x0g8n_test.go:60:\
    \ expected '%!s(int=131)', got '%!s(int=683)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpq65x0g8n_test.go:60: expected '%!s(int=153)', got '%!s(int=638)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpq65x0g8n_test.go:60:\
    \ expected '%!s(int=151)', got '%!s(int=1090)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpq65x0g8n_test.go:60: expected '%!s(int=327)', got '%!s(int=1634)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074036
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var ret int\
    \ = 0\n    for _, r := range s {\n        if r >= 'A' && r <= 'Z' {\n        \
    \    ret += r-'A'\n        }\n    }\n    return ret\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp268hikoi_test.go:28:13: invalid operation: ret += r - ''A'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074036
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    result :=\
    \ 0\n    for _, v := range s {\n        if v >= '0' && v <= '9' {\n          \
    \  result += int(v-'0')\n        }\n    }\n    return result\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpe2liuw8c_test.go:54: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpe2liuw8c_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpe2liuw8c_test.go:54: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpe2liuw8c_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpe2liuw8c_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpe2liuw8c_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpe2liuw8c_test.go:54: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074036
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    s := String(s)\n\
    \    result := 0\n    for _, r := range s {\n        if r >= 'a' && r <= 'z' {\n\
    \            result -= int(c - 'a')\n        }\n    }\n    return result\n}\n\n\
    func TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp_t0bkoxx_test.go:25:7: no new variables on left side of :=

    /tmp/tmp_t0bkoxx_test.go:25:10: undefined: String

    /tmp/tmp_t0bkoxx_test.go:29:27: undefined: c

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074036
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum =\
    \ 0\n    for _, letter := range s {\n        if letter == 'A' {\n            sum\
    \ += 65\n        } else if letter == 'B' {\n            sum += 66\n        } else\
    \ if letter == 'C' {\n            sum += 67\n        } else if letter == 'D' {\n\
    \            sum += 68\n        } else if letter == 'E' {\n            sum +=\
    \ 69\n        } else if letter == 'F' {\n            sum += 70\n        } else\
    \ if letter == 'G' {\n            sum += 71\n        } else if letter == 'H' {\n\
    \            sum += 72\n        } else if letter == 'I' {\n            sum +=\
    \ 73\n        } else if letter == 'J' {\n            sum += 74\n        } else\
    \ if letter == 'K' {\n            sum += 75\n        } else if letter == 'L' {\n\
    \            sum += 76\n        } else if letter == 'M' {\n            sum +=\
    \ 77\n        } else if letter == 'N' {\n            sum += 78\n        } else\
    \ if letter == 'O' {\n            sum += 79\n        } else if letter == 'P' {\n\
    \            sum += 80\n        } else if letter == 'Q' {\n            sum +=\
    \ 81\n        } else if letter == 'R' {\n            sum += 82\n        } else\
    \ if letter == 'S' {\n            sum += 83\n        } else if letter == 'T' {\n\
    \            sum += 84\n        } else if letter == 'U' {\n            sum +=\
    \ 85\n        } else if letter == 'V' {\n            sum += 86\n        } else\
    \ if letter == 'W' {\n            sum += 87\n        } else if letter == 'X' {\n\
    \            sum += 88\n        } else if letter == 'Y' {\n            sum +=\
    \ 89\n        } else if letter == 'Z' {\n            sum += 90\n        } else\
    \ if letter == 'a' {\n            sum += 65\n        } else if letter == 'b' {\n\
    \            sum += 66\n        } else if letter == 'c' {\n            sum +=\
    \ 67\n        } else if letter == 'd' {\n            sum += 68\n        } else\
    \ if letter == 'e' {\n            sum += 69\n        } else if letter == 'f' {\n\
    \            sum += 70\n        } else if letter == 'g' {\n            sum +=\
    \ 71\n        } else if letter == 'h' {\n            sum += 72\n        } else\
    \ if letter == 'i' {\n            sum += 73\n        } else if letter == 'j' {\n\
    \            sum += 74\n        } else if letter == 'k' {\n            sum +=\
    \ 75\n        } else if letter == 'l' {\n            sum += 76\n        } else\
    \ if letter == 'm' {\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmp3dp7ic1f_test.go:105:6: expected ''('', found TestDigitsum

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074036
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum =\
    \ 0\n    for _, char := range s {\n        if char == 'A' || char == 'B' || char\
    \ == 'C' || char == 'D' || char == 'E' || char == 'F' || char == 'G' || char ==\
    \ 'H' || char == 'I' || char == 'J' || char == 'K' || char == 'L' || char == 'M'\
    \ || char == 'N' || char == 'O' || char == 'P' || char == 'Q' || char == 'R' ||\
    \ char == 'S' || char == 'T' || char == 'U' || char == 'V' || char == 'W' || char\
    \ == 'X' || char == 'Y' || char == 'Z' {\n            sum += int(char) - int('A')\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmppsl8_kag_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmppsl8_kag_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmppsl8_kag_test.go:54: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmppsl8_kag_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmppsl8_kag_test.go:54: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmppsl8_kag_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmppsl8_kag_test.go:54: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074037
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    // Write your\
    \ code here\n    var sum int = 0\n    for _, v := range s {\n        sum += int(v)\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmphhir15fq_test.go:53: expected '%!s(int=131)', got '%!s(int=326)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmphhir15fq_test.go:53:\
    \ expected '%!s(int=67)', got '%!s(int=461)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmphhir15fq_test.go:53: expected '%!s(int=69)', got '%!s(int=601)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmphhir15fq_test.go:53:\
    \ expected '%!s(int=131)', got '%!s(int=683)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmphhir15fq_test.go:53: expected '%!s(int=153)', got '%!s(int=638)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmphhir15fq_test.go:53:\
    \ expected '%!s(int=151)', got '%!s(int=1090)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmphhir15fq_test.go:53: expected '%!s(int=327)', got '%!s(int=1634)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074037
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n\
    \    for _, char := range s {\n        sum += int(char) - int('A') + 1\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp2cy1kgv2_test.go:52: expected '%!s(int=131)', got '%!s(int=70)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp2cy1kgv2_test.go:52:\
    \ expected '%!s(int=67)', got '%!s(int=141)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp2cy1kgv2_test.go:52: expected '%!s(int=69)', got '%!s(int=217)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp2cy1kgv2_test.go:52:\
    \ expected '%!s(int=131)', got '%!s(int=235)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp2cy1kgv2_test.go:52: expected '%!s(int=153)', got '%!s(int=190)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp2cy1kgv2_test.go:52:\
    \ expected '%!s(int=151)', got '%!s(int=258)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp2cy1kgv2_test.go:52: expected '%!s(int=327)', got '%!s(int=482)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074038
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum, i, sum\
    \ := 0, 0, 0\n    for _, v := range s {\n        sum += int(v)\n        i++\n\
    \        if i >= len(s) {\n            i = 0\n        }\n    }\n    return sum\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmppizjgmws_test.go:25:13: sum repeated on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074037
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, ch := range s {\n        sum += int(ch) - 48\n    }\n    return sum\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpipfazcpa_test.go:52: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpipfazcpa_test.go:52:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpipfazcpa_test.go:52: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpipfazcpa_test.go:52:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpipfazcpa_test.go:52: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpipfazcpa_test.go:52:\
    \ expected '%!s(int=151)', got '%!s(int=466)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpipfazcpa_test.go:52: expected '%!s(int=327)', got '%!s(int=770)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074038
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    max := len(s) - 1\n    for i := 0; i < max; i++ {\n        if s[i] > 0 {\n\
    \            sum += s[i] - 'A' + 1\n        }\n    }\n    return sum\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a dscore=0 tags=go |>\nHere's a solution that works with\
    \ ASCII:\n<code>\npackage main\n\nimport (\n    \"fmt\"\n)\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmp7fo_rtdz_test.go:34:1: expected declaration, found ''<''

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074037
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    if s == \"\
    \" {\n        return 0\n    }\n    total = 0\n    for _, c := range s {\n    \
    \    if c >= 'a' && c <= 'z' {\n            total += int(c-'a')\n        }\n \
    \   }\n    return total\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp68p4ce40_test.go:28:5: undefined: total

    /tmp/tmp68p4ce40_test.go:31:13: undefined: total

    /tmp/tmp68p4ce40_test.go:34:12: undefined: total

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074038
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    if s == \"\
    \" {\n        return 0\n    }\n    var sum = 0\n    for i := 0; i < len(s); i++\
    \ {\n        sum += int(s[i] - 'A')\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpwg8633h1_test.go:55: expected '%!s(int=131)', got '%!s(int=66)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpwg8633h1_test.go:55:\
    \ expected '%!s(int=67)', got '%!s(int=136)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpwg8633h1_test.go:55: expected '%!s(int=69)', got '%!s(int=211)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpwg8633h1_test.go:55:\
    \ expected '%!s(int=131)', got '%!s(int=228)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpwg8633h1_test.go:55: expected '%!s(int=153)', got '%!s(int=183)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpwg8633h1_test.go:55:\
    \ expected '%!s(int=151)', got '%!s(int=1269)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpwg8633h1_test.go:55: expected '%!s(int=327)', got '%!s(int=1232)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074038
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    t := 0\n \
    \   for _, c := range s {\n        t += int(c - 'A' + 1)\n    }\n    return t\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpcp_ivx5r_test.go:52: expected '%!s(int=131)', got '%!s(int=70)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpcp_ivx5r_test.go:52:\
    \ expected '%!s(int=67)', got '%!s(int=141)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpcp_ivx5r_test.go:52: expected '%!s(int=69)', got '%!s(int=217)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpcp_ivx5r_test.go:52:\
    \ expected '%!s(int=131)', got '%!s(int=235)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpcp_ivx5r_test.go:52: expected '%!s(int=153)', got '%!s(int=190)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpcp_ivx5r_test.go:52:\
    \ expected '%!s(int=151)', got '%!s(int=258)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpcp_ivx5r_test.go:52: expected '%!s(int=327)', got '%!s(int=482)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074038
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var result\
    \ int = 0\n    for _, char := range s {\n        if char > 'a' && char < 'z' {\n\
    \            result += char - 'a'\n        }\n    }\n    return result\n}\n\n\
    func TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmphvkj_qun_test.go:28:13: invalid operation: result += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074038
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    return int(fmt.Sprintf(\"\
    %d\", sumUpUppperChars(s)))\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpwrmn0__2_test.go:25:16: cannot convert fmt.Sprintf("%d", sumUpUppperChars(s))
    (value of type string) to type int

    /tmp/tmpwrmn0__2_test.go:25:34: undefined: sumUpUppperChars

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074038
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var totalDigit\
    \ int = 0\n    for _, char := range s {\n        if char >= 'A' && char <= 'Z'\
    \ {\n            totalDigit += int(char - 'A' + 10)\n        } else {\n      \
    \      totalDigit += int(char - '0')\n        }\n    }\n    return totalDigit\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmphfo3ql0q_test.go:56: expected '%!s(int=131)', got '%!s(int=120)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmphfo3ql0q_test.go:56:\
    \ expected '%!s(int=67)', got '%!s(int=214)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmphfo3ql0q_test.go:56: expected '%!s(int=69)', got '%!s(int=306)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmphfo3ql0q_test.go:56:\
    \ expected '%!s(int=131)', got '%!s(int=333)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmphfo3ql0q_test.go:56: expected '%!s(int=153)', got '%!s(int=288)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmphfo3ql0q_test.go:56:\
    \ expected '%!s(int=151)', got '%!s(int=452)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmphfo3ql0q_test.go:56: expected '%!s(int=327)', got '%!s(int=742)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074038
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var result\
    \ int = 0\n    for _, char := range s {\n        result += int(char)\n    }\n\
    \    return result\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp8r_awuu1_test.go:52: expected '%!s(int=131)', got '%!s(int=326)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp8r_awuu1_test.go:52:\
    \ expected '%!s(int=67)', got '%!s(int=461)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp8r_awuu1_test.go:52: expected '%!s(int=69)', got '%!s(int=601)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp8r_awuu1_test.go:52:\
    \ expected '%!s(int=131)', got '%!s(int=683)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp8r_awuu1_test.go:52: expected '%!s(int=153)', got '%!s(int=638)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp8r_awuu1_test.go:52:\
    \ expected '%!s(int=151)', got '%!s(int=1090)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp8r_awuu1_test.go:52: expected '%!s(int=327)', got '%!s(int=1634)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074038
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum, _ :=\
    \ 0, 0\n    for _, c := range s {\n        sum += int(c)\n    }\n    return sum\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp07ic7w5v_test.go:52: expected '%!s(int=131)', got '%!s(int=326)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp07ic7w5v_test.go:52:\
    \ expected '%!s(int=67)', got '%!s(int=461)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp07ic7w5v_test.go:52: expected '%!s(int=69)', got '%!s(int=601)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp07ic7w5v_test.go:52:\
    \ expected '%!s(int=131)', got '%!s(int=683)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp07ic7w5v_test.go:52: expected '%!s(int=153)', got '%!s(int=638)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp07ic7w5v_test.go:52:\
    \ expected '%!s(int=151)', got '%!s(int=1090)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp07ic7w5v_test.go:52: expected '%!s(int=327)', got '%!s(int=1634)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074038
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    n := 0\n \
    \   for _, char := range s {\n        n += int(char)\n    }\n    return n\n}\n\
    \nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp4s9v6a_9_test.go:52: expected '%!s(int=131)', got '%!s(int=326)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp4s9v6a_9_test.go:52:\
    \ expected '%!s(int=67)', got '%!s(int=461)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp4s9v6a_9_test.go:52: expected '%!s(int=69)', got '%!s(int=601)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp4s9v6a_9_test.go:52:\
    \ expected '%!s(int=131)', got '%!s(int=683)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp4s9v6a_9_test.go:52: expected '%!s(int=153)', got '%!s(int=638)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp4s9v6a_9_test.go:52:\
    \ expected '%!s(int=151)', got '%!s(int=1090)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp4s9v6a_9_test.go:52: expected '%!s(int=327)', got '%!s(int=1634)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074039
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    if len(s)\
    \ == 0 {\n        return 0\n    }\n    sum := 0\n    for i := 0; i < len(s); i++\
    \ {\n        if s[i] >= 'a' && s[i] <= 'z' {\n            sum += s[i] - 'a'\n\
    \        } else if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += s[i] - 'A'\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp9m4qk6e5_test.go:31:13: invalid operation: sum += s[i] - ''a'' (mismatched
    types int and byte)

    /tmp/tmp9m4qk6e5_test.go:33:13: invalid operation: sum += s[i] - ''A'' (mismatched
    types int and byte)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074038
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var result\
    \ int\n    sum, _ := strconv.Atoi(string(s[:1]))\n    for _, c := range s[1:]\
    \ {\n        sum += int(c)\n        result = sum % 10 + result\n    }\n    return\
    \ result\n}\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpbsiuszct_test.go:26:15: undefined: strconv

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074038
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum =\
    \ 0\n    for _, v := range s {\n        if v > 'z' {\n            return sum\n\
    \        }\n        sum += int(v)\n    }\n    return sum\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| a tags=go,string,recursion |>\nIt is a good idea to write a functional\
    \ program with immutable data - that is, data which doesn't change once it is\
    \ set.\nYou can do so by using the go keyword and by writing \"main\" as a function.\n\
    <code>\npackage main\n\nimport (\n    \"fmt\"\n)\n\nfunc TestDigitsum(t *testing.T)\
    \ {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmprs866z6o_test.go:34:1: expected declaration, found ''<''

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074038
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'A' && char <= 'Z' {\n     \
    \       sum += int(char) - 'A' + 1\n        }\n    }\n    return sum\n}\n\nfunc\
    \ TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpokmx1hh4_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpokmx1hh4_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpokmx1hh4_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpokmx1hh4_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpokmx1hh4_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpokmx1hh4_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpokmx1hh4_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074039
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum =\
    \ 0 \n    for _, char := range s {\n        sum += int(char)\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpfhi7yk6y_test.go:52: expected '%!s(int=131)', got '%!s(int=326)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpfhi7yk6y_test.go:52:\
    \ expected '%!s(int=67)', got '%!s(int=461)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpfhi7yk6y_test.go:52: expected '%!s(int=69)', got '%!s(int=601)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpfhi7yk6y_test.go:52:\
    \ expected '%!s(int=131)', got '%!s(int=683)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpfhi7yk6y_test.go:52: expected '%!s(int=153)', got '%!s(int=638)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpfhi7yk6y_test.go:52:\
    \ expected '%!s(int=151)', got '%!s(int=1090)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpfhi7yk6y_test.go:52: expected '%!s(int=327)', got '%!s(int=1634)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074039
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n            sum\
    \ += int(v - 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpzw7rrtco_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpzw7rrtco_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpzw7rrtco_test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpzw7rrtco_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpzw7rrtco_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpzw7rrtco_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpzw7rrtco_test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073878
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum =\
    \ 0\n    for _, v := range s {\n        if v >= '0' && v <= '9' {\n          \
    \  sum += int(v-'0')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpkklkk4oo_test.go:54: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpkklkk4oo_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpkklkk4oo_test.go:54: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpkklkk4oo_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpkklkk4oo_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpkklkk4oo_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpkklkk4oo_test.go:54: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074039
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    // Your code\
    \ here\n    if len(s) == 0 {\n        return 0\n    }\n    digitSum, i := 0, 0\n\
    \    for i < len(s) {\n        if s[i] == 'A' || s[i] == 'a' {\n            digitSum\
    \ += int(s[i+1])\n            i++\n        }\n        i++\n    }\n    return digitSum\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\npanic: runtime error: index out of range\
    \ [7] with length 7 [recovered]\n\tpanic: runtime error: index out of range [7]\
    \ with length 7\n\ngoroutine 34 [running]:\ntesting.tRunner.func1.2({0x513620,\
    \ 0xc0001d6000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513620, 0xc0001d6000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.digitSum(...)\n\t/tmp/tmp2l425l2u_test.go:32\n\
    command-line-arguments_test.TestDigitsum(0x0?)\n\t/tmp/tmp2l425l2u_test.go:52\
    \ +0x5ff\ntesting.tRunner(0xc0001991e0, 0x528f78)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074039
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    return 0\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp8403w3p5_test.go:48: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp8403w3p5_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp8403w3p5_test.go:48: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp8403w3p5_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp8403w3p5_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp8403w3p5_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp8403w3p5_test.go:48: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073848
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    n := 0\n \
    \   for _, v := range s {\n        if v > '9' {\n            n = n + 10\n    \
    \        n = n + int(v - '0')\n        } else {\n            n = n + int(v - '9')\n\
    \        }\n    }\n    return n\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp0pcwue66_test.go:57: expected '%!s(int=131)', got '%!s(int=174)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp0pcwue66_test.go:57:\
    \ expected '%!s(int=67)', got '%!s(int=271)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp0pcwue66_test.go:57: expected '%!s(int=69)', got '%!s(int=373)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp0pcwue66_test.go:57:\
    \ expected '%!s(int=131)', got '%!s(int=417)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp0pcwue66_test.go:57: expected '%!s(int=153)', got '%!s(int=372)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp0pcwue66_test.go:57:\
    \ expected '%!s(int=151)', got '%!s(int=539)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp0pcwue66_test.go:57: expected '%!s(int=327)', got '%!s(int=893)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074039
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sumUpper :=\
    \ 0\n    for _, c := range s {\n        if ('A' <= c && c <= 'Z') {\n        \
    \    sumUpper += int(c - 'A' + 1)\n        }\n    }\n    return sumUpper\n}\n\n\
    func TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp6g_m30kx_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp6g_m30kx_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp6g_m30kx_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp6g_m30kx_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp6g_m30kx_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp6g_m30kx_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp6g_m30kx_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074039
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for i := 0; i < len(s); i++ {\n        if s[i] > 9 {\n            sum +=\
    \ s[i] - 9\n        } else {\n            sum += s[i]\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpc4556_jq_test.go:28:13: invalid operation: sum += s[i] - 9 (mismatched
    types int and byte)

    /tmp/tmpc4556_jq_test.go:30:13: invalid operation: sum += s[i] (mismatched types
    int and byte)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074039
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n\
    \    for _, character := range s {\n        if character >= 'A' && character <=\
    \ 'Z' {\n            sum += int(character - 'A' + 10)\n        } else {\n    \
    \        sum += character\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmporpibci0_test.go:30:13: invalid operation: sum += character (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074039
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum, length\
    \ := 0, 0\n    for _, r := range s {\n        sum += int(unicode.ToUpper(r))\n\
    \        length++\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T)\
    \ {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpl34a2z3l_test.go:27:20: undefined: unicode

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074039
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum =\
    \ 0\n    for _, char := range s {\n        if char >= '0' && char <= '9' {\n \
    \           sum += int(char - '0')\n        }\n    }\n    return sum\n}\n\nfunc\
    \ TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp4g6bjctp_test.go:54: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp4g6bjctp_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp4g6bjctp_test.go:54: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp4g6bjctp_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp4g6bjctp_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp4g6bjctp_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp4g6bjctp_test.go:54: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073878
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    if len(s)\
    \ == 0 {\n        return 0\n    }\n    var sum = 0\n    for _, c := range s {\n\
    \        sum += int(unicode.ToLower(c)) // Convert to lowercase first\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpdcjvaw3v_test.go:30:20: undefined: unicode

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074040
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, c := range s {\n        if 'a' <= c && c <= 'z' {\n            sum\
    \ += int(c-'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T)\
    \ {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpe4efw1r6_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpe4efw1r6_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpe4efw1r6_test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpe4efw1r6_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpe4efw1r6_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpe4efw1r6_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpe4efw1r6_test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074040
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    ret := 0\n\
    \    for _, r := range s {\n        if r >= 'a' && r <= 'z' {\n            ret\
    \ += (r - 'a')\n        }\n    }\n    return ret\n}\n\nfunc TestDigitsum(t *testing.T)\
    \ {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpbkixnqxw_test.go:28:13: invalid operation: ret += (r - ''a'') (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074040
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, r := range s {\n        sum = (sum + int(r))\n    }\n    return sum\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp3a6p0ycc_test.go:52: expected '%!s(int=131)', got '%!s(int=326)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp3a6p0ycc_test.go:52:\
    \ expected '%!s(int=67)', got '%!s(int=461)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp3a6p0ycc_test.go:52: expected '%!s(int=69)', got '%!s(int=601)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp3a6p0ycc_test.go:52:\
    \ expected '%!s(int=131)', got '%!s(int=683)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp3a6p0ycc_test.go:52: expected '%!s(int=153)', got '%!s(int=638)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp3a6p0ycc_test.go:52:\
    \ expected '%!s(int=151)', got '%!s(int=1090)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp3a6p0ycc_test.go:52: expected '%!s(int=327)', got '%!s(int=1634)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074040
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    r := 0\n \
    \   for _, i := range s {\n        if i > 32 {\n            r ^= i\n        }\n\
    \    }\n    return r\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpq_lu743__test.go:28:13: invalid operation: r ^= i (mismatched types int
    and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074040
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\
    \ = 0\n    for _, r := range s {\n        if r >= 'a' && r <= 'z' {\n        \
    \    sum += int(r) - int('A')\n        } else {\n            sum += int(r) - int(0)\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmptvxh_k4k_test.go:56: expected '%!s(int=131)', got '%!s(int=196)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmptvxh_k4k_test.go:56:\
    \ expected '%!s(int=67)', got '%!s(int=201)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmptvxh_k4k_test.go:56: expected '%!s(int=69)', got '%!s(int=276)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmptvxh_k4k_test.go:56:\
    \ expected '%!s(int=131)', got '%!s(int=358)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmptvxh_k4k_test.go:56: expected '%!s(int=153)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmptvxh_k4k_test.go:56:\
    \ expected '%!s(int=151)', got '%!s(int=635)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmptvxh_k4k_test.go:56: expected '%!s(int=327)', got '%!s(int=919)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074040
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    if s == \"\
    \" {\n        return 0\n    }\n\n    result := 0\n    for _, char := range s {\n\
    \        if char >= 'a' && char <= 'z' {\n            result += char - 'a' + 1\n\
    \        }\n    }\n\n    return result\n}\n\nfunc TestDigitsum(t *testing.T) {\n\
    \  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"\
    ), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n    \
    \ { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpxakus9se_test.go:32:13: invalid operation: result += char - ''a'' + 1
    (mismatched types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074040
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var total\
    \ = 0\n    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n        \
    \    total += int(c - 'a')\n        }\n    }\n    return total\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp__hvy92p_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp__hvy92p_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp__hvy92p_test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp__hvy92p_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp__hvy92p_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp__hvy92p_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp__hvy92p_test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074041
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum =\
    \ 0\n    for _, r := range s {\n        if r >= '0' && r <= '9' {\n          \
    \  sum += int(r-'0')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpzrw7ublp_test.go:54: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpzrw7ublp_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpzrw7ublp_test.go:54: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpzrw7ublp_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpzrw7ublp_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpzrw7ublp_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpzrw7ublp_test.go:54: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074041
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    lowercase := false\n\n    for _, letter := range s {\n        if letter ==\
    \ 'a' || letter == 'A' {\n            sum += 32\n            lowercase = true\n\
    \        } else {\n            if lowercase {\n                sum += int(letter\
    \ - 'a')\n            } else {\n                sum += int(letter - 'A')\n   \
    \         }\n            lowercase = false\n        }\n    }\n\n    return sum\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpwpkuvxew_test.go:65: expected '%!s(int=131)', got '%!s(int=34)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpwpkuvxew_test.go:65:\
    \ expected '%!s(int=67)', got '%!s(int=104)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpwpkuvxew_test.go:65: expected '%!s(int=69)', got '%!s(int=211)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpwpkuvxew_test.go:65:\
    \ expected '%!s(int=131)', got '%!s(int=228)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpwpkuvxew_test.go:65: expected '%!s(int=153)', got '%!s(int=183)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpwpkuvxew_test.go:65:\
    \ expected '%!s(int=151)', got '%!s(int=213)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpwpkuvxew_test.go:65: expected '%!s(int=327)', got '%!s(int=400)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074041
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum =\
    \ 0\n    for i := 0; i < len(s); i++ {\n        sum += int(s[i]) - 'A' + 1\n \
    \   }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp70gh0t4b_test.go:52: expected '%!s(int=131)', got '%!s(int=70)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp70gh0t4b_test.go:52:\
    \ expected '%!s(int=67)', got '%!s(int=141)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp70gh0t4b_test.go:52: expected '%!s(int=69)', got '%!s(int=217)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp70gh0t4b_test.go:52:\
    \ expected '%!s(int=131)', got '%!s(int=235)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp70gh0t4b_test.go:52: expected '%!s(int=153)', got '%!s(int=190)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp70gh0t4b_test.go:52:\
    \ expected '%!s(int=151)', got '%!s(int=258)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp70gh0t4b_test.go:52: expected '%!s(int=327)', got '%!s(int=482)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074041
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum =\
    \ 0\n    for _, r := range s {\n        if r <= '9' && r >= '0' {\n          \
    \  sum += int(r-'0')\n        } else {\n            sum += 10\n        }\n   \
    \ }\n    return sum\n}\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpnctndovm_test.go:55: expected '%!s(int=131)', got '%!s(int=40)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpnctndovm_test.go:55:\
    \ expected '%!s(int=67)', got '%!s(int=50)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpnctndovm_test.go:55: expected '%!s(int=69)', got '%!s(int=60)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpnctndovm_test.go:55:\
    \ expected '%!s(int=131)', got '%!s(int=70)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpnctndovm_test.go:55: expected '%!s(int=153)', got '%!s(int=70)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpnctndovm_test.go:55:\
    \ expected '%!s(int=151)', got '%!s(int=130)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpnctndovm_test.go:55: expected '%!s(int=327)', got '%!s(int=180)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074041
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    result :=\
    \ 0\n    for _, char := range s {\n        if char == 'A' || char == 'a' {\n \
    \           result += char - 'A'\n        }\n    }\n    return result\n}\n\nfunc\
    \ TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpna0nksre_test.go:28:13: invalid operation: result += char - ''A'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074041
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n\
    \    for _, char := range s {\n        if char >= '0' && char <= '9' {\n     \
    \       sum += int(char) - 48\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpz7ratxuy_test.go:54: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpz7ratxuy_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpz7ratxuy_test.go:54: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpz7ratxuy_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpz7ratxuy_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpz7ratxuy_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpz7ratxuy_test.go:54: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074041
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, r := range s {\n        if r < 'A' || r > 'Z' {\n            return\
    \ sum\n        }\n        sum += int(r-'A')\n    }\n    return sum\n}\n\nfunc\
    \ TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpn_hpe7jt_test.go:55: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpn_hpe7jt_test.go:55:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpn_hpe7jt_test.go:55: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpn_hpe7jt_test.go:55:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpn_hpe7jt_test.go:55: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpn_hpe7jt_test.go:55:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpn_hpe7jt_test.go:55: expected '%!s(int=327)', got '%!s(int=24)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074042
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    n := 0\n \
    \   for _, i := range s {\n        if i < 65 {\n            n += int(i)\n    \
    \    } else {\n            n += 9\n        }\n    }\n    return n\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp3nqfr64l_test.go:56: expected '%!s(int=131)', got '%!s(int=36)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp3nqfr64l_test.go:56:\
    \ expected '%!s(int=67)', got '%!s(int=45)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp3nqfr64l_test.go:56: expected '%!s(int=69)', got '%!s(int=54)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp3nqfr64l_test.go:56:\
    \ expected '%!s(int=131)', got '%!s(int=63)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp3nqfr64l_test.go:56: expected '%!s(int=153)', got '%!s(int=63)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp3nqfr64l_test.go:56:\
    \ expected '%!s(int=151)', got '%!s(int=240)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp3nqfr64l_test.go:56: expected '%!s(int=327)', got '%!s(int=231)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074041
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char == 'A' {\n            sum += 65\n\
    \        } else if char == 'a' {\n            sum += 97\n        } else if char\
    \ == '0' {\n            sum += 48\n        } else {\n            sum += int(char)\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpnk8gv7ww_test.go:60: expected '%!s(int=131)', got '%!s(int=326)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpnk8gv7ww_test.go:60:\
    \ expected '%!s(int=67)', got '%!s(int=461)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpnk8gv7ww_test.go:60: expected '%!s(int=69)', got '%!s(int=601)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpnk8gv7ww_test.go:60:\
    \ expected '%!s(int=131)', got '%!s(int=683)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpnk8gv7ww_test.go:60: expected '%!s(int=153)', got '%!s(int=638)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpnk8gv7ww_test.go:60:\
    \ expected '%!s(int=151)', got '%!s(int=1090)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpnk8gv7ww_test.go:60: expected '%!s(int=327)', got '%!s(int=1634)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074042
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum =\
    \ 0\n    for _, s := range s {\n        sum += int(s)\n    }\n    return sum\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmphzj7y8g__test.go:52: expected '%!s(int=131)', got '%!s(int=326)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmphzj7y8g__test.go:52:\
    \ expected '%!s(int=67)', got '%!s(int=461)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmphzj7y8g__test.go:52: expected '%!s(int=69)', got '%!s(int=601)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmphzj7y8g__test.go:52:\
    \ expected '%!s(int=131)', got '%!s(int=683)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmphzj7y8g__test.go:52: expected '%!s(int=153)', got '%!s(int=638)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmphzj7y8g__test.go:52:\
    \ expected '%!s(int=151)', got '%!s(int=1090)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmphzj7y8g__test.go:52: expected '%!s(int=327)', got '%!s(int=1634)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074042
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    // Write code\
    \ here\n    return 0\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp7lnkg_pe_test.go:49: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp7lnkg_pe_test.go:49:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp7lnkg_pe_test.go:49: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp7lnkg_pe_test.go:49:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp7lnkg_pe_test.go:49: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp7lnkg_pe_test.go:49:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp7lnkg_pe_test.go:49: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073848
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    if len(s)\
    \ < 1 {\n        return 0\n    }\n    total := 0\n    for _, i := range s {\n\
    \        total += int(i)\n    }\n    return total\n}\n\nfunc TestDigitsum(t *testing.T)\
    \ {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpq2mk0afb_test.go:55: expected '%!s(int=131)', got '%!s(int=326)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpq2mk0afb_test.go:55:\
    \ expected '%!s(int=67)', got '%!s(int=461)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpq2mk0afb_test.go:55: expected '%!s(int=69)', got '%!s(int=601)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpq2mk0afb_test.go:55:\
    \ expected '%!s(int=131)', got '%!s(int=683)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpq2mk0afb_test.go:55: expected '%!s(int=153)', got '%!s(int=638)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpq2mk0afb_test.go:55:\
    \ expected '%!s(int=151)', got '%!s(int=1090)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpq2mk0afb_test.go:55: expected '%!s(int=327)', got '%!s(int=1634)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074042
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    if len(s)\
    \ == 0 {\n        return 0\n    }\n\n    sum = 0\n    i := 0\n\n    for ; i <\
    \ len(s); i++ {\n        sum += int(s[i])\n    }\n\n    return sum\n}\n\nfunc\
    \ TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp967vjq4x_test.go:29:5: undefined: sum

    /tmp/tmp967vjq4x_test.go:33:9: undefined: sum

    /tmp/tmp967vjq4x_test.go:36:12: undefined: sum

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074041
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n\
    \    for _, char := range s {\n        if char > '9' {\n            sum -= int(char-32)\n\
    \        } else {\n            sum += int(char-48)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpi1ex58gx_test.go:56: expected '%!s(int=131)', got '%!s(int=-198)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpi1ex58gx_test.go:56:\
    \ expected '%!s(int=67)', got '%!s(int=-301)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpi1ex58gx_test.go:56: expected '%!s(int=69)', got '%!s(int=-409)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpi1ex58gx_test.go:56:\
    \ expected '%!s(int=131)', got '%!s(int=-459)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpi1ex58gx_test.go:56: expected '%!s(int=153)', got '%!s(int=-414)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpi1ex58gx_test.go:56:\
    \ expected '%!s(int=151)', got '%!s(int=-722)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpi1ex58gx_test.go:56: expected '%!s(int=327)', got '%!s(int=-1106)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074042
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for i := 0; i < len(s); i++ {\n        sum += int(s[i])\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpwvfty1tg_test.go:52: expected '%!s(int=131)', got '%!s(int=326)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpwvfty1tg_test.go:52:\
    \ expected '%!s(int=67)', got '%!s(int=461)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpwvfty1tg_test.go:52: expected '%!s(int=69)', got '%!s(int=601)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpwvfty1tg_test.go:52:\
    \ expected '%!s(int=131)', got '%!s(int=683)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpwvfty1tg_test.go:52: expected '%!s(int=153)', got '%!s(int=638)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpwvfty1tg_test.go:52:\
    \ expected '%!s(int=151)', got '%!s(int=1090)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpwvfty1tg_test.go:52: expected '%!s(int=327)', got '%!s(int=1634)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074042
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    ans := 0\n\
    \    for _, r := range s {\n        if r >= 'A' && r <= 'Z' {\n            ans\
    \ = ans + int(r-'A')\n        }\n    }\n    return ans\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmph_7vkya9_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmph_7vkya9_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmph_7vkya9_test.go:54: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmph_7vkya9_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmph_7vkya9_test.go:54: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmph_7vkya9_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmph_7vkya9_test.go:54: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074042
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    intSum, length\
    \ := 0, 0\n    for _, c := range s {\n        if c > 'a' || c < 'A' {\n      \
    \      continue\n        }\n        intSum += int(c - 'a')\n    }\n    return\
    \ intSum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpzlabzmfw_test.go:25:13: length declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074042
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    s := s[:len(s)-1]\
    \ // removes trailing 'a'\n    sum := 0\n    for _, d := range s {\n        if\
    \ d > '9' {\n            sum += int(d) - '9'\n        } else {\n            sum\
    \ += int(d)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T)\
    \ {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpu58gdd3a_test.go:25:7: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074042
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum = 0\n\
    \    for i := 0; i < len(s); i++ {\n        sum += int(s[i] - 'A' + 10)\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp2v5qf3g8_test.go:25:5: undefined: sum

    /tmp/tmp2v5qf3g8_test.go:27:9: undefined: sum

    /tmp/tmp2v5qf3g8_test.go:29:12: undefined: sum

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074042
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    n := 0\n \
    \   for _, c := range s {\n        n += int(c)\n    }\n    return n\n}\n\nfunc\
    \ TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp_sy1ewwr_test.go:52: expected '%!s(int=131)', got '%!s(int=326)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp_sy1ewwr_test.go:52:\
    \ expected '%!s(int=67)', got '%!s(int=461)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp_sy1ewwr_test.go:52: expected '%!s(int=69)', got '%!s(int=601)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp_sy1ewwr_test.go:52:\
    \ expected '%!s(int=131)', got '%!s(int=683)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp_sy1ewwr_test.go:52: expected '%!s(int=153)', got '%!s(int=638)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp_sy1ewwr_test.go:52:\
    \ expected '%!s(int=151)', got '%!s(int=1090)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp_sy1ewwr_test.go:52: expected '%!s(int=327)', got '%!s(int=1634)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074043
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    // ...\n}\n\
    func TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmptz4kd32s_test.go:26:1: missing return

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074043
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    // Your code\
    \ here\n    // return 0\n    var sum int = 0\n    for _, v := range s {\n    \
    \    if v >= 65 && v < 90 {\n            sum += int(v - 64)\n        } else {\n\
    \            sum += 0\n        }\n    }\n    return sum\n}\n</code>\n<|/ a tags=go\
    \ dscore=2 |>\n<| a dscore=1 |>\nThis may help you or give some ideas (though\
    \ this one isn't the most efficient, since it uses loops and functions)\n<code>\n\
    package main\n\nimport (\n    \"fmt\"\n    \"unicode/utf8\"\n)\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpkrkhgvvz_test.go:37:1: expected declaration, found ''<''

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074042
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n\
    \    for _, v := range s {\n        if v >= 'A' && v <= 'Z' {\n            sum\
    \ += int(v) - int('A')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp_ckoe52v_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp_ckoe52v_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp_ckoe52v_test.go:54: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp_ckoe52v_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp_ckoe52v_test.go:54: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp_ckoe52v_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp_ckoe52v_test.go:54: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074043
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'A' && char <= 'Z' {\n     \
    \       sum += char - 'A' + 1\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp0calbgq7_test.go:28:13: invalid operation: sum += char - ''A'' + 1 (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073878
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    // Your code\
    \ here\n\n    intStr := make([]int, len(s))\n    for idx, char := range s {\n\
    \        intStr[idx] = int(char)\n    }\n    return sumDigits(intStr)\n}\n\nfunc\
    \ TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpoyx933vc_test.go:31:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074043
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, v := range s {\n        sum += int(v)\n    }\n    return sum\n}\n\n\
    func TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpc334j680_test.go:52: expected '%!s(int=131)', got '%!s(int=326)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpc334j680_test.go:52:\
    \ expected '%!s(int=67)', got '%!s(int=461)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpc334j680_test.go:52: expected '%!s(int=69)', got '%!s(int=601)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpc334j680_test.go:52:\
    \ expected '%!s(int=131)', got '%!s(int=683)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpc334j680_test.go:52: expected '%!s(int=153)', got '%!s(int=638)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpc334j680_test.go:52:\
    \ expected '%!s(int=151)', got '%!s(int=1090)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpc334j680_test.go:52: expected '%!s(int=327)', got '%!s(int=1634)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074034
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    // base case\n\
    \    if len(s) == 0 {\n        return 0\n    }\n\n    // recurse case\n    sum\
    \ := 0\n    first := s[0]\n\n    for i := 0; i < len(s); i++ {\n        c := s[i]\n\
    \        if c >= first {\n            sum += int(c - first)\n        }\n     \
    \   first = s[i]\n    }\n\n    return sum\n}\n</code>\n<|/ a dscore=1 tags=go,string,ascii,function\
    \ |>\n<| a tags=go,string,ascii,function |>\n<code>\npackage main\n\nimport (\n\
    \    \"fmt\"\n    \"unicode/utf8\"\n)\n\nfunc TestDigitsum(t *testing.T) {\n \
    \ candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"\
    ), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n    \
    \ { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpx9_dds2a_test.go:44:1: expected declaration, found ''<''

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074042
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    // Write code\
    \ here\n    return 0\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp7lnkg_pe_test.go:49: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp7lnkg_pe_test.go:49:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp7lnkg_pe_test.go:49: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp7lnkg_pe_test.go:49:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp7lnkg_pe_test.go:49: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp7lnkg_pe_test.go:49:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp7lnkg_pe_test.go:49: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073848
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, r := range s {\n        sum += int(r)\n    }\n    return sum\n}\n\n\
    func TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpq_u70gwn_test.go:52: expected '%!s(int=131)', got '%!s(int=326)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpq_u70gwn_test.go:52:\
    \ expected '%!s(int=67)', got '%!s(int=461)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpq_u70gwn_test.go:52: expected '%!s(int=69)', got '%!s(int=601)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpq_u70gwn_test.go:52:\
    \ expected '%!s(int=131)', got '%!s(int=683)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpq_u70gwn_test.go:52: expected '%!s(int=153)', got '%!s(int=638)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpq_u70gwn_test.go:52:\
    \ expected '%!s(int=151)', got '%!s(int=1090)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpq_u70gwn_test.go:52: expected '%!s(int=327)', got '%!s(int=1634)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073839
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    return int(strings.Map(strconv.ParseUint,\
    \ s, nil))\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpnppwjte9_test.go:25:16: undefined: strings

    /tmp/tmpnppwjte9_test.go:25:28: undefined: strconv

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074043
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum =\
    \ 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == s[i] {\n          \
    \  sum += int(s[i] - '0')\n        } else {\n            sum += 0\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp4dw29lgc_test.go:56: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp4dw29lgc_test.go:56:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp4dw29lgc_test.go:56: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp4dw29lgc_test.go:56:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp4dw29lgc_test.go:56: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp4dw29lgc_test.go:56:\
    \ expected '%!s(int=151)', got '%!s(int=1234)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp4dw29lgc_test.go:56: expected '%!s(int=327)', got '%!s(int=1538)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074044
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    result :=\
    \ 0\n    str := make([]rune, len(s))\n    for idx, val := range str {\n      \
    \  str[idx] = rune(val)\n    }\n    for _, val := range str {\n        result\
    \ = result + val\n    }\n    return result\n}\n\nfunc TestDigitsum(t *testing.T)\
    \ {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp3u6hh5cx_test.go:31:18: invalid operation: result + val (mismatched types
    int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074043
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    return digitSumSum(s[:len(s)-1])\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp2zluqvgj_test.go:25:12: undefined: digitSumSum

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074043
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum\
    \ += int(c - 'A') + 1\n        }\n    }\n    return sum\n}\n</code>\n<|/ a tags=go\
    \ |>\n<| a tags=go |>\nThe package golang.org/x/text/transform/strings contains\
    \ methods for converting strings to upper case, lower case, title, and trim. \n\
    Here's an example of how to convert the first letter of each word to upper case:\n\
    <code>\nimport \"golang.org/x/text/transform/strings\"\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpzn10fo18_test.go:33:1: expected declaration, found ''<''

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074042
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    return len(s)\
    \ * 10 + len(strings.Split(s, \"a\")) - len(strings.Split(s, \"A\"))\n}\n\nfunc\
    \ TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp9zxyhjsd_test.go:25:30: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074044
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, c := range s {\n        if ('A' <= c && c <= 'Z') {\n            sum\
    \ += int(c-'A')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T)\
    \ {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpe8ji3set_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpe8ji3set_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpe8ji3set_test.go:54: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpe8ji3set_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpe8ji3set_test.go:54: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpe8ji3set_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpe8ji3set_test.go:54: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074044
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var result\
    \ int = 0\n    for _, v := range s {\n        result = result + int(v)\n    }\n\
    \    return result\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpv2s6t6x0_test.go:52: expected '%!s(int=131)', got '%!s(int=326)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpv2s6t6x0_test.go:52:\
    \ expected '%!s(int=67)', got '%!s(int=461)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpv2s6t6x0_test.go:52: expected '%!s(int=69)', got '%!s(int=601)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpv2s6t6x0_test.go:52:\
    \ expected '%!s(int=131)', got '%!s(int=683)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpv2s6t6x0_test.go:52: expected '%!s(int=153)', got '%!s(int=638)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpv2s6t6x0_test.go:52:\
    \ expected '%!s(int=151)', got '%!s(int=1090)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpv2s6t6x0_test.go:52: expected '%!s(int=327)', got '%!s(int=1634)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074044
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    result :=\
    \ 0\n    for _, i := range s {\n        if i > 'a' && i < 'z' {\n            result\
    \ += int(i - 'a')\n        }\n    }\n    return result\n}\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp7pkclv3e_test.go:53: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp7pkclv3e_test.go:53:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp7pkclv3e_test.go:53: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp7pkclv3e_test.go:53:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp7pkclv3e_test.go:53: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp7pkclv3e_test.go:53:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp7pkclv3e_test.go:53: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074044
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    return 0\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp8403w3p5_test.go:48: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp8403w3p5_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp8403w3p5_test.go:48: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp8403w3p5_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp8403w3p5_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp8403w3p5_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp8403w3p5_test.go:48: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073848
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    r := 0\n \
    \   for _, s := range s {\n        if s > '9' {\n            s += 'A' - '9'\n\
    \        }\n        r += int(s)\n    }\n    return r\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpobtqdht0_test.go:55: expected '%!s(int=131)', got '%!s(int=358)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpobtqdht0_test.go:55:\
    \ expected '%!s(int=67)', got '%!s(int=501)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpobtqdht0_test.go:55: expected '%!s(int=69)', got '%!s(int=649)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpobtqdht0_test.go:55:\
    \ expected '%!s(int=131)', got '%!s(int=739)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpobtqdht0_test.go:55: expected '%!s(int=153)', got '%!s(int=694)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpobtqdht0_test.go:55:\
    \ expected '%!s(int=151)', got '%!s(int=1170)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpobtqdht0_test.go:55: expected '%!s(int=327)', got '%!s(int=1754)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074044
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    // Write the\
    \ code here\n    sum := 0\n    for _, char := range s {\n        switch char {\n\
    \        case 'a':\n            sum += 65\n        case 'b':\n            sum\
    \ += 66\n        case 'c':\n            sum += 67\n        case 'd':\n       \
    \     sum += 68\n        case 'e':\n            sum += 69\n        case 'f':\n\
    \            sum += 70\n        case 'g':\n            sum += 71\n        case\
    \ 'h':\n            sum += 72\n        case 'i':\n            sum += 73\n    \
    \    case 'j':\n            sum += 74\n        case 'k':\n            sum += 75\n\
    \        case 'l':\n            sum += 76\n        case 'm':\n            sum\
    \ += 77\n        case 'n':\n            sum += 78\n        case 'o':\n       \
    \     sum += 79\n        case 'p':\n            sum += 80\n        case 'q':\n\
    \            sum += 81\n        case 'r':\n            sum += 82\n        case\
    \ 's':\n            sum += 83\n        case 't':\n            sum += 84\n    \
    \    case 'u':\n            sum += 85\n        case 'v':\n            sum += 86\n\
    \        case 'w':\n            sum += 87\n        case 'x':\n            sum\
    \ += 88\n        case 'y':\n            sum += 89\n        case 'z':\n       \
    \     sum += 90\n        }\n    }\n    return sum\n}\n</code>\n<|/ a |>\n<| c\
    \ |>\nWhat makes you think OP does not know C?\n<|/ c |>\n<| c |>\nI didn't ask\
    \ the OP, I just thought it might be useful to someone new to C.\n<|/ c |>\n<|\
    \ c |>\n: I doubt that. OP is newer to C, but new to programming, so he is probably\
    \ just starting out (but still not knowing much), so I think the answer would\
    \ be valuable to someone who doesn't know the basics yet.\n<|/ c |>\n<| c |>\n\
    It can be useful to someone new to C too, since it makes his code simpler and\
    \ the same amount of work no matter what\n<|/ c |>\n<| c |>\n: Of course it is,\
    \ but it is not the *best* answer, just a solution.\n<|/ c |>\n<| a |>\nYou could\
    \ try this :\n<code>\nint digitSum(char ch) {\n    int result = 0;\n    if (ch\
    \ >= '0' && ch <= '9') {\n        result = ch - '0';\n    }\n    if (ch >= 'a'\
    \ && ch <= 'z') {\n        result = result + 10 + ch - 'a';\n    }\n    return\
    \ result;\n}\n</code>\n<|/ a tags=c,string dscore=2 |>\n<| a |>\n<code>\nint digitSum(char\
    \ *s) {\n  int sum = 0;\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpoh5ibj_0_test.go:85:1: expected declaration, found ''<''

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074043
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    result :=\
    \ 0\n    chars := make([]rune, len(s))\n\n    for idx, r := range s {\n      \
    \  chars[idx] = rune(r)\n    }\n    sort.Sort(sort.Reverse(runeSlice(chars)))\n\
    \    for idx, r := range chars {\n        if r >= 65 && r <= 90 {\n          \
    \  result += r - 65\n        }\n    }\n    return result\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmplsypigbr_test.go:31:5: undefined: sort

    /tmp/tmplsypigbr_test.go:31:28: undefined: runeSlice

    /tmp/tmplsypigbr_test.go:32:9: idx declared but not used

    /tmp/tmplsypigbr_test.go:34:13: invalid operation: result += r - 65 (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074044
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    return len(strings.Split(s,\
    \ \"\"))\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpkuon9wge_test.go:25:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074044
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    return sum(digits(s)[0])\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaz3pzswb_test.go:25:12: undefined: sum

    /tmp/tmpaz3pzswb_test.go:25:16: undefined: digits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074044
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    return digitSum_test.digitSum(s)\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmprukvqf_k_test.go:25:12: undefined: digitSum_test

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074044
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var result\
    \ int\n    for _, char := range s {\n        result += int(char)\n    }\n    return\
    \ result\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpvz39go6n_test.go:52: expected '%!s(int=131)', got '%!s(int=326)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpvz39go6n_test.go:52:\
    \ expected '%!s(int=67)', got '%!s(int=461)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpvz39go6n_test.go:52: expected '%!s(int=69)', got '%!s(int=601)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpvz39go6n_test.go:52:\
    \ expected '%!s(int=131)', got '%!s(int=683)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpvz39go6n_test.go:52: expected '%!s(int=153)', got '%!s(int=638)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpvz39go6n_test.go:52:\
    \ expected '%!s(int=151)', got '%!s(int=1090)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpvz39go6n_test.go:52: expected '%!s(int=327)', got '%!s(int=1634)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074044
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum =\
    \ 0\n    for _, v := range s {\n        sum += int(v)\n    }\n    return sum\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp4ycws09l_test.go:52: expected '%!s(int=131)', got '%!s(int=326)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp4ycws09l_test.go:52:\
    \ expected '%!s(int=67)', got '%!s(int=461)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp4ycws09l_test.go:52: expected '%!s(int=69)', got '%!s(int=601)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp4ycws09l_test.go:52:\
    \ expected '%!s(int=131)', got '%!s(int=683)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp4ycws09l_test.go:52: expected '%!s(int=153)', got '%!s(int=638)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp4ycws09l_test.go:52:\
    \ expected '%!s(int=151)', got '%!s(int=1090)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp4ycws09l_test.go:52: expected '%!s(int=327)', got '%!s(int=1634)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074044
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    // Initialize\
    \ sum and counter\n    var sum = 0, i int\n\n    // Loop through all characters\n\
    \    for ; i < len(s); i++ {\n        // Get current character\n        var c\
    \ rune = s[i]\n\n        // If current character is uppercase add it to sum\n\
    \        if ('A' <= c && c <= 'Z') {\n            sum += int(c - 'A')\n      \
    \  }\n    }\n\n    return sum\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=go dscore=0\
    \ |>\nA possible solution using only builtin functions (no loops or conditionals):\n\
    <code>\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmp9nhcsugl_test.go:26:20: expected '';'', found int

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074043
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    // Your code\
    \ here\n    return 0\n}\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpwo1k8uy5_test.go:48: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpwo1k8uy5_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpwo1k8uy5_test.go:48: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpwo1k8uy5_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpwo1k8uy5_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpwo1k8uy5_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpwo1k8uy5_test.go:48: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074045
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, ch := range s {\n        if ch >= 'A' && ch <= 'Z' {\n           \
    \ sum += int(ch-'A'+1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmps5ev48z8_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmps5ev48z8_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmps5ev48z8_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmps5ev48z8_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmps5ev48z8_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmps5ev48z8_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmps5ev48z8_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074045
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    // Write code\
    \ here\n    sum := 0\n    for _, ch := range s {\n        sum += int(ch) - int('A')\
    \ + 1\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpumoqgfoj_test.go:53: expected '%!s(int=131)', got '%!s(int=70)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpumoqgfoj_test.go:53:\
    \ expected '%!s(int=67)', got '%!s(int=141)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpumoqgfoj_test.go:53: expected '%!s(int=69)', got '%!s(int=217)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpumoqgfoj_test.go:53:\
    \ expected '%!s(int=131)', got '%!s(int=235)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpumoqgfoj_test.go:53: expected '%!s(int=153)', got '%!s(int=190)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpumoqgfoj_test.go:53:\
    \ expected '%!s(int=151)', got '%!s(int=258)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpumoqgfoj_test.go:53: expected '%!s(int=327)', got '%!s(int=482)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074045
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    // Write code\
    \ here\n    sum := 0\n    for _, char := range s {\n        if char >= 'A' &&\
    \ char <= 'Z' {\n            sum += char - 'A' + 1\n        }\n    }\n    return\
    \ sum\n}\n</code>\nI hope this helps.\n<|/ a dscore=1 |>\n<| a tags=char,string,go\
    \ dscore=0 |>\nYou can do it without looping by getting substring and converting\
    \ it to ASCII and summing up.\n<code>\npackage main\n\nimport (\n    \"fmt\"\n\
    )\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmprgs2_ui1_test.go:34:1: expected declaration, found ''<''

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074044
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    // code goes\
    \ here\n    sum = 0\n    for _, ch:= range s {\n        if ch > '9' {\n      \
    \      sum += int(ch-'0')\n        } else {\n            sum += int(ch-'0')\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp0hyxukeb_test.go:26:5: undefined: sum

    /tmp/tmp0hyxukeb_test.go:29:13: undefined: sum

    /tmp/tmp0hyxukeb_test.go:31:13: undefined: sum

    /tmp/tmp0hyxukeb_test.go:34:12: undefined: sum

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074045
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum = 0\n\
    \    for _, charVal := range s {\n        if charVal >= 'a' && charVal <= 'z'\
    \ {\n            sum += int(charVal - 'a')\n        }\n    }\n    return sum\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp5ct5xr4g_test.go:25:5: undefined: sum

    /tmp/tmp5ct5xr4g_test.go:28:13: undefined: sum

    /tmp/tmp5ct5xr4g_test.go:31:12: undefined: sum

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074045
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var result\
    \ int\n    for _, x := range s {\n        if x != x {\n            result += int(string(x))\
    \ + int(string([]rune{x, 'a'})) + int(string([]rune{x, 'A'}))\n        }\n   \
    \ }\n    return result\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpjr4n2pct_test.go:28:27:\
    \ cannot convert string(x) (value of type string) to type int\n/tmp/tmpjr4n2pct_test.go:28:44:\
    \ cannot convert string([]rune{\u2026}) (value of type string) to type int\n"
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074045
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, v := range s {\n        sum += int(v) - 32\n    }\n    return sum\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp0s2k95jy_test.go:52: expected '%!s(int=131)', got '%!s(int=198)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp0s2k95jy_test.go:52:\
    \ expected '%!s(int=67)', got '%!s(int=301)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp0s2k95jy_test.go:52: expected '%!s(int=69)', got '%!s(int=409)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp0s2k95jy_test.go:52:\
    \ expected '%!s(int=131)', got '%!s(int=459)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp0s2k95jy_test.go:52: expected '%!s(int=153)', got '%!s(int=414)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp0s2k95jy_test.go:52:\
    \ expected '%!s(int=151)', got '%!s(int=674)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp0s2k95jy_test.go:52: expected '%!s(int=327)', got '%!s(int=1058)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074046
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    return digitSum_test.digitSum(s)\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmprukvqf_k_test.go:25:12: undefined: digitSum_test

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074044
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    result :=\
    \ 0\n    for _, char := range s {\n        result += (int(char) - 48)\n    }\n\
    \    return result\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpuyjo29pm_test.go:52: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpuyjo29pm_test.go:52:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpuyjo29pm_test.go:52: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpuyjo29pm_test.go:52:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpuyjo29pm_test.go:52: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpuyjo29pm_test.go:52:\
    \ expected '%!s(int=151)', got '%!s(int=466)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpuyjo29pm_test.go:52: expected '%!s(int=327)', got '%!s(int=770)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074046
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum =\
    \ 0\n    for _, r := range s {\n        if r >= 'a' && r <= 'z' {\n          \
    \  sum += int(r - 'a')\n        }\n    }\n    return sum\n}\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp11_3b2y5_test.go:53: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp11_3b2y5_test.go:53:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp11_3b2y5_test.go:53: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp11_3b2y5_test.go:53:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp11_3b2y5_test.go:53: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp11_3b2y5_test.go:53:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp11_3b2y5_test.go:53: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074046
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n\
    \    for _, v := range s {\n        if v > 47 && v <= 51 {\n            sum +=\
    \ int(v)\n        }\n    }\n    return sum\n}\nfunc TestDigitsum(t *testing.T)\
    \ {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpp17s3jzx_test.go:53: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp17s3jzx_test.go:53:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpp17s3jzx_test.go:53: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp17s3jzx_test.go:53:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpp17s3jzx_test.go:53: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp17s3jzx_test.go:53:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpp17s3jzx_test.go:53: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074046
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n\
    \    for _, r := range s {\n        if r > 97 {\n            sum += int(r) - 96\n\
    \        } else {\n            sum += int(r)\n        }\n    }\n    return sum\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp9w9gt_qb_test.go:56: expected '%!s(int=131)', got '%!s(int=230)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp9w9gt_qb_test.go:56:\
    \ expected '%!s(int=67)', got '%!s(int=173)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp9w9gt_qb_test.go:56: expected '%!s(int=69)', got '%!s(int=121)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp9w9gt_qb_test.go:56:\
    \ expected '%!s(int=131)', got '%!s(int=203)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp9w9gt_qb_test.go:56: expected '%!s(int=153)', got '%!s(int=638)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp9w9gt_qb_test.go:56:\
    \ expected '%!s(int=151)', got '%!s(int=514)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp9w9gt_qb_test.go:56: expected '%!s(int=327)', got '%!s(int=770)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074046
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    if len(s)\
    \ <= 0 {\n        return 0\n    }\n    \n    return int('0' + s[0]) + digitSum(s[1:])\n\
    }\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp0qvbjkkl_test.go:51: expected '%!s(int=131)', got '%!s(int=518)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp0qvbjkkl_test.go:51:\
    \ expected '%!s(int=67)', got '%!s(int=701)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp0qvbjkkl_test.go:51: expected '%!s(int=69)', got '%!s(int=889)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp0qvbjkkl_test.go:51:\
    \ expected '%!s(int=131)', got '%!s(int=1019)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp0qvbjkkl_test.go:51: expected '%!s(int=153)', got '%!s(int=974)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp0qvbjkkl_test.go:51:\
    \ expected '%!s(int=151)', got '%!s(int=1714)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp0qvbjkkl_test.go:51: expected '%!s(int=327)', got '%!s(int=2498)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074046
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    result :=\
    \ 0\n    for _, item := range s {\n        if item >= 'A' && item <= 'Z' {\n \
    \           result += int(item - 'A')\n        }\n    }\n    return result\n}\n\
    \nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp7weury43_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp7weury43_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp7weury43_test.go:54: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp7weury43_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp7weury43_test.go:54: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp7weury43_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp7weury43_test.go:54: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074047
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    return sum(digits,\
    \ s)\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpt6i2267x_test.go:25:12: undefined: sum

    /tmp/tmpt6i2267x_test.go:25:16: undefined: digits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074046
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    fmt.Println(s)\n\
    \    total := 0\n    for _, letter := range s {\n        if letter == 'A' || letter\
    \ == 'a' {\n            total += 65\n        }\n    }\n    return total\n}\n\n\
    func TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "\nabAB\nabcCd\nhelloE\nwoArBld\naAaaaXa\n How are yOu?\nYou arE Very Smart\n\
    --- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n\
    \        tmpo256lgup_test.go:55: expected '%!s(int=131)', got '%!s(int=130)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo256lgup_test.go:55:\
    \ expected '%!s(int=67)', got '%!s(int=65)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpo256lgup_test.go:55: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo256lgup_test.go:55:\
    \ expected '%!s(int=131)', got '%!s(int=65)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpo256lgup_test.go:55: expected '%!s(int=153)', got '%!s(int=390)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo256lgup_test.go:55:\
    \ expected '%!s(int=151)', got '%!s(int=65)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpo256lgup_test.go:55: expected '%!s(int=327)', got '%!s(int=130)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074047
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    total := 0\n\
    \    for _, val := range s {\n        if val > '9' {\n            total += 10\
    \ - val\n        } else {\n            total += val\n        }\n    }\n    return\
    \ total\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpara2q09s_test.go:28:13: invalid operation: total += 10 - val (mismatched
    types int and rune)

    /tmp/tmpara2q09s_test.go:30:13: invalid operation: total += val (mismatched types
    int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074046
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    // TODO: write\
    \ your code in here\n    return 0\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp_lbd4vtm_test.go:49: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp_lbd4vtm_test.go:49:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp_lbd4vtm_test.go:49: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp_lbd4vtm_test.go:49:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp_lbd4vtm_test.go:49: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp_lbd4vtm_test.go:49:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp_lbd4vtm_test.go:49: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074047
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\
    \ = 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A' {\n         \
    \   sum += 26\n        } else {\n            sum += s[i]-'A' + 1\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp_a8qnrms_test.go:30:13: invalid operation: sum += s[i] - ''A'' + 1 (mismatched
    types int and byte)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074047
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum, i :=\
    \ 0, 0\n    for _, c := range s {\n        if c == 'A' || c == 'a' {\n       \
    \     sum += (65 - i) * 10\n        }\n        if c == 'B' || c == 'b' {\n   \
    \         sum += (97 - i) * 10\n        }\n        i++\n    }\n    return sum\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpcyyne9ea_test.go:58: expected '%!s(int=131)', got '%!s(int=3180)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpcyyne9ea_test.go:58:\
    \ expected '%!s(int=67)', got '%!s(int=1610)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpcyyne9ea_test.go:58: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpcyyne9ea_test.go:58:\
    \ expected '%!s(int=131)', got '%!s(int=1560)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpcyyne9ea_test.go:58: expected '%!s(int=153)', got '%!s(int=3740)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpcyyne9ea_test.go:58:\
    \ expected '%!s(int=151)', got '%!s(int=600)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpcyyne9ea_test.go:58: expected '%!s(int=327)', got '%!s(int=1110)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074047
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum =\
    \ 0\n    for _, ch := range s {\n        if ('A' <= ch && ch <= 'Z') sum += int(ch)\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmp5g2o2n9z_test.go:27:37: expected '';'', found sum

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074046
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var result\
    \ int\n    for i, r := range s {\n        if r < 'a' || r > 'z' {\n          \
    \  continue\n        }\n        result += int(r) - int('A')\n    }\n    return\
    \ result\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp0sp5y03b_test.go:26:9: i declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074047
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    return 0 //\
    \ TODO: implement\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpj3rjn4ai_test.go:48: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpj3rjn4ai_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpj3rjn4ai_test.go:48: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpj3rjn4ai_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpj3rjn4ai_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpj3rjn4ai_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpj3rjn4ai_test.go:48: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074048
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    result :=\
    \ 0\n    for _, character := range s {\n        if characterUpper := 'A' <= character\
    \ && character <= 'Z'; characterUpper {\n            result += int(character)\
    \ - int(characterUpper)\n        }\n    }\n    return result\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpyggr35nh_test.go:28:44: cannot convert characterUpper (variable of type
    bool) to type int

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074047
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var result\
    \ int = 0\n    chars := []rune(s)\n    for _, char := range chars {\n        result\
    \ += int(char) - int(rune('A'))\n    }\n    return result\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpr_6xo1i9_test.go:53: expected '%!s(int=131)', got '%!s(int=66)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpr_6xo1i9_test.go:53:\
    \ expected '%!s(int=67)', got '%!s(int=136)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpr_6xo1i9_test.go:53: expected '%!s(int=69)', got '%!s(int=211)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpr_6xo1i9_test.go:53:\
    \ expected '%!s(int=131)', got '%!s(int=228)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpr_6xo1i9_test.go:53: expected '%!s(int=153)', got '%!s(int=183)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpr_6xo1i9_test.go:53:\
    \ expected '%!s(int=151)', got '%!s(int=245)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpr_6xo1i9_test.go:53: expected '%!s(int=327)', got '%!s(int=464)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074048
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, character := range s {\n        if character>='A' && character<='Z'\
    \ {\n            sum += (character-'A')\n        }\n    }\n    return sum\n}\n\
    \nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpoho4tkrb_test.go:28:13: invalid operation: sum += (character - ''A'')
    (mismatched types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074047
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    // Write code\
    \ here\n    var sum = 0;\n    for _, char := range s {\n        sum += int(char)\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpy2yjcb2q_test.go:53: expected '%!s(int=131)', got '%!s(int=326)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpy2yjcb2q_test.go:53:\
    \ expected '%!s(int=67)', got '%!s(int=461)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpy2yjcb2q_test.go:53: expected '%!s(int=69)', got '%!s(int=601)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpy2yjcb2q_test.go:53:\
    \ expected '%!s(int=131)', got '%!s(int=683)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpy2yjcb2q_test.go:53: expected '%!s(int=153)', got '%!s(int=638)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpy2yjcb2q_test.go:53:\
    \ expected '%!s(int=151)', got '%!s(int=1090)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpy2yjcb2q_test.go:53: expected '%!s(int=327)', got '%!s(int=1634)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074048
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, c := range s {\n        sum += int(c)\n    }\n    return sum\n}\n\
    func TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp3_ifba5a_test.go:51: expected '%!s(int=131)', got '%!s(int=326)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp3_ifba5a_test.go:51:\
    \ expected '%!s(int=67)', got '%!s(int=461)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp3_ifba5a_test.go:51: expected '%!s(int=69)', got '%!s(int=601)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp3_ifba5a_test.go:51:\
    \ expected '%!s(int=131)', got '%!s(int=683)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp3_ifba5a_test.go:51: expected '%!s(int=153)', got '%!s(int=638)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp3_ifba5a_test.go:51:\
    \ expected '%!s(int=151)', got '%!s(int=1090)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp3_ifba5a_test.go:51: expected '%!s(int=327)', got '%!s(int=1634)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074048
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for i := 0; i < len(s); i++ {\n        if s[i] >= 'a' && s[i] <= 'z' {\n\
    \            sum += int(s[i] - 'a')\n        } else {\n            sum -= int(s[i]\
    \ - '0')\n        }\n    }\n    return sum\n}\nfunc TestDigitsum(t *testing.T)\
    \ {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp0mgcm3jx_test.go:55: expected '%!s(int=131)', got '%!s(int=-34)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp0mgcm3jx_test.go:55:\
    \ expected '%!s(int=67)', got '%!s(int=-13)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp0mgcm3jx_test.go:55: expected '%!s(int=69)', got '%!s(int=26)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp0mgcm3jx_test.go:55:\
    \ expected '%!s(int=131)', got '%!s(int=32)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp0mgcm3jx_test.go:55: expected '%!s(int=153)', got '%!s(int=-57)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp0mgcm3jx_test.go:55:\
    \ expected '%!s(int=151)', got '%!s(int=-689)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp0mgcm3jx_test.go:55: expected '%!s(int=327)', got '%!s(int=-711)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074048
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for i := 0; i < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'B' || s[i]\
    \ == 'C' || s[i] == 'D' || s[i] == 'E' || s[i] == 'F' || s[i] == 'G' || s[i] ==\
    \ 'H' || s[i] == 'I' || s[i] == 'J' || s[i] == 'K' || s[i] == 'L' || s[i] == 'M'\
    \ || s[i] == 'N' || s[i] == 'O' || s[i] == 'P' || s[i] == 'Q' || s[i] == 'R' ||\
    \ s[i] == 'S' || s[i] == 'T' || s[i] == 'U' || s[i] == 'V' || s[i] == 'W' || s[i]\
    \ == 'X' || s[i] == 'Y' || s[i] == 'Z' {\n            sum += s[i]-'A' + 1\n  \
    \      }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpgbads1d1_test.go:28:13: invalid operation: sum += s[i] - ''A'' + 1 (mismatched
    types int and byte)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074048
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    // Start coding\
    \ here\n    var sum int = 0\n    for i := 0; i < len(s); i++ {\n        // fmt.Print(s[i])\n\
    \        sum += int(s[i]) - 48\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpwnx8rbhi_test.go:54: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpwnx8rbhi_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpwnx8rbhi_test.go:54: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpwnx8rbhi_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpwnx8rbhi_test.go:54: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpwnx8rbhi_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=466)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpwnx8rbhi_test.go:54: expected '%!s(int=327)', got '%!s(int=770)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074049
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    return sum(digitSumASCII(s))\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpcbcv6ss__test.go:25:12: undefined: sum

    /tmp/tmpcbcv6ss__test.go:25:16: undefined: digitSumASCII

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074048
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    return len(s)\
    \ - strings.Count(s, \"[A-Z]\") // return lenth of string minus number of capital\
    \ letters\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpv4ln9hus_test.go:25:21: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074048
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    total := 0\n\
    \    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n     \
    \       total += char - 'a'\n        }\n    }\n    return total\n}\n</code>\n\
    <|/ a tags=go |>\n<| c |>\nThanks for the solution !!\n<|/ c |>\n<| a |>\nGo has\
    \ built in functions to make your life easier\n<code>\npackage main\n\nimport\
    \ (\n    \"fmt\"\n    \"strings\"\n)\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpsh5rfs1u_test.go:33:1: expected declaration, found ''<''

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074048
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var result\
    \ int = 0\n    var temp int\n    for _, v := range s {\n        temp = v\n   \
    \     if v > 9 {\n            temp = v - 10\n        }\n        result += temp\n\
    \    }\n    return result\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpl660gxv8_test.go:28:16: cannot use v (variable of type rune) as type int
    in assignment

    /tmp/tmpl660gxv8_test.go:30:20: cannot use v - 10 (value of type rune) as type
    int in assignment

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074049
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    // TODO\n\
    \    fmt.Println(s)\n    return 0\n}\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "\nabAB\nabcCd\nhelloE\nwoArBld\naAaaaXa\n How are yOu?\nYou arE Very Smart\n\
    --- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n\
    \        tmp8nez3p79_test.go:49: expected '%!s(int=131)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp8nez3p79_test.go:49:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp8nez3p79_test.go:49: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp8nez3p79_test.go:49:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp8nez3p79_test.go:49: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp8nez3p79_test.go:49:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp8nez3p79_test.go:49: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074049
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    result :=\
    \ 0\n    for _, i := range s {\n        if i >= 'a' && i <= 'z' {\n          \
    \  result += int(i - 'a')\n        }\n    }\n    return result\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp8h3nogz5_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp8h3nogz5_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp8h3nogz5_test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp8h3nogz5_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp8h3nogz5_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp8h3nogz5_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp8h3nogz5_test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074049
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var result\
    \ int = 0\n    for _, char := range s {\n        if char >= '0' && char <= '9'\
    \ {\n            result *= 10\n            result += int(char - '0')\n       \
    \ }\n    }\n    return result\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp9edlc8n0_test.go:55: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp9edlc8n0_test.go:55:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp9edlc8n0_test.go:55: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp9edlc8n0_test.go:55:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp9edlc8n0_test.go:55: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp9edlc8n0_test.go:55:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp9edlc8n0_test.go:55: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074049
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\
    \ = 0\n    for _, char := range s {\n        sum += int(char) - 65\n    }\n  \
    \  return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp4vjj8sq4_test.go:52: expected '%!s(int=131)', got '%!s(int=66)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp4vjj8sq4_test.go:52:\
    \ expected '%!s(int=67)', got '%!s(int=136)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp4vjj8sq4_test.go:52: expected '%!s(int=69)', got '%!s(int=211)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp4vjj8sq4_test.go:52:\
    \ expected '%!s(int=131)', got '%!s(int=228)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp4vjj8sq4_test.go:52: expected '%!s(int=153)', got '%!s(int=183)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp4vjj8sq4_test.go:52:\
    \ expected '%!s(int=151)', got '%!s(int=245)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp4vjj8sq4_test.go:52: expected '%!s(int=327)', got '%!s(int=464)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074049
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var result\
    \ int = 0\n    max := 0\n    for _, char := range s {\n        charCode := char.ToInt()\n\
    \        if charCode < 32 {\n            result += charCode - 32\n        }\n\
    \        if charCode > max {\n            max = charCode\n        }\n    }\n \
    \   return result + max\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmph1671xkv_test.go:28:26: char.ToInt undefined (type rune has no field or
    method ToInt)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074049
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    // TODO: Write\
    \ your code here\n    return 0\n}\n</code>\nTest Suite\n<code>\npackage digitSum_test\n\
    \nimport (\n    \"testing\"\n    \"fmt\"\n)\n\nfunc TestDigitsum(t *testing.T)\
    \ {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpgl20z3t4_test.go:28:1: expected declaration, found ''<''

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074048
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    // Your code\
    \ here\n    var sum int = 0\n    for _, char := range s {\n        if ('A' <=\
    \ char && char <= 'Z') || (char >= 'a' && char <= 'z') {\n            sum += int(char)\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmppm9l7kbj_test.go:55: expected '%!s(int=131)', got '%!s(int=326)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmppm9l7kbj_test.go:55:\
    \ expected '%!s(int=67)', got '%!s(int=461)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmppm9l7kbj_test.go:55: expected '%!s(int=69)', got '%!s(int=601)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmppm9l7kbj_test.go:55:\
    \ expected '%!s(int=131)', got '%!s(int=683)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmppm9l7kbj_test.go:55: expected '%!s(int=153)', got '%!s(int=638)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmppm9l7kbj_test.go:55:\
    \ expected '%!s(int=151)', got '%!s(int=931)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmppm9l7kbj_test.go:55: expected '%!s(int=327)', got '%!s(int=1538)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074050
- exit_code: 0
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char == 'A' || char == 'B' || char ==\
    \ 'C' || char == 'D' || char == 'E' || char == 'F' || char == 'G' || char == 'H'\
    \ || char == 'I' || char == 'J' || char == 'K' || char == 'L' || char == 'M' ||\
    \ char == 'N' || char == 'O' || char == 'P' || char == 'Q' || char == 'R' || char\
    \ == 'S' || char == 'T' || char == 'U' || char == 'V' || char == 'W' || char ==\
    \ 'X' || char == 'Y' || char == 'Z' {\n            sum += int(char)\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660074050
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\
    \ = 0\n    for _, i := range s {\n        if i < '0' || i > '9' {\n          \
    \  continue\n        }\n        sum += int(i - '0')\n    }\n    return sum\n}\n\
    \nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmplwi_jy8s_test.go:55: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmplwi_jy8s_test.go:55:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmplwi_jy8s_test.go:55: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmplwi_jy8s_test.go:55:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmplwi_jy8s_test.go:55: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmplwi_jy8s_test.go:55:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmplwi_jy8s_test.go:55: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074050
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    return digitSum_test.CountUpperCase(string(s))\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp2ywz3a5k_test.go:25:12: undefined: digitSum_test

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074050
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    result :=\
    \ 0\n    for _, x := range s {\n        if x >= 'a' && x <= 'z' {\n          \
    \  result += x-'a'\n        }\n    }\n    return result\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmplge_7l18_test.go:28:13: invalid operation: result += x - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074050
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    ans := 0\n\
    \    for _, v := range s {\n        if v >= '0' && v <= '9' {\n            ans\
    \ += int(v)\n        }\n    }\n    return ans\n}\n\nfunc TestDigitsum(t *testing.T)\
    \ {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpson9qhn__test.go:54: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpson9qhn__test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpson9qhn__test.go:54: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpson9qhn__test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpson9qhn__test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpson9qhn__test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpson9qhn__test.go:54: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074050
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    output :=\
    \ 0\n    c := 0\n    for _, r := range s {\n        c = c + int(r)\n    }\n  \
    \  if c > 0 {\n        output = output + int(c % 10)\n    }\n    return output\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp8ntsuwkt_test.go:56: expected '%!s(int=131)', got '%!s(int=6)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp8ntsuwkt_test.go:56:\
    \ expected '%!s(int=67)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp8ntsuwkt_test.go:56: expected '%!s(int=69)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp8ntsuwkt_test.go:56:\
    \ expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp8ntsuwkt_test.go:56: expected '%!s(int=153)', got '%!s(int=8)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp8ntsuwkt_test.go:56:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp8ntsuwkt_test.go:56: expected '%!s(int=327)', got '%!s(int=4)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074050
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    n := 0\n \
    \   for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n      \
    \      n += char - 'a'\n        }\n    }\n    return n\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmphimqao1e_test.go:28:13: invalid operation: n += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074050
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    n := 0\n \
    \   for _, i := range s {\n        if i == ' ' || i == '.' {\n            continue\n\
    \        }\n        if i > 96 && i <= 123 {\n            n = n + int(i)\n    \
    \    }\n    }\n    return n\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp05y4efm0_test.go:57: expected '%!s(int=131)', got '%!s(int=195)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp05y4efm0_test.go:57:\
    \ expected '%!s(int=67)', got '%!s(int=394)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp05y4efm0_test.go:57: expected '%!s(int=69)', got '%!s(int=532)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp05y4efm0_test.go:57:\
    \ expected '%!s(int=131)', got '%!s(int=552)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp05y4efm0_test.go:57: expected '%!s(int=153)', got '%!s(int=485)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp05y4efm0_test.go:57:\
    \ expected '%!s(int=151)', got '%!s(int=780)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp05y4efm0_test.go:57: expected '%!s(int=327)', got '%!s(int=1211)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074050
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    if s == \"\
    \" {\n        return 0\n    }\n    digits := map[rune]int{}\n    for _, r := range\
    \ s {\n        digits[r]++\n    }\n    sum := 0\n    for _, v := range digits\
    \ {\n        sum += v\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T)\
    \ {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpfgjm8bu5_test.go:59: expected '%!s(int=131)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpfgjm8bu5_test.go:59:\
    \ expected '%!s(int=67)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpfgjm8bu5_test.go:59: expected '%!s(int=69)', got '%!s(int=6)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpfgjm8bu5_test.go:59:\
    \ expected '%!s(int=131)', got '%!s(int=7)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpfgjm8bu5_test.go:59: expected '%!s(int=153)', got '%!s(int=7)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpfgjm8bu5_test.go:59:\
    \ expected '%!s(int=151)', got '%!s(int=13)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpfgjm8bu5_test.go:59: expected '%!s(int=327)', got '%!s(int=18)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074050
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum =\
    \ 0\n    for _, v := range s {\n        sum += int(v)\n    }\n    return sum\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp4ycws09l_test.go:52: expected '%!s(int=131)', got '%!s(int=326)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp4ycws09l_test.go:52:\
    \ expected '%!s(int=67)', got '%!s(int=461)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp4ycws09l_test.go:52: expected '%!s(int=69)', got '%!s(int=601)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp4ycws09l_test.go:52:\
    \ expected '%!s(int=131)', got '%!s(int=683)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp4ycws09l_test.go:52: expected '%!s(int=153)', got '%!s(int=638)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp4ycws09l_test.go:52:\
    \ expected '%!s(int=151)', got '%!s(int=1090)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp4ycws09l_test.go:52: expected '%!s(int=327)', got '%!s(int=1634)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074044
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum = 0\n\
    \    ch := s[0]\n    for i := 1; i < len(s); i++ {\n        ch = s[i]\n      \
    \  if ch >= 'a' && ch <= 'z' {\n            sum += int(ch - 'a')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpho6n2oc5_test.go:25:5: undefined: sum

    /tmp/tmpho6n2oc5_test.go:30:13: undefined: sum

    /tmp/tmpho6n2oc5_test.go:33:12: undefined: sum

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074050
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    return sum([...]int{'0',\
    \ '1', '2', '3', '4', '5', '6', '7', '8', '9'}, s)\n}\n\nfunc TestDigitsum(t *testing.T)\
    \ {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpj1sogroh_test.go:25:12: undefined: sum

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074050
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    // Your code\
    \ here\n    if s == \"\" {\n        return 0\n    }\n    var result int = 0\n\
    \    for _, c := range s {\n        if c > 47 && c < 58 {\n            result\
    \ += int(c - 48)\n        }\n    }\n    return result\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpdnl42u80_test.go:58: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpdnl42u80_test.go:58:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpdnl42u80_test.go:58: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpdnl42u80_test.go:58:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpdnl42u80_test.go:58: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpdnl42u80_test.go:58:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpdnl42u80_test.go:58: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074050
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var result\
    \ int = 0\n\n    for _, char := range s {\n        result += (char)\n    }\n\n\
    \    return result\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp5lygikcn_test.go:28:9: invalid operation: result += (char) (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074050
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    return 0\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp8403w3p5_test.go:48: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp8403w3p5_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp8403w3p5_test.go:48: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp8403w3p5_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp8403w3p5_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp8403w3p5_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp8403w3p5_test.go:48: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073848
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    // Solution\
    \ here\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpy0nk_9vy_test.go:26:1: missing return

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074050
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, r := range s {\n        sum += int(rune(r) - '0')\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpbm_inmo9_test.go:52: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpbm_inmo9_test.go:52:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpbm_inmo9_test.go:52: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpbm_inmo9_test.go:52:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpbm_inmo9_test.go:52: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpbm_inmo9_test.go:52:\
    \ expected '%!s(int=151)', got '%!s(int=466)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpbm_inmo9_test.go:52: expected '%!s(int=327)', got '%!s(int=770)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074050
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum =\
    \ 0\n\n    for _, char := range s {\n        sum += int(char)\n    }\n\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpctyn8yvy_test.go:54: expected '%!s(int=131)', got '%!s(int=326)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpctyn8yvy_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=461)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpctyn8yvy_test.go:54: expected '%!s(int=69)', got '%!s(int=601)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpctyn8yvy_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=683)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpctyn8yvy_test.go:54: expected '%!s(int=153)', got '%!s(int=638)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpctyn8yvy_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=1090)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpctyn8yvy_test.go:54: expected '%!s(int=327)', got '%!s(int=1634)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074050

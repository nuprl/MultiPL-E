language: go_test.go
name: HumanEval_51_remove_vowels
results:
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n\
    \    for i, c := range text {\n        if !contains(vowels, c) {\n           \
    \ t := text[:i]\n            if i := len(t); i > 0 && t[i-1] == 'z' {\n      \
    \          t = t[:i-1]\n            }\n            return t + string(c)\n    \
    \    }\n    }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n\
    \  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpbfg7i_ie_test.go:22:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073447
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    text := text + \"\"\n\n    for _, vowel := range vowels\
    \ {\n        text = strings.Replace(text, vowel, \"\", -1)\n    }\n\n    return\
    \ text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpz3lz517d_test.go:20:10: no new variables on left side of :=

    /tmp/tmpz3lz517d_test.go:22:27: undefined: vowels

    /tmp/tmpz3lz517d_test.go:23:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073447
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    return strings.NewReplacer(\"aeiou\", \"\").Replace(text)\n\
    }\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmppuvva1vy_test.go:20:12: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073447
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    result := \"\"\n\n    for _, vowel := range []rune(\"\
    aeiouAEIOU\") {\n        text = strings.Replace(text, vowel, \"\", -1)\n    }\n\
    \n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate :=\
    \ remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp360us59p_test.go:20:5: result declared but not used

    /tmp/tmp360us59p_test.go:23:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073447
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    for _, vowel := range vowels {\n        text = text[:strings.Index(text,\
    \ vowel)] + text[len(vowel):]\n    }\n    return text\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpifgy5spu_test.go:20:27: undefined: vowels

    /tmp/tmpifgy5spu_test.go:21:22: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073447
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune(\"aeiouy\")\n    vowelsLen := len(vowels)\n\
    \    for i := 0; i < len(text); i++ {\n        if text[i] != 'a' && text[i] !=\
    \ 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' {\n            text\
    \ += string(text[i])\n            i -= 1\n            vowelsLen -= 1\n       \
    \ }\n    }\n    for i := 0; i < vowelsLen; i++ {\n        text = text[:len(text)-1]\
    \ + text[len(text)-1]\n    }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp135zsy6w_test.go:30:20: invalid operation: text[:len(text) - 1] + text[len(text)
    - 1] (mismatched types string and byte)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073447
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    var result string\n    for _, letter := range text {\n\
    \        if letter == 'a' || letter == 'A' || letter == 'e' || letter == 'E' ||\
    \ letter == 'i' || letter == 'I' || letter == 'o' || letter == 'O' || letter ==\
    \ 'u' || letter == 'U' {\n            continue\n        }\n        result = result\
    \ + letter\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpwxtwmtpr_test.go:25:18: invalid operation: result + letter (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073447
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    fmt.Println(text)\n    if text == \"\" {\n        return\
    \ text\n    }\n\n    vowels := []rune(\"a\", \"e\", \"i\", \"o\", \"u\")\n   \
    \ for _, c := range text {\n        if !contains(vowels, c) {\n            text\
    \ += string(c)\n        }\n    }\n    return text\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp7lw8dlad_test.go:25:42: too many arguments in conversion to []rune

    /tmp/tmp7lw8dlad_test.go:27:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073447
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    text = strings.Replace(text, \"a\", \"A\", -1)\n    text\
    \ = strings.Replace(text, \"e\", \"E\", -1)\n    text = strings.Replace(text,\
    \ \"i\", \"I\", -1)\n    text = strings.Replace(text, \"o\", \"O\", -1)\n    text\
    \ = strings.Replace(text, \"u\", \"U\", -1)\n    text = strings.Replace(text,\
    \ \"y\", \"Y\", -1)\n    text = strings.Replace(text, \"A\", \"a\", -1)\n    text\
    \ = strings.Replace(text, \"E\", \"e\", -1)\n    text = strings.Replace(text,\
    \ \"I\", \"i\", -1)\n    text = strings.Replace(text, \"O\", \"o\", -1)\n    text\
    \ = strings.Replace(text, \"U\", \"u\", -1)\n    text = strings.Replace(text,\
    \ \"Y\", \"y\", -1)\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpfin863vt_test.go:20:12: undefined: strings

    /tmp/tmpfin863vt_test.go:21:12: undefined: strings

    /tmp/tmpfin863vt_test.go:22:12: undefined: strings

    /tmp/tmpfin863vt_test.go:23:12: undefined: strings

    /tmp/tmpfin863vt_test.go:24:12: undefined: strings

    /tmp/tmpfin863vt_test.go:25:12: undefined: strings

    /tmp/tmpfin863vt_test.go:26:12: undefined: strings

    /tmp/tmpfin863vt_test.go:27:12: undefined: strings

    /tmp/tmpfin863vt_test.go:28:12: undefined: strings

    /tmp/tmpfin863vt_test.go:29:12: undefined: strings

    /tmp/tmpfin863vt_test.go:29:12: too many errors

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073447
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    var filteredText string = \"\"\n    for _, char := range\
    \ text {\n        if char != 'a' && char != 'e' && char != 'i' && char != 'o'\
    \ && char != 'u' {\n            filteredText = append(filteredText, char)\n  \
    \      }\n    }\n    return filteredText\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmph_vaw_oz_test.go:23:35: first argument to append must be a slice; have
    filteredText (variable of type string)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073447
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    // initialize result variable\n    result := \"\"\n  \
    \  // loop through characters of input string\n    for i := 0; i < len(text);\
    \ i++ {\n        // check if the current char is a vowel\n        if ('a' <= text[i]\
    \ && text[i] <= 'z' || 'A' <= text[i] && text[i] <= 'Z') {\n            // if\
    \ it is a vowel, continue\n            continue\n        } else {\n          \
    \  // otherwise add this char to result\n            result = result + text[i]\n\
    \        }\n    }\n    // return the result\n    return result\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp_44nrdp3_test.go:30:22: invalid operation: result + text[i] (mismatched
    types string and byte)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073447
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    // Complete this function.\n    return text\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__1\
    \ (0.00s)\n        tmpx72e2c2a_test.go:43: expected 'bcdf\n            ghjklm',\
    \ got 'abcdef\n            ghijklm'\n    --- FAIL: TestRemove_Vowels/test_num__2\
    \ (0.00s)\n        tmpx72e2c2a_test.go:43: expected 'fdcb', got 'fedcba'\n   \
    \ --- FAIL: TestRemove_Vowels/test_num__3 (0.00s)\n        tmpx72e2c2a_test.go:43:\
    \ expected '', got 'eeeee'\n    --- FAIL: TestRemove_Vowels/test_num__4 (0.00s)\n\
    \        tmpx72e2c2a_test.go:43: expected 'cB', got 'acBAA'\n    --- FAIL: TestRemove_Vowels/test_num__5\
    \ (0.00s)\n        tmpx72e2c2a_test.go:43: expected 'cB', got 'EcBOO'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073447
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    for _, value := range vowels {\n        text = text.replace(value)\n\
    \    }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpbxebgl8b_test.go:20:27: undefined: vowels

    /tmp/tmpbxebgl8b_test.go:21:21: text.replace undefined (type string has no field
    or method replace)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073447
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    return strings.Map(func(r rune) rune {\n        switch\
    \ {\n        case r == 'a' || r == 'e' || r == 'i' || r == 'o' || r == 'u':\n\
    \            return -1\n        case r == 'y':\n            return 'a'\n     \
    \   }\n        return r\n    }, text)\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmppfxeek8y_test.go:20:12: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073447
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    for _, v := range text {\n        if v == 'a' || v ==\
    \ 'e' || v == 'i' || v == 'o' || v == 'u' {\n            text = text[:len(text)-1]\n\
    \        }\n    }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__1\
    \ (0.00s)\n        tmp639qulej_test.go:47: expected 'bcdf\n            ghjklm',\
    \ got 'abcdef\n            ghij'\n    --- FAIL: TestRemove_Vowels/test_num__2\
    \ (0.00s)\n        tmp639qulej_test.go:47: expected 'fdcb', got 'fedc'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__4 (0.00s)\n        tmp639qulej_test.go:47:\
    \ expected 'cB', got 'acBA'\n    --- FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n\
    \        tmp639qulej_test.go:47: expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073447
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    charArray := []rune(text)\n    result := \"\"\n    for\
    \ _, char := range charArray {\n        if char == 'a' || char == 'e' || char\
    \ == 'i' || char == 'o' || char == 'u' {\n            result = result + string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__1\
    \ (0.00s)\n        tmpgclrf2w4_test.go:49: expected 'bcdf\n            ghjklm',\
    \ got 'aei'\n    --- FAIL: TestRemove_Vowels/test_num__2 (0.00s)\n        tmpgclrf2w4_test.go:49:\
    \ expected 'fdcb', got 'ea'\n    --- FAIL: TestRemove_Vowels/test_num__3 (0.00s)\n\
    \        tmpgclrf2w4_test.go:49: expected '', got 'eeeee'\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmpgclrf2w4_test.go:49: expected 'cB', got 'a'\n    --- FAIL:\
    \ TestRemove_Vowels/test_num__5 (0.00s)\n        tmpgclrf2w4_test.go:49: expected\
    \ 'cB', got ''\n    --- FAIL: TestRemove_Vowels/test_num__6 (0.00s)\n        tmpgclrf2w4_test.go:49:\
    \ expected 'ybcd', got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073447
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    if text == \"\" {\n        return \"\"\n    }\n    var\
    \ result []rune\n    for i, r := range text {\n        if vowels[r] {\n      \
    \      result = append(result, r)\n        } else {\n            if len(text)\
    \ == 1 || text[i+1] != r {\n                fmt.Println(len(text), text[i+1],\
    \ r)\n            }\n        }\n    }\n    return string(result)\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpqdqqt9uv_test.go:25:12: undefined: vowels

    /tmp/tmpqdqqt9uv_test.go:28:47: invalid operation: text[i + 1] != r (mismatched
    types byte and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073447
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune(\"aeiouy\")\n    for _, v := range vowels\
    \ {\n        text = strings.Replace(text, string(v), \"\", -1)\n    }\n    return\
    \ text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpqc3iyyjv_test.go:22:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073447
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    lowerCaseText := strings.ToLower(text)\n    result :=\
    \ \"\"\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n\n    for _, letter :=\
    \ range lowerCaseText {\n        if vowels[strings.IndexRune(letter, unicode.ToLower(letter))]\
    \ <= unicode.ToLower(letter) {\n            result += letter\n        }\n    }\n\
    \n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpih4dx61r_test.go:20:22: undefined: strings

    /tmp/tmpih4dx61r_test.go:25:19: undefined: strings

    /tmp/tmpih4dx61r_test.go:25:45: undefined: unicode

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073447
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    text += \"a\"\n    text += \"e\"\n    text += \"i\"\n\
    \    text += \"o\"\n    text += \"u\"\n    text += \"y\"\n    text += \"A\"\n\
    \    text += \"E\"\n    text += \"I\"\n    text += \"O\"\n    text += \"U\"\n\
    \    text += \"Y\"\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__0\
    \ (0.00s)\n        tmppcexh3wt_test.go:54: expected '', got 'aeiouyAEIOUY'\n \
    \   --- FAIL: TestRemove_Vowels/test_num__1 (0.00s)\n        tmppcexh3wt_test.go:54:\
    \ expected 'bcdf\n            ghjklm', got 'abcdef\n            ghijklmaeiouyAEIOUY'\n\
    \    --- FAIL: TestRemove_Vowels/test_num__2 (0.00s)\n        tmppcexh3wt_test.go:54:\
    \ expected 'fdcb', got 'fedcbaaeiouyAEIOUY'\n    --- FAIL: TestRemove_Vowels/test_num__3\
    \ (0.00s)\n        tmppcexh3wt_test.go:54: expected '', got 'eeeeeaeiouyAEIOUY'\n\
    \    --- FAIL: TestRemove_Vowels/test_num__4 (0.00s)\n        tmppcexh3wt_test.go:54:\
    \ expected 'cB', got 'acBAAaeiouyAEIOUY'\n    --- FAIL: TestRemove_Vowels/test_num__5\
    \ (0.00s)\n        tmppcexh3wt_test.go:54: expected 'cB', got 'EcBOOaeiouyAEIOUY'\n\
    \    --- FAIL: TestRemove_Vowels/test_num__6 (0.00s)\n        tmppcexh3wt_test.go:54:\
    \ expected 'ybcd', got 'ybcdaeiouyAEIOUY'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073447
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    text = strings.ToLower(text)\n    return strings.Replace(text,\
    \ \"a\", \"z\", -1)\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp30k6p68z_test.go:20:12: undefined: strings

    /tmp/tmp30k6p68z_test.go:21:12: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073447
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    if text == \"\" {\n        return \"\"\n    }\n\n    vowels\
    \ := []rune(\"aeiouAEIOU\")\n    text := []rune(text)\n\n    for _, c := range\
    \ text {\n        for _, vowel := range vowels {\n            if c == vowel {\n\
    \                text = append(text[:c], text[(c+1):]...)\n            }\n   \
    \     }\n    }\n\n    return string(text)\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpegl32ojz_test.go:25:10: no new variables on left side of :=

    /tmp/tmpegl32ojz_test.go:25:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmpegl32ojz_test.go:30:35: first argument to append must be a slice; have
    text[:c] (value of type string)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073447
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    // Create a list for vowel characters\n    vowels := []rune{'a',\
    \ 'e', 'i', 'o', 'u'}\n\n    // Iterate through text and remove vowels\n    for\
    \ _, letter := range text {\n        // Check if letter from text is a vowel\n\
    \        if vowels.Contains(letter) {\n            // Remove letter from text\n\
    \            text = text[:strings.Index(text, letter)] + text[strings.Index(text,\
    \ letter)+1:]\n        }\n    }\n\n    return text\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp10mvbqld_test.go:26:19: vowels.Contains undefined (type []rune has no
    field or method Contains)

    /tmp/tmp10mvbqld_test.go:28:26: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073447
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    var cleanedText string = \"\"\n    for _, v := range text\
    \ {\n        if v == 'a' || v == 'A' || v == 'e' || v == 'E' || v == 'i' || v\
    \ == 'I' || v == 'o' || v == 'O' || v == 'u' || v == 'U' || v == 'y' || v == 'Y'\
    \ {\n            continue\n        }\n        cleanedText = fmt.Sprintf(\"%c\"\
    , v)\n    }\n    return cleanedText\n}\n</code>\n<|/ a |>\n<| a dscore=0 |>\n\
    You can use the package \"regexp\"\n<code>\npackage main\n\nimport \"regexp\"\n\
    \nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmp4d528mc__test.go:29:1: expected declaration, found ''<''

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660073448
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    for _, char := range text {\n        if char != 'a' &&\
    \ char != 'e' && char != 'i' && char != 'o' && char != 'u' {\n            text\
    \ := text[:len(text)-1]\n        }\n    }\n    return text\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp1pw6qxxg_test.go:22:13: text declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073449
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    for _,\
    \ v := range vowels {\n        text = text[:len(text)-len(v)-1] + v\n    }\n \
    \   return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp2ezf0vk1_test.go:22:20: invalid operation: text[:len(text) - len(v) -
    1] + v (mismatched types string and rune)

    /tmp/tmp2ezf0vk1_test.go:22:36: invalid argument: v (variable of type rune) for
    len

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073449
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I',\
    \ 'O', 'U'}\n    text := text\n    for _, i := range []int{len(text)/2, len(text)-1}\
    \ {\n        text = text[:i] + text[i+1:]\n        for _, v := range vowels {\n\
    \            text = text.replaceAllString(string(v), \"\")\n        }\n    }\n\
    \    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate :=\
    \ remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpc0rjbke3_test.go:21:10: no new variables on left side of :=

    /tmp/tmpc0rjbke3_test.go:25:25: text.replaceAllString undefined (type string has
    no field or method replaceAllString)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073449
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    var result string\n    text := strings.ToLower(text)\n\
    \    for _, l := range text {\n        if strings.Contains(vowels, l) {\n    \
    \        continue\n        }\n        result += l\n    }\n    return result\n\
    }\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaqvep7fm_test.go:21:10: no new variables on left side of :=

    /tmp/tmpaqvep7fm_test.go:21:13: undefined: strings

    /tmp/tmpaqvep7fm_test.go:23:12: undefined: strings

    /tmp/tmpaqvep7fm_test.go:23:29: undefined: vowels

    /tmp/tmpaqvep7fm_test.go:26:9: invalid operation: result += l (mismatched types
    string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073449
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    text := \"\" + text\n    text = strings.ToLower(text)\
    \ // lowercase\n    text += \"a\" // add an a at the start\n    for _, v := range\
    \ vowels {\n        text = strings.Replace(text, v, \"\", -1)\n    }\n    return\
    \ text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpce8x10rq_test.go:20:10: no new variables on left side of :=

    /tmp/tmpce8x10rq_test.go:21:12: undefined: strings

    /tmp/tmpce8x10rq_test.go:23:23: undefined: vowels

    /tmp/tmpce8x10rq_test.go:24:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073449
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    return strings.NewReplacer(\".\", \"\", \"[\", \"]\",\
    \ \"\", \"'\", \"\", \"-\", \"\", \"/\", \"\", \".\", \"_\", \"\").Replace(text)\n\
    }\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp1f_fqinz_test.go:20:12: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073449
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__1\
    \ (0.00s)\n        tmpdm2859rx_test.go:42: expected 'bcdf\n            ghjklm',\
    \ got 'abcdef\n            ghijklm'\n    --- FAIL: TestRemove_Vowels/test_num__2\
    \ (0.00s)\n        tmpdm2859rx_test.go:42: expected 'fdcb', got 'fedcba'\n   \
    \ --- FAIL: TestRemove_Vowels/test_num__3 (0.00s)\n        tmpdm2859rx_test.go:42:\
    \ expected '', got 'eeeee'\n    --- FAIL: TestRemove_Vowels/test_num__4 (0.00s)\n\
    \        tmpdm2859rx_test.go:42: expected 'cB', got 'acBAA'\n    --- FAIL: TestRemove_Vowels/test_num__5\
    \ (0.00s)\n        tmpdm2859rx_test.go:42: expected 'cB', got 'EcBOO'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073285
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    fmt.Println(\"remove_vowels\", text)\n    text += text\n\
    \    text += \"aeiou\"\n    text += \"AEIOU\"\n    text += \"bcdf\"\n    text\
    \ += \"BCDF\"\n    text += \"aaaaa\"\n    text += \"AAA\"\n    text += \"azcd\"\
    \n    text += \"AZCD\"\n    return text\n}\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "remove_vowels \nremove_vowels abcdef\nghijklm\nremove_vowels fedcba\nremove_vowels\
    \ eeeee\nremove_vowels acBAA\nremove_vowels EcBOO\nremove_vowels ybcd\n--- FAIL:\
    \ TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__0 (0.00s)\n\
    \        tmpstym7be4_test.go:51: expected '', got 'aeiouAEIOUbcdfBCDFaaaaaAAAazcdAZCD'\n\
    \    --- FAIL: TestRemove_Vowels/test_num__1 (0.00s)\n        tmpstym7be4_test.go:51:\
    \ expected 'bcdf\n            ghjklm', got 'abcdef\n            ghijklmabcdef\n\
    \            ghijklmaeiouAEIOUbcdfBCDFaaaaaAAAazcdAZCD'\n    --- FAIL: TestRemove_Vowels/test_num__2\
    \ (0.00s)\n        tmpstym7be4_test.go:51: expected 'fdcb', got 'fedcbafedcbaaeiouAEIOUbcdfBCDFaaaaaAAAazcdAZCD'\n\
    \    --- FAIL: TestRemove_Vowels/test_num__3 (0.00s)\n        tmpstym7be4_test.go:51:\
    \ expected '', got 'eeeeeeeeeeaeiouAEIOUbcdfBCDFaaaaaAAAazcdAZCD'\n    --- FAIL:\
    \ TestRemove_Vowels/test_num__4 (0.00s)\n        tmpstym7be4_test.go:51: expected\
    \ 'cB', got 'acBAAacBAAaeiouAEIOUbcdfBCDFaaaaaAAAazcdAZCD'\n    --- FAIL: TestRemove_Vowels/test_num__5\
    \ (0.00s)\n        tmpstym7be4_test.go:51: expected 'cB', got 'EcBOOEcBOOaeiouAEIOUbcdfBCDFaaaaaAAAazcdAZCD'\n\
    \    --- FAIL: TestRemove_Vowels/test_num__6 (0.00s)\n        tmpstym7be4_test.go:51:\
    \ expected 'ybcd', got 'ybcdybcdaeiouAEIOUbcdfBCDFaaaaaAAAazcdAZCD'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073449
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    if text == \"\" {\n        return \"\"\n    }\n    vowels\
    \ := \"aeiouAEIOU\"\n    i := 0\n    for len(text) > 0 {\n        if text[i] ==\
    \ text[i-1] {\n            i = i + 1\n        } else {\n            if i != 0\
    \ && text[i] != \"\" {\n                text = text[:i]\n            }\n     \
    \       return text\n        }\n    }\n    return text\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpuq1njtp7_test.go:23:5: vowels declared but not used

    /tmp/tmpuq1njtp7_test.go:29:37: invalid operation: text[i] != "" (mismatched types
    byte and untyped string)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073449
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    fmt.Println(\"text\", text)\n    for _, v := range text\
    \ {\n        if v == 'a' || v == 'A' || v == 'e' || v == 'E' || v == 'i' || v\
    \ == 'I' || v == 'o' || v == 'O' || v == 'u' || v == 'U' {\n            text :=\
    \ text[:len(text)-1]\n        } else {\n            text += v\n        }\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp6fp0_nxy_test.go:23:13: text declared but not used

    /tmp/tmp6fp0_nxy_test.go:25:13: invalid operation: text += v (mismatched types
    string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073449
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    text += text[:1]\n    text += \"a\"\n    text += \"a\"\
    \n    text += \"a\"\n    text += \"a\"\n    text += \"a\"\n    text += \"a\"\n\
    \    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate :=\
    \ remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:1] with length 0 [recovered]\n\tpanic: runtime error: slice bounds\
    \ out of range [:1] with length 0\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000160000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000160000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.remove_vowels(...)\n\t/tmp/tmp3muk4ii7_test.go:20\n\
    command-line-arguments_test.TestRemove_Vowels(0x0?)\n\t/tmp/tmp3muk4ii7_test.go:37\
    \ +0x1a\ntesting.tRunner(0xc000103380, 0x527d40)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.007s\nFAIL\n"
  timestamp: 1660073449
- exit_code: 0
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    var result = \"\"\n    for _, ch := range text {\n   \
    \     if ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u' || ch ==\
    \ 'A' || ch == 'E' || ch == 'I' || ch == 'O' || ch == 'U' {\n            continue\n\
    \        }\n        result += string(ch)\n    }\n    return result\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.004s\n"
  timestamp: 1660073449
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    var result string\n    vowels := []string{\"a\", \"e\"\
    , \"i\", \"o\", \"u\"}\n    for _, c := range text {\n        if _, ok := vowels[c];\
    \ !ok {\n            result = result + c\n        }\n    }\n    return result\n\
    }\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpzlz62mti_test.go:23:21: assignment mismatch: 2 variables but 1 value

    /tmp/tmpzlz62mti_test.go:24:22: invalid operation: result + c (mismatched types
    string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073449
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__1\
    \ (0.00s)\n        tmpdm2859rx_test.go:42: expected 'bcdf\n            ghjklm',\
    \ got 'abcdef\n            ghijklm'\n    --- FAIL: TestRemove_Vowels/test_num__2\
    \ (0.00s)\n        tmpdm2859rx_test.go:42: expected 'fdcb', got 'fedcba'\n   \
    \ --- FAIL: TestRemove_Vowels/test_num__3 (0.00s)\n        tmpdm2859rx_test.go:42:\
    \ expected '', got 'eeeee'\n    --- FAIL: TestRemove_Vowels/test_num__4 (0.00s)\n\
    \        tmpdm2859rx_test.go:42: expected 'cB', got 'acBAA'\n    --- FAIL: TestRemove_Vowels/test_num__5\
    \ (0.00s)\n        tmpdm2859rx_test.go:42: expected 'cB', got 'EcBOO'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073285
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    return strings.NewReplacer(\"a\", \"\", \"\", \"e\", \"\
    \", \"i\", \"\", \"o\", \"\", \"u\", \"\", \"\", \"y\", \"\").Replace(text)\n\
    }\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpdhx6c4fn_test.go:20:12: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073449
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    var vowel string = \"AEIOUaeiou\"\n    var newText string\
    \ = text\n\n    for i := 0; i < len(text); i++ {\n        if text[i] != vowel[0]\
    \ {\n            newText = newText + text[i]\n        }\n    }\n    return newText\n\
    }\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpvqw4fm13_test.go:25:23: invalid operation: newText + text[i] (mismatched
    types string and byte)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073449
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    if len(text) == 0 {\n        return \"\"\n    }\n    text\
    \ := strings.Replace(text, `aeiouAEIOU`, \"_\", -1)\n    text := strings.Replace(text,\
    \ `AEIOUaeiou`, \"_\", -1)\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp01b68_zd_test.go:23:10: no new variables on left side of :=

    /tmp/tmp01b68_zd_test.go:23:13: undefined: strings

    /tmp/tmp01b68_zd_test.go:24:10: no new variables on left side of :=

    /tmp/tmp01b68_zd_test.go:24:13: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073449
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    text := text\n    var newtext string\n    for _, l :=\
    \ range text {\n        if l == \"a\" || l == \"e\" || l == \"i\" || l == \"o\"\
    \ || l == \"u\" {\n            newtext = newtext + l\n        }\n    }\n    return\
    \ newtext\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp7xih4hem_test.go:20:10: no new variables on left side of :=

    /tmp/tmp7xih4hem_test.go:23:17: invalid operation: l == "a" (mismatched types
    rune and untyped string)

    /tmp/tmp7xih4hem_test.go:23:29: invalid operation: l == "e" (mismatched types
    rune and untyped string)

    /tmp/tmp7xih4hem_test.go:23:41: invalid operation: l == "i" (mismatched types
    rune and untyped string)

    /tmp/tmp7xih4hem_test.go:23:53: invalid operation: l == "o" (mismatched types
    rune and untyped string)

    /tmp/tmp7xih4hem_test.go:23:65: invalid operation: l == "u" (mismatched types
    rune and untyped string)

    /tmp/tmp7xih4hem_test.go:24:23: invalid operation: newtext + l (mismatched types
    string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073449
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    var result string = \"\"\n    for _, char := range text\
    \ {\n        if char == 'a' || char == 'e' || char == 'i' || char == 'o' || char\
    \ == 'u' {\n            result = result + char\n        }\n    }\n    return result\n\
    }\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpspk_jvov_test.go:23:22: invalid operation: result + char (mismatched types
    string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073449
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    for _, letter := range text {\n        switch letter {\n\
    \        case 'a':\n        case 'e':\n        case 'i':\n        case 'o':\n\
    \        case 'u':\n            continue\n        }\n        return text\n   \
    \ }\n    return text\n}\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate :=\
    \ remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__1\
    \ (0.00s)\n        tmpak67m6de_test.go:52: expected 'bcdf\n            ghjklm',\
    \ got 'abcdef\n            ghijklm'\n    --- FAIL: TestRemove_Vowels/test_num__2\
    \ (0.00s)\n        tmpak67m6de_test.go:52: expected 'fdcb', got 'fedcba'\n   \
    \ --- FAIL: TestRemove_Vowels/test_num__3 (0.00s)\n        tmpak67m6de_test.go:52:\
    \ expected '', got 'eeeee'\n    --- FAIL: TestRemove_Vowels/test_num__4 (0.00s)\n\
    \        tmpak67m6de_test.go:52: expected 'cB', got 'acBAA'\n    --- FAIL: TestRemove_Vowels/test_num__5\
    \ (0.00s)\n        tmpak67m6de_test.go:52: expected 'cB', got 'EcBOO'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073449
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := \"aeiou\"\n    result := \"\"\n\n    for _,\
    \ v := range text {\n        if v != vowels[len(vowels)-1] {\n            result\
    \ += v\n        }\n    }\n\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp029yd1qk_test.go:24:17: invalid operation: v != vowels[len(vowels) - 1]
    (mismatched types rune and byte)

    /tmp/tmp029yd1qk_test.go:25:13: invalid operation: result += v (mismatched types
    string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073449
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n\
    \    for _, vowel := range vowels {\n        text = text.replace(vowel, \"\")\n\
    \    }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp135clj_r_test.go:22:21: text.replace undefined (type string has no field
    or method replace)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073449
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n\n    for _, r := range text {\n        if !contains(vowels, r) {\n\
    \            result = result + string(r)\n        }\n    }\n\n    return result\n\
    }\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmprf28g4j0_test.go:24:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073449
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    for _, char := range text {\n        if char == 'a' ||\
    \ char == 'e' || char == 'i' || char == 'o' || char == 'u' || char == 'A' || char\
    \ == 'E' || char == 'I' || char == 'O' || char == 'U' {\n            continue\n\
    \        }\n        return text\n    }\n    return text\n}\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__1\
    \ (0.00s)\n        tmpjwfa29zj_test.go:47: expected 'bcdf\n            ghjklm',\
    \ got 'abcdef\n            ghijklm'\n    --- FAIL: TestRemove_Vowels/test_num__2\
    \ (0.00s)\n        tmpjwfa29zj_test.go:47: expected 'fdcb', got 'fedcba'\n   \
    \ --- FAIL: TestRemove_Vowels/test_num__3 (0.00s)\n        tmpjwfa29zj_test.go:47:\
    \ expected '', got 'eeeee'\n    --- FAIL: TestRemove_Vowels/test_num__4 (0.00s)\n\
    \        tmpjwfa29zj_test.go:47: expected 'cB', got 'acBAA'\n    --- FAIL: TestRemove_Vowels/test_num__5\
    \ (0.00s)\n        tmpjwfa29zj_test.go:47: expected 'cB', got 'EcBOO'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073449
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    var newText string = \"\"\n    for _, letter := range\
    \ text {\n        if letter == 'a' || letter == 'A' || letter == 'e' || letter\
    \ == 'E' || letter == 'i' || letter == 'I' || letter == 'o' || letter == 'O' ||\
    \ letter == 'u' || letter == 'U' {\n            continue\n        } else {\n \
    \           newText += letter\n        }\n    }\n    return newText\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp_gz57gn5_test.go:25:13: invalid operation: newText += letter (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073450
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    var vowels = \"aeiouAEIOU\"\n    for _, i := range []byte(text)\
    \ {\n        for _, j := range vowels {\n            if i == j {\n           \
    \     text = string(text[:i]) + string(text[i+1:]) // deletes character\n    \
    \        }\n        }\n    }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp2q72p6lo_test.go:23:21: invalid operation: i == j (mismatched types byte
    and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073451
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    var newText string\n\n    for _, c := range text {\n \
    \       if c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n      \
    \      newText += c\n        }\n    }\n\n    return newText\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpua8pv_xy_test.go:24:13: invalid operation: newText += c (mismatched types
    string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073451
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    // Your code here\n    for _, letter := range text {\n\
    \        if letter != 'a' && letter != 'e' && letter != 'i' && letter != 'o' &&\
    \ letter != 'u' && letter != 'A' && letter != 'E' && letter != 'I' && letter !=\
    \ 'O' && letter != 'U' && letter != 'a' && letter != 'e' && letter != 'i' && letter\
    \ != 'o' && letter != 'u' {\n            text := text + letter\n        }\n  \
    \  }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp8p0agiew_test.go:23:21: invalid operation: text + letter (mismatched types
    string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073451
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    // Write your function here\n    // Hint: Use a regular\
    \ expression to remove all non-vowel characters\n    return \"\"\n}\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__1\
    \ (0.00s)\n        tmpy35_2oyj_test.go:43: expected 'bcdf\n            ghjklm',\
    \ got ''\n    --- FAIL: TestRemove_Vowels/test_num__2 (0.00s)\n        tmpy35_2oyj_test.go:43:\
    \ expected 'fdcb', got ''\n    --- FAIL: TestRemove_Vowels/test_num__4 (0.00s)\n\
    \        tmpy35_2oyj_test.go:43: expected 'cB', got ''\n    --- FAIL: TestRemove_Vowels/test_num__5\
    \ (0.00s)\n        tmpy35_2oyj_test.go:43: expected 'cB', got ''\n    --- FAIL:\
    \ TestRemove_Vowels/test_num__6 (0.00s)\n        tmpy35_2oyj_test.go:43: expected\
    \ 'ybcd', got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073451
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    chars := []rune(text)\n    for _, char := range chars\
    \ {\n        if char >= 'a' && char <= 'z' {\n            continue\n        }\n\
    \        if char >= 'A' && char <= 'Z' {\n            continue\n        }\n  \
    \      if char == '_' {\n            continue\n        }\n        return text\
    \ + string(char)\n    }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__1\
    \ (0.00s)\n        tmpraxa7ato_test.go:55: expected 'bcdf\n            ghjklm',\
    \ got 'abcdef\n            ghijklm\n            '\n    --- FAIL: TestRemove_Vowels/test_num__2\
    \ (0.00s)\n        tmpraxa7ato_test.go:55: expected 'fdcb', got 'fedcba'\n   \
    \ --- FAIL: TestRemove_Vowels/test_num__3 (0.00s)\n        tmpraxa7ato_test.go:55:\
    \ expected '', got 'eeeee'\n    --- FAIL: TestRemove_Vowels/test_num__4 (0.00s)\n\
    \        tmpraxa7ato_test.go:55: expected 'cB', got 'acBAA'\n    --- FAIL: TestRemove_Vowels/test_num__5\
    \ (0.00s)\n        tmpraxa7ato_test.go:55: expected 'cB', got 'EcBOO'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073451
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I',\
    \ 'O', 'U'}\n    text := []rune(text)\n    for idx, r := range text {\n      \
    \  if idx == 0 || r != text[0] {\n            if r != 'a' || r != 'e' || r !=\
    \ 'i' || r != 'o' || r != 'u' {\n                text[idx] = r\n            }\n\
    \        }\n    }\n    return string(text)\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpqf45ixdp_test.go:20:5: vowels declared but not used

    /tmp/tmpqf45ixdp_test.go:21:10: no new variables on left side of :=

    /tmp/tmpqf45ixdp_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmpqf45ixdp_test.go:23:29: invalid operation: r != text[0] (mismatched types
    rune and byte)

    /tmp/tmpqf45ixdp_test.go:25:17: cannot assign to text[idx] (value of type byte)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073451
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    for _, char := range text {\n        if char == 'a' ||\
    \ char == 'e' || char == 'i' || char == 'o' || char == 'u' {\n            continue\n\
    \        }\n        return text\n    }\n    return \"\"\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__1\
    \ (0.00s)\n        tmpoa6la46h_test.go:48: expected 'bcdf\n            ghjklm',\
    \ got 'abcdef\n            ghijklm'\n    --- FAIL: TestRemove_Vowels/test_num__2\
    \ (0.00s)\n        tmpoa6la46h_test.go:48: expected 'fdcb', got 'fedcba'\n   \
    \ --- FAIL: TestRemove_Vowels/test_num__4 (0.00s)\n        tmpoa6la46h_test.go:48:\
    \ expected 'cB', got 'acBAA'\n    --- FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n\
    \        tmpoa6la46h_test.go:48: expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073451
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    var letters = make([]rune, 0, len(text))\n    for _, char\
    \ := range text {\n        letters = append(letters, unicode.ToLower(char))\n\
    \    }\n    return strings.Join(letters[:], \"\")\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpiq7de3au_test.go:22:35: undefined: unicode

    /tmp/tmpiq7de3au_test.go:24:12: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073451
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    text := strings.ToLower(text)\n    return strings.NewReplacer(\"\
    a\", \"A\", \"e\", \"E\", \"i\", \"I\", \"o\", \"O\", \"u\", \"U\", \" \", \"\"\
    ).Replace(text)\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpq6r0bhq8_test.go:20:10: no new variables on left side of :=

    /tmp/tmpq6r0bhq8_test.go:20:13: undefined: strings

    /tmp/tmpq6r0bhq8_test.go:21:12: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073451
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    // Remove vowels from string.\n    var result string =\
    \ \"\"\n    for i := 0; i < len(text); i++ {\n        if text[i] != \"a\" && text[i]\
    \ != \"e\" && text[i] != \"i\" && text[i] != \"o\" && text[i] != \"u\" && text[i]\
    \ != \"y\" {\n            result += text[i]\n        }\n    }\n    return result\n\
    }\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp5oqpbbwi_test.go:23:23: invalid operation: text[i] != "a" (mismatched
    types byte and untyped string)

    /tmp/tmp5oqpbbwi_test.go:23:41: invalid operation: text[i] != "e" (mismatched
    types byte and untyped string)

    /tmp/tmp5oqpbbwi_test.go:23:59: invalid operation: text[i] != "i" (mismatched
    types byte and untyped string)

    /tmp/tmp5oqpbbwi_test.go:23:77: invalid operation: text[i] != "o" (mismatched
    types byte and untyped string)

    /tmp/tmp5oqpbbwi_test.go:23:95: invalid operation: text[i] != "u" (mismatched
    types byte and untyped string)

    /tmp/tmp5oqpbbwi_test.go:23:113: invalid operation: text[i] != "y" (mismatched
    types byte and untyped string)

    /tmp/tmp5oqpbbwi_test.go:24:13: invalid operation: result += text[i] (mismatched
    types string and byte)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073451
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    var vowels = map[rune]bool{\n        'a':  true,\n   \
    \     'o':  true,\n        'e':  true,\n        'i':  true,\n        'u':  true,\n\
    \        'A':  true,\n        'O':  true,\n        'E':  true,\n        'I': \
    \ true,\n        'U':  true,\n        'i':  true,\n        'u':  true,\n     \
    \   'A':  true,\n        'O':  true,\n        'E':  true,\n        'I':  true,\n\
    \        'U':  true,\n        'e':  true,\n        'i':  true,\n        'u': \
    \ true,\n        'A':  true,\n        'O':  true,\n        'E':  true,\n     \
    \   'I':  true,\n        'U':  true,\n        'a':  true,\n        'o':  true,\n\
    \        'e':  true,\n        'i':  true,\n        'u':  true,\n    }\n    for\
    \ _, r := range text {\n        if !vowels[r] {\n            return text\n   \
    \     }\n    }\n    return text\n}\nfunc TestRemove_Vowels(t *testing.T) {\n \
    \ candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp2yd3eibc_test.go:31:9: duplicate key 105 in map literal

    /tmp/tmp2yd3eibc_test.go:32:9: duplicate key 117 in map literal

    /tmp/tmp2yd3eibc_test.go:33:9: duplicate key 65 in map literal

    /tmp/tmp2yd3eibc_test.go:34:9: duplicate key 79 in map literal

    /tmp/tmp2yd3eibc_test.go:35:9: duplicate key 69 in map literal

    /tmp/tmp2yd3eibc_test.go:36:9: duplicate key 73 in map literal

    /tmp/tmp2yd3eibc_test.go:37:9: duplicate key 85 in map literal

    /tmp/tmp2yd3eibc_test.go:38:9: duplicate key 101 in map literal

    /tmp/tmp2yd3eibc_test.go:39:9: duplicate key 105 in map literal

    /tmp/tmp2yd3eibc_test.go:40:9: duplicate key 117 in map literal

    /tmp/tmp2yd3eibc_test.go:40:9: too many errors

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073451
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    \n    // return an empty string if input is empty string\n\
    \    if text == \"\" {\n        return \"\"\n    }\n    \n    // initialize a\
    \ variable to store vowels\n    var vowels []rune\n    \n    // get the vowels\
    \ in the string and store them in the variable\n    vowels = append(vowels, rune{'a',\
    \ 'e', 'i', 'o', 'u'})\n    \n    // for each character in the input string if\
    \ the character is vowel\n    // remove the vowel from the string and append the\
    \ remaining characters\n    // to the return string variable.\n    for _, v :=\
    \ range text {\n        if unicode.IsVowel(v) {\n            text = text[len(v)+1:]\n\
    \        } else {\n            text = text[0:len(text) - 1]\n        }\n    }\n\
    \    \n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpn3ula2mr_test.go:30:29: invalid composite literal type rune

    /tmp/tmpn3ula2mr_test.go:36:12: undefined: unicode

    /tmp/tmpn3ula2mr_test.go:37:29: invalid argument: v (variable of type rune) for
    len

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073451
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    var chars = make([]rune, len(text))\n    for i, c := range\
    \ text {\n        chars[i] = rune(c)\n    }\n    chars = removeVowels(chars)\n\
    \    return string(chars)\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpathihakt_test.go:24:13: undefined: removeVowels

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073451
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    text = strings.ToLower(text)\n    text = strings.Trim(text,\
    \ \"aeiou\")\n    text = strings.Trim(text, \"AEIOUaeiouAEIOU\")\n    text = strings.Replace(text,\
    \ \"a\", \"\", -1)\n    text = strings.Replace(text, \"e\", \"\", -1)\n    text\
    \ = strings.Replace(text, \"i\", \"\", -1)\n    text = strings.Replace(text, \"\
    o\", \"\", -1)\n    text = strings.Replace(text, \"u\", \"\", -1)\n    return\
    \ text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpl54mh5ll_test.go:20:12: undefined: strings

    /tmp/tmpl54mh5ll_test.go:21:12: undefined: strings

    /tmp/tmpl54mh5ll_test.go:22:12: undefined: strings

    /tmp/tmpl54mh5ll_test.go:23:12: undefined: strings

    /tmp/tmpl54mh5ll_test.go:24:12: undefined: strings

    /tmp/tmpl54mh5ll_test.go:25:12: undefined: strings

    /tmp/tmpl54mh5ll_test.go:26:12: undefined: strings

    /tmp/tmpl54mh5ll_test.go:27:12: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073451
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    text := text[:0]\n    for _, c := range text {\n     \
    \   if c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n          \
    \  continue\n        }\n        text = append(text, c)\n    }\n    return string(text)\n\
    }\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp9pwru36v_test.go:20:10: no new variables on left side of :=

    /tmp/tmp9pwru36v_test.go:25:23: first argument to append must be a slice; have
    text (variable of type string)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073451
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    text := text[:0]\n    for _, vowel := range \"aeiou\"\
    \ {\n        text = append(text, text[len(text)-len(vowel):len(text)])\n    }\n\
    \    return string(text)\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpzgaakicu_test.go:20:10: no new variables on left side of :=

    /tmp/tmpzgaakicu_test.go:22:23: first argument to append must be a slice; have
    text (variable of type string)

    /tmp/tmpzgaakicu_test.go:22:48: invalid argument: vowel (variable of type rune)
    for len

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073451
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    var chars = []rune(stringToRune(text))\n\n    for i :=\
    \ 0; i < len(chars); i++ {\n        if !isVowel(chars[i]) {\n            chars[i]\
    \ = ' '\n        }\n    }\n\n    return string(chars)\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpmpk8n936_test.go:20:24: undefined: stringToRune

    /tmp/tmpmpk8n936_test.go:23:13: undefined: isVowel

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073451
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    text += \"a\"\n    return text[0:len(text)-1]\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__1\
    \ (0.00s)\n        tmphwdfpkfk_test.go:43: expected 'bcdf\n            ghjklm',\
    \ got 'abcdef\n            ghijklm'\n    --- FAIL: TestRemove_Vowels/test_num__2\
    \ (0.00s)\n        tmphwdfpkfk_test.go:43: expected 'fdcb', got 'fedcba'\n   \
    \ --- FAIL: TestRemove_Vowels/test_num__3 (0.00s)\n        tmphwdfpkfk_test.go:43:\
    \ expected '', got 'eeeee'\n    --- FAIL: TestRemove_Vowels/test_num__4 (0.00s)\n\
    \        tmphwdfpkfk_test.go:43: expected 'cB', got 'acBAA'\n    --- FAIL: TestRemove_Vowels/test_num__5\
    \ (0.00s)\n        tmphwdfpkfk_test.go:43: expected 'cB', got 'EcBOO'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073452
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    var vowels []rune\n    for _, v := range \"aeiouAEIOU\"\
    \ {\n        vowels = append(vowels, v)\n    }\n    for _, v := range text {\n\
    \        if _, ok := vowels[unicode.ToLower(v)]; ok {\n            delete(vowels,\
    \ unicode.ToLower(v))\n        }\n    }\n    return string(vowels)\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpe98s47ux_test.go:25:21: assignment mismatch: 2 variables but 1 value

    /tmp/tmpe98s47ux_test.go:25:28: undefined: unicode

    /tmp/tmpe98s47ux_test.go:26:20: invalid argument: vowels (variable of type []rune)
    is not a map

    /tmp/tmpe98s47ux_test.go:26:28: undefined: unicode

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073451
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    var result = \"\"\n    firstVowelFound := false\n    for\
    \ _, char := range text {\n        if char == 'a' {\n            if !firstVowelFound\
    \ {\n                result = result + char\n                firstVowelFound =\
    \ true\n            }\n        } else {\n            if firstVowelFound {\n  \
    \              result = result + char\n                firstVowelFound = false\n\
    \            }\n        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpqundrqmw_test.go:25:26: invalid operation: result + char (mismatched types
    string and rune)

    /tmp/tmpqundrqmw_test.go:30:26: invalid operation: result + char (mismatched types
    string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073451
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n\
    \    result := \"\"\n    for _, letter := range text {\n        if letter == vowels[0]\
    \ {\n            result += \"B\"\n        } else if letter == vowels[1] {\n  \
    \          result += \"b\"\n        } else if letter == vowels[2] {\n        \
    \    result += \"Z\"\n        } else if letter == vowels[3] {\n            result\
    \ += \"z\"\n        } else if letter == vowels[4] {\n            result += \"\
    y\"\n        } else if letter == vowels[5] {\n            result += \"Y\"\n  \
    \      }\n    }\n    return result\n}\nfunc TestRemove_Vowels(t *testing.T) {\n\
    \  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpxrwcvts6_test.go:23:22: invalid operation: letter == vowels[0] (mismatched
    types rune and string)

    /tmp/tmpxrwcvts6_test.go:25:29: invalid operation: letter == vowels[1] (mismatched
    types rune and string)

    /tmp/tmpxrwcvts6_test.go:27:29: invalid operation: letter == vowels[2] (mismatched
    types rune and string)

    /tmp/tmpxrwcvts6_test.go:29:29: invalid operation: letter == vowels[3] (mismatched
    types rune and string)

    /tmp/tmpxrwcvts6_test.go:31:29: invalid operation: letter == vowels[4] (mismatched
    types rune and string)

    /tmp/tmpxrwcvts6_test.go:33:29: invalid operation: letter == vowels[5] (mismatched
    types rune and string)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073451
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    // Write your code here.\n    return strings.ToLower(strings.Replace(strings.Replace(strings.Replace(text,\
    \ \" \", \"\", -1), \"a\", \"A\", -1), \"o\", \"O\", -1))\n}\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpvzsb23lq_test.go:21:12: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073451
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    for _, char := range text {\n        switch char {\n \
    \       default:\n            continue\n        case 'a':\n        case \"e\"\
    :\n        case \"i\":\n        case \"o\":\n        case \"u\":\n           \
    \ continue\n        case 'A':\n        case \"E\":\n        case \"I\":\n    \
    \    case \"O\":\n        case \"U\":\n            continue\n        }\n     \
    \   text = text[:len(text)-1]\n        break\n    }\n    return text\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpw1j2e_ox_test.go:25:14: cannot convert "e" (untyped string constant) to
    rune

    /tmp/tmpw1j2e_ox_test.go:26:14: cannot convert "i" (untyped string constant) to
    rune

    /tmp/tmpw1j2e_ox_test.go:27:14: cannot convert "o" (untyped string constant) to
    rune

    /tmp/tmpw1j2e_ox_test.go:28:14: cannot convert "u" (untyped string constant) to
    rune

    /tmp/tmpw1j2e_ox_test.go:31:14: cannot convert "E" (untyped string constant) to
    rune

    /tmp/tmpw1j2e_ox_test.go:32:14: cannot convert "I" (untyped string constant) to
    rune

    /tmp/tmpw1j2e_ox_test.go:33:14: cannot convert "O" (untyped string constant) to
    rune

    /tmp/tmpw1j2e_ox_test.go:34:14: cannot convert "U" (untyped string constant) to
    rune

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073452
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    text := string(text)\n    for i := 0; i < len(text); i++\
    \ {\n        if text[i] == 'a' || text[i] == 'A' || text[i] == 'e' || text[i]\
    \ == 'E' || text[i] == 'i' || text[i] == 'I' || text[i] == 'o' || text[i] == 'O'\
    \ || text[i] == 'u' || text[i] == 'U' {\n            text := text[0 : i]\n   \
    \     }\n    }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n\
    \  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp9yyh1u_x_test.go:20:10: no new variables on left side of :=

    /tmp/tmp9yyh1u_x_test.go:23:13: text declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073453
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    s := \"\"\n    for _, c := range text {\n        if c\
    \ != '.' && c != '?' && c != '!' && c != '\\'' && c != '\"' && c != '!' && c !=\
    \ '-' {\n            s += c\n        }\n    }\n    return s\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpskrt_ydd_test.go:23:13: invalid operation: s += c (mismatched types string
    and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073453
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    for _, char := range text {\n        if char == 'a' ||\
    \ char == 'e' || char == 'i' || char == 'o' || char == 'u' || char == 'A' || char\
    \ == 'E' || char == 'I' || char == 'O' || char == 'U' {\n            text = text[:len(text)-1]\
    \ + text[len(text)-1]\n        }\n    }\n    return text\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpi54pkiz2_test.go:22:24: invalid operation: text[:len(text) - 1] + text[len(text)
    - 1] (mismatched types string and byte)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073453
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    text += text\n    return text\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__1\
    \ (0.00s)\n        tmpiqzq7x6s_test.go:43: expected 'bcdf\n            ghjklm',\
    \ got 'abcdef\n            ghijklmabcdef\n            ghijklm'\n    --- FAIL:\
    \ TestRemove_Vowels/test_num__2 (0.00s)\n        tmpiqzq7x6s_test.go:43: expected\
    \ 'fdcb', got 'fedcbafedcba'\n    --- FAIL: TestRemove_Vowels/test_num__3 (0.00s)\n\
    \        tmpiqzq7x6s_test.go:43: expected '', got 'eeeeeeeeee'\n    --- FAIL:\
    \ TestRemove_Vowels/test_num__4 (0.00s)\n        tmpiqzq7x6s_test.go:43: expected\
    \ 'cB', got 'acBAAacBAA'\n    --- FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n\
    \        tmpiqzq7x6s_test.go:43: expected 'cB', got 'EcBOOEcBOO'\n    --- FAIL:\
    \ TestRemove_Vowels/test_num__6 (0.00s)\n        tmpiqzq7x6s_test.go:43: expected\
    \ 'ybcd', got 'ybcdybcd'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073453
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    if text == \"\" {\n        return \"\"\n    }\n\n    vowels\
    \ := []rune{'a', 'e', 'i', 'o', 'u'}\n\n    buffer := []rune(text)\n\n    for\
    \ i := 0; i < len(buffer); i++ {\n        if buffer[i] == 'a' || buffer[i] ==\
    \ 'e' || buffer[i] == 'i' || buffer[i] == 'o' || buffer[i] == 'u' {\n        \
    \    buffer = append(buffer[:i], buffer[i+1:]...)\n        }\n    }\n\n    return\
    \ string(buffer)\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate :=\
    \ remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpcur71sck_test.go:24:5: vowels declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073453
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    var filtered = make([]rune, len(text))\n    for i := range\
    \ text {\n        if text[i] >= 'a' && text[i] <= 'z' {\n            filtered[i]\
    \ = text[i]\n        }\n    }\n    return string(filtered)\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpmr41vsbj_test.go:23:27: cannot use text[i] (value of type byte) as type
    rune in assignment

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073453
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    var result string\n    for _, letter := range text {\n\
    \        if letter == 'a' || letter == 'e' || letter == 'i' || letter == 'o' ||\
    \ letter == 'u' {\n            result = result + letter\n        }\n    }\n  \
    \  return result\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate :=\
    \ remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpci1hec9__test.go:23:22: invalid operation: result + letter (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073453
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    var result strings.Builder\n\n    // This code will loop\
    \ through all letters in string and check if a letter is a vowel.\n    // If a\
    \ letter is a vowel, we will skip it.\n    for _, letter := range text {\n   \
    \     switch letter {\n        case 'a':\n        case 'e':\n        case 'i':\n\
    \        case 'o':\n        case 'u':\n            continue\n        default:\n\
    \            fmt.Fprintf(&result, \"%c\", letter)\n        }\n    }\n\n    return\
    \ result.String()\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate :=\
    \ remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp2n9u0c02_test.go:20:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073453
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    if text == \"\" {\n        return \"\"\n    }\n    vowels\
    \ := []rune{'a', 'e', 'i', 'o', 'u'}\n    for _, r := range text {\n        if\
    \ !contains(vowels, r) {\n            text += string([]rune{r})\n        }\n \
    \   }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpn0nytq21_test.go:25:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073453
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    for i := 0; i < len(text); i++ {\n        if text[i] >=\
    \ 'a' && text[i] <= 'z' {\n            text := text[:i] + text[i+1:]\n       \
    \     break\n        }\n    }\n    return text\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpb7t1j_od_test.go:22:13: text declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073453
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    text := strings.ToLower(text)\n    for _, letter := range\
    \ text {\n        if letter != \"a\" && letter != \"e\" && letter != \"i\" &&\
    \ letter != \"o\" && letter != \"u\" {\n            text := strings.Replace(text,\
    \ letter, \"\", -1)\n        }\n    }\n    return text\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmphljcskx6_test.go:20:10: no new variables on left side of :=

    /tmp/tmphljcskx6_test.go:20:13: undefined: strings

    /tmp/tmphljcskx6_test.go:22:22: invalid operation: letter != "a" (mismatched types
    rune and untyped string)

    /tmp/tmphljcskx6_test.go:22:39: invalid operation: letter != "e" (mismatched types
    rune and untyped string)

    /tmp/tmphljcskx6_test.go:22:56: invalid operation: letter != "i" (mismatched types
    rune and untyped string)

    /tmp/tmphljcskx6_test.go:22:73: invalid operation: letter != "o" (mismatched types
    rune and untyped string)

    /tmp/tmphljcskx6_test.go:22:90: invalid operation: letter != "u" (mismatched types
    rune and untyped string)

    /tmp/tmphljcskx6_test.go:23:21: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073453
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    return text // Replace this with your code\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__1\
    \ (0.00s)\n        tmp658renqo_test.go:42: expected 'bcdf\n            ghjklm',\
    \ got 'abcdef\n            ghijklm'\n    --- FAIL: TestRemove_Vowels/test_num__2\
    \ (0.00s)\n        tmp658renqo_test.go:42: expected 'fdcb', got 'fedcba'\n   \
    \ --- FAIL: TestRemove_Vowels/test_num__3 (0.00s)\n        tmp658renqo_test.go:42:\
    \ expected '', got 'eeeee'\n    --- FAIL: TestRemove_Vowels/test_num__4 (0.00s)\n\
    \        tmp658renqo_test.go:42: expected 'cB', got 'acBAA'\n    --- FAIL: TestRemove_Vowels/test_num__5\
    \ (0.00s)\n        tmp658renqo_test.go:42: expected 'cB', got 'EcBOO'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073453
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    for _, char := range text {\n        if char == 'a' ||\
    \ char == 'e' || char == 'i' || char == 'o' || char == 'u' {\n            continue\n\
    \        }\n        return text\n    }\n    return \"\"\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__1\
    \ (0.00s)\n        tmpoa6la46h_test.go:48: expected 'bcdf\n            ghjklm',\
    \ got 'abcdef\n            ghijklm'\n    --- FAIL: TestRemove_Vowels/test_num__2\
    \ (0.00s)\n        tmpoa6la46h_test.go:48: expected 'fdcb', got 'fedcba'\n   \
    \ --- FAIL: TestRemove_Vowels/test_num__4 (0.00s)\n        tmpoa6la46h_test.go:48:\
    \ expected 'cB', got 'acBAA'\n    --- FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n\
    \        tmpoa6la46h_test.go:48: expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073451
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    // Write code here.\n    return \"\"\n}\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__1\
    \ (0.00s)\n        tmpzqik_lpk_test.go:42: expected 'bcdf\n            ghjklm',\
    \ got ''\n    --- FAIL: TestRemove_Vowels/test_num__2 (0.00s)\n        tmpzqik_lpk_test.go:42:\
    \ expected 'fdcb', got ''\n    --- FAIL: TestRemove_Vowels/test_num__4 (0.00s)\n\
    \        tmpzqik_lpk_test.go:42: expected 'cB', got ''\n    --- FAIL: TestRemove_Vowels/test_num__5\
    \ (0.00s)\n        tmpzqik_lpk_test.go:42: expected 'cB', got ''\n    --- FAIL:\
    \ TestRemove_Vowels/test_num__6 (0.00s)\n        tmpzqik_lpk_test.go:42: expected\
    \ 'ybcd', got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073453
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := map[rune]bool{\n        'a'    : true,\n   \
    \     'e'    : true,\n        'i'    : true,\n        'o'    : true,\n       \
    \ 'u'    : true,\n        'y'    : true,\n        'A'    : true,\n        'E'\
    \    : true,\n        'I'    : true,\n        'O'    : true,\n        'U'    :\
    \ true,\n        'Y'    : true,\n        'z'    : true,\n        'Z'    : true,\n\
    \        'c'    : true,\n        'C'    : true,\n        'd'    : true,\n    \
    \    'D'    : true,\n        'f'    : true,\n        'F'    : true,\n        'g'\
    \    : true,\n        'G'    : true,\n        'h'    : true,\n        'H'    :\
    \ true,\n        'j'    : true,\n        'J'    : true,\n        'k'    : true,\n\
    \        'K'    : true,\n        'l'    : true,\n        'L'    : true,\n    \
    \    'm'    : true,\n        'M'    : true,\n        'n'    : true,\n        'N'\
    \    : true,\n        'p'    : true,\n        'P'    : true,\n        'q'    :\
    \ true,\n        'Q'    : true,\n        'r'    : true,\n        'R'    : true,\n\
    \        's'    : true,\n        'S'    : true,\n        't'    : true,\n    \
    \    'T'    : true,\n        'v'    : true,\n        'V'    : true,\n        'w'\
    \    : true,\n        'W'    : true,\n        'x'    : true,\n        'X'    :\
    \ true,\n        'y'    : true,\n        'Z'    : true,\n        '0'    : true,\n\
    \        '1'    : true,\n        '2'    : true,\n        '3'    : true,\n    \
    \    '4'    : true,\n        '5'    : true,\n        '6'    : true,\n        '7'\
    \    : true,\n        '8'    : true,\n        '9'    : true,\n        '-'    :\
    \ true,\n        '.'    : true,\n        '_'    : true,\n    }\n\n    for _, c\
    \ := range text {\n        if c, ok := vowels[c]; ok {\n            text = text[:len(text)-1]\n\
    \            text += text[len(c):]\n        }\n    }\n    return text\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpe3027mha_test.go:71:9: duplicate key 121 in map literal

    /tmp/tmpe3027mha_test.go:72:9: duplicate key 90 in map literal

    /tmp/tmpe3027mha_test.go:91:30: invalid argument: c (variable of type bool) for
    len

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073453
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    var result string\n    for _, letter := range text {\n\
    \        if letter == \"a\" || letter == \"A\" {\n            result = result\
    \ + letter\n        }\n        if letter == \"e\" || letter == \"E\" {\n     \
    \       result = result + letter\n        }\n        if letter == \"i\" || letter\
    \ == \"I\" {\n            result = result + letter\n        }\n        if letter\
    \ == \"o\" || letter == \"O\" {\n            result = result + letter\n      \
    \  }\n        if letter == \"u\" || letter == \"U\" {\n            result = result\
    \ + letter\n        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp12_r6lsp_test.go:22:22: invalid operation: letter == "a" (mismatched types
    rune and untyped string)

    /tmp/tmp12_r6lsp_test.go:22:39: invalid operation: letter == "A" (mismatched types
    rune and untyped string)

    /tmp/tmp12_r6lsp_test.go:23:22: invalid operation: result + letter (mismatched
    types string and rune)

    /tmp/tmp12_r6lsp_test.go:25:22: invalid operation: letter == "e" (mismatched types
    rune and untyped string)

    /tmp/tmp12_r6lsp_test.go:25:39: invalid operation: letter == "E" (mismatched types
    rune and untyped string)

    /tmp/tmp12_r6lsp_test.go:26:22: invalid operation: result + letter (mismatched
    types string and rune)

    /tmp/tmp12_r6lsp_test.go:28:22: invalid operation: letter == "i" (mismatched types
    rune and untyped string)

    /tmp/tmp12_r6lsp_test.go:28:39: invalid operation: letter == "I" (mismatched types
    rune and untyped string)

    /tmp/tmp12_r6lsp_test.go:29:22: invalid operation: result + letter (mismatched
    types string and rune)

    /tmp/tmp12_r6lsp_test.go:31:22: invalid operation: letter == "o" (mismatched types
    rune and untyped string)

    /tmp/tmp12_r6lsp_test.go:31:22: too many errors

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073453
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a','e','i','o','u'}\n    text := []rune{text}\n\
    \n    idx := 0\n    for idx < len(text) {\n        if idx < len(text) {\n    \
    \        if text[idx] == vowels[idx] {\n                continue\n           \
    \ }\n        }\n        text[idx] = text[idx]\n        idx += 1\n    }\n    return\
    \ string(text)\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp13mi1_3z_test.go:21:10:\
    \ no new variables on left side of :=\n/tmp/tmp13mi1_3z_test.go:21:13: cannot\
    \ use []rune{\u2026} (value of type []rune) as type string in assignment\n/tmp/tmp13mi1_3z_test.go:21:20:\
    \ cannot use text (variable of type string) as type rune in array or slice literal\n\
    /tmp/tmp13mi1_3z_test.go:26:29: invalid operation: text[idx] == vowels[idx] (mismatched\
    \ types byte and rune)\n/tmp/tmp13mi1_3z_test.go:30:9: cannot assign to text[idx]\
    \ (value of type byte)\n"
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073453
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    text := string(text)\n\n    for _, r := range vowels {\n\
    \        text = strings.Replace(text, r, \"-\", -1)\n    }\n\n    return text\n\
    }\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpvp8opb7t_test.go:20:10: no new variables on left side of :=

    /tmp/tmpvp8opb7t_test.go:22:23: undefined: vowels

    /tmp/tmpvp8opb7t_test.go:23:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073453
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    return fmt.Sprintf(\"%q\", text) // This ensures that\
    \ we don't lose our backslashes in strings.\n}\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__0\
    \ (0.00s)\n        tmpgvdj58yk_test.go:41: expected '', got '\"\"'\n    --- FAIL:\
    \ TestRemove_Vowels/test_num__1 (0.00s)\n        tmpgvdj58yk_test.go:41: expected\
    \ 'bcdf\n            ghjklm', got '\"abcdef\\nghijklm\"'\n    --- FAIL: TestRemove_Vowels/test_num__2\
    \ (0.00s)\n        tmpgvdj58yk_test.go:41: expected 'fdcb', got '\"fedcba\"'\n\
    \    --- FAIL: TestRemove_Vowels/test_num__3 (0.00s)\n        tmpgvdj58yk_test.go:41:\
    \ expected '', got '\"eeeee\"'\n    --- FAIL: TestRemove_Vowels/test_num__4 (0.00s)\n\
    \        tmpgvdj58yk_test.go:41: expected 'cB', got '\"acBAA\"'\n    --- FAIL:\
    \ TestRemove_Vowels/test_num__5 (0.00s)\n        tmpgvdj58yk_test.go:41: expected\
    \ 'cB', got '\"EcBOO\"'\n    --- FAIL: TestRemove_Vowels/test_num__6 (0.00s)\n\
    \        tmpgvdj58yk_test.go:41: expected 'ybcd', got '\"ybcd\"'\nFAIL\nFAIL\t\
    command-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073454
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    var text string = text\n\n    for i := 0; i < len(text);\
    \ i++ {\n        if text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i]\
    \ == 'o' || text[i] == 'u' {\n            text = text[0:i] + text[i+1:]\n    \
    \    }\n    }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n\
    \  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp1rf_rs0x_test.go:20:9:\
    \ text redeclared in this block\n\t/tmp/tmp1rf_rs0x_test.go:19:20: other declaration\
    \ of text\n"
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073453
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    text := removeVowels(text)\n    return text\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp49ivg3et_test.go:20:10: no new variables on left side of :=

    /tmp/tmp49ivg3et_test.go:20:13: undefined: removeVowels

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073453
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune(\"aeiouy\")\n    for _, v := range vowels\
    \ {\n        text = strings.Replace(text, v, \"\", -1)\n    }\n    return text\n\
    }\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpjdnrqz00_test.go:22:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073384
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    buffer := []rune(text)\n\n    // We loop over each character\
    \ in the buffer and check if it is vowel using the unicode.Is_Vowel function.\n\
    \    // We are building a new buffer using buffer and loop over each character\
    \ in that buffer.\n    // The unicode.Is_Vowel function returns a bool. We are\
    \ using an if statement to check if the bool is true or false.\n    // If the\
    \ bool is true we append the character to the new buffer but if the bool is false\
    \ we ignore it.\n    for _, char := range buffer {\n        if unicode.Is_Vowel(char)\
    \ {\n            buffer = append(buffer, 0)\n        }\n    }\n\n    // Create\
    \ a new string using buffer and return the new string.\n    return string(buffer)\n\
    }\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpzj3ysp46_test.go:27:12: undefined: unicode

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073453
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n\
    \    for _, c := range text {\n        if !contains(vowels, c) {\n           \
    \ return text\n        }\n    }\n    return text\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmptpu3l0_3_test.go:22:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073454
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := \"aeiouAEIOU\"\n\n    for _, c := range text\
    \ {\n        if strings.ContainsRune(vowels, c) {\n            text = strings.Replace(text,\
    \ c, \"\", -1)\n        }\n    }\n    return text\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp2csgwzz9_test.go:23:12: undefined: strings

    /tmp/tmp2csgwzz9_test.go:24:20: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073454
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    if len(text) == 0 {\n        return \"\"\n    }\n\n  \
    \  charToFind := map[rune]bool{'a': True, 'e': True, 'i': True, 'o': True, 'u':\
    \ True}\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result := \"\"\n\n\
    \    i := 0\n    for ; i < len(text); i++ {\n        char := text[i]\n       \
    \ if !charToFind[char] {\n            result = result + char\n        }\n    \
    \    for _, vowel := range vowels {\n            if char == vowel {\n        \
    \        charToFind[char] = false\n                break\n            }\n    \
    \    }\n    }\n\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpsig021pa_test.go:24:38: undefined: True

    /tmp/tmpsig021pa_test.go:31:24: cannot use char (variable of type byte) as type
    rune in map index

    /tmp/tmpsig021pa_test.go:32:22: invalid operation: result + char (mismatched types
    string and byte)

    /tmp/tmpsig021pa_test.go:35:24: invalid operation: char == vowel (mismatched types
    byte and rune)

    /tmp/tmpsig021pa_test.go:36:28: cannot use char (variable of type byte) as type
    rune in map index

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073455
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, char := range text {\n        if !contains(vowels, char)\
    \ {\n            result += char\n        }\n    }\n    return result\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpgfm3lyfg_test.go:23:13: undefined: contains

    /tmp/tmpgfm3lyfg_test.go:24:13: invalid operation: result += char (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I',\
    \ 'O', 'U'}\n    result := \"\"\n    for _, val := range text {\n        if !contains(vowels,\
    \ val) {\n            result += val\n        }\n    }\n    return result\n}\n\n\
    func TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpl837s8b4_test.go:23:13: undefined: contains

    /tmp/tmpl837s8b4_test.go:24:13: invalid operation: result += val (mismatched types
    string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073455
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    var output []rune\n\n    for _, r := range text {\n  \
    \      if !(r == 'a' || r == 'e' || r == 'i' || r == 'o' || r == 'u' || r == 'A'\
    \ || r == 'E' || r == 'I' || r == 'O' || r == 'U' || r == '0' || r == '1' || r\
    \ == '2' || r == '3' || r == '4' || r == '5' || r == '6' || r == '7' || r == '8'\
    \ || r == '9' || r == 'B' || r == 'C' || r == 'D' || r == 'F' || r == 'Z' || r\
    \ == 'y' || r == 'j' || r == 'k' || r == 'l' || r == 'm' || r == 'n' || r == 'r'\
    \ || r == 's' || r == 't' || r == 'v' || r == 'w' || r == 'x' || r == 'z') {\n\
    \            output = append(output, r)\n        }\n    }\n\n    return string(output)\n\
    }\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__1\
    \ (0.00s)\n        tmpcozfyrfj_test.go:50: expected 'bcdf\n            ghjklm',\
    \ got 'bcdf\n            gh'\n    --- FAIL: TestRemove_Vowels/test_num__4 (0.00s)\n\
    \        tmpcozfyrfj_test.go:50: expected 'cB', got 'c'\n    --- FAIL: TestRemove_Vowels/test_num__5\
    \ (0.00s)\n        tmpcozfyrfj_test.go:50: expected 'cB', got 'c'\n    --- FAIL:\
    \ TestRemove_Vowels/test_num__6 (0.00s)\n        tmpcozfyrfj_test.go:50: expected\
    \ 'ybcd', got 'bcd'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073455
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n\
    \n    // Return empty string if no vowels.\n    if len(text) <= 0 {\n        return\
    \ \"\"\n    }\n\n    // Start from the end of the string and remove every vowel\
    \ until we find a non-vowel.\n    for _, c := range text[len(text)-1:] {\n   \
    \     if !containsAny(vowels, c) {\n            text = text[:len(text)-1] + text[len(text)+1:]\n\
    \            break\n        }\n    }\n\n    return text\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpemrborjw_test.go:29:13: undefined: containsAny

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073455
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    // Your code here\n    vowels := map[rune]bool{\n    \
    \    'a': true,\n        'e': true,\n        'i': true,\n        'o': true,\n\
    \        'u': true,\n    }\n\n    return \"\"\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpxuv93urp_test.go:21:5: vowels declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073455
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    var result string\n    for _, letter := range text {\n\
    \        if letter == 'a' || letter == 'e' || letter == 'i' || letter == 'o' ||\
    \ letter == 'u' {\n            continue\n        }\n        result += letter\n\
    \    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpwib2lsoj_test.go:25:9: invalid operation: result += letter (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073455
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    var vowels []rune = \"aeiouAEIOU\".ToSlice()\n    for\
    \ _, v := range vowels {\n        text = text.replace(v, 'a')\n    }\n    return\
    \ text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpr7oxmk_e_test.go:20:38: "aeiouAEIOU".ToSlice undefined (type untyped string
    has no field or method ToSlice)

    /tmp/tmpr7oxmk_e_test.go:22:21: text.replace undefined (type string has no field
    or method replace)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073455
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    var c string\n    for _, ch := range text {\n        if\
    \ ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u' {\n          \
    \  continue\n        }\n        c = c + string(ch)\n    }\n    return c\n}\n\n\
    func TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmp5rjlnx7x_test.go:49: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmp5rjlnx7x_test.go:49:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073455
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a','e','i','o','u'}\n    result := \"\
    \"\n    for _, character := range text {\n        if strings.ContainsRune(vowels,\
    \ character) {\n            result += character\n        }\n    }\n    return\
    \ result\n}\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp6rtteo28_test.go:23:12: undefined: strings

    /tmp/tmp6rtteo28_test.go:24:13: invalid operation: result += character (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073455
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__1\
    \ (0.00s)\n        tmpdm2859rx_test.go:42: expected 'bcdf\n            ghjklm',\
    \ got 'abcdef\n            ghijklm'\n    --- FAIL: TestRemove_Vowels/test_num__2\
    \ (0.00s)\n        tmpdm2859rx_test.go:42: expected 'fdcb', got 'fedcba'\n   \
    \ --- FAIL: TestRemove_Vowels/test_num__3 (0.00s)\n        tmpdm2859rx_test.go:42:\
    \ expected '', got 'eeeee'\n    --- FAIL: TestRemove_Vowels/test_num__4 (0.00s)\n\
    \        tmpdm2859rx_test.go:42: expected 'cB', got 'acBAA'\n    --- FAIL: TestRemove_Vowels/test_num__5\
    \ (0.00s)\n        tmpdm2859rx_test.go:42: expected 'cB', got 'EcBOO'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073285
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__1\
    \ (0.00s)\n        tmpdm2859rx_test.go:42: expected 'bcdf\n            ghjklm',\
    \ got 'abcdef\n            ghijklm'\n    --- FAIL: TestRemove_Vowels/test_num__2\
    \ (0.00s)\n        tmpdm2859rx_test.go:42: expected 'fdcb', got 'fedcba'\n   \
    \ --- FAIL: TestRemove_Vowels/test_num__3 (0.00s)\n        tmpdm2859rx_test.go:42:\
    \ expected '', got 'eeeee'\n    --- FAIL: TestRemove_Vowels/test_num__4 (0.00s)\n\
    \        tmpdm2859rx_test.go:42: expected 'cB', got 'acBAA'\n    --- FAIL: TestRemove_Vowels/test_num__5\
    \ (0.00s)\n        tmpdm2859rx_test.go:42: expected 'cB', got 'EcBOO'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073285
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := \"aeiouAEIOU\"\n    for _, value := range vowels\
    \ {\n        text = text.replaceAllString(value, \"\")\n    }\n    return text\n\
    }\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpd01sukce_test.go:22:21: text.replaceAllString undefined (type string has
    no field or method replaceAllString)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073455
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    var vowels = \"aeiou\"\n    var result string\n    for\
    \ _, c := range text {\n        for _, v := range vowels {\n            if c ==\
    \ v {\n                text = text[:len(text)-1]\n                result += c\n\
    \                break\n            }\n        }\n    }\n    return result\n}\n\
    \nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpgjb4a2i8_test.go:26:17: invalid operation: result += c (mismatched types
    string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073455
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    if text == \"\" {\n        return \"\"\n    }\n\n    text\
    \ += \"a\"\n    text += \"a\"\n    text += \"a\"\n\n    for i := 0; i < len(text);\
    \ i++ {\n        if text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i]\
    \ == 'o' || text[i] == 'u' {\n            text := text[:i] + text[i+1:]\n    \
    \    }\n    }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n\
    \  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp32v2zgyg_test.go:30:13: text declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073455
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    for _, char := range text {\n        if char == 'a' ||\
    \ char == 'e' || char == 'i' || char == 'o' || char == 'u' {\n            continue\n\
    \        }\n        return text\n    }\n    return text\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__1\
    \ (0.00s)\n        tmp5w_bq2e9_test.go:48: expected 'bcdf\n            ghjklm',\
    \ got 'abcdef\n            ghijklm'\n    --- FAIL: TestRemove_Vowels/test_num__2\
    \ (0.00s)\n        tmp5w_bq2e9_test.go:48: expected 'fdcb', got 'fedcba'\n   \
    \ --- FAIL: TestRemove_Vowels/test_num__3 (0.00s)\n        tmp5w_bq2e9_test.go:48:\
    \ expected '', got 'eeeee'\n    --- FAIL: TestRemove_Vowels/test_num__4 (0.00s)\n\
    \        tmp5w_bq2e9_test.go:48: expected 'cB', got 'acBAA'\n    --- FAIL: TestRemove_Vowels/test_num__5\
    \ (0.00s)\n        tmp5w_bq2e9_test.go:48: expected 'cB', got 'EcBOO'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073456
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    text = text.ToLower()\n    vowels := []rune{'a', 'e',\
    \ 'i', 'o', 'u'}\n    text := \"\"\n    for _, r := range text {\n        if !contains(vowels,\
    \ r) {\n            text += string(r)\n        }\n    }\n    return text\n}\n\n\
    func TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpbk3d3663_test.go:20:17: text.ToLower undefined (type string has no field
    or method ToLower)

    /tmp/tmpbk3d3663_test.go:22:10: no new variables on left side of :=

    /tmp/tmpbk3d3663_test.go:24:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073455
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune(\"aeiouAEIOU\")\n    result := \"\"\n\
    \    for _, item := range text {\n        if _, ok := vowels[item]; ok {\n   \
    \         continue\n        }\n        result += item\n    }\n    return result\n\
    }\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp1lre8mt3_test.go:23:21: assignment mismatch: 2 variables but 1 value

    /tmp/tmp1lre8mt3_test.go:26:9: invalid operation: result += item (mismatched types
    string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073455
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    var result string\n    for _, c := range text {\n    \
    \    switch c {\n        case 'a', 'e', 'i', 'o', 'u':\n            result +=\
    \ c\n        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmppeuv0ai4_test.go:24:13: invalid operation: result += c (mismatched types
    string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073455
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    var result string = \"\"\n    for _, letter := range text\
    \ {\n        if letter != \"a\" && letter != \"A\" && letter != \"e\" && letter\
    \ != \"E\" && letter != \"i\" && letter != \"I\" && letter != \"o\" && letter\
    \ != \"O\" && letter != \"u\" && letter != \"U\" {\n            result += letter\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp_kqg9xx1_test.go:22:22: invalid operation: letter != "a" (mismatched types
    rune and untyped string)

    /tmp/tmp_kqg9xx1_test.go:22:39: invalid operation: letter != "A" (mismatched types
    rune and untyped string)

    /tmp/tmp_kqg9xx1_test.go:22:56: invalid operation: letter != "e" (mismatched types
    rune and untyped string)

    /tmp/tmp_kqg9xx1_test.go:22:73: invalid operation: letter != "E" (mismatched types
    rune and untyped string)

    /tmp/tmp_kqg9xx1_test.go:22:90: invalid operation: letter != "i" (mismatched types
    rune and untyped string)

    /tmp/tmp_kqg9xx1_test.go:22:107: invalid operation: letter != "I" (mismatched
    types rune and untyped string)

    /tmp/tmp_kqg9xx1_test.go:22:124: invalid operation: letter != "o" (mismatched
    types rune and untyped string)

    /tmp/tmp_kqg9xx1_test.go:22:141: invalid operation: letter != "O" (mismatched
    types rune and untyped string)

    /tmp/tmp_kqg9xx1_test.go:22:158: invalid operation: letter != "u" (mismatched
    types rune and untyped string)

    /tmp/tmp_kqg9xx1_test.go:22:175: invalid operation: letter != "U" (mismatched
    types rune and untyped string)

    /tmp/tmp_kqg9xx1_test.go:22:175: too many errors

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073455
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    if len(text) == 0 {\n        return \"\"\n    }\n    lastVowel\
    \ := false\n    for _, letter := range text {\n        if letter == 'a' || letter\
    \ == 'e' || letter == 'i' || letter == 'o' || letter == 'u' {\n            if\
    \ lastVowel {\n                return \"\"\n            } else {\n           \
    \     lastVowel = true\n            }\n        } else {\n            lastVowel\
    \ = false\n        }\n    }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__1\
    \ (0.00s)\n        tmpsqo4ltqo_test.go:57: expected 'bcdf\n            ghjklm',\
    \ got 'abcdef\n            ghijklm'\n    --- FAIL: TestRemove_Vowels/test_num__2\
    \ (0.00s)\n        tmpsqo4ltqo_test.go:57: expected 'fdcb', got 'fedcba'\n   \
    \ --- FAIL: TestRemove_Vowels/test_num__4 (0.00s)\n        tmpsqo4ltqo_test.go:57:\
    \ expected 'cB', got 'acBAA'\n    --- FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n\
    \        tmpsqo4ltqo_test.go:57: expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.002s\nFAIL\n"
  timestamp: 1660073456
- exit_code: 0
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    var newText []rune\n    for _, item := range []rune(text)\
    \ {\n        if item == 'a' || item == 'e' || item == 'i' || item == 'o' || item\
    \ == 'u' || item == 'A' || item == 'E' || item == 'I' || item == 'O' || item ==\
    \ 'U' {\n            continue\n        }\n        newText = append(newText, item)\n\
    \    }\n    return string(newText)\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660073456
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := \"aeiou\"\n    for _, v := range vowels {\n\
    \        text := strings.Replace(text, v, \"\", -1)\n    }\n    return text\n\
    }\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpt9tl8z1g_test.go:22:17: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073455
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    filteredText\
    \ := \"\"\n    for _, value := range []byte(text) {\n        if !inArray(value,\
    \ vowels) {\n            filteredText += string(value)\n        }\n    }\n   \
    \ return filteredText\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpinsl222z_test.go:23:13: undefined: inArray

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073456
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := \"aeiouAEIOU\"\n    text := []rune(text)\n \
    \   result := \"\"\n    for _, i := range text {\n        runeValue := string(i)\n\
    \        if !strings.Contains(vowels, runeValue) {\n            result += runeValue\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpmef4rh_u_test.go:21:10: no new variables on left side of :=

    /tmp/tmpmef4rh_u_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmpmef4rh_u_test.go:25:13: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073456
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    // Write your code here\n    text := strings.Replace(text,\
    \ \"a\", \"\", -1)\n    text := strings.Replace(text, \"e\", \"\", -1)\n    text\
    \ := strings.Replace(text, \"i\", \"\", -1)\n    text := strings.Replace(text,\
    \ \"o\", \"\", -1)\n    text := strings.Replace(text, \"u\", \"\", -1)\n    text\
    \ := strings.Replace(text, \"A\", \"\", -1)\n    text := strings.Replace(text,\
    \ \"E\", \"\", -1)\n    text := strings.Replace(text, \"I\", \"\", -1)\n    text\
    \ := strings.Replace(text, \"O\", \"\", -1)\n    text := strings.Replace(text,\
    \ \"U\", \"\", -1)\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpptlooa23_test.go:21:10: no new variables on left side of :=

    /tmp/tmpptlooa23_test.go:21:13: undefined: strings

    /tmp/tmpptlooa23_test.go:22:10: no new variables on left side of :=

    /tmp/tmpptlooa23_test.go:22:13: undefined: strings

    /tmp/tmpptlooa23_test.go:23:10: no new variables on left side of :=

    /tmp/tmpptlooa23_test.go:23:13: undefined: strings

    /tmp/tmpptlooa23_test.go:24:10: no new variables on left side of :=

    /tmp/tmpptlooa23_test.go:24:13: undefined: strings

    /tmp/tmpptlooa23_test.go:25:10: no new variables on left side of :=

    /tmp/tmpptlooa23_test.go:25:13: undefined: strings

    /tmp/tmpptlooa23_test.go:25:10: too many errors

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073456
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__1\
    \ (0.00s)\n        tmpdm2859rx_test.go:42: expected 'bcdf\n            ghjklm',\
    \ got 'abcdef\n            ghijklm'\n    --- FAIL: TestRemove_Vowels/test_num__2\
    \ (0.00s)\n        tmpdm2859rx_test.go:42: expected 'fdcb', got 'fedcba'\n   \
    \ --- FAIL: TestRemove_Vowels/test_num__3 (0.00s)\n        tmpdm2859rx_test.go:42:\
    \ expected '', got 'eeeee'\n    --- FAIL: TestRemove_Vowels/test_num__4 (0.00s)\n\
    \        tmpdm2859rx_test.go:42: expected 'cB', got 'acBAA'\n    --- FAIL: TestRemove_Vowels/test_num__5\
    \ (0.00s)\n        tmpdm2859rx_test.go:42: expected 'cB', got 'EcBOO'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073285
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    for _,\
    \ v := range text {\n        if !strings.ContainsRune(vowels, v) {\n         \
    \   text := strings.Replace(text, v, \"\", -1)\n        }\n    }\n    return text\n\
    }\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp5esw2w8z_test.go:22:13: undefined: strings

    /tmp/tmp5esw2w8z_test.go:23:21: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073457
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    output := \"\"\n    for _, c := range text {\n       \
    \ if c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n            continue\n\
    \        }\n        output = output + c\n    }\n    return output\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp71rew9vd_test.go:25:18: invalid operation: output + c (mismatched types
    string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073457
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    res :=\
    \ \"\"\n    for _, r := range text {\n        if !vowels[unicode.ToLower(r)] ==\
    \ false {\n            res += string(unicode.ToLower(r))\n        }\n    }\n \
    \   return res\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpytk58wye_test.go:23:13: invalid operation: operator ! not defined on vowels[unicode.ToLower(r)]
    (variable of type rune)

    /tmp/tmpytk58wye_test.go:23:20: undefined: unicode

    /tmp/tmpytk58wye_test.go:24:27: undefined: unicode

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073457
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    return \"\"\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__1\
    \ (0.00s)\n        tmpovc2i1z1_test.go:42: expected 'bcdf\n            ghjklm',\
    \ got ''\n    --- FAIL: TestRemove_Vowels/test_num__2 (0.00s)\n        tmpovc2i1z1_test.go:42:\
    \ expected 'fdcb', got ''\n    --- FAIL: TestRemove_Vowels/test_num__4 (0.00s)\n\
    \        tmpovc2i1z1_test.go:42: expected 'cB', got ''\n    --- FAIL: TestRemove_Vowels/test_num__5\
    \ (0.00s)\n        tmpovc2i1z1_test.go:42: expected 'cB', got ''\n    --- FAIL:\
    \ TestRemove_Vowels/test_num__6 (0.00s)\n        tmpovc2i1z1_test.go:42: expected\
    \ 'ybcd', got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073156
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    s := \"\"\n    text += string(text[0])\n    for i := 1;\
    \ i < len(text); i++ {\n        switch text[i] {\n        case \".\":\n      \
    \      continue\n        case 'a':\n            s += text[i+1]\n        case 'e':\n\
    \            s += text[i+1]\n        case 'i':\n            s += text[i+1]\n \
    \       case 'o':\n            s += text[i+1]\n        case 'u':\n           \
    \ s += text[i+1]\n        case 'A':\n            s += text[i+1]\n        case\
    \ 'E':\n            s += text[i+1]\n        case 'I':\n            s += text[i+1]\n\
    \        case 'O':\n            s += text[i+1]\n        case 'U':\n          \
    \  s += text[i+1]\n        default:\n            s += text[i]\n        }\n   \
    \ }\n    return s\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate :=\
    \ remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmps70n20yp_test.go:24:14: cannot convert "." (untyped string constant) to
    byte

    /tmp/tmps70n20yp_test.go:27:13: invalid operation: s += text[i + 1] (mismatched
    types string and byte)

    /tmp/tmps70n20yp_test.go:29:13: invalid operation: s += text[i + 1] (mismatched
    types string and byte)

    /tmp/tmps70n20yp_test.go:31:13: invalid operation: s += text[i + 1] (mismatched
    types string and byte)

    /tmp/tmps70n20yp_test.go:33:13: invalid operation: s += text[i + 1] (mismatched
    types string and byte)

    /tmp/tmps70n20yp_test.go:35:13: invalid operation: s += text[i + 1] (mismatched
    types string and byte)

    /tmp/tmps70n20yp_test.go:37:13: invalid operation: s += text[i + 1] (mismatched
    types string and byte)

    /tmp/tmps70n20yp_test.go:39:13: invalid operation: s += text[i + 1] (mismatched
    types string and byte)

    /tmp/tmps70n20yp_test.go:41:13: invalid operation: s += text[i + 1] (mismatched
    types string and byte)

    /tmp/tmps70n20yp_test.go:43:13: invalid operation: s += text[i + 1] (mismatched
    types string and byte)

    /tmp/tmps70n20yp_test.go:43:13: too many errors

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073457
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    fmt.Println(\"text: \" + text)\n    for i := 0; i < len(text);\
    \ i++ {\n        rune, _ := utf8.DecodeRuneInString(text[i:(i+1)])\n        if\
    \ !((rune >= 'a' && rune <= 'z') || (rune >= 'A' && rune <= 'Z')) {\n        \
    \    return text[:i]\n        }\n    }\n    return \"\"\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp59k0g8_r_test.go:22:20: undefined: utf8

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073457
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    text_novowels := text\n    for _, char := range text_novowels\
    \ {\n        if char == 'a' || char == 'e' || char == 'i' || char == 'o' || char\
    \ == 'u' || char == 'A' || char == 'E' || char == 'I' || char == 'O' || char ==\
    \ 'U' {\n            text_novowels = text_novowels[0 : len(text_novowels)-1]\n\
    \        }\n    }\n    return text_novowels\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__1\
    \ (0.00s)\n        tmpgvaz56_9_test.go:48: expected 'bcdf\n            ghjklm',\
    \ got 'abcdef\n            ghij'\n    --- FAIL: TestRemove_Vowels/test_num__2\
    \ (0.00s)\n        tmpgvaz56_9_test.go:48: expected 'fdcb', got 'fedc'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__4 (0.00s)\n        tmpgvaz56_9_test.go:48:\
    \ expected 'cB', got 'ac'\n    --- FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n\
    \        tmpgvaz56_9_test.go:48: expected 'cB', got 'Ec'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073457
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    var result string = \"\"\n    for _, letter := range text\
    \ {\n        if letter == 'a' || letter == 'A' || letter == 'e' || letter == 'E'\
    \ || letter == 'i' || letter == 'I' || letter == 'o' || letter == 'O' || letter\
    \ == 'u' || letter == 'U' {\n            result = result + letter\n        }\n\
    \    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp5gsdcoke_test.go:23:22: invalid operation: result + letter (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073457
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := \"aeiou\"\n    text := text[:len(text)-1]\n\
    \    vowelsIndex := 0\n    for i := 0; i < len(text); i++ {\n        if text[i]\
    \ == vowels[vowelsIndex] {\n            vowelsIndex++\n        } else {\n    \
    \        text += text[i]\n        }\n    }\n    return text\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaicy0gph_test.go:21:10: no new variables on left side of :=

    /tmp/tmpaicy0gph_test.go:27:13: invalid operation: text += text[i] (mismatched
    types string and byte)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073457
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    text := strings.ToLower(text)\n    text := strings.Replace(text,\
    \ \"a\", \"\", -1)\n    text := strings.Replace(text, \"e\", \"\", -1)\n    text\
    \ := strings.Replace(text, \"i\", \"\", -1)\n    text := strings.Replace(text,\
    \ \"o\", \"\", -1)\n    text := strings.Replace(text, \"u\", \"\", -1)\n    text\
    \ := strings.Replace(text, \"y\", \"\", -1)\n    text := strings.Replace(text,\
    \ \"A\", \"\", -1)\n    text := strings.Replace(text, \"E\", \"\", -1)\n    text\
    \ := strings.Replace(text, \"I\", \"\", -1)\n    text := strings.Replace(text,\
    \ \"O\", \"\", -1)\n    text := strings.Replace(text, \"U\", \"\", -1)\n    text\
    \ := strings.Replace(text, \"Y\", \"\", -1)\n    return text\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpi_cgz3by_test.go:20:10: no new variables on left side of :=

    /tmp/tmpi_cgz3by_test.go:20:13: undefined: strings

    /tmp/tmpi_cgz3by_test.go:21:10: no new variables on left side of :=

    /tmp/tmpi_cgz3by_test.go:21:13: undefined: strings

    /tmp/tmpi_cgz3by_test.go:22:10: no new variables on left side of :=

    /tmp/tmpi_cgz3by_test.go:22:13: undefined: strings

    /tmp/tmpi_cgz3by_test.go:23:10: no new variables on left side of :=

    /tmp/tmpi_cgz3by_test.go:23:13: undefined: strings

    /tmp/tmpi_cgz3by_test.go:24:10: no new variables on left side of :=

    /tmp/tmpi_cgz3by_test.go:24:13: undefined: strings

    /tmp/tmpi_cgz3by_test.go:24:10: too many errors

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073457
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune(\"aeiouy\")\n    t := []rune(text)\n\n\
    \    for i := 0; i < len(t); i++ {\n        if vowels.Contains(t[i]) {\n     \
    \       t = append(t[:i], t[i+1:]...)\n        }\n    }\n\n    return string(t)\n\
    }\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp7k1zwbh7_test.go:24:19: vowels.Contains undefined (type []rune has no
    field or method Contains)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073457
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    return strings.NewReplacer(\n        \"a\", \"A\",\n \
    \       \"e\", \"E\",\n        \"i\", \"I\",\n        \"o\", \"O\",\n        \"\
    u\", \"U\",\n        \"y\", \"Y\",\n        \"a\", \"A\",\n        \"e\", \"E\"\
    ,\n        \"i\", \"I\",\n        \"o\", \"O\",\n        \"u\", \"U\",\n     \
    \   \"y\", \"Y\",\n        \"A\", \"A\",\n        \"E\", \"E\",\n        \"I\"\
    , \"I\",\n        \"O\", \"O\",\n        \"U\", \"U\",\n        \"Y\", \"Y\",\n\
    \        \"z\", \"Z\",\n        \"c\", \"C\",\n        \"d\", \"D\",\n       \
    \ \"f\", \"F\",\n        \"g\", \"G\",\n        \"h\", \"H\",\n        \"j\",\
    \ \"J\",\n        \"k\", \"K\",\n        \"l\", \"L\",\n        \"m\", \"M\",\n\
    \        \"n\", \"N\",\n        \"p\", \"P\",\n        \"q\", \"Q\",\n       \
    \ \"r\", \"R\",\n        \"s\", \"S\",\n        \"t\", \"T\",\n        \"v\",\
    \ \"V\",\n        \"w\", \"W\",\n        \"x\", \"X\",\n        \"z\", \"Z\",\n\
    \        \"c\", \"C\",\n        \"d\", \"D\",\n        \"f\", \"F\",\n       \
    \ \"g\", \"G\",\n        \"h\", \"H\",\n        \"j\", \"J\",\n        \"k\",\
    \ \"K\",\n        \"l\", \"L\",\n        \"m\", \"M\",\n        \"n\", \"N\",\n\
    \        \"p\", \"P\",\n        \"q\", \"Q\",\n        \"r\", \"R\",\n       \
    \ \"s\", \"S\",\n        \"t\", \"T\",\n        \"v\", \"V\",\n        \"w\",\
    \ \"W\",\n        \"x\", \"X\",\n        \"z\", \"Z\",\n        \"c\", \"C\",\n\
    \        \"d\", \"D\",\n        \"f\", \"F\",\n        \"g\", \"G\",\n       \
    \ \"h\", \"H\",\n        \"j\", \"J\",\n        \"k\", \"K\",\n        \"l\",\
    \ \"L\",\n        \"m\", \"M\",\n        \"n\", \"N\",\n        \"p\", \"P\",\n\
    \        \"q\", \"Q\",\n        \"r\", \"R\",\n        \"s\", \"S\",\n       \
    \ \"t\", \"T\",\n        \"v\", \"V\",\n        \"w\", \"W\",\n        \"x\",\
    \ \"X\",\n        \"z\", \"Z\",\n        \"c\", \"C\",\n        \"d\", \"D\",\n\
    \        \"f\", \"F\",\n        \"g\", \"G\",\n        \"h\", \"H\",\n       \
    \ \"j\", \"J\",\n        \"k\", \"K\",\n        \"l\", \"L\",\n        \"m\",\
    \ \"M\",\n        \"n\", \"N\",\n        \"p\", \"P\",\n        \"q\", \"Q\",\n\
    \        \"r\", \"R\",\n        \"s\", \"S\",\n        \"t\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmp1rqayvfp_test.go:111:9: string literal not terminated

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660073457
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    if text == \"\" {\n        return \"\"\n    }\n\n    //\
    \ Go through each character in string and remove vowels if present.\n    text\
    \ := []rune(text)\n    for i := 0; i < len(text); i++ {\n        if !isVowel(text[i])\
    \ {\n            text[i] = ' '\n        }\n    }\n    return string(text)\n}\n\
    \nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaqa7z5qd_test.go:25:10: no new variables on left side of :=

    /tmp/tmpaqa7z5qd_test.go:25:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmpaqa7z5qd_test.go:27:13: undefined: isVowel

    /tmp/tmpaqa7z5qd_test.go:28:13: cannot assign to text[i] (value of type byte)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073457
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n\
    \    for _, v := range vowels {\n        text = strings.Replace(text, v, \"\"\
    , -1)\n    }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n \
    \ candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp9uglysxj_test.go:22:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073457
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    var vowels []rune\n    for _, v := range \"AEIOUaeiou\"\
    \ {\n        vowels = append(vowels, v)\n    }\n    t := make([]rune, 0, len(text))\n\
    \    for _, c := range text {\n        if !contains(vowels, c) {\n           \
    \ t = append(t, c)\n        }\n    }\n    return string(t)\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp3fazvckw_test.go:26:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073457
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    for i := 0; i < len(text); i++ {\n        if text[i] ==\
    \ 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u'\
    \ {\n            return text[:i]\n        }\n    }\n    return text\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__1\
    \ (0.00s)\n        tmpzhxi773j_test.go:47: expected 'bcdf\n            ghjklm',\
    \ got ''\n    --- FAIL: TestRemove_Vowels/test_num__2 (0.00s)\n        tmpzhxi773j_test.go:47:\
    \ expected 'fdcb', got 'f'\n    --- FAIL: TestRemove_Vowels/test_num__4 (0.00s)\n\
    \        tmpzhxi773j_test.go:47: expected 'cB', got ''\n    --- FAIL: TestRemove_Vowels/test_num__5\
    \ (0.00s)\n        tmpzhxi773j_test.go:47: expected 'cB', got 'EcBOO'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073458
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := \"aeiouAEIOU\"\n    result := \"\"\n    for\
    \ _, letter := range text {\n        if strings.Contains(vowels, letter) {\n \
    \           continue\n        } else {\n            result += letter\n       \
    \ }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n \
    \ candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp_7oluaei_test.go:23:12: undefined: strings

    /tmp/tmp_7oluaei_test.go:26:13: invalid operation: result += letter (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073457
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    var vowels []rune = \"aeiou\"\n    text := strings.ToLower(text)\n\
    \    for _, letter := range text {\n        if !strings.Contains(vowels, letter)\
    \ {\n            text := text + letter\n        }\n    }\n    return text\n}\n\
    \nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpu9i4bh4d_test.go:20:25: cannot use "aeiou" (untyped string constant) as
    []rune value in variable declaration

    /tmp/tmpu9i4bh4d_test.go:21:10: no new variables on left side of :=

    /tmp/tmpu9i4bh4d_test.go:21:13: undefined: strings

    /tmp/tmpu9i4bh4d_test.go:23:13: undefined: strings

    /tmp/tmpu9i4bh4d_test.go:24:21: invalid operation: text + letter (mismatched types
    string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073457
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    return \"\"\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__1\
    \ (0.00s)\n        tmpovc2i1z1_test.go:42: expected 'bcdf\n            ghjklm',\
    \ got ''\n    --- FAIL: TestRemove_Vowels/test_num__2 (0.00s)\n        tmpovc2i1z1_test.go:42:\
    \ expected 'fdcb', got ''\n    --- FAIL: TestRemove_Vowels/test_num__4 (0.00s)\n\
    \        tmpovc2i1z1_test.go:42: expected 'cB', got ''\n    --- FAIL: TestRemove_Vowels/test_num__5\
    \ (0.00s)\n        tmpovc2i1z1_test.go:42: expected 'cB', got ''\n    --- FAIL:\
    \ TestRemove_Vowels/test_num__6 (0.00s)\n        tmpovc2i1z1_test.go:42: expected\
    \ 'ybcd', got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073156
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    var result string\n    for _, char := range text {\n \
    \       if char == 'a' || char == 'e' || char == 'i' || char == 'o' || char ==\
    \ 'u' {\n            result = result + char\n        }\n    }\n    return result\n\
    }\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpoxpzmxlz_test.go:23:22: invalid operation: result + char (mismatched types
    string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073458
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    text := strings.ToLower(text)\n    vowels := []rune(\"\
    aeiou\")\n    i := 0\n    for ; i < len(text); i++ {\n        if strings.ContainsRune(vowels,\
    \ rune(text[i])) == true {\n            text := text[:i]\n            i = i-1\n\
    \        }\n    }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpb9uy8_b3_test.go:20:10: no new variables on left side of :=

    /tmp/tmpb9uy8_b3_test.go:20:13: undefined: strings

    /tmp/tmpb9uy8_b3_test.go:24:12: undefined: strings

    /tmp/tmpb9uy8_b3_test.go:25:13: text declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073458
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    return strings.Replace(text, \"a\", \"\", -1)\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpwk1mcj8n_test.go:20:12: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073458
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    // Your code here\n    return \"\"\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__1\
    \ (0.00s)\n        tmpph4obffo_test.go:43: expected 'bcdf\n            ghjklm',\
    \ got ''\n    --- FAIL: TestRemove_Vowels/test_num__2 (0.00s)\n        tmpph4obffo_test.go:43:\
    \ expected 'fdcb', got ''\n    --- FAIL: TestRemove_Vowels/test_num__4 (0.00s)\n\
    \        tmpph4obffo_test.go:43: expected 'cB', got ''\n    --- FAIL: TestRemove_Vowels/test_num__5\
    \ (0.00s)\n        tmpph4obffo_test.go:43: expected 'cB', got ''\n    --- FAIL:\
    \ TestRemove_Vowels/test_num__6 (0.00s)\n        tmpph4obffo_test.go:43: expected\
    \ 'ybcd', got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073458
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    var output string\n    for _, v := range text {\n    \
    \    if v == 'a' || v == 'e' || v == 'i' || v == 'o' || v == 'u'\n        { continue;\
    \ }\n        output = output + v;\n    }\n    return output;\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmp85x7q31d_test.go:22:68: unexpected newline, expecting { after if clause

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660073457
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    text_length = length(text)\n    text_no_vowels = \"\"\n\
    \    for index, _ := range text {\n        if string(index) == \"a\" || string(index)\
    \ == \"e\" || string(index) == \"i\" || string(index) == \"o\" {\n           \
    \ continue // We don't want to remove these letters.\n        }\n        text_no_vowels\
    \ = append(text_no_vowels, text[index])\n    }\n    return string(text_no_vowels)\n\
    }\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpvlwn4pr6_test.go:20:5: undefined: text_length

    /tmp/tmpvlwn4pr6_test.go:20:19: undefined: length

    /tmp/tmpvlwn4pr6_test.go:21:5: undefined: text_no_vowels

    /tmp/tmpvlwn4pr6_test.go:26:33: undefined: text_no_vowels

    /tmp/tmpvlwn4pr6_test.go:28:19: undefined: text_no_vowels

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073458
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    var result string\n    text += \"aA\"\n    for i := 0;\
    \ i < len(text); i++ {\n        if (text[i] >= 'a' && text[i] <= 'z') || (text[i]\
    \ >= 'A' && text[i] <= 'Z') {\n            result = result + text[i]\n       \
    \ }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n \
    \ candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp6wsak8k4_test.go:24:22: invalid operation: result + text[i] (mismatched
    types string and byte)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073459
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune(\"aeiou\")\n    output := \"\"\n    lastRun\
    \ := 0\n    for _, runeChar := range text {\n        if lastRun != runeChar {\n\
    \            output += string(text[lastRun:runeChar])\n        }\n        for\
    \ _, vowel := range vowels {\n            if runeChar == vowel {\n           \
    \     output = output[0:len(output)-1]\n                break\n            }\n\
    \        }\n        lastRun = runeChar\n    }\n    if lastRun != len(text) {\n\
    \        output += string(text[lastRun:len(text)])\n    }\n    return output\n\
    }\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp16kg3gwl_test.go:24:23: invalid operation: lastRun != runeChar (mismatched
    types int and rune)

    /tmp/tmp16kg3gwl_test.go:33:19: cannot use runeChar (variable of type rune) as
    type int in assignment

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073459
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    text += \"a\"\n    return text\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__0\
    \ (0.00s)\n        tmpjxi6d4jc_test.go:43: expected '', got 'a'\n    --- FAIL:\
    \ TestRemove_Vowels/test_num__1 (0.00s)\n        tmpjxi6d4jc_test.go:43: expected\
    \ 'bcdf\n            ghjklm', got 'abcdef\n            ghijklma'\n    --- FAIL:\
    \ TestRemove_Vowels/test_num__2 (0.00s)\n        tmpjxi6d4jc_test.go:43: expected\
    \ 'fdcb', got 'fedcbaa'\n    --- FAIL: TestRemove_Vowels/test_num__3 (0.00s)\n\
    \        tmpjxi6d4jc_test.go:43: expected '', got 'eeeeea'\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmpjxi6d4jc_test.go:43: expected 'cB', got 'acBAAa'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmpjxi6d4jc_test.go:43:\
    \ expected 'cB', got 'EcBOOa'\n    --- FAIL: TestRemove_Vowels/test_num__6 (0.00s)\n\
    \        tmpjxi6d4jc_test.go:43: expected 'ybcd', got 'ybcda'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073459
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    result := \"\"\n    vowels := []rune{'a', 'e', 'i', 'o',\
    \ 'u'}\n\n    for _, ch := range text {\n        if !vowels[unicode.ToLower(ch)]\
    \ {\n            result += ch\n        }\n    }\n    return result\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpv_pxr0eh_test.go:24:13: invalid operation: operator ! not defined on vowels[unicode.ToLower(ch)]
    (variable of type rune)

    /tmp/tmpv_pxr0eh_test.go:24:20: undefined: unicode

    /tmp/tmpv_pxr0eh_test.go:25:13: invalid operation: result += ch (mismatched types
    string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073459
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    var vowels = \"aeiou\"\n    return strings.NewReplacer(vowels...).Replace(text)\n\
    }\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmph8ty3ii8_test.go:21:12: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073459
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    result := \"\"\n    for _, v := range text {\n       \
    \ if v == 'a' || v == 'A' || v == 'e' || v == 'E' || v == 'i' || v == 'I' || v\
    \ == 'o' || v == 'O' || v == 'u' || v == 'U' || v == 'y' || v == 'Y' {\n     \
    \       continue\n        }\n        result += string(v)\n    }\n    return result\n\
    }\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__6\
    \ (0.00s)\n        tmp6o4rw550_test.go:48: expected 'ybcd', got 'bcd'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073459
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    for _, letter := range text {\n        if letter == 'a'\
    \ || letter == 'e' || letter == 'i' || letter == 'o' || letter == 'u' {\n    \
    \        text = text[:len(text)-1]\n        }\n    }\n    return text\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__1\
    \ (0.00s)\n        tmpu688_s2n_test.go:47: expected 'bcdf\n            ghjklm',\
    \ got 'abcdef\n            ghij'\n    --- FAIL: TestRemove_Vowels/test_num__2\
    \ (0.00s)\n        tmpu688_s2n_test.go:47: expected 'fdcb', got 'fedc'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__4 (0.00s)\n        tmpu688_s2n_test.go:47:\
    \ expected 'cB', got 'acBA'\n    --- FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n\
    \        tmpu688_s2n_test.go:47: expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073459
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    if text == \"\" {\n        return \"\"\n    }\n    vowels\
    \ := []rune{'a','e','i','o','u'}\n    out := \"\"\n    for _, r := range text\
    \ {\n        if !vowels[unicode.ToLower(r)]{\n            out = out + string(r)\n\
    \        }\n    }\n    return string(out)\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp0w3tzw3h_test.go:26:13: invalid operation: operator ! not defined on vowels[unicode.ToLower(r)]
    (variable of type rune)

    /tmp/tmp0w3tzw3h_test.go:26:20: undefined: unicode

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073459
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    text += \"aeiouAEIOU\"\n    result := \"\"\n    for _,\
    \ char := range text {\n        if char == 'a' || char == 'A' || char == 'e' ||\
    \ char == 'E' || char == 'i' || char == 'I' || char == 'o' || char == 'O' || char\
    \ == 'u' || char == 'U' {\n            result = result + char\n        }\n   \
    \ }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpx8q6bp2__test.go:24:22: invalid operation: result + char (mismatched types
    string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073459
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    var result string\n\n    vowels := []rune(\"a\", \"e\"\
    , \"i\", \"o\", \"u\")\n\n    for _, v := range vowels {\n        result = result[:len(result)-1]\
    \ + v\n    }\n\n    if len(text) > 0 {\n        result = result + text[len(text)-1]\n\
    \    }\n\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpsj2_3fvn_test.go:22:42: too many arguments in conversion to []rune

    /tmp/tmpsj2_3fvn_test.go:29:18: invalid operation: result + text[len(text) - 1]
    (mismatched types string and byte)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073459
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := map[rune]bool{\n        'a':  true,\n      \
    \  'A':  true,\n        'e':  true,\n        'E':  true,\n        'i':  true,\n\
    \        'I':  true,\n        'o':  true,\n        'O':  true,\n        'u': \
    \ true,\n        'U':  true,\n    }\n    for _, c := range text {\n        if\
    \ vowels[c] {\n            text = text[:len(text)-1] + text[len(text)-1]\n   \
    \     }\n    }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n\
    \  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpp_1p21gx_test.go:34:24: invalid operation: text[:len(text) - 1] + text[len(text)
    - 1] (mismatched types string and byte)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073459
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n\
    \    text := text[:len(text)-1]\n    return strings.ToLower(text)\n    for _,\
    \ c := range text {\n        if strings.Contains(vowels, c) {\n            text\
    \ := strings.Replace(text, c, \"-\", 1)\n        }\n    }\n    return text\n}\n\
    \nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpmap5ggts_test.go:21:10: no new variables on left side of :=

    /tmp/tmpmap5ggts_test.go:22:12: undefined: strings

    /tmp/tmpmap5ggts_test.go:24:12: undefined: strings

    /tmp/tmpmap5ggts_test.go:25:21: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073459
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    for i := 0; i < len(text); i++ {\n        switch {\n \
    \       case text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] ==\
    \ 'o' || text[i] == 'u':\n            continue\n        default:\n           \
    \ return text\n        }\n    }\n    return text\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__1\
    \ (0.00s)\n        tmpix2qwbf2_test.go:50: expected 'bcdf\n            ghjklm',\
    \ got 'abcdef\n            ghijklm'\n    --- FAIL: TestRemove_Vowels/test_num__2\
    \ (0.00s)\n        tmpix2qwbf2_test.go:50: expected 'fdcb', got 'fedcba'\n   \
    \ --- FAIL: TestRemove_Vowels/test_num__3 (0.00s)\n        tmpix2qwbf2_test.go:50:\
    \ expected '', got 'eeeee'\n    --- FAIL: TestRemove_Vowels/test_num__4 (0.00s)\n\
    \        tmpix2qwbf2_test.go:50: expected 'cB', got 'acBAA'\n    --- FAIL: TestRemove_Vowels/test_num__5\
    \ (0.00s)\n        tmpix2qwbf2_test.go:50: expected 'cB', got 'EcBOO'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073460
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    letters := []rune(text)\n    out := \"\"\n    for i, r\
    \ := range letters {\n        if !('a' <= r && r <= 'z' || 'A' <= r && r <= 'Z')\
    \ {\n            out = out + string(r)\n        }\n    }\n    return out\n}\n\n\
    func TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpyz97tjh8_test.go:22:9: i declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073459
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    var newStr string\n    for _, letter := range text {\n\
    \        if letter != letterToRemove {\n            newStr += letter\n       \
    \ }\n    }\n    return newStr\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n \
    \ candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp_ghtoh03_test.go:22:22: undefined: letterToRemove

    /tmp/tmp_ghtoh03_test.go:23:13: invalid operation: newStr += letter (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073459
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    var vowels = map[rune]bool{\n        'a': true,\n    \
    \    'e': true,\n        'i': true,\n        'o': true,\n        'u': true,\n\
    \    }\n    for _, letter := range text {\n        if !vowels[letter] {\n    \
    \        return letter\n        }\n    }\n    return \"\"\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpv87weep4_test.go:29:20: cannot use letter (variable of type rune) as type
    string in return statement

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073459
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    for i := 0; i < len(text); i++ {\n        switch text[i]\
    \ {\n        case 'a':\n            text[i] = 'A'\n        case 'e':\n       \
    \     text[i] = 'E'\n        case 'i':\n            text[i] = 'I'\n        case\
    \ 'o':\n            text[i] = 'O'\n        case 'u':\n            text[i] = 'U'\n\
    \        }\n    }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpzvie8zap_test.go:23:13: cannot assign to text[i] (value of type byte)

    /tmp/tmpzvie8zap_test.go:25:13: cannot assign to text[i] (value of type byte)

    /tmp/tmpzvie8zap_test.go:27:13: cannot assign to text[i] (value of type byte)

    /tmp/tmpzvie8zap_test.go:29:13: cannot assign to text[i] (value of type byte)

    /tmp/tmpzvie8zap_test.go:31:13: cannot assign to text[i] (value of type byte)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073459
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    var out []rune\n    for _, r := range text {\n       \
    \ switch {\n        case r == 'a' || r == 'e' || r == 'i' || r == 'o' || r ==\
    \ 'u':\n            continue\n        default:\n            out = append(out,\
    \ r)\n        }\n    }\n    return string(out)\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmpfny93183_test.go:51: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmpfny93183_test.go:51:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073460
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    var res string = \"\"\n    for _, i := range text {\n\
    \        if i == 'a' || i == 'e' || i == 'i' || i == 'o' || i == 'u' {\n     \
    \       res = res + string([]byte{byte(i)})\n        }\n    }\n    return res\n\
    }\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__1\
    \ (0.00s)\n        tmpwrroira7_test.go:48: expected 'bcdf\n            ghjklm',\
    \ got 'aei'\n    --- FAIL: TestRemove_Vowels/test_num__2 (0.00s)\n        tmpwrroira7_test.go:48:\
    \ expected 'fdcb', got 'ea'\n    --- FAIL: TestRemove_Vowels/test_num__3 (0.00s)\n\
    \        tmpwrroira7_test.go:48: expected '', got 'eeeee'\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmpwrroira7_test.go:48: expected 'cB', got 'a'\n    --- FAIL:\
    \ TestRemove_Vowels/test_num__5 (0.00s)\n        tmpwrroira7_test.go:48: expected\
    \ 'cB', got ''\n    --- FAIL: TestRemove_Vowels/test_num__6 (0.00s)\n        tmpwrroira7_test.go:48:\
    \ expected 'ybcd', got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073460
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    var vowels []rune\n    for _, r := range text {\n    \
    \    if unicode.IsUpper(r) || unicode.IsLower(r) {\n            vowels = append(vowels,\
    \ r)\n        }\n    }\n    return string(vowels)\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp8y_ehzdu_test.go:22:12: undefined: unicode

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073460
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    text += \"a\" // to avoid empty string\n    text += \"\
    \xE0\xE1\xE2\xE3\xE4\xE5\xE8\xE9\xEA\xEB\xEC\xED\xEE\xEF\xF2\xF3\xF4\xF5\xF6\xF9\
    \xFA\xFB\xFC\xFD\xFF\"\n    text += \"\xC0\xC1\xC2\xC3\xC4\xC5\xC8\xC9\xCA\xCB\
    \xCC\xCD\xCE\xCF\xD2\xD3\xD4\xD5\xD6\xD9\xDA\xDB\xDC\xDD\"\n    text += \"\xE0\
    \xE1\xE2\xE3\xE4\xE5\xE8\xE9\xEA\xEB\xEC\xED\xEE\xEF\xF2\xF3\xF4\xF5\xF6\xF9\xFA\
    \xFB\xFC\xFD\xFF\"\n    text += \"\xE0\xE1\xE2\xE3\xE4\xE5\xE8\xE9\xEA\xEB\xEC\
    \xED\xEE\xEF\xF2\xF3\xF4\xF5\xF6\xF9\xFA\xFB\xFC\xFD\xFF\"\n    text += \"\xE0\
    \xE1\xE2\xE3\xE4\xE5\xE8\xE9\xEA\xEB\xEC\xED\xEE\xEF\xF2\xF3\xF4\xF5\xF6\xF9\xFA\
    \xFB\xFC\xFD\xFF\"\n    text += \"\xE0\xE1\xE2\xE3\xE4\xE5\xE8\xE9\xEA\xEB\xEC\
    \xED\xEE\xEF\xF2\xF3\xF4\xF5\xF6\xF9\xFA\xFB\xFC\xFD\xFF\"\n    text += \"\xE0\
    \xE1\xE2\xE3\xE4\xE5\xE8\xE9\xEA\xEB\xEC\xED\xEE\xEF\xF2\xF3\xF4\xF5\xF6\xF9\xFA\
    \xFB\xFC\xFD\xFF\"\n    text += \"\xE0\xE1\xE2\xE3\xE4\xE5\xE8\xE9\xEA\xEB\xEC\
    \xED\xEE\xEF\xF2\xF3\xF4\xF5\xF6\xF9\xFA\xFB\xFC\xFD\xFF\"\n    text += \"\xE0\
    \xE1\xE2\xE3\xE4\xE5\xE8\xE9\xEA\xEB\xEC\xED\xEE\xEF\xF2\xF3\xF4\xF5\xF6\xF9\xFA\
    \xFB\xFC\xFD\xFF\"\n    text += \"\xE0\xE1\xE2\xE3\xE4\xE5\xE8\xE9\xEA\xEB\xEC\
    \xED\xEE\xEF\xF2\xF3\xF4\xF5\xF6\xF9\xFA\xFB\xFC\xFD\xFF\"\n    text += \"\xE0\
    \xE1\xE2\xE3\xE4\xE5\xE8\xE9\xEA\xEB\xEC\xED\xEE\xEF\xF2\xF3\xF4\xF5\xF6\xF9\xFA\
    \xFB\xFC\xFD\xFF\"\n    text += \"\xE0\xE1\xE2\xE3\xE4\xE5\xE8\xE9\xEA\xEB\xEC\
    \xED\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpoqf10n6q_test.go:32:13: string literal not terminated

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660073459
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    // Your code here\n    var result string\n    for _, c\
    \ := range text {\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' ||\
    \ c == 'u' {\n            result = result + c\n        }\n    }\n    return result\n\
    }\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpn9omqstl_test.go:24:22: invalid operation: result + c (mismatched types
    string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073460
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__1\
    \ (0.00s)\n        tmpdm2859rx_test.go:42: expected 'bcdf\n            ghjklm',\
    \ got 'abcdef\n            ghijklm'\n    --- FAIL: TestRemove_Vowels/test_num__2\
    \ (0.00s)\n        tmpdm2859rx_test.go:42: expected 'fdcb', got 'fedcba'\n   \
    \ --- FAIL: TestRemove_Vowels/test_num__3 (0.00s)\n        tmpdm2859rx_test.go:42:\
    \ expected '', got 'eeeee'\n    --- FAIL: TestRemove_Vowels/test_num__4 (0.00s)\n\
    \        tmpdm2859rx_test.go:42: expected 'cB', got 'acBAA'\n    --- FAIL: TestRemove_Vowels/test_num__5\
    \ (0.00s)\n        tmpdm2859rx_test.go:42: expected 'cB', got 'EcBOO'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073285
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    var result string = text\n    for i := 0; i < len(text);\
    \ i++ {\n        if text[i] != text[i].String() {\n            result += text[i]\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpvf2wkeve_test.go:22:31: text[i].String undefined (type byte has no field
    or method String)

    /tmp/tmpvf2wkeve_test.go:23:13: invalid operation: result += text[i] (mismatched
    types string and byte)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073460
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    // Your code here\n    vowels := []string{\"a\", \"e\"\
    , \"i\", \"o\", \"u\"}\n    for _, v := range vowels {\n        text = text.replaceAllString(v,\
    \ \"_\")\n    }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n\
    \  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpn3vwn1ig_test.go:23:21: text.replaceAllString undefined (type string has
    no field or method replaceAllString)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073461
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    if len(text) == 0 {\n        return \"\"\n    }\n    vowels\
    \ := []rune{'a', 'e', 'i', 'o', 'u'}\n    for _, c := range text {\n        if\
    \ _, ok := vowels[rune(c)]; !ok {\n            return string([]rune{c})\n    \
    \    }\n    }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n\
    \  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp9_mji3mf_test.go:25:21: assignment mismatch: 2 variables but 1 value

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073461
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    fmt.Printf(\"%v \\n\", text)\n    fmt.Printf(\"%v \\n\"\
    , text[:len(text)/2])\n    text := text[:len(text)/2]\n\n    return text\n}\n\
    func TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp8u768mhb_test.go:22:10: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073461
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    text := strings.Replace(text, \"\", \"\", -1)\n    text\
    \ := strings.Replace(text, \"a\", \"z\", -1)\n    text := strings.Replace(text,\
    \ \"e\", \"z\", -1)\n    text := strings.Replace(text, \"i\", \"z\", -1)\n   \
    \ text := strings.Replace(text, \"o\", \"z\", -1)\n    text := strings.Replace(text,\
    \ \"u\", \"z\", -1)\n    text := strings.Replace(text, \"A\", \"Z\", -1)\n   \
    \ text := strings.Replace(text, \"E\", \"Z\", -1)\n    text := strings.Replace(text,\
    \ \"I\", \"Z\", -1)\n    text := strings.Replace(text, \"O\", \"Z\", -1)\n   \
    \ text := strings.Replace(text, \"U\", \"Z\", -1)\n    text := strings.Replace(text,\
    \ \"b\", \"z\", -1)\n    text := strings.Replace(text, \"c\", \"z\", -1)\n   \
    \ text := strings.Replace(text, \"d\", \"z\", -1)\n    text := strings.Replace(text,\
    \ \"f\", \"z\", -1)\n    text := strings.Replace(text, \"g\", \"z\", -1)\n   \
    \ text := strings.Replace(text, \"h\", \"z\", -1)\n    text := strings.Replace(text,\
    \ \"k\", \"z\", -1)\n    text := strings.Replace(text, \"m\", \"z\", -1)\n   \
    \ text := strings.Replace(text, \"p\", \"z\", -1)\n    text := strings.Replace(text,\
    \ \"r\", \"z\", -1)\n    text := strings.Replace(text, \"t\", \"z\", -1)\n   \
    \ text := strings.Replace(text, \"v\", \"z\", -1)\n    text := strings.Replace(text,\
    \ \"w\", \"z\", -1)\n    text := strings.Replace(text, \"y\", \"z\", -1)\n   \
    \ text := strings.Replace(text, \"z\", \"z\", -1)\n    return text\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpfn0o6vll_test.go:20:10: no new variables on left side of :=

    /tmp/tmpfn0o6vll_test.go:20:13: undefined: strings

    /tmp/tmpfn0o6vll_test.go:21:10: no new variables on left side of :=

    /tmp/tmpfn0o6vll_test.go:21:13: undefined: strings

    /tmp/tmpfn0o6vll_test.go:22:10: no new variables on left side of :=

    /tmp/tmpfn0o6vll_test.go:22:13: undefined: strings

    /tmp/tmpfn0o6vll_test.go:23:10: no new variables on left side of :=

    /tmp/tmpfn0o6vll_test.go:23:13: undefined: strings

    /tmp/tmpfn0o6vll_test.go:24:10: no new variables on left side of :=

    /tmp/tmpfn0o6vll_test.go:24:13: undefined: strings

    /tmp/tmpfn0o6vll_test.go:24:10: too many errors

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073461
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{\n        'a', 'e', 'i', 'o', 'u', //\
    \ vowels\n        'A', 'E', 'I', 'O', 'U', // first letter\n        'a', 'e',\
    \ 'i', 'o', 'u', // last letter\n        'i', 'o', 'u', // first and last letter\n\
    \    }\n    length := len(text)\n    for i := 0; i < length; i++ {\n        text\
    \ := text[:i] + text[i+1:]\n        if text != \"\" {\n            i := 0\n  \
    \          for _, v := range vowels {\n                if v == text[i] {\n   \
    \                 text = text[:i] + text[i+1:]\n                    break\n  \
    \              }\n                i++\n            }\n        }\n    }\n    return\
    \ text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpnv_4jsue_test.go:32:25: invalid operation: v == text[i] (mismatched types
    rune and byte)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073461
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := map[rune]rune{'a': rune('A'), 'e': rune('E'),\
    \ 'i': rune('I'), 'o': rune('O'), 'u': rune('U')}\n    result := \"\"\n    for\
    \ _, char := range text {\n        if _, ok := vowels[char]; ok {\n          \
    \  result = result + char\n        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpu8dlrxdk_test.go:24:22: invalid operation: result + char (mismatched types
    string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073461
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    for i := 0; i < len(text); i++ {\n        if text[i] !=\
    \ 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u'\
    \ {\n            text += text[i]\n        }\n    }\n    return text\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpa4wsqp7__test.go:22:13: invalid operation: text += text[i] (mismatched
    types string and byte)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073461
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I',\
    \ 'O', 'U'}\n    for _, c := range text {\n        for _, vowel := range vowels\
    \ {\n            if c == vowel {\n                text = text[:len(text)-1] +\
    \ text[len(text)-1]\n                break\n            }\n        }\n    }\n\
    \    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate :=\
    \ remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp8pmui07c_test.go:24:28: invalid operation: text[:len(text) - 1] + text[len(text)
    - 1] (mismatched types string and byte)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073461
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    result := \"\"\n    for _, letter := range text {\n  \
    \      if letter != \"\" && letter != \" \" && letter != \"a\" && letter != \"\
    A\" && letter != \"e\" && letter != \"E\" && letter != \"i\" && letter != \"I\"\
    \ && letter != \"o\" && letter != \"O\" && letter != \"u\" && letter != \"U\"\
    \ {\n            result = result + letter\n        }\n    }\n    return result\n\
    }\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmppc0jtr86_test.go:22:22: invalid operation: letter != "" (mismatched types
    rune and untyped string)

    /tmp/tmppc0jtr86_test.go:22:38: invalid operation: letter != " " (mismatched types
    rune and untyped string)

    /tmp/tmppc0jtr86_test.go:22:55: invalid operation: letter != "a" (mismatched types
    rune and untyped string)

    /tmp/tmppc0jtr86_test.go:22:72: invalid operation: letter != "A" (mismatched types
    rune and untyped string)

    /tmp/tmppc0jtr86_test.go:22:89: invalid operation: letter != "e" (mismatched types
    rune and untyped string)

    /tmp/tmppc0jtr86_test.go:22:106: invalid operation: letter != "E" (mismatched
    types rune and untyped string)

    /tmp/tmppc0jtr86_test.go:22:123: invalid operation: letter != "i" (mismatched
    types rune and untyped string)

    /tmp/tmppc0jtr86_test.go:22:140: invalid operation: letter != "I" (mismatched
    types rune and untyped string)

    /tmp/tmppc0jtr86_test.go:22:157: invalid operation: letter != "o" (mismatched
    types rune and untyped string)

    /tmp/tmppc0jtr86_test.go:22:174: invalid operation: letter != "O" (mismatched
    types rune and untyped string)

    /tmp/tmppc0jtr86_test.go:22:174: too many errors

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073461
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    for i := 0; i < len(text); i++ {\n        if text[i] ==\
    \ 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u'\
    \ {\n            return text[:i]\n        }\n    }\n\n    return text\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__1\
    \ (0.00s)\n        tmprq7ugx8q_test.go:48: expected 'bcdf\n            ghjklm',\
    \ got ''\n    --- FAIL: TestRemove_Vowels/test_num__2 (0.00s)\n        tmprq7ugx8q_test.go:48:\
    \ expected 'fdcb', got 'f'\n    --- FAIL: TestRemove_Vowels/test_num__4 (0.00s)\n\
    \        tmprq7ugx8q_test.go:48: expected 'cB', got ''\n    --- FAIL: TestRemove_Vowels/test_num__5\
    \ (0.00s)\n        tmprq7ugx8q_test.go:48: expected 'cB', got 'EcBOO'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073461
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a','e','i','o','u'}\n    result := \"\
    \"\n    l := len(text)\n    for i := 0; i < l; i++ {\n        if text[i] == 'a'\
    \ || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u' {\n\
    \            if result != \"\" {\n                result += text[i]\n        \
    \    }\n        } else {\n            if result != \"\" {\n                result\
    \ += text[i]\n            }\n        }\n    }\n    return result\n}\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpiywy241w_test.go:20:5: vowels declared but not used

    /tmp/tmpiywy241w_test.go:26:17: invalid operation: result += text[i] (mismatched
    types string and byte)

    /tmp/tmpiywy241w_test.go:30:17: invalid operation: result += text[i] (mismatched
    types string and byte)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073461
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    text = text[:1]\n    vowels := \"aeiouAEIOU\"\n    for\
    \ _, v := range vowels {\n        text = text.replace(v, \"\")\n    }\n    return\
    \ text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmppc030t_z_test.go:23:21: text.replace undefined (type string has no field
    or method replace)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073461
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    var result string\n\n    for _, letter := range text {\n\
    \        if letter != \"a\" && letter != \"e\" && letter != \"i\" && letter !=\
    \ \"o\" && letter != \"u\" {\n            result += letter\n        }\n    }\n\
    \n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpgd0y8xau_test.go:23:22: invalid operation: letter != "a" (mismatched types
    rune and untyped string)

    /tmp/tmpgd0y8xau_test.go:23:39: invalid operation: letter != "e" (mismatched types
    rune and untyped string)

    /tmp/tmpgd0y8xau_test.go:23:56: invalid operation: letter != "i" (mismatched types
    rune and untyped string)

    /tmp/tmpgd0y8xau_test.go:23:73: invalid operation: letter != "o" (mismatched types
    rune and untyped string)

    /tmp/tmpgd0y8xau_test.go:23:90: invalid operation: letter != "u" (mismatched types
    rune and untyped string)

    /tmp/tmpgd0y8xau_test.go:24:13: invalid operation: result += letter (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073461
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    // This loop iterates over every character in the string\
    \ text and\n    // checks to see if that character is in the set of the letters\
    \ a-z\n    // and A-Z.  If it is, it removes it from the string and adds it\n\
    \    // to the new string.\n    // If the character is not a-z or A-Z, it just\
    \ adds the character to\n    // the new string.\n    text := string(text)\n  \
    \  for _, letter := range text {\n        if letter == \"a\" || letter == \"e\"\
    \ || letter == \"i\" || letter == \"o\" || letter == \"u\" {\n            delete(text,\
    \ letter)\n            text += letter\n        }\n    }\n\n    return text\n}\n\
    \nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpvj8bw7nz_test.go:26:10: no new variables on left side of :=

    /tmp/tmpvj8bw7nz_test.go:28:22: invalid operation: letter == "a" (mismatched types
    rune and untyped string)

    /tmp/tmpvj8bw7nz_test.go:28:39: invalid operation: letter == "e" (mismatched types
    rune and untyped string)

    /tmp/tmpvj8bw7nz_test.go:28:56: invalid operation: letter == "i" (mismatched types
    rune and untyped string)

    /tmp/tmpvj8bw7nz_test.go:28:73: invalid operation: letter == "o" (mismatched types
    rune and untyped string)

    /tmp/tmpvj8bw7nz_test.go:28:90: invalid operation: letter == "u" (mismatched types
    rune and untyped string)

    /tmp/tmpvj8bw7nz_test.go:29:20: invalid argument: text (variable of type string)
    is not a map

    /tmp/tmpvj8bw7nz_test.go:30:13: invalid operation: text += letter (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073461
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    // Remove all vowels from given string and return result\n\
    \    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate :=\
    \ remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__1\
    \ (0.00s)\n        tmpza37u5l4_test.go:43: expected 'bcdf\n            ghjklm',\
    \ got 'abcdef\n            ghijklm'\n    --- FAIL: TestRemove_Vowels/test_num__2\
    \ (0.00s)\n        tmpza37u5l4_test.go:43: expected 'fdcb', got 'fedcba'\n   \
    \ --- FAIL: TestRemove_Vowels/test_num__3 (0.00s)\n        tmpza37u5l4_test.go:43:\
    \ expected '', got 'eeeee'\n    --- FAIL: TestRemove_Vowels/test_num__4 (0.00s)\n\
    \        tmpza37u5l4_test.go:43: expected 'cB', got 'acBAA'\n    --- FAIL: TestRemove_Vowels/test_num__5\
    \ (0.00s)\n        tmpza37u5l4_test.go:43: expected 'cB', got 'EcBOO'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073461
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    var result string = text\n    for _, char := range text\
    \ {\n        if char <= 'z' || char >= 'Z' {\n            result = result + char\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp3nb2ersa_test.go:23:22: invalid operation: result + char (mismatched types
    string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073461
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a','e','i','o','u'}\n    text := strings.ToLower(text)\n\
    \    for i, l := range text {\n        if !contains(vowels, l) {\n           \
    \ text := text[:i]\n            break\n        }\n    }\n    return text\n}\n\n\
    func TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp91ghxw_p_test.go:21:10: no new variables on left side of :=

    /tmp/tmp91ghxw_p_test.go:21:13: undefined: strings

    /tmp/tmp91ghxw_p_test.go:23:13: undefined: contains

    /tmp/tmp91ghxw_p_test.go:24:13: text declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073461
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune(\"aeiouy\")\n    for _, letter := range\
    \ text {\n        for _, vowel := range vowels {\n            if letter == vowel\
    \ {\n                text = text[:len(text)-1]\n            }\n        }\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__1\
    \ (0.00s)\n        tmpml8xkcd7_test.go:50: expected 'bcdf\n            ghjklm',\
    \ got 'abcdef\n            ghij'\n    --- FAIL: TestRemove_Vowels/test_num__2\
    \ (0.00s)\n        tmpml8xkcd7_test.go:50: expected 'fdcb', got 'fedc'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__4 (0.00s)\n        tmpml8xkcd7_test.go:50:\
    \ expected 'cB', got 'acBA'\n    --- FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n\
    \        tmpml8xkcd7_test.go:50: expected 'cB', got 'EcBOO'\n    --- FAIL: TestRemove_Vowels/test_num__6\
    \ (0.00s)\n        tmpml8xkcd7_test.go:50: expected 'ybcd', got 'ybc'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073462
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    for _, c := range text {\n        if !('a'<=c && c<='z'\
    \ || 'A'<=c && c<='Z') {\n            return text\n        }\n    }\n    return\
    \ text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__1\
    \ (0.00s)\n        tmpmcmrzlil_test.go:47: expected 'bcdf\n            ghjklm',\
    \ got 'abcdef\n            ghijklm'\n    --- FAIL: TestRemove_Vowels/test_num__2\
    \ (0.00s)\n        tmpmcmrzlil_test.go:47: expected 'fdcb', got 'fedcba'\n   \
    \ --- FAIL: TestRemove_Vowels/test_num__3 (0.00s)\n        tmpmcmrzlil_test.go:47:\
    \ expected '', got 'eeeee'\n    --- FAIL: TestRemove_Vowels/test_num__4 (0.00s)\n\
    \        tmpmcmrzlil_test.go:47: expected 'cB', got 'acBAA'\n    --- FAIL: TestRemove_Vowels/test_num__5\
    \ (0.00s)\n        tmpmcmrzlil_test.go:47: expected 'cB', got 'EcBOO'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073462
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    text := strings.ToLower(text)\n    text = strings.Trim(text,\
    \ \"aeiou\")\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n \
    \ candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp9_lm8sp__test.go:20:10: no new variables on left side of :=

    /tmp/tmp9_lm8sp__test.go:20:13: undefined: strings

    /tmp/tmp9_lm8sp__test.go:21:12: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073462
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    fmt.Println(\"remove_vowels function running\")\n    vowels\
    \ := []rune(\"aeiouAEIOU\")\n    var result string\n    for _, char := range text\
    \ {\n        result = result + string(rune(char))\n    }\n    for _, vowel :=\
    \ range vowels {\n        result = result[:len(result)-1]\n    }\n    fmt.Println(result)\n\
    \    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate :=\
    \ remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpq0onl905_test.go:26:12: vowel declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073462
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    if len(text) == 0 {\n        return \"\"\n    }\n    vowels\
    \ := []rune(\"aA\")\n    for _, char := range text {\n        if !contains(vowels,\
    \ rune(char)) {\n            text = text[:len(text)-1] + text[len((text)-1):]\n\
    \        }\n    }\n    return text\n}\nfunc TestRemove_Vowels(t *testing.T) {\n\
    \  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpxu_74ytj_test.go:25:13: undefined: contains

    /tmp/tmpxu_74ytj_test.go:26:50: invalid operation: (text) - 1 (mismatched types
    string and untyped int)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073462
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n\
    \    text := strings.ToLower(text)\n    for _, v := range vowels {\n        text\
    \ = strings.Replace(text, v, \"\", -1)\n    }\n    return text\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpoee_buge_test.go:21:10: no new variables on left side of :=

    /tmp/tmpoee_buge_test.go:21:13: undefined: strings

    /tmp/tmpoee_buge_test.go:23:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073462
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune(\"aeiou\")\n    var result string\n \
    \   for _, r := range text {\n        if !containsRune(vowels, r) {\n        \
    \    result = result + string(r)\n        }\n    }\n    return result\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp2_jqvbzh_test.go:23:13: undefined: containsRune

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073462
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    for i := 0; i < len(text); i++ {\n        if text[i] ==\
    \ 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u'\
    \ {\n            continue\n        }\n        return text\n    }\n    return text\n\
    }\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__1\
    \ (0.00s)\n        tmpwq73mrtq_test.go:48: expected 'bcdf\n            ghjklm',\
    \ got 'abcdef\n            ghijklm'\n    --- FAIL: TestRemove_Vowels/test_num__2\
    \ (0.00s)\n        tmpwq73mrtq_test.go:48: expected 'fdcb', got 'fedcba'\n   \
    \ --- FAIL: TestRemove_Vowels/test_num__3 (0.00s)\n        tmpwq73mrtq_test.go:48:\
    \ expected '', got 'eeeee'\n    --- FAIL: TestRemove_Vowels/test_num__4 (0.00s)\n\
    \        tmpwq73mrtq_test.go:48: expected 'cB', got 'acBAA'\n    --- FAIL: TestRemove_Vowels/test_num__5\
    \ (0.00s)\n        tmpwq73mrtq_test.go:48: expected 'cB', got 'EcBOO'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660073462
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    if len(text) == 0 {\n        return \"\"\n    }\n    text\
    \ := strings.ToLower(text)\n    chars := []rune(text)\n    result := \"\"\n  \
    \  for _, char := range chars {\n        if strings.Index(strings.ToLower(fmt.Sprintf(\"\
    aeiou%c\", char)), \"\") == -1 {\n            result = result + string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpixqbmdvz_test.go:23:10: no new variables on left side of :=

    /tmp/tmpixqbmdvz_test.go:23:13: undefined: strings

    /tmp/tmpixqbmdvz_test.go:27:12: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073462
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    text = strings.Replace(text, `a`, ``, `g`)\n    text =\
    \ strings.Replace(text, `e`, ``, `g`)\n    text = strings.Replace(text, `i`, ``,\
    \ `g`)\n    text = strings.Replace(text, `o`, ``, `g`)\n    text = strings.Replace(text,\
    \ `u`, ``, `g`)\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n\
    \  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp2gqr9dvu_test.go:20:12: undefined: strings

    /tmp/tmp2gqr9dvu_test.go:21:12: undefined: strings

    /tmp/tmp2gqr9dvu_test.go:22:12: undefined: strings

    /tmp/tmp2gqr9dvu_test.go:23:12: undefined: strings

    /tmp/tmp2gqr9dvu_test.go:24:12: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073462

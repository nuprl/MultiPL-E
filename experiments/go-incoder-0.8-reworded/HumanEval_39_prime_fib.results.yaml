language: go_test.go
name: HumanEval_39_prime_fib
results:
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    primes := [2]int{1, 1}\n    for i := 3; i <= n/2; i++ {\n  \
    \      if primes[i]%i == 0 {\n            primes[i+1]++\n        }\n    }\n  \
    \  return primes[n-1]\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate :=\
    \ prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\npanic: runtime error: index out of range\
    \ [2] with length 2 [recovered]\n\tpanic: runtime error: index out of range [2]\
    \ with length 2\n\ngoroutine 34 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc0001d6000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc0001d6000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.prime_fib(...)\n\t/tmp/tmpjz9w_luc_test.go:26\n\
    command-line-arguments_test.TestPrime_Fib(0x0?)\n\t/tmp/tmpjz9w_luc_test.go:38\
    \ +0x1b\ntesting.tRunner(0xc00019aea0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074769
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 0 {\n        panic(fmt.Sprintf(\"Fibonacci numbers are\
    \ only defined for non-negative integer numbers: %v\", n))\n    }\n\n    if n\
    \ == 0 || n == 1 {\n        return n\n    }\n\n    c := 2\n    l := 5\n    h :=\
    \ 3\n    for i := 4; i <= n; i++ {\n        if c > n {\n            panic(fmt.Sprintf(\"\
    Fibonacci numbers are only defined for non-negative integers: %v\", n))\n    \
    \    }\n        c += h\n        h += l\n        l *= 2\n    }\n    return c\n\
    }\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\npanic: Fibonacci numbers are only defined\
    \ for non-negative integers: 6 [recovered]\n\tpanic: Fibonacci numbers are only\
    \ defined for non-negative integers: 6\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x4fde20,\
    \ 0xc0000d8520})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x4fde20, 0xc0000d8520})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.prime_fib(0x0?)\n\t/tmp/tmpu4iw_hes_test.go:33\
    \ +0xc8\ncommand-line-arguments_test.TestPrime_Fib(0x0?)\n\t/tmp/tmpu4iw_hes_test.go:54\
    \ +0xca\ntesting.tRunner(0xc0001a01a0, 0x528fc8)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074769
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 1; i <= n; i++ {\n        a, b = b, a+b\n    }\n    return b\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpo5koubus_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpo5koubus_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpo5koubus_test.go:52: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpo5koubus_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpo5koubus_test.go:52: expected '%!s(int=89)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpo5koubus_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpo5koubus_test.go:52: expected '%!s(int=1597)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpo5koubus_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=34)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpo5koubus_test.go:52: expected '%!s(int=514229)', got '%!s(int=55)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpo5koubus_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=89)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074769
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    // check base case\n    if n <= 1 {\n        return n\n    }\n\
    \    return prime_fib(n - 1) + prime_fib(n - 2)\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpmb6mglfm_test.go:49: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpmb6mglfm_test.go:49:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpmb6mglfm_test.go:49: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpmb6mglfm_test.go:49:\
    \ expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpmb6mglfm_test.go:49: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpmb6mglfm_test.go:49:\
    \ expected '%!s(int=233)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpmb6mglfm_test.go:49: expected '%!s(int=1597)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpmb6mglfm_test.go:49:\
    \ expected '%!s(int=28657)', got '%!s(int=21)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpmb6mglfm_test.go:49: expected '%!s(int=514229)', got '%!s(int=34)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpmb6mglfm_test.go:49:\
    \ expected '%!s(int=433494437)', got '%!s(int=55)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074769
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n == 1 {\n        return 2\n    } else if n == 2 {\n    \
    \    return 3\n    } else {\n        return prime_fib(n-2) + prime_fib(n-1)\n\
    \    }\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual:\
    \ candidate(2), expected: 3 },\n     { actual: candidate(3), expected: 5 },\n\
    \     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5), expected:\
    \ 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7),\
    \ expected: 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual:\
    \ candidate(9), expected: 514229 },\n     { actual: candidate(10), expected: 433494437\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__3\
    \ (0.00s)\n        tmpfncbftiy_test.go:51: expected '%!s(int=13)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__4 (0.00s)\n        tmpfncbftiy_test.go:51:\
    \ expected '%!s(int=89)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmpfncbftiy_test.go:51: expected '%!s(int=233)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmpfncbftiy_test.go:51:\
    \ expected '%!s(int=1597)', got '%!s(int=34)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmpfncbftiy_test.go:51: expected '%!s(int=28657)', got '%!s(int=55)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmpfncbftiy_test.go:51:\
    \ expected '%!s(int=514229)', got '%!s(int=89)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmpfncbftiy_test.go:51: expected '%!s(int=433494437)', got\
    \ '%!s(int=144)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074769
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return 0\n    }\n\n    if n == 2 {\n   \
    \     return 2\n    }\n\n    x := 1\n    y := 1\n    for i := 3; i <= n; i++ {\n\
    \        x, y = y, x+y\n    }\n\n    return y\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmprlg5g8us_test.go:59: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmprlg5g8us_test.go:59:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmprlg5g8us_test.go:59: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmprlg5g8us_test.go:59:\
    \ expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmprlg5g8us_test.go:59: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmprlg5g8us_test.go:59:\
    \ expected '%!s(int=233)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmprlg5g8us_test.go:59: expected '%!s(int=1597)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmprlg5g8us_test.go:59:\
    \ expected '%!s(int=28657)', got '%!s(int=21)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmprlg5g8us_test.go:59: expected '%!s(int=514229)', got '%!s(int=34)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmprlg5g8us_test.go:59:\
    \ expected '%!s(int=433494437)', got '%!s(int=55)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074769
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n%2 == 0 {\n        return prime_fib(n / 2) + prime_fib(n\
    \ / 2)\n    }\n    if n%2 != 0 {\n        return n\n    }\n    return prime_fib(n\
    \ / 2) + prime_fib(n / 2)\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpertlsun5_test.go:51: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpertlsun5_test.go:51:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpertlsun5_test.go:51: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpertlsun5_test.go:51:\
    \ expected '%!s(int=13)', got '%!s(int=4)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpertlsun5_test.go:51: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpertlsun5_test.go:51:\
    \ expected '%!s(int=233)', got '%!s(int=6)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpertlsun5_test.go:51: expected '%!s(int=1597)', got '%!s(int=7)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpertlsun5_test.go:51:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpertlsun5_test.go:51: expected '%!s(int=514229)', got '%!s(int=9)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpertlsun5_test.go:51:\
    \ expected '%!s(int=433494437)', got '%!s(int=10)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.002s\nFAIL\n"
  timestamp: 1660074769
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    // If n <= 1, then its a prime.\n    if n <= 1 {\n        return\
    \ n\n    }\n    // If n is even, then n-1 is a Fibonacci number.\n    if n%2 ==\
    \ 0 {\n        return prime_fib(n-1) + prime_fib(n-2)\n    }\n    // If n is odd,\
    \ then n-2 has a Fibonacci number greater than the previous.\n    return prime_fib(n-2)\
    \ + prime_fib(n-1)\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual:\
    \ candidate(2), expected: 3 },\n     { actual: candidate(3), expected: 5 },\n\
    \     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5), expected:\
    \ 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7),\
    \ expected: 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual:\
    \ candidate(9), expected: 514229 },\n     { actual: candidate(10), expected: 433494437\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpvyb8qz69_test.go:54: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpvyb8qz69_test.go:54:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpvyb8qz69_test.go:54: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpvyb8qz69_test.go:54:\
    \ expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpvyb8qz69_test.go:54: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpvyb8qz69_test.go:54:\
    \ expected '%!s(int=233)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpvyb8qz69_test.go:54: expected '%!s(int=1597)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpvyb8qz69_test.go:54:\
    \ expected '%!s(int=28657)', got '%!s(int=21)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpvyb8qz69_test.go:54: expected '%!s(int=514229)', got '%!s(int=34)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpvyb8qz69_test.go:54:\
    \ expected '%!s(int=433494437)', got '%!s(int=55)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074769
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    x, y := 0, 1\n    for\
    \ i := 0; i < n; i++ {\n        x, y = y, x+y\n    }\n    return y\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpsvaxec7o_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpsvaxec7o_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpsvaxec7o_test.go:52: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpsvaxec7o_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpsvaxec7o_test.go:52: expected '%!s(int=89)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpsvaxec7o_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpsvaxec7o_test.go:52: expected '%!s(int=1597)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpsvaxec7o_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=34)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpsvaxec7o_test.go:52: expected '%!s(int=514229)', got '%!s(int=55)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpsvaxec7o_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=89)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074769
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 1 {\n     \
    \   return 2\n    }\n\n    primes := []int{2, 3, 5}\n    index := 0\n    for i\
    \ := 3; i < n; i++ {\n        if primes[index] == 1 {\n            primes[index]\
    \ = 2\n            for j := 3; j*j <= i; j++ {\n                if i == j*j {\n\
    \                    primes[index] = 1\n                    break\n          \
    \      }\n            }\n        }\n\n        primes[index]++\n        index++\n\
    \    }\n    return primes[n-1]\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\npanic: runtime error: index out of range\
    \ [3] with length 3 [recovered]\n\tpanic: runtime error: index out of range [3]\
    \ with length 3\n\ngoroutine 34 [running]:\ntesting.tRunner.func1.2({0x513620,\
    \ 0xc0001d6000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513620, 0xc0001d6000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.prime_fib(0x0?)\n\t/tmp/tmphglvl_b9_test.go:43\
    \ +0xa8\ncommand-line-arguments_test.TestPrime_Fib(0x0?)\n\t/tmp/tmphglvl_b9_test.go:56\
    \ +0x96\ntesting.tRunner(0xc0001991e0, 0x528f40)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074769
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n == 1 || n == 2 {\n        return 1\n    }\n\n    if n ==\
    \ 0 {\n        return 0\n    }\n\n    a, b := prime_fib(n-1), prime_fib(n-2)\n\
    \    if a == 0 && b == 0 {\n        return n\n    } else {\n        return a*b\
    \ + n\n    }\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual:\
    \ candidate(2), expected: 3 },\n     { actual: candidate(3), expected: 5 },\n\
    \     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5), expected:\
    \ 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7),\
    \ expected: 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual:\
    \ candidate(9), expected: 514229 },\n     { actual: candidate(10), expected: 433494437\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpx6epkda7_test.go:58: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpx6epkda7_test.go:58:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpx6epkda7_test.go:58: expected '%!s(int=5)', got '%!s(int=4)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpx6epkda7_test.go:58:\
    \ expected '%!s(int=13)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpx6epkda7_test.go:58: expected '%!s(int=89)', got '%!s(int=37)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpx6epkda7_test.go:58:\
    \ expected '%!s(int=233)', got '%!s(int=302)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpx6epkda7_test.go:58: expected '%!s(int=1597)', got '%!s(int=11181)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpx6epkda7_test.go:58:\
    \ expected '%!s(int=28657)', got '%!s(int=3376670)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpx6epkda7_test.go:58: expected '%!s(int=514229)', got '%!s(int=37754547279)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpx6epkda7_test.go:58:\
    \ expected '%!s(int=433494437)', got '%!s(int=127484647160580940)'\nFAIL\nFAIL\t\
    command-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074769
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n%2 == 0 {\n        return prime_fib(2*n+1)\n    }\n\n  \
    \  m := 4\n    for {\n        m += 2\n        if m%n == 0 {\n            return\
    \ m\n        }\n    }\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate :=\
    \ prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpp58oi01e_test.go:55: expected '%!s(int=2)', got '%!s(int=6)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpp58oi01e_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=10)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpp58oi01e_test.go:55: expected '%!s(int=5)', got '%!s(int=6)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpp58oi01e_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=18)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpp58oi01e_test.go:55: expected '%!s(int=89)', got '%!s(int=10)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpp58oi01e_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=26)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpp58oi01e_test.go:55: expected '%!s(int=1597)', got '%!s(int=14)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpp58oi01e_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=34)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpp58oi01e_test.go:55: expected '%!s(int=514229)', got '%!s(int=18)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpp58oi01e_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=42)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074769
- exit_code: 2
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    return prime_fib_next(n-2)\
    \ + prime_fib_next(n-1)\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpvlenvo2__test.go:23:12: undefined: prime_fib_next

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074769
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    n -= 2\n    return\
    \ prime_fib(n - 1) + prime_fib(n - 2)\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n\
    \  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1), expected:\
    \ 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual: candidate(3),\
    \ expected: 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual:\
    \ candidate(5), expected: 89 },\n     { actual: candidate(6), expected: 233 },\n\
    \     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpwwvy4vhl_test.go:49: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpwwvy4vhl_test.go:49:\
    \ expected '%!s(int=3)', got '%!s(int=-3)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpwwvy4vhl_test.go:49: expected '%!s(int=5)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpwwvy4vhl_test.go:49:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpwwvy4vhl_test.go:49: expected '%!s(int=89)', got '%!s(int=-2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpwwvy4vhl_test.go:49:\
    \ expected '%!s(int=233)', got '%!s(int=-4)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpwwvy4vhl_test.go:49: expected '%!s(int=1597)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpwwvy4vhl_test.go:49:\
    \ expected '%!s(int=28657)', got '%!s(int=-1)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpwwvy4vhl_test.go:49: expected '%!s(int=514229)', got '%!s(int=-6)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpwwvy4vhl_test.go:49:\
    \ expected '%!s(int=433494437)', got '%!s(int=-4)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074769
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    a, b := 0, 1\n    for i := 2; i <= n; i++ {\n        if i%2\
    \ == 0 {\n            a += b\n        }\n        if i == n+2 {\n            return\
    \ a\n        }\n        b, a = a+b, a\n    }\n    return 0\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpnenkjeu5_test.go:55: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpnenkjeu5_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpnenkjeu5_test.go:55: expected '%!s(int=5)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpnenkjeu5_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpnenkjeu5_test.go:55: expected '%!s(int=89)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpnenkjeu5_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpnenkjeu5_test.go:55: expected '%!s(int=1597)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpnenkjeu5_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpnenkjeu5_test.go:55: expected '%!s(int=514229)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpnenkjeu5_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.008s\nFAIL\n"
  timestamp: 1660074769
- exit_code: null
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    a, b := 0, 1\n    for n > 0 {\n        if a < b {\n        \
    \    n -= 1\n        }\n        if n%2 == 0 {\n            a++\n        } else\
    \ {\n            b++\n        }\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660074782
- exit_code: 2
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    f := func(a int, b\
    \ int) int {\n        if b%2 == 0 {\n            return a + b\n        }\n   \
    \     return f(b,a+1)\n    }\n    return f(1, 1)\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpujzvad6f_test.go:27:16: undefined: f

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074769
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    switch {\n    case n <= 2:\n        return 1\n    case n <=\
    \ 5:\n        return 5\n    case n <= 20:\n        return 3\n    case n > 20:\n\
    \        return 5\n    }\n    return 5\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpx_eoa_h0_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpx_eoa_h0_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__3\
    \ (0.00s)\n        tmpx_eoa_h0_test.go:55: expected '%!s(int=13)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__4 (0.00s)\n        tmpx_eoa_h0_test.go:55:\
    \ expected '%!s(int=89)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmpx_eoa_h0_test.go:55: expected '%!s(int=233)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmpx_eoa_h0_test.go:55:\
    \ expected '%!s(int=1597)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmpx_eoa_h0_test.go:55: expected '%!s(int=28657)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmpx_eoa_h0_test.go:55:\
    \ expected '%!s(int=514229)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmpx_eoa_h0_test.go:55: expected '%!s(int=433494437)', got\
    \ '%!s(int=3)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074769
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    i := 2\n    j := 1\n\
    \    while i <= n {\n        if i % j == 0 {\n            j++\n        }\n   \
    \     i++\n    }\n    return j\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpmfosdn_c_test.go:25:11: expected '';'', found i

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074768
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    switch {\n    case n <= 1:\n        return 1\n    case n ==\
    \ 2:\n        return 2\n    case n % 2 == 0 && n > 2:\n        return prime_fib(n\
    \ - 2) + prime_fib(n - 3)\n    case n % 3 == 0 && n > 2:\n        return prime_fib(n\
    \ - 2) + prime_fib(n - 3)\n    case n % 5 == 0 and n > 2:\n        return prime_fib(n\
    \ - 2) + prime_fib(n - 3)\n    }\n    return n\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpmkmi9k08_test.go:29:21: expected '':'', found and

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074768
- exit_code: 2
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 0 {\n        n *= -1\n    }\n    primes := []int{2, 3}\n\
    \    for i := 5; i < n; i += 6 {\n        if isPrime(primes, i) {\n          \
    \  primes = append(primes, i)\n        }\n    }\n    return primes[n]\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmphpy77fih_test.go:25:12: undefined: isPrime

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074769
- exit_code: 2
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    return fib(n - 1) + fib(n - 2)\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmphpo4ioqd_test.go:20:12: undefined: fib

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074769
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n%2 == 0 {\n        return prime_fib(n-2)\n    } else {\n\
    \        return prime_fib(n-1)+2\n    }\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "runtime: goroutine stack exceeds 1000000000-byte limit\nruntime: sp=0xc020160398\
    \ stack=[0xc020160000, 0xc040160000]\nfatal error: stack overflow\n\nruntime stack:\n\
    runtime.throw({0x51f355?, 0x5e2ea0?})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:992\
    \ +0x71\nruntime.newstack()\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/stack.go:1101\
    \ +0x5cc\nruntime.morestack()\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/asm_amd64.s:547\
    \ +0x8b\n\ngoroutine 18 [running]:\ncommand-line-arguments_test.prime_fib(0xfffffffffd5555dc?)\n\
    \t/tmp/tmpnvm211qw_test.go:19 +0x4f fp=0xc0201603a8 sp=0xc0201603a0 pc=0x4ef6af\n\
    command-line-arguments_test.prime_fib(0x0?)\n\t/tmp/tmpnvm211qw_test.go:21 +0x25\
    \ fp=0xc0201603c0 sp=0xc0201603a8 pc=0x4ef685\ncommand-line-arguments_test.prime_fib(0x0?)\n\
    \t/tmp/tmpnvm211qw_test.go:21 +0x25 fp=0xc0201603d8 sp=0xc0201603c0 pc=0x4ef685\n\
    command-line-arguments_test.prime_fib(0x0?)\n\t/tmp/tmpnvm211qw_test.go:21 +0x25\
    \ fp=0xc0201603f0 sp=0xc0201603d8 pc=0x4ef685\ncommand-line-arguments_test.prime_fib(0x0?)\n\
    \t/tmp/tmpnvm211qw_test.go:21 +0x25 fp=0xc020160408 sp=0xc0201603f0 pc=0x4ef685\n\
    command-line-arguments_test.prime_fib(0x0?)\n\t/tmp/tmpnvm211qw_test.go:21 +0x25\
    \ fp=0xc020160420 sp=0xc020160408 pc=0x4ef685\ncommand-line-arguments_test.prime_fib(0x0?)\n\
    \t/tmp/tmpnvm211qw_test.go:21 +0x25 fp=0xc020160438 sp=0xc020160420 pc=0x4ef685\n\
    command-line-arguments_test.prime_fib(0x0?)\n\t/tmp/tmpnvm211qw_test.go:21 +0x25\
    \ fp=0xc020160450 sp=0xc020160438 pc=0x4ef685\ncommand-line-arguments_test.prime_fib(0x0?)\n\
    \t/tmp/tmpnvm211qw_test.go:21 +0x25 fp=0xc020160468 sp=0xc020160450 pc=0x4ef685\n\
    command-line-arguments_test.prime_fib(0x0?)\n\t/tmp/tmpnvm211qw_test.go:21 +0x25\
    \ fp=0xc020160480 sp=0xc020160468 pc=0x4ef685\ncommand-line-arguments_test.prime_fib(0x0?)\n\
    \t/tmp/tmpnvm211qw_test.go:21 +0x25 fp=0xc020160498 sp=0xc020160480 pc=0x4ef685\n\
    command-line-arguments_test.prime_fib(0x0?)\n\t/tmp/tmpnvm211qw_test.go:21 +0x25\
    \ fp=0xc0201604b0 sp=0xc020160498 pc=0x4ef685\ncommand-line-arguments_test.prime_fib(0x0?)\n\
    \t/tmp/tmpnvm211qw_test.go:21 +0x25 fp=0x"
  timestamp: 1660074771
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    var a, b int\n    if n <= 1 {\n        return n\n    }\n\n \
    \   a = prime_fib(n - 1)\n    b = prime_fib(n - 2)\n    if a * b == n {\n    \
    \    return n\n    }\n    if a > b {\n        return a\n    }\n    return b\n\
    }\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpcd7nz786_test.go:58: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpcd7nz786_test.go:58:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpcd7nz786_test.go:58: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpcd7nz786_test.go:58:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpcd7nz786_test.go:58: expected '%!s(int=89)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpcd7nz786_test.go:58:\
    \ expected '%!s(int=233)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpcd7nz786_test.go:58: expected '%!s(int=1597)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpcd7nz786_test.go:58:\
    \ expected '%!s(int=28657)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpcd7nz786_test.go:58: expected '%!s(int=514229)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpcd7nz786_test.go:58:\
    \ expected '%!s(int=433494437)', got '%!s(int=1)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074770
- exit_code: 2
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n <= 1 {\n        return n\n    }\n\n    f := make([]int,\
    \ 0, n+1)\n    f := append(f, 1)\n\n    for i := 2; i < n; i++ {\n        if f[i-1]\
    \ == 1 {\n            f := append(f, 0)\n        }\n        f[i-1] = f[i-2] +\
    \ f[i-1]\n    }\n    return f[n]\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpcg6mi9q__test.go:25:7: no new variables on left side of :=

    /tmp/tmpcg6mi9q__test.go:29:13: f declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074770
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    a, b := 0, 1\n    for i := n-1; i > 1; i-- {\n        a, b =\
    \ b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp4yb10j3s_test.go:49: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp4yb10j3s_test.go:49:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp4yb10j3s_test.go:49: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp4yb10j3s_test.go:49:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp4yb10j3s_test.go:49: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp4yb10j3s_test.go:49:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp4yb10j3s_test.go:49: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp4yb10j3s_test.go:49:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp4yb10j3s_test.go:49: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp4yb10j3s_test.go:49:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074771
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    a, b := 0, 1\n    for i := 3; i <= n; i++ {\n        a, b =\
    \ b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpfylfy3k5_test.go:49: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpfylfy3k5_test.go:49:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpfylfy3k5_test.go:49: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpfylfy3k5_test.go:49:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpfylfy3k5_test.go:49: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpfylfy3k5_test.go:49:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpfylfy3k5_test.go:49: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpfylfy3k5_test.go:49:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpfylfy3k5_test.go:49: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpfylfy3k5_test.go:49:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074771
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    p := make([]int, n+1)\n    p[0] = p[1] = 1\n    for i := 2;\
    \ i <= n; i++ {\n        if p[i] == 0 {\n            p[i] = p[i-1] + p[i-2]\n\
    \        }\n    }\n    return p[n]\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n\
    \  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1), expected:\
    \ 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual: candidate(3),\
    \ expected: 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual:\
    \ candidate(5), expected: 89 },\n     { actual: candidate(6), expected: 233 },\n\
    \     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpg8jk8_ok_test.go:21:17: expected ''=='', found ''=''

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074770
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    switch {\n    case n < 2:\n        return n\n    case n == 2:\n\
    \        return 1\n    case n % 2 == 1:\n        return prime_fib(n-2)+1\n   \
    \ default:\n        return prime_fib(n-3)+prime_fib(n-2)\n    }\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpog5f222q_test.go:54: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpog5f222q_test.go:54:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpog5f222q_test.go:54: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpog5f222q_test.go:54:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpog5f222q_test.go:54: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpog5f222q_test.go:54:\
    \ expected '%!s(int=233)', got '%!s(int=4)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpog5f222q_test.go:54: expected '%!s(int=1597)', got '%!s(int=4)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpog5f222q_test.go:54:\
    \ expected '%!s(int=28657)', got '%!s(int=7)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpog5f222q_test.go:54: expected '%!s(int=514229)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpog5f222q_test.go:54:\
    \ expected '%!s(int=433494437)', got '%!s(int=11)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074771
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    // we consider 1 and 0 as prime number\n    if (n == 2) { \n\
    \        return 1\n    }\n    if (n == 1) {\n        return 0\n    }\n\n    //\
    \ we consider any even number as prime number\n    if (n % 2 == 0) {\n       \
    \ return prime_fib(n / 2) + prime_fib(n / 2)\n    }\n\n    // if n is odd it must\
    \ be a Fibonacci number otherwise it must be a prime number\n    var a = prime_fib(n\
    \ / 2) + prime_fib(n / 2)\n    var b = prime_fib(n / 2) + prime_fib(n / 2)\n \
    \   if (a > n) {\n        return a\n    }\n    if (b > n) {\n        return b\n\
    \    }\n    return a + b\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp8p4ie42z_test.go:67: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp8p4ie42z_test.go:67:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp8p4ie42z_test.go:67: expected '%!s(int=5)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp8p4ie42z_test.go:67:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp8p4ie42z_test.go:67: expected '%!s(int=89)', got '%!s(int=4)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp8p4ie42z_test.go:67:\
    \ expected '%!s(int=233)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp8p4ie42z_test.go:67: expected '%!s(int=1597)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp8p4ie42z_test.go:67:\
    \ expected '%!s(int=28657)', got '%!s(int=4)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp8p4ie42z_test.go:67: expected '%!s(int=514229)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp8p4ie42z_test.go:67:\
    \ expected '%!s(int=433494437)', got '%!s(int=8)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074772
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpua8m5uwr_test.go:48: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpua8m5uwr_test.go:48:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpua8m5uwr_test.go:48: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpua8m5uwr_test.go:48:\
    \ expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpua8m5uwr_test.go:48: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpua8m5uwr_test.go:48:\
    \ expected '%!s(int=233)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpua8m5uwr_test.go:48: expected '%!s(int=1597)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpua8m5uwr_test.go:48:\
    \ expected '%!s(int=28657)', got '%!s(int=21)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpua8m5uwr_test.go:48: expected '%!s(int=514229)', got '%!s(int=34)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpua8m5uwr_test.go:48:\
    \ expected '%!s(int=433494437)', got '%!s(int=55)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074772
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    // base case\n    if n <= 1 {\n        return n\n    }\n\n \
    \   // return (n*(n+1))/2\n    return n*(n / 2) + 1\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpm5_hu2k__test.go:51: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__2 (0.00s)\n        tmpm5_hu2k__test.go:51:\
    \ expected '%!s(int=5)', got '%!s(int=4)'\n    --- FAIL: TestPrime_Fib/test_num__3\
    \ (0.00s)\n        tmpm5_hu2k__test.go:51: expected '%!s(int=13)', got '%!s(int=9)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__4 (0.00s)\n        tmpm5_hu2k__test.go:51:\
    \ expected '%!s(int=89)', got '%!s(int=11)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmpm5_hu2k__test.go:51: expected '%!s(int=233)', got '%!s(int=19)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmpm5_hu2k__test.go:51:\
    \ expected '%!s(int=1597)', got '%!s(int=22)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmpm5_hu2k__test.go:51: expected '%!s(int=28657)', got '%!s(int=33)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmpm5_hu2k__test.go:51:\
    \ expected '%!s(int=514229)', got '%!s(int=37)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmpm5_hu2k__test.go:51: expected '%!s(int=433494437)', got\
    \ '%!s(int=51)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074772
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n%2 == 0 {\n        return prime_fib(n-1)\n    } else {\n\
    \        return n\n    }\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp5mokiu24_test.go:49: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp5mokiu24_test.go:49:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp5mokiu24_test.go:49: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp5mokiu24_test.go:49:\
    \ expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp5mokiu24_test.go:49: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp5mokiu24_test.go:49:\
    \ expected '%!s(int=233)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp5mokiu24_test.go:49: expected '%!s(int=1597)', got '%!s(int=7)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp5mokiu24_test.go:49:\
    \ expected '%!s(int=28657)', got '%!s(int=7)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp5mokiu24_test.go:49: expected '%!s(int=514229)', got '%!s(int=9)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp5mokiu24_test.go:49:\
    \ expected '%!s(int=433494437)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074772
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    n -= 2\n    if n%2\
    \ == 1 {\n        return prime_fib(n - 1)\n    }\n    return prime_fib(n - 1)\
    \ + prime_fib(n - 2)\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate :=\
    \ prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpvqaxj5pb_test.go:53: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpvqaxj5pb_test.go:53:\
    \ expected '%!s(int=3)', got '%!s(int=-3)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpvqaxj5pb_test.go:53: expected '%!s(int=5)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpvqaxj5pb_test.go:53:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpvqaxj5pb_test.go:53: expected '%!s(int=89)', got '%!s(int=-3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpvqaxj5pb_test.go:53:\
    \ expected '%!s(int=233)', got '%!s(int=-3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpvqaxj5pb_test.go:53: expected '%!s(int=1597)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpvqaxj5pb_test.go:53:\
    \ expected '%!s(int=28657)', got '%!s(int=-2)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpvqaxj5pb_test.go:53: expected '%!s(int=514229)', got '%!s(int=-3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpvqaxj5pb_test.go:53:\
    \ expected '%!s(int=433494437)', got '%!s(int=-2)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074772
- exit_code: 2
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    f := func(n int) int {\n        if n <= 1 {\n            return\
    \ n\n        }\n        if n == 2 {\n            return 1\n        }\n       \
    \ return f(n - 1) + f(n - 2)\n    }\n    return f(n)\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpzmnfykm8_test.go:27:16: undefined: f

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074771
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    x := 2\n    y := 1\n\
    \    z := 2\n    for {\n        c := x + y\n        if c%z == 0 && c < n {\n \
    \           return c\n        }\n        if c >= n {\n            break\n    \
    \    }\n        y = x\n        x = z\n        z = c\n    }\n    return -1\n}\n\
    \nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpfm2xf4fy_test.go:63: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpfm2xf4fy_test.go:63:\
    \ expected '%!s(int=3)', got '%!s(int=-1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpfm2xf4fy_test.go:63: expected '%!s(int=5)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpfm2xf4fy_test.go:63:\
    \ expected '%!s(int=13)', got '%!s(int=-1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpfm2xf4fy_test.go:63: expected '%!s(int=89)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpfm2xf4fy_test.go:63:\
    \ expected '%!s(int=233)', got '%!s(int=-1)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpfm2xf4fy_test.go:63: expected '%!s(int=1597)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpfm2xf4fy_test.go:63:\
    \ expected '%!s(int=28657)', got '%!s(int=-1)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpfm2xf4fy_test.go:63: expected '%!s(int=514229)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpfm2xf4fy_test.go:63:\
    \ expected '%!s(int=433494437)', got '%!s(int=-1)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074772
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n==1 || n==2 {\n        return n\n    }\n    for i := 2;\
    \ i < n; i++ {\n        if n%i == 0 {\n            return i\n        }\n    }\n\
    \    return n\n}\n</code>\n<|/ a dscore=3 |>\n<| c |>\nThis solution has linear\
    \ complexity (O(n)).\n<|/ c |>\n<| c |>\nSure it does, but it's still O(n) since\
    \ the code inside the loop will execute for O(sqrt(n)) times, giving you an upper\
    \ bound of O(n) complexity. This also makes the code much easier to read and maintain,\
    \ since it separates out different parts of the problem from the rest of the code\
    \ so it's easier to see where you got it wrong.\n<|/ c |>\n<| c |>\nIf you're\
    \ going to do this, there's no reason to start from 2. Keep it at 1 instead, and\
    \ just add 2 to each iteration. Also, `prime_factor` should be `i`.\n<|/ c |>\n\
    <| c |>\nAnd you should break out of the loop as soon as you detect a divisor\
    \ greater than `sqrt(n)`, to avoid overflowing `i`.\n<|/ c |>\n<| c |>\nThat's\
    \ a good point. I'm usually more concerned with correctness than efficiency in\
    \ this kind of thing. I'll change it.\n<|/ c |>\n<| a dscore=2 |>\n<code>\ndef\
    \ prime_fib(num):\n    i=2\n    while i<=num:\n        flag=1\n        for k in\
    \ range(2,int(num/2)+1):\n            if num%k==0:\n                flag=0\n \
    \               break\n        if flag==1:\n            return i\n        i+=1\n\
    </code>\n<|/ a tags=fibonacci,python,c |>\n<| c |>\nThis is a recursive function,\
    \ and will take much more stack space than iterative versions.\n<|/ c |>\n<| c\
    \ |>\nNot really, since in the end the recursive function will always return a\
    \ single value.\n<|/ c |>\n<| c |>\nIt will take a while for the stack to exhaust\
    \ if the function is really called repeatedly. Iterative versions use very few\
    \ stack space (I assumed it was O(log(n)), not O(n)).\n<|/ c |>\n<| c |>\n- you're\
    \ right, a little explanation about the code would be helpful\n<|/ c |>\n<| c\
    \ |>\nI guess my point is that it's clear that the number of calls made to this\
    \ function in each iteration is always going to be lower than the number of iterations,\
    \ so it's a trivial optimization.\n<|/ c |>\n<| a |>\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmp3ibx41_k_test.go:30:1: expected declaration, found ''<''

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074771
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    a, b := 2, 3\n  \
    \  for i := n; i > 0; i-- {\n        c, d := a+b, 2*a\n        a, b = d, c\n \
    \   }\n    return b\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual:\
    \ candidate(2), expected: 3 },\n     { actual: candidate(3), expected: 5 },\n\
    \     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5), expected:\
    \ 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7),\
    \ expected: 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual:\
    \ candidate(9), expected: 514229 },\n     { actual: candidate(10), expected: 433494437\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpjt1d5hk4_test.go:54: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpjt1d5hk4_test.go:54:\
    \ expected '%!s(int=3)', got '%!s(int=9)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpjt1d5hk4_test.go:54: expected '%!s(int=5)', got '%!s(int=17)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpjt1d5hk4_test.go:54:\
    \ expected '%!s(int=13)', got '%!s(int=33)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpjt1d5hk4_test.go:54: expected '%!s(int=89)', got '%!s(int=65)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpjt1d5hk4_test.go:54:\
    \ expected '%!s(int=233)', got '%!s(int=129)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpjt1d5hk4_test.go:54: expected '%!s(int=1597)', got '%!s(int=257)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpjt1d5hk4_test.go:54:\
    \ expected '%!s(int=28657)', got '%!s(int=513)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpjt1d5hk4_test.go:54: expected '%!s(int=514229)', got '%!s(int=1025)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpjt1d5hk4_test.go:54:\
    \ expected '%!s(int=433494437)', got '%!s(int=2049)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.010s\nFAIL\n"
  timestamp: 1660074772
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 1 || n == 2\
    \ {\n        return n\n    }\n    if n % 2 == 0 {\n        return n\n    }\n \
    \   n -= 2\n    for i := 3; i <= n; i = i + 2 {\n        if i%2 == 0 && i != n\
    \ {\n            return n\n        }\n    }\n    return n\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp57zv90qu_test.go:60: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp57zv90qu_test.go:60:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp57zv90qu_test.go:60: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp57zv90qu_test.go:60:\
    \ expected '%!s(int=13)', got '%!s(int=4)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp57zv90qu_test.go:60: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp57zv90qu_test.go:60:\
    \ expected '%!s(int=233)', got '%!s(int=6)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp57zv90qu_test.go:60: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp57zv90qu_test.go:60:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp57zv90qu_test.go:60: expected '%!s(int=514229)', got '%!s(int=7)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp57zv90qu_test.go:60:\
    \ expected '%!s(int=433494437)', got '%!s(int=10)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074772
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    f := 1\n    i := 2\n    for i < n {\n        if f%i == 0 {\n\
    \            break\n        }\n        i += 1\n        f++\n    }\n    return\
    \ i\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__1\
    \ (0.00s)\n        tmpv95duxg6_test.go:54: expected '%!s(int=3)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__2 (0.00s)\n        tmpv95duxg6_test.go:54:\
    \ expected '%!s(int=5)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__3\
    \ (0.00s)\n        tmpv95duxg6_test.go:54: expected '%!s(int=13)', got '%!s(int=4)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__4 (0.00s)\n        tmpv95duxg6_test.go:54:\
    \ expected '%!s(int=89)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmpv95duxg6_test.go:54: expected '%!s(int=233)', got '%!s(int=6)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmpv95duxg6_test.go:54:\
    \ expected '%!s(int=1597)', got '%!s(int=7)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmpv95duxg6_test.go:54: expected '%!s(int=28657)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmpv95duxg6_test.go:54:\
    \ expected '%!s(int=514229)', got '%!s(int=9)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmpv95duxg6_test.go:54: expected '%!s(int=433494437)', got\
    \ '%!s(int=10)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074772
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    a, b := 1, 1\n  \
    \  for i := 2; i <= n; i++ {\n        if a > b {\n            a, b = b, a+b\n\
    \        } else {\n            a, b = b, a+b\n        }\n    }\n    return a\n\
    }\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp738my23__test.go:57: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp738my23__test.go:57:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp738my23__test.go:57: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp738my23__test.go:57:\
    \ expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp738my23__test.go:57: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp738my23__test.go:57:\
    \ expected '%!s(int=233)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp738my23__test.go:57: expected '%!s(int=1597)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp738my23__test.go:57:\
    \ expected '%!s(int=28657)', got '%!s(int=21)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp738my23__test.go:57: expected '%!s(int=514229)', got '%!s(int=34)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp738my23__test.go:57:\
    \ expected '%!s(int=433494437)', got '%!s(int=55)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074772
- exit_code: null
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 1 {\n        return -1\n    }\n    n += 1\n    if n ==\
    \ 1 {\n        return 2\n    }\n    s := 1\n    x := 2\n    c := 2\n    for ;\
    \ ; {\n        if c == n {\n            return c\n        }\n        c = x * x\
    \ + s\n        if c < n {\n            x = c\n            s = 1\n        } else\
    \ {\n            s += 1\n        }\n    }\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660074784
- exit_code: 2
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return 0\n    }\n\n    if n == 2 {\n   \
    \     return 1\n    }\n\n    a, b, found := getFibonacci(n-1); //a=1, b=1\n  \
    \  b, found = getFibonacci(n-2);\n\n    if found {\n        return a\n    } else\
    \ {\n        return b\n    }\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpug395kad_test.go:28:20: undefined: getFibonacci

    /tmp/tmpug395kad_test.go:29:16: undefined: getFibonacci

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074771
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    switch {\n    case\
    \ n <= 2:\n        return n\n    case n % 2 == 0: return prime_fib(n - 1)\n  \
    \  default: return prime_fib(n - 2) + prime_fib(n - 3)\n    }\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpybsaakg3_test.go:54: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpybsaakg3_test.go:54:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpybsaakg3_test.go:54: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpybsaakg3_test.go:54:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpybsaakg3_test.go:54: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpybsaakg3_test.go:54:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpybsaakg3_test.go:54: expected '%!s(int=1597)', got '%!s(int=4)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpybsaakg3_test.go:54:\
    \ expected '%!s(int=28657)', got '%!s(int=4)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpybsaakg3_test.go:54: expected '%!s(int=514229)', got '%!s(int=7)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpybsaakg3_test.go:54:\
    \ expected '%!s(int=433494437)', got '%!s(int=7)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074772
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    switch {\n    case n == 2:\n        return 3\n    case n < 2:\n\
    \        return 0\n    case n%2 != 0 || n%3 == 0: // odd numbers can't be a prime\n\
    \        return n\n    default:\n        switch {\n        case n%5 != 0: // even\
    \ numbers can't be a prime\n            return n\n        case n%7 == 0: // divisible\
    \ by 7\n            return 6\n        case n%5 == 0: // divisible by 5\n     \
    \       return 4\n        case n%10 == 0: // divisible by 10\n            return\
    \ 10\n        default:\n            switch {\n            case n%13 == 0: // divisible\
    \ by 13\n                return 16\n            case n%17 == 0: // divisible by\
    \ 17\n                return 26\n            case n%19 == 0: // divisible by 19\n\
    \                return 39\n            case n%23 == 0: // divisible by 23\n \
    \               return 56\n            case n%29 == 0: // divisible by 29\n  \
    \              return 89\n            case n%33 == 0: // divisible by 33\n   \
    \             return 129\n            case n%37 == 0: // divisible by 37\n   \
    \             return 247\n            case n%41 == 0:  // divisible by 41\n  \
    \              return 391\n            case n%43 == 0: // divisible by 43\n  \
    \              return 529\n            case n%47 == 0: // divisible by 47\n  \
    \              return 769\n            default:\n                panic(\"Unreachable\"\
    )\n            }\n        }\n    }\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n\
    \  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1), expected:\
    \ 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual: candidate(3),\
    \ expected: 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual:\
    \ candidate(5), expected: 89 },\n     { actual: candidate(6), expected: 233 },\n\
    \     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpo48hj5rf_test.go:88: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__2 (0.00s)\n        tmpo48hj5rf_test.go:88:\
    \ expected '%!s(int=5)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__3\
    \ (0.00s)\n        tmpo48hj5rf_test.go:88: expected '%!s(int=13)', got '%!s(int=4)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__4 (0.00s)\n        tmpo48hj5rf_test.go:88:\
    \ expected '%!s(int=89)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmpo48hj5rf_test.go:88: expected '%!s(int=233)', got '%!s(int=6)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmpo48hj5rf_test.go:88:\
    \ expected '%!s(int=1597)', got '%!s(int=7)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmpo48hj5rf_test.go:88: expected '%!s(int=28657)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmpo48hj5rf_test.go:88:\
    \ expected '%!s(int=514229)', got '%!s(int=9)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmpo48hj5rf_test.go:88: expected '%!s(int=433494437)', got\
    \ '%!s(int=4)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074772
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n%2 == 0 {\n   \
    \     return prime_fib(n - 1) + prime_fib(n - 2)\n    }\n\n    // 3 cases\n  \
    \  switch {\n    case n == 3:\n        return 5\n    case n > 3 && n%3 == 0:\n\
    \        return prime_fib(n - 1) + prime_fib(n - 3)\n    default:\n        return\
    \ prime_fib(n - 2) + prime_fib(n - 3)\n    }\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp8bumz1_i_test.go:60: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp8bumz1_i_test.go:60:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__3\
    \ (0.00s)\n        tmp8bumz1_i_test.go:60: expected '%!s(int=13)', got '%!s(int=6)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__4 (0.00s)\n        tmp8bumz1_i_test.go:60:\
    \ expected '%!s(int=89)', got '%!s(int=6)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmp8bumz1_i_test.go:60: expected '%!s(int=233)', got '%!s(int=12)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmp8bumz1_i_test.go:60:\
    \ expected '%!s(int=1597)', got '%!s(int=12)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmp8bumz1_i_test.go:60: expected '%!s(int=28657)', got '%!s(int=24)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmp8bumz1_i_test.go:60:\
    \ expected '%!s(int=514229)', got '%!s(int=36)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmp8bumz1_i_test.go:60: expected '%!s(int=433494437)', got\
    \ '%!s(int=60)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074772
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    // Sieve of Eratosthenes\n    var p, q int\n    p = 1\n    q\
    \ = 1\n    for {\n        if p*p > n {\n            return q\n        }\n    \
    \    if q*q > n {\n            return p\n        }\n        if n <= (p+q) {\n\
    \            return -1\n        }\n        if n % q == 0 || n % p == 0 {\n   \
    \         break\n        }\n        p = q\n        q = p+q\n    }\n    return\
    \ p\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpamt9l_94_test.go:65: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpamt9l_94_test.go:65:\
    \ expected '%!s(int=3)', got '%!s(int=-1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpamt9l_94_test.go:65: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpamt9l_94_test.go:65:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpamt9l_94_test.go:65: expected '%!s(int=89)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpamt9l_94_test.go:65:\
    \ expected '%!s(int=233)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpamt9l_94_test.go:65: expected '%!s(int=1597)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpamt9l_94_test.go:65:\
    \ expected '%!s(int=28657)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpamt9l_94_test.go:65: expected '%!s(int=514229)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpamt9l_94_test.go:65:\
    \ expected '%!s(int=433494437)', got '%!s(int=1)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074772
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 2, 3\n    for\
    \ i := 4; i <= n; i += 2 {\n        if i%2 == 0 {\n            continue\n    \
    \    }\n        c := a * b\n        a = b\n        b = c\n        if b > n-1 {\n\
    \            return n\n        }\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpk8jvicw5_test.go:60: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpk8jvicw5_test.go:60:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpk8jvicw5_test.go:60: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpk8jvicw5_test.go:60:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpk8jvicw5_test.go:60: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpk8jvicw5_test.go:60:\
    \ expected '%!s(int=233)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpk8jvicw5_test.go:60: expected '%!s(int=1597)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpk8jvicw5_test.go:60:\
    \ expected '%!s(int=28657)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpk8jvicw5_test.go:60: expected '%!s(int=514229)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpk8jvicw5_test.go:60:\
    \ expected '%!s(int=433494437)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074773
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n == 0 || n == 1 {\n        return n\n    }\n\n    var p\
    \ int\n    for i:= 2; i < n; i++ {\n        if n%i == 0 {\n            p = i\n\
    \            break\n        }\n    }\n    if p == 1 {\n        return n\n    }\n\
    \n    for {\n        n = n+p\n        if n%p == 0 {\n            return n\n  \
    \      }\n        p++\n    }\n\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\npanic: runtime error: integer divide by\
    \ zero [recovered]\n\tpanic: runtime error: integer divide by zero\n\ngoroutine\
    \ 6 [running]:\ntesting.tRunner.func1.2({0x5038a0, 0x5f29a0})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x5038a0, 0x5f29a0})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.prime_fib(...)\n\t/tmp/tmp7q296mlj_test.go:37\n\
    command-line-arguments_test.TestPrime_Fib(0x0?)\n\t/tmp/tmp7q296mlj_test.go:53\
    \ +0x7ef\ntesting.tRunner(0xc0001924e0, 0x528f40)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074773
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n <= 1 {\n        return n\n    }\n    var a int = 0\n  \
    \  var b int = 1\n\n    for i := 2; i < n; i++ {\n        if b % i == 0 {\n  \
    \          a = b\n            b += i\n        } else {\n            a = b\n  \
    \      }\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp5dl8h2_z_test.go:59: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp5dl8h2_z_test.go:59:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp5dl8h2_z_test.go:59: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp5dl8h2_z_test.go:59:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp5dl8h2_z_test.go:59: expected '%!s(int=89)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp5dl8h2_z_test.go:59:\
    \ expected '%!s(int=233)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp5dl8h2_z_test.go:59: expected '%!s(int=1597)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp5dl8h2_z_test.go:59:\
    \ expected '%!s(int=28657)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp5dl8h2_z_test.go:59: expected '%!s(int=514229)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp5dl8h2_z_test.go:59:\
    \ expected '%!s(int=433494437)', got '%!s(int=1)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074773
- exit_code: null
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 || n > 100 {\n        return -1\n    }\n\n    // First\
    \ two Fibonacci numbers: 0, 1, 1, 2, 3, 5, 8, 13, ...\n    // Second two Fibonacci\
    \ numbers: 0, 1, 1, 2, 3, 5, 8, 13, ...\n    var fibonacci_1_n = 0\n    var fibonacci_1_m\
    \ = 0\n    var fibonacci_2_n = 1\n    var fibonacci_2_m = 1\n\n    // fibonacci_1_n\
    \ (0, 1, 1, 2, 3, 5, 8, 13, ...) \n    // fibonacci_1_m (0, 1, 1, 2, 3, 5, 8,\
    \ 13, ...)\n\n    if n == 1 {\n        return fibonacci_1_n\n    }\n\n    // fibonacci_2_n\
    \ (0, 1, 1, 2, 3, 5, 8, 13, ...)\n    // fibonacci_2_m (0, 1, 1, 2, 3, 5, 8, 13,\
    \ ...)\n\n    if n == 2 {\n        return fibonacci_2_n\n    }\n\n    for fibonacci_2_n+1\
    \ < 100 {\n        fibonacci_2_m = fibonacci_2_n + fibonacci_1_m\n        if fibonacci_2_m\
    \ < fibonacci_2_n {\n            fibonacci_2_n = fibonacci_2_m\n        }\n  \
    \      if fibonacci_2_n == n {\n            return fibonacci_2_n\n        }\n\
    \        fibonacci_1_n = fibonacci_1_m\n        fibonacci_1_m = fibonacci_2_m\n\
    \    }\n    return -1\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate :=\
    \ prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660074786
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return -1\n    }\n\n    i := 1\n    j :=\
    \ 1\n    x := 2\n    found := false\n\n    while i <= n {\n        if j%x == 0\
    \ {\n            found = true\n            break\n        }\n        x := x +\
    \ 1\n        i++\n        j++\n    }\n\n    if found {\n        return i\n   \
    \ }\n\n    return -1\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate :=\
    \ prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmp4fonhdym_test.go:29:11: expected '';'', found i

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074772
- exit_code: null
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    a, b, c := 0, 0, 1\n    if n == 0 {\n        return a\n    }\n\
    \    for n <= 100 {\n        if n%2 == 0 {\n            c = c + b\n        }\n\
    \        b = a + c\n        a = b\n        n = n-2\n    }\n    return a\n}\n\n\
    func TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660074786
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n <= 0 {\n        return 0\n    }\n\n    prime := false\n\
    \    f := 1\n    g := 2\n\n    if n%2 == 0 {\n        f = f+1\n        prime =\
    \ true\n    }\n\n    for i := 3; i <= n; i++ {\n        f := g\n        g = f+f\n\
    \        if g > n {\n            g = n - g\n        }\n\n        if g == i {\n\
    \            prime = true\n            break\n        }\n    }\n\n    if prime\
    \ {\n        return i\n    }\n\n    return 0\n}\n</code>\n<|/ a |>\n<| c |>\n\
    This is not O(1), since this solution is `O(n)`, where `n` is the maximum possible\
    \ input value (the number of the Fibonacci number generator).\n<|/ c |>\n<| a\
    \ tags=go,fibonacci,algorithm,primes |>\nUsing math/big (math/big package in Go\
    \ standard library) library you can calculate this number in O(1).\n<code>\npackage\
    \ main\n\nimport (\n    \"fmt\"\n    \"math/big\"\n)\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpflrvka5q_test.go:52:1: expected declaration, found ''<''

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074772
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 1 {\n        return 0\n    }\n\n    primes := []int{2,\
    \ 3}\n    for i := 4; i <= n; i++ {\n        if primes[len(primes)-1] != i {\n\
    \            primes = append(primes, i)\n        }\n    }\n\n    return primes[len(primes)-1]\n\
    }\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpvfbinfex_test.go:56: expected '%!s(int=2)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__2 (0.00s)\n        tmpvfbinfex_test.go:56:\
    \ expected '%!s(int=5)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__3\
    \ (0.00s)\n        tmpvfbinfex_test.go:56: expected '%!s(int=13)', got '%!s(int=4)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__4 (0.00s)\n        tmpvfbinfex_test.go:56:\
    \ expected '%!s(int=89)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmpvfbinfex_test.go:56: expected '%!s(int=233)', got '%!s(int=6)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmpvfbinfex_test.go:56:\
    \ expected '%!s(int=1597)', got '%!s(int=7)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmpvfbinfex_test.go:56: expected '%!s(int=28657)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmpvfbinfex_test.go:56:\
    \ expected '%!s(int=514229)', got '%!s(int=9)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmpvfbinfex_test.go:56: expected '%!s(int=433494437)', got\
    \ '%!s(int=10)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074774
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n == 0 {\n        return 0\n    }\n\n    if n == 1 {\n  \
    \      return 1\n    }\n\n    var next_fib int\n    var next_is_prime bool\n\n\
    \    next_fib = prime_fib(n - 1)\n    next_is_prime = true\n\n    for i := 2;\
    \ i <= next_fib; i++ {\n        if i%n == 0 {\n            next_is_prime = false\n\
    \        }\n    }\n\n    if next_is_prime {\n        return next_fib\n    } else\
    \ {\n        return n + prime_fib(next_fib-1)\n    }\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpm89dnas9_test.go:69: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpm89dnas9_test.go:69:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpm89dnas9_test.go:69: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpm89dnas9_test.go:69:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpm89dnas9_test.go:69: expected '%!s(int=89)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpm89dnas9_test.go:69:\
    \ expected '%!s(int=233)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpm89dnas9_test.go:69: expected '%!s(int=1597)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpm89dnas9_test.go:69:\
    \ expected '%!s(int=28657)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpm89dnas9_test.go:69: expected '%!s(int=514229)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpm89dnas9_test.go:69:\
    \ expected '%!s(int=433494437)', got '%!s(int=1)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074774
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n\n    primes := make([]int, n)\n    primes[0] = 1\n    primes[1]\
    \ = 1\n    i := 2\n    for {\n        if primes[i] == 0 {\n            primes\
    \ = append(primes, 0)\n        }\n        if primes[i] < n {\n            break\n\
    \        }\n        i++\n    }\n    return primes[n-1]\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpaemo9dmg_test.go:65: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpaemo9dmg_test.go:65:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpaemo9dmg_test.go:65: expected '%!s(int=5)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpaemo9dmg_test.go:65:\
    \ expected '%!s(int=13)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpaemo9dmg_test.go:65: expected '%!s(int=89)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpaemo9dmg_test.go:65:\
    \ expected '%!s(int=233)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpaemo9dmg_test.go:65: expected '%!s(int=1597)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpaemo9dmg_test.go:65:\
    \ expected '%!s(int=28657)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpaemo9dmg_test.go:65: expected '%!s(int=514229)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpaemo9dmg_test.go:65:\
    \ expected '%!s(int=433494437)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.002s\nFAIL\n"
  timestamp: 1660074774
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    switch {\n    case n <= 1:\n        return n\n    case n ==\
    \ 2:\n        return 1\n    case n % 2 == 1:\n        return prime_fib(n - 1)\
    \ + prime_fib(n - 2)\n    default:\n        return prime_fib(n - 3) + prime_fib(n\
    \ - 4)\n    }\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual:\
    \ candidate(2), expected: 3 },\n     { actual: candidate(3), expected: 5 },\n\
    \     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5), expected:\
    \ 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7),\
    \ expected: 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual:\
    \ candidate(9), expected: 514229 },\n     { actual: candidate(10), expected: 433494437\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptunfy5w2_test.go:54: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptunfy5w2_test.go:54:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptunfy5w2_test.go:54: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptunfy5w2_test.go:54:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptunfy5w2_test.go:54: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptunfy5w2_test.go:54:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptunfy5w2_test.go:54: expected '%!s(int=1597)', got '%!s(int=6)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptunfy5w2_test.go:54:\
    \ expected '%!s(int=28657)', got '%!s(int=4)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptunfy5w2_test.go:54: expected '%!s(int=514229)', got '%!s(int=10)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptunfy5w2_test.go:54:\
    \ expected '%!s(int=433494437)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074774
- exit_code: 2
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n    \
    \    return 3\n    }\n\n    // first number that is a Fibonacci number is n-1\n\
    \    n -= 1\n    \n    for {\n        n += 2\n        if !check_prime(n) {\n \
    \           break\n        }\n    }\n\n    return n\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp1qu8dhym_test.go:32:13: undefined: check_prime

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074774
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n <= 0 {\n        err = fmt.Errorf(\"n is too small\")\n\
    \    }\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n        return\
    \ 2\n    }\n    i := 2\n    sum := 1\n    for i < n {\n        sum *= i\n    \
    \    i += 2\n        if sum > n {\n            break\n        }\n    }\n    if\
    \ i < n {\n        return i\n    }\n    return n\n}\n</code>\n<|/ a dscore=3 |>\n\
    <| c |>\n+1 for the simple solution, but I believe this is slightly more complex\
    \ than the code I posted. There can be two cases: either the number is prime or\
    \ it isn't. We can't return the error in the function directly as that would violate\
    \ the contract of the function.\n<|/ c |>\n<| c |>\nI agree, it's definitely a\
    \ more complex solution. I didn't understand OP's question, so I just wrote a\
    \ simple, understandable code which I hoped would be enough for OP. I didn't really\
    \ want to copy paste it all over again...\n<|/ c |>\n<| c |>\nI think this is\
    \ the most elegant way to solve it even though I wouldn't use that much of RAM\
    \ and CPU power, especially for larger Fibonacci numbers. The code looks clean\
    \ and simple.\n<|/ c |>\n<| a |>\nYou can use this recursive function \n<code>\n\
    func TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpmx2g7ame_test.go:43:1: expected declaration, found ''<''

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074773
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    switch {\n    case n == 0:\n        return 0\n    case n ==\
    \ 2:\n        return 1\n    case n == 3:\n        return 2\n    case n % 2 ==\
    \ 0 || n%3 != 0:\n        return prime_fib(int(n/2)) * prime_fib(int(n%2) + 1)\n\
    \    default:\n        return prime_fib(int(n/2)) * prime_fib(int(n%2) + 1) +\
    \ prime_fib(int(n%4))\n    }\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp4edpsrwu_test.go:56: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp4edpsrwu_test.go:56:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp4edpsrwu_test.go:56: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp4edpsrwu_test.go:56:\
    \ expected '%!s(int=13)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp4edpsrwu_test.go:56: expected '%!s(int=89)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp4edpsrwu_test.go:56:\
    \ expected '%!s(int=233)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp4edpsrwu_test.go:56: expected '%!s(int=1597)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp4edpsrwu_test.go:56:\
    \ expected '%!s(int=28657)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp4edpsrwu_test.go:56: expected '%!s(int=514229)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp4edpsrwu_test.go:56:\
    \ expected '%!s(int=433494437)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074774
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 || n%2 == 1 {\n        return n\n    }\n    return\
    \ prime_fib(n - 1) + prime_fib(n - 2)\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n\
    \  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1), expected:\
    \ 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual: candidate(3),\
    \ expected: 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual:\
    \ candidate(5), expected: 89 },\n     { actual: candidate(6), expected: 233 },\n\
    \     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp9tmbja9j_test.go:48: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp9tmbja9j_test.go:48:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp9tmbja9j_test.go:48: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp9tmbja9j_test.go:48:\
    \ expected '%!s(int=13)', got '%!s(int=4)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp9tmbja9j_test.go:48: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp9tmbja9j_test.go:48:\
    \ expected '%!s(int=233)', got '%!s(int=9)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp9tmbja9j_test.go:48: expected '%!s(int=1597)', got '%!s(int=7)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp9tmbja9j_test.go:48:\
    \ expected '%!s(int=28657)', got '%!s(int=16)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp9tmbja9j_test.go:48: expected '%!s(int=514229)', got '%!s(int=9)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp9tmbja9j_test.go:48:\
    \ expected '%!s(int=433494437)', got '%!s(int=25)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074774
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    // The algorithm works only if n is a power of 2.\n    if n\
    \ <= 1 {\n        return n\n    }\n\n    // We calculate the nth Fibonacci number\n\
    \    // using the formula F(n) = F(n-1) + F(n-2).\n    // We store the previously\
    \ calculated value in a variable.\n    var (\n        prevFib = prime_fib(n -\
    \ 1)\n        newFib   = prevFib + (prevFib - 2)\n    )\n\n    // We check if\
    \ n is a prime by checking if F(n) is even.\n    if newFib%2 == 0 {\n        return\
    \ n\n    }\n\n    // If n is not a prime we try the other approach.\n    return\
    \ prime_fib(n - 2)\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual:\
    \ candidate(2), expected: 3 },\n     { actual: candidate(3), expected: 5 },\n\
    \     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5), expected:\
    \ 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7),\
    \ expected: 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual:\
    \ candidate(9), expected: 514229 },\n     { actual: candidate(10), expected: 433494437\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmphm8hbtg6_test.go:64: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmphm8hbtg6_test.go:64:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmphm8hbtg6_test.go:64: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmphm8hbtg6_test.go:64:\
    \ expected '%!s(int=13)', got '%!s(int=4)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmphm8hbtg6_test.go:64: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmphm8hbtg6_test.go:64:\
    \ expected '%!s(int=233)', got '%!s(int=6)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmphm8hbtg6_test.go:64: expected '%!s(int=1597)', got '%!s(int=7)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmphm8hbtg6_test.go:64:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmphm8hbtg6_test.go:64: expected '%!s(int=514229)', got '%!s(int=9)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmphm8hbtg6_test.go:64:\
    \ expected '%!s(int=433494437)', got '%!s(int=10)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074774
- exit_code: 2
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n <= 2 {\n        return n\n    }\n\n    // Initialize base\
    \ cases before the loop\n    if n < 4 {\n        return 1\n    }\n\n    // Store\
    \ the return in our variable before our loop\n    var curr int\n\n    // Initialize\
    \ our loop and conditionals\n    for curr = 1; curr < n; curr++ {\n        if\
    \ prime_prime(curr) == false {\n            break\n        }\n    }\n\n    return\
    \ curr\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual:\
    \ candidate(2), expected: 3 },\n     { actual: candidate(3), expected: 5 },\n\
    \     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5), expected:\
    \ 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7),\
    \ expected: 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual:\
    \ candidate(9), expected: 514229 },\n     { actual: candidate(10), expected: 433494437\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp6n63j7gk_test.go:34:12: undefined: prime_prime

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074774
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n<1 {\n        return n\n    }\n    if n==1 {\n        return\
    \ 2\n    }\n    if n==2 {\n        return 3\n    }\n\n    fibs, primes := map[int]int{1:\
    \ 2, 2: 3}, []int{2, 3, 5}\n    for i := 3; i < n; i++ {\n        if _, ok :=\
    \ fibs[i]; !ok {\n            primes = append(primes, i)\n        }\n        fibs[i]\
    \ = fibs[i-1] + fibs[i-2]\n    }\n\n    return primes[len(primes)-1]\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__3\
    \ (0.00s)\n        tmpg03bgjrj_test.go:63: expected '%!s(int=13)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__4 (0.00s)\n        tmpg03bgjrj_test.go:63:\
    \ expected '%!s(int=89)', got '%!s(int=4)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmpg03bgjrj_test.go:63: expected '%!s(int=233)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmpg03bgjrj_test.go:63:\
    \ expected '%!s(int=1597)', got '%!s(int=6)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmpg03bgjrj_test.go:63: expected '%!s(int=28657)', got '%!s(int=7)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmpg03bgjrj_test.go:63:\
    \ expected '%!s(int=514229)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmpg03bgjrj_test.go:63: expected '%!s(int=433494437)', got\
    \ '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074774
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n<2 || n>30 {\n        fmt.Println(n, \"is not Prime Fibonacci.\"\
    )\n        return 1\n    }\n\n    if n%2 == 0 {\n        return n\n    }\n\n \
    \   return prime_fib(n-2)+prime_fib(n-1)\n}\n</code>\n<|/ a |>\n<| c |>\nGreat\
    \ recursive solution\n<|/ c |>\n<| a tags=fibonacci,recursion,go dscore=2 |>\n\
    Here's another recursive version using memoization to avoid recalculating the\
    \ same fibonacci numbers, it may or may not be more efficient than the previous\
    \ answers\n<code>\npackage main\n\nimport (\n    \"fmt\"\n)\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpdp46nhby_test.go:31:1: expected declaration, found ''<''

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074773
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n == 0 || n == 1 {\n        return n\n    }\n\n    if n ==\
    \ 2 {\n        return 3\n    }\n\n    fibs := make([]int, 0, 3)\n\n    for i :=\
    \ 0; i < 3; i++ {\n        if i != 2 {\n            fibs = append(fibs, 2)\n \
    \       }\n\n        fibs = append(fibs, int(fibs[i-1] + fibs[i]))\n    }\n\n\
    \    return fibs[n]\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual:\
    \ candidate(2), expected: 3 },\n     { actual: candidate(3), expected: 5 },\n\
    \     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5), expected:\
    \ 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7),\
    \ expected: 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual:\
    \ candidate(9), expected: 514229 },\n     { actual: candidate(10), expected: 433494437\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\npanic: runtime error: index out of range\
    \ [-1] [recovered]\n\tpanic: runtime error: index out of range [-1]\n\ngoroutine\
    \ 6 [running]:\ntesting.tRunner.func1.2({0x513620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.prime_fib(...)\n\t/tmp/tmpeejvt5an_test.go:35\n\
    command-line-arguments_test.TestPrime_Fib(0x0?)\n\t/tmp/tmpeejvt5an_test.go:50\
    \ +0x1028\ntesting.tRunner(0xc0001a01a0, 0x528f40)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074774
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n < 3 {\n      \
    \  return n\n    }\n    if n % 2 == 0 {\n        return 3\n    }\n    if n % 3\
    \ == 0 {\n        return 5\n    }\n    s := 0\n    c := 2\n    for i := 3; i <=\
    \ n; i++ {\n        if i%2 == 0 {\n            s += c\n        }\n        if i%3\
    \ == 0 {\n            s += c\n            c += 2\n        }\n        c = s * s\
    \ + c\n    }\n    return s\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpiqgcy96f_test.go:69: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpiqgcy96f_test.go:69:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__3\
    \ (0.00s)\n        tmpiqgcy96f_test.go:69: expected '%!s(int=13)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__4 (0.00s)\n        tmpiqgcy96f_test.go:69:\
    \ expected '%!s(int=89)', got '%!s(int=10)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmpiqgcy96f_test.go:69: expected '%!s(int=233)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmpiqgcy96f_test.go:69:\
    \ expected '%!s(int=1597)', got '%!s(int=426)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmpiqgcy96f_test.go:69: expected '%!s(int=28657)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmpiqgcy96f_test.go:69:\
    \ expected '%!s(int=514229)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmpiqgcy96f_test.go:69: expected '%!s(int=433494437)', got\
    \ '%!s(int=3)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074774
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n == 0 || n == 1 {\n        return n\n    }\n    if n <=\
    \ 1 {\n        return 1\n    }\n\n    if n <= 2 {\n        return 2\n    }\n\n\
    \    i := 3\n    c := 3\n\n    for ; i < n; i++ {\n        if c+i > n {\n    \
    \        break\n        }\n        c += i\n    }\n    return c\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmplibg2kp3_test.go:65: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmplibg2kp3_test.go:65:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmplibg2kp3_test.go:65: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmplibg2kp3_test.go:65:\
    \ expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmplibg2kp3_test.go:65: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmplibg2kp3_test.go:65:\
    \ expected '%!s(int=233)', got '%!s(int=6)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmplibg2kp3_test.go:65: expected '%!s(int=1597)', got '%!s(int=6)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmplibg2kp3_test.go:65:\
    \ expected '%!s(int=28657)', got '%!s(int=6)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmplibg2kp3_test.go:65: expected '%!s(int=514229)', got '%!s(int=6)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmplibg2kp3_test.go:65:\
    \ expected '%!s(int=433494437)', got '%!s(int=10)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074774
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    n -= 2\n    if n <\
    \ 3 {\n        return n\n    }\n    for i := 3; i < n; i++ {\n        if n%i ==\
    \ 0 {\n            return i\n        }\n    }\n    return n\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp2n7rmhnn_test.go:57: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp2n7rmhnn_test.go:57:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp2n7rmhnn_test.go:57: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp2n7rmhnn_test.go:57:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp2n7rmhnn_test.go:57: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp2n7rmhnn_test.go:57:\
    \ expected '%!s(int=233)', got '%!s(int=4)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp2n7rmhnn_test.go:57: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp2n7rmhnn_test.go:57:\
    \ expected '%!s(int=28657)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp2n7rmhnn_test.go:57: expected '%!s(int=514229)', got '%!s(int=7)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp2n7rmhnn_test.go:57:\
    \ expected '%!s(int=433494437)', got '%!s(int=4)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074774
- exit_code: null
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    // check if n is Fibonacci number or not\n    if n < 2 {\n \
    \       return n\n    }\n\n    a, b := 0, 1\n    for {\n        if n%2 == 0 {\n\
    \            a, b = b, a+b\n        } else {\n            a, b = b, a\n      \
    \  }\n        if a > n {\n            break\n        }\n    }\n    return a\n\
    }\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660074788
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    b := make([]int, n+1)\n\
    \    b[0] = 1\n    b[1] = 1\n    for i := 2; i < n+1; i++ {\n        if b[i] ==\
    \ 0 {\n            b[i] = 1\n            continue\n        }\n        c := b[i-1]\n\
    \        b[i-1] = b[i]\n        b[i] = c\n    }\n    return b[n]\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpdjz4zyy4_test.go:60: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpdjz4zyy4_test.go:60:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpdjz4zyy4_test.go:60: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpdjz4zyy4_test.go:60:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpdjz4zyy4_test.go:60: expected '%!s(int=89)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpdjz4zyy4_test.go:60:\
    \ expected '%!s(int=233)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpdjz4zyy4_test.go:60: expected '%!s(int=1597)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpdjz4zyy4_test.go:60:\
    \ expected '%!s(int=28657)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpdjz4zyy4_test.go:60: expected '%!s(int=514229)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpdjz4zyy4_test.go:60:\
    \ expected '%!s(int=433494437)', got '%!s(int=1)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074775
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    switch {\n    case n <= 1:\n        return n\n    case n <=\
    \ 2:\n        return n\n    case n % 2 == 0 && n > 2:\n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    default:\n        return prime_fib(n - 3)\n   \
    \ }\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpind2s9wy_test.go:54: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpind2s9wy_test.go:54:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpind2s9wy_test.go:54: expected '%!s(int=5)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpind2s9wy_test.go:54:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpind2s9wy_test.go:54: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpind2s9wy_test.go:54:\
    \ expected '%!s(int=233)', got '%!s(int=4)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpind2s9wy_test.go:54: expected '%!s(int=1597)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpind2s9wy_test.go:54:\
    \ expected '%!s(int=28657)', got '%!s(int=6)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpind2s9wy_test.go:54: expected '%!s(int=514229)', got '%!s(int=4)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpind2s9wy_test.go:54:\
    \ expected '%!s(int=433494437)', got '%!s(int=10)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074775
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    a, b := 0, 1\n    for i := 2; i <= n; i++ {\n        c, d :=\
    \ a + b, a\n        a = b\n        b = d\n        if c < 2 {\n            return\
    \ c\n        }\n    }\n    return -1\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n\
    \  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1), expected:\
    \ 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual: candidate(3),\
    \ expected: 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual:\
    \ candidate(5), expected: 89 },\n     { actual: candidate(6), expected: 233 },\n\
    \     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr5beiwdq_test.go:54: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr5beiwdq_test.go:54:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr5beiwdq_test.go:54: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr5beiwdq_test.go:54:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr5beiwdq_test.go:54: expected '%!s(int=89)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr5beiwdq_test.go:54:\
    \ expected '%!s(int=233)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr5beiwdq_test.go:54: expected '%!s(int=1597)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr5beiwdq_test.go:54:\
    \ expected '%!s(int=28657)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr5beiwdq_test.go:54: expected '%!s(int=514229)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr5beiwdq_test.go:54:\
    \ expected '%!s(int=433494437)', got '%!s(int=1)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074775
- exit_code: 2
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    return prime_fib_helper(n, n+1, []int{1, 1, 1}...)\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmplquromqm_test.go:20:12: undefined: prime_fib_helper

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074775
- exit_code: 2
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 0 {\n        return -1\n    }\n    if n == 0 || n ==\
    \ 1 {\n        return n\n    }\n    switch {\n    case n % 2 == 0: return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    case n % 2 == 1: return prime_fib(n - 1) + prime_fib(n\
    \ - 3)\n    }\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual:\
    \ candidate(2), expected: 3 },\n     { actual: candidate(3), expected: 5 },\n\
    \     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5), expected:\
    \ 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7),\
    \ expected: 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual:\
    \ candidate(9), expected: 514229 },\n     { actual: candidate(10), expected: 433494437\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpjniwqe8d_test.go:30:1: missing return

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074775
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    last, first := 1, 1\n\
    \    for i := 2; i <= n; i++ {\n        current := last\n        last = first\n\
    \        first = current + last\n    }\n    return last\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmphyzm54k1_test.go:54: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmphyzm54k1_test.go:54:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmphyzm54k1_test.go:54: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmphyzm54k1_test.go:54:\
    \ expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmphyzm54k1_test.go:54: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmphyzm54k1_test.go:54:\
    \ expected '%!s(int=233)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmphyzm54k1_test.go:54: expected '%!s(int=1597)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmphyzm54k1_test.go:54:\
    \ expected '%!s(int=28657)', got '%!s(int=21)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmphyzm54k1_test.go:54: expected '%!s(int=514229)', got '%!s(int=34)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmphyzm54k1_test.go:54:\
    \ expected '%!s(int=433494437)', got '%!s(int=55)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074775
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    switch {\n    case n <= 1:\n        return n\n    case n ==\
    \ 2:\n        return 1\n    case n % 2 == 0 && n != 2:\n        return n\n   \
    \ }\n\n    i := 3\n    num := 0\n\n    for ; i * i <= n; i++ {\n        if n%i\
    \ == 0 {\n            num += i\n        }\n    }\n\n    return num\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp_2l45tmu_test.go:63: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp_2l45tmu_test.go:63:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp_2l45tmu_test.go:63: expected '%!s(int=5)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp_2l45tmu_test.go:63:\
    \ expected '%!s(int=13)', got '%!s(int=4)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp_2l45tmu_test.go:63: expected '%!s(int=89)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp_2l45tmu_test.go:63:\
    \ expected '%!s(int=233)', got '%!s(int=6)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp_2l45tmu_test.go:63: expected '%!s(int=1597)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp_2l45tmu_test.go:63:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp_2l45tmu_test.go:63: expected '%!s(int=514229)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp_2l45tmu_test.go:63:\
    \ expected '%!s(int=433494437)', got '%!s(int=10)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074776
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    // Initialize a for first number Fibonacci number\n    a, b\
    \ := 0, 1\n    for i := 2; i <= n; i++ {\n        // Update for next number\n\
    \        a, b = b, a+b\n    }\n    return b\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp00i9dxaq_test.go:51: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp00i9dxaq_test.go:51:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp00i9dxaq_test.go:51: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp00i9dxaq_test.go:51:\
    \ expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp00i9dxaq_test.go:51: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp00i9dxaq_test.go:51:\
    \ expected '%!s(int=233)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp00i9dxaq_test.go:51: expected '%!s(int=1597)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp00i9dxaq_test.go:51:\
    \ expected '%!s(int=28657)', got '%!s(int=21)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp00i9dxaq_test.go:51: expected '%!s(int=514229)', got '%!s(int=34)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp00i9dxaq_test.go:51:\
    \ expected '%!s(int=433494437)', got '%!s(int=55)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074776
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpua8m5uwr_test.go:48: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpua8m5uwr_test.go:48:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpua8m5uwr_test.go:48: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpua8m5uwr_test.go:48:\
    \ expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpua8m5uwr_test.go:48: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpua8m5uwr_test.go:48:\
    \ expected '%!s(int=233)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpua8m5uwr_test.go:48: expected '%!s(int=1597)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpua8m5uwr_test.go:48:\
    \ expected '%!s(int=28657)', got '%!s(int=21)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpua8m5uwr_test.go:48: expected '%!s(int=514229)', got '%!s(int=34)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpua8m5uwr_test.go:48:\
    \ expected '%!s(int=433494437)', got '%!s(int=55)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074772
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    first := 1\n    second\
    \ := 1\n    for i := 3; i < n; i++ {\n        third := first + second\n      \
    \  first = second\n        second = third\n    }\n    return second\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpfxkwh92u_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpfxkwh92u_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpfxkwh92u_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpfxkwh92u_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpfxkwh92u_test.go:55: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpfxkwh92u_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpfxkwh92u_test.go:55: expected '%!s(int=1597)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpfxkwh92u_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpfxkwh92u_test.go:55: expected '%!s(int=514229)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpfxkwh92u_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=34)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074776
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 0; i < n; i++ {\n        a, b = b, a+b\n    }\n    return b\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp00gchka7_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp00gchka7_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp00gchka7_test.go:52: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp00gchka7_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp00gchka7_test.go:52: expected '%!s(int=89)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp00gchka7_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp00gchka7_test.go:52: expected '%!s(int=1597)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp00gchka7_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=34)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp00gchka7_test.go:52: expected '%!s(int=514229)', got '%!s(int=55)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp00gchka7_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=89)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074776
- exit_code: null
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    x := 0\n    y := 1\n    for {\n        x := x\n        x %=\
    \ n\n        y := y + x\n        if y == 0 {\n            return x\n        }\n\
    \    }\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual:\
    \ candidate(2), expected: 3 },\n     { actual: candidate(3), expected: 5 },\n\
    \     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5), expected:\
    \ 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7),\
    \ expected: 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual:\
    \ candidate(9), expected: 514229 },\n     { actual: candidate(10), expected: 433494437\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660074789
- exit_code: 2
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    p := 3\n    f := 2\n    q := 2\n    if n > 1 {\n        q =\
    \ p + q\n        for {\n            if q > n {\n                return n\n   \
    \         }\n            f := p\n            p = q\n            q = f\n      \
    \      fmt.Printf(\"f(%v) = %v, p: %v, q: %v\\n\", n, f, p, q)\n        }\n  \
    \  }\n    return n\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual:\
    \ candidate(2), expected: 3 },\n     { actual: candidate(3), expected: 5 },\n\
    \     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5), expected:\
    \ 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7),\
    \ expected: 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual:\
    \ candidate(9), expected: 514229 },\n     { actual: candidate(10), expected: 433494437\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp5kxn_hfr_test.go:21:5: f declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074776
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    var a, b int\n\n    if n < 2 {\n        return n\n    }\n\n\
    \    if n < 6 {\n        a = 2\n        b = 1\n    } else if n < 25 {\n      \
    \  a = 5\n        b = 4\n    } else {\n        a = 13\n        b = 5\n    }\n\n\
    \    n -= 2\n\n    for i := 0; i < n; i++ {\n        a, b = b+a, a\n    }\n\n\
    \    return a\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual:\
    \ candidate(2), expected: 3 },\n     { actual: candidate(3), expected: 5 },\n\
    \     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5), expected:\
    \ 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7),\
    \ expected: 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual:\
    \ candidate(9), expected: 514229 },\n     { actual: candidate(10), expected: 433494437\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpv4412f3n_test.go:68: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpv4412f3n_test.go:68:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpv4412f3n_test.go:68: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpv4412f3n_test.go:68:\
    \ expected '%!s(int=13)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpv4412f3n_test.go:68: expected '%!s(int=89)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpv4412f3n_test.go:68:\
    \ expected '%!s(int=233)', got '%!s(int=37)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpv4412f3n_test.go:68: expected '%!s(int=1597)', got '%!s(int=60)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpv4412f3n_test.go:68:\
    \ expected '%!s(int=28657)', got '%!s(int=97)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpv4412f3n_test.go:68: expected '%!s(int=514229)', got '%!s(int=157)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpv4412f3n_test.go:68:\
    \ expected '%!s(int=433494437)', got '%!s(int=254)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074776
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    var a, b int\n\n    if n < 0 {\n        fmt.Println(\"Negative\
    \ numbers are not allowed in prime number sequence!\")\n        fmt.Println(\"\
    Enter a positive number\")\n        Scan()\n    }\n\n    a = b = 1\n    for i\
    \ := 2; i < n; i++ {\n        if n%i == 0 {\n            b = b + i\n         \
    \   fmt.Println(\"Fibonacci number: \" + strconv.Itoa(b) + \" is prime\")\n  \
    \      }\n        else {\n            a = a + i\n        }\n    }\n    return\
    \ b\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmp7icxl7f__test.go:28:11: expected ''=='', found ''=''

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074775
- exit_code: 2
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    switch {\n    case n > 3:\n        return prime_fib_3(n - 3)\n\
    \    case n < 2:\n        return 1\n    case n >= 5:\n        return prime_fib_5(n\
    \ - 5)\n    default:\n        return -1\n    }\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpmh0t9ss4_test.go:22:16: undefined: prime_fib_3

    /tmp/tmpmh0t9ss4_test.go:26:16: undefined: prime_fib_5

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074776
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n <= 2 {\n        return n\n    }\n    var a, b int\n   \
    \ for i := 2; i <= n; i += 1 {\n        if n%i == 0 {\n            a = i\n   \
    \         break\n        }\n        if n%(i+2) == 0 {\n            b = i\n   \
    \         break\n        }\n    }\n    if a > b {\n        return a\n    } else\
    \ {\n        return b\n    }\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp9r1unj8n_test.go:63: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp9r1unj8n_test.go:63:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp9r1unj8n_test.go:63: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp9r1unj8n_test.go:63:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp9r1unj8n_test.go:63: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp9r1unj8n_test.go:63:\
    \ expected '%!s(int=233)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp9r1unj8n_test.go:63: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp9r1unj8n_test.go:63:\
    \ expected '%!s(int=28657)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp9r1unj8n_test.go:63: expected '%!s(int=514229)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp9r1unj8n_test.go:63:\
    \ expected '%!s(int=433494437)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074776
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    x := n\n    if n < 2 {\n        x = 2\n    }\n    y := 1\n \
    \   if x > 2 {\n        y = 2\n    }\n    for x <= n {\n        if n%y == 0 {\n\
    \            return y\n        }\n        y *= 2\n    }\n    return y\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\npanic: runtime error: integer divide by\
    \ zero [recovered]\n\tpanic: runtime error: integer divide by zero\n\ngoroutine\
    \ 6 [running]:\ntesting.tRunner.func1.2({0x5038a0, 0x5f29a0})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x5038a0, 0x5f29a0})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.prime_fib(...)\n\t/tmp/tmpvk8tgkmn_test.go:29\n\
    command-line-arguments_test.TestPrime_Fib(0x0?)\n\t/tmp/tmpvk8tgkmn_test.go:46\
    \ +0x645\ntesting.tRunner(0xc0001924e0, 0x528f40)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074776
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    n -= 2\n    i, j, k := 0, 0, 0\n    while (i < n) {\n      \
    \  if j%2 == 0 {\n            i += j\n        }\n        j = (j+k) % n\n     \
    \   k += 1\n    }\n    return i + 2\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n\
    \  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1), expected:\
    \ 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual: candidate(3),\
    \ expected: 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual:\
    \ candidate(5), expected: 89 },\n     { actual: candidate(6), expected: 233 },\n\
    \     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmppagx9jt0_test.go:22:19: expected '';'', found ''{''

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074775
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    switch {\n    case n < 3:\n        return n\n    case n <= 1\
    \ :\n        return 1\n    case n % 2 == 0 :\n        return prime_fib(n - 1)\n\
    \    case n % 3 == 0 :\n        return prime_fib(n - 2)\n    default:\n      \
    \  return prime_fib(n - 3) + prime_fib(n - 2)\n    }\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp2o_yx06a_test.go:56: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp2o_yx06a_test.go:56:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp2o_yx06a_test.go:56: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp2o_yx06a_test.go:56:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp2o_yx06a_test.go:56: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp2o_yx06a_test.go:56:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp2o_yx06a_test.go:56: expected '%!s(int=1597)', got '%!s(int=4)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp2o_yx06a_test.go:56:\
    \ expected '%!s(int=28657)', got '%!s(int=4)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp2o_yx06a_test.go:56: expected '%!s(int=514229)', got '%!s(int=4)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp2o_yx06a_test.go:56:\
    \ expected '%!s(int=433494437)', got '%!s(int=4)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074776
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    var a, b int\n  \
    \  if a != 0 {\n        b = prime_fib(b-1)\n    }\n\n    if b == n {\n       \
    \ return b\n    }\n\n    if n == 0 || n == 1 {\n        return n\n    }\n\n  \
    \  x := n\n    for i := 2; i < n; i++ {\n        if x % i == 0 {\n           \
    \ x = (x * i) + n\n            break\n        }\n    }\n\n    return x\n}\n\n\
    func TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpmzz72acq_test.go:70: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpmzz72acq_test.go:70:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpmzz72acq_test.go:70: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpmzz72acq_test.go:70:\
    \ expected '%!s(int=13)', got '%!s(int=12)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpmzz72acq_test.go:70: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpmzz72acq_test.go:70:\
    \ expected '%!s(int=233)', got '%!s(int=18)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpmzz72acq_test.go:70: expected '%!s(int=1597)', got '%!s(int=7)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpmzz72acq_test.go:70:\
    \ expected '%!s(int=28657)', got '%!s(int=24)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpmzz72acq_test.go:70: expected '%!s(int=514229)', got '%!s(int=36)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpmzz72acq_test.go:70:\
    \ expected '%!s(int=433494437)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074777
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    // Base Case\n    if n < 2 {\n        return n\n    }\n\n  \
    \  // Recursive Case\n    if n == 2 {\n        return 3\n    }\n\n    // Divisor\
    \ Case\n    if n % 2 == 0 {\n        return prime_fib(int(n/2))\n    }\n\n   \
    \ // Recursive Case\n    return prime_fib(int(n/2) + 1) + prime_fib(int(n/2))\n\
    }\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmps1allnx7_test.go:61: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__2 (0.00s)\n        tmps1allnx7_test.go:61:\
    \ expected '%!s(int=5)', got '%!s(int=4)'\n    --- FAIL: TestPrime_Fib/test_num__3\
    \ (0.00s)\n        tmps1allnx7_test.go:61: expected '%!s(int=13)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__4 (0.00s)\n        tmps1allnx7_test.go:61:\
    \ expected '%!s(int=89)', got '%!s(int=7)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmps1allnx7_test.go:61: expected '%!s(int=233)', got '%!s(int=4)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmps1allnx7_test.go:61:\
    \ expected '%!s(int=1597)', got '%!s(int=7)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmps1allnx7_test.go:61: expected '%!s(int=28657)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmps1allnx7_test.go:61:\
    \ expected '%!s(int=514229)', got '%!s(int=10)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmps1allnx7_test.go:61: expected '%!s(int=433494437)', got\
    \ '%!s(int=7)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074777
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n <= 0 {\n        return 0\n    }\n    a, b := 0, 1\n   \
    \ for i := 2; i <= n; i++ {\n        if a > b {\n            return a\n      \
    \  }\n        a, b = b, a+b\n    }\n    return b\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpmw7xsy26_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpmw7xsy26_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpmw7xsy26_test.go:55: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpmw7xsy26_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpmw7xsy26_test.go:55: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpmw7xsy26_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpmw7xsy26_test.go:55: expected '%!s(int=1597)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpmw7xsy26_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=21)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpmw7xsy26_test.go:55: expected '%!s(int=514229)', got '%!s(int=34)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpmw7xsy26_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=55)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074777
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    // Check if n is a Fibonacci number.\n    // The Fibonacci sequence\
    \ is defined:\n    // f(n) = f(n-1) + f(n-2).\n    if n == 0 || n == 1 {\n   \
    \     return n\n    }\n\n    // Check if n is a prime number.\n    // Prime number\
    \ is a number that is a product of two distinct prime numbers.\n    // For example,\
    \ the first 10 primes are 2, 3, 5, 7, 11, 13, 17, 19, 23, and 29.\n    // We are\
    \ checking if n is a product of these prime numbers.\n    const (\n        prime1\
    \ = 2\n        prime2 = 2\n    )\n    if n == prime1*prime2 {\n        return\
    \ n\n    }\n\n    // Check if n is a composite number.\n    // Composite number\
    \ is a product of prime numbers, not all prime numbers and all Fibonacci numbers.\n\
    \    const (\n        prime3 = 2\n        prime4 = 3\n    )\n    if n == prime3*prime4\
    \ {\n        return n\n    }\n\n    // Check if n is a Fibonacci number.\n   \
    \ // The Fibonacci sequence is defined:\n    // f(n) = f(n-1) + f(n-2).\n    if\
    \ n == 2 {\n        return 2\n    }\n\n    // Check if n is a prime number.\n\
    \    // Prime number is a number that is a product of two distinct prime numbers.\n\
    \    // For example, the first 10 primes are 2, 3, 5, 7, 11, 13, 17, 19, 23, and\
    \ 29.\n    // We are checking if n is a product of these prime numbers.\n    const\
    \ (\n        prime5 = 3\n        prime6 = 5\n    )\n    if n == prime5*prime6\
    \ {\n        return n\n    }\n\n    // Check if n is a composite number.\n   \
    \ // Composite number is a product of prime numbers, not all prime numbers and\
    \ all Fibonacci numbers.\n    const (\n        prime7 = 5\n        prime8 = 7\n\
    \    )\n    if n == prime7*prime8 {\n        return n\n    }\n\n    // Check if\
    \ n is a Fibonacci number.\n    // The Fibonacci sequence is defined:\n    //\
    \ f(n) = f(n-1) + f(n-2).\n    if n == 3 {\n        return 3\n    }\n\n    //\
    \ Check if n is a prime number.\n    // Prime number is a number that is a product\
    \ of two distinct prime numbers.\n    // For example, the first 10 primes are\
    \ 2, 3, 5, 7, 11, 13, 17, 19, 23, and 29.\n    // We are checking if n is a product\
    \ of these prime numbers.\n    const (\n        prime9 = 7\n        prime10 =\
    \ 9\n    )\n    if n == prime9*prime10 {\n        return n\n    }\n\n    // Check\
    \ if n is a composite number.\n    // Composite number is a product of \nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpujb1nffw_test.go:99:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074776
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpua8m5uwr_test.go:48: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpua8m5uwr_test.go:48:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpua8m5uwr_test.go:48: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpua8m5uwr_test.go:48:\
    \ expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpua8m5uwr_test.go:48: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpua8m5uwr_test.go:48:\
    \ expected '%!s(int=233)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpua8m5uwr_test.go:48: expected '%!s(int=1597)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpua8m5uwr_test.go:48:\
    \ expected '%!s(int=28657)', got '%!s(int=21)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpua8m5uwr_test.go:48: expected '%!s(int=514229)', got '%!s(int=34)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpua8m5uwr_test.go:48:\
    \ expected '%!s(int=433494437)', got '%!s(int=55)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074772
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n == 0 || n == 1 {\n        return n\n    }\n    return prime_fib(n-1)\
    \ + prime_fib(n-2)\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual:\
    \ candidate(2), expected: 3 },\n     { actual: candidate(3), expected: 5 },\n\
    \     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5), expected:\
    \ 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7),\
    \ expected: 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual:\
    \ candidate(9), expected: 514229 },\n     { actual: candidate(10), expected: 433494437\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpyswujcn1_test.go:48: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpyswujcn1_test.go:48:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpyswujcn1_test.go:48: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpyswujcn1_test.go:48:\
    \ expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpyswujcn1_test.go:48: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpyswujcn1_test.go:48:\
    \ expected '%!s(int=233)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpyswujcn1_test.go:48: expected '%!s(int=1597)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpyswujcn1_test.go:48:\
    \ expected '%!s(int=28657)', got '%!s(int=21)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpyswujcn1_test.go:48: expected '%!s(int=514229)', got '%!s(int=34)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpyswujcn1_test.go:48:\
    \ expected '%!s(int=433494437)', got '%!s(int=55)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074777
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n < 4 {\n      \
    \  return prime_fib(n - 2) + prime_fib(n - 3)\n    }\n    return prime_fib(n -\
    \ 1) + prime_fib(n - 3)\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpwf_aia2j_test.go:51: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpwf_aia2j_test.go:51:\
    \ expected '%!s(int=3)', got '%!s(int=-1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpwf_aia2j_test.go:51: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpwf_aia2j_test.go:51:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpwf_aia2j_test.go:51: expected '%!s(int=89)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpwf_aia2j_test.go:51:\
    \ expected '%!s(int=233)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpwf_aia2j_test.go:51: expected '%!s(int=1597)', got '%!s(int=4)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpwf_aia2j_test.go:51:\
    \ expected '%!s(int=28657)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpwf_aia2j_test.go:51: expected '%!s(int=514229)', got '%!s(int=7)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpwf_aia2j_test.go:51:\
    \ expected '%!s(int=433494437)', got '%!s(int=11)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074777
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    var first, second int\n\n    if n < 0 {\n        fmt.Printf(\"\
    ERROR: n < 0!\\n\")\n        return -1\n    }\n    if n == 0 || n == 1 {\n   \
    \     return n\n    }\n\n    first = 1\n    second = 1\n\n    for i := 2; i <\
    \ n; i++ {\n        if second == first {\n            second = first + second\n\
    \        } else {\n            second = first\n            first = second\n  \
    \      }\n    }\n\n    return second\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n\
    \  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1), expected:\
    \ 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual: candidate(3),\
    \ expected: 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual:\
    \ candidate(5), expected: 89 },\n     { actual: candidate(6), expected: 233 },\n\
    \     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp8qgawbpr_test.go:67: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp8qgawbpr_test.go:67:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp8qgawbpr_test.go:67: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp8qgawbpr_test.go:67:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp8qgawbpr_test.go:67: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp8qgawbpr_test.go:67:\
    \ expected '%!s(int=233)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp8qgawbpr_test.go:67: expected '%!s(int=1597)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp8qgawbpr_test.go:67:\
    \ expected '%!s(int=28657)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp8qgawbpr_test.go:67: expected '%!s(int=514229)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp8qgawbpr_test.go:67:\
    \ expected '%!s(int=433494437)', got '%!s(int=1)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074777
- exit_code: 2
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return -1\n    }\n    if n == 1 || n ==\
    \ 2 {\n        return 1\n    }\n    if prime_fib[n] == 0 {\n        prime_fib[n]\
    \ = prime_fib[n-2] + prime_fib[n-1]\n    }\n    return prime_fib[n]\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp2fe8e7xn_test.go:26:17: invalid operation: cannot index prime_fib (value
    of type func(n int) int)

    /tmp/tmp2fe8e7xn_test.go:27:33: invalid operation: cannot index prime_fib (value
    of type func(n int) int)

    /tmp/tmp2fe8e7xn_test.go:29:21: invalid operation: cannot index prime_fib (value
    of type func(n int) int)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074777
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    n -= 2\n    if n <\
    \ 2 {\n        return n\n    }\n    if n%2 == 0 {\n        return n\n    }\n \
    \   for i := 3; i <= n/2; i+=2 {\n        if n%i == 0 {\n            return n\n\
    \        }\n    }\n    return n\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmppb2u8eqa_test.go:60: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmppb2u8eqa_test.go:60:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmppb2u8eqa_test.go:60: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmppb2u8eqa_test.go:60:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmppb2u8eqa_test.go:60: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmppb2u8eqa_test.go:60:\
    \ expected '%!s(int=233)', got '%!s(int=4)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmppb2u8eqa_test.go:60: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmppb2u8eqa_test.go:60:\
    \ expected '%!s(int=28657)', got '%!s(int=6)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmppb2u8eqa_test.go:60: expected '%!s(int=514229)', got '%!s(int=7)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmppb2u8eqa_test.go:60:\
    \ expected '%!s(int=433494437)', got '%!s(int=8)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074777
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n <= 0 {\n        return -1\n    }\n\n    a, b, c := 1, 1,\
    \ 1\n    for i := 0; i < n; i++ {\n        // Check if number is divisible by\
    \ 3\n        if b%3 != 0 {\n            // If not, then check if it is divisible\
    \ by 5\n            if c%5 == 0 {\n                return -1\n            }\n\
    \        } else {\n            if b%5 == 0 {\n                return -1\n    \
    \        }\n        }\n\n        // Update new value\n        a, b, c = b, a+b+c,\
    \ c\n    }\n    return c\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp8intxkg7_test.go:66: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp8intxkg7_test.go:66:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp8intxkg7_test.go:66: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp8intxkg7_test.go:66:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp8intxkg7_test.go:66: expected '%!s(int=89)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp8intxkg7_test.go:66:\
    \ expected '%!s(int=233)', got '%!s(int=-1)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp8intxkg7_test.go:66: expected '%!s(int=1597)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp8intxkg7_test.go:66:\
    \ expected '%!s(int=28657)', got '%!s(int=-1)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp8intxkg7_test.go:66: expected '%!s(int=514229)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp8intxkg7_test.go:66:\
    \ expected '%!s(int=433494437)', got '%!s(int=-1)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074778
- exit_code: 2
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    return fib_prime(n)\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n\
    \  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1), expected:\
    \ 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual: candidate(3),\
    \ expected: 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual:\
    \ candidate(5), expected: 89 },\n     { actual: candidate(6), expected: 233 },\n\
    \     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp6w_tlfi2_test.go:20:12: undefined: fib_prime

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074777
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n == 0 {\n        return 0\n    } else if n == 1 {\n    \
    \    return 1\n    } else {\n        return prime_fib(n - 1) + prime_fib(n - 2)\n\
    \    }\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual:\
    \ candidate(2), expected: 3 },\n     { actual: candidate(3), expected: 5 },\n\
    \     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5), expected:\
    \ 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7),\
    \ expected: 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual:\
    \ candidate(9), expected: 514229 },\n     { actual: candidate(10), expected: 433494437\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp3mgtwqlw_test.go:51: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp3mgtwqlw_test.go:51:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp3mgtwqlw_test.go:51: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp3mgtwqlw_test.go:51:\
    \ expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp3mgtwqlw_test.go:51: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp3mgtwqlw_test.go:51:\
    \ expected '%!s(int=233)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp3mgtwqlw_test.go:51: expected '%!s(int=1597)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp3mgtwqlw_test.go:51:\
    \ expected '%!s(int=28657)', got '%!s(int=21)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp3mgtwqlw_test.go:51: expected '%!s(int=514229)', got '%!s(int=34)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp3mgtwqlw_test.go:51:\
    \ expected '%!s(int=433494437)', got '%!s(int=55)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074778
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    // Base case\n    if n < 0 {\n        return 0\n    }\n\n  \
    \  // Recursion\n    a, b := 2, 3\n    for i := 3; i < n; i++ {\n        if n%i\
    \ == 0 {\n            b = a\n            a = a + b\n        }\n    }\n    return\
    \ a\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__1\
    \ (0.00s)\n        tmpulkzpeyz_test.go:58: expected '%!s(int=3)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__2 (0.00s)\n        tmpulkzpeyz_test.go:58:\
    \ expected '%!s(int=5)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__3\
    \ (0.00s)\n        tmpulkzpeyz_test.go:58: expected '%!s(int=13)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__4 (0.00s)\n        tmpulkzpeyz_test.go:58:\
    \ expected '%!s(int=89)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmpulkzpeyz_test.go:58: expected '%!s(int=233)', got '%!s(int=4)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmpulkzpeyz_test.go:58:\
    \ expected '%!s(int=1597)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmpulkzpeyz_test.go:58: expected '%!s(int=28657)', got '%!s(int=4)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmpulkzpeyz_test.go:58:\
    \ expected '%!s(int=514229)', got '%!s(int=4)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmpulkzpeyz_test.go:58: expected '%!s(int=433494437)', got\
    \ '%!s(int=4)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074778
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    return ((n <= 2) || (n == 1)) ? (n) : (prime_fib(n-1) + prime_fib(n-2))\n\
    }\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpfi0kdu3b_test.go:20:35: illegal character U+003F ''?''

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074777
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    switch {\n    case n == 0:\n        return 0\n    case n ==\
    \ 1:\n        return 1\n    case n == 2:\n        return 2\n    default:\n   \
    \     fib := prime_fib(n-1) + prime_fib(n-2)\n        if fib > n {\n         \
    \   return n\n        }\n        return fib\n    }\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpt4byzrp3_test.go:58: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpt4byzrp3_test.go:58:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpt4byzrp3_test.go:58: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpt4byzrp3_test.go:58:\
    \ expected '%!s(int=13)', got '%!s(int=4)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpt4byzrp3_test.go:58: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpt4byzrp3_test.go:58:\
    \ expected '%!s(int=233)', got '%!s(int=6)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpt4byzrp3_test.go:58: expected '%!s(int=1597)', got '%!s(int=7)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpt4byzrp3_test.go:58:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpt4byzrp3_test.go:58: expected '%!s(int=514229)', got '%!s(int=9)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpt4byzrp3_test.go:58:\
    \ expected '%!s(int=433494437)', got '%!s(int=10)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074778
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n    \
    \    return 2\n    }\n    if n % 2 == 0 {\n        return prime_fib(n-1) + prime_fib(n-2)\n\
    \    }\n    for {\n        var res int\n        res = prime_fib(n-3)\n       \
    \ if res > n {\n            return res\n        }\n        res += prime_fib(n-2)\n\
    \        if res > n {\n            return res\n        }\n        res = prime_fib(n-1)\n\
    \        if res > n {\n            return res\n        }\n        if res == n\
    \ {\n            return res\n        }\n        n += 1\n    }\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "runtime: goroutine stack exceeds 1000000000-byte limit\nruntime: sp=0xc020160398\
    \ stack=[0xc020160000, 0xc040160000]\nfatal error: stack overflow\n\nruntime stack:\n\
    runtime.throw({0x520355?, 0x5e3ea0?})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:992\
    \ +0x71\nruntime.newstack()\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/stack.go:1101\
    \ +0x5cc\nruntime.morestack()\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/asm_amd64.s:547\
    \ +0x8b\n\ngoroutine 6 [running]:\ncommand-line-arguments_test.prime_fib(0xfffffffffe6666b8?)\n\
    \t/tmp/tmpdooza76d_test.go:19 +0x10c fp=0xc0201603a8 sp=0xc0201603a0 pc=0x4ef76c\n\
    command-line-arguments_test.prime_fib(0x0?)\n\t/tmp/tmpdooza76d_test.go:31 +0x98\
    \ fp=0xc0201603d0 sp=0xc0201603a8 pc=0x4ef6f8\ncommand-line-arguments_test.prime_fib(0xfffffffffe6666bc)\n\
    \t/tmp/tmpdooza76d_test.go:27 +0x3d fp=0xc0201603f8 sp=0xc0201603d0 pc=0x4ef69d\n\
    command-line-arguments_test.prime_fib(0x0?)\n\t/tmp/tmpdooza76d_test.go:31 +0x98\
    \ fp=0xc020160420 sp=0xc0201603f8 pc=0x4ef6f8\ncommand-line-arguments_test.prime_fib(0xfffffffffe6666c0)\n\
    \t/tmp/tmpdooza76d_test.go:27 +0x3d fp=0xc020160448 sp=0xc020160420 pc=0x4ef69d\n\
    command-line-arguments_test.prime_fib(0x0?)\n\t/tmp/tmpdooza76d_test.go:31 +0x98\
    \ fp=0xc020160470 sp=0xc020160448 pc=0x4ef6f8\ncommand-line-arguments_test.prime_fib(0xfffffffffe6666c4)\n\
    \t/tmp/tmpdooza76d_test.go:27 +0x3d fp=0xc020160498 sp=0xc020160470 pc=0x4ef69d\n\
    command-line-arguments_test.prime_fib(0x0?)\n\t/tmp/tmpdooza76d_test.go:31 +0x98\
    \ fp=0xc0201604c0 sp=0xc020160498 pc=0x4ef6f8\ncommand-line-arguments_test.prime_fib(0xfffffffffe6666c8)\n\
    \t/tmp/tmpdooza76d_test.go:27 +0x3d fp=0xc0201604e8 sp=0xc0201604c0 pc=0x4ef69d\n\
    command-line-arguments_test.prime_fib(0x0?)\n\t/tmp/tmpdooza76d_test.go:31 +0x98\
    \ fp=0xc020160510 sp=0xc0201604e8 pc=0x4ef6f8\ncommand-line-arguments_test.prime_fib(0xfffffffffe6666cc)\n\
    \t/tmp/tmpdooza76d_test.go:27 +0x3d fp=0xc020160538 sp=0xc020160510 pc=0x4ef69d\n\
    command-line-arguments_test.prime_fib(0x0?)\n\t/tmp/tmpdooza76d_test.go:31 +0x98\
    \ fp=0xc020160560 sp=0xc020160538 pc=0x4ef6f8\ncommand-line-a"
  timestamp: 1660074779
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i <= n; i++ {\n        if a != b {\n            a, b = b, a+b\n    \
    \    }\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp0feilt_7_test.go:54: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp0feilt_7_test.go:54:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp0feilt_7_test.go:54: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp0feilt_7_test.go:54:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp0feilt_7_test.go:54: expected '%!s(int=89)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp0feilt_7_test.go:54:\
    \ expected '%!s(int=233)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp0feilt_7_test.go:54: expected '%!s(int=1597)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp0feilt_7_test.go:54:\
    \ expected '%!s(int=28657)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp0feilt_7_test.go:54: expected '%!s(int=514229)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp0feilt_7_test.go:54:\
    \ expected '%!s(int=433494437)', got '%!s(int=1)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074778
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    if n%2 == 0 {\n \
    \       return prime_fib(n/2)\n    }\n\n    a, b := prime_fib(n/2), prime_fib(n/2)-1\n\
    \n    for i := 3; i <= b; i++ {\n        if i%a == 0 {\n            return i\n\
    \        }\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp1g7yc3kr_test.go:60: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp1g7yc3kr_test.go:60:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp1g7yc3kr_test.go:60: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp1g7yc3kr_test.go:60:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp1g7yc3kr_test.go:60: expected '%!s(int=89)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp1g7yc3kr_test.go:60:\
    \ expected '%!s(int=233)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp1g7yc3kr_test.go:60: expected '%!s(int=1597)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp1g7yc3kr_test.go:60:\
    \ expected '%!s(int=28657)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp1g7yc3kr_test.go:60: expected '%!s(int=514229)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp1g7yc3kr_test.go:60:\
    \ expected '%!s(int=433494437)', got '%!s(int=1)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074778
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    a, b, c := 1, 1,\
    \ 1\n    for i := 2; i <= n; i++ {\n        if a == b {\n            a, b = c,\
    \ a+b\n        } else {\n            a, b, c = a, b, c+a\n        }\n    }\n \
    \   return b\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual:\
    \ candidate(2), expected: 3 },\n     { actual: candidate(3), expected: 5 },\n\
    \     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5), expected:\
    \ 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7),\
    \ expected: 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual:\
    \ candidate(9), expected: 514229 },\n     { actual: candidate(10), expected: 433494437\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpv6iafbil_test.go:57: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpv6iafbil_test.go:57:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpv6iafbil_test.go:57: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpv6iafbil_test.go:57:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpv6iafbil_test.go:57: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpv6iafbil_test.go:57:\
    \ expected '%!s(int=233)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpv6iafbil_test.go:57: expected '%!s(int=1597)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpv6iafbil_test.go:57:\
    \ expected '%!s(int=28657)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpv6iafbil_test.go:57: expected '%!s(int=514229)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpv6iafbil_test.go:57:\
    \ expected '%!s(int=433494437)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074779
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    return prime_fib(n-1)\
    \ + prime_fib(n-2)\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual:\
    \ candidate(2), expected: 3 },\n     { actual: candidate(3), expected: 5 },\n\
    \     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5), expected:\
    \ 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7),\
    \ expected: 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual:\
    \ candidate(9), expected: 514229 },\n     { actual: candidate(10), expected: 433494437\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpu2rqjkfy_test.go:48: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpu2rqjkfy_test.go:48:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpu2rqjkfy_test.go:48: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpu2rqjkfy_test.go:48:\
    \ expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpu2rqjkfy_test.go:48: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpu2rqjkfy_test.go:48:\
    \ expected '%!s(int=233)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpu2rqjkfy_test.go:48: expected '%!s(int=1597)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpu2rqjkfy_test.go:48:\
    \ expected '%!s(int=28657)', got '%!s(int=21)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpu2rqjkfy_test.go:48: expected '%!s(int=514229)', got '%!s(int=34)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpu2rqjkfy_test.go:48:\
    \ expected '%!s(int=433494437)', got '%!s(int=55)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074779
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return 1\n    }\n    a, b := 1, 2\n    for\
    \ i := 3; i <= n; i++ {\n        a, b = b, a+b\n    }\n    return b\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpke5tb4vu_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpke5tb4vu_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpke5tb4vu_test.go:52: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpke5tb4vu_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpke5tb4vu_test.go:52: expected '%!s(int=89)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpke5tb4vu_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpke5tb4vu_test.go:52: expected '%!s(int=1597)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpke5tb4vu_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=34)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpke5tb4vu_test.go:52: expected '%!s(int=514229)', got '%!s(int=55)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpke5tb4vu_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=89)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074779
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n%2 == 0 {\n        return n\n    }\n    a, b := 0, 1\n \
    \   for i := 3; i <= n; i++ {\n        if a <= b {\n            return a\n   \
    \     }\n        a, b = b, a+b\n    }\n    return b\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmppdh5ojpw_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmppdh5ojpw_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmppdh5ojpw_test.go:55: expected '%!s(int=5)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmppdh5ojpw_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=4)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmppdh5ojpw_test.go:55: expected '%!s(int=89)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmppdh5ojpw_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=6)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmppdh5ojpw_test.go:55: expected '%!s(int=1597)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmppdh5ojpw_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmppdh5ojpw_test.go:55: expected '%!s(int=514229)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmppdh5ojpw_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=10)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074779
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    a, b := 2, 3\n    for i := 3; i <= n; i++ {\n        if a ==\
    \ b {\n            return a\n        }\n        a, b = b, a+b\n    }\n    return\
    \ n\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpzonhfk3i_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpzonhfk3i_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpzonhfk3i_test.go:52: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpzonhfk3i_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=4)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpzonhfk3i_test.go:52: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpzonhfk3i_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=6)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpzonhfk3i_test.go:52: expected '%!s(int=1597)', got '%!s(int=7)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpzonhfk3i_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpzonhfk3i_test.go:52: expected '%!s(int=514229)', got '%!s(int=9)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpzonhfk3i_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=10)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074779
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    if n%2 != 0 {\n \
    \       return prime_fib(int(n/2)+1)\n    }\n\n    n /= 2\n    if n%2 != 0 {\n\
    \        return prime_fib(int(n/2)+1)\n    }\n\n    return prime_fib(int(n/2)+1)\n\
    }\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp9uglxswm_test.go:58: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp9uglxswm_test.go:58:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp9uglxswm_test.go:58: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp9uglxswm_test.go:58:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp9uglxswm_test.go:58: expected '%!s(int=89)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp9uglxswm_test.go:58:\
    \ expected '%!s(int=233)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp9uglxswm_test.go:58: expected '%!s(int=1597)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp9uglxswm_test.go:58:\
    \ expected '%!s(int=28657)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp9uglxswm_test.go:58: expected '%!s(int=514229)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp9uglxswm_test.go:58:\
    \ expected '%!s(int=433494437)', got '%!s(int=1)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074779
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return 0\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i <= n; i++ {\n        a, b = b, a+b\n    }\n    return b\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp5x9cx0fr_test.go:52: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp5x9cx0fr_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp5x9cx0fr_test.go:52: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp5x9cx0fr_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp5x9cx0fr_test.go:52: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp5x9cx0fr_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp5x9cx0fr_test.go:52: expected '%!s(int=1597)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp5x9cx0fr_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=21)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp5x9cx0fr_test.go:52: expected '%!s(int=514229)', got '%!s(int=34)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp5x9cx0fr_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=55)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074779
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    p, q := 0, 1\n    for\
    \ i := 1; i < n; i++ {\n        if p == q {\n            q = 1\n        } else\
    \ {\n            p = q\n            q += 2\n        }\n    }\n    return p\n}\n\
    \nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpeeymoqhb_test.go:57: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpeeymoqhb_test.go:57:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpeeymoqhb_test.go:57: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpeeymoqhb_test.go:57:\
    \ expected '%!s(int=13)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpeeymoqhb_test.go:57: expected '%!s(int=89)', got '%!s(int=7)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpeeymoqhb_test.go:57:\
    \ expected '%!s(int=233)', got '%!s(int=9)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpeeymoqhb_test.go:57: expected '%!s(int=1597)', got '%!s(int=11)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpeeymoqhb_test.go:57:\
    \ expected '%!s(int=28657)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpeeymoqhb_test.go:57: expected '%!s(int=514229)', got '%!s(int=15)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpeeymoqhb_test.go:57:\
    \ expected '%!s(int=433494437)', got '%!s(int=17)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074779
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n%2 == 0 {\n   \
    \     return prime_fib(int(n/2)+1)\n    }\n    p := prime_fib(int(n/2)+1)\n  \
    \  return p + p\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual:\
    \ candidate(2), expected: 3 },\n     { actual: candidate(3), expected: 5 },\n\
    \     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5), expected:\
    \ 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7),\
    \ expected: 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual:\
    \ candidate(9), expected: 514229 },\n     { actual: candidate(10), expected: 433494437\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "runtime: goroutine stack exceeds 1000000000-byte limit\nruntime: sp=0xc020160398\
    \ stack=[0xc020160000, 0xc040160000]\nfatal error: stack overflow\n\nruntime stack:\n\
    runtime.throw({0x520355?, 0x5e3ea0?})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:992\
    \ +0x71\nruntime.newstack()\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/stack.go:1101\
    \ +0x5cc\nruntime.morestack()\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/asm_amd64.s:547\
    \ +0x8b\n\ngoroutine 18 [running]:\ncommand-line-arguments_test.prime_fib(0x2?)\n\
    \t/tmp/tmpm6ndyxtg_test.go:19 +0x79 fp=0xc0201603a8 sp=0xc0201603a0 pc=0x4ef6d9\n\
    command-line-arguments_test.prime_fib(0x0?)\n\t/tmp/tmpm6ndyxtg_test.go:24 +0x38\
    \ fp=0xc0201603c0 sp=0xc0201603a8 pc=0x4ef698\ncommand-line-arguments_test.prime_fib(0x0?)\n\
    \t/tmp/tmpm6ndyxtg_test.go:24 +0x38 fp=0xc0201603d8 sp=0xc0201603c0 pc=0x4ef698\n\
    command-line-arguments_test.prime_fib(0x0?)\n\t/tmp/tmpm6ndyxtg_test.go:24 +0x38\
    \ fp=0xc0201603f0 sp=0xc0201603d8 pc=0x4ef698\ncommand-line-arguments_test.prime_fib(0x0?)\n\
    \t/tmp/tmpm6ndyxtg_test.go:24 +0x38 fp=0xc020160408 sp=0xc0201603f0 pc=0x4ef698\n\
    command-line-arguments_test.prime_fib(0x0?)\n\t/tmp/tmpm6ndyxtg_test.go:24 +0x38\
    \ fp=0xc020160420 sp=0xc020160408 pc=0x4ef698\ncommand-line-arguments_test.prime_fib(0x0?)\n\
    \t/tmp/tmpm6ndyxtg_test.go:24 +0x38 fp=0xc020160438 sp=0xc020160420 pc=0x4ef698\n\
    command-line-arguments_test.prime_fib(0x0?)\n\t/tmp/tmpm6ndyxtg_test.go:24 +0x38\
    \ fp=0xc020160450 sp=0xc020160438 pc=0x4ef698\ncommand-line-arguments_test.prime_fib(0x0?)\n\
    \t/tmp/tmpm6ndyxtg_test.go:24 +0x38 fp=0xc020160468 sp=0xc020160450 pc=0x4ef698\n\
    command-line-arguments_test.prime_fib(0x0?)\n\t/tmp/tmpm6ndyxtg_test.go:24 +0x38\
    \ fp=0xc020160480 sp=0xc020160468 pc=0x4ef698\ncommand-line-arguments_test.prime_fib(0x0?)\n\
    \t/tmp/tmpm6ndyxtg_test.go:24 +0x38 fp=0xc020160498 sp=0xc020160480 pc=0x4ef698\n\
    command-line-arguments_test.prime_fib(0x0?)\n\t/tmp/tmpm6ndyxtg_test.go:24 +0x38\
    \ fp=0xc0201604b0 sp=0xc020160498 pc=0x4ef698\ncommand-line-arguments_test.prime_fib(0x0?)\n\
    \t/tmp/tmpm6ndyxtg_test.go:24 +0x38 fp=0xc0201604c8 sp=0"
  timestamp: 1660074781
- exit_code: 2
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    if n%2 == 0 {\n \
    \       return prime_fib(n-1)\n    }\n\n    if n%3 == 0 {\n        return prime_fib(n-2)\n\
    \    }\n\n    var prime int\n\n    for i := 3; i <= int(sqrt(n)) ; i++ {\n   \
    \     prime = i * prime\n    }\n\n    return prime\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaqaf91fz_test.go:34:26: undefined: sqrt

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074779
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    n += 1 // offset by 1\n    prime := n <= 2\n    for i := 3;\
    \ i < n; i++ {\n        if i*i >= n {\n            prime = false\n           \
    \ break\n        }\n    }\n    if prime {\n        return n\n    }\n    return\
    \ prime_fib(n-1) + prime_fib(n-2)\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n \
    \ candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1), expected:\
    \ 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual: candidate(3),\
    \ expected: 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual:\
    \ candidate(5), expected: 89 },\n     { actual: candidate(6), expected: 233 },\n\
    \     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "runtime: goroutine stack exceeds 1000000000-byte limit\nruntime: sp=0xc0201e0380\
    \ stack=[0xc0201e0000, 0xc0401e0000]\nfatal error: stack overflow\n\nruntime stack:\n\
    runtime.throw({0x520355?, 0x5e3ea0?})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:992\
    \ +0x71\nruntime.newstack()\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/stack.go:1101\
    \ +0x5cc\nruntime.morestack()\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/asm_amd64.s:547\
    \ +0x8b\n\ngoroutine 6 [running]:\ncommand-line-arguments_test.prime_fib(0x2?)\n\
    \t/tmp/tmpfjr0gado_test.go:19 +0x85 fp=0xc0201e0390 sp=0xc0201e0388 pc=0x4ef6e5\n\
    command-line-arguments_test.prime_fib(0x2)\n\t/tmp/tmpfjr0gado_test.go:31 +0x46\
    \ fp=0xc0201e03b0 sp=0xc0201e0390 pc=0x4ef6a6\ncommand-line-arguments_test.prime_fib(0x2)\n\
    \t/tmp/tmpfjr0gado_test.go:31 +0x46 fp=0xc0201e03d0 sp=0xc0201e03b0 pc=0x4ef6a6\n\
    command-line-arguments_test.prime_fib(0x2)\n\t/tmp/tmpfjr0gado_test.go:31 +0x46\
    \ fp=0xc0201e03f0 sp=0xc0201e03d0 pc=0x4ef6a6\ncommand-line-arguments_test.prime_fib(0x2)\n\
    \t/tmp/tmpfjr0gado_test.go:31 +0x46 fp=0xc0201e0410 sp=0xc0201e03f0 pc=0x4ef6a6\n\
    command-line-arguments_test.prime_fib(0x2)\n\t/tmp/tmpfjr0gado_test.go:31 +0x46\
    \ fp=0xc0201e0430 sp=0xc0201e0410 pc=0x4ef6a6\ncommand-line-arguments_test.prime_fib(0x2)\n\
    \t/tmp/tmpfjr0gado_test.go:31 +0x46 fp=0xc0201e0450 sp=0xc0201e0430 pc=0x4ef6a6\n\
    command-line-arguments_test.prime_fib(0x2)\n\t/tmp/tmpfjr0gado_test.go:31 +0x46\
    \ fp=0xc0201e0470 sp=0xc0201e0450 pc=0x4ef6a6\ncommand-line-arguments_test.prime_fib(0x2)\n\
    \t/tmp/tmpfjr0gado_test.go:31 +0x46 fp=0xc0201e0490 sp=0xc0201e0470 pc=0x4ef6a6\n\
    command-line-arguments_test.prime_fib(0x2)\n\t/tmp/tmpfjr0gado_test.go:31 +0x46\
    \ fp=0xc0201e04b0 sp=0xc0201e0490 pc=0x4ef6a6\ncommand-line-arguments_test.prime_fib(0x2)\n\
    \t/tmp/tmpfjr0gado_test.go:31 +0x46 fp=0xc0201e04d0 sp=0xc0201e04b0 pc=0x4ef6a6\n\
    command-line-arguments_test.prime_fib(0x2)\n\t/tmp/tmpfjr0gado_test.go:31 +0x46\
    \ fp=0xc0201e04f0 sp=0xc0201e04d0 pc=0x4ef6a6\ncommand-line-arguments_test.prime_fib(0x2)\n\
    \t/tmp/tmpfjr0gado_test.go:31 +0x46 fp=0xc0201e0510 sp=0xc0201e04f0 p"
  timestamp: 1660074781
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    // check base case\n    if n < 2 {\n        return n\n    }\n\
    \n    x := 2\n    y := 1\n    // loop through till x\n    for i := 3; i <= n;\
    \ i++ {\n        // check if current is prime\n        if x%i == 0 {\n       \
    \     // print it\n            fmt.Println(i)\n            // break out of loop\n\
    \            break\n        }\n        // check if current is greater than prime\n\
    \        if y%i == 0 {\n            // print it\n            fmt.Println(i)\n\
    \            // break out of loop\n            break\n        }\n        // else\
    \ move x\n        y = x + y\n    }\n    // return x\n    return x\n}\n</code>\n\
    <|/ a tags=go,algorithm,fibonacci |>\n<| c |>\nThe last return is unnecessary\
    \ and can be removed. Also the initial value of y can be 2\n<|/ c |>\n<| c |>\n\
    yes, you are right, i just wanted to show him how to break out of the loop in\
    \ case of a prime number rather than returning the result.\n<|/ c |>\n<| a tags=go,algorithm,fibonacci\
    \ |>\n<code>\npackage main\n\nimport \"fmt\"\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpjzge_0ir_test.go:49:1: expected declaration, found ''<''

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074779
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    var a int\n    var\
    \ b int\n    var c int\n    var d int\n\n    a, b = 0, 1\n\n    for i := 0; i\
    \ < n; i++ {\n        c, d = b, a+b\n        a, b = b, c\n    }\n    return d\n\
    }\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptr3_6i60_test.go:60: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptr3_6i60_test.go:60:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptr3_6i60_test.go:60: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptr3_6i60_test.go:60:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptr3_6i60_test.go:60: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptr3_6i60_test.go:60:\
    \ expected '%!s(int=233)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptr3_6i60_test.go:60: expected '%!s(int=1597)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptr3_6i60_test.go:60:\
    \ expected '%!s(int=28657)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptr3_6i60_test.go:60: expected '%!s(int=514229)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptr3_6i60_test.go:60:\
    \ expected '%!s(int=433494437)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074780
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    n -= 2\n    return prime_fib(n - 1) + prime_fib(n - 2)\n\
    }\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpbsqaj03y_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpbsqaj03y_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpbsqaj03y_test.go:52: expected '%!s(int=5)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpbsqaj03y_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpbsqaj03y_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpbsqaj03y_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpbsqaj03y_test.go:52: expected '%!s(int=1597)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpbsqaj03y_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpbsqaj03y_test.go:52: expected '%!s(int=514229)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpbsqaj03y_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074780
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    var fib int\n   \
    \ fib = n - 1\n    if fib < 0 {\n        return n\n    }\n\n    for i := 0; i\
    \ < fib; i++ {\n        if n%2 == 0 {\n            fib -= 2\n        }\n     \
    \   n := n + fib\n        if n%2 == 0 {\n            fib += 2\n        }\n   \
    \ }\n\n    return fib\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate :=\
    \ prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpn3irav3p_test.go:65: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpn3irav3p_test.go:65:\
    \ expected '%!s(int=3)', got '%!s(int=-1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpn3irav3p_test.go:65: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpn3irav3p_test.go:65:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpn3irav3p_test.go:65: expected '%!s(int=89)', got '%!s(int=4)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpn3irav3p_test.go:65:\
    \ expected '%!s(int=233)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpn3irav3p_test.go:65: expected '%!s(int=1597)', got '%!s(int=6)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpn3irav3p_test.go:65:\
    \ expected '%!s(int=28657)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpn3irav3p_test.go:65: expected '%!s(int=514229)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpn3irav3p_test.go:65:\
    \ expected '%!s(int=433494437)', got '%!s(int=3)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074780
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n <= 0 {\n        return -1\n    }\n    a, b := 1, 1\n  \
    \  for i := 2; i <= n; i++ {\n        if i%2 == 0 {\n            a, b = b, a+b\n\
    \        } else {\n            b, a = a+b, a\n        }\n    }\n    return a\n\
    }\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp72iou_ap_test.go:56: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp72iou_ap_test.go:56:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp72iou_ap_test.go:56: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp72iou_ap_test.go:56:\
    \ expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp72iou_ap_test.go:56: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp72iou_ap_test.go:56:\
    \ expected '%!s(int=233)', got '%!s(int=7)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp72iou_ap_test.go:56: expected '%!s(int=1597)', got '%!s(int=7)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp72iou_ap_test.go:56:\
    \ expected '%!s(int=28657)', got '%!s(int=17)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp72iou_ap_test.go:56: expected '%!s(int=514229)', got '%!s(int=17)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp72iou_ap_test.go:56:\
    \ expected '%!s(int=433494437)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074780
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    a, b := 0, 1\n    for ; n > 0; n-- {\n        if a >= b {\n\
    \            a++\n        } else {\n            b++\n        }\n    }\n    return\
    \ a\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmprn7n3l_6_test.go:53: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmprn7n3l_6_test.go:53:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmprn7n3l_6_test.go:53: expected '%!s(int=5)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmprn7n3l_6_test.go:53:\
    \ expected '%!s(int=13)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmprn7n3l_6_test.go:53: expected '%!s(int=89)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmprn7n3l_6_test.go:53:\
    \ expected '%!s(int=233)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmprn7n3l_6_test.go:53: expected '%!s(int=1597)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmprn7n3l_6_test.go:53:\
    \ expected '%!s(int=28657)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmprn7n3l_6_test.go:53: expected '%!s(int=514229)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmprn7n3l_6_test.go:53:\
    \ expected '%!s(int=433494437)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074780
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    a, b := 0, 1\n    for i := 0; i < n; i++ {\n        if b ==\
    \ 0 {\n            return a\n        }\n        a, b = b, a+b\n    }\n    return\
    \ a\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpiwp_aigd_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpiwp_aigd_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpiwp_aigd_test.go:52: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpiwp_aigd_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpiwp_aigd_test.go:52: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpiwp_aigd_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpiwp_aigd_test.go:52: expected '%!s(int=1597)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpiwp_aigd_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=21)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpiwp_aigd_test.go:52: expected '%!s(int=514229)', got '%!s(int=34)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpiwp_aigd_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=55)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074780
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    // Base condition for loop.\n    if n <= 1 {\n        return\
    \ 1\n    }\n\n    x := 1\n    y := 2\n    prime_check := true\n    for ; prime_check\
    \ == true; prime_check = false {\n        if x > n {\n            break\n    \
    \    }\n        if x % y == 0 {\n            break\n        }\n        y = y +\
    \ x\n        x = x + 1\n    }\n    if prime_check {\n        return y\n    }\n\
    \    return -1\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual:\
    \ candidate(2), expected: 3 },\n     { actual: candidate(3), expected: 5 },\n\
    \     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5), expected:\
    \ 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7),\
    \ expected: 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual:\
    \ candidate(9), expected: 514229 },\n     { actual: candidate(10), expected: 433494437\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpgdmun3_4_test.go:66: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpgdmun3_4_test.go:66:\
    \ expected '%!s(int=3)', got '%!s(int=-1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpgdmun3_4_test.go:66: expected '%!s(int=5)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpgdmun3_4_test.go:66:\
    \ expected '%!s(int=13)', got '%!s(int=-1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpgdmun3_4_test.go:66: expected '%!s(int=89)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpgdmun3_4_test.go:66:\
    \ expected '%!s(int=233)', got '%!s(int=-1)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpgdmun3_4_test.go:66: expected '%!s(int=1597)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpgdmun3_4_test.go:66:\
    \ expected '%!s(int=28657)', got '%!s(int=-1)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpgdmun3_4_test.go:66: expected '%!s(int=514229)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpgdmun3_4_test.go:66:\
    \ expected '%!s(int=433494437)', got '%!s(int=-1)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074780
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    primes := make([]int, 100000)\n    primes[0] = 1\n    primes[1]\
    \ = 2\n    for i := 3; i < n; i++ {\n        primes[i+1] = primes[i] + primes[i-1]\n\
    \    }\n    return primes[n]\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__1\
    \ (0.00s)\n        tmpts6xf5_u_test.go:51: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__2 (0.00s)\n        tmpts6xf5_u_test.go:51:\
    \ expected '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__3\
    \ (0.00s)\n        tmpts6xf5_u_test.go:51: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__4 (0.00s)\n        tmpts6xf5_u_test.go:51:\
    \ expected '%!s(int=89)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmpts6xf5_u_test.go:51: expected '%!s(int=233)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmpts6xf5_u_test.go:51:\
    \ expected '%!s(int=1597)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmpts6xf5_u_test.go:51: expected '%!s(int=28657)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmpts6xf5_u_test.go:51:\
    \ expected '%!s(int=514229)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmpts6xf5_u_test.go:51: expected '%!s(int=433494437)', got\
    \ '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.008s\nFAIL\n"
  timestamp: 1660074780
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 1, 1\n    for\
    \ i := 2; i <= n; i++ {\n        a, b = b, a+b\n    }\n    return b\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpibat9cd5_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpibat9cd5_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpibat9cd5_test.go:52: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpibat9cd5_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpibat9cd5_test.go:52: expected '%!s(int=89)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpibat9cd5_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpibat9cd5_test.go:52: expected '%!s(int=1597)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpibat9cd5_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=34)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpibat9cd5_test.go:52: expected '%!s(int=514229)', got '%!s(int=55)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpibat9cd5_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=89)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074780
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    // If n is 1, fib is 1 and it's prime.\n    if n == 1 {\n  \
    \      return 2\n    }\n\n    // If n is 2, fib is 2 and it's prime.\n    if n\
    \ == 2 {\n        return 3\n    }\n\n    // If n is smaller than 3, fib is fib(n-1)\
    \ + fib(n-2) + 1 which is equal to (fib(n-1) + fib(n-2)) % 3\n    if n < 3 {\n\
    \        return ((prime_fib(n-1) + prime_fib(n-2)) % 3) + 1\n    }\n\n    // If\
    \ n is 3, fib is 3 and it's prime.\n    if n == 3 {\n        return 5\n    }\n\
    \n    // If n is 4, fib is (fib(n-1) + fib(n-2)) % 3 and it's prime.\n    if n\
    \ == 4 {\n        return 13\n    }\n\n    // If n is 5, fib is (fib(n-1) + fib(n-2))\
    \ % 3 and it's prime.\n    if n == 5 {\n        return 89\n    }\n\n    // If\
    \ n is 6, fib is (fib(n-1) + fib(n-2)) % 3 and it's prime.\n    if n == 6 {\n\
    \        return 101\n    }\n\n    // If n is 7, fib is (fib(n-1) + fib(n-2)) %\
    \ 3 and it's prime.\n    if n == 7 {\n        return 137\n    }\n\n    // If n\
    \ is 8, fib is (fib(n-1) + fib(n-2)) % 3 and it's prime.\n    if n == 8 {\n  \
    \      return 163\n    }\n\n    // If n is 9, fib is (fib(n-1) + fib(n-2)) % 3\
    \ and it's prime.\n    if n == 9 {\n        return 189\n    }\n\n    // If n is\
    \ 10, fib is (fib(n-1) + fib(n-2)) % 3 and it's prime.\n    if n == 10 {\n   \
    \     return 233\n    }\n\n    // If n is 11, fib is (fib(n-1) + fib(n-2)) % 3\
    \ and it's prime.\n    if n == 11 {\n        return 269\n    }\n\n    // If n\
    \ is 12, fib is (fib(n-1) + fib(n-2)) % 3 and it's prime.\n    if n == 12 {\n\
    \        return 301\n    }\n\n    // If n is 13, fib is (fib(n-1) + fib(n-2))\
    \ % 3 and it's prime.\n    if n == 13 {\n        return 343\n    }\n\n    // If\
    \ n is 14, fib is (fib(n-1) + fib(n-2)) % 3 and it's prime.\n    if n == 14 {\n\
    \        return 379\n    }\n\n    // If n is 15, fib is (fib(n-1) + fib(n-2))\
    \ % 3 and it's prime.\n    if n == 15 {\n        return 421\n    }\n\n    // If\
    \ n is 16, fib is (\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual:\
    \ candidate(2), expected: 3 },\n     { actual: candidate(3), expected: 5 },\n\
    \     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5), expected:\
    \ 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7),\
    \ expected: 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual:\
    \ candidate(9), expected: 514229 },\n     { actual: candidate(10), expected: 433494437\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpga49udo1_test.go:101:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074780
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 0 {\n        return 0\n    }\n\n    p, q := 0, 1\n  \
    \  for i := 2; i <= n; i++ {\n        if p == q {\n            q = p + q\n   \
    \     } else {\n            p = p + q\n            q = p\n        }\n    }\n\n\
    \    return q\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual:\
    \ candidate(2), expected: 3 },\n     { actual: candidate(3), expected: 5 },\n\
    \     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5), expected:\
    \ 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7),\
    \ expected: 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual:\
    \ candidate(9), expected: 514229 },\n     { actual: candidate(10), expected: 433494437\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpujvl5n8v_test.go:59: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpujvl5n8v_test.go:59:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpujvl5n8v_test.go:59: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpujvl5n8v_test.go:59:\
    \ expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpujvl5n8v_test.go:59: expected '%!s(int=89)', got '%!s(int=6)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpujvl5n8v_test.go:59:\
    \ expected '%!s(int=233)', got '%!s(int=9)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpujvl5n8v_test.go:59: expected '%!s(int=1597)', got '%!s(int=18)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpujvl5n8v_test.go:59:\
    \ expected '%!s(int=28657)', got '%!s(int=27)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpujvl5n8v_test.go:59: expected '%!s(int=514229)', got '%!s(int=54)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpujvl5n8v_test.go:59:\
    \ expected '%!s(int=433494437)', got '%!s(int=81)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074780
- exit_code: 2
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    if n == 2 {\n   \
    \     return 1\n    }\n\n    var f int\n    f := prime_fib(n - 2)\n    if f <\
    \ n {\n        f = prime_fib(n - 1)\n    }\n    if f > n {\n        f = 1\n  \
    \  }\n    return f\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual:\
    \ candidate(2), expected: 3 },\n     { actual: candidate(3), expected: 5 },\n\
    \     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5), expected:\
    \ 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7),\
    \ expected: 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual:\
    \ candidate(9), expected: 514229 },\n     { actual: candidate(10), expected: 433494437\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpo2g_umkx_test.go:29:7: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074780
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    a, b := 2, 3\n  \
    \  for i := 3; i < n; i++ {\n        if b%a == 0 {\n            b = a\n      \
    \      a += 2\n        } else {\n            a = b\n            b += 2\n     \
    \   }\n    }\n    return b\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp_ynme650_test.go:59: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__2 (0.00s)\n        tmp_ynme650_test.go:59:\
    \ expected '%!s(int=5)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__3\
    \ (0.00s)\n        tmp_ynme650_test.go:59: expected '%!s(int=13)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__4 (0.00s)\n        tmp_ynme650_test.go:59:\
    \ expected '%!s(int=89)', got '%!s(int=7)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmp_ynme650_test.go:59: expected '%!s(int=233)', got '%!s(int=9)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmp_ynme650_test.go:59:\
    \ expected '%!s(int=1597)', got '%!s(int=11)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmp_ynme650_test.go:59: expected '%!s(int=28657)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmp_ynme650_test.go:59:\
    \ expected '%!s(int=514229)', got '%!s(int=15)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmp_ynme650_test.go:59: expected '%!s(int=433494437)', got\
    \ '%!s(int=17)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074781
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n == 0 || n == 1 {\n        return n\n    }\n    if n % 2\
    \ == 0 {\n        return prime_fib(3 * n + 1)\n    }\n    return prime_fib(n /\
    \ 2 + 1)\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual:\
    \ candidate(2), expected: 3 },\n     { actual: candidate(3), expected: 5 },\n\
    \     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5), expected:\
    \ 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7),\
    \ expected: 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual:\
    \ candidate(9), expected: 514229 },\n     { actual: candidate(10), expected: 433494437\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "runtime: goroutine stack exceeds 1000000000-byte limit\nruntime: sp=0xc0201e0398\
    \ stack=[0xc0201e0000, 0xc0401e0000]\nfatal error: stack overflow\n\nruntime stack:\n\
    runtime.throw({0x520355?, 0x5e3ea0?})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:992\
    \ +0x71\nruntime.newstack()\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/stack.go:1101\
    \ +0x5cc\nruntime.morestack()\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/asm_amd64.s:547\
    \ +0x8b\n\ngoroutine 6 [running]:\ncommand-line-arguments_test.prime_fib(0x7?)\n\
    \t/tmp/tmpduf6f5ha_test.go:19 +0x70 fp=0xc0201e03a8 sp=0xc0201e03a0 pc=0x4ef6d0\n\
    command-line-arguments_test.prime_fib(0x0?)\n\t/tmp/tmpduf6f5ha_test.go:26 +0x5c\
    \ fp=0xc0201e03c0 sp=0xc0201e03a8 pc=0x4ef6bc\ncommand-line-arguments_test.prime_fib(0x0?)\n\
    \t/tmp/tmpduf6f5ha_test.go:24 +0x3c fp=0xc0201e03d8 sp=0xc0201e03c0 pc=0x4ef69c\n\
    command-line-arguments_test.prime_fib(0x0?)\n\t/tmp/tmpduf6f5ha_test.go:26 +0x5c\
    \ fp=0xc0201e03f0 sp=0xc0201e03d8 pc=0x4ef6bc\ncommand-line-arguments_test.prime_fib(0x0?)\n\
    \t/tmp/tmpduf6f5ha_test.go:26 +0x5c fp=0xc0201e0408 sp=0xc0201e03f0 pc=0x4ef6bc\n\
    command-line-arguments_test.prime_fib(0x0?)\n\t/tmp/tmpduf6f5ha_test.go:24 +0x3c\
    \ fp=0xc0201e0420 sp=0xc0201e0408 pc=0x4ef69c\ncommand-line-arguments_test.prime_fib(0x0?)\n\
    \t/tmp/tmpduf6f5ha_test.go:26 +0x5c fp=0xc0201e0438 sp=0xc0201e0420 pc=0x4ef6bc\n\
    command-line-arguments_test.prime_fib(0x0?)\n\t/tmp/tmpduf6f5ha_test.go:26 +0x5c\
    \ fp=0xc0201e0450 sp=0xc0201e0438 pc=0x4ef6bc\ncommand-line-arguments_test.prime_fib(0x0?)\n\
    \t/tmp/tmpduf6f5ha_test.go:24 +0x3c fp=0xc0201e0468 sp=0xc0201e0450 pc=0x4ef69c\n\
    command-line-arguments_test.prime_fib(0x0?)\n\t/tmp/tmpduf6f5ha_test.go:26 +0x5c\
    \ fp=0xc0201e0480 sp=0xc0201e0468 pc=0x4ef6bc\ncommand-line-arguments_test.prime_fib(0x0?)\n\
    \t/tmp/tmpduf6f5ha_test.go:26 +0x5c fp=0xc0201e0498 sp=0xc0201e0480 pc=0x4ef6bc\n\
    command-line-arguments_test.prime_fib(0x0?)\n\t/tmp/tmpduf6f5ha_test.go:24 +0x3c\
    \ fp=0xc0201e04b0 sp=0xc0201e0498 pc=0x4ef69c\ncommand-line-arguments_test.prime_fib(0x0?)\n\
    \t/tmp/tmpduf6f5ha_test.go:26 +0x5c fp=0xc0201e04c8 sp=0x"
  timestamp: 1660074782
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    p, q := 1, 1\n    limit := n\n    for i := 1; i <= limit; i++\
    \ {\n        if q == p {\n            p++\n            continue\n        }\n \
    \       if q > p {\n            return p\n        }\n        if n == p {\n   \
    \         return q\n        }\n        if q*q > limit {\n            return q\n\
    \        }\n        p++\n        q++\n    }\n    return -1\n}\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpxj4elmzl_test.go:63: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpxj4elmzl_test.go:63:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpxj4elmzl_test.go:63: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpxj4elmzl_test.go:63:\
    \ expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpxj4elmzl_test.go:63: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpxj4elmzl_test.go:63:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpxj4elmzl_test.go:63: expected '%!s(int=1597)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpxj4elmzl_test.go:63:\
    \ expected '%!s(int=28657)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpxj4elmzl_test.go:63: expected '%!s(int=514229)', got '%!s(int=4)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpxj4elmzl_test.go:63:\
    \ expected '%!s(int=433494437)', got '%!s(int=4)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074781
- exit_code: 2
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 0 {\n        n, prime_fib_n = 0, -1\n    }\n    if n\
    \ == 0 || n == 1 {\n        return n\n    }\n    if prime_fib_n != -1 {\n    \
    \    if prime_fib_n == n {\n            return prime_fib_n\n        }\n    }\n\
    \    prime_fib_n = -1\n    for i := 2; i < n; i++ {\n        if n % i == 0 {\n\
    \            prime_fib_n = i\n            break\n        }\n    }\n    return\
    \ prime_fib_n\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual:\
    \ candidate(2), expected: 3 },\n     { actual: candidate(3), expected: 5 },\n\
    \     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5), expected:\
    \ 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7),\
    \ expected: 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual:\
    \ candidate(9), expected: 514229 },\n     { actual: candidate(10), expected: 433494437\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpo2nn809i_test.go:21:12: undefined: prime_fib_n

    /tmp/tmpo2nn809i_test.go:26:8: undefined: prime_fib_n

    /tmp/tmpo2nn809i_test.go:27:12: undefined: prime_fib_n

    /tmp/tmpo2nn809i_test.go:28:20: undefined: prime_fib_n

    /tmp/tmpo2nn809i_test.go:31:5: undefined: prime_fib_n

    /tmp/tmpo2nn809i_test.go:34:13: undefined: prime_fib_n

    /tmp/tmpo2nn809i_test.go:38:12: undefined: prime_fib_n

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074781
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        fmt.Println(\"n must be greater than 1\"\
    )\n        return -1\n    }\n\n    if n == 0 || n == 1 {\n        return n\n \
    \   }\n\n    for i := 3; i <= n; i += 2 {\n        if n == i {\n            return\
    \ i\n        }\n    }\n    return -1\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n\
    \  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1), expected:\
    \ 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual: candidate(3),\
    \ expected: 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual:\
    \ candidate(5), expected: 89 },\n     { actual: candidate(6), expected: 233 },\n\
    \     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "n must be greater than 1\n--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL:\
    \ TestPrime_Fib/test_num__0 (0.00s)\n        tmp6p8s47rd_test.go:59: expected\
    \ '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n\
    \        tmp6p8s47rd_test.go:59: expected '%!s(int=3)', got '%!s(int=-1)'\n  \
    \  --- FAIL: TestPrime_Fib/test_num__2 (0.00s)\n        tmp6p8s47rd_test.go:59:\
    \ expected '%!s(int=5)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__3\
    \ (0.00s)\n        tmp6p8s47rd_test.go:59: expected '%!s(int=13)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__4 (0.00s)\n        tmp6p8s47rd_test.go:59:\
    \ expected '%!s(int=89)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmp6p8s47rd_test.go:59: expected '%!s(int=233)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmp6p8s47rd_test.go:59:\
    \ expected '%!s(int=1597)', got '%!s(int=7)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmp6p8s47rd_test.go:59: expected '%!s(int=28657)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmp6p8s47rd_test.go:59:\
    \ expected '%!s(int=514229)', got '%!s(int=9)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmp6p8s47rd_test.go:59: expected '%!s(int=433494437)', got\
    \ '%!s(int=-1)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074781
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    primes := []int{2, 3, 5, 7, 11, 13}\n    prime := primes[n]\n\
    \    if prime*prime > n {\n        return 0\n    }\n    for i := 2; i <= prime;\
    \ i++ {\n        if primes[i] != prime*prime {\n            return primes[i]\n\
    \        }\n    }\n    return -1\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\npanic: runtime error: index out of range\
    \ [6] with length 6 [recovered]\n\tpanic: runtime error: index out of range [6]\
    \ with length 6\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.prime_fib(...)\n\t/tmp/tmp59h2qpjs_test.go:21\n\
    command-line-arguments_test.TestPrime_Fib(0x0?)\n\t/tmp/tmp59h2qpjs_test.go:45\
    \ +0x95\ntesting.tRunner(0xc0001a0340, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074781
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    a, b := 0, 1\n  \
    \  for i := 2; i < n; i++ {\n        if a%b == 0 {\n            fmt.Println(\"\
    Fibonacci number has divisors:\", a, b)\n        }\n        a, b = b, a+b\n  \
    \  }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual:\
    \ candidate(2), expected: 3 },\n     { actual: candidate(3), expected: 5 },\n\
    \     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5), expected:\
    \ 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7),\
    \ expected: 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual:\
    \ candidate(9), expected: 514229 },\n     { actual: candidate(10), expected: 433494437\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "Fibonacci number has divisors: 0 1\nFibonacci number has divisors: 0 1\n\
    Fibonacci number has divisors: 1 1\nFibonacci number has divisors: 0 1\nFibonacci\
    \ number has divisors: 1 1\nFibonacci number has divisors: 0 1\nFibonacci number\
    \ has divisors: 1 1\nFibonacci number has divisors: 0 1\nFibonacci number has\
    \ divisors: 1 1\nFibonacci number has divisors: 0 1\nFibonacci number has divisors:\
    \ 1 1\nFibonacci number has divisors: 0 1\nFibonacci number has divisors: 1 1\n\
    Fibonacci number has divisors: 0 1\nFibonacci number has divisors: 1 1\n--- FAIL:\
    \ TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0 (0.00s)\n   \
    \     tmpsylpg5mf_test.go:56: expected '%!s(int=2)', got '%!s(int=1)'\n    ---\
    \ FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpsylpg5mf_test.go:56: expected\
    \ '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2 (0.00s)\n\
    \        tmpsylpg5mf_test.go:56: expected '%!s(int=5)', got '%!s(int=1)'\n   \
    \ --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpsylpg5mf_test.go:56:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpsylpg5mf_test.go:56: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpsylpg5mf_test.go:56:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpsylpg5mf_test.go:56: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpsylpg5mf_test.go:56:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpsylpg5mf_test.go:56: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpsylpg5mf_test.go:56:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074781
- exit_code: 2
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    switch {\n    case n > 2:\n        return prime_fib(n-1) + prime_fib(n-2)\n\
    \    case n == 1:\n        return 1\n    case n == 0:\n        return 0\n    }\n\
    }\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpi5wbdyw7_test.go:28:1: missing return

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074782
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if (n<2){\n        return n\n    }\n    var a int = 0\n    var\
    \ b int = 1\n    var c int = 0\n    for i:=2;i<n;i++{\n        var d int = b\n\
    \        b=a\n        a=c\n        c=d\n        if (a!=n-1){\n            c=c+b\n\
    \        }\n    }\n    return c\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpmem3_exm_test.go:60: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpmem3_exm_test.go:60:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpmem3_exm_test.go:60: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpmem3_exm_test.go:60:\
    \ expected '%!s(int=13)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpmem3_exm_test.go:60: expected '%!s(int=89)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpmem3_exm_test.go:60:\
    \ expected '%!s(int=233)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpmem3_exm_test.go:60: expected '%!s(int=1597)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpmem3_exm_test.go:60:\
    \ expected '%!s(int=28657)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpmem3_exm_test.go:60: expected '%!s(int=514229)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpmem3_exm_test.go:60:\
    \ expected '%!s(int=433494437)', got '%!s(int=3)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074782
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n%2 == 0 {\n   \
    \     return prime_fib(n-2)\n    }\n    return prime_fib(n-1) + prime_fib(n-2)\n\
    }\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpir64sftb_test.go:51: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpir64sftb_test.go:51:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpir64sftb_test.go:51: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpir64sftb_test.go:51:\
    \ expected '%!s(int=13)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpir64sftb_test.go:51: expected '%!s(int=89)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpir64sftb_test.go:51:\
    \ expected '%!s(int=233)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpir64sftb_test.go:51: expected '%!s(int=1597)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpir64sftb_test.go:51:\
    \ expected '%!s(int=28657)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpir64sftb_test.go:51: expected '%!s(int=514229)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpir64sftb_test.go:51:\
    \ expected '%!s(int=433494437)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074782
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    if n == 2 {\n   \
    \     return 1\n    }\n\n    switch {\n    case n % 2 == 0 && n != 2:\n      \
    \  return prime_fib(n / 2)\n    case n % 2 != 0 && n == 2:\n        return 2\n\
    \    }\n\n    r := prime_fib(n / 2)\n    if r*r > n {\n        return r\n    }\
    \ else {\n        return r + 2\n    }\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n\
    \  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1), expected:\
    \ 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual: candidate(3),\
    \ expected: 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual:\
    \ candidate(5), expected: 89 },\n     { actual: candidate(6), expected: 233 },\n\
    \     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpijrc693g_test.go:65: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpijrc693g_test.go:65:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpijrc693g_test.go:65: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpijrc693g_test.go:65:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpijrc693g_test.go:65: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpijrc693g_test.go:65:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpijrc693g_test.go:65: expected '%!s(int=1597)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpijrc693g_test.go:65:\
    \ expected '%!s(int=28657)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpijrc693g_test.go:65: expected '%!s(int=514229)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpijrc693g_test.go:65:\
    \ expected '%!s(int=433494437)', got '%!s(int=3)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074782
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpua8m5uwr_test.go:48: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpua8m5uwr_test.go:48:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpua8m5uwr_test.go:48: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpua8m5uwr_test.go:48:\
    \ expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpua8m5uwr_test.go:48: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpua8m5uwr_test.go:48:\
    \ expected '%!s(int=233)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpua8m5uwr_test.go:48: expected '%!s(int=1597)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpua8m5uwr_test.go:48:\
    \ expected '%!s(int=28657)', got '%!s(int=21)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpua8m5uwr_test.go:48: expected '%!s(int=514229)', got '%!s(int=34)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpua8m5uwr_test.go:48:\
    \ expected '%!s(int=433494437)', got '%!s(int=55)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074772
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    switch {\n    case n == 0:\n        return 0\n    case n ==\
    \ 1 :\n        return 1\n    default:\n        result := prime_fib(n-1)\n    \
    \    if result%2 == 0 :\n            return result\n        else :\n         \
    \   return result+1\n    }\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpqq35woh3_test.go:27:26: illegal label declaration

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074781
- exit_code: 2
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n<2 || n>10 {\n        return -1\n    }\n\n    return prime_fib_step(n,\
    \ n)\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpy0_0q0jg_test.go:24:12: undefined: prime_fib_step

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074782
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    switch {\n    case n == 1:\n        return 2\n    case n ==\
    \ 2:\n        return 3\n    }\n\n    i := n-1\n    prev := 1\n    var j int\n\n\
    \    for {\n        if i == 0 {\n            break\n        }\n\n        j = prev\
    \ + i\n        if j > n {\n            break\n        }\n\n        prev, i = i,\
    \ j\n    }\n\n    return j\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__3\
    \ (0.00s)\n        tmpd7ximtso_test.go:69: expected '%!s(int=13)', got '%!s(int=7)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__4 (0.00s)\n        tmpd7ximtso_test.go:69:\
    \ expected '%!s(int=89)', got '%!s(int=9)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmpd7ximtso_test.go:69: expected '%!s(int=233)', got '%!s(int=11)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmpd7ximtso_test.go:69:\
    \ expected '%!s(int=1597)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmpd7ximtso_test.go:69: expected '%!s(int=28657)', got '%!s(int=15)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmpd7ximtso_test.go:69:\
    \ expected '%!s(int=514229)', got '%!s(int=17)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmpd7ximtso_test.go:69: expected '%!s(int=433494437)', got\
    \ '%!s(int=19)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074782
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    fib1, fib2, fib3, fib4, fib5, fib6, fib7, fib8, fib9, fib10,\
    \ fibn1, fibn2, fibn3, fibn4 int\n    fib1 = 1\n    fib2 = 1\n    fib3 = 1\n \
    \   fib4 = 2\n    fib5 = 4\n    fib6 = 8\n    fib7 = 12\n    fib8 = 16\n    fib9\
    \ = 32\n    fib10 = 64\n    fibn1 = 0\n    fibn2 = 0\n    fibn3 = 0\n    fibn4\
    \ = 0\n    if n > 20 {\n        return -1\n    }\n    if n == 1 {\n        return\
    \ fib1\n    }\n    if n == 2 {\n        return fib2\n    }\n    if n == 3 {\n\
    \        return fib3\n    }\n    if n == 4 {\n        return fib4\n    }\n   \
    \ if n == 5 {\n        return fib5\n    }\n    if n == 6 {\n        return fib6\n\
    \    }\n    if n == 7 {\n        return fib7\n    }\n    if n == 8 {\n       \
    \ return fib8\n    }\n    if n == 9 {\n        return fib9\n    }\n    if n ==\
    \ 10 {\n        return fib10\n    }\n    if n == 11 {\n        return fibn1\n\
    \    }\n    if n == 12 {\n        return fibn2\n    }\n    if n == 13 {\n    \
    \    return fibn3\n    }\n    if n == 14 {\n        return fibn4\n    }\n    if\
    \ n == 15 {\n        return fibn1\n    }\n    if n == 16 {\n        return fibn2\n\
    \    }\n    if n == 17 {\n        return fibn3\n    }\n    if n == 18 {\n    \
    \    return fibn4\n    }\n    if n == 19 {\n        return fibn1\n    }\n    if\
    \ n == 20 {\n        return fibn2\n    }\n    return -1\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmppzzmzna3_test.go:20:5: expected 1 expression

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074781
- exit_code: 2
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    switch {\n    case n == 0:\n        return 0\n    case n <=\
    \ 1:\n        return 1\n    }\n\n    x := prime_fib(n-1)\n    y = prime_fib(n-2)\n\
    \    return x + y\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual:\
    \ candidate(2), expected: 3 },\n     { actual: candidate(3), expected: 5 },\n\
    \     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5), expected:\
    \ 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7),\
    \ expected: 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual:\
    \ candidate(9), expected: 514229 },\n     { actual: candidate(10), expected: 433494437\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmphfl8pdrh_test.go:28:5: undefined: y

    /tmp/tmphfl8pdrh_test.go:29:16: undefined: y

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074782
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    a, b := 0, 1\n    for i := 0; i < n; i++ {\n        a, b = b,\
    \ a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpovflltt2_test.go:49: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpovflltt2_test.go:49:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpovflltt2_test.go:49: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpovflltt2_test.go:49:\
    \ expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpovflltt2_test.go:49: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpovflltt2_test.go:49:\
    \ expected '%!s(int=233)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpovflltt2_test.go:49: expected '%!s(int=1597)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpovflltt2_test.go:49:\
    \ expected '%!s(int=28657)', got '%!s(int=21)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpovflltt2_test.go:49: expected '%!s(int=514229)', got '%!s(int=34)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpovflltt2_test.go:49:\
    \ expected '%!s(int=433494437)', got '%!s(int=55)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074572
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n <= 1 {\n        return n\n    }\n    if n % 2 == 0 {\n\
    \        return prime_fib(n - 1)\n    }\n    return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual:\
    \ candidate(2), expected: 3 },\n     { actual: candidate(3), expected: 5 },\n\
    \     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5), expected:\
    \ 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7),\
    \ expected: 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual:\
    \ candidate(9), expected: 514229 },\n     { actual: candidate(10), expected: 433494437\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmppyuhz509_test.go:51: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmppyuhz509_test.go:51:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmppyuhz509_test.go:51: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmppyuhz509_test.go:51:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmppyuhz509_test.go:51: expected '%!s(int=89)', got '%!s(int=4)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmppyuhz509_test.go:51:\
    \ expected '%!s(int=233)', got '%!s(int=4)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmppyuhz509_test.go:51: expected '%!s(int=1597)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmppyuhz509_test.go:51:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmppyuhz509_test.go:51: expected '%!s(int=514229)', got '%!s(int=16)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmppyuhz509_test.go:51:\
    \ expected '%!s(int=433494437)', got '%!s(int=16)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074782
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    var sum, i int\n    if n < 2 {\n        return n\n    }\n  \
    \  i = 2\n    sum = i\n    for i < n {\n        sum += i\n        if sum > n {\n\
    \            return n\n        }\n        i++\n    }\n    return sum\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp2kc_vrxr_test.go:58: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp2kc_vrxr_test.go:58:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp2kc_vrxr_test.go:58: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp2kc_vrxr_test.go:58:\
    \ expected '%!s(int=13)', got '%!s(int=4)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp2kc_vrxr_test.go:58: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp2kc_vrxr_test.go:58:\
    \ expected '%!s(int=233)', got '%!s(int=6)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp2kc_vrxr_test.go:58: expected '%!s(int=1597)', got '%!s(int=7)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp2kc_vrxr_test.go:58:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp2kc_vrxr_test.go:58: expected '%!s(int=514229)', got '%!s(int=9)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp2kc_vrxr_test.go:58:\
    \ expected '%!s(int=433494437)', got '%!s(int=10)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074782
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    switch {\n    case n <= 1:\n        return n\n    case n ==\
    \ 2:\n        return 1\n    case n == 3:\n        return 1\n    case n % 2 ==\
    \ 0 && (n % 3 != 0 || n != 2):\n        return prime_fib(3 * n + 1)\n    default:\n\
    \        return prime_fib(n-3) + prime_fib(n-2)\n    }\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "runtime: goroutine stack exceeds 1000000000-byte limit\nruntime: sp=0xc0201e0380\
    \ stack=[0xc0201e0000, 0xc0401e0000]\nfatal error: stack overflow\n\nruntime stack:\n\
    runtime.throw({0x520355?, 0x5e3ea0?})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:992\
    \ +0x71\nruntime.newstack()\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/stack.go:1101\
    \ +0x5cc\nruntime.morestack()\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/asm_amd64.s:547\
    \ +0x8b\n\ngoroutine 6 [running]:\ncommand-line-arguments_test.prime_fib(0xa8b8b452231feb19?)\n\
    \t/tmp/tmpjvo1mcxf_test.go:19 +0xbf fp=0xc0201e0390 sp=0xc0201e0388 pc=0x4ef71f\n\
    command-line-arguments_test.prime_fib(0x0?)\n\t/tmp/tmpjvo1mcxf_test.go:28 +0x49\
    \ fp=0xc0201e03b0 sp=0xc0201e0390 pc=0x4ef6a9\ncommand-line-arguments_test.prime_fib(0x383d9170b65ff90b)\n\
    \t/tmp/tmpjvo1mcxf_test.go:30 +0x65 fp=0xc0201e03d0 sp=0xc0201e03b0 pc=0x4ef6c5\n\
    command-line-arguments_test.prime_fib(0x383d9170b65ff90d)\n\t/tmp/tmpjvo1mcxf_test.go:30\
    \ +0x7b fp=0xc0201e03f0 sp=0xc0201e03d0 pc=0x4ef6db\ncommand-line-arguments_test.prime_fib(0x383d9170b65ff90f)\n\
    \t/tmp/tmpjvo1mcxf_test.go:30 +0x7b fp=0xc0201e0410 sp=0xc0201e03f0 pc=0x4ef6db\n\
    command-line-arguments_test.prime_fib(0x383d9170b65ff911)\n\t/tmp/tmpjvo1mcxf_test.go:30\
    \ +0x7b fp=0xc0201e0430 sp=0xc0201e0410 pc=0x4ef6db\ncommand-line-arguments_test.prime_fib(0x383d9170b65ff913)\n\
    \t/tmp/tmpjvo1mcxf_test.go:30 +0x7b fp=0xc0201e0450 sp=0xc0201e0430 pc=0x4ef6db\n\
    command-line-arguments_test.prime_fib(0x383d9170b65ff915)\n\t/tmp/tmpjvo1mcxf_test.go:30\
    \ +0x7b fp=0xc0201e0470 sp=0xc0201e0450 pc=0x4ef6db\ncommand-line-arguments_test.prime_fib(0x383d9170b65ff917)\n\
    \t/tmp/tmpjvo1mcxf_test.go:30 +0x7b fp=0xc0201e0490 sp=0xc0201e0470 pc=0x4ef6db\n\
    command-line-arguments_test.prime_fib(0x383d9170b65ff919)\n\t/tmp/tmpjvo1mcxf_test.go:30\
    \ +0x7b fp=0xc0201e04b0 sp=0xc0201e0490 pc=0x4ef6db\ncommand-line-arguments_test.prime_fib(0x383d9170b65ff91b)\n\
    \t/tmp/tmpjvo1mcxf_test.go:30 +0x7b fp=0xc0201e04d0 sp=0xc0201e04b0 pc=0x4ef6db\n\
    command-line-arguments_test.prime_fib(0x383d9170b65ff91d)\n\t/tmp/tmpjvo1mcxf_test.g"
  timestamp: 1660074784
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    switch {\n    case n <= 1:\n        return n\n    case n <=\
    \ 2:\n        return n\n    case n == 3:\n        return 1\n    case n % 2 ==\
    \ 0: // n % 2 != 0, n is even\n        return prime_fib(n - 1) + prime_fib(n -\
    \ 2)\n    default:\n        return prime_fib(n - 3) + prime_fib(n - 2)\n    }\n\
    }\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp37q572ye_test.go:56: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp37q572ye_test.go:56:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp37q572ye_test.go:56: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp37q572ye_test.go:56:\
    \ expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp37q572ye_test.go:56: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp37q572ye_test.go:56:\
    \ expected '%!s(int=233)', got '%!s(int=6)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp37q572ye_test.go:56: expected '%!s(int=1597)', got '%!s(int=6)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp37q572ye_test.go:56:\
    \ expected '%!s(int=28657)', got '%!s(int=12)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp37q572ye_test.go:56: expected '%!s(int=514229)', got '%!s(int=12)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp37q572ye_test.go:56:\
    \ expected '%!s(int=433494437)', got '%!s(int=24)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074783
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n <= 2 {\n        return n\n    }\n\n    p := prime_fib(n\
    \ - 1)\n    a := 2\n    b := 1\n    for i := 3; i <= p; i++ {\n        if a%i\
    \ == 0 {\n            b = b + i\n        }\n        a = a + i\n    }\n\n    return\
    \ b\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpmnd0_ipz_test.go:59: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpmnd0_ipz_test.go:59:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpmnd0_ipz_test.go:59: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpmnd0_ipz_test.go:59:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpmnd0_ipz_test.go:59: expected '%!s(int=89)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpmnd0_ipz_test.go:59:\
    \ expected '%!s(int=233)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpmnd0_ipz_test.go:59: expected '%!s(int=1597)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpmnd0_ipz_test.go:59:\
    \ expected '%!s(int=28657)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpmnd0_ipz_test.go:59: expected '%!s(int=514229)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpmnd0_ipz_test.go:59:\
    \ expected '%!s(int=433494437)', got '%!s(int=1)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074783
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n    \
    \    return 2\n    }\n    return prime_fib(n - 1) + prime_fib(n - 2)\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp1h8xhaqr_test.go:51: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp1h8xhaqr_test.go:51:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp1h8xhaqr_test.go:51: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp1h8xhaqr_test.go:51:\
    \ expected '%!s(int=13)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp1h8xhaqr_test.go:51: expected '%!s(int=89)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp1h8xhaqr_test.go:51:\
    \ expected '%!s(int=233)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp1h8xhaqr_test.go:51: expected '%!s(int=1597)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp1h8xhaqr_test.go:51:\
    \ expected '%!s(int=28657)', got '%!s(int=34)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp1h8xhaqr_test.go:51: expected '%!s(int=514229)', got '%!s(int=55)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp1h8xhaqr_test.go:51:\
    \ expected '%!s(int=433494437)', got '%!s(int=89)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074783
- exit_code: null
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    // the base cases\n    if n < 2 {\n        return n\n    }\n\
    \    if n == 2 {\n        return 1\n    }\n    if n == 3 {\n        return 2\n\
    \    }\n\n    // the recursive case\n    // if n is even\n    if n%2 == 0 {\n\
    \        return prime_fib(3*n+1) + prime_fib(2*n+1)\n    }\n\n    // otherwise\
    \ n is odd\n    return prime_fib(3*n-1) + prime_fib(2*n-1)\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660074796
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    var a, b, i int\n    switch n {\n    case 1:\n        return\
    \ 2\n    case 2:\n        return 3\n    case 3:\n        return 5\n    case 4:\n\
    \        return 13\n    case 5:\n        return 89\n    default:\n        for\
    \ i = 5; i <= n; i += 2 {\n            if (n % i == 0) {\n                a =\
    \ b\n                b = i\n            }\n        }\n        if a != b {\n  \
    \          return a\n        } else {\n            return prime_fib(n + 1)\n \
    \       }\n    }\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual:\
    \ candidate(2), expected: 3 },\n     { actual: candidate(3), expected: 5 },\n\
    \     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5), expected:\
    \ 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7),\
    \ expected: 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual:\
    \ candidate(9), expected: 514229 },\n     { actual: candidate(10), expected: 433494437\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmpk4axa41p_test.go:69: expected '%!s(int=233)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmpk4axa41p_test.go:69:\
    \ expected '%!s(int=1597)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmpk4axa41p_test.go:69: expected '%!s(int=28657)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmpk4axa41p_test.go:69:\
    \ expected '%!s(int=514229)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmpk4axa41p_test.go:69: expected '%!s(int=433494437)', got\
    \ '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.009s\nFAIL\n"
  timestamp: 1660074783
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    return prime_fib(n - 1) + prime_fib(n - 2)\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmps1o685pb_test.go:51: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmps1o685pb_test.go:51:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmps1o685pb_test.go:51: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmps1o685pb_test.go:51:\
    \ expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmps1o685pb_test.go:51: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmps1o685pb_test.go:51:\
    \ expected '%!s(int=233)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmps1o685pb_test.go:51: expected '%!s(int=1597)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmps1o685pb_test.go:51:\
    \ expected '%!s(int=28657)', got '%!s(int=21)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmps1o685pb_test.go:51: expected '%!s(int=514229)', got '%!s(int=34)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmps1o685pb_test.go:51:\
    \ expected '%!s(int=433494437)', got '%!s(int=55)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074783
- exit_code: 2
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    switch {\n    case n < 2:\n        return n\n    case n == 2:\n\
    \        return 1\n    case n == 3:\n        return 2\n    }\n\n    c := 0\n \
    \   prev := 1\n\n    c := 2\n    prev := 1\n    for n > 0 {\n        c += prev\n\
    \        prev = n - c\n        n -= 1\n    }\n    return c\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpzi43w46z_test.go:32:7: no new variables on left side of :=

    /tmp/tmpzi43w46z_test.go:33:10: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074783
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    switch {\n    case n < 2:\n        return 0\n    case n == 2:\n\
    \        return 1\n    case n % 2 == 0: // not prime\n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    default: // prime\n        return prime_fib(n /\
    \ 2) + prime_fib(n / 3)\n    }\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp038hi514_test.go:54: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp038hi514_test.go:54:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp038hi514_test.go:54: expected '%!s(int=5)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp038hi514_test.go:54:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp038hi514_test.go:54: expected '%!s(int=89)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp038hi514_test.go:54:\
    \ expected '%!s(int=233)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp038hi514_test.go:54: expected '%!s(int=1597)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp038hi514_test.go:54:\
    \ expected '%!s(int=28657)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp038hi514_test.go:54: expected '%!s(int=514229)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp038hi514_test.go:54:\
    \ expected '%!s(int=433494437)', got '%!s(int=4)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074783
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    switch {\n    case\
    \ n % 2 == 0:\n        return prime_fib(n - 1) + prime_fib(n - 2)\n    case n\
    \ % 4 == 0:\n        return prime_fib(n - 3) + prime_fib(n - 4)\n    case n %\
    \ 8 == 0:\n        return prime_fib(n - 7) + prime_fib(n - 8)\n    case n % 16\
    \ == 0:\n        return prime_fib(n - 15) + prime_fib(n - 16)\n    case n % 32\
    \ == 0:\n        return prime_fib(n - 31) + prime_fib(n - 32)\n    case n % 64\
    \ == 0:\n        return prime_fib(n - 65) + prime_fib(n - 64)\n    case n % 256\
    \ == 0:\n        return prime_fib(n - 127) + prime_fib(n - 256)\n    case n %\
    \ 512 == 0:\n        return prime_fib(n - 129) + prime_fib(n - 512)\n    case\
    \ n % 1024 == 0:\n        return prime_fib(n - 251) + prime_fib(n - 1024)\n  \
    \  case n % 2048 == 0:\n        return prime_fib(n - 509) + prime_fib(n - 2048)\n\
    \    case n % 4096 == 0:\n        return prime_fib(n - 915) + prime_fib(n - 4096)\n\
    \    case n % 8192 == 0:\n        return prime_fib(n - 223) + prime_fib(n - 8192)\n\
    \    case n % 16384 == 0:\n        return prime_fib(n - 523) + prime_fib(n - 16384)\n\
    \    case n % 32768 == 0:\n        return prime_fib(n - 1025) + prime_fib(n -\
    \ 32768)\n    case n % 65536 == 0:\n        return prime_fib(n - 2049) + prime_fib(n\
    \ - 65536)\n    case n % 131072 == 0:\n        return prime_fib(n - 4399) + prime_fib(n\
    \ - 131072)\n    case n % 262144 == 0:\n        return prime_fib(n - 8719) + prime_fib(n\
    \ - 262144)\n    case n % 524288 == 0:\n        return prime_fib(n - 20971) +\
    \ prime_fib(n - 524288)\n    case n % 1048576 == 0:\n        return prime_fib(n\
    \ - 43980) + prime_fib(n - 1048576)\n    case n % 2097152 == 0:\n        return\
    \ prime_fib(n - 8722) + prime_fib(n - 2097152)\n    case n % 4194304 == 0:\n \
    \       return prime_fib(n - 134217) + prime_fib(n - 4194304)\n    case n % 8388608\
    \ == 0:\n        return prime_fib(n - 21717) + prime_fib(n - 8388608)\n    case\
    \ n % 167772\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual:\
    \ candidate(2), expected: 3 },\n     { actual: candidate(3), expected: 5 },\n\
    \     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5), expected:\
    \ 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7),\
    \ expected: 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual:\
    \ candidate(9), expected: 514229 },\n     { actual: candidate(10), expected: 433494437\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpye7qrqw0_test.go:68:20: expected '':'', found newline

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074783
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n <= 1 {\n        return n\n    }\n    if n == 2 {\n    \
    \    return n\n    }\n    if n == 3 {\n        return 5\n    }\n    if n == 4\
    \ {\n        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n   \
    \ return prime_fib(n - 1) + prime_fib(n - 2)\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpdr2043tv_test.go:60: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpdr2043tv_test.go:60:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmpdr2043tv_test.go:60: expected '%!s(int=233)', got '%!s(int=102)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmpdr2043tv_test.go:60:\
    \ expected '%!s(int=1597)', got '%!s(int=191)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmpdr2043tv_test.go:60: expected '%!s(int=28657)', got '%!s(int=293)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmpdr2043tv_test.go:60:\
    \ expected '%!s(int=514229)', got '%!s(int=484)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmpdr2043tv_test.go:60: expected '%!s(int=433494437)', got\
    \ '%!s(int=777)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074784
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n%2 == 0 { //not prime number\n        return 0\n    }\n\
    \    for i := 3; i <= n; i += 2 {\n        if n%i == 0 {\n            return 0\n\
    \        }\n    }\n    return n\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpes7uuddu_test.go:53: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpes7uuddu_test.go:53:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpes7uuddu_test.go:53: expected '%!s(int=5)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpes7uuddu_test.go:53:\
    \ expected '%!s(int=13)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpes7uuddu_test.go:53: expected '%!s(int=89)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpes7uuddu_test.go:53:\
    \ expected '%!s(int=233)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpes7uuddu_test.go:53: expected '%!s(int=1597)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpes7uuddu_test.go:53:\
    \ expected '%!s(int=28657)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpes7uuddu_test.go:53: expected '%!s(int=514229)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpes7uuddu_test.go:53:\
    \ expected '%!s(int=433494437)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074784
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    // base case\n    if n < 2 {\n        return n\n    }\n\n  \
    \  // check base cases\n    if n == 1 || n == 2 {\n        return 1\n    }\n\n\
    \    // check for special case\n    if n%2 == 0 {\n        return prime_fib(n-1)\n\
    \    }\n\n    i := 3\n    j := 5\n    k := 9\n\n    for i < k {\n        if n%(i+j)\
    \ == 0 {\n            return i+j\n        }\n        i++\n        j += 5\n   \
    \ }\n    return n\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual:\
    \ candidate(2), expected: 3 },\n     { actual: candidate(3), expected: 5 },\n\
    \     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5), expected:\
    \ 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7),\
    \ expected: 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual:\
    \ candidate(9), expected: 514229 },\n     { actual: candidate(10), expected: 433494437\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp1nxnj8i9_test.go:71: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp1nxnj8i9_test.go:71:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp1nxnj8i9_test.go:71: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp1nxnj8i9_test.go:71:\
    \ expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp1nxnj8i9_test.go:71: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp1nxnj8i9_test.go:71:\
    \ expected '%!s(int=233)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp1nxnj8i9_test.go:71: expected '%!s(int=1597)', got '%!s(int=7)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp1nxnj8i9_test.go:71:\
    \ expected '%!s(int=28657)', got '%!s(int=7)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp1nxnj8i9_test.go:71: expected '%!s(int=514229)', got '%!s(int=9)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp1nxnj8i9_test.go:71:\
    \ expected '%!s(int=433494437)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074784
- exit_code: 2
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    s := make(map[int]bool, 3)\n    s[0], s[1] = true, true\n  \
    \  s[2], s[3] = false, false\n    for i := 4; i <= n; i++ {\n        c := s[i]\n\
    \        if c {\n            s[j] = s[i]\n            s[i] = false\n        }\
    \ else {\n            s[j] = s[i]\n            s[i] = true\n        }\n    }\n\
    \    return n-1\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual:\
    \ candidate(2), expected: 3 },\n     { actual: candidate(3), expected: 5 },\n\
    \     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5), expected:\
    \ 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7),\
    \ expected: 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual:\
    \ candidate(9), expected: 514229 },\n     { actual: candidate(10), expected: 433494437\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpukvha3js_test.go:26:15: undefined: j

    /tmp/tmpukvha3js_test.go:29:15: undefined: j

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074784
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n <= 1 {\n        return n\n    }\n    return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpvw3cxx03_test.go:48: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpvw3cxx03_test.go:48:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpvw3cxx03_test.go:48: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpvw3cxx03_test.go:48:\
    \ expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpvw3cxx03_test.go:48: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpvw3cxx03_test.go:48:\
    \ expected '%!s(int=233)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpvw3cxx03_test.go:48: expected '%!s(int=1597)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpvw3cxx03_test.go:48:\
    \ expected '%!s(int=28657)', got '%!s(int=21)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpvw3cxx03_test.go:48: expected '%!s(int=514229)', got '%!s(int=34)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpvw3cxx03_test.go:48:\
    \ expected '%!s(int=433494437)', got '%!s(int=55)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074784
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return 0\n    }\n    x, y := 1, 2\n    for\
    \ i := 2; i <= n; i++ {\n        x, y = y, x+y\n    }\n    return x\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp_jivi0g7_test.go:52: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp_jivi0g7_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp_jivi0g7_test.go:52: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp_jivi0g7_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp_jivi0g7_test.go:52: expected '%!s(int=89)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp_jivi0g7_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp_jivi0g7_test.go:52: expected '%!s(int=1597)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp_jivi0g7_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=34)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp_jivi0g7_test.go:52: expected '%!s(int=514229)', got '%!s(int=55)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp_jivi0g7_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=89)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074784
- exit_code: 2
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n <= 1 {\n        return n\n    }\n\n    n -= 2\n\n    for\
    \ i := 2; i <= n; i++ {\n        if isPrime(i) {\n            return i\n     \
    \   }\n    }\n\n    return n\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpeb24yz7k_test.go:27:12: undefined: isPrime

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074784
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            break\n        }\n   \
    \     a, b = b, a+b\n    }\n    return b\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpmzvuas82_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpmzvuas82_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpmzvuas82_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpmzvuas82_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpmzvuas82_test.go:55: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpmzvuas82_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpmzvuas82_test.go:55: expected '%!s(int=1597)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpmzvuas82_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpmzvuas82_test.go:55: expected '%!s(int=514229)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpmzvuas82_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=34)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074784
- exit_code: 2
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    return fib_prime(n)\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n\
    \  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1), expected:\
    \ 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual: candidate(3),\
    \ expected: 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual:\
    \ candidate(5), expected: 89 },\n     { actual: candidate(6), expected: 233 },\n\
    \     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp6w_tlfi2_test.go:20:12: undefined: fib_prime

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074777
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return 0\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    return prime_fib(n - 2) + prime_fib(n - 1)\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpvfe9vvoj_test.go:51: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpvfe9vvoj_test.go:51:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpvfe9vvoj_test.go:51: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpvfe9vvoj_test.go:51:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpvfe9vvoj_test.go:51: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpvfe9vvoj_test.go:51:\
    \ expected '%!s(int=233)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpvfe9vvoj_test.go:51: expected '%!s(int=1597)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpvfe9vvoj_test.go:51:\
    \ expected '%!s(int=28657)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpvfe9vvoj_test.go:51: expected '%!s(int=514229)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpvfe9vvoj_test.go:51:\
    \ expected '%!s(int=433494437)', got '%!s(int=34)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074784
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 0 {\n        n = -n\n    }\n\n    if n < 2 {\n      \
    \  return n\n    }\n    if n < 5 {\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    }\n    if n % 2 == 0 {\n        return prime_fib(n - 3) + prime_fib(n\
    \ - 4)\n    }\n\n    m := prime_fib(n - 5)\n    m += prime_fib(n - 4)\n    return\
    \ m\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpme23li_0_test.go:61: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpme23li_0_test.go:61:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpme23li_0_test.go:61: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpme23li_0_test.go:61:\
    \ expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpme23li_0_test.go:61: expected '%!s(int=89)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpme23li_0_test.go:61:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpme23li_0_test.go:61: expected '%!s(int=1597)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpme23li_0_test.go:61:\
    \ expected '%!s(int=28657)', got '%!s(int=4)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpme23li_0_test.go:61: expected '%!s(int=514229)', got '%!s(int=4)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpme23li_0_test.go:61:\
    \ expected '%!s(int=433494437)', got '%!s(int=6)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074785
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n == 0 || n == 1 {\n        return n\n    }\n    if n % 2\
    \ == 0 {\n        return prime_fib(n - 1) + prime_fib(n - 2)\n    }\n    return\
    \ prime_fib(n - 1)\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual:\
    \ candidate(2), expected: 3 },\n     { actual: candidate(3), expected: 5 },\n\
    \     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5), expected:\
    \ 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7),\
    \ expected: 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual:\
    \ candidate(9), expected: 514229 },\n     { actual: candidate(10), expected: 433494437\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpepb1yimo_test.go:51: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpepb1yimo_test.go:51:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpepb1yimo_test.go:51: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpepb1yimo_test.go:51:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpepb1yimo_test.go:51: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpepb1yimo_test.go:51:\
    \ expected '%!s(int=233)', got '%!s(int=4)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpepb1yimo_test.go:51: expected '%!s(int=1597)', got '%!s(int=4)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpepb1yimo_test.go:51:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpepb1yimo_test.go:51: expected '%!s(int=514229)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpepb1yimo_test.go:51:\
    \ expected '%!s(int=433494437)', got '%!s(int=16)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074785
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    switch {\n    case n < 2:\n        return n\n    case n == 2:\n\
    \        return 1\n    default:\n        y := prime_fib(n - 1)\n        if n ==\
    \ 0 || n == 1 {\n            return y\n        }\n        return y + y\n    }\n\
    }\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmphjxl2j66_test.go:56: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmphjxl2j66_test.go:56:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmphjxl2j66_test.go:56: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmphjxl2j66_test.go:56:\
    \ expected '%!s(int=13)', got '%!s(int=4)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmphjxl2j66_test.go:56: expected '%!s(int=89)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmphjxl2j66_test.go:56:\
    \ expected '%!s(int=233)', got '%!s(int=16)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmphjxl2j66_test.go:56: expected '%!s(int=1597)', got '%!s(int=32)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmphjxl2j66_test.go:56:\
    \ expected '%!s(int=28657)', got '%!s(int=64)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmphjxl2j66_test.go:56: expected '%!s(int=514229)', got '%!s(int=128)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmphjxl2j66_test.go:56:\
    \ expected '%!s(int=433494437)', got '%!s(int=256)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074785
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    a, b := 0, 1\n    for i := 2; i < n; i++ {\n        a, b = b,\
    \ a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr1ijiyyd_test.go:49: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr1ijiyyd_test.go:49:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr1ijiyyd_test.go:49: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr1ijiyyd_test.go:49:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr1ijiyyd_test.go:49: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr1ijiyyd_test.go:49:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr1ijiyyd_test.go:49: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr1ijiyyd_test.go:49:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr1ijiyyd_test.go:49: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr1ijiyyd_test.go:49:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074676
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n <= 1 {\n        return n\n    }\n\n    x := 1\n    y :=\
    \ 1\n    f := 0\n\n    for i := 2; i <= n; i++ {\n        if f == 0 {\n      \
    \      f += x\n            y = x\n            x = y\n        } else {\n      \
    \      f += y\n            y = x\n            x = f\n        }\n    }\n\n    return\
    \ f\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp8sxy_s2y_test.go:65: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp8sxy_s2y_test.go:65:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp8sxy_s2y_test.go:65: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp8sxy_s2y_test.go:65:\
    \ expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp8sxy_s2y_test.go:65: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp8sxy_s2y_test.go:65:\
    \ expected '%!s(int=233)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp8sxy_s2y_test.go:65: expected '%!s(int=1597)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp8sxy_s2y_test.go:65:\
    \ expected '%!s(int=28657)', got '%!s(int=21)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp8sxy_s2y_test.go:65: expected '%!s(int=514229)', got '%!s(int=34)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp8sxy_s2y_test.go:65:\
    \ expected '%!s(int=433494437)', got '%!s(int=55)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074785
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n <= 1 {\n        return n\n    }\n\n    if n % 2 == 0 {\n\
    \        return prime_fib(n - 1) + prime_fib(n - 2)\n    }\n\n    return prime_fib(n\
    \ - 1) + prime_fib(n + 2)\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "runtime: goroutine stack exceeds 1000000000-byte limit\nruntime: sp=0xc0201e0380\
    \ stack=[0xc0201e0000, 0xc0401e0000]\nfatal error: stack overflow\n\nruntime stack:\n\
    runtime.throw({0x520355?, 0x5e3ea0?})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:992\
    \ +0x71\nruntime.newstack()\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/stack.go:1101\
    \ +0x5cc\nruntime.morestack()\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/asm_amd64.s:547\
    \ +0x8b\n\ngoroutine 6 [running]:\ncommand-line-arguments_test.prime_fib(0x3?)\n\
    \t/tmp/tmpv3oxjcy6_test.go:19 +0xa5 fp=0xc0201e0390 sp=0xc0201e0388 pc=0x4ef705\n\
    command-line-arguments_test.prime_fib(0x4)\n\t/tmp/tmpv3oxjcy6_test.go:25 +0x35\
    \ fp=0xc0201e03b0 sp=0xc0201e0390 pc=0x4ef695\ncommand-line-arguments_test.prime_fib(0x5)\n\
    \t/tmp/tmpv3oxjcy6_test.go:28 +0x69 fp=0xc0201e03d0 sp=0xc0201e03b0 pc=0x4ef6c9\n\
    command-line-arguments_test.prime_fib(0x3)\n\t/tmp/tmpv3oxjcy6_test.go:28 +0x7f\
    \ fp=0xc0201e03f0 sp=0xc0201e03d0 pc=0x4ef6df\ncommand-line-arguments_test.prime_fib(0x4)\n\
    \t/tmp/tmpv3oxjcy6_test.go:25 +0x35 fp=0xc0201e0410 sp=0xc0201e03f0 pc=0x4ef695\n\
    command-line-arguments_test.prime_fib(0x5)\n\t/tmp/tmpv3oxjcy6_test.go:28 +0x69\
    \ fp=0xc0201e0430 sp=0xc0201e0410 pc=0x4ef6c9\ncommand-line-arguments_test.prime_fib(0x3)\n\
    \t/tmp/tmpv3oxjcy6_test.go:28 +0x7f fp=0xc0201e0450 sp=0xc0201e0430 pc=0x4ef6df\n\
    command-line-arguments_test.prime_fib(0x4)\n\t/tmp/tmpv3oxjcy6_test.go:25 +0x35\
    \ fp=0xc0201e0470 sp=0xc0201e0450 pc=0x4ef695\ncommand-line-arguments_test.prime_fib(0x5)\n\
    \t/tmp/tmpv3oxjcy6_test.go:28 +0x69 fp=0xc0201e0490 sp=0xc0201e0470 pc=0x4ef6c9\n\
    command-line-arguments_test.prime_fib(0x3)\n\t/tmp/tmpv3oxjcy6_test.go:28 +0x7f\
    \ fp=0xc0201e04b0 sp=0xc0201e0490 pc=0x4ef6df\ncommand-line-arguments_test.prime_fib(0x4)\n\
    \t/tmp/tmpv3oxjcy6_test.go:25 +0x35 fp=0xc0201e04d0 sp=0xc0201e04b0 pc=0x4ef695\n\
    command-line-arguments_test.prime_fib(0x5)\n\t/tmp/tmpv3oxjcy6_test.go:28 +0x69\
    \ fp=0xc0201e04f0 sp=0xc0201e04d0 pc=0x4ef6c9\ncommand-line-arguments_test.prime_fib(0x3)\n\
    \t/tmp/tmpv3oxjcy6_test.go:28 +0x7f fp=0xc0201e0510 sp=0xc0201e04f0 p"
  timestamp: 1660074786
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    a, b := 1, 1\n\n\
    \    for i := 2; i <= n; i++ {\n        a, b = b, a+b\n    }\n\n    return a\n\
    }\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp92qrdyqa_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp92qrdyqa_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp92qrdyqa_test.go:55: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp92qrdyqa_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp92qrdyqa_test.go:55: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp92qrdyqa_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp92qrdyqa_test.go:55: expected '%!s(int=1597)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp92qrdyqa_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=21)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp92qrdyqa_test.go:55: expected '%!s(int=514229)', got '%!s(int=34)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp92qrdyqa_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=55)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.002s\nFAIL\n"
  timestamp: 1660074785
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    if n == 1 {\n   \
    \     return 1\n    }\n\n    i := 2\n    f := 2\n\n    for i < n {\n        f\
    \ := f + i\n        if f > n {\n            break\n        }\n        i++\n  \
    \  }\n\n    if f == n {\n        return f\n    } else {\n        return -1\n \
    \   }\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpwcw8nmab_test.go:68: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpwcw8nmab_test.go:68:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpwcw8nmab_test.go:68: expected '%!s(int=5)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpwcw8nmab_test.go:68:\
    \ expected '%!s(int=13)', got '%!s(int=-1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpwcw8nmab_test.go:68: expected '%!s(int=89)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpwcw8nmab_test.go:68:\
    \ expected '%!s(int=233)', got '%!s(int=-1)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpwcw8nmab_test.go:68: expected '%!s(int=1597)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpwcw8nmab_test.go:68:\
    \ expected '%!s(int=28657)', got '%!s(int=-1)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpwcw8nmab_test.go:68: expected '%!s(int=514229)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpwcw8nmab_test.go:68:\
    \ expected '%!s(int=433494437)', got '%!s(int=-1)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074785
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n <= 2 || n%2 == 0 {\n        return n\n    }\n    return\
    \ prime_fib(n - 2) + prime_fib(n - 1)\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n\
    \  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1), expected:\
    \ 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual: candidate(3),\
    \ expected: 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual:\
    \ candidate(5), expected: 89 },\n     { actual: candidate(6), expected: 233 },\n\
    \     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp4if19dsi_test.go:48: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp4if19dsi_test.go:48:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp4if19dsi_test.go:48: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp4if19dsi_test.go:48:\
    \ expected '%!s(int=13)', got '%!s(int=4)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp4if19dsi_test.go:48: expected '%!s(int=89)', got '%!s(int=7)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp4if19dsi_test.go:48:\
    \ expected '%!s(int=233)', got '%!s(int=6)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp4if19dsi_test.go:48: expected '%!s(int=1597)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp4if19dsi_test.go:48:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp4if19dsi_test.go:48: expected '%!s(int=514229)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp4if19dsi_test.go:48:\
    \ expected '%!s(int=433494437)', got '%!s(int=10)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074785
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    switch n {\n    case 0:\n        return 0\n    case 1:\n   \
    \     return 1\n    case 2:\n        return 2\n    }\n    k := 3\n    var a, b\
    \ int\n    for i := 3; i <= n; i++ {\n        for j:= 1; j < i; j++ {\n      \
    \      k = k + j\n            a, b = b, a\n            if k > n {\n          \
    \      break\n            }\n        }\n    }\n    return k\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpmve2n1eu_test.go:64: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpmve2n1eu_test.go:64:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpmve2n1eu_test.go:64: expected '%!s(int=5)', got '%!s(int=4)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpmve2n1eu_test.go:64:\
    \ expected '%!s(int=13)', got '%!s(int=7)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpmve2n1eu_test.go:64: expected '%!s(int=89)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpmve2n1eu_test.go:64:\
    \ expected '%!s(int=233)', got '%!s(int=9)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpmve2n1eu_test.go:64: expected '%!s(int=1597)', got '%!s(int=12)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpmve2n1eu_test.go:64:\
    \ expected '%!s(int=28657)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpmve2n1eu_test.go:64: expected '%!s(int=514229)', got '%!s(int=17)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpmve2n1eu_test.go:64:\
    \ expected '%!s(int=433494437)', got '%!s(int=18)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074785
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 2\n    }\n    if n == 3 {\n        return 5\n    }\n    if n%2 == 0\
    \ {\n        return prime_fib(n - 1) + prime_fib(n - 2)\n    }\n    for i := 3;\
    \ i <= int(n/2); i++ {\n        if n%i == 0 {\n            return i\n        }\n\
    \    }\n    return n\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate :=\
    \ prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpu8t8kcra_test.go:62: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpu8t8kcra_test.go:62:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__3\
    \ (0.00s)\n        tmpu8t8kcra_test.go:62: expected '%!s(int=13)', got '%!s(int=7)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__4 (0.00s)\n        tmpu8t8kcra_test.go:62:\
    \ expected '%!s(int=89)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmpu8t8kcra_test.go:62: expected '%!s(int=233)', got '%!s(int=12)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmpu8t8kcra_test.go:62:\
    \ expected '%!s(int=1597)', got '%!s(int=7)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmpu8t8kcra_test.go:62: expected '%!s(int=28657)', got '%!s(int=19)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmpu8t8kcra_test.go:62:\
    \ expected '%!s(int=514229)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmpu8t8kcra_test.go:62: expected '%!s(int=433494437)', got\
    \ '%!s(int=22)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074785
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n == 0 || n == 1 {\n        return n\n    }\n\n    next1\
    \ := prime_fib(n-1)\n    next2 := prime_fib(n-2)\n\n    if next1 > next2 {\n \
    \       return next1\n    } else {\n        return next2\n    }\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpkjs7n_d5_test.go:56: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpkjs7n_d5_test.go:56:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpkjs7n_d5_test.go:56: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpkjs7n_d5_test.go:56:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpkjs7n_d5_test.go:56: expected '%!s(int=89)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpkjs7n_d5_test.go:56:\
    \ expected '%!s(int=233)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpkjs7n_d5_test.go:56: expected '%!s(int=1597)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpkjs7n_d5_test.go:56:\
    \ expected '%!s(int=28657)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpkjs7n_d5_test.go:56: expected '%!s(int=514229)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpkjs7n_d5_test.go:56:\
    \ expected '%!s(int=433494437)', got '%!s(int=1)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074785
- exit_code: 2
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    // base case: n is 0 or 1.\n    if n <= 1 { \n        return\
    \ n\n    }\n\n    // find first prime number that has less than sqrt(n) factors.\n\
    \    for i := 2; i < int(n); i++ {\n        if n%i == 0 {\n            break\n\
    \        }\n    }\n\n    // if n is greater than or equal to sqrt(n), it must\
    \ be prime.\n    if n == i {\n        return i\n    }\n\n    return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpwy4rmzkp_test.go:33:13: undefined: i

    /tmp/tmpwy4rmzkp_test.go:34:16: undefined: i

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074785
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n    \
    \    return 3\n    }\n    if n % 2 == 0 {\n        return prime_fib(3*n+2)\n \
    \   }\n    if n % 3 == 0 {\n        return prime_fib(5*n+2)\n    }\n    return\
    \ prime_fib(3*n+3)\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual:\
    \ candidate(2), expected: 3 },\n     { actual: candidate(3), expected: 5 },\n\
    \     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5), expected:\
    \ 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7),\
    \ expected: 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual:\
    \ candidate(9), expected: 514229 },\n     { actual: candidate(10), expected: 433494437\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "runtime: goroutine stack exceeds 1000000000-byte limit\nruntime: sp=0xc0201e0398\
    \ stack=[0xc0201e0000, 0xc0401e0000]\nfatal error: stack overflow\n\nruntime stack:\n\
    runtime.throw({0x520355?, 0x5e3ea0?})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:992\
    \ +0x71\nruntime.newstack()\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/stack.go:1101\
    \ +0x5cc\nruntime.morestack()\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/asm_amd64.s:547\
    \ +0x8b\n\ngoroutine 6 [running]:\ncommand-line-arguments_test.prime_fib(0xcf46d5ea0a750e4?)\n\
    \t/tmp/tmppljb4uh8_test.go:19 +0xd7 fp=0xc0201e03a8 sp=0xc0201e03a0 pc=0x4ef737\n\
    command-line-arguments_test.prime_fib(0x0?)\n\t/tmp/tmppljb4uh8_test.go:27 +0xa5\
    \ fp=0xc0201e03c0 sp=0xc0201e03a8 pc=0x4ef705\ncommand-line-arguments_test.prime_fib(0x0?)\n\
    \t/tmp/tmppljb4uh8_test.go:27 +0xa5 fp=0xc0201e03d8 sp=0xc0201e03c0 pc=0x4ef705\n\
    command-line-arguments_test.prime_fib(0x0?)\n\t/tmp/tmppljb4uh8_test.go:27 +0xa5\
    \ fp=0xc0201e03f0 sp=0xc0201e03d8 pc=0x4ef705\ncommand-line-arguments_test.prime_fib(0x0?)\n\
    \t/tmp/tmppljb4uh8_test.go:27 +0xa5 fp=0xc0201e0408 sp=0xc0201e03f0 pc=0x4ef705\n\
    command-line-arguments_test.prime_fib(0x0?)\n\t/tmp/tmppljb4uh8_test.go:27 +0xa5\
    \ fp=0xc0201e0420 sp=0xc0201e0408 pc=0x4ef705\ncommand-line-arguments_test.prime_fib(0x0?)\n\
    \t/tmp/tmppljb4uh8_test.go:27 +0xa5 fp=0xc0201e0438 sp=0xc0201e0420 pc=0x4ef705\n\
    command-line-arguments_test.prime_fib(0x0?)\n\t/tmp/tmppljb4uh8_test.go:27 +0xa5\
    \ fp=0xc0201e0450 sp=0xc0201e0438 pc=0x4ef705\ncommand-line-arguments_test.prime_fib(0x0?)\n\
    \t/tmp/tmppljb4uh8_test.go:27 +0xa5 fp=0xc0201e0468 sp=0xc0201e0450 pc=0x4ef705\n\
    command-line-arguments_test.prime_fib(0x0?)\n\t/tmp/tmppljb4uh8_test.go:27 +0xa5\
    \ fp=0xc0201e0480 sp=0xc0201e0468 pc=0x4ef705\ncommand-line-arguments_test.prime_fib(0x0?)\n\
    \t/tmp/tmppljb4uh8_test.go:27 +0xa5 fp=0xc0201e0498 sp=0xc0201e0480 pc=0x4ef705\n\
    command-line-arguments_test.prime_fib(0x0?)\n\t/tmp/tmppljb4uh8_test.go:27 +0xa5\
    \ fp=0xc0201e04b0 sp=0xc0201e0498 pc=0x4ef705\ncommand-line-arguments_test.prime_fib(0x0?)\n\
    \t/tmp/tmppljb4uh8_test.go:27 +0xa5 fp=0xc0"
  timestamp: 1660074787
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n <= 1 {\n        return n\n    }\n\n    if n % 2 == 0 {\n\
    \        return prime_fib(n - 1) + prime_fib(n - 2)\n    }\n\n    if n == 2 {\n\
    \        return 3\n    }\n\n    if n == 3 {\n        return 5\n    }\n\n    if\
    \ n % 3 == 0 {\n        return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n\
    \ - 3)\n    }\n\n    if n % 5 == 0 {\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2) + prime_fib(n - 3) + prime_fib(n - 5)\n    }\n\n    return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpv0580w7u_test.go:69: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpv0580w7u_test.go:69:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__3\
    \ (0.00s)\n        tmpv0580w7u_test.go:69: expected '%!s(int=13)', got '%!s(int=6)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__4 (0.00s)\n        tmpv0580w7u_test.go:69:\
    \ expected '%!s(int=89)', got '%!s(int=12)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmpv0580w7u_test.go:69: expected '%!s(int=233)', got '%!s(int=18)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmpv0580w7u_test.go:69:\
    \ expected '%!s(int=1597)', got '%!s(int=30)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmpv0580w7u_test.go:69: expected '%!s(int=28657)', got '%!s(int=48)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmpv0580w7u_test.go:69:\
    \ expected '%!s(int=514229)', got '%!s(int=96)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmpv0580w7u_test.go:69: expected '%!s(int=433494437)', got\
    \ '%!s(int=144)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074786
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    t := 0\n    n += t\n    t += t\n    if n%2 == 0 {\n        return\
    \ n\n    }\n    return (n-1) + prime_fib(n-1)\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmprkb_z_4u_test.go:51: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmprkb_z_4u_test.go:51:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmprkb_z_4u_test.go:51: expected '%!s(int=5)', got '%!s(int=4)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmprkb_z_4u_test.go:51:\
    \ expected '%!s(int=13)', got '%!s(int=4)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmprkb_z_4u_test.go:51: expected '%!s(int=89)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmprkb_z_4u_test.go:51:\
    \ expected '%!s(int=233)', got '%!s(int=6)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmprkb_z_4u_test.go:51: expected '%!s(int=1597)', got '%!s(int=12)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmprkb_z_4u_test.go:51:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmprkb_z_4u_test.go:51: expected '%!s(int=514229)', got '%!s(int=16)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmprkb_z_4u_test.go:51:\
    \ expected '%!s(int=433494437)', got '%!s(int=10)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.015s\nFAIL\n"
  timestamp: 1660074786
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n == 1 || n == 2 {\n        return 1\n    }\n    if n ==\
    \ 0 {\n        return 0\n    }\n    for i := 2; i <= n/2; i++ {\n        if n%i\
    \ == 0 {\n            return 0\n        }\n    }\n    return n\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp05pus_kn_test.go:56: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp05pus_kn_test.go:56:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp05pus_kn_test.go:56: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp05pus_kn_test.go:56:\
    \ expected '%!s(int=13)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp05pus_kn_test.go:56: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp05pus_kn_test.go:56:\
    \ expected '%!s(int=233)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp05pus_kn_test.go:56: expected '%!s(int=1597)', got '%!s(int=7)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp05pus_kn_test.go:56:\
    \ expected '%!s(int=28657)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp05pus_kn_test.go:56: expected '%!s(int=514229)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp05pus_kn_test.go:56:\
    \ expected '%!s(int=433494437)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.015s\nFAIL\n"
  timestamp: 1660074786
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n == 0 || n == 1 {\n        return n\n    }\n    return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpmpgv26vh_test.go:48: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpmpgv26vh_test.go:48:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpmpgv26vh_test.go:48: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpmpgv26vh_test.go:48:\
    \ expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpmpgv26vh_test.go:48: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpmpgv26vh_test.go:48:\
    \ expected '%!s(int=233)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpmpgv26vh_test.go:48: expected '%!s(int=1597)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpmpgv26vh_test.go:48:\
    \ expected '%!s(int=28657)', got '%!s(int=21)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpmpgv26vh_test.go:48: expected '%!s(int=514229)', got '%!s(int=34)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpmpgv26vh_test.go:48:\
    \ expected '%!s(int=433494437)', got '%!s(int=55)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.006s\nFAIL\n"
  timestamp: 1660074786
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    var a, b int\n    if n <= 2 {\n        return n\n    }\n   \
    \ a = prime_fib(n - 1)\n    b = prime_fib(n - 2)\n    return a+b\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpqc6flxk2_test.go:51: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpqc6flxk2_test.go:51:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpqc6flxk2_test.go:51: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpqc6flxk2_test.go:51:\
    \ expected '%!s(int=13)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpqc6flxk2_test.go:51: expected '%!s(int=89)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpqc6flxk2_test.go:51:\
    \ expected '%!s(int=233)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpqc6flxk2_test.go:51: expected '%!s(int=1597)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpqc6flxk2_test.go:51:\
    \ expected '%!s(int=28657)', got '%!s(int=34)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpqc6flxk2_test.go:51: expected '%!s(int=514229)', got '%!s(int=55)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpqc6flxk2_test.go:51:\
    \ expected '%!s(int=433494437)', got '%!s(int=89)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074786
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n <= 0 {\n        return 0\n    }\n    fibs := [2]int{1,\
    \ 1}\n    fibIndex := 1\n    for i := 2; i < n; i++ {\n        if fibs[fibIndex-1]\
    \ == i {\n            fibIndex++\n            continue\n        }\n        fibs[fibIndex]\
    \ = fibs[fibIndex-1] + fibs[fibIndex-2]\n    }\n    return fibs[fibIndex-1]\n\
    }\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\npanic: runtime error: index out of range\
    \ [-1] [recovered]\n\tpanic: runtime error: index out of range [-1]\n\ngoroutine\
    \ 6 [running]:\ntesting.tRunner.func1.2({0x513620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.prime_fib(...)\n\t/tmp/tmpkgvpnw3q_test.go:30\n\
    command-line-arguments_test.TestPrime_Fib(0x0?)\n\t/tmp/tmpkgvpnw3q_test.go:43\
    \ +0xb05\ntesting.tRunner(0xc0001a0340, 0x528f40)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074786
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n <= 1 {\n        return n\n    }\n    fibs := make([]int,\
    \ 2)\n    fibs[0] = 1\n    fibs[1] = 1\n    for i := 2; i <= n; i++ {\n      \
    \  fibs[i] = fibs[i-2] + fibs[i-1]\n    }\n    return fibs[n-1]\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\npanic: runtime error: index out of range\
    \ [2] with length 2 [recovered]\n\tpanic: runtime error: index out of range [2]\
    \ with length 2\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.prime_fib(...)\n\t/tmp/tmpj_og6p8y_test.go:27\n\
    command-line-arguments_test.TestPrime_Fib(0x0?)\n\t/tmp/tmpj_og6p8y_test.go:40\
    \ +0x1b\ntesting.tRunner(0xc0001a01a0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074786
- exit_code: 2
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n<2 {\n        return 0\n    }\n\n    i := 2\n    if n%2\
    \ == 0 {\n        i, n = n, i\n    }\n    for i; i < n; i++ {\n        if n%i\
    \ == 0 {\n            break\n        }\n    }\n    if i == n {\n        return\
    \ i\n    }\n    return i-1\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp90jzwh21_test.go:28:9: i (variable of type int) is not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074786
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n <= 2 {\n        return n\n    }\n    if n % 2 == 0 {\n\
    \        return prime_fib(n - 1) + prime_fib(n - 2)\n    }\n    if n % 3 == 0\
    \ {\n        return prime_fib(n - 3) + prime_fib(n - 2) + prime_fib(n - 1)\n \
    \   }\n    return prime_fib(n - 1) + prime_fib(n - 2)\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpwuhfnb_9_test.go:54: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpwuhfnb_9_test.go:54:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpwuhfnb_9_test.go:54: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpwuhfnb_9_test.go:54:\
    \ expected '%!s(int=13)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpwuhfnb_9_test.go:54: expected '%!s(int=89)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpwuhfnb_9_test.go:54:\
    \ expected '%!s(int=233)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpwuhfnb_9_test.go:54: expected '%!s(int=1597)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpwuhfnb_9_test.go:54:\
    \ expected '%!s(int=28657)', got '%!s(int=34)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpwuhfnb_9_test.go:54: expected '%!s(int=514229)', got '%!s(int=68)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpwuhfnb_9_test.go:54:\
    \ expected '%!s(int=433494437)', got '%!s(int=102)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074786
- exit_code: 2
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    n := n + 1\n    // return value at nth position\n    if n <\
    \ 2 {\n        return n\n    }\n    switch n {\n    case 2:\n        return 3\n\
    \    case 3:\n        return 5\n    default:\n        i := 2\n        j := 2\n\
    \        for i < j {\n            if prime_fib_helper(i, j, n) {\n           \
    \     return i\n            }\n            i++\n            j++\n        }\n \
    \   }\n    return 0\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual:\
    \ candidate(2), expected: 3 },\n     { actual: candidate(3), expected: 5 },\n\
    \     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5), expected:\
    \ 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7),\
    \ expected: 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual:\
    \ candidate(9), expected: 514229 },\n     { actual: candidate(10), expected: 433494437\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpet_eyinj_test.go:20:7: no new variables on left side of :=

    /tmp/tmpet_eyinj_test.go:34:16: undefined: prime_fib_helper

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074786

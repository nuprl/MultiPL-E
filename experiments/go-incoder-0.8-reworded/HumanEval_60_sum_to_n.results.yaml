language: go_test.go
name: HumanEval_60_sum_to_n
results:
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    s := 0\n    for\
    \ i := 1; i <= n; i++ {\n        s += i\n    }\n    return s\n}\n\nfunc TestSum_To_N(t\
    \ *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 1 },\n     { actual: candidate(6), expected: 21 },\n     { actual:\
    \ candidate(11), expected: 66 },\n     { actual: candidate(30), expected: 465\
    \ },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660073230
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    sum := 1\n  \
    \  for {\n        sum += sum\n        if sum > n {\n            break\n      \
    \  }\n    }\n    return sum\n}\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate\
    \ := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 1 },\n     {\
    \ actual: candidate(6), expected: 21 },\n     { actual: candidate(11), expected:\
    \ 66 },\n     { actual: candidate(30), expected: 465 },\n     { actual: candidate(100),\
    \ expected: 5050 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmpo5t4e09a_test.go:47: expected '%!s(int=1)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmpo5t4e09a_test.go:47:\
    \ expected '%!s(int=21)', got '%!s(int=8)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmpo5t4e09a_test.go:47: expected '%!s(int=66)', got '%!s(int=16)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmpo5t4e09a_test.go:47:\
    \ expected '%!s(int=465)', got '%!s(int=32)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmpo5t4e09a_test.go:47: expected '%!s(int=5050)', got '%!s(int=128)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073353
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n < 1 {\n\
    \        fmt.Println(\"n must be positive\")\n        return 1\n    }\n    result\
    \ := 1\n    for i := 2; i <= n; i++ {\n        result *= i\n    }\n    return\
    \ result\n}\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 1 },\n     { actual:\
    \ candidate(6), expected: 21 },\n     { actual: candidate(11), expected: 66 },\n\
    \     { actual: candidate(30), expected: 465 },\n     { actual: candidate(100),\
    \ expected: 5050 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__1\
    \ (0.00s)\n        tmp0hj0xup0_test.go:48: expected '%!s(int=21)', got '%!s(int=720)'\n\
    \    --- FAIL: TestSum_To_N/test_num__2 (0.00s)\n        tmp0hj0xup0_test.go:48:\
    \ expected '%!s(int=66)', got '%!s(int=39916800)'\n    --- FAIL: TestSum_To_N/test_num__3\
    \ (0.00s)\n        tmp0hj0xup0_test.go:48: expected '%!s(int=465)', got '%!s(int=-8764578968847253504)'\n\
    \    --- FAIL: TestSum_To_N/test_num__4 (0.00s)\n        tmp0hj0xup0_test.go:48:\
    \ expected '%!s(int=5050)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073353
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    var total int\
    \ = 1\n    for i := 1; i <= n; i++ {\n        total += i\n    }\n    return total\n\
    }\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmp9itou7p5_test.go:44: expected '%!s(int=1)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmp9itou7p5_test.go:44:\
    \ expected '%!s(int=21)', got '%!s(int=22)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmp9itou7p5_test.go:44: expected '%!s(int=66)', got '%!s(int=67)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmp9itou7p5_test.go:44:\
    \ expected '%!s(int=465)', got '%!s(int=466)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmp9itou7p5_test.go:44: expected '%!s(int=5050)', got '%!s(int=5051)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073353
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    x := 1\n    for\
    \ n > 0 {\n        x = x + n\n        n = n - 1\n    }\n    return x\n}\n\nfunc\
    \ TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmp9_t7kmhg_test.go:45: expected '%!s(int=1)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmp9_t7kmhg_test.go:45:\
    \ expected '%!s(int=21)', got '%!s(int=22)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmp9_t7kmhg_test.go:45: expected '%!s(int=66)', got '%!s(int=67)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmp9_t7kmhg_test.go:45:\
    \ expected '%!s(int=465)', got '%!s(int=466)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmp9_t7kmhg_test.go:45: expected '%!s(int=5050)', got '%!s(int=5051)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073353
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n < 1 {\n\
    \        return -1\n    }\n\n    sum := 1\n    for i := 1; i <= n; i++ {\n   \
    \     sum += i\n    }\n\n    return sum\n}\n\nfunc TestSum_To_N(t *testing.T)\
    \ {\n  candidate := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 1 },\n     { actual: candidate(6), expected: 21 },\n     { actual:\
    \ candidate(11), expected: 66 },\n     { actual: candidate(30), expected: 465\
    \ },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmpweix1_vj_test.go:49: expected '%!s(int=1)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmpweix1_vj_test.go:49:\
    \ expected '%!s(int=21)', got '%!s(int=22)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmpweix1_vj_test.go:49: expected '%!s(int=66)', got '%!s(int=67)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmpweix1_vj_test.go:49:\
    \ expected '%!s(int=465)', got '%!s(int=466)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmpweix1_vj_test.go:49: expected '%!s(int=5050)', got '%!s(int=5051)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073353
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    var sum int =\
    \ 1\n    for i := 1; i <= n; i++ {\n        sum *= i\n    }\n    return sum\n\
    }\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__1\
    \ (0.00s)\n        tmp9mi6gva5_test.go:44: expected '%!s(int=21)', got '%!s(int=720)'\n\
    \    --- FAIL: TestSum_To_N/test_num__2 (0.00s)\n        tmp9mi6gva5_test.go:44:\
    \ expected '%!s(int=66)', got '%!s(int=39916800)'\n    --- FAIL: TestSum_To_N/test_num__3\
    \ (0.00s)\n        tmp9mi6gva5_test.go:44: expected '%!s(int=465)', got '%!s(int=-8764578968847253504)'\n\
    \    --- FAIL: TestSum_To_N/test_num__4 (0.00s)\n        tmp9mi6gva5_test.go:44:\
    \ expected '%!s(int=5050)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073353
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n < 1 {\n\
    \        fmt.Println(\"n should be greater than 0\")\n        return -1\n    }\n\
    \    if n == 1 {\n        return 1\n    }\n    return n + sum_to_n(n - 1)\n}\n\
    \nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660073353
- exit_code: 2
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n < 1 {\n\
    \        return n\n    }\n\n    n -= 2\n\n    for i := 0; i < n; i++ {\n     \
    \   n := n*(n+1)/2\n    }\n\n    return n\n}\n\nfunc TestSum_To_N(t *testing.T)\
    \ {\n  candidate := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 1 },\n     { actual: candidate(6), expected: 21 },\n     { actual:\
    \ candidate(11), expected: 66 },\n     { actual: candidate(30), expected: 465\
    \ },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpnfc5h9i7_test.go:27:9: n declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073353
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n == 1 {\n\
    \        return 1\n    }\n\n    sumToN := 0\n    sum := 1\n    for i := 2; i <=\
    \ n; i++ {\n        sum += i\n        sumToN += sum\n    }\n\n    return sumToN\n\
    }\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__1\
    \ (0.00s)\n        tmpqviq49re_test.go:51: expected '%!s(int=21)', got '%!s(int=55)'\n\
    \    --- FAIL: TestSum_To_N/test_num__2 (0.00s)\n        tmpqviq49re_test.go:51:\
    \ expected '%!s(int=66)', got '%!s(int=285)'\n    --- FAIL: TestSum_To_N/test_num__3\
    \ (0.00s)\n        tmpqviq49re_test.go:51: expected '%!s(int=465)', got '%!s(int=4959)'\n\
    \    --- FAIL: TestSum_To_N/test_num__4 (0.00s)\n        tmpqviq49re_test.go:51:\
    \ expected '%!s(int=5050)', got '%!s(int=171699)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073353
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n <= 1 {\n\
    \        return 1\n    }\n    return n + sum_to_n(n - 1)\n}\n\nfunc TestSum_To_N(t\
    \ *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 1 },\n     { actual: candidate(6), expected: 21 },\n     { actual:\
    \ candidate(11), expected: 66 },\n     { actual: candidate(30), expected: 465\
    \ },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660073353
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n%2 == 0 {\n\
    \        return n * (n+1)/2\n    }\n    return (n*(n+1))/2\n}\n\nfunc TestSum_To_N(t\
    \ *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 1 },\n     { actual: candidate(6), expected: 21 },\n     { actual:\
    \ candidate(11), expected: 66 },\n     { actual: candidate(30), expected: 465\
    \ },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.005s\n"
  timestamp: 1660073353
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    var result int\
    \ = 1\n\n    for i := 0; i < n; i++ {\n        result = result + i\n    }\n\n\
    \    return result\n}\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 1 },\n     { actual:\
    \ candidate(6), expected: 21 },\n     { actual: candidate(11), expected: 66 },\n\
    \     { actual: candidate(30), expected: 465 },\n     { actual: candidate(100),\
    \ expected: 5050 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__1\
    \ (0.00s)\n        tmpw9aat262_test.go:46: expected '%!s(int=21)', got '%!s(int=16)'\n\
    \    --- FAIL: TestSum_To_N/test_num__2 (0.00s)\n        tmpw9aat262_test.go:46:\
    \ expected '%!s(int=66)', got '%!s(int=56)'\n    --- FAIL: TestSum_To_N/test_num__3\
    \ (0.00s)\n        tmpw9aat262_test.go:46: expected '%!s(int=465)', got '%!s(int=436)'\n\
    \    --- FAIL: TestSum_To_N/test_num__4 (0.00s)\n        tmpw9aat262_test.go:46:\
    \ expected '%!s(int=5050)', got '%!s(int=4951)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073353
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    sum := 1\n  \
    \  for i := 1; i <= n; i++ {\n        sum++\n    }\n    return sum\n}\n\nfunc\
    \ TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmp6_kyry1r_test.go:44: expected '%!s(int=1)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmp6_kyry1r_test.go:44:\
    \ expected '%!s(int=21)', got '%!s(int=7)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmp6_kyry1r_test.go:44: expected '%!s(int=66)', got '%!s(int=12)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmp6_kyry1r_test.go:44:\
    \ expected '%!s(int=465)', got '%!s(int=31)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmp6_kyry1r_test.go:44: expected '%!s(int=5050)', got '%!s(int=101)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073353
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n < 1 {\n\
    \        return 0\n    }\n    return n * sum_to_n(n - 1)\n}\n\nfunc TestSum_To_N(t\
    \ *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 1 },\n     { actual: candidate(6), expected: 21 },\n     { actual:\
    \ candidate(11), expected: 66 },\n     { actual: candidate(30), expected: 465\
    \ },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmpo33iwbdg_test.go:43: expected '%!s(int=1)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmpo33iwbdg_test.go:43:\
    \ expected '%!s(int=21)', got '%!s(int=0)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmpo33iwbdg_test.go:43: expected '%!s(int=66)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmpo33iwbdg_test.go:43:\
    \ expected '%!s(int=465)', got '%!s(int=0)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmpo33iwbdg_test.go:43: expected '%!s(int=5050)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073353
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    total := 1\n\
    \    for i := 0; i < n; i++ {\n        total += i\n    }\n    return total\n}\n\
    \nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__1\
    \ (0.00s)\n        tmp93ve081y_test.go:44: expected '%!s(int=21)', got '%!s(int=16)'\n\
    \    --- FAIL: TestSum_To_N/test_num__2 (0.00s)\n        tmp93ve081y_test.go:44:\
    \ expected '%!s(int=66)', got '%!s(int=56)'\n    --- FAIL: TestSum_To_N/test_num__3\
    \ (0.00s)\n        tmp93ve081y_test.go:44: expected '%!s(int=465)', got '%!s(int=436)'\n\
    \    --- FAIL: TestSum_To_N/test_num__4 (0.00s)\n        tmp93ve081y_test.go:44:\
    \ expected '%!s(int=5050)', got '%!s(int=4951)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073353
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    total := 0\n\
    \    for i := 1; i <= n; i++ {\n        total += i\n    }\n    return total\n\
    }\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660073232
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    return ((n*(n\
    \ + 1))/2)\n}\n</code>\n<|/ a |>\n<| c |>\nThis was very helpful. Thanks for sharing\
    \ your ideas and testing them. Really appreciate it!\n<|/ c |>\n<| a |>\n<code>\n\
    public static int SumUpTo(int n)\n{\n    if (n < 0)\n    {\n        throw new\
    \ ArgumentOutOfRangeException(\"n\");\n    }\n    if (n <= 0)\n    {\n       \
    \ throw new ArgumentOutOfRangeException(\"n\");\n    }\n\n    return (n * (n +\
    \ 1)) / 2;\n}\n</code>\n<|/ a dscore=2 tags=c#,.net |>\n<| c |>\nPlease explain\
    \ your answer.\n<|/ c |>\n<| a tags=c#,.net |>\n<code>\npublic static int SumUpTo(int\
    \ n)\n    {\n        if (n < 0)\n            throw new ArgumentOutOfRangeException(\"\
    n\");\n        int count = 1;\n        while (count < n)\n        {\n        \
    \    count *= 2;\n        }\n        return count;\n    }\n</code>\n<|/ a dscore=2\
    \ |>\n<| a tags=c#,.net |>\n<code>\nprivate static int Sum(int n)\n{\n    if (n\
    \ <= 0)\n        throw new ArgumentOutOfRangeException(\"n\");\n\n    return n\
    \ + n / 2 + n / 2 * n / 2 - n + 2 * Sum(n - 1);\n}\n</code>\n<|/ a dscore=1 |>\n\
    <| a dscore=1 |>\n<code>\npublic static int SumUpTo(int n)\n{\n    if (n < 0)\n\
    \        throw new ArgumentOutOfRangeException(\"n\");\n    if (n == 0)\n    \
    \    return 0;\n\n    int res = 1;\n    for (int i = 1; i <= n; i++)\n       \
    \ res = res * i;\n    return res;\n}\n</code>\n<|/ a tags=c#,.net |>\n<| a dscore=1\
    \ |>\n<code>\nstatic class SumToN\n{\n    private static readonly Func<int, int>\
    \ calc;\n\n    static SumToN()\n    {\n        var calc = new Func<int, int>((n)\
    \ => n < 0 ? throw new ArgumentOutOfRangeException() : (n * (n + 1)) / 2);\n \
    \       calc.Dump();\n    }\n\n    public static int SumToN(int n)\n    {\n  \
    \      return calc(n);\n    }\n}\n</code>\n<|/ a tags=c#,.net |>\n<| a dscore=1\
    \ tags=c#,.net |>\n<code>\npublic static int SumToN(int n)\n    {\n        int\
    \ count = 0;\n        while(count < n)\n        {\n            count *= 2;\n \
    \       }\n        return count;\n    }\n</code>\n<|/\nfunc TestSum_To_N(t *testing.T)\
    \ {\n  candidate := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 1 },\n     { actual: candidate(6), expected: 21 },\n     { actual:\
    \ candidate(11), expected: 66 },\n     { actual: candidate(30), expected: 465\
    \ },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpho4cnkz9_test.go:22:1: expected declaration, found ''<''

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660073352
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    result := 1\n\
    \    for ; n > 0; n-- {\n        result = result + n\n    }\n    return result\n\
    }\n</code>\n<|/ a |>\n<| c |>\nThe time complexity of the function is `n`, while\
    \ the question is asking about `O(n)`.\n<|/ c |>\n<| c |>\nI think the complexity\
    \ of the `for` loop is O(n) not O(n^2)\n<|/ c |>\n<| c |>\nThis algorithm is *not*\
    \ `O(n)`, since the complexity of looping is `O(n)`, since `n - 1` iterations\
    \ of the loop happen on each iteration, and `n + 1 - 0` iterations of the loop\
    \ happen on each iteration. On a 64 bit system, this loop would take about 2.5\
    \ clock cycles *on average*.\n<|/ c |>\n<| c |>\nthe complexity of for loop is\
    \ O(n), it means each loop will take constant number of times, so it will be O(n)\
    \ no matter what is the value of n\n<|/ c |>\n<| a dscore=5 tags=algorithm,asymptotic-complexity,big-o\
    \ |>\nThe answer is simple if you think about it mathematically.\nThe total running\
    \ time of the algorithm is equal to the length of the input multiplied by a constant\
    \ factor.\nThus the input size of n \u2264 10n \u2264 10n\u207F \u2264 10n\u207F\
    \u207E \u2264 10n\u207F\u207E\u207E\u207E\u207E\u207E\u207E\u207E\u207E\u207E\u207E\
    \u207E\u207E\u207E\u207E\u207E\u207E\u207E\u207E\u207E\u207E\u207E\u207E\u207E\
    \u207E\u207E\u207E\u207E\u207E\u207E\u207E\u207E\u207E\u207E\u207E\u207E\u207E\
    \u207E\u207E\u207E\u207E\u207E\u207E\u207E\u207E\u207E\u207E\u207E\u207E\u207E\
    \u207E\u207E\u207E\u207E\u207E\u207E\u207E\u207E\u207E\u207E\u207E\u207E\u207E\
    \u207E\u207E\u207E\u207E\u207E\u207E\u207E\u207E\u207E\uFFFD\nfunc TestSum_To_N(t\
    \ *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 1 },\n     { actual: candidate(6), expected: 21 },\n     { actual:\
    \ candidate(11), expected: 66 },\n     { actual: candidate(30), expected: 465\
    \ },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmplfum_7pr_test.go:26:1: expected declaration, found ''<''

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660073352
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    // initialize\
    \ sum and counter\n    sum := 1\n    counter := 1\n    for ; counter <= n; counter++\
    \ {\n        sum += counter\n    }\n    return sum\n}\n\nfunc TestSum_To_N(t *testing.T)\
    \ {\n  candidate := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 1 },\n     { actual: candidate(6), expected: 21 },\n     { actual:\
    \ candidate(11), expected: 66 },\n     { actual: candidate(30), expected: 465\
    \ },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmpuj97ahes_test.go:46: expected '%!s(int=1)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmpuj97ahes_test.go:46:\
    \ expected '%!s(int=21)', got '%!s(int=22)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmpuj97ahes_test.go:46: expected '%!s(int=66)', got '%!s(int=67)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmpuj97ahes_test.go:46:\
    \ expected '%!s(int=465)', got '%!s(int=466)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmpuj97ahes_test.go:46: expected '%!s(int=5050)', got '%!s(int=5051)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073353
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    sum := 0\n  \
    \  for i := 1; i <= n; i++ {\n        sum += i\n    }\n    return sum\n}\n\nfunc\
    \ TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.005s\n"
  timestamp: 1660073152
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    var sum int =\
    \ 0\n    for i := 1; i <= n; i++ {\n        sum += i\n    }\n    return sum\n\
    }\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.005s\n"
  timestamp: 1660073190
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    var sum int\n\
    \    for i := 1; i <= n; i++ {\n        sum += i\n    }\n    return sum\n}\n\n\
    func TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.005s\n"
  timestamp: 1660073152
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    sum := 1\n  \
    \  for i := 1; i <= n; i++ {\n        sum += i\n    }\n    return sum\n}\n\nfunc\
    \ TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmpbk0di91n_test.go:44: expected '%!s(int=1)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmpbk0di91n_test.go:44:\
    \ expected '%!s(int=21)', got '%!s(int=22)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmpbk0di91n_test.go:44: expected '%!s(int=66)', got '%!s(int=67)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmpbk0di91n_test.go:44:\
    \ expected '%!s(int=465)', got '%!s(int=466)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmpbk0di91n_test.go:44: expected '%!s(int=5050)', got '%!s(int=5051)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073260
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n == 0 {\n\
    \        return 0\n    }\n\n    return n + sum_to_n(n - 1)\n}\n\nfunc TestSum_To_N(t\
    \ *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 1 },\n     { actual: candidate(6), expected: 21 },\n     { actual:\
    \ candidate(11), expected: 66 },\n     { actual: candidate(30), expected: 465\
    \ },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660073353
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    x := 1\n    for\
    \ ; x <= n; x++ {\n        // fmt.Println(x)\n        if n%x==0 {\n          \
    \  return x\n        }\n    }\n    return x\n}\n\nfunc TestSum_To_N(t *testing.T)\
    \ {\n  candidate := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 1 },\n     { actual: candidate(6), expected: 21 },\n     { actual:\
    \ candidate(11), expected: 66 },\n     { actual: candidate(30), expected: 465\
    \ },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__1\
    \ (0.00s)\n        tmp86ak5peh_test.go:47: expected '%!s(int=21)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSum_To_N/test_num__2 (0.00s)\n        tmp86ak5peh_test.go:47:\
    \ expected '%!s(int=66)', got '%!s(int=1)'\n    --- FAIL: TestSum_To_N/test_num__3\
    \ (0.00s)\n        tmp86ak5peh_test.go:47: expected '%!s(int=465)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSum_To_N/test_num__4 (0.00s)\n        tmp86ak5peh_test.go:47:\
    \ expected '%!s(int=5050)', got '%!s(int=1)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073353
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    var sum int =\
    \ 1\n    for i := 1; i <= n; i++ {\n        sum += i\n    }\n    return sum\n\
    }\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmppmqr5ycw_test.go:44: expected '%!s(int=1)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmppmqr5ycw_test.go:44:\
    \ expected '%!s(int=21)', got '%!s(int=22)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmppmqr5ycw_test.go:44: expected '%!s(int=66)', got '%!s(int=67)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmppmqr5ycw_test.go:44:\
    \ expected '%!s(int=465)', got '%!s(int=466)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmppmqr5ycw_test.go:44: expected '%!s(int=5050)', got '%!s(int=5051)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073260
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    sum := 1\n  \
    \  for i := 1; i <= n; i++ {\n        sum += i\n    }\n    return sum\n}\n\nfunc\
    \ TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmpbk0di91n_test.go:44: expected '%!s(int=1)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmpbk0di91n_test.go:44:\
    \ expected '%!s(int=21)', got '%!s(int=22)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmpbk0di91n_test.go:44: expected '%!s(int=66)', got '%!s(int=67)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmpbk0di91n_test.go:44:\
    \ expected '%!s(int=465)', got '%!s(int=466)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmpbk0di91n_test.go:44: expected '%!s(int=5050)', got '%!s(int=5051)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073260
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    result := 1\n\
    \    for i := 0; i < n; i++ {\n        result *= i + 1\n    }\n    return result\n\
    }\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__1\
    \ (0.00s)\n        tmphflyqjdc_test.go:44: expected '%!s(int=21)', got '%!s(int=720)'\n\
    \    --- FAIL: TestSum_To_N/test_num__2 (0.00s)\n        tmphflyqjdc_test.go:44:\
    \ expected '%!s(int=66)', got '%!s(int=39916800)'\n    --- FAIL: TestSum_To_N/test_num__3\
    \ (0.00s)\n        tmphflyqjdc_test.go:44: expected '%!s(int=465)', got '%!s(int=-8764578968847253504)'\n\
    \    --- FAIL: TestSum_To_N/test_num__4 (0.00s)\n        tmphflyqjdc_test.go:44:\
    \ expected '%!s(int=5050)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073353
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n < 1 {\n\
    \        return 1\n    }\n    if n == 1 {\n        return 1\n    }\n    return\
    \ n + sum_to_n(n - 1)\n}\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate :=\
    \ sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 1 },\n     {\
    \ actual: candidate(6), expected: 21 },\n     { actual: candidate(11), expected:\
    \ 66 },\n     { actual: candidate(30), expected: 465 },\n     { actual: candidate(100),\
    \ expected: 5050 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660073260
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    m := n - 1\n\
    \    s := 1\n    for i := 1; i <= n; i++ {\n        s += i\n        if m == 0\
    \ {\n            return s\n        }\n        m--\n    }\n    return 0\n}\n</code>\n\
    <|/ a |>\n<| c |>\nThis does not meet the OP's requirement of starting with 1.\n\
    <|/ c |>\n<| a tags=language-agnostic,math,algorithm dscore=4 |>\nThis is my answer\n\
    <code>\nint sum_to_n(int n) {\n    int s = 0;\n    for(int i = n; i > 0; i--)\
    \ {\n        s += i;\n        if(s == n) return i;\n    }\n    return 0;\n}\n\
    </code>\n<|/ a |>\n<| c |>\nThis doesn't meet the OP's requirement of starting\
    \ with 1.\n<|/ c |>\n<| c |>\nThis does meet the OP's requirement of starting\
    \ with 1. `for(int i = n; i > 0; i--) {`\n<|/ c |>\n<| c |>\nThanks for pointing\
    \ out that for loop was incorrect. Fixed it now.\n<|/ c |>\n<| a tags=language-agnostic,math,algorithm\
    \ |>\nThis should work.\n<code>\nfunc TestSum_To_N(t *testing.T) {\n  candidate\
    \ := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 1 },\n     {\
    \ actual: candidate(6), expected: 21 },\n     { actual: candidate(11), expected:\
    \ 66 },\n     { actual: candidate(30), expected: 465 },\n     { actual: candidate(100),\
    \ expected: 5050 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpqqs_f92b_test.go:31:1: expected declaration, found ''<''

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660073352
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    switch {\n  \
    \  case n < 1:\n        return 1\n    case n <= 3:\n        return n\n    case\
    \ n <= 9:\n        return 3 * n + 1\n    case n <= 19:\n        return 6 * n +\
    \ 1\n    case n <= 99:\n        return 10 * n + 1\n    case n <= 999:\n      \
    \  return 30 * n + 1\n    case n <= 9999:\n        return 60 * n + 1\n    case\
    \ n <= 99999:\n        return 90 * n + 1\n    case n <= 999999:\n        return\
    \ 120 * n + 1\n    case n <= 9999999:\n        return 150 * n + 1\n    case n\
    \ <= 999999999:\n        return 180 * n + 1\n    case n <= 99999999999:\n    \
    \    return 210 * n + 1\n    case n <= 999999999999999:\n        return 240 *\
    \ n + 1\n    case n <= 9999999999999:\n        return 270 * n + 1\n    case n\
    \ <= 9999999999999:\n        return 300 * n + 1\n    case n <= 9999999999999:\n\
    \        return 330 * n + 1\n    case n <= 99999999999999:\n        return 360\
    \ * n + 1\n    case n <= 99999999999999:\n        return 390 * n + 1\n    case\
    \ n <= 99999999999999:\n        return 420 * n + 1\n    case n <= 999999999999999999:\n\
    \        return 460 * n + 1\n    case n <= 999999999999999999:\n        return\
    \ 490 * n + 1\n    case n <= 999999999999999999:\n        return 520 * n + 1\n\
    \    case n <= 999999999999999999:\n        return 560 * n + 1\n    case n <=\
    \ 999999999999999999:\n        return 590 * n + 1\n    case n <= 999999999999999999:\n\
    \        return 620 * n + 1\n    case n <= 999999999999999999:\n        return\
    \ 660 * n + 1\n    case n <= 999999999999999999:\n        return 690 * n + 1\n\
    \    case n <= 999999999999999999:\n        return 720 * n + 1\n    case n <=\
    \ 999999999999999999:\n        return 760 * n + 1\n    case n <= 999999999999999999:\n\
    \        return 790 * n + 1\n    case n <= 999999999999999999:\n        return\
    \ 820 * n + 1\n    case n <= 999999999999999999:\n        return 860 * n + 1\n\
    \    case n <= 999999999999999999:\n        return 890 * n + 1\n    case n <=\
    \ 999999999999999999:\n        return 920 * n + 1\n    case n <= 999999999999999999:\n\
    \        return 960 * n + 1\n    case n <= 999999999999999999:\n        return\
    \ 990 * n + 1\n    case n <= 999999999999999999:\n        return 1020 * n + 1\n\
    \    case n <= 999999999999999999:\n        return 1060 * n + 1\n    case n <=\
    \ 999999999999999999:\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 1 },\n     { actual:\
    \ candidate(6), expected: 21 },\n     { actual: candidate(11), expected: 66 },\n\
    \     { actual: candidate(30), expected: 465 },\n     { actual: candidate(100),\
    \ expected: 5050 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmppnbldz3x_test.go:98:6: expected ''('', found TestSum_To_N

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660073352
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n < 0 {\n\
    \        panic(\"sum_to_n called with n < 0\")\n    }\n\n    if n == 0 {\n   \
    \     return 1\n    }\n\n    return n + sum_to_n(n - 1)\n}\n\nfunc TestSum_To_N(t\
    \ *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 1 },\n     { actual: candidate(6), expected: 21 },\n     { actual:\
    \ candidate(11), expected: 66 },\n     { actual: candidate(30), expected: 465\
    \ },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmp1smneidt_test.go:48: expected '%!s(int=1)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmp1smneidt_test.go:48:\
    \ expected '%!s(int=21)', got '%!s(int=22)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmp1smneidt_test.go:48: expected '%!s(int=66)', got '%!s(int=67)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmp1smneidt_test.go:48:\
    \ expected '%!s(int=465)', got '%!s(int=466)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmp1smneidt_test.go:48: expected '%!s(int=5050)', got '%!s(int=5051)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073354
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    var i int = 1\n\
    \    var acc int = 0\n\n    for i <= n {\n        acc = acc + i\n        i++\n\
    \    }\n\n    return acc\n}\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate\
    \ := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 1 },\n     {\
    \ actual: candidate(6), expected: 21 },\n     { actual: candidate(11), expected:\
    \ 66 },\n     { actual: candidate(30), expected: 465 },\n     { actual: candidate(100),\
    \ expected: 5050 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660073354
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n < 1 {\n\
    \        return 0\n    }\n    return n * sum_to_n(n-1)\n}\n\nfunc TestSum_To_N(t\
    \ *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 1 },\n     { actual: candidate(6), expected: 21 },\n     { actual:\
    \ candidate(11), expected: 66 },\n     { actual: candidate(30), expected: 465\
    \ },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmp4y16y69e_test.go:43: expected '%!s(int=1)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmp4y16y69e_test.go:43:\
    \ expected '%!s(int=21)', got '%!s(int=0)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmp4y16y69e_test.go:43: expected '%!s(int=66)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmp4y16y69e_test.go:43:\
    \ expected '%!s(int=465)', got '%!s(int=0)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmp4y16y69e_test.go:43: expected '%!s(int=5050)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073354
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n == 0 ||\
    \ n == 1 {\n        return 1\n    }\n    n -= 2\n    return n + sum_to_n(n)\n\
    }\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__1\
    \ (0.00s)\n        tmp2u9pv_im_test.go:43: expected '%!s(int=21)', got '%!s(int=7)'\n\
    \    --- FAIL: TestSum_To_N/test_num__2 (0.00s)\n        tmp2u9pv_im_test.go:43:\
    \ expected '%!s(int=66)', got '%!s(int=26)'\n    --- FAIL: TestSum_To_N/test_num__3\
    \ (0.00s)\n        tmp2u9pv_im_test.go:43: expected '%!s(int=465)', got '%!s(int=211)'\n\
    \    --- FAIL: TestSum_To_N/test_num__4 (0.00s)\n        tmp2u9pv_im_test.go:43:\
    \ expected '%!s(int=5050)', got '%!s(int=2451)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073354
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n == 0 {\n\
    \        return 1\n    }\n    return n*(n + 1)/2\n}\n\nfunc TestSum_To_N(t *testing.T)\
    \ {\n  candidate := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 1 },\n     { actual: candidate(6), expected: 21 },\n     { actual:\
    \ candidate(11), expected: 66 },\n     { actual: candidate(30), expected: 465\
    \ },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660073355
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    sum := 1\n  \
    \  for i := 1; i <= n; i++ {\n        sum += i\n    }\n    return sum\n}\n\nfunc\
    \ TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmpbk0di91n_test.go:44: expected '%!s(int=1)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmpbk0di91n_test.go:44:\
    \ expected '%!s(int=21)', got '%!s(int=22)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmpbk0di91n_test.go:44: expected '%!s(int=66)', got '%!s(int=67)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmpbk0di91n_test.go:44:\
    \ expected '%!s(int=465)', got '%!s(int=466)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmpbk0di91n_test.go:44: expected '%!s(int=5050)', got '%!s(int=5051)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073260
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    sum := 1\n  \
    \  for i := 1; i <= n; i++ {\n        sum += i\n    }\n    return sum\n}\n\nfunc\
    \ TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmpbk0di91n_test.go:44: expected '%!s(int=1)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmpbk0di91n_test.go:44:\
    \ expected '%!s(int=21)', got '%!s(int=22)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmpbk0di91n_test.go:44: expected '%!s(int=66)', got '%!s(int=67)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmpbk0di91n_test.go:44:\
    \ expected '%!s(int=465)', got '%!s(int=466)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmpbk0di91n_test.go:44: expected '%!s(int=5050)', got '%!s(int=5051)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073260
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    s := 0\n    for\
    \ i := 1; i <= n; i++ {\n        s += i\n    }\n    return s\n}\n\nfunc TestSum_To_N(t\
    \ *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 1 },\n     { actual: candidate(6), expected: 21 },\n     { actual:\
    \ candidate(11), expected: 66 },\n     { actual: candidate(30), expected: 465\
    \ },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660073230
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    var sum int\n\
    \    for i := 1; i <= n; i++ {\n        sum += i\n    }\n    return sum\n}\n\n\
    func TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.005s\n"
  timestamp: 1660073152
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    var acc int\n\
    \    for i := 1; i <= n; i++ {\n        acc += i\n    }\n    return acc\n}\n\n\
    func TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660073355
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    i := 1\n    var\
    \ total int\n    for i <= n {\n        total += i\n        i++\n    }\n    return\
    \ total\n}\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6),\
    \ expected: 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual:\
    \ candidate(30), expected: 465 },\n     { actual: candidate(100), expected: 5050\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660073355
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    sum, sum2 :=\
    \ 1, 0\n    for i := 1; i <= n; i++ {\n        sum += i\n        sum2 += i\n \
    \   }\n    if sum2 != n {\n        return n\n    }\n    return sum\n}\n\nfunc\
    \ TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmp2hsno5xh_test.go:48: expected '%!s(int=1)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmp2hsno5xh_test.go:48:\
    \ expected '%!s(int=21)', got '%!s(int=6)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmp2hsno5xh_test.go:48: expected '%!s(int=66)', got '%!s(int=11)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmp2hsno5xh_test.go:48:\
    \ expected '%!s(int=465)', got '%!s(int=30)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmp2hsno5xh_test.go:48: expected '%!s(int=5050)', got '%!s(int=100)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073355
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    var sum int =\
    \ 1\n    for i := 1; i <= n; i++ {\n        sum += i\n    }\n    return sum\n\
    }\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmppmqr5ycw_test.go:44: expected '%!s(int=1)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmppmqr5ycw_test.go:44:\
    \ expected '%!s(int=21)', got '%!s(int=22)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmppmqr5ycw_test.go:44: expected '%!s(int=66)', got '%!s(int=67)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmppmqr5ycw_test.go:44:\
    \ expected '%!s(int=465)', got '%!s(int=466)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmppmqr5ycw_test.go:44: expected '%!s(int=5050)', got '%!s(int=5051)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073260
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    var total int\n\
    \    for i := 1; i < n; i++ {\n        total += i\n    }\n    return total\n}\n\
    \nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmpt4x55tru_test.go:44: expected '%!s(int=1)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmpt4x55tru_test.go:44:\
    \ expected '%!s(int=21)', got '%!s(int=15)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmpt4x55tru_test.go:44: expected '%!s(int=66)', got '%!s(int=55)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmpt4x55tru_test.go:44:\
    \ expected '%!s(int=465)', got '%!s(int=435)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmpt4x55tru_test.go:44: expected '%!s(int=5050)', got '%!s(int=4950)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073355
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n <= 0 {\n\
    \        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n\n    return\
    \ n + sum_to_n(n-1)\n}\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 1 },\n     { actual:\
    \ candidate(6), expected: 21 },\n     { actual: candidate(11), expected: 66 },\n\
    \     { actual: candidate(30), expected: 465 },\n     { actual: candidate(100),\
    \ expected: 5050 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660073355
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    s := 0\n    for\
    \ i := 1; i <= n; i++ {\n        s += i\n    }\n    return s\n}\n\nfunc TestSum_To_N(t\
    \ *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 1 },\n     { actual: candidate(6), expected: 21 },\n     { actual:\
    \ candidate(11), expected: 66 },\n     { actual: candidate(30), expected: 465\
    \ },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660073230
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    total := 1\n\
    \    for i := 1; i <= n; i++ {\n        total += i\n    }\n    return total\n\
    }\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmpos520tmk_test.go:44: expected '%!s(int=1)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmpos520tmk_test.go:44:\
    \ expected '%!s(int=21)', got '%!s(int=22)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmpos520tmk_test.go:44: expected '%!s(int=66)', got '%!s(int=67)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmpos520tmk_test.go:44:\
    \ expected '%!s(int=465)', got '%!s(int=466)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmpos520tmk_test.go:44: expected '%!s(int=5050)', got '%!s(int=5051)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073355
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    sum := 1\n  \
    \  for i := 1; i <= n; i++ {\n        sum += i\n    }\n    return sum\n}\n\nfunc\
    \ TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmpbk0di91n_test.go:44: expected '%!s(int=1)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmpbk0di91n_test.go:44:\
    \ expected '%!s(int=21)', got '%!s(int=22)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmpbk0di91n_test.go:44: expected '%!s(int=66)', got '%!s(int=67)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmpbk0di91n_test.go:44:\
    \ expected '%!s(int=465)', got '%!s(int=466)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmpbk0di91n_test.go:44: expected '%!s(int=5050)', got '%!s(int=5051)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073260
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    return (n * (n\
    \ + 1)) / 2\n}\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 1 },\n     { actual:\
    \ candidate(6), expected: 21 },\n     { actual: candidate(11), expected: 66 },\n\
    \     { actual: candidate(30), expected: 465 },\n     { actual: candidate(100),\
    \ expected: 5050 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.005s\n"
  timestamp: 1660073152
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    return (n * (n\
    \ + 1)) / 2\n}\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 1 },\n     { actual:\
    \ candidate(6), expected: 21 },\n     { actual: candidate(11), expected: 66 },\n\
    \     { actual: candidate(30), expected: 465 },\n     { actual: candidate(100),\
    \ expected: 5050 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.005s\n"
  timestamp: 1660073152
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    var sum int\n\
    \    for i := 0; i < n; i++ {\n        sum += i\n    }\n    return sum\n}\n\n\
    func TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmpwysmdgf8_test.go:44: expected '%!s(int=1)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmpwysmdgf8_test.go:44:\
    \ expected '%!s(int=21)', got '%!s(int=15)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmpwysmdgf8_test.go:44: expected '%!s(int=66)', got '%!s(int=55)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmpwysmdgf8_test.go:44:\
    \ expected '%!s(int=465)', got '%!s(int=435)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmpwysmdgf8_test.go:44: expected '%!s(int=5050)', got '%!s(int=4950)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073355
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n <= 0 {\n\
    \        return 1\n    }\n    result := 0\n    for i := 1; i <= n; i++ {\n   \
    \     result += i\n    }\n    return result\n}\n\nfunc TestSum_To_N(t *testing.T)\
    \ {\n  candidate := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 1 },\n     { actual: candidate(6), expected: 21 },\n     { actual:\
    \ candidate(11), expected: 66 },\n     { actual: candidate(30), expected: 465\
    \ },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660073355
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    // Sum is zero\n\
    \    if n == 0 {\n        return 0\n    }\n\n    // Sum is n itself\n    if n\
    \ == 1 {\n        return 1\n    }\n\n    // Sum is n / 2\n    if n == 2 {\n  \
    \      return 2\n    }\n\n    // Sum is 3n+2\n    // 3n+2 -> 4n+2\n    // 4n+2\
    \ -> 5n+2\n    // 5n+2 -> 6n+2\n    // 6n+2 -> 7n+2\n    // 7n+2 -> 8n+2\n   \
    \ // 8n+2 -> 9n+2\n    // 9n+2 -> 10n+2\n    // 10n+2 -> 11n+2\n    // 11n+2 ->\
    \ 12n+2\n    // 12n+2 -> 13n+2\n    // 13n+2 -> 14n+2\n    // 14n+2 -> 15n+2\n\
    \    // 15n+2 -> 16n+2\n    // 16n+2 -> 17n+2\n    // 17n+2 -> 18n+2\n    // 18n+2\
    \ -> 19n+2\n    // 19n+2 -> 20n+2\n    // 20n+2 -> 21n+2\n    // 21n+2 -> 22n+2\n\
    \    // 22n+2 -> 23n+2\n    // 23n+2 -> 24n+2\n    // 24n+2 -> 25n+2\n    // 25n+2\
    \ -> 26n+2\n    // 26n+2 -> 27n+2\n    // 27n+2 -> 28n+2\n    // 28n+2 -> 29n+2\n\
    \    // 29n+2 -> 30n+2\n    // 30n+2 -> 31n+2\n    // 31n+2 -> 32n+2\n    // 32n+2\
    \ -> 33n+2\n    // 33n+2 -> 34n+2\n    // 34n+2 -> 35n+2\n    // 35n+2 -> 36n+2\n\
    \    // 36n+2 -> 37n+2\n    // 37n+2 -> 38n+2\n    // 38n+2 -> 39n+2\n    // 39n+2\
    \ -> 40n+2\n    // 40n+2 -> 41n+2\n    // 41n+2 -> 42n+2\n    // 42n+2 -> 43n+2\n\
    \    // 43n+2 -> 44n+2\n    // 44n+2 -> 45n+2\nfunc TestSum_To_N(t *testing.T)\
    \ {\n  candidate := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 1 },\n     { actual: candidate(6), expected: 21 },\n     { actual:\
    \ candidate(11), expected: 66 },\n     { actual: candidate(30), expected: 465\
    \ },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmp9d0om5no_test.go:78:6: expected ''('', found TestSum_To_N

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660073355
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    sum := 0\n  \
    \  for i := 1; i <= n; i++ {\n        sum += i\n    }\n    return sum\n}\n\nfunc\
    \ TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.005s\n"
  timestamp: 1660073152
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    s := 1\n    for\
    \ ; n != 0; n-- {\n        s += n\n    }\n    return s\n}\n\nfunc TestSum_To_N(t\
    \ *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 1 },\n     { actual: candidate(6), expected: 21 },\n     { actual:\
    \ candidate(11), expected: 66 },\n     { actual: candidate(30), expected: 465\
    \ },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmpqkn23zim_test.go:44: expected '%!s(int=1)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmpqkn23zim_test.go:44:\
    \ expected '%!s(int=21)', got '%!s(int=22)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmpqkn23zim_test.go:44: expected '%!s(int=66)', got '%!s(int=67)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmpqkn23zim_test.go:44:\
    \ expected '%!s(int=465)', got '%!s(int=466)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmpqkn23zim_test.go:44: expected '%!s(int=5050)', got '%!s(int=5051)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073355
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    sum := 1\n  \
    \  for i := 1; i <= n; i++ {\n        sum += i\n    }\n    return sum\n}\n\nfunc\
    \ TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmpbk0di91n_test.go:44: expected '%!s(int=1)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmpbk0di91n_test.go:44:\
    \ expected '%!s(int=21)', got '%!s(int=22)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmpbk0di91n_test.go:44: expected '%!s(int=66)', got '%!s(int=67)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmpbk0di91n_test.go:44:\
    \ expected '%!s(int=465)', got '%!s(int=466)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmpbk0di91n_test.go:44: expected '%!s(int=5050)', got '%!s(int=5051)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073260
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n == 0 {\n\
    \        return 1\n    }\n    if n < 0 {\n        return -1\n    }\n    return\
    \ n + sum_to_n(n-1)\n}\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 1 },\n     { actual:\
    \ candidate(6), expected: 21 },\n     { actual: candidate(11), expected: 66 },\n\
    \     { actual: candidate(30), expected: 465 },\n     { actual: candidate(100),\
    \ expected: 5050 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmp4x3nlj16_test.go:46: expected '%!s(int=1)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmp4x3nlj16_test.go:46:\
    \ expected '%!s(int=21)', got '%!s(int=22)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmp4x3nlj16_test.go:46: expected '%!s(int=66)', got '%!s(int=67)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmp4x3nlj16_test.go:46:\
    \ expected '%!s(int=465)', got '%!s(int=466)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmp4x3nlj16_test.go:46: expected '%!s(int=5050)', got '%!s(int=5051)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073355
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n == 0 {\n\
    \        return 1\n    }\n\n    current := 1\n    for i := 1; i <= n; i++ {\n\
    \        current += i\n    }\n\n    return current\n}\n\nfunc TestSum_To_N(t *testing.T)\
    \ {\n  candidate := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 1 },\n     { actual: candidate(6), expected: 21 },\n     { actual:\
    \ candidate(11), expected: 66 },\n     { actual: candidate(30), expected: 465\
    \ },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmpeltzwhkm_test.go:49: expected '%!s(int=1)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmpeltzwhkm_test.go:49:\
    \ expected '%!s(int=21)', got '%!s(int=22)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmpeltzwhkm_test.go:49: expected '%!s(int=66)', got '%!s(int=67)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmpeltzwhkm_test.go:49:\
    \ expected '%!s(int=465)', got '%!s(int=466)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmpeltzwhkm_test.go:49: expected '%!s(int=5050)', got '%!s(int=5051)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073355
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    var total = 0\n\
    \    for i := 0; i < n; i++ {\n        total += i\n    }\n    return total\n}\n\
    \nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmpvpytp3uz_test.go:44: expected '%!s(int=1)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmpvpytp3uz_test.go:44:\
    \ expected '%!s(int=21)', got '%!s(int=15)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmpvpytp3uz_test.go:44: expected '%!s(int=66)', got '%!s(int=55)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmpvpytp3uz_test.go:44:\
    \ expected '%!s(int=465)', got '%!s(int=435)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmpvpytp3uz_test.go:44: expected '%!s(int=5050)', got '%!s(int=4950)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073355
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    return n + 1\n\
    }\n`\n\ts := goast.NewState(nil)\n\ts.Call(nil, fmt.Sprintf(\"sum_to_n(%d)\",\
    \ 30), s.Pkg.Pkg.NewPkg.Id())\n\ts.Call(nil, fmt.Sprintf(\"sum_to_n(%d)\", 100),\
    \ s.Pkg.Pkg.NewPkg.Id())\n\ts.Call(nil, fmt.Sprintf(\"sum_to_n(%d)\", 5), s.Pkg.Pkg.NewPkg.Id())\n\
    \ts.Call(nil, fmt.Sprintf(\"sum_to_n(%d)\", 10), s.Pkg.Pkg.NewPkg.Id())\n\ts.Call(nil,\
    \ fmt.Sprintf(\"sum_to_n(%d)\", 1), s.Pkg.Pkg.NewPkg.Id())\n\tgoast.PrintAST(s)\n\
    }\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmp085rvdb1_test.go:22:1: raw string literal not terminated

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660073355
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    return (n * (n\
    \ + 1)) / 2\n}\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 1 },\n     { actual:\
    \ candidate(6), expected: 21 },\n     { actual: candidate(11), expected: 66 },\n\
    \     { actual: candidate(30), expected: 465 },\n     { actual: candidate(100),\
    \ expected: 5050 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.005s\n"
  timestamp: 1660073152
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    sum := 0\n  \
    \  for i := 1; i <= n; i++ {\n        sum += i\n    }\n    return sum\n}\n\nfunc\
    \ TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.005s\n"
  timestamp: 1660073152
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n <= 0 {\n\
    \        return 0\n    }\n\n    var sum int = 1\n\n    for i := 1; i <= n; i++\
    \ {\n        sum += i\n    }\n\n    return sum\n}\n\nfunc TestSum_To_N(t *testing.T)\
    \ {\n  candidate := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 1 },\n     { actual: candidate(6), expected: 21 },\n     { actual:\
    \ candidate(11), expected: 66 },\n     { actual: candidate(30), expected: 465\
    \ },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmpmzocu8_t_test.go:50: expected '%!s(int=1)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmpmzocu8_t_test.go:50:\
    \ expected '%!s(int=21)', got '%!s(int=22)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmpmzocu8_t_test.go:50: expected '%!s(int=66)', got '%!s(int=67)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmpmzocu8_t_test.go:50:\
    \ expected '%!s(int=465)', got '%!s(int=466)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmpmzocu8_t_test.go:50: expected '%!s(int=5050)', got '%!s(int=5051)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073355
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    sum := 1\n  \
    \  for i := 0; i < n; i++ {\n        sum += i\n    }\n    return sum\n}\n\nfunc\
    \ TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__1\
    \ (0.00s)\n        tmpqohzjfr8_test.go:44: expected '%!s(int=21)', got '%!s(int=16)'\n\
    \    --- FAIL: TestSum_To_N/test_num__2 (0.00s)\n        tmpqohzjfr8_test.go:44:\
    \ expected '%!s(int=66)', got '%!s(int=56)'\n    --- FAIL: TestSum_To_N/test_num__3\
    \ (0.00s)\n        tmpqohzjfr8_test.go:44: expected '%!s(int=465)', got '%!s(int=436)'\n\
    \    --- FAIL: TestSum_To_N/test_num__4 (0.00s)\n        tmpqohzjfr8_test.go:44:\
    \ expected '%!s(int=5050)', got '%!s(int=4951)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073355
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n == 0 {\n\
    \        return 1\n    }\n    s := 0\n    for x := 1; x < n; x++ {\n        s\
    \ += x\n    }\n    return s\n}\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate\
    \ := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 1 },\n     {\
    \ actual: candidate(6), expected: 21 },\n     { actual: candidate(11), expected:\
    \ 66 },\n     { actual: candidate(30), expected: 465 },\n     { actual: candidate(100),\
    \ expected: 5050 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmpg_xb0feb_test.go:47: expected '%!s(int=1)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmpg_xb0feb_test.go:47:\
    \ expected '%!s(int=21)', got '%!s(int=15)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmpg_xb0feb_test.go:47: expected '%!s(int=66)', got '%!s(int=55)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmpg_xb0feb_test.go:47:\
    \ expected '%!s(int=465)', got '%!s(int=435)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmpg_xb0feb_test.go:47: expected '%!s(int=5050)', got '%!s(int=4950)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073355
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    total := 1\n\
    \    for i := 1; i < n; i++ {\n        total += i\n    }\n    return total\n}\n\
    \nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__1\
    \ (0.00s)\n        tmpldj_e5ko_test.go:44: expected '%!s(int=21)', got '%!s(int=16)'\n\
    \    --- FAIL: TestSum_To_N/test_num__2 (0.00s)\n        tmpldj_e5ko_test.go:44:\
    \ expected '%!s(int=66)', got '%!s(int=56)'\n    --- FAIL: TestSum_To_N/test_num__3\
    \ (0.00s)\n        tmpldj_e5ko_test.go:44: expected '%!s(int=465)', got '%!s(int=436)'\n\
    \    --- FAIL: TestSum_To_N/test_num__4 (0.00s)\n        tmpldj_e5ko_test.go:44:\
    \ expected '%!s(int=5050)', got '%!s(int=4951)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073355
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n <= 0 {\n\
    \        return n\n    }\n    sum := 0\n    for i := 1; i <= n; i++ {\n      \
    \  sum += i\n    }\n    return sum\n}\n\nfunc TestSum_To_N(t *testing.T) {\n \
    \ candidate := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1), expected:\
    \ 1 },\n     { actual: candidate(6), expected: 21 },\n     { actual: candidate(11),\
    \ expected: 66 },\n     { actual: candidate(30), expected: 465 },\n     { actual:\
    \ candidate(100), expected: 5050 },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660073356
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    var sum int\n\
    \    for i := 1; i <= n; i++ {\n        sum += i\n    }\n    return sum\n}\n\n\
    func TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.005s\n"
  timestamp: 1660073152
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    s := 0\n    for\
    \ i := 1; i <= n; i++ {\n        s += i\n    }\n    return s\n}\n\nfunc TestSum_To_N(t\
    \ *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 1 },\n     { actual: candidate(6), expected: 21 },\n     { actual:\
    \ candidate(11), expected: 66 },\n     { actual: candidate(30), expected: 465\
    \ },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660073230
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    x := 1\n    for\
    \ {\n        if n == 0 {\n            return x\n        }\n        x = x + 1\n\
    \        n = n - 1\n    }\n}\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate\
    \ := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 1 },\n     {\
    \ actual: candidate(6), expected: 21 },\n     { actual: candidate(11), expected:\
    \ 66 },\n     { actual: candidate(30), expected: 465 },\n     { actual: candidate(100),\
    \ expected: 5050 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmp9v5g06qn_test.go:47: expected '%!s(int=1)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmp9v5g06qn_test.go:47:\
    \ expected '%!s(int=21)', got '%!s(int=7)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmp9v5g06qn_test.go:47: expected '%!s(int=66)', got '%!s(int=12)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmp9v5g06qn_test.go:47:\
    \ expected '%!s(int=465)', got '%!s(int=31)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmp9v5g06qn_test.go:47: expected '%!s(int=5050)', got '%!s(int=101)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073356
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n == 0 {\n\
    \        return 1\n    }\n\n    var sum = 0\n    for i := 1; i <= n; i++ {\n \
    \       sum += i\n    }\n\n    return sum\n}\n\nfunc TestSum_To_N(t *testing.T)\
    \ {\n  candidate := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 1 },\n     { actual: candidate(6), expected: 21 },\n     { actual:\
    \ candidate(11), expected: 66 },\n     { actual: candidate(30), expected: 465\
    \ },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660073356
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    sum := 1\n  \
    \  for i := 1; i <= n; i++ {\n        sum += i\n    }\n    return sum\n}\n\nfunc\
    \ TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmpbk0di91n_test.go:44: expected '%!s(int=1)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmpbk0di91n_test.go:44:\
    \ expected '%!s(int=21)', got '%!s(int=22)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmpbk0di91n_test.go:44: expected '%!s(int=66)', got '%!s(int=67)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmpbk0di91n_test.go:44:\
    \ expected '%!s(int=465)', got '%!s(int=466)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmpbk0di91n_test.go:44: expected '%!s(int=5050)', got '%!s(int=5051)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073260
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    sum := 1\n  \
    \  for i := 1; i <= n; i++ {\n        sum += i\n    }\n    return sum\n}\n\nfunc\
    \ TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmpbk0di91n_test.go:44: expected '%!s(int=1)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmpbk0di91n_test.go:44:\
    \ expected '%!s(int=21)', got '%!s(int=22)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmpbk0di91n_test.go:44: expected '%!s(int=66)', got '%!s(int=67)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmpbk0di91n_test.go:44:\
    \ expected '%!s(int=465)', got '%!s(int=466)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmpbk0di91n_test.go:44: expected '%!s(int=5050)', got '%!s(int=5051)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073260
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    i := 1\n    sum\
    \ := 0\n    for i <= n {\n        sum += i\n        i = i + 1\n    }\n    return\
    \ sum\n}\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6),\
    \ expected: 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual:\
    \ candidate(30), expected: 465 },\n     { actual: candidate(100), expected: 5050\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660073356
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    var result int\n\
    \    for ; n > 0; n-- {\n        result += n\n    }\n    return result\n}\n\n\
    func TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660073356
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    var sum int =\
    \ 1\n\n    for i := 1; i <= n; i++ {\n        sum += i\n    }\n\n    return sum\n\
    }\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmpsfzul1sz_test.go:46: expected '%!s(int=1)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmpsfzul1sz_test.go:46:\
    \ expected '%!s(int=21)', got '%!s(int=22)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmpsfzul1sz_test.go:46: expected '%!s(int=66)', got '%!s(int=67)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmpsfzul1sz_test.go:46:\
    \ expected '%!s(int=465)', got '%!s(int=466)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmpsfzul1sz_test.go:46: expected '%!s(int=5050)', got '%!s(int=5051)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073356
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    return n*(n+1)/2\n\
    }\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660073357
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    var result int\n\
    \    for i := 1; i <= n; i++ {\n        result += i\n    }\n    return result\n\
    }\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660073234
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    acc := 1\n  \
    \  for i := 1; i <= n; i++ {\n        acc += i\n    }\n    return acc\n}\n\nfunc\
    \ TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmpk618auw4_test.go:44: expected '%!s(int=1)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmpk618auw4_test.go:44:\
    \ expected '%!s(int=21)', got '%!s(int=22)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmpk618auw4_test.go:44: expected '%!s(int=66)', got '%!s(int=67)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmpk618auw4_test.go:44:\
    \ expected '%!s(int=465)', got '%!s(int=466)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmpk618auw4_test.go:44: expected '%!s(int=5050)', got '%!s(int=5051)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073357
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n < 0 {\n\
    \        panic(\"negative numbers not allowed\")\n    }\n    var sum = 0\n   \
    \ for i := 0; i < n; i++ {\n        sum += i\n    }\n    return sum\n}\n\nfunc\
    \ TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmphpxnofzr_test.go:47: expected '%!s(int=1)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmphpxnofzr_test.go:47:\
    \ expected '%!s(int=21)', got '%!s(int=15)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmphpxnofzr_test.go:47: expected '%!s(int=66)', got '%!s(int=55)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmphpxnofzr_test.go:47:\
    \ expected '%!s(int=465)', got '%!s(int=435)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmphpxnofzr_test.go:47: expected '%!s(int=5050)', got '%!s(int=4950)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073357
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    var sum int =\
    \ 0\n    for i := 1; i <= n; i++ {\n        sum += i\n    }\n    return sum\n\
    }\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.005s\n"
  timestamp: 1660073190
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    var sum int\n\
    \    for i := 1; i <= n; i++ {\n        sum += i\n    }\n    return sum\n}\n\n\
    func TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.005s\n"
  timestamp: 1660073152
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    x := 1\n    for\
    \ ; x < n; x++ {\n        x += 1\n    }\n    return x\n}\n\nfunc TestSum_To_N(t\
    \ *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 1 },\n     { actual: candidate(6), expected: 21 },\n     { actual:\
    \ candidate(11), expected: 66 },\n     { actual: candidate(30), expected: 465\
    \ },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__1\
    \ (0.00s)\n        tmp3djgi9p4_test.go:44: expected '%!s(int=21)', got '%!s(int=7)'\n\
    \    --- FAIL: TestSum_To_N/test_num__2 (0.00s)\n        tmp3djgi9p4_test.go:44:\
    \ expected '%!s(int=66)', got '%!s(int=11)'\n    --- FAIL: TestSum_To_N/test_num__3\
    \ (0.00s)\n        tmp3djgi9p4_test.go:44: expected '%!s(int=465)', got '%!s(int=31)'\n\
    \    --- FAIL: TestSum_To_N/test_num__4 (0.00s)\n        tmp3djgi9p4_test.go:44:\
    \ expected '%!s(int=5050)', got '%!s(int=101)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073358
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n == 0 {\n\
    \        return 1\n    }\n    return n + sum_to_n(n - 1)\n}\n\nfunc TestSum_To_N(t\
    \ *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 1 },\n     { actual: candidate(6), expected: 21 },\n     { actual:\
    \ candidate(11), expected: 66 },\n     { actual: candidate(30), expected: 465\
    \ },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmpo3b815dk_test.go:43: expected '%!s(int=1)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmpo3b815dk_test.go:43:\
    \ expected '%!s(int=21)', got '%!s(int=22)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmpo3b815dk_test.go:43: expected '%!s(int=66)', got '%!s(int=67)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmpo3b815dk_test.go:43:\
    \ expected '%!s(int=465)', got '%!s(int=466)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmpo3b815dk_test.go:43: expected '%!s(int=5050)', got '%!s(int=5051)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073260
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n <= 0 {\n\
    \        return 0\n    }\n    var sum int\n    for i := 1; i <= n; i++ {\n   \
    \     sum += i\n    }\n    return sum\n}\n\nfunc TestSum_To_N(t *testing.T) {\n\
    \  candidate := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1), expected:\
    \ 1 },\n     { actual: candidate(6), expected: 21 },\n     { actual: candidate(11),\
    \ expected: 66 },\n     { actual: candidate(30), expected: 465 },\n     { actual:\
    \ candidate(100), expected: 5050 },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.004s\n"
  timestamp: 1660073230
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    var s int\n \
    \   for i := 1; i <= n; i++ {\n        s += i\n    }\n    return s\n}\n\nfunc\
    \ TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660073234
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n < 1 {\n\
    \        fmt.Println(\"invalid input!\")\n        return -1\n    }\n\n    var\
    \ sum_ int = 0\n    for number := 1; number <= n; number++ {\n        sum_ +=\
    \ number\n    }\n    return sum_\n}\n</code>\n<|/ a tags=for-loop,go dscore=2\
    \ |>\n<| a dscore=1 |>\nIf you really want to use the golang way and you're on\
    \ OSX you can use Bash.\n<code>\nexport PATH=$PATH:/usr/local/go/bin\ngo version\n\
    go run your_script.go\n</code>\n<|/ a tags=for-loop,go |>\n<| a dscore=1 |>\n\
    The simplest way is to use shell's for loop:\n<code>\nfor i in {1..100}; do echo\
    \ $i; done\n</code>\n<|/ a tags=for-loop,go |>\n<| a |>\n<code>\npackage main\n\
    \nimport (\n    \"fmt\"\n)\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate :=\
    \ sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 1 },\n     {\
    \ actual: candidate(6), expected: 21 },\n     { actual: candidate(11), expected:\
    \ 66 },\n     { actual: candidate(30), expected: 465 },\n     { actual: candidate(100),\
    \ expected: 5050 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmp5kkcfj3e_test.go:31:1: expected declaration, found ''<''

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660073357
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    n += 1 // to\
    \ start from 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i\n\
    \    }\n    return sum\n}\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate :=\
    \ sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 1 },\n     {\
    \ actual: candidate(6), expected: 21 },\n     { actual: candidate(11), expected:\
    \ 66 },\n     { actual: candidate(30), expected: 465 },\n     { actual: candidate(100),\
    \ expected: 5050 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmptqh5o1na_test.go:45: expected '%!s(int=1)', got '%!s(int=3)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmptqh5o1na_test.go:45:\
    \ expected '%!s(int=21)', got '%!s(int=28)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmptqh5o1na_test.go:45: expected '%!s(int=66)', got '%!s(int=78)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmptqh5o1na_test.go:45:\
    \ expected '%!s(int=465)', got '%!s(int=496)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmptqh5o1na_test.go:45: expected '%!s(int=5050)', got '%!s(int=5151)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073358
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    sum := 1\n  \
    \  for i := 1; i <= n; i++ {\n        sum += i\n    }\n    return sum\n}\n\nfunc\
    \ TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmpbk0di91n_test.go:44: expected '%!s(int=1)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmpbk0di91n_test.go:44:\
    \ expected '%!s(int=21)', got '%!s(int=22)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmpbk0di91n_test.go:44: expected '%!s(int=66)', got '%!s(int=67)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmpbk0di91n_test.go:44:\
    \ expected '%!s(int=465)', got '%!s(int=466)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmpbk0di91n_test.go:44: expected '%!s(int=5050)', got '%!s(int=5051)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073260
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    var sum int\n\
    \    for i := 1; i <= n; i++ {\n        sum += i\n    }\n    return sum\n}\n\n\
    func TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.005s\n"
  timestamp: 1660073152
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    n += 1\n    var\
    \ total int = 0\n    for i := 0; i < n; i++ {\n        total += i\n    }\n   \
    \ return total\n}\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 1 },\n     { actual:\
    \ candidate(6), expected: 21 },\n     { actual: candidate(11), expected: 66 },\n\
    \     { actual: candidate(30), expected: 465 },\n     { actual: candidate(100),\
    \ expected: 5050 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660073357
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    sum := 0\n  \
    \  for i := 1; i <= n; i++ {\n        sum += i\n    }\n    return sum\n}\n\nfunc\
    \ TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.005s\n"
  timestamp: 1660073152
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n < 0 {\n\
    \        fmt.Println(\"n should be non-negative\")\n        return 1\n    }\n\
    \    total := 0\n    for i := 1; i <= n; i++ {\n        total += i\n    }\n  \
    \  return total\n}\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 1 },\n     { actual:\
    \ candidate(6), expected: 21 },\n     { actual: candidate(11), expected: 66 },\n\
    \     { actual: candidate(30), expected: 465 },\n     { actual: candidate(100),\
    \ expected: 5050 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660073358
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    var a int = 1\n\
    \    for i := 1; i <= n; i++ {\n        a = a + i\n    }\n    return a\n}\n\n\
    func TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmpnq6cim31_test.go:44: expected '%!s(int=1)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmpnq6cim31_test.go:44:\
    \ expected '%!s(int=21)', got '%!s(int=22)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmpnq6cim31_test.go:44: expected '%!s(int=66)', got '%!s(int=67)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmpnq6cim31_test.go:44:\
    \ expected '%!s(int=465)', got '%!s(int=466)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmpnq6cim31_test.go:44: expected '%!s(int=5050)', got '%!s(int=5051)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073358
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n < 1 {\n\
    \        return 0\n    }\n    var sum = 0\n    for i := 1; i <= n; i++ {\n   \
    \     sum += i\n    }\n    return sum\n}\n\nfunc TestSum_To_N(t *testing.T) {\n\
    \  candidate := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1), expected:\
    \ 1 },\n     { actual: candidate(6), expected: 21 },\n     { actual: candidate(11),\
    \ expected: 66 },\n     { actual: candidate(30), expected: 465 },\n     { actual:\
    \ candidate(100), expected: 5050 },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.004s\n"
  timestamp: 1660073358
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    // Initialize\
    \ the sum with the first number\n    var sum int = 1\n\n    // Loop for as many\
    \ numbers as we need\n    for i := 1; i <= n; i++ {\n        // Add the number\
    \ to the sum\n        sum += i\n    }\n\n    // Return the sum\n    return sum\n\
    }\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmpoedz7yrs_test.go:50: expected '%!s(int=1)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmpoedz7yrs_test.go:50:\
    \ expected '%!s(int=21)', got '%!s(int=22)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmpoedz7yrs_test.go:50: expected '%!s(int=66)', got '%!s(int=67)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmpoedz7yrs_test.go:50:\
    \ expected '%!s(int=465)', got '%!s(int=466)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmpoedz7yrs_test.go:50: expected '%!s(int=5050)', got '%!s(int=5051)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073358
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    sum := 1\n  \
    \  for i := 1; i <= n; i++ {\n        sum += i\n    }\n    return sum\n}\n\nfunc\
    \ TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmpbk0di91n_test.go:44: expected '%!s(int=1)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmpbk0di91n_test.go:44:\
    \ expected '%!s(int=21)', got '%!s(int=22)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmpbk0di91n_test.go:44: expected '%!s(int=66)', got '%!s(int=67)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmpbk0di91n_test.go:44:\
    \ expected '%!s(int=465)', got '%!s(int=466)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmpbk0di91n_test.go:44: expected '%!s(int=5050)', got '%!s(int=5051)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073260
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    var sum int =\
    \ 1\n    for i := 1; i <= n; i++ {\n        sum += i\n    }\n    return sum\n\
    }\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmppmqr5ycw_test.go:44: expected '%!s(int=1)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmppmqr5ycw_test.go:44:\
    \ expected '%!s(int=21)', got '%!s(int=22)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmppmqr5ycw_test.go:44: expected '%!s(int=66)', got '%!s(int=67)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmppmqr5ycw_test.go:44:\
    \ expected '%!s(int=465)', got '%!s(int=466)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmppmqr5ycw_test.go:44: expected '%!s(int=5050)', got '%!s(int=5051)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073260
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    sum := 0\n  \
    \  for i := 1; i <= n; i++ {\n        sum += i\n    }\n    return sum\n}\n\nfunc\
    \ TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.005s\n"
  timestamp: 1660073152
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    var total int\
    \ = 1\n    for i := 1; i < n; i++ {\n        total += i\n    }\n    return total\n\
    }\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__1\
    \ (0.00s)\n        tmpf_b2f_ik_test.go:44: expected '%!s(int=21)', got '%!s(int=16)'\n\
    \    --- FAIL: TestSum_To_N/test_num__2 (0.00s)\n        tmpf_b2f_ik_test.go:44:\
    \ expected '%!s(int=66)', got '%!s(int=56)'\n    --- FAIL: TestSum_To_N/test_num__3\
    \ (0.00s)\n        tmpf_b2f_ik_test.go:44: expected '%!s(int=465)', got '%!s(int=436)'\n\
    \    --- FAIL: TestSum_To_N/test_num__4 (0.00s)\n        tmpf_b2f_ik_test.go:44:\
    \ expected '%!s(int=5050)', got '%!s(int=4951)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073358
- exit_code: null
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    i := 1\n    for\
    \ {\n        if i == n {\n            break\n        }\n        i += i\n    }\n\
    \    return i\n}\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 1 },\n     { actual:\
    \ candidate(6), expected: 21 },\n     { actual: candidate(11), expected: 66 },\n\
    \     { actual: candidate(30), expected: 465 },\n     { actual: candidate(100),\
    \ expected: 5050 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660073370
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n < 0 {\n\
    \        fmt.Fprintf(os.Stderr, \"Can't sum_to_n(%d), n < 0\\n\", n)\n    }\n\
    \    if n < 2 {\n        return 1\n    }\n    sum := 1\n    for i := 2; i <= n;\
    \ i++ {\n        sum *= i + 1\n    }\n    return sum\n}\n</code>\n<|/ a tags=go\
    \ |>\n<| c |>\nThe \"for loop\" part will overflow for very large numbers since\
    \ `math.Pow(float64(1), uint64(i))` does not fit into an int64 variable.\n<|/\
    \ c |>\n<| a tags=go |>\n<code>\npackage main\n\nimport (\n    \"fmt\"\n)\n\n\
    func TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmp4o1pr1jm_test.go:32:1: expected declaration, found ''<''

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660073357
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    return n*(n+1)/2\n\
    }\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660073357
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    sum := 0\n  \
    \  for i := 1; i <= n; i++ {\n        sum += i\n    }\n    return sum\n}\n\nfunc\
    \ TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.005s\n"
  timestamp: 1660073152
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    sum := 0\n  \
    \  for i := 1; i <= n; i++ {\n        sum += i\n    }\n    return sum\n}\n\nfunc\
    \ TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.005s\n"
  timestamp: 1660073152
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    current := 1\n\
    \    sum := 0\n    for i := 0; i < n; i++ {\n        sum += current\n        current++\n\
    \    }\n    return sum\n}\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate :=\
    \ sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 1 },\n     {\
    \ actual: candidate(6), expected: 21 },\n     { actual: candidate(11), expected:\
    \ 66 },\n     { actual: candidate(30), expected: 465 },\n     { actual: candidate(100),\
    \ expected: 5050 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660073358
- exit_code: 2
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n < 0 {\n\
    \        errln(\"n must be non-negative\")\n    }\n    if n == 0 {\n        return\
    \ 0\n    }\n    if n == 1 {\n        return 1\n    }\n    n -= 2\n    return sum_to_n(n+1)\
    \ + sum_to_n(n)\n}\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 1 },\n     { actual:\
    \ candidate(6), expected: 21 },\n     { actual: candidate(11), expected: 66 },\n\
    \     { actual: candidate(30), expected: 465 },\n     { actual: candidate(100),\
    \ expected: 5050 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp6lmur7yw_test.go:21:9: undefined: errln

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073357
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n < 0 {\n\
    \        panic(fmt.Sprintf(\"Invalid argument: n < 0, n = %v\", n))\n    }\n\n\
    \    sum := 1\n    for i := 1; i <= n; i++ {\n        sum += i\n    }\n\n    return\
    \ sum\n}\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6),\
    \ expected: 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual:\
    \ candidate(30), expected: 465 },\n     { actual: candidate(100), expected: 5050\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmpx9ka6qlu_test.go:49: expected '%!s(int=1)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmpx9ka6qlu_test.go:49:\
    \ expected '%!s(int=21)', got '%!s(int=22)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmpx9ka6qlu_test.go:49: expected '%!s(int=66)', got '%!s(int=67)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmpx9ka6qlu_test.go:49:\
    \ expected '%!s(int=465)', got '%!s(int=466)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmpx9ka6qlu_test.go:49: expected '%!s(int=5050)', got '%!s(int=5051)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073358
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    var sum int =\
    \ 0\n    for i := 1; i < n; i++ {\n        sum += i\n    }\n    return sum\n}\n\
    \nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmpig5r4y_y_test.go:44: expected '%!s(int=1)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmpig5r4y_y_test.go:44:\
    \ expected '%!s(int=21)', got '%!s(int=15)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmpig5r4y_y_test.go:44: expected '%!s(int=66)', got '%!s(int=55)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmpig5r4y_y_test.go:44:\
    \ expected '%!s(int=465)', got '%!s(int=435)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmpig5r4y_y_test.go:44: expected '%!s(int=5050)', got '%!s(int=4950)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073359
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    var sum int\n\
    \    for i := 1; i < n; i++ {\n        sum += i\n    }\n    return sum\n}\n\n\
    func TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmpk1n1i0le_test.go:44: expected '%!s(int=1)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmpk1n1i0le_test.go:44:\
    \ expected '%!s(int=21)', got '%!s(int=15)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmpk1n1i0le_test.go:44: expected '%!s(int=66)', got '%!s(int=55)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmpk1n1i0le_test.go:44:\
    \ expected '%!s(int=465)', got '%!s(int=435)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmpk1n1i0le_test.go:44: expected '%!s(int=5050)', got '%!s(int=4950)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073359
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    var sum int\n\
    \    for i := 1; i <= n; i++ {\n        sum += i\n    }\n    return sum\n}\n\n\
    func TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.005s\n"
  timestamp: 1660073152
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n < 1 {\n\
    \        return 0\n    }\n    var result int = 1\n    for {\n        result =\
    \ (result + n) % 10\n        n = (n + n) / 10\n        if n == 0 {\n         \
    \   break\n        }\n    }\n    return result\n}\n\nfunc TestSum_To_N(t *testing.T)\
    \ {\n  candidate := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 1 },\n     { actual: candidate(6), expected: 21 },\n     { actual:\
    \ candidate(11), expected: 66 },\n     { actual: candidate(30), expected: 465\
    \ },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmpyrnv4ypv_test.go:51: expected '%!s(int=1)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmpyrnv4ypv_test.go:51:\
    \ expected '%!s(int=21)', got '%!s(int=8)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmpyrnv4ypv_test.go:51: expected '%!s(int=66)', got '%!s(int=4)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmpyrnv4ypv_test.go:51:\
    \ expected '%!s(int=465)', got '%!s(int=8)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmpyrnv4ypv_test.go:51: expected '%!s(int=5050)', got '%!s(int=5)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073359
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    sum := 0\n  \
    \  for i := 0; i < n; i++ {\n        sum += i\n    }\n    return sum\n}\n\nfunc\
    \ TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmp1puwu373_test.go:44: expected '%!s(int=1)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmp1puwu373_test.go:44:\
    \ expected '%!s(int=21)', got '%!s(int=15)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmp1puwu373_test.go:44: expected '%!s(int=66)', got '%!s(int=55)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmp1puwu373_test.go:44:\
    \ expected '%!s(int=465)', got '%!s(int=435)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmp1puwu373_test.go:44: expected '%!s(int=5050)', got '%!s(int=4950)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073359
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    total := 1\n\
    \    for i := 1; i <= n; i++ {\n        total *= i\n    }\n    return total\n\
    }\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__1\
    \ (0.00s)\n        tmp69auwlte_test.go:44: expected '%!s(int=21)', got '%!s(int=720)'\n\
    \    --- FAIL: TestSum_To_N/test_num__2 (0.00s)\n        tmp69auwlte_test.go:44:\
    \ expected '%!s(int=66)', got '%!s(int=39916800)'\n    --- FAIL: TestSum_To_N/test_num__3\
    \ (0.00s)\n        tmp69auwlte_test.go:44: expected '%!s(int=465)', got '%!s(int=-8764578968847253504)'\n\
    \    --- FAIL: TestSum_To_N/test_num__4 (0.00s)\n        tmp69auwlte_test.go:44:\
    \ expected '%!s(int=5050)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073359
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n == 0 {\n\
    \        return 1\n    }\n    if n < 0 {\n        n = -n\n    }\n    var a int\
    \ = 1\n    for i := 0; i < n; i++ {\n        a += i\n    }\n    return a\n}\n\n\
    func TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__1\
    \ (0.00s)\n        tmpqijb9rzl_test.go:50: expected '%!s(int=21)', got '%!s(int=16)'\n\
    \    --- FAIL: TestSum_To_N/test_num__2 (0.00s)\n        tmpqijb9rzl_test.go:50:\
    \ expected '%!s(int=66)', got '%!s(int=56)'\n    --- FAIL: TestSum_To_N/test_num__3\
    \ (0.00s)\n        tmpqijb9rzl_test.go:50: expected '%!s(int=465)', got '%!s(int=436)'\n\
    \    --- FAIL: TestSum_To_N/test_num__4 (0.00s)\n        tmpqijb9rzl_test.go:50:\
    \ expected '%!s(int=5050)', got '%!s(int=4951)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073359
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    sum := 0\n  \
    \  for i := 1; i <= n; i++ {\n        sum += i\n    }\n    return sum\n}\n\nfunc\
    \ TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.005s\n"
  timestamp: 1660073152
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    m := 1\n    for\
    \ i := 1; i <= n; i++ {\n        m = m + i\n    }\n    return m\n}\n\nfunc TestSum_To_N(t\
    \ *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 1 },\n     { actual: candidate(6), expected: 21 },\n     { actual:\
    \ candidate(11), expected: 66 },\n     { actual: candidate(30), expected: 465\
    \ },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmp1nkksp3v_test.go:44: expected '%!s(int=1)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmp1nkksp3v_test.go:44:\
    \ expected '%!s(int=21)', got '%!s(int=22)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmp1nkksp3v_test.go:44: expected '%!s(int=66)', got '%!s(int=67)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmp1nkksp3v_test.go:44:\
    \ expected '%!s(int=465)', got '%!s(int=466)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmp1nkksp3v_test.go:44: expected '%!s(int=5050)', got '%!s(int=5051)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073359
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    sum := 0\n  \
    \  for i := 1; i <= n; i++ {\n        sum += i\n    }\n    return sum\n}\n\nfunc\
    \ TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.005s\n"
  timestamp: 1660073152
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n == 0 {\n\
    \        return 1\n    }\n\n    if n == 1 {\n        return 1\n    }\n\n    return\
    \ n*(n-1)/2\n}\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 1 },\n     { actual:\
    \ candidate(6), expected: 21 },\n     { actual: candidate(11), expected: 66 },\n\
    \     { actual: candidate(30), expected: 465 },\n     { actual: candidate(100),\
    \ expected: 5050 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__1\
    \ (0.00s)\n        tmp3927f805_test.go:48: expected '%!s(int=21)', got '%!s(int=15)'\n\
    \    --- FAIL: TestSum_To_N/test_num__2 (0.00s)\n        tmp3927f805_test.go:48:\
    \ expected '%!s(int=66)', got '%!s(int=55)'\n    --- FAIL: TestSum_To_N/test_num__3\
    \ (0.00s)\n        tmp3927f805_test.go:48: expected '%!s(int=465)', got '%!s(int=435)'\n\
    \    --- FAIL: TestSum_To_N/test_num__4 (0.00s)\n        tmp3927f805_test.go:48:\
    \ expected '%!s(int=5050)', got '%!s(int=4950)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073359
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    var result int\n\
    \    for i := 1; i <= n; i++ {\n        result += i\n    }\n    return result\n\
    }\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660073234
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    sum := 0\n  \
    \  for i := 1; i <= n; i++ {\n        sum += i\n    }\n    return sum\n}\n\nfunc\
    \ TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.005s\n"
  timestamp: 1660073152
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    n -= n%10\n \
    \   return n%10\n}\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 1 },\n     { actual:\
    \ candidate(6), expected: 21 },\n     { actual: candidate(11), expected: 66 },\n\
    \     { actual: candidate(30), expected: 465 },\n     { actual: candidate(100),\
    \ expected: 5050 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmp9o4o3orn_test.go:41: expected '%!s(int=1)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmp9o4o3orn_test.go:41:\
    \ expected '%!s(int=21)', got '%!s(int=0)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmp9o4o3orn_test.go:41: expected '%!s(int=66)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmp9o4o3orn_test.go:41:\
    \ expected '%!s(int=465)', got '%!s(int=0)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmp9o4o3orn_test.go:41: expected '%!s(int=5050)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073359
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n == 0 {\n\
    \        return 1\n    }\n\n    sum := 1\n    for i := 1; i <= n; i++ {\n    \
    \    sum += i\n    }\n\n    return sum\n}\n\nfunc TestSum_To_N(t *testing.T) {\n\
    \  candidate := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1), expected:\
    \ 1 },\n     { actual: candidate(6), expected: 21 },\n     { actual: candidate(11),\
    \ expected: 66 },\n     { actual: candidate(30), expected: 465 },\n     { actual:\
    \ candidate(100), expected: 5050 },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmpzca0e6xl_test.go:49: expected '%!s(int=1)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmpzca0e6xl_test.go:49:\
    \ expected '%!s(int=21)', got '%!s(int=22)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmpzca0e6xl_test.go:49: expected '%!s(int=66)', got '%!s(int=67)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmpzca0e6xl_test.go:49:\
    \ expected '%!s(int=465)', got '%!s(int=466)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmpzca0e6xl_test.go:49: expected '%!s(int=5050)', got '%!s(int=5051)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073359
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    s := 0\n    for\
    \ i := 1; i <= n; i++ {\n        s += i\n    }\n    return s\n}\n\nfunc TestSum_To_N(t\
    \ *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 1 },\n     { actual: candidate(6), expected: 21 },\n     { actual:\
    \ candidate(11), expected: 66 },\n     { actual: candidate(30), expected: 465\
    \ },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660073230
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    sum, i := 1,\
    \ 0\n    for i < n {\n        sum += i\n        i++\n    }\n    return sum\n}\n\
    \nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__1\
    \ (0.00s)\n        tmp5oae8ul9_test.go:45: expected '%!s(int=21)', got '%!s(int=16)'\n\
    \    --- FAIL: TestSum_To_N/test_num__2 (0.00s)\n        tmp5oae8ul9_test.go:45:\
    \ expected '%!s(int=66)', got '%!s(int=56)'\n    --- FAIL: TestSum_To_N/test_num__3\
    \ (0.00s)\n        tmp5oae8ul9_test.go:45: expected '%!s(int=465)', got '%!s(int=436)'\n\
    \    --- FAIL: TestSum_To_N/test_num__4 (0.00s)\n        tmp5oae8ul9_test.go:45:\
    \ expected '%!s(int=5050)', got '%!s(int=4951)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073359
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    var sum int =\
    \ 1\n    for i := 1; i <= n; i++ {\n        sum += i\n    }\n    return sum\n\
    }\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmppmqr5ycw_test.go:44: expected '%!s(int=1)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmppmqr5ycw_test.go:44:\
    \ expected '%!s(int=21)', got '%!s(int=22)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmppmqr5ycw_test.go:44: expected '%!s(int=66)', got '%!s(int=67)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmppmqr5ycw_test.go:44:\
    \ expected '%!s(int=465)', got '%!s(int=466)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmppmqr5ycw_test.go:44: expected '%!s(int=5050)', got '%!s(int=5051)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073260
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    sum := 0\n  \
    \  for i := 1; i <= n; i++ {\n        sum += i\n    }\n    return sum\n}\n\nfunc\
    \ TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.005s\n"
  timestamp: 1660073152
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    var sum int =\
    \ 1\n    for i := 1; i < n; i++ {\n        sum += i\n    }\n    return sum\n}\n\
    \nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__1\
    \ (0.00s)\n        tmpi04ch8hg_test.go:44: expected '%!s(int=21)', got '%!s(int=16)'\n\
    \    --- FAIL: TestSum_To_N/test_num__2 (0.00s)\n        tmpi04ch8hg_test.go:44:\
    \ expected '%!s(int=66)', got '%!s(int=56)'\n    --- FAIL: TestSum_To_N/test_num__3\
    \ (0.00s)\n        tmpi04ch8hg_test.go:44: expected '%!s(int=465)', got '%!s(int=436)'\n\
    \    --- FAIL: TestSum_To_N/test_num__4 (0.00s)\n        tmpi04ch8hg_test.go:44:\
    \ expected '%!s(int=5050)', got '%!s(int=4951)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073359
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    sum := 0\n  \
    \  for i := 1; i <= n; i++ {\n        sum += i\n    }\n    return sum\n}\n\nfunc\
    \ TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.005s\n"
  timestamp: 1660073152
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    total := 1\n\
    \    for i := 1; i <= n; i++ {\n        total += i\n    }\n    return total\n\
    }\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmpos520tmk_test.go:44: expected '%!s(int=1)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmpos520tmk_test.go:44:\
    \ expected '%!s(int=21)', got '%!s(int=22)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmpos520tmk_test.go:44: expected '%!s(int=66)', got '%!s(int=67)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmpos520tmk_test.go:44:\
    \ expected '%!s(int=465)', got '%!s(int=466)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmpos520tmk_test.go:44: expected '%!s(int=5050)', got '%!s(int=5051)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073355
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    n += 1\n    sum\
    \ := 1\n    for i := 0; i < n; i++ {\n        sum += i\n    }\n    return sum\n\
    }\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmpl64loqql_test.go:45: expected '%!s(int=1)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmpl64loqql_test.go:45:\
    \ expected '%!s(int=21)', got '%!s(int=22)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmpl64loqql_test.go:45: expected '%!s(int=66)', got '%!s(int=67)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmpl64loqql_test.go:45:\
    \ expected '%!s(int=465)', got '%!s(int=466)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmpl64loqql_test.go:45: expected '%!s(int=5050)', got '%!s(int=5051)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073359
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    sum := 0\n  \
    \  for i := 1; i <= n; i++ {\n        sum += i\n    }\n    return sum\n}\n\nfunc\
    \ TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.005s\n"
  timestamp: 1660073152
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n <= 0 {\n\
    \        return 0\n    }\n\n    total := 0\n    for i := 1; i <= n; i++ {\n  \
    \      total += i\n    }\n    return total\n}\n\nfunc TestSum_To_N(t *testing.T)\
    \ {\n  candidate := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 1 },\n     { actual: candidate(6), expected: 21 },\n     { actual:\
    \ candidate(11), expected: 66 },\n     { actual: candidate(30), expected: 465\
    \ },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660073359
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    var acc int\n\
    \    for i := 1; i <= n; i++ {\n        acc += i\n    }\n    return acc\n}\n\n\
    func TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660073355
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    var sum int =\
    \ 1\n    for i := 1; i <= n; i++ {\n        sum += i\n    }\n    return sum\n\
    }\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmppmqr5ycw_test.go:44: expected '%!s(int=1)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmppmqr5ycw_test.go:44:\
    \ expected '%!s(int=21)', got '%!s(int=22)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmppmqr5ycw_test.go:44: expected '%!s(int=66)', got '%!s(int=67)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmppmqr5ycw_test.go:44:\
    \ expected '%!s(int=465)', got '%!s(int=466)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmppmqr5ycw_test.go:44: expected '%!s(int=5050)', got '%!s(int=5051)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073260
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    // YOUR CODE\
    \ HERE\n    \n    return n\n}\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate\
    \ := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 1 },\n     {\
    \ actual: candidate(6), expected: 21 },\n     { actual: candidate(11), expected:\
    \ 66 },\n     { actual: candidate(30), expected: 465 },\n     { actual: candidate(100),\
    \ expected: 5050 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__1\
    \ (0.00s)\n        tmpsis9bwt9_test.go:42: expected '%!s(int=21)', got '%!s(int=6)'\n\
    \    --- FAIL: TestSum_To_N/test_num__2 (0.00s)\n        tmpsis9bwt9_test.go:42:\
    \ expected '%!s(int=66)', got '%!s(int=11)'\n    --- FAIL: TestSum_To_N/test_num__3\
    \ (0.00s)\n        tmpsis9bwt9_test.go:42: expected '%!s(int=465)', got '%!s(int=30)'\n\
    \    --- FAIL: TestSum_To_N/test_num__4 (0.00s)\n        tmpsis9bwt9_test.go:42:\
    \ expected '%!s(int=5050)', got '%!s(int=100)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073359
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    total := 1\n\
    \    for i := 1; i <= n; i++ {\n        total *= i\n    }\n    return total\n\
    }\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__1\
    \ (0.00s)\n        tmp69auwlte_test.go:44: expected '%!s(int=21)', got '%!s(int=720)'\n\
    \    --- FAIL: TestSum_To_N/test_num__2 (0.00s)\n        tmp69auwlte_test.go:44:\
    \ expected '%!s(int=66)', got '%!s(int=39916800)'\n    --- FAIL: TestSum_To_N/test_num__3\
    \ (0.00s)\n        tmp69auwlte_test.go:44: expected '%!s(int=465)', got '%!s(int=-8764578968847253504)'\n\
    \    --- FAIL: TestSum_To_N/test_num__4 (0.00s)\n        tmp69auwlte_test.go:44:\
    \ expected '%!s(int=5050)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073359
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    sum := 1\n  \
    \  for i := 1; i <= n; i++ {\n        sum += i\n    }\n    return sum\n}\n\nfunc\
    \ TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmpbk0di91n_test.go:44: expected '%!s(int=1)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmpbk0di91n_test.go:44:\
    \ expected '%!s(int=21)', got '%!s(int=22)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmpbk0di91n_test.go:44: expected '%!s(int=66)', got '%!s(int=67)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmpbk0di91n_test.go:44:\
    \ expected '%!s(int=465)', got '%!s(int=466)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmpbk0di91n_test.go:44: expected '%!s(int=5050)', got '%!s(int=5051)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073260
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n == 0 {\n\
    \        return 1\n    }\n\n    x := 0\n    for x != n-1 && x != 0 {\n       \
    \ x += n\n    }\n\n    return x\n}\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate\
    \ := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 1 },\n     {\
    \ actual: candidate(6), expected: 21 },\n     { actual: candidate(11), expected:\
    \ 66 },\n     { actual: candidate(30), expected: 465 },\n     { actual: candidate(100),\
    \ expected: 5050 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmp5gxjlt9t_test.go:49: expected '%!s(int=1)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmp5gxjlt9t_test.go:49:\
    \ expected '%!s(int=21)', got '%!s(int=0)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmp5gxjlt9t_test.go:49: expected '%!s(int=66)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmp5gxjlt9t_test.go:49:\
    \ expected '%!s(int=465)', got '%!s(int=0)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmp5gxjlt9t_test.go:49: expected '%!s(int=5050)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073359
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    var total int\
    \ = 1\n    for i := 0; i < n; i++ {\n        total += i\n    }\n    return total\n\
    }\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__1\
    \ (0.00s)\n        tmp16d2q0rd_test.go:44: expected '%!s(int=21)', got '%!s(int=16)'\n\
    \    --- FAIL: TestSum_To_N/test_num__2 (0.00s)\n        tmp16d2q0rd_test.go:44:\
    \ expected '%!s(int=66)', got '%!s(int=56)'\n    --- FAIL: TestSum_To_N/test_num__3\
    \ (0.00s)\n        tmp16d2q0rd_test.go:44: expected '%!s(int=465)', got '%!s(int=436)'\n\
    \    --- FAIL: TestSum_To_N/test_num__4 (0.00s)\n        tmp16d2q0rd_test.go:44:\
    \ expected '%!s(int=5050)', got '%!s(int=4951)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073360
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    var sum int\n\
    \    for i := 1; i <= n; i++ {\n        sum += i\n    }\n    return sum\n}\n\n\
    func TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.005s\n"
  timestamp: 1660073152
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    total := 0\n\
    \    for i := 1; i <= n; i++ {\n        total += i\n    }\n    return total\n\
    }\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660073232
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n <= 0 {\n\
    \        return 0\n    }\n    return n + sum_to_n(n-1)\n}\n\nfunc TestSum_To_N(t\
    \ *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 1 },\n     { actual: candidate(6), expected: 21 },\n     { actual:\
    \ candidate(11), expected: 66 },\n     { actual: candidate(30), expected: 465\
    \ },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.004s\n"
  timestamp: 1660073232
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n < 0 {\n\
    \        fmt.Println(\"n must be positive!\")\n        return 1\n    }\n    if\
    \ n == 0 {\n        return 1\n    }\n    var acc int = 1\n    for i := 1; i <=\
    \ n; i++ {\n        acc = acc + i\n    }\n    return acc\n}\n\nfunc TestSum_To_N(t\
    \ *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 1 },\n     { actual: candidate(6), expected: 21 },\n     { actual:\
    \ candidate(11), expected: 66 },\n     { actual: candidate(30), expected: 465\
    \ },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmpbyq8x79i_test.go:51: expected '%!s(int=1)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmpbyq8x79i_test.go:51:\
    \ expected '%!s(int=21)', got '%!s(int=22)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmpbyq8x79i_test.go:51: expected '%!s(int=66)', got '%!s(int=67)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmpbyq8x79i_test.go:51:\
    \ expected '%!s(int=465)', got '%!s(int=466)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmpbyq8x79i_test.go:51: expected '%!s(int=5050)', got '%!s(int=5051)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073360
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    var sum int =\
    \ 0\n    for i := 1; i <= n; i++ {\n        sum += i\n    }\n    return sum\n\
    }\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.005s\n"
  timestamp: 1660073190
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n == 0 {\n\
    \        return 1\n    }\n\n    if n == 1 {\n        return 1\n    }\n\n    return\
    \ n*(n + 1)/2\n}\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 1 },\n     { actual:\
    \ candidate(6), expected: 21 },\n     { actual: candidate(11), expected: 66 },\n\
    \     { actual: candidate(30), expected: 465 },\n     { actual: candidate(100),\
    \ expected: 5050 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660073360
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n <= 0 {\n\
    \        return 0\n    }\n    sum := 1\n    for i := 0; i < n; i++ {\n       \
    \ sum += i\n    }\n    return sum\n}\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate\
    \ := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 1 },\n     {\
    \ actual: candidate(6), expected: 21 },\n     { actual: candidate(11), expected:\
    \ 66 },\n     { actual: candidate(30), expected: 465 },\n     { actual: candidate(100),\
    \ expected: 5050 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__1\
    \ (0.00s)\n        tmpn35kcqlo_test.go:47: expected '%!s(int=21)', got '%!s(int=16)'\n\
    \    --- FAIL: TestSum_To_N/test_num__2 (0.00s)\n        tmpn35kcqlo_test.go:47:\
    \ expected '%!s(int=66)', got '%!s(int=56)'\n    --- FAIL: TestSum_To_N/test_num__3\
    \ (0.00s)\n        tmpn35kcqlo_test.go:47: expected '%!s(int=465)', got '%!s(int=436)'\n\
    \    --- FAIL: TestSum_To_N/test_num__4 (0.00s)\n        tmpn35kcqlo_test.go:47:\
    \ expected '%!s(int=5050)', got '%!s(int=4951)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073360
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n <= 0 {\n\
    \        return 0\n    }\n\n    if n == 1 {\n        return 1\n    }\n\n    return\
    \ n + sum_to_n(n - 1)\n}\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate :=\
    \ sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 1 },\n     {\
    \ actual: candidate(6), expected: 21 },\n     { actual: candidate(11), expected:\
    \ 66 },\n     { actual: candidate(30), expected: 465 },\n     { actual: candidate(100),\
    \ expected: 5050 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660073360
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    var result int\n\
    \    for i := 1; i <= n; i++ {\n        result += i\n    }\n    return result\n\
    }\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660073234
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    total := 1\n\
    \    for i := 1; i <= n; i++ {\n        total += i\n    }\n    return total\n\
    }\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmpos520tmk_test.go:44: expected '%!s(int=1)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmpos520tmk_test.go:44:\
    \ expected '%!s(int=21)', got '%!s(int=22)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmpos520tmk_test.go:44: expected '%!s(int=66)', got '%!s(int=67)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmpos520tmk_test.go:44:\
    \ expected '%!s(int=465)', got '%!s(int=466)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmpos520tmk_test.go:44: expected '%!s(int=5050)', got '%!s(int=5051)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073355
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n%2 == 0 {\n\
    \        return n + sum_to_n(n//2)\n    }\n    return sum_to_n(n-1)\n}\n\nfunc\
    \ TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpv_546892_test.go:21:30: missing '','' before newline in argument list

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660073359
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n == 0 ||\
    \ n == 1 {\n        return 1\n    }\n    i := 1\n    result := 1\n    for n >\
    \ 0 {\n        result = result + i\n        n = n - 1\n        i = i + 1\n   \
    \ }\n    return result\n}\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate :=\
    \ sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 1 },\n     {\
    \ actual: candidate(6), expected: 21 },\n     { actual: candidate(11), expected:\
    \ 66 },\n     { actual: candidate(30), expected: 465 },\n     { actual: candidate(100),\
    \ expected: 5050 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__1\
    \ (0.00s)\n        tmp0glbmnbp_test.go:50: expected '%!s(int=21)', got '%!s(int=22)'\n\
    \    --- FAIL: TestSum_To_N/test_num__2 (0.00s)\n        tmp0glbmnbp_test.go:50:\
    \ expected '%!s(int=66)', got '%!s(int=67)'\n    --- FAIL: TestSum_To_N/test_num__3\
    \ (0.00s)\n        tmp0glbmnbp_test.go:50: expected '%!s(int=465)', got '%!s(int=466)'\n\
    \    --- FAIL: TestSum_To_N/test_num__4 (0.00s)\n        tmp0glbmnbp_test.go:50:\
    \ expected '%!s(int=5050)', got '%!s(int=5051)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073361
- exit_code: 2
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    total = 0\n \
    \   for i := 1; i <= n; i++ {\n        total += i\n    }\n    return total\n}\n\
    \nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpav9q_6k8_test.go:20:5: undefined: total

    /tmp/tmpav9q_6k8_test.go:22:9: undefined: total

    /tmp/tmpav9q_6k8_test.go:24:12: undefined: total

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073360
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    var sum int\n\
    \    for i := 1; i <= n; i++ {\n        sum += i\n    }\n    return sum\n}\n\n\
    func TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.005s\n"
  timestamp: 1660073152
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    // Write your\
    \ code here\n    var sum int = 0\n    i := 0\n    for i < n {\n        sum = sum\
    \ + i\n        i = i + 1\n    }\n    return sum\n}\n`\n        );\n    });\n});\n\
    \ndescribe(\"Variables\", () => {\n    it(\"should support local variables\",\
    \ () => {\n        var x = 1;\n        var y = 2;\n\n        assertCodegen(\n\
    \            \"local int x; int y; [x, y] | x | y\",\n            `package main\n\
    \nimport \"fmt\"\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 1 },\n     { actual:\
    \ candidate(6), expected: 21 },\n     { actual: candidate(11), expected: 66 },\n\
    \     { actual: candidate(30), expected: 465 },\n     { actual: candidate(100),\
    \ expected: 5050 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: "# command-line-arguments\n/tmp/tmpj7h1xazs_test.go:29:1: expected declaration,\
    \ found `\n        );\n    });\n});\n\ndescribe(\"Variables\", () => {\n    it(\"\
    should support local variables\", () => {\n        var x = 1;\n        var y =\
    \ 2;\n\n        assertCodegen(\n            \"local int x; int y; [x, y] | x |\
    \ y\",\n            `\n"
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660073360
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    var total int\n\
    \    for i := 1; i <= n; i++ {\n        total += i\n    }\n    return total\n\
    }\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660073361
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    s := 0\n    for\
    \ i := 1; i <= n; i++ {\n        s += i\n    }\n    return s\n}\n\nfunc TestSum_To_N(t\
    \ *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 1 },\n     { actual: candidate(6), expected: 21 },\n     { actual:\
    \ candidate(11), expected: 66 },\n     { actual: candidate(30), expected: 465\
    \ },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660073230
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    var result int\n\
    \    result += (n - 1) * n + 2\n    for i := 0; i < n; i++ {\n        result +=\
    \ i * i\n    }\n    return result\n}\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate\
    \ := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 1 },\n     {\
    \ actual: candidate(6), expected: 21 },\n     { actual: candidate(11), expected:\
    \ 66 },\n     { actual: candidate(30), expected: 465 },\n     { actual: candidate(100),\
    \ expected: 5050 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmp656d_58y_test.go:45: expected '%!s(int=1)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmp656d_58y_test.go:45:\
    \ expected '%!s(int=21)', got '%!s(int=87)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmp656d_58y_test.go:45: expected '%!s(int=66)', got '%!s(int=497)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmp656d_58y_test.go:45:\
    \ expected '%!s(int=465)', got '%!s(int=9427)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmp656d_58y_test.go:45: expected '%!s(int=5050)', got '%!s(int=338252)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073361
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    var sum int =\
    \ 1\n    for i := 1; i <= n; i++ {\n        sum += i\n    }\n    return sum\n\
    }\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmppmqr5ycw_test.go:44: expected '%!s(int=1)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmppmqr5ycw_test.go:44:\
    \ expected '%!s(int=21)', got '%!s(int=22)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmppmqr5ycw_test.go:44: expected '%!s(int=66)', got '%!s(int=67)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmppmqr5ycw_test.go:44:\
    \ expected '%!s(int=465)', got '%!s(int=466)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmppmqr5ycw_test.go:44: expected '%!s(int=5050)', got '%!s(int=5051)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073260
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n == 1 {\n\
    \        return 1\n    }\n    return n + sum_to_n(n - 1)\n}\n\nfunc TestSum_To_N(t\
    \ *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 1 },\n     { actual: candidate(6), expected: 21 },\n     { actual:\
    \ candidate(11), expected: 66 },\n     { actual: candidate(30), expected: 465\
    \ },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660073260
- exit_code: 2
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    i := 0\n    result\
    \ := 0\n    for i := 1; i <= n; i++ {\n        result += i\n    }\n    return\
    \ result\n}\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 1 },\n     { actual:\
    \ candidate(6), expected: 21 },\n     { actual: candidate(11), expected: 66 },\n\
    \     { actual: candidate(30), expected: 465 },\n     { actual: candidate(100),\
    \ expected: 5050 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp8xaw4qxw_test.go:20:5: i declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073361
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    sum := 0\n  \
    \  for i := 1; i <= n; i++ {\n        sum += i\n    }\n    return sum\n}\n\nfunc\
    \ TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.005s\n"
  timestamp: 1660073152
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n < 1 {\n\
    \        return n\n    }\n    if n == 1 {\n        return 1\n    }\n    sum2 :=\
    \ 0\n    max := n / 2\n    for i := 1; i <= max; i++ {\n        sum2 += i\n  \
    \  }\n    return sum2\n}\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate :=\
    \ sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 1 },\n     {\
    \ actual: candidate(6), expected: 21 },\n     { actual: candidate(11), expected:\
    \ 66 },\n     { actual: candidate(30), expected: 465 },\n     { actual: candidate(100),\
    \ expected: 5050 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__1\
    \ (0.00s)\n        tmpafu3li9n_test.go:51: expected '%!s(int=21)', got '%!s(int=6)'\n\
    \    --- FAIL: TestSum_To_N/test_num__2 (0.00s)\n        tmpafu3li9n_test.go:51:\
    \ expected '%!s(int=66)', got '%!s(int=15)'\n    --- FAIL: TestSum_To_N/test_num__3\
    \ (0.00s)\n        tmpafu3li9n_test.go:51: expected '%!s(int=465)', got '%!s(int=120)'\n\
    \    --- FAIL: TestSum_To_N/test_num__4 (0.00s)\n        tmpafu3li9n_test.go:51:\
    \ expected '%!s(int=5050)', got '%!s(int=1275)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073361
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    total := 0\n\
    \    for i := 1; i <= n; i++ {\n        total += i\n    }\n    return total\n\
    }\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660073232
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    sum := 1\n  \
    \  for i := 1; i <= n; i++ {\n        sum += i\n    }\n    return sum\n}\n\nfunc\
    \ TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmpbk0di91n_test.go:44: expected '%!s(int=1)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmpbk0di91n_test.go:44:\
    \ expected '%!s(int=21)', got '%!s(int=22)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmpbk0di91n_test.go:44: expected '%!s(int=66)', got '%!s(int=67)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmpbk0di91n_test.go:44:\
    \ expected '%!s(int=465)', got '%!s(int=466)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmpbk0di91n_test.go:44: expected '%!s(int=5050)', got '%!s(int=5051)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073260
- exit_code: null
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n < 1 {\n\
    \        fmt.Println(\"Error 1\")\n        return 1\n    }\n    if n == 1 {\n\
    \        fmt.Println(\"Error 2\")\n        return 1\n    }\n    \n    var result\
    \ int\n    \n    // The algorithm is very simple.\n    // 1. Take the last digit\
    \ of the number and add it to the result.\n    // 2. Subtract the last digit from\
    \ the number and add it to the result.\n    // 3. Repeat these two steps until\
    \ you run out of digits and then add the\n    //    last digit to the result.\n\
    \    \n    // The loop starts with the last digit.\n    result = n % 10\n    \n\
    \    for {\n        n = n / 10\n        result += n % 10\n        n /= 10\n  \
    \  } \n    \n    return result\n}\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate\
    \ := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 1 },\n     {\
    \ actual: candidate(6), expected: 21 },\n     { actual: candidate(11), expected:\
    \ 66 },\n     { actual: candidate(30), expected: 465 },\n     { actual: candidate(100),\
    \ expected: 5050 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660073374
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    var acc int\n\
    \    for i := 1; i <= n; i++ {\n        acc += i\n    }\n    return acc\n}\n\n\
    func TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660073355
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    total := 1\n\
    \    for i := 0; i < n; i++ {\n        total += i\n    }\n    return total\n}\n\
    \nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__1\
    \ (0.00s)\n        tmp93ve081y_test.go:44: expected '%!s(int=21)', got '%!s(int=16)'\n\
    \    --- FAIL: TestSum_To_N/test_num__2 (0.00s)\n        tmp93ve081y_test.go:44:\
    \ expected '%!s(int=66)', got '%!s(int=56)'\n    --- FAIL: TestSum_To_N/test_num__3\
    \ (0.00s)\n        tmp93ve081y_test.go:44: expected '%!s(int=465)', got '%!s(int=436)'\n\
    \    --- FAIL: TestSum_To_N/test_num__4 (0.00s)\n        tmp93ve081y_test.go:44:\
    \ expected '%!s(int=5050)', got '%!s(int=4951)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073353
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    var sum int =\
    \ 0\n    for i := 1; i <= n; i++ {\n        sum += i\n    }\n    return sum\n\
    }\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.005s\n"
  timestamp: 1660073190
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n<=0 {\n \
    \       return n\n    }\n    if n==1 {\n        return n\n    }\n    x := 1\n\
    \    for i := 2; i < n; i++ {\n        x *= i\n    }\n    return x\n}\n\nfunc\
    \ TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__1\
    \ (0.00s)\n        tmp5t2ztfsz_test.go:50: expected '%!s(int=21)', got '%!s(int=120)'\n\
    \    --- FAIL: TestSum_To_N/test_num__2 (0.00s)\n        tmp5t2ztfsz_test.go:50:\
    \ expected '%!s(int=66)', got '%!s(int=3628800)'\n    --- FAIL: TestSum_To_N/test_num__3\
    \ (0.00s)\n        tmp5t2ztfsz_test.go:50: expected '%!s(int=465)', got '%!s(int=-7055958792655077376)'\n\
    \    --- FAIL: TestSum_To_N/test_num__4 (0.00s)\n        tmp5t2ztfsz_test.go:50:\
    \ expected '%!s(int=5050)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073361
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    sum := 0\n  \
    \  for i := 0; i < n; i++ {\n        sum += i\n    }\n    return sum\n}\n\nfunc\
    \ TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmp1puwu373_test.go:44: expected '%!s(int=1)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmp1puwu373_test.go:44:\
    \ expected '%!s(int=21)', got '%!s(int=15)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmp1puwu373_test.go:44: expected '%!s(int=66)', got '%!s(int=55)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmp1puwu373_test.go:44:\
    \ expected '%!s(int=465)', got '%!s(int=435)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmp1puwu373_test.go:44: expected '%!s(int=5050)', got '%!s(int=4950)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073359
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    sum := 0\n  \
    \  for i := 1; i <= n; i++ {\n        sum += i\n    }\n    return sum\n}\n\nfunc\
    \ TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.005s\n"
  timestamp: 1660073152
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n < 1 {\n\
    \        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return\
    \ n + sum_to_n(n - 1)\n}\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate :=\
    \ sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 1 },\n     {\
    \ actual: candidate(6), expected: 21 },\n     { actual: candidate(11), expected:\
    \ 66 },\n     { actual: candidate(30), expected: 465 },\n     { actual: candidate(100),\
    \ expected: 5050 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.005s\n"
  timestamp: 1660073260
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    var sum int\n\
    \    for i := 1; i < n; i++ {\n        sum += i\n    }\n    return sum\n}\nfunc\
    \ TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmpkdnhg8pw_test.go:43: expected '%!s(int=1)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmpkdnhg8pw_test.go:43:\
    \ expected '%!s(int=21)', got '%!s(int=15)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmpkdnhg8pw_test.go:43: expected '%!s(int=66)', got '%!s(int=55)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmpkdnhg8pw_test.go:43:\
    \ expected '%!s(int=465)', got '%!s(int=435)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmpkdnhg8pw_test.go:43: expected '%!s(int=5050)', got '%!s(int=4950)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073361
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n < 1 {\n\
    \        return n\n    }\n    if n == 1 {\n        return 1\n    }\n    return\
    \ n + sum_to_n(n - 1)\n}\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate :=\
    \ sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 1 },\n     {\
    \ actual: candidate(6), expected: 21 },\n     { actual: candidate(11), expected:\
    \ 66 },\n     { actual: candidate(30), expected: 465 },\n     { actual: candidate(100),\
    \ expected: 5050 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.004s\n"
  timestamp: 1660073285
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n <= 0 {\n\
    \        return 1\n    }\n    return n * sum_to_n(n - 1)\n}\n\nfunc TestSum_To_N(t\
    \ *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 1 },\n     { actual: candidate(6), expected: 21 },\n     { actual:\
    \ candidate(11), expected: 66 },\n     { actual: candidate(30), expected: 465\
    \ },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__1\
    \ (0.00s)\n        tmpfuvaen5i_test.go:43: expected '%!s(int=21)', got '%!s(int=720)'\n\
    \    --- FAIL: TestSum_To_N/test_num__2 (0.00s)\n        tmpfuvaen5i_test.go:43:\
    \ expected '%!s(int=66)', got '%!s(int=39916800)'\n    --- FAIL: TestSum_To_N/test_num__3\
    \ (0.00s)\n        tmpfuvaen5i_test.go:43: expected '%!s(int=465)', got '%!s(int=-8764578968847253504)'\n\
    \    --- FAIL: TestSum_To_N/test_num__4 (0.00s)\n        tmpfuvaen5i_test.go:43:\
    \ expected '%!s(int=5050)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073361
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    x := 1\n    for\
    \ i := 1; i <= n; i++ {\n        x += i\n    }\n    return x\n}\n\nfunc TestSum_To_N(t\
    \ *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 1 },\n     { actual: candidate(6), expected: 21 },\n     { actual:\
    \ candidate(11), expected: 66 },\n     { actual: candidate(30), expected: 465\
    \ },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmpu5gyy81v_test.go:44: expected '%!s(int=1)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmpu5gyy81v_test.go:44:\
    \ expected '%!s(int=21)', got '%!s(int=22)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmpu5gyy81v_test.go:44: expected '%!s(int=66)', got '%!s(int=67)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmpu5gyy81v_test.go:44:\
    \ expected '%!s(int=465)', got '%!s(int=466)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmpu5gyy81v_test.go:44: expected '%!s(int=5050)', got '%!s(int=5051)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073361
- exit_code: 2
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n < 1 {\n\
    \        fmt.Println(\"n must be greater than 0\")\n        exit (1)\n    }\n\
    \    s := 1\n    for i := 0; i < n; i++ {\n        s += i\n    }\n    return s\n\
    }\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp450fj5vd_test.go:22:9: undefined: exit

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073361
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    sum := 0\n  \
    \  for i := 1; i <= n; i++ {\n        sum += i\n    }\n    return sum\n}\n\nfunc\
    \ TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.005s\n"
  timestamp: 1660073152
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    var sum int\n\
    \    for i := 1; i <= n; i++ {\n        sum += i\n    }\n    return sum\n}\n\n\
    func TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.005s\n"
  timestamp: 1660073152
- exit_code: 2
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n <= 0 {\n\
    \        return 0\n    }\n    var result int\n    result := (n / 10) + (n % 10)\n\
    \    if result > 9 {\n        result = 1\n    }\n    return result\n}\n\nfunc\
    \ TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpnzy73o01_test.go:24:12: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073361
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n == 0 {\n\
    \        return 1\n    }\n\n    result := 0\n    for i := 1; i <= n; i++ {\n \
    \       result = result + i\n    }\n\n    return result\n}\n\nfunc TestSum_To_N(t\
    \ *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 1 },\n     { actual: candidate(6), expected: 21 },\n     { actual:\
    \ candidate(11), expected: 66 },\n     { actual: candidate(30), expected: 465\
    \ },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660073361
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    sum := 1\n  \
    \  for i := 0; i < n; i++ {\n        sum += i\n    }\n    return sum\n}\n\nfunc\
    \ TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__1\
    \ (0.00s)\n        tmpqohzjfr8_test.go:44: expected '%!s(int=21)', got '%!s(int=16)'\n\
    \    --- FAIL: TestSum_To_N/test_num__2 (0.00s)\n        tmpqohzjfr8_test.go:44:\
    \ expected '%!s(int=66)', got '%!s(int=56)'\n    --- FAIL: TestSum_To_N/test_num__3\
    \ (0.00s)\n        tmpqohzjfr8_test.go:44: expected '%!s(int=465)', got '%!s(int=436)'\n\
    \    --- FAIL: TestSum_To_N/test_num__4 (0.00s)\n        tmpqohzjfr8_test.go:44:\
    \ expected '%!s(int=5050)', got '%!s(int=4951)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073355
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    // Use this constant\
    \ to represent how many loops to do to reach n.\n    const max_loops = 100\n\n\
    \    // Use this constant to represent how many numbers to sum.\n    const n =\
    \ 100\n\n    // Initialize our sum variable to 0.\n    var sum = 0\n\n    // Use\
    \ the max_loops variable to keep track of how many loops we've gone through.\n\
    \    for i := 0; i < max_loops; i++ {\n        // Check if the number we're adding\
    \ is less than our current sum.\n        if n < sum {\n            // If it is,\
    \ just return our sum.\n            return sum\n        }\n\n        // Increment\
    \ our sum variable.\n        sum += n\n    }\n\n    // If we get this far, we've\
    \ summed up the correct amount of numbers.\n    return sum\n}\n</code>\n<|/ a\
    \ tags=sum,go |>\n<| c |>\nJust wondering what would be the advantage of using\
    \ a recursive solution here? Especially since a loop is more concise.\n<|/ c |>\n\
    <| c |>\nA recursive solution will likely be faster, but I think it's more readable,\
    \ and it's less lines of code. As a result, it might make more sense to use recursion\
    \ in the general case.\n<|/ c |>\n<| c |>\nI agree. Sometimes people are more\
    \ concerned with readability than speed. Plus, it makes the code more readable.\n\
    <|/ c |>\n<| c |>\nOk, I agree that it's more readable, especially for people\
    \ who already know algorithms. But I doubt a recursive solution is faster.\n<|/\
    \ c |>\n<| c |>\nThat's a fair point. I would definitely be interested to hear\
    \ some benchmarks to back up any claims. :)\n<|/ c |>\n<| a tags=sum,go dscore=0\
    \ |>\nHere's another simple solution\n<code>\nfunc TestSum_To_N(t *testing.T)\
    \ {\n  candidate := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 1 },\n     { actual: candidate(6), expected: 21 },\n     { actual:\
    \ candidate(11), expected: 66 },\n     { actual: candidate(30), expected: 465\
    \ },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpe7xb3vbh_test.go:44:1: expected declaration, found ''<''

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660073361
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    sum := 0\n  \
    \  for i := 1; i <= n; i++ {\n        sum += i\n    }\n    return sum\n}\n\nfunc\
    \ TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.005s\n"
  timestamp: 1660073152
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    sum := 0\n  \
    \  for i := 0; i < n; i++ {\n        sum += i\n    }\n    return sum\n}\n\nfunc\
    \ TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmp1puwu373_test.go:44: expected '%!s(int=1)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmp1puwu373_test.go:44:\
    \ expected '%!s(int=21)', got '%!s(int=15)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmp1puwu373_test.go:44: expected '%!s(int=66)', got '%!s(int=55)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmp1puwu373_test.go:44:\
    \ expected '%!s(int=465)', got '%!s(int=435)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmp1puwu373_test.go:44: expected '%!s(int=5050)', got '%!s(int=4950)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073359
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    s := 1\n    for\
    \ i := 1; i <= n; i++ {\n        s += i\n    }\n    return s\n}\n\nfunc TestSum_To_N(t\
    \ *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 1 },\n     { actual: candidate(6), expected: 21 },\n     { actual:\
    \ candidate(11), expected: 66 },\n     { actual: candidate(30), expected: 465\
    \ },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmpeylffe90_test.go:44: expected '%!s(int=1)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmpeylffe90_test.go:44:\
    \ expected '%!s(int=21)', got '%!s(int=22)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmpeylffe90_test.go:44: expected '%!s(int=66)', got '%!s(int=67)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmpeylffe90_test.go:44:\
    \ expected '%!s(int=465)', got '%!s(int=466)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmpeylffe90_test.go:44: expected '%!s(int=5050)', got '%!s(int=5051)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073361
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    summ := 0\n \
    \   for i := 1; i <= n; i++ {\n        summ += i\n    }\n    return summ\n}\n\n\
    func TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660073361
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    start := 1\n\
    \    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += start\n        start\
    \ = i\n    }\n    return sum\n}\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate\
    \ := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 1 },\n     {\
    \ actual: candidate(6), expected: 21 },\n     { actual: candidate(11), expected:\
    \ 66 },\n     { actual: candidate(30), expected: 465 },\n     { actual: candidate(100),\
    \ expected: 5050 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__1\
    \ (0.00s)\n        tmp3uuz8dz9_test.go:46: expected '%!s(int=21)', got '%!s(int=16)'\n\
    \    --- FAIL: TestSum_To_N/test_num__2 (0.00s)\n        tmp3uuz8dz9_test.go:46:\
    \ expected '%!s(int=66)', got '%!s(int=56)'\n    --- FAIL: TestSum_To_N/test_num__3\
    \ (0.00s)\n        tmp3uuz8dz9_test.go:46: expected '%!s(int=465)', got '%!s(int=436)'\n\
    \    --- FAIL: TestSum_To_N/test_num__4 (0.00s)\n        tmp3uuz8dz9_test.go:46:\
    \ expected '%!s(int=5050)', got '%!s(int=4951)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073361
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n < 1 {\n\
    \        return 0\n    }\n    var sum int\n    for i := 1; i <= n; i++ {\n   \
    \     sum += i\n    }\n    return sum\n}\n\nfunc TestSum_To_N(t *testing.T) {\n\
    \  candidate := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1), expected:\
    \ 1 },\n     { actual: candidate(6), expected: 21 },\n     { actual: candidate(11),\
    \ expected: 66 },\n     { actual: candidate(30), expected: 465 },\n     { actual:\
    \ candidate(100), expected: 5050 },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660073361
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n <= 0 {\n\
    \        return 0\n    }\n\n    n -= 1 // start from 1 to n\n    return n + sum_to_n(n\
    \ - 1)\n}\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6),\
    \ expected: 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual:\
    \ candidate(30), expected: 465 },\n     { actual: candidate(100), expected: 5050\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmpmos2jhmh_test.go:45: expected '%!s(int=1)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmpmos2jhmh_test.go:45:\
    \ expected '%!s(int=21)', got '%!s(int=9)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmpmos2jhmh_test.go:45: expected '%!s(int=66)', got '%!s(int=30)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmpmos2jhmh_test.go:45:\
    \ expected '%!s(int=465)', got '%!s(int=225)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmpmos2jhmh_test.go:45: expected '%!s(int=5050)', got '%!s(int=2500)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073361
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    var sum int\n\
    \    for i := 1; i <= n; i++ {\n        sum += i\n    }\n    return sum\n}\n\n\
    func TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.005s\n"
  timestamp: 1660073152
- exit_code: null
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    x := 1\n    for\
    \ x <= n {\n        x = x * x\n    }\n    return x\n}\n\nfunc TestSum_To_N(t *testing.T)\
    \ {\n  candidate := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 1 },\n     { actual: candidate(6), expected: 21 },\n     { actual:\
    \ candidate(11), expected: 66 },\n     { actual: candidate(30), expected: 465\
    \ },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660073375
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n < 0 {\n\
    \        return 0\n    }\n    result := 1\n    for i := 2; i <= n; i++ {\n   \
    \     result *= i\n    }\n    return result\n}\n\nfunc TestSum_To_N(t *testing.T)\
    \ {\n  candidate := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 1 },\n     { actual: candidate(6), expected: 21 },\n     { actual:\
    \ candidate(11), expected: 66 },\n     { actual: candidate(30), expected: 465\
    \ },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__1\
    \ (0.00s)\n        tmp_vklopfo_test.go:47: expected '%!s(int=21)', got '%!s(int=720)'\n\
    \    --- FAIL: TestSum_To_N/test_num__2 (0.00s)\n        tmp_vklopfo_test.go:47:\
    \ expected '%!s(int=66)', got '%!s(int=39916800)'\n    --- FAIL: TestSum_To_N/test_num__3\
    \ (0.00s)\n        tmp_vklopfo_test.go:47: expected '%!s(int=465)', got '%!s(int=-8764578968847253504)'\n\
    \    --- FAIL: TestSum_To_N/test_num__4 (0.00s)\n        tmp_vklopfo_test.go:47:\
    \ expected '%!s(int=5050)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073361
- exit_code: 0
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    sum := 0\n  \
    \  for i := 1; i <= n; i++ {\n        sum += i\n    }\n    return sum\n}\n\nfunc\
    \ TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.005s\n"
  timestamp: 1660073152
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    var sum int =\
    \ 0\n    for i := 0; i < n; i++ {\n        sum += i\n    }\n    return sum\n}\n\
    \nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 1 },\n     { actual: candidate(6), expected:\
    \ 21 },\n     { actual: candidate(11), expected: 66 },\n     { actual: candidate(30),\
    \ expected: 465 },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmpf6s90m6b_test.go:44: expected '%!s(int=1)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmpf6s90m6b_test.go:44:\
    \ expected '%!s(int=21)', got '%!s(int=15)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmpf6s90m6b_test.go:44: expected '%!s(int=66)', got '%!s(int=55)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmpf6s90m6b_test.go:44:\
    \ expected '%!s(int=465)', got '%!s(int=435)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmpf6s90m6b_test.go:44: expected '%!s(int=5050)', got '%!s(int=4950)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073361
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    sum := 1\n  \
    \  for {\n        if n%sum == 0 {\n            return sum\n        }\n       \
    \ sum += n\n    }\n}\n\nfunc TestSum_To_N(t *testing.T) {\n  candidate := sum_to_n\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 1 },\n     { actual:\
    \ candidate(6), expected: 21 },\n     { actual: candidate(11), expected: 66 },\n\
    \     { actual: candidate(30), expected: 465 },\n     { actual: candidate(100),\
    \ expected: 5050 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__1\
    \ (0.00s)\n        tmpd628phco_test.go:46: expected '%!s(int=21)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSum_To_N/test_num__2 (0.00s)\n        tmpd628phco_test.go:46:\
    \ expected '%!s(int=66)', got '%!s(int=1)'\n    --- FAIL: TestSum_To_N/test_num__3\
    \ (0.00s)\n        tmpd628phco_test.go:46: expected '%!s(int=465)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSum_To_N/test_num__4 (0.00s)\n        tmpd628phco_test.go:46:\
    \ expected '%!s(int=5050)', got '%!s(int=1)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660073361
- exit_code: 1
  program: "package sum_to_n_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunc sum_to_n(n int) int {\n    if n < 1 {\n\
    \        return 1\n    }\n    return n + sum_to_n(n - 1)\n}\n\nfunc TestSum_To_N(t\
    \ *testing.T) {\n  candidate := sum_to_n\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 1 },\n     { actual: candidate(6), expected: 21 },\n     { actual:\
    \ candidate(11), expected: 66 },\n     { actual: candidate(30), expected: 465\
    \ },\n     { actual: candidate(100), expected: 5050 },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSum_To_N (0.00s)\n    --- FAIL: TestSum_To_N/test_num__0\
    \ (0.00s)\n        tmpfk0pk8ov_test.go:43: expected '%!s(int=1)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSum_To_N/test_num__1 (0.00s)\n        tmpfk0pk8ov_test.go:43:\
    \ expected '%!s(int=21)', got '%!s(int=22)'\n    --- FAIL: TestSum_To_N/test_num__2\
    \ (0.00s)\n        tmpfk0pk8ov_test.go:43: expected '%!s(int=66)', got '%!s(int=67)'\n\
    \    --- FAIL: TestSum_To_N/test_num__3 (0.00s)\n        tmpfk0pk8ov_test.go:43:\
    \ expected '%!s(int=465)', got '%!s(int=466)'\n    --- FAIL: TestSum_To_N/test_num__4\
    \ (0.00s)\n        tmpfk0pk8ov_test.go:43: expected '%!s(int=5050)', got '%!s(int=5051)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073285

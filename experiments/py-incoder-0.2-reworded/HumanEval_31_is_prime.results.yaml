name: HumanEval_31_is_prime
language: py
results:
- program: "def is_prime(n: int) -> bool:\n    \"\"\"Return true if a given number\
    \ is prime, and false otherwise.\n    >>> is_prime(6)\n    False\n    >>> is_prime(101)\n\
    \    True\n    >>> is_prime(11)\n    True\n    >>> is_prime(13441)\n    True\n\
    \    >>> is_prime(61)\n    True\n    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n\
    \    False\n    \"\"\"\n    if n < 2:\n        return False\n    if n == 2:\n\
    \        return True\n    if n % 2 == 0:\n        return False\n    i = 5\n  \
    \  while i * i <= n:\n        if n % i == 0:\n            return False\n     \
    \   i += 6\n    return True\n\n\ndef check(candidate):\n    assert candidate(6)\
    \ == False\n    assert candidate(101) == True\n    assert candidate(11) == True\n\
    \    assert candidate(13441) == True\n    assert candidate(61) == True\n    assert\
    \ candidate(4) == False\n    assert candidate(1) == False\n    assert candidate(5)\
    \ == True\n    assert candidate(11) == True\n    assert candidate(17) == True\n\
    \    assert candidate(85) == False\n    assert candidate(77) == False\n    assert\
    \ candidate(255379) == False\n\ndef test_check():\n    check(is_prime)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3fprljv0.py\", line\
    \ 50, in <module>\n    test_check()\n  File \"/tmp/tmp3fprljv0.py\", line 48,\
    \ in test_check\n    check(is_prime)\n  File \"/tmp/tmp3fprljv0.py\", line 44,\
    \ in check\n    assert candidate(77) == False\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def is_prime(n: int) -> bool:\n    \"\"\"Return true if a given number\
    \ is prime, and false otherwise.\n    >>> is_prime(6)\n    False\n    >>> is_prime(101)\n\
    \    True\n    >>> is_prime(11)\n    True\n    >>> is_prime(13441)\n    True\n\
    \    >>> is_prime(61)\n    True\n    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n\
    \    False\n    \"\"\"\n    if n < 2:\n        return False\n    if n in (2, 3,\
    \ 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79,\
    \ 83, 89, 97):\n        return True\n    if n % 2 == 0:\n        return is_prime(n\
    \ // 2)\n    if n % 3 == 0:\n        return is_prime(n // 3)\n    if n % 5 ==\
    \ 0:\n        return is_prime(n // 5)\n    if n % 7 == 0:\n        return is_prime(n\
    \ // 7)\n    if n not in (11, 13, 17, 19, 23, 29):\n        return False\n   \
    \ for d in range(3, int(n ** 0.5) + 1, 2):\n        if n % d == 0:\n         \
    \   return False\n    return True\n\n\ndef check(candidate):\n    assert candidate(6)\
    \ == False\n    assert candidate(101) == True\n    assert candidate(11) == True\n\
    \    assert candidate(13441) == True\n    assert candidate(61) == True\n    assert\
    \ candidate(4) == False\n    assert candidate(1) == False\n    assert candidate(5)\
    \ == True\n    assert candidate(11) == True\n    assert candidate(17) == True\n\
    \    assert candidate(85) == False\n    assert candidate(77) == False\n    assert\
    \ candidate(255379) == False\n\ndef test_check():\n    check(is_prime)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4b72kdbe.py\", line\
    \ 56, in <module>\n    test_check()\n  File \"/tmp/tmp4b72kdbe.py\", line 54,\
    \ in test_check\n    check(is_prime)\n  File \"/tmp/tmp4b72kdbe.py\", line 39,\
    \ in check\n    assert candidate(6) == False\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def is_prime(n: int) -> bool:\n    \"\"\"Return true if a given number\
    \ is prime, and false otherwise.\n    >>> is_prime(6)\n    False\n    >>> is_prime(101)\n\
    \    True\n    >>> is_prime(11)\n    True\n    >>> is_prime(13441)\n    True\n\
    \    >>> is_prime(61)\n    True\n    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n\
    \    False\n    \"\"\"\n    if n < 2:\n        return False\n    if n in (2, 3,\
    \ 5, 7, 11, 13, 17, 19, 23, 29):\n        return True\n    if n % 2 == 0 or n\
    \ % 3 == 0:\n        return False\n    i = 5\n    w = 2\n    while i * i <= n:\n\
    \        if n % i == 0:\n            return False\n        i += w\n        w =\
    \ 6 - w\n    return True\n\n\ndef check(candidate):\n    assert candidate(6) ==\
    \ False\n    assert candidate(101) == True\n    assert candidate(11) == True\n\
    \    assert candidate(13441) == True\n    assert candidate(61) == True\n    assert\
    \ candidate(4) == False\n    assert candidate(1) == False\n    assert candidate(5)\
    \ == True\n    assert candidate(11) == True\n    assert candidate(17) == True\n\
    \    assert candidate(85) == False\n    assert candidate(77) == False\n    assert\
    \ candidate(255379) == False\n\ndef test_check():\n    check(is_prime)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def is_prime(n: int) -> bool:\n    \"\"\"Return true if a given number\
    \ is prime, and false otherwise.\n    >>> is_prime(6)\n    False\n    >>> is_prime(101)\n\
    \    True\n    >>> is_prime(11)\n    True\n    >>> is_prime(13441)\n    True\n\
    \    >>> is_prime(61)\n    True\n    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n\
    \    False\n    \"\"\"\n    if n <= 1:\n        return False\n    if n in (2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97):\n        return True\n    if n % 2 == 0:\n        return False\n\
    \    i = 5\n    while i * i <= n:\n        if n % i == 0:\n            return\
    \ False\n        i += 6\n    return True\n\n\ndef check(candidate):\n    assert\
    \ candidate(6) == False\n    assert candidate(101) == True\n    assert candidate(11)\
    \ == True\n    assert candidate(13441) == True\n    assert candidate(61) == True\n\
    \    assert candidate(4) == False\n    assert candidate(1) == False\n    assert\
    \ candidate(5) == True\n    assert candidate(11) == True\n    assert candidate(17)\
    \ == True\n    assert candidate(85) == False\n    assert candidate(77) == False\n\
    \    assert candidate(255379) == False\n\ndef test_check():\n    check(is_prime)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6a2ctr21.py\", line\
    \ 50, in <module>\n    test_check()\n  File \"/tmp/tmp6a2ctr21.py\", line 48,\
    \ in test_check\n    check(is_prime)\n  File \"/tmp/tmp6a2ctr21.py\", line 44,\
    \ in check\n    assert candidate(77) == False\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def is_prime(n: int) -> bool:\n    \"\"\"Return true if a given number\
    \ is prime, and false otherwise.\n    >>> is_prime(6)\n    False\n    >>> is_prime(101)\n\
    \    True\n    >>> is_prime(11)\n    True\n    >>> is_prime(13441)\n    True\n\
    \    >>> is_prime(61)\n    True\n    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n\
    \    False\n    \"\"\"\n    if n < 2:\n        return False\n    if n == 2:\n\
    \        return True\n    if n % 2 == 0:\n        return False\n    i = 5\n  \
    \  while i * i <= n:\n        if n % i == 0:\n            return False\n     \
    \   i += 6\n    return True\n\n\ndef check(candidate):\n    assert candidate(6)\
    \ == False\n    assert candidate(101) == True\n    assert candidate(11) == True\n\
    \    assert candidate(13441) == True\n    assert candidate(61) == True\n    assert\
    \ candidate(4) == False\n    assert candidate(1) == False\n    assert candidate(5)\
    \ == True\n    assert candidate(11) == True\n    assert candidate(17) == True\n\
    \    assert candidate(85) == False\n    assert candidate(77) == False\n    assert\
    \ candidate(255379) == False\n\ndef test_check():\n    check(is_prime)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpa1eflood.py\", line\
    \ 50, in <module>\n    test_check()\n  File \"/tmp/tmpa1eflood.py\", line 48,\
    \ in test_check\n    check(is_prime)\n  File \"/tmp/tmpa1eflood.py\", line 44,\
    \ in check\n    assert candidate(77) == False\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def is_prime(n: int) -> bool:\n    \"\"\"Return true if a given number\
    \ is prime, and false otherwise.\n    >>> is_prime(6)\n    False\n    >>> is_prime(101)\n\
    \    True\n    >>> is_prime(11)\n    True\n    >>> is_prime(13441)\n    True\n\
    \    >>> is_prime(61)\n    True\n    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n\
    \    False\n    \"\"\"\n    if n < 2:\n        return False\n    if n in (2, 3,\
    \ 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79,\
    \ 83, 89, 97):\n        return True\n    if n % 2 == 0:\n        return is_prime(n\
    \ // 2)\n    if n % 3 == 0:\n        return is_prime(n // 3)\n    if n % 5 ==\
    \ 0:\n        return is_prime(n // 5)\n    if n % 7 == 0:\n        return is_prime(n\
    \ // 7)\n    if n not in (11, 13, 17, 19, 23, 29):\n        return False\n   \
    \ return is_prime(n // 11)\n\n\ndef check(candidate):\n    assert candidate(6)\
    \ == False\n    assert candidate(101) == True\n    assert candidate(11) == True\n\
    \    assert candidate(13441) == True\n    assert candidate(61) == True\n    assert\
    \ candidate(4) == False\n    assert candidate(1) == False\n    assert candidate(5)\
    \ == True\n    assert candidate(11) == True\n    assert candidate(17) == True\n\
    \    assert candidate(85) == False\n    assert candidate(77) == False\n    assert\
    \ candidate(255379) == False\n\ndef test_check():\n    check(is_prime)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7cj04n0r.py\", line\
    \ 53, in <module>\n    test_check()\n  File \"/tmp/tmp7cj04n0r.py\", line 51,\
    \ in test_check\n    check(is_prime)\n  File \"/tmp/tmp7cj04n0r.py\", line 36,\
    \ in check\n    assert candidate(6) == False\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def is_prime(n: int) -> bool:\n    \"\"\"Return true if a given number\
    \ is prime, and false otherwise.\n    >>> is_prime(6)\n    False\n    >>> is_prime(101)\n\
    \    True\n    >>> is_prime(11)\n    True\n    >>> is_prime(13441)\n    True\n\
    \    >>> is_prime(61)\n    True\n    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n\
    \    False\n    \"\"\"\n    if n < 2:\n        return False\n    if n in (2, 3,\
    \ 5, 7, 11, 13, 17, 19, 23, 29):\n        return True\n    if n % 2 == 0:\n  \
    \      return is_prime(n // 2)\n    if n % 3 == 0:\n        return is_prime(n\
    \ // 3)\n    if n % 5 == 0:\n        return is_prime(n // 5)\n    if n % 7 ==\
    \ 0:\n        return is_prime(n // 7)\n    if n % 11 == 0:\n        return is_prime(n\
    \ // 11)\n    if n % 13 == 0:\n        return is_prime(n // 13)\n    if n % 17\
    \ == 0:\n        return is_prime(n // 17)\n    if n % 19 == 0:\n        return\
    \ is_prime(n // 19)\n    if n % 23 == 0:\n        return is_prime(n // 23)\n \
    \   if n % 29 == 0:\n        return is_prime(n // 29)\n    if n % 31 == 0:\n \
    \       return is_prime(n // 31)\n    if n % 37 == 0:\n        return is_prime(n\
    \ // 37)\n    if n % 41 == 0:\n        return is_prime(n // 41)\n    if n % 43\
    \ == 0:\n        return is_prime(n // 43)\n    if n % 47 == 0:\n        return\
    \ is_prime(n // 47)\n    if n % 51 == 0:\n        return is_prime(n // 51)\n \
    \   if n % 55 == 0:\n        return is_prime(n // 55)\n    if n % 59 == 0:\n \
    \       return is_prime(n // 59)\n    if n % 61 == 0:\n        return is_prime(n\
    \ // 61)\n    if n % 67 == 0:\n        return is_prime(n // 67)\n    if n % 71\
    \ == 0:\n        return is_prime(n // 71)\n    if n % 73 == 0:\n        return\
    \ is_prime(n // 73)\n    if n % 79 == 0:\n        return is_prime(n // 79)\n \
    \   if n % 83 == 0:\n        return is_prime(n // 83)\n    if n % 89 == 0:\n \
    \       return is_prime(n // 89)\n    if n % 97 == 0:\n        return is_prime(n\
    \ // 97)\n    if n % 103 == 0:\n        return is_prime(n // 103)\n    if n %\
    \ 107 == 0:\n        return is_prime(n // 107)\n    if n % 113 == 0:\n       \
    \ return is_prime(n // 113)\n    if n % 127 == 0:\n        return is_prime(n //\
    \ 127)\n    if n % 131 == 0:\n        return is_prime(n // 131)\n    if n % 137\
    \ == 0:\n        return is_prime(n // 137)\n    if n % 141 == 0:\n        return\
    \ is_prime(n // 141)\n    if n % 147 == 0:\n        return is_prime(n // 147)\n\
    \    if n % 151 == 0:\n        return is_prime(n // 151)\n    if n % 157 == 0:\n\
    \ndef check(candidate):\n    assert candidate(6) == False\n    assert candidate(101)\
    \ == True\n    assert candidate(11) == True\n    assert candidate(13441) == True\n\
    \    assert candidate(61) == True\n    assert candidate(4) == False\n    assert\
    \ candidate(1) == False\n    assert candidate(5) == True\n    assert candidate(11)\
    \ == True\n    assert candidate(17) == True\n    assert candidate(85) == False\n\
    \    assert candidate(77) == False\n    assert candidate(255379) == False\n\n\
    def test_check():\n    check(is_prime)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmpjqles5jd.py\", line 94\n    def check(candidate):\n  \
    \  ^\nIndentationError: expected an indented block\n"
  exit_code: -1
  status: Exception
- program: "def is_prime(n: int) -> bool:\n    \"\"\"Return true if a given number\
    \ is prime, and false otherwise.\n    >>> is_prime(6)\n    False\n    >>> is_prime(101)\n\
    \    True\n    >>> is_prime(11)\n    True\n    >>> is_prime(13441)\n    True\n\
    \    >>> is_prime(61)\n    True\n    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n\
    \    False\n    \"\"\"\n    if n < 2:\n        return False\n    if n == 2:\n\
    \        return True\n    if n % 2 == 0:\n        return False\n    i = 5\n  \
    \  while i * i <= n:\n        if n % i == 0:\n            return False\n     \
    \   i += 6\n    return True\n\n\ndef check(candidate):\n    assert candidate(6)\
    \ == False\n    assert candidate(101) == True\n    assert candidate(11) == True\n\
    \    assert candidate(13441) == True\n    assert candidate(61) == True\n    assert\
    \ candidate(4) == False\n    assert candidate(1) == False\n    assert candidate(5)\
    \ == True\n    assert candidate(11) == True\n    assert candidate(17) == True\n\
    \    assert candidate(85) == False\n    assert candidate(77) == False\n    assert\
    \ candidate(255379) == False\n\ndef test_check():\n    check(is_prime)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfhhr8sup.py\", line\
    \ 50, in <module>\n    test_check()\n  File \"/tmp/tmpfhhr8sup.py\", line 48,\
    \ in test_check\n    check(is_prime)\n  File \"/tmp/tmpfhhr8sup.py\", line 44,\
    \ in check\n    assert candidate(77) == False\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def is_prime(n: int) -> bool:\n    \"\"\"Return true if a given number\
    \ is prime, and false otherwise.\n    >>> is_prime(6)\n    False\n    >>> is_prime(101)\n\
    \    True\n    >>> is_prime(11)\n    True\n    >>> is_prime(13441)\n    True\n\
    \    >>> is_prime(61)\n    True\n    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n\
    \    False\n    \"\"\"\n    if n < 2:\n        return False\n    if n == 2:\n\
    \        return True\n    if n % 2 == 0:\n        return False\n    i = 5\n  \
    \  while i * i <= n:\n        if n % i == 0:\n            return False\n     \
    \   i += 6\n    return True\n\n\ndef check(candidate):\n    assert candidate(6)\
    \ == False\n    assert candidate(101) == True\n    assert candidate(11) == True\n\
    \    assert candidate(13441) == True\n    assert candidate(61) == True\n    assert\
    \ candidate(4) == False\n    assert candidate(1) == False\n    assert candidate(5)\
    \ == True\n    assert candidate(11) == True\n    assert candidate(17) == True\n\
    \    assert candidate(85) == False\n    assert candidate(77) == False\n    assert\
    \ candidate(255379) == False\n\ndef test_check():\n    check(is_prime)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp077nqkmf.py\", line\
    \ 50, in <module>\n    test_check()\n  File \"/tmp/tmp077nqkmf.py\", line 48,\
    \ in test_check\n    check(is_prime)\n  File \"/tmp/tmp077nqkmf.py\", line 44,\
    \ in check\n    assert candidate(77) == False\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def is_prime(n: int) -> bool:\n    \"\"\"Return true if a given number\
    \ is prime, and false otherwise.\n    >>> is_prime(6)\n    False\n    >>> is_prime(101)\n\
    \    True\n    >>> is_prime(11)\n    True\n    >>> is_prime(13441)\n    True\n\
    \    >>> is_prime(61)\n    True\n    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n\
    \    False\n    \"\"\"\n    if n < 2:\n        return False\n    if n == 2:\n\
    \        return True\n    if n % 2 == 0:\n        return False\n    i = 5\n  \
    \  while i * i <= n:\n        if n % i == 0:\n            return False\n     \
    \   i += 6\n    return True\n\n\ndef check(candidate):\n    assert candidate(6)\
    \ == False\n    assert candidate(101) == True\n    assert candidate(11) == True\n\
    \    assert candidate(13441) == True\n    assert candidate(61) == True\n    assert\
    \ candidate(4) == False\n    assert candidate(1) == False\n    assert candidate(5)\
    \ == True\n    assert candidate(11) == True\n    assert candidate(17) == True\n\
    \    assert candidate(85) == False\n    assert candidate(77) == False\n    assert\
    \ candidate(255379) == False\n\ndef test_check():\n    check(is_prime)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpy7yvikbs.py\", line\
    \ 50, in <module>\n    test_check()\n  File \"/tmp/tmpy7yvikbs.py\", line 48,\
    \ in test_check\n    check(is_prime)\n  File \"/tmp/tmpy7yvikbs.py\", line 44,\
    \ in check\n    assert candidate(77) == False\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def is_prime(n: int) -> bool:\n    \"\"\"Return true if a given number\
    \ is prime, and false otherwise.\n    >>> is_prime(6)\n    False\n    >>> is_prime(101)\n\
    \    True\n    >>> is_prime(11)\n    True\n    >>> is_prime(13441)\n    True\n\
    \    >>> is_prime(61)\n    True\n    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n\
    \    False\n    \"\"\"\n    if n < 2:\n        return False\n    if n in (2, 3,\
    \ 5, 7, 11, 13, 17, 19, 23, 29):\n        return True\n    if n % 2 == 0:\n  \
    \      return is_prime(n // 2)\n    if n % 3 == 0:\n        return is_prime(n\
    \ // 3)\n    if n % 5 == 0:\n        return is_prime(n // 5)\n    if n % 7 ==\
    \ 0:\n        return is_prime(n // 7)\n    if n % 11 == 0:\n        return is_prime(n\
    \ // 11)\n    if n % 13 == 0:\n        return is_prime(n // 13)\n    if n % 17\
    \ == 0:\n        return is_prime(n // 17)\n    if n % 19 == 0:\n        return\
    \ is_prime(n // 19)\n    if n % 23 == 0:\n        return is_prime(n // 23)\n \
    \   if n % 29 == 0:\n        return is_prime(n // 29)\n    # All remaining numbers\
    \ are divisible by 7, 11, 13, or 17.\n    return is_prime(n // 7)\n\n\ndef check(candidate):\n\
    \    assert candidate(6) == False\n    assert candidate(101) == True\n    assert\
    \ candidate(11) == True\n    assert candidate(13441) == True\n    assert candidate(61)\
    \ == True\n    assert candidate(4) == False\n    assert candidate(1) == False\n\
    \    assert candidate(5) == True\n    assert candidate(11) == True\n    assert\
    \ candidate(17) == True\n    assert candidate(85) == False\n    assert candidate(77)\
    \ == False\n    assert candidate(255379) == False\n\ndef test_check():\n    check(is_prime)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgeo969fh.py\", line\
    \ 64, in <module>\n    test_check()\n  File \"/tmp/tmpgeo969fh.py\", line 62,\
    \ in test_check\n    check(is_prime)\n  File \"/tmp/tmpgeo969fh.py\", line 47,\
    \ in check\n    assert candidate(6) == False\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def is_prime(n: int) -> bool:\n    \"\"\"Return true if a given number\
    \ is prime, and false otherwise.\n    >>> is_prime(6)\n    False\n    >>> is_prime(101)\n\
    \    True\n    >>> is_prime(11)\n    True\n    >>> is_prime(13441)\n    True\n\
    \    >>> is_prime(61)\n    True\n    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n\
    \    False\n    \"\"\"\n    if n <= 1:\n        return False\n    if n == 2:\n\
    \        return True\n    if n % 2 == 0:\n        return is_prime(n // 2)\n  \
    \  if n % 3 == 0:\n        return is_prime(n // 3)\n    if n % 5 == 0:\n     \
    \   return is_prime(n // 5)\n    if n % 7 == 0:\n        return is_prime(n //\
    \ 7)\n    if n % 11 == 0:\n        return is_prime(n // 11)\n    if n % 13 ==\
    \ 0:\n        return is_prime(n // 13)\n    if n % 17 == 0:\n        return is_prime(n\
    \ // 17)\n    if n % 19 == 0:\n        return is_prime(n // 19)\n    if n % 23\
    \ == 0:\n        return is_prime(n // 23)\n    if n % 29 == 0:\n        return\
    \ is_prime(n // 29)\n    if n % 31 == 0:\n        return is_prime(n // 31)\n \
    \   if n % 37 == 0:\n        return is_prime(n // 37)\n    if n % 41 == 0:\n \
    \       return is_prime(n // 41)\n    if n % 43 == 0:\n        return is_prime(n\
    \ // 43)\n    if n % 47 == 0:\n        return is_prime(n // 47)\n    if n % 53\
    \ == 0:\n        return is_prime(n // 53)\n    if n % 59 == 0:\n        return\
    \ is_prime(n // 59)\n    if n % 61 == 0:\n        return is_prime(n // 61)\n \
    \   if n % 67 == 0:\n        return is_prime(n // 67)\n    if n % 71 == 0:\n \
    \       return is_prime(n // 71)\n    if n % 73 == 0:\n        return is_prime(n\
    \ // 73)\n    if n % 79 == 0:\n        return is_prime(n // 79)\n    if n % 83\
    \ == 0:\n        return is_prime(n // 83)\n    if n % 89 == 0:\n        return\
    \ is_prime(n // 89)\n    if n % 97 == 0:\n        return is_prime(n // 97)\n \
    \   if n % 103 == 0:\n        return is_prime(n // 103)\n    if n % 107 == 0:\n\
    \        return is_prime(n // 107)\n    if n % 113 == 0:\n        return is_prime(n\
    \ // 113)\n    if n % 127 == 0:\n        return is_prime(n // 127)\n    if n %\
    \ 131 == 0:\n        return is_prime(n // 131)\n    if n % 137 == 0:\n       \
    \ return is_prime(n // 137)\n    if n % 141 == 0:\n        return is_prime(n //\
    \ 141)\n    if n % 147 == 0:\n        return is_prime(n // 147)\n    if n % 151\
    \ == 0:\n        return is_prime(n // 151)\n    if n % 157 == 0:\n        return\
    \ is_prime(n // 157)\n    if n % 161 == 0:\n        return is_prime(n // 16\n\
    def check(candidate):\n    assert candidate(6) == False\n    assert candidate(101)\
    \ == True\n    assert candidate(11) == True\n    assert candidate(13441) == True\n\
    \    assert candidate(61) == True\n    assert candidate(4) == False\n    assert\
    \ candidate(1) == False\n    assert candidate(5) == True\n    assert candidate(11)\
    \ == True\n    assert candidate(17) == True\n    assert candidate(85) == False\n\
    \    assert candidate(77) == False\n    assert candidate(255379) == False\n\n\
    def test_check():\n    check(is_prime)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmpale51fkm.py\", line 94\n    def check(candidate):\n  \
    \  ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def is_prime(n: int) -> bool:\n    \"\"\"Return true if a given number\
    \ is prime, and false otherwise.\n    >>> is_prime(6)\n    False\n    >>> is_prime(101)\n\
    \    True\n    >>> is_prime(11)\n    True\n    >>> is_prime(13441)\n    True\n\
    \    >>> is_prime(61)\n    True\n    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n\
    \    False\n    \"\"\"\n    if n < 2:\n        return False\n    if n == 2:\n\
    \        return True\n    if n % 2 == 0:\n        return False\n    i = 5\n  \
    \  while i * i <= n:\n        if n % i == 0:\n            return False\n     \
    \   i += 6\n    return True\n\n\ndef check(candidate):\n    assert candidate(6)\
    \ == False\n    assert candidate(101) == True\n    assert candidate(11) == True\n\
    \    assert candidate(13441) == True\n    assert candidate(61) == True\n    assert\
    \ candidate(4) == False\n    assert candidate(1) == False\n    assert candidate(5)\
    \ == True\n    assert candidate(11) == True\n    assert candidate(17) == True\n\
    \    assert candidate(85) == False\n    assert candidate(77) == False\n    assert\
    \ candidate(255379) == False\n\ndef test_check():\n    check(is_prime)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpthrkx7cf.py\", line\
    \ 50, in <module>\n    test_check()\n  File \"/tmp/tmpthrkx7cf.py\", line 48,\
    \ in test_check\n    check(is_prime)\n  File \"/tmp/tmpthrkx7cf.py\", line 44,\
    \ in check\n    assert candidate(77) == False\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def is_prime(n: int) -> bool:\n    \"\"\"Return true if a given number\
    \ is prime, and false otherwise.\n    >>> is_prime(6)\n    False\n    >>> is_prime(101)\n\
    \    True\n    >>> is_prime(11)\n    True\n    >>> is_prime(13441)\n    True\n\
    \    >>> is_prime(61)\n    True\n    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n\
    \    False\n    \"\"\"\n    if n <= 1:\n        return False\n    if n <= 3:\n\
    \        return True\n    if n % 2 == 0 or n % 3 == 0:\n        return False\n\
    \    i = 5\n    while i * i <= n:\n        if n % i == 0 or n % (i + 2) == 0:\n\
    \            return False\n        i += 6\n    return True\n\n\ndef check(candidate):\n\
    \    assert candidate(6) == False\n    assert candidate(101) == True\n    assert\
    \ candidate(11) == True\n    assert candidate(13441) == True\n    assert candidate(61)\
    \ == True\n    assert candidate(4) == False\n    assert candidate(1) == False\n\
    \    assert candidate(5) == True\n    assert candidate(11) == True\n    assert\
    \ candidate(17) == True\n    assert candidate(85) == False\n    assert candidate(77)\
    \ == False\n    assert candidate(255379) == False\n\ndef test_check():\n    check(is_prime)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def is_prime(n: int) -> bool:\n    \"\"\"Return true if a given number\
    \ is prime, and false otherwise.\n    >>> is_prime(6)\n    False\n    >>> is_prime(101)\n\
    \    True\n    >>> is_prime(11)\n    True\n    >>> is_prime(13441)\n    True\n\
    \    >>> is_prime(61)\n    True\n    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n\
    \    False\n    \"\"\"\n    if n < 2:\n        return False\n    if n in (2, 3,\
    \ 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79,\
    \ 83, 89, 97):\n        return True\n    if n % 2 == 0 or n % 3 == 0:\n      \
    \  return False\n    i = 5\n    while i * i <= n:\n        if n % i == 0 or n\
    \ % (i + 2) == 0:\n            return False\n        i += 6\n    return True\n\
    \n\ndef check(candidate):\n    assert candidate(6) == False\n    assert candidate(101)\
    \ == True\n    assert candidate(11) == True\n    assert candidate(13441) == True\n\
    \    assert candidate(61) == True\n    assert candidate(4) == False\n    assert\
    \ candidate(1) == False\n    assert candidate(5) == True\n    assert candidate(11)\
    \ == True\n    assert candidate(17) == True\n    assert candidate(85) == False\n\
    \    assert candidate(77) == False\n    assert candidate(255379) == False\n\n\
    def test_check():\n    check(is_prime)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def is_prime(n: int) -> bool:\n    \"\"\"Return true if a given number\
    \ is prime, and false otherwise.\n    >>> is_prime(6)\n    False\n    >>> is_prime(101)\n\
    \    True\n    >>> is_prime(11)\n    True\n    >>> is_prime(13441)\n    True\n\
    \    >>> is_prime(61)\n    True\n    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n\
    \    False\n    \"\"\"\n    if n < 2:\n        return False\n    if n == 2:\n\
    \        return True\n    if n % 2 == 0:\n        return False\n    i = 5\n  \
    \  while i * i <= n:\n        if n % i == 0:\n            return False\n     \
    \   i += 6\n    return True\n\n\ndef check(candidate):\n    assert candidate(6)\
    \ == False\n    assert candidate(101) == True\n    assert candidate(11) == True\n\
    \    assert candidate(13441) == True\n    assert candidate(61) == True\n    assert\
    \ candidate(4) == False\n    assert candidate(1) == False\n    assert candidate(5)\
    \ == True\n    assert candidate(11) == True\n    assert candidate(17) == True\n\
    \    assert candidate(85) == False\n    assert candidate(77) == False\n    assert\
    \ candidate(255379) == False\n\ndef test_check():\n    check(is_prime)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpn344ooem.py\", line\
    \ 50, in <module>\n    test_check()\n  File \"/tmp/tmpn344ooem.py\", line 48,\
    \ in test_check\n    check(is_prime)\n  File \"/tmp/tmpn344ooem.py\", line 44,\
    \ in check\n    assert candidate(77) == False\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def is_prime(n: int) -> bool:\n    \"\"\"Return true if a given number\
    \ is prime, and false otherwise.\n    >>> is_prime(6)\n    False\n    >>> is_prime(101)\n\
    \    True\n    >>> is_prime(11)\n    True\n    >>> is_prime(13441)\n    True\n\
    \    >>> is_prime(61)\n    True\n    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n\
    \    False\n    \"\"\"\n    if n < 2:\n        return False\n    if n == 2:\n\
    \        return True\n    if n % 2 == 0:\n        return False\n    i = 5\n  \
    \  while i * i <= n:\n        if n % i == 0:\n            return False\n     \
    \   i += 6\n    return True\n\n\ndef check(candidate):\n    assert candidate(6)\
    \ == False\n    assert candidate(101) == True\n    assert candidate(11) == True\n\
    \    assert candidate(13441) == True\n    assert candidate(61) == True\n    assert\
    \ candidate(4) == False\n    assert candidate(1) == False\n    assert candidate(5)\
    \ == True\n    assert candidate(11) == True\n    assert candidate(17) == True\n\
    \    assert candidate(85) == False\n    assert candidate(77) == False\n    assert\
    \ candidate(255379) == False\n\ndef test_check():\n    check(is_prime)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbjbmn6gv.py\", line\
    \ 50, in <module>\n    test_check()\n  File \"/tmp/tmpbjbmn6gv.py\", line 48,\
    \ in test_check\n    check(is_prime)\n  File \"/tmp/tmpbjbmn6gv.py\", line 44,\
    \ in check\n    assert candidate(77) == False\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def is_prime(n: int) -> bool:\n    \"\"\"Return true if a given number\
    \ is prime, and false otherwise.\n    >>> is_prime(6)\n    False\n    >>> is_prime(101)\n\
    \    True\n    >>> is_prime(11)\n    True\n    >>> is_prime(13441)\n    True\n\
    \    >>> is_prime(61)\n    True\n    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n\
    \    False\n    \"\"\"\n    if n < 2:\n        return False\n    if n == 2:\n\
    \        return True\n    if n % 2 == 0:\n        return False\n    i = 5\n  \
    \  while i * i <= n:\n        if n % i == 0:\n            return False\n     \
    \   i += 6\n    return True\n\n\ndef check(candidate):\n    assert candidate(6)\
    \ == False\n    assert candidate(101) == True\n    assert candidate(11) == True\n\
    \    assert candidate(13441) == True\n    assert candidate(61) == True\n    assert\
    \ candidate(4) == False\n    assert candidate(1) == False\n    assert candidate(5)\
    \ == True\n    assert candidate(11) == True\n    assert candidate(17) == True\n\
    \    assert candidate(85) == False\n    assert candidate(77) == False\n    assert\
    \ candidate(255379) == False\n\ndef test_check():\n    check(is_prime)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfuhrhzdq.py\", line\
    \ 50, in <module>\n    test_check()\n  File \"/tmp/tmpfuhrhzdq.py\", line 48,\
    \ in test_check\n    check(is_prime)\n  File \"/tmp/tmpfuhrhzdq.py\", line 44,\
    \ in check\n    assert candidate(77) == False\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def is_prime(n: int) -> bool:\n    \"\"\"Return true if a given number\
    \ is prime, and false otherwise.\n    >>> is_prime(6)\n    False\n    >>> is_prime(101)\n\
    \    True\n    >>> is_prime(11)\n    True\n    >>> is_prime(13441)\n    True\n\
    \    >>> is_prime(61)\n    True\n    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n\
    \    False\n    \"\"\"\n    if n < 2:\n        return False\n    if n == 2:\n\
    \        return True\n    if n % 2 == 0:\n        return False\n    sqrt_n = int(math.ceil(math.sqrt(n)))\n\
    \    for i in range(3, sqrt_n + 1, 2):\n        if n % i == 0:\n            return\
    \ False\n    return True\n\n\ndef check(candidate):\n    assert candidate(6) ==\
    \ False\n    assert candidate(101) == True\n    assert candidate(11) == True\n\
    \    assert candidate(13441) == True\n    assert candidate(61) == True\n    assert\
    \ candidate(4) == False\n    assert candidate(1) == False\n    assert candidate(5)\
    \ == True\n    assert candidate(11) == True\n    assert candidate(17) == True\n\
    \    assert candidate(85) == False\n    assert candidate(77) == False\n    assert\
    \ candidate(255379) == False\n\ndef test_check():\n    check(is_prime)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk_el8ntb.py\", line\
    \ 49, in <module>\n    test_check()\n  File \"/tmp/tmpk_el8ntb.py\", line 47,\
    \ in test_check\n    check(is_prime)\n  File \"/tmp/tmpk_el8ntb.py\", line 33,\
    \ in check\n    assert candidate(101) == True\n  File \"/tmp/tmpk_el8ntb.py\"\
    , line 24, in is_prime\n    sqrt_n = int(math.ceil(math.sqrt(n)))\nNameError:\
    \ name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def is_prime(n: int) -> bool:\n    \"\"\"Return true if a given number\
    \ is prime, and false otherwise.\n    >>> is_prime(6)\n    False\n    >>> is_prime(101)\n\
    \    True\n    >>> is_prime(11)\n    True\n    >>> is_prime(13441)\n    True\n\
    \    >>> is_prime(61)\n    True\n    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n\
    \    False\n    \"\"\"\n    if n < 2:\n        return False\n    if n == 2:\n\
    \        return True\n    if n % 2 == 0:\n        return False\n    i = 5\n  \
    \  while i * i <= n:\n        if n % i == 0:\n            return False\n     \
    \   i += 6\n    return True\n\n\ndef check(candidate):\n    assert candidate(6)\
    \ == False\n    assert candidate(101) == True\n    assert candidate(11) == True\n\
    \    assert candidate(13441) == True\n    assert candidate(61) == True\n    assert\
    \ candidate(4) == False\n    assert candidate(1) == False\n    assert candidate(5)\
    \ == True\n    assert candidate(11) == True\n    assert candidate(17) == True\n\
    \    assert candidate(85) == False\n    assert candidate(77) == False\n    assert\
    \ candidate(255379) == False\n\ndef test_check():\n    check(is_prime)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqmhnxij5.py\", line\
    \ 50, in <module>\n    test_check()\n  File \"/tmp/tmpqmhnxij5.py\", line 48,\
    \ in test_check\n    check(is_prime)\n  File \"/tmp/tmpqmhnxij5.py\", line 44,\
    \ in check\n    assert candidate(77) == False\nAssertionError\n"
  exit_code: -1
  status: Exception

name: HumanEval_88_sort_array
language: py
prompt: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
  \    \"\"\"\n    Given an array of non-negative integers, return a copy of the given\
  \ array after sorting,\n    you will sort the given array in ascending order if\
  \ the sum( first index value, last index value) is odd,\n    or sort it in descending\
  \ order if the sum( first index value, last index value) is even.\n\n    Note:\n\
  \    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
  \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1, 5])\n\
  \    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n    [6, 5, 4,\
  \ 3, 2, 1, 0]\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
  \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert\
  \ candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2,\
  \ 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32,\
  \ 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
  \    check(sort_array)\n\ntest_check()\n"
completions: ["    sum_array = [sum(array[0:i]) for i in range(len(array))]\n    odd_sum\
    \ = [i for i in sum_array if i % 2 == 1]\n    even_sum = [i for i in sum_array\
    \ if i % 2 == 0]\n    odd_sum = sorted(odd_sum, reverse=True)\n    even_sum =\
    \ sorted(even_sum, reverse=False)\n    return odd_sum + even_sum\n", "    sum_array\
    \ = sum(array)\n    if sum_array % 2 == 0:\n        array.sort()\n    else:\n\
    \        array.reverse()\n    return array\n", "    # write your code here\n \
    \   sum = 0\n    for i in array:\n        sum += i\n    if sum % 2 == 0:\n   \
    \     array.sort()\n    else:\n        array.reverse()\n    return array\n", " \
    \   sum_array = sum(array)\n    if sum_array % 2 == 0:\n        array.sort(reverse=True)\n\
    \    else:\n        array.sort()\n    return array\n", "    sum_of_array = sum(array)\n\
    \    if sum_of_array % 2 == 0:\n        return sorted(array)\n    else:\n    \
    \    return sorted(array, key=lambda x: -x)\n", "    sum_of_array = sum(array)\n\
    \    if sum_of_array % 2 == 0:\n        array.sort(reverse=True)\n    else:\n\
    \        array.sort()\n    return array\n", "    sum = 0\n    length = len(array)\n\
    \    for i in range(length):\n        sum += array[i]\n        if sum % 2 == 0:\n\
    \            array[i], array[length - i - 1] = array[length - i - 1], array[i]\n\
    \    return array\n", "    sum_of_array = sum(array)\n    if sum_of_array % 2\
    \ == 0:\n        return sorted(array)\n    else:\n        return sorted(array,\
    \ key=lambda x: -x)\n", "    sum_of_first_and_last_element = sum(array[0:-1])\n\
    \    if sum_of_first_and_last_element % 2 == 0:\n        array.sort()\n    else:\n\
    \        array.reverse()\n    return array\n", "    sum_of_array = sum(array)\n\
    \    if sum_of_array % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n\
    \    return array\n", "    sum_of_array = sum(array)\n    if sum_of_array % 2\
    \ == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n", "    length = len(array)\n    if length == 0:\n        return array\n\
    \    if length == 1:\n        return array\n    sum_first = array[0]\n    sum_last\
    \ = array[length - 1]\n    if sum_first + sum_last % 2 == 0:\n        array.sort()\n\
    \    else:\n        array.reverse()\n    return array\n", "    sum_of_first_and_last_element\
    \ = sum(array[0:-1])\n    if sum_of_first_and_last_element % 2 == 0:\n       \
    \ array.sort()\n    else:\n        array.reverse()\n    return array\n", "   \
    \ # write your code here\n    sum = 0\n    length = len(array)\n    for i in range(length):\n\
    \        sum += array[i]\n    if sum % 2 == 0:\n        array.sort()\n    else:\n\
    \        array.reverse()\n    return array\n", "    sum_of_array = sum(array)\n\
    \    if sum_of_array % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n\
    \    return array\n", "    sum_of_array = sum(array)\n    if sum_of_array % 2\
    \ == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n", "    sum = 0\n    for i in array:\n        sum += i\n    if sum %\
    \ 2:\n        array.sort()\n    else:\n        array.reverse()\n    return array\n",
  "    sum_of_array = sum(array)\n    if sum_of_array % 2 == 0:\n        sorted_array\
    \ = sorted(array)\n    else:\n        sorted_array = sorted(array, reverse=True)\n\
    \    return sorted_array\n", "    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        sorted_array = sorted(array)\n    else:\n        sorted_array\
    \ = sorted(array, reverse=True)\n    return sorted_array\n", "    sum_of_array\
    \ = sum(array)\n    if sum_of_array % 2 == 0:\n        array.sort()\n    else:\n\
    \        array.reverse()\n    return array\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

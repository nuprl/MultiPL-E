name: HumanEval_157_right_angle_triangle
language: py
prompt: "def right_angle_triangle(a: int, b: int, c: int) -> bool:\n    \"\"\"\n \
  \   Given the lengths of the three sides of a triangle. Return True if the three\n\
  \    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle\
  \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
  \    >>> right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1,\
  \ 2, 3)\n    False\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate(3, 4, 5) == True\n    assert candidate(1,\
  \ 2, 3) == False\n    assert candidate(10, 6, 8) == True\n    assert candidate(2,\
  \ 2, 2) == False\n    assert candidate(7, 24, 25) == True\n    assert candidate(10,\
  \ 5, 7) == False\n    assert candidate(5, 12, 13) == True\n    assert candidate(15,\
  \ 8, 17) == True\n    assert candidate(48, 55, 73) == True\n    assert candidate(1,\
  \ 1, 1) == False\n    assert candidate(2, 2, 10) == False\n\ndef test_check():\n\
  \    check(right_angle_triangle)\n\ntest_check()\n"
completions: ["    a, b, c = sorted([a, b, c])\n    if a + b > c and b + c > a and\
    \ c + a > b:\n        return True\n    else:\n        return False\n", "    a,\
    \ b, c = sorted([a, b, c])\n    if a + b > c and b + c > a and c + a > b:\n  \
    \      return True\n    else:\n        return False\n", "    \n    if a == b ==\
    \ c:\n        return True\n    elif a > b > c:\n        return False\n    elif\
    \ a > c > b:\n        return True\n    else:\n        return False\n", "    \n\
    \    a, b, c = sorted([a, b, c])\n    \n    if a + b > c and b + c > a and c +\
    \ a > b:\n        return True\n    else:\n        return False\n", "    a, b,\
    \ c = sorted([a, b, c])\n    if a + b > c and b + c > a and c + a > b:\n     \
    \   return True\n    return False\n", "    a, b, c = sorted([a, b, c])\n    if\
    \ a + b > c and b + c > a and c + a > b:\n        return True\n    return False\n\
    \n", "    a, b, c = sorted([a, b, c])\n    if a + b > c and b + c > a and c +\
    \ a > b:\n        return True\n    else:\n        return False\n\n", "    if a\
    \ + b > c and a + c > b and b + c > a:\n        return True\n    else:\n     \
    \   return False\n", "    \n    if a == b == c:\n        return True\n    elif\
    \ a > b and a > c:\n        return True\n    elif b > a and b > c:\n        return\
    \ True\n    elif c > a and c > b:\n        return True\n    else:\n        return\
    \ False\n", "    a, b, c = sorted([a, b, c])\n    if a + b > c and b + c > a and\
    \ c + a > b:\n        return True\n    else:\n        return False\n\n", "   \
    \ a, b, c = sorted([a, b, c])\n    if a + b > c and b + c > a and c + a > b:\n\
    \        return True\n    return False\n", "    a, b, c = sorted([a, b, c])\n\
    \    if a + b > c and b + c > a and c + a > b:\n        return True\n    else:\n\
    \        return False\n", "    \n    a, b, c = sorted([a, b, c])\n    if a ==\
    \ b == c:\n        return True\n    elif a > b > c:\n        return False\n  \
    \  else:\n        angle = (a + b + c) / 2\n        if angle > 90:\n          \
    \  return False\n        else:\n            return True\n\n", "    \n    if a\
    \ == 0 and b == 0 and c == 0:\n        return True\n    \n    elif a == 0 and\
    \ b != 0 and c != 0:\n        return False\n    \n    elif a != 0 and b == 0 and\
    \ c != 0:\n        return False\n    \n    elif a != 0 and b != 0 and c == 0:\n\
    \        return False\n    \n    elif a != 0 and b != 0 and c != 0:\n        if\
    \ b > c:\n            return False\n        elif b < c:\n            return True\n\
    \        elif a > c:\n            return True\n        elif a < c:\n         \
    \   return False\n        else:\n            return True\n    \n    else:\n  \
    \      return False\n\n", "    a, b, c = sorted([a, b, c])\n    if a + b > c and\
    \ b + c > a and c + a > b:\n        return True\n    else:\n        return False\n",
  "    \n    # Write your code here\n    \n    \n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ", "  \
    \  \n    if a + b > c and a + c > b and b + c > a:\n        return True\n    else:\n\
    \        return False\n    ", "    a, b, c = sorted([a, b, c])\n    if a + b >\
    \ c and b + c > a and c + a > b:\n        return True\n    else:\n        return\
    \ False\n", "    a, b, c = sorted([a, b, c])\n    if a + b > c and b + c > a and\
    \ c + a > b:\n        return True\n    else:\n        return False\n\n", "   \
    \ \n    if a + b > c and a + c > b and b + c > a:\n        return True\n    else:\n\
    \        return False\n</cell>\n<cell>"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

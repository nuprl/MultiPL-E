language: py
name: HumanEval_47_median
results:
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) // 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_n1e6c8r.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp_n1e6c8r.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmp_n1e6c8r.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpne4lvlqm.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpne4lvlqm.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpne4lvlqm.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpne4lvlqm.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpne4lvlqm.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpne4lvlqm.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[len(l) // 2]\n    else:\n\
    \        return (l[len(l) // 2 - 1] + l[len(l) // 2]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvps66mvw.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpvps66mvw.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpvps66mvw.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpne4lvlqm.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpne4lvlqm.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpne4lvlqm.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        mid = len(l) // 2\n        return (l[mid] + l[mid-1]) / 2\n\
    \ndef check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpubw6li35.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpubw6li35.py\", line 25,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpubw6li35.py\", line 18, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        mid = len(l) // 2\n        return (l[mid] + l[mid-1]) / 2\n\
    \ndef check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpubw6li35.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpubw6li35.py\", line 25,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpubw6li35.py\", line 18, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpne4lvlqm.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpne4lvlqm.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpne4lvlqm.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpne4lvlqm.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpne4lvlqm.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpne4lvlqm.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return l[len(l) // 2]\n\ndef check(candidate):\n    assert\
    \ candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6, 1000, 10,\
    \ 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6, 5]) ==\
    \ 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptbkh3uhp.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmptbkh3uhp.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmptbkh3uhp.py\", line 18, in\
    \ check\n    assert candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) - 1) // 2) -\
    \ 1]\n    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\n\
    def check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3un4vte1.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp3un4vte1.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmp3un4vte1.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[len(l) // 2]\n    else:\n\
    \        return (l[len(l) // 2] + l[len(l) // 2 - 1]) // 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp43jc9_uf.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp43jc9_uf.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmp43jc9_uf.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)//2]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) // 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcjuxhhef.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpcjuxhhef.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpcjuxhhef.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[len(l) // 2]\n    else:\n\
    \        return (l[len(l) // 2 - 1] + l[len(l) // 2]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvps66mvw.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpvps66mvw.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpvps66mvw.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l)/2) - 1]\n   \
    \ else:\n        return (l[len(l)/2] + l[len(l)/2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpd69tbayw.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpd69tbayw.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpd69tbayw.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\n  File \"/tmp/tmpd69tbayw.py\"\
    , line 14, in median\n    return (l[len(l)/2] + l[len(l)/2 - 1]) / 2\nTypeError:\
    \ list indices must be integers or slices, not float\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpne4lvlqm.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpne4lvlqm.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpne4lvlqm.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return l[len(l) // 2]\n\ndef check(candidate):\n    assert\
    \ candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6, 1000, 10,\
    \ 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6, 5]) ==\
    \ 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptbkh3uhp.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmptbkh3uhp.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmptbkh3uhp.py\", line 18, in\
    \ check\n    assert candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l)/2) - 1]\n   \
    \ else:\n        mid = len(l) // 2\n        return (l[mid-1] + l[mid]) / 2\n\n\
    def check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbuuh8a63.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpbuuh8a63.py\", line 25,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpbuuh8a63.py\", line 18, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l)/2) - 1]\n   \
    \ else:\n        return (l[len(l)/2] + l[len(l)/2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpd69tbayw.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpd69tbayw.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpd69tbayw.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\n  File \"/tmp/tmpd69tbayw.py\"\
    , line 14, in median\n    return (l[len(l)/2] + l[len(l)/2 - 1]) / 2\nTypeError:\
    \ list indices must be integers or slices, not float\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l)/2)-1]\n    else:\n\
    \        return (l[len(l)/2-1] + l[len(l)/2])/2\n\ndef check(candidate):\n   \
    \ assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6, 5])\
    \ == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxz4gcixk.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpxz4gcixk.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpxz4gcixk.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\n  File \"/tmp/tmpxz4gcixk.py\"\
    , line 14, in median\n    return (l[len(l)/2-1] + l[len(l)/2])/2\nTypeError: list\
    \ indices must be integers or slices, not float\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        mid = len(l) // 2\n        return (l[mid] + l[mid-1]) / 2\n\
    \ndef check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpubw6li35.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpubw6li35.py\", line 25,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpubw6li35.py\", line 18, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) // 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_n1e6c8r.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp_n1e6c8r.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmp_n1e6c8r.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpne4lvlqm.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpne4lvlqm.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpne4lvlqm.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpne4lvlqm.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpne4lvlqm.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpne4lvlqm.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        mid = len(l) // 2\n        return (l[mid] + l[mid-1]) / 2\n\
    \ndef check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpubw6li35.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpubw6li35.py\", line 25,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpubw6li35.py\", line 18, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpne4lvlqm.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpne4lvlqm.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpne4lvlqm.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) + 1) / 2) -\
    \ 1]\n    else:\n        return (l[len(l) / 2 - 1] + l[len(l) / 2]) / 2\n\ndef\
    \ check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbjuvsjjx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpbjuvsjjx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpbjuvsjjx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\n  File \"/tmp/tmpbjuvsjjx.py\"\
    , line 14, in median\n    return (l[len(l) / 2 - 1] + l[len(l) / 2]) / 2\nTypeError:\
    \ list indices must be integers or slices, not float\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) + 1) / 2) -\
    \ 1]\n    else:\n        return l[len(l) / 2]\n\ndef check(candidate):\n    assert\
    \ candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6, 1000, 10,\
    \ 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6, 5]) ==\
    \ 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpan4f_qwt.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpan4f_qwt.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpan4f_qwt.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\n  File \"/tmp/tmpan4f_qwt.py\"\
    , line 14, in median\n    return l[len(l) / 2]\nTypeError: list indices must be\
    \ integers or slices, not float\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) - 1) // 2) -\
    \ 1]\n    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\n\
    def check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3un4vte1.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp3un4vte1.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmp3un4vte1.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpne4lvlqm.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpne4lvlqm.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpne4lvlqm.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpne4lvlqm.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpne4lvlqm.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpne4lvlqm.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        mid = len(l) // 2\n        return (l[mid] + l[mid-1]) / 2\n\
    \ndef check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpubw6li35.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpubw6li35.py\", line 25,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpubw6li35.py\", line 18, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return l[len(l) // 2]\n\ndef check(candidate):\n    assert\
    \ candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6, 1000, 10,\
    \ 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6, 5]) ==\
    \ 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptbkh3uhp.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmptbkh3uhp.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmptbkh3uhp.py\", line 18, in\
    \ check\n    assert candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) + 1) / 2) -\
    \ 1]\n    else:\n        return l[len(l) / 2]\n\ndef check(candidate):\n    assert\
    \ candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6, 1000, 10,\
    \ 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6, 5]) ==\
    \ 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpan4f_qwt.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpan4f_qwt.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpan4f_qwt.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\n  File \"/tmp/tmpan4f_qwt.py\"\
    , line 14, in median\n    return l[len(l) / 2]\nTypeError: list indices must be\
    \ integers or slices, not float\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) - 1) // 2) -\
    \ 1]\n    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\n\
    def check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3un4vte1.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp3un4vte1.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmp3un4vte1.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpne4lvlqm.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpne4lvlqm.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpne4lvlqm.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) // 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_n1e6c8r.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp_n1e6c8r.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmp_n1e6c8r.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) - 1) // 2) -\
    \ 1]\n    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\n\
    def check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3un4vte1.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp3un4vte1.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmp3un4vte1.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)//2]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) // 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcjuxhhef.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpcjuxhhef.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpcjuxhhef.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpne4lvlqm.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpne4lvlqm.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpne4lvlqm.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) + 1) / 2) -\
    \ 1]\n    else:\n        return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2\n\ndef\
    \ check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6h0tx7yj.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp6h0tx7yj.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmp6h0tx7yj.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\n  File \"/tmp/tmp6h0tx7yj.py\"\
    , line 14, in median\n    return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2\nTypeError:\
    \ list indices must be integers or slices, not float\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l)/2) - 1]\n   \
    \ else:\n        mid = len(l) // 2\n        return (l[mid-1] + l[mid]) / 2\n\n\
    def check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbuuh8a63.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpbuuh8a63.py\", line 25,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpbuuh8a63.py\", line 18, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpne4lvlqm.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpne4lvlqm.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpne4lvlqm.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l)/2)-1]\n    else:\n\
    \        return (l[len(l)/2-1] + l[len(l)/2])/2\n\ndef check(candidate):\n   \
    \ assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6, 5])\
    \ == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxz4gcixk.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpxz4gcixk.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpxz4gcixk.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\n  File \"/tmp/tmpxz4gcixk.py\"\
    , line 14, in median\n    return (l[len(l)/2-1] + l[len(l)/2])/2\nTypeError: list\
    \ indices must be integers or slices, not float\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        mid = len(l) // 2\n        return (l[mid] + l[mid-1]) / 2\n\
    \ndef check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpubw6li35.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpubw6li35.py\", line 25,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpubw6li35.py\", line 18, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        mid = len(l) // 2\n        return (l[mid] + l[mid-1]) / 2\n\
    \ndef check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpubw6li35.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpubw6li35.py\", line 25,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpubw6li35.py\", line 18, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) + 1) / 2) -\
    \ 1]\n    else:\n        return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2\n\ndef\
    \ check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6h0tx7yj.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp6h0tx7yj.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmp6h0tx7yj.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\n  File \"/tmp/tmp6h0tx7yj.py\"\
    , line 14, in median\n    return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2\nTypeError:\
    \ list indices must be integers or slices, not float\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        mid = len(l) // 2\n        return (l[mid] + l[mid-1]) / 2\n\
    \ndef check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpubw6li35.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpubw6li35.py\", line 25,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpubw6li35.py\", line 18, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpne4lvlqm.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpne4lvlqm.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpne4lvlqm.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return l[len(l) // 2]\n\ndef check(candidate):\n    assert\
    \ candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6, 1000, 10,\
    \ 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6, 5]) ==\
    \ 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptbkh3uhp.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmptbkh3uhp.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmptbkh3uhp.py\", line 18, in\
    \ check\n    assert candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpne4lvlqm.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpne4lvlqm.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpne4lvlqm.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)//2]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) // 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcjuxhhef.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpcjuxhhef.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpcjuxhhef.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) - 1) // 2) -\
    \ 1]\n    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\n\
    def check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3un4vte1.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp3un4vte1.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmp3un4vte1.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) - 1) // 2)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5brr8ipb.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp5brr8ipb.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmp5brr8ipb.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l)/2)-1]\n    else:\n\
    \        return (l[len(l)/2] + l[len(l)/2-1])/2.0\n\ndef check(candidate):\n \
    \   assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6, 5])\
    \ == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpeg_oc10i.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpeg_oc10i.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpeg_oc10i.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\n  File \"/tmp/tmpeg_oc10i.py\"\
    , line 14, in median\n    return (l[len(l)/2] + l[len(l)/2-1])/2.0\nTypeError:\
    \ list indices must be integers or slices, not float\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        mid = len(l) // 2\n        return (l[mid] + l[mid-1]) / 2\n\
    \ndef check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpubw6li35.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpubw6li35.py\", line 25,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpubw6li35.py\", line 18, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpne4lvlqm.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpne4lvlqm.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpne4lvlqm.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpne4lvlqm.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpne4lvlqm.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpne4lvlqm.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)//2]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbxnwnobm.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpbxnwnobm.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpbxnwnobm.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpne4lvlqm.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpne4lvlqm.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpne4lvlqm.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[len(l) // 2]\n    else:\n\
    \        return (l[len(l) // 2 - 1] + l[len(l) // 2]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvps66mvw.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpvps66mvw.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpvps66mvw.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        mid = len(l) // 2\n        return (l[mid] + l[mid-1]) / 2\n\
    \ndef check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpubw6li35.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpubw6li35.py\", line 25,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpubw6li35.py\", line 18, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return l[len(l) // 2]\n\ndef check(candidate):\n    assert\
    \ candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6, 1000, 10,\
    \ 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6, 5]) ==\
    \ 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptbkh3uhp.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmptbkh3uhp.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmptbkh3uhp.py\", line 18, in\
    \ check\n    assert candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        mid = len(l) // 2\n        return (l[mid] + l[mid-1]) / 2\n\
    \ndef check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpubw6li35.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpubw6li35.py\", line 25,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpubw6li35.py\", line 18, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpne4lvlqm.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpne4lvlqm.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpne4lvlqm.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) + 1) // 2) -\
    \ 1]\n    else:\n        return l[len(l) // 2]\n\ndef check(candidate):\n    assert\
    \ candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6, 1000, 10,\
    \ 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6, 5]) ==\
    \ 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp77nne7h2.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp77nne7h2.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmp77nne7h2.py\", line 18, in\
    \ check\n    assert candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) - 1) // 2) -\
    \ 1]\n    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\n\
    def check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3un4vte1.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp3un4vte1.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmp3un4vte1.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) + 1) / 2) -\
    \ 1]\n    else:\n        return l[len(l) / 2]\n\ndef check(candidate):\n    assert\
    \ candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6, 1000, 10,\
    \ 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6, 5]) ==\
    \ 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpan4f_qwt.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpan4f_qwt.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpan4f_qwt.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\n  File \"/tmp/tmpan4f_qwt.py\"\
    , line 14, in median\n    return l[len(l) / 2]\nTypeError: list indices must be\
    \ integers or slices, not float\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return l[len(l) // 2]\n\ndef check(candidate):\n    assert\
    \ candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6, 1000, 10,\
    \ 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6, 5]) ==\
    \ 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptbkh3uhp.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmptbkh3uhp.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmptbkh3uhp.py\", line 18, in\
    \ check\n    assert candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)//2]\n\
    \    else:\n        return l[((len(l) // 2) - 1)//2-1] + l[((len(l) // 2) - 1)//2]\n\
    \ndef check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpf2cc9p96.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpf2cc9p96.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpf2cc9p96.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        mid = len(l) // 2\n        return (l[mid] + l[mid-1]) / 2\n\
    \ndef check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpubw6li35.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpubw6li35.py\", line 25,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpubw6li35.py\", line 18, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return l[len(l) // 2]\n\ndef check(candidate):\n    assert\
    \ candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6, 1000, 10,\
    \ 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6, 5]) ==\
    \ 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptbkh3uhp.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmptbkh3uhp.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmptbkh3uhp.py\", line 18, in\
    \ check\n    assert candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)//2]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbxnwnobm.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpbxnwnobm.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpbxnwnobm.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l)/2) - 1]\n   \
    \ else:\n        mid = len(l) // 2\n        return (l[mid-1] + l[mid]) / 2\n\n\
    def check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbuuh8a63.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpbuuh8a63.py\", line 25,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpbuuh8a63.py\", line 18, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[len(l) // 2]\n    else:\n\
    \        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsoh67rpf.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpsoh67rpf.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpsoh67rpf.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpne4lvlqm.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpne4lvlqm.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpne4lvlqm.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpne4lvlqm.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpne4lvlqm.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpne4lvlqm.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l)/2) - 1]\n   \
    \ else:\n        return (l[len(l)/2] + l[len(l)/2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpd69tbayw.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpd69tbayw.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpd69tbayw.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\n  File \"/tmp/tmpd69tbayw.py\"\
    , line 14, in median\n    return (l[len(l)/2] + l[len(l)/2 - 1]) / 2\nTypeError:\
    \ list indices must be integers or slices, not float\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) - 1) // 2) -\
    \ 1]\n    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\n\
    def check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3un4vte1.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp3un4vte1.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmp3un4vte1.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        mid = len(l) // 2\n        return (l[mid] + l[mid-1]) / 2\n\
    \ndef check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpubw6li35.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpubw6li35.py\", line 25,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpubw6li35.py\", line 18, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        mid = len(l) // 2\n        return (l[mid] + l[mid-1]) / 2\n\
    \ndef check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpubw6li35.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpubw6li35.py\", line 25,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpubw6li35.py\", line 18, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) - 1) // 2) -\
    \ 1]\n    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\n\
    def check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3un4vte1.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp3un4vte1.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmp3un4vte1.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) - 1) // 2) -\
    \ 1]\n    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\n\
    def check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3un4vte1.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp3un4vte1.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmp3un4vte1.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) + 1) / 2) -\
    \ 1]\n    else:\n        return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2\n\ndef\
    \ check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6h0tx7yj.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp6h0tx7yj.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmp6h0tx7yj.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\n  File \"/tmp/tmp6h0tx7yj.py\"\
    , line 14, in median\n    return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2\nTypeError:\
    \ list indices must be integers or slices, not float\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l)/2) - 1]\n   \
    \ else:\n        return l[len(l)/2]\n\ndef check(candidate):\n    assert candidate([3,\
    \ 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n\
    \    assert candidate([5]) == 5\n    assert candidate([6, 5]) == 5.5\n    assert\
    \ candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n    check(median)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfluot18c.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpfluot18c.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpfluot18c.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\n  File \"/tmp/tmpfluot18c.py\"\
    , line 14, in median\n    return l[len(l)/2]\nTypeError: list indices must be\
    \ integers or slices, not float\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) + 1) / 2) -\
    \ 1]\n    else:\n        return l[len(l) / 2]\n\ndef check(candidate):\n    assert\
    \ candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6, 1000, 10,\
    \ 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6, 5]) ==\
    \ 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpan4f_qwt.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpan4f_qwt.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpan4f_qwt.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\n  File \"/tmp/tmpan4f_qwt.py\"\
    , line 14, in median\n    return l[len(l) / 2]\nTypeError: list indices must be\
    \ integers or slices, not float\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) - 1) // 2) -\
    \ 1]\n    else:\n        return l[len(l) // 2]\n\ndef check(candidate):\n    assert\
    \ candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6, 1000, 10,\
    \ 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6, 5]) ==\
    \ 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpd1r0h3ne.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpd1r0h3ne.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpd1r0h3ne.py\", line 18, in\
    \ check\n    assert candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) - 1) // 2) -\
    \ 1]\n    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\n\
    def check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3un4vte1.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp3un4vte1.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmp3un4vte1.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l)/2)-1]\n    else:\n\
    \        mid = len(l)/2\n        return (l[mid-1] + l[mid])/2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1ks2hbpz.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmp1ks2hbpz.py\", line 25,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmp1ks2hbpz.py\", line 18, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\n  File \"/tmp/tmp1ks2hbpz.py\"\
    , line 15, in median\n    return (l[mid-1] + l[mid])/2\nTypeError: list indices\
    \ must be integers or slices, not float\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) - 1) // 2) -\
    \ 1]\n    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\n\
    def check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3un4vte1.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp3un4vte1.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmp3un4vte1.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) - 1) // 2) -\
    \ 1]\n    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\n\
    def check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3un4vte1.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp3un4vte1.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmp3un4vte1.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpne4lvlqm.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpne4lvlqm.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpne4lvlqm.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpne4lvlqm.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpne4lvlqm.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpne4lvlqm.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        mid = len(l) // 2\n        return (l[mid] + l[mid-1]) / 2\n\
    \ndef check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpubw6li35.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpubw6li35.py\", line 25,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpubw6li35.py\", line 18, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) // 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_n1e6c8r.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp_n1e6c8r.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmp_n1e6c8r.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpne4lvlqm.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpne4lvlqm.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpne4lvlqm.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l)/2) - 1]\n   \
    \ else:\n        return (l[len(l)/2] + l[len(l)/2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpd69tbayw.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpd69tbayw.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpd69tbayw.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\n  File \"/tmp/tmpd69tbayw.py\"\
    , line 14, in median\n    return (l[len(l)/2] + l[len(l)/2 - 1]) / 2\nTypeError:\
    \ list indices must be integers or slices, not float\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return l[len(l) // 2]\n\ndef check(candidate):\n    assert\
    \ candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6, 1000, 10,\
    \ 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6, 5]) ==\
    \ 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptbkh3uhp.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmptbkh3uhp.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmptbkh3uhp.py\", line 18, in\
    \ check\n    assert candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return l[len(l) // 2]\n\ndef check(candidate):\n    assert\
    \ candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6, 1000, 10,\
    \ 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6, 5]) ==\
    \ 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptbkh3uhp.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmptbkh3uhp.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmptbkh3uhp.py\", line 18, in\
    \ check\n    assert candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8y_fzx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppy8y_fzx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmppy8y_fzx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659746613

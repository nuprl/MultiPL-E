language: py
name: HumanEval_133_sum_squares
results:
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6rd9p8lx.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6rd9p8lx.py\"\
    , line 39, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6rd9p8lx.py\"\
    , line 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6rd9p8lx.py\"\
    , line 22, in sum_squares\n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6rd9p8lx.py\"\
    , line 22, in <lambda>\n    return sum(map(lambda x: int(math.ceil(x*x))**2, lst))\n\
    NameError: name 'math' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(round(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2o334r5o.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2o334r5o.py\"\
    , line 39, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2o334r5o.py\"\
    , line 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsazlm8vv.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsazlm8vv.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsazlm8vv.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    sum_squares = 0\n    for num in lst:\n \
    \       sum_squares += num * num\n    return int(sum_squares)\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxlpj5vgo.py\"\
    , line 44, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxlpj5vgo.py\"\
    , line 42, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxlpj5vgo.py\"\
    , line 31, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6uw85n1z.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6uw85n1z.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6uw85n1z.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(round(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0bouqvzc.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0bouqvzc.py\"\
    , line 39, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0bouqvzc.py\"\
    , line 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd02puilf.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd02puilf.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd02puilf.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzoi4m2aw.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzoi4m2aw.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzoi4m2aw.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(round(x*x))**2,\
    \ lst))\n    \n    \ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd1no44ma.py\"\
    , line 42, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd1no44ma.py\"\
    , line 40, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd1no44ma.py\"\
    , line 26, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum(map(lambda x: round(x ** 2, int(ceiling(x))))\n\
    \               for x in lst)\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6t78zwb6.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6t78zwb6.py\"\
    , line 39, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6t78zwb6.py\"\
    , line 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6t78zwb6.py\"\
    , line 21, in sum_squares\n    return sum(map(lambda x: round(x ** 2, int(ceiling(x))))\n\
    \  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6t78zwb6.py\", line\
    \ 21, in <genexpr>\n    return sum(map(lambda x: round(x ** 2, int(ceiling(x))))\n\
    TypeError: map() must have at least two arguments.\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(round(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmparn2pj_6.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmparn2pj_6.py\"\
    , line 39, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmparn2pj_6.py\"\
    , line 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2zndgasy.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2zndgasy.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2zndgasy.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4x_ap3su.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4x_ap3su.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4x_ap3su.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpi424sc2m.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpi424sc2m.py\"\
    , line 39, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpi424sc2m.py\"\
    , line 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpi424sc2m.py\"\
    , line 22, in sum_squares\n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpi424sc2m.py\"\
    , line 22, in <lambda>\n    return sum(map(lambda x: int(math.ceil(x*x))**2, lst))\n\
    NameError: name 'math' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphoxq3xf2.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphoxq3xf2.py\"\
    , line 39, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphoxq3xf2.py\"\
    , line 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphoxq3xf2.py\"\
    , line 22, in sum_squares\n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphoxq3xf2.py\"\
    , line 22, in <lambda>\n    return sum(map(lambda x: int(math.ceil(x*x))**2, lst))\n\
    NameError: name 'math' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: round(x ** 2, 0),\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppe3afkmf.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppe3afkmf.py\"\
    , line 39, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppe3afkmf.py\"\
    , line 28, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    sum = 0\n    for i in lst:\n        sum\
    \ += int(math.ceil(i))\n    return sum\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjdz081sc.py\"\
    , line 44, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjdz081sc.py\"\
    , line 42, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjdz081sc.py\"\
    , line 28, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjdz081sc.py\"\
    , line 24, in sum_squares\n    sum += int(math.ceil(i))\nNameError: name 'math'\
    \ is not defined\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpamu2jh73.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpamu2jh73.py\"\
    , line 39, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpamu2jh73.py\"\
    , line 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpamu2jh73.py\"\
    , line 22, in sum_squares\n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpamu2jh73.py\"\
    , line 22, in <lambda>\n    return sum(map(lambda x: int(math.ceil(x*x))**2, lst))\n\
    NameError: name 'math' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 39, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in sum_squares\n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in <lambda>\n    return sum(map(lambda x: int(math.ceil(x*x))**2, lst))\n\
    NameError: name 'math' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    sum = 0\n    for i in lst:\n        sum += int(math.ceil(i))\n\
    \    return sum\n\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0axgjwb2.py\", line\
    \ 44, in <module>\n    test_check()\n  File \"/tmp/tmp0axgjwb2.py\", line 42,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp0axgjwb2.py\", line\
    \ 28, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmp0axgjwb2.py\"\
    , line 23, in sum_squares\n    sum += int(math.ceil(i))\nNameError: name 'math'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(math.ceil(x*x)*x),\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3tts75zi.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp3tts75zi.py\", line 39,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp3tts75zi.py\", line\
    \ 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmp3tts75zi.py\"\
    , line 22, in sum_squares\n    return sum(map(lambda x: int(math.ceil(x*x)*x),\
    \ lst))\n  File \"/tmp/tmp3tts75zi.py\", line 22, in <lambda>\n    return sum(map(lambda\
    \ x: int(math.ceil(x*x)*x), lst))\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 39, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in sum_squares\n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in <lambda>\n    return sum(map(lambda x: int(math.ceil(x*x))**2, lst))\n\
    NameError: name 'math' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: round(x*x), lst))\n\
    \ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpye8pl6nm.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpye8pl6nm.py\", line 39,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpye8pl6nm.py\", line\
    \ 28, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n    \ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) ==\
    \ 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplofe2yhg.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmplofe2yhg.py\", line 39,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmplofe2yhg.py\", line\
    \ 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmplofe2yhg.py\"\
    , line 22, in sum_squares\n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n  File \"/tmp/tmplofe2yhg.py\", line 22, in <lambda>\n    return sum(map(lambda\
    \ x: int(math.ceil(x*x))**2, lst))\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 39, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in sum_squares\n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in <lambda>\n    return sum(map(lambda x: int(math.ceil(x*x))**2, lst))\n\
    NameError: name 'math' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1pmhq1w3.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp1pmhq1w3.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp1pmhq1w3.py\", line\
    \ 24, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmp1pmhq1w3.py\"\
    , line 21, in sum_squares\n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n  File \"/tmp/tmp1pmhq1w3.py\", line 21, in <lambda>\n    return sum(map(lambda\
    \ x: int(math.ceil(x*x))**2, lst))\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    sum = 0\n    for num in lst:\n        sum\
    \ += num * num\n    return sum\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpo1dovwyw.py\", line\
    \ 44, in <module>\n    test_check()\n  File \"/tmp/tmpo1dovwyw.py\", line 42,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpo1dovwyw.py\", line\
    \ 31, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: round(x ** 2, int(ceiling(x)))))\
    \ \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n   \
    \ assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0,\
    \ 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqwy4jkfw.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpqwy4jkfw.py\", line 39,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpqwy4jkfw.py\", line\
    \ 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpqwy4jkfw.py\"\
    , line 22, in sum_squares\n    return sum(map(lambda x: round(x ** 2, int(ceiling(x)))))\
    \ \nTypeError: map() must have at least two arguments.\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    sum = 0\n    for num in lst:\n        sum += num\
    \ * num\n    return int(sum)\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpg2i_7n7w.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmpg2i_7n7w.py\", line 41,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpg2i_7n7w.py\", line\
    \ 30, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(round(x*x))**2,\
    \ lst))\n</cell>\n<cell>\ndef check(candidate):\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: SyntaxError
  stderr: "  File \"/tmp/tmp9mfsqxrt.py\", line 23\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 39, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in sum_squares\n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in <lambda>\n    return sum(map(lambda x: int(math.ceil(x*x))**2, lst))\n\
    NameError: name 'math' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(round(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmparn2pj_6.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmparn2pj_6.py\"\
    , line 39, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmparn2pj_6.py\"\
    , line 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 39, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in sum_squares\n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in <lambda>\n    return sum(map(lambda x: int(math.ceil(x*x))**2, lst))\n\
    NameError: name 'math' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: round(x ** 2, int(math.ceil(math.log(x,\
    \ 2)))), lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpybixih14.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpybixih14.py\", line 39,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpybixih14.py\", line\
    \ 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpybixih14.py\"\
    , line 22, in sum_squares\n    return sum(map(lambda x: round(x ** 2, int(math.ceil(math.log(x,\
    \ 2)))), lst))\n  File \"/tmp/tmpybixih14.py\", line 22, in <lambda>\n    return\
    \ sum(map(lambda x: round(x ** 2, int(math.ceil(math.log(x, 2)))), lst))\nNameError:\
    \ name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: round(x ** 2, int(math.ceil(math.log(x,\
    \ 2)))), lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpybixih14.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpybixih14.py\", line 39,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpybixih14.py\", line\
    \ 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpybixih14.py\"\
    , line 22, in sum_squares\n    return sum(map(lambda x: round(x ** 2, int(math.ceil(math.log(x,\
    \ 2)))), lst))\n  File \"/tmp/tmpybixih14.py\", line 22, in <lambda>\n    return\
    \ sum(map(lambda x: round(x ** 2, int(math.ceil(math.log(x, 2)))), lst))\nNameError:\
    \ name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum(map(lambda x: int(math.ceil(x*x)*x),\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7keqbvvg.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp7keqbvvg.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp7keqbvvg.py\", line\
    \ 24, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmp7keqbvvg.py\"\
    , line 21, in sum_squares\n    return sum(map(lambda x: int(math.ceil(x*x)*x),\
    \ lst))\n  File \"/tmp/tmp7keqbvvg.py\", line 21, in <lambda>\n    return sum(map(lambda\
    \ x: int(math.ceil(x*x)*x), lst))\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(round(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmparn2pj_6.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmparn2pj_6.py\"\
    , line 39, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmparn2pj_6.py\"\
    , line 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum(map(lambda x: int(round(x*x))**2, lst))\n\
    \ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpufii6fas.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpufii6fas.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpufii6fas.py\", line\
    \ 24, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    sum = 0\n    for x in lst:\n        sum += int(math.ceil(x))\n\
    \    return sum\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8tt44aly.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmp8tt44aly.py\", line 41,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp8tt44aly.py\", line\
    \ 27, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmp8tt44aly.py\"\
    , line 23, in sum_squares\n    sum += int(math.ceil(x))\nNameError: name 'math'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(math.ceil(x*x)*x),\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3tts75zi.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp3tts75zi.py\", line 39,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp3tts75zi.py\", line\
    \ 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmp3tts75zi.py\"\
    , line 22, in sum_squares\n    return sum(map(lambda x: int(math.ceil(x*x)*x),\
    \ lst))\n  File \"/tmp/tmp3tts75zi.py\", line 22, in <lambda>\n    return sum(map(lambda\
    \ x: int(math.ceil(x*x)*x), lst))\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: round(x ** 2, int(math.ceil(math.log(x,\
    \ 2)))), lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpybixih14.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpybixih14.py\", line 39,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpybixih14.py\", line\
    \ 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpybixih14.py\"\
    , line 22, in sum_squares\n    return sum(map(lambda x: round(x ** 2, int(math.ceil(math.log(x,\
    \ 2)))), lst))\n  File \"/tmp/tmpybixih14.py\", line 22, in <lambda>\n    return\
    \ sum(map(lambda x: round(x ** 2, int(math.ceil(math.log(x, 2)))), lst))\nNameError:\
    \ name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    lst = sorted(lst)\n    sum_ = 0\n    for num in\
    \ lst:\n        sum_ += num * num\n    return int(sum_)\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7we0vqx2.py\", line\
    \ 44, in <module>\n    test_check()\n  File \"/tmp/tmp7we0vqx2.py\", line 42,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp7we0vqx2.py\", line\
    \ 31, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: round(x ** 2, int(math.ceil(math.log(x,\
    \ 2)))), lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpybixih14.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpybixih14.py\", line 39,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpybixih14.py\", line\
    \ 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpybixih14.py\"\
    , line 22, in sum_squares\n    return sum(map(lambda x: round(x ** 2, int(math.ceil(math.log(x,\
    \ 2)))), lst))\n  File \"/tmp/tmpybixih14.py\", line 22, in <lambda>\n    return\
    \ sum(map(lambda x: round(x ** 2, int(math.ceil(math.log(x, 2)))), lst))\nNameError:\
    \ name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 39, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in sum_squares\n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in <lambda>\n    return sum(map(lambda x: int(math.ceil(x*x))**2, lst))\n\
    NameError: name 'math' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: round(x ** 2, int(math.ceil(math.log(x,\
    \ 2)))), lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpybixih14.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpybixih14.py\", line 39,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpybixih14.py\", line\
    \ 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpybixih14.py\"\
    , line 22, in sum_squares\n    return sum(map(lambda x: round(x ** 2, int(math.ceil(math.log(x,\
    \ 2)))), lst))\n  File \"/tmp/tmpybixih14.py\", line 22, in <lambda>\n    return\
    \ sum(map(lambda x: round(x ** 2, int(math.ceil(math.log(x, 2)))), lst))\nNameError:\
    \ name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    lst = sorted(lst)\n    sum = 0\n    for num in\
    \ lst:\n        sum += num * num\n    return int(sum)\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdmlnnwh2.py\", line\
    \ 44, in <module>\n    test_check()\n  File \"/tmp/tmpdmlnnwh2.py\", line 42,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpdmlnnwh2.py\", line\
    \ 31, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 39, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in sum_squares\n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in <lambda>\n    return sum(map(lambda x: int(math.ceil(x*x))**2, lst))\n\
    NameError: name 'math' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(round(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmparn2pj_6.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmparn2pj_6.py\"\
    , line 39, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmparn2pj_6.py\"\
    , line 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(math.ceil(x*x)*x),\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3tts75zi.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp3tts75zi.py\", line 39,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp3tts75zi.py\", line\
    \ 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmp3tts75zi.py\"\
    , line 22, in sum_squares\n    return sum(map(lambda x: int(math.ceil(x*x)*x),\
    \ lst))\n  File \"/tmp/tmp3tts75zi.py\", line 22, in <lambda>\n    return sum(map(lambda\
    \ x: int(math.ceil(x*x)*x), lst))\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    sum = 0\n    for i in lst:\n        sum += int(math.ceil(i))\n\
    \    return sum\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4y6nlb85.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmp4y6nlb85.py\", line 41,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp4y6nlb85.py\", line\
    \ 27, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmp4y6nlb85.py\"\
    , line 23, in sum_squares\n    sum += int(math.ceil(i))\nNameError: name 'math'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    sum = 0\n    for num in lst:\n        sum += num\
    \ * num\n    return int(math.ceil(sum))\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkwyjhhhw.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmpkwyjhhhw.py\", line 41,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpkwyjhhhw.py\", line\
    \ 27, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpkwyjhhhw.py\"\
    , line 24, in sum_squares\n    return int(math.ceil(sum))\nNameError: name 'math'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1pmhq1w3.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp1pmhq1w3.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp1pmhq1w3.py\", line\
    \ 24, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmp1pmhq1w3.py\"\
    , line 21, in sum_squares\n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n  File \"/tmp/tmp1pmhq1w3.py\", line 21, in <lambda>\n    return sum(map(lambda\
    \ x: int(math.ceil(x*x))**2, lst))\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    sum = 0\n    for i in lst:\n        sum += int(math.ceil(i))\n\
    \    return sum\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4y6nlb85.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmp4y6nlb85.py\", line 41,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp4y6nlb85.py\", line\
    \ 27, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmp4y6nlb85.py\"\
    , line 23, in sum_squares\n    sum += int(math.ceil(i))\nNameError: name 'math'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(round(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmparn2pj_6.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmparn2pj_6.py\"\
    , line 39, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmparn2pj_6.py\"\
    , line 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(round(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmparn2pj_6.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmparn2pj_6.py\"\
    , line 39, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmparn2pj_6.py\"\
    , line 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum(map(lambda x: int(round(x*x))**2, lst))\n\
    \ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpufii6fas.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpufii6fas.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpufii6fas.py\", line\
    \ 24, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: round(x**2,0),\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7pu54kib.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp7pu54kib.py\", line 39,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp7pu54kib.py\", line\
    \ 28, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 39, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in sum_squares\n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in <lambda>\n    return sum(map(lambda x: int(math.ceil(x*x))**2, lst))\n\
    NameError: name 'math' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 39, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in sum_squares\n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in <lambda>\n    return sum(map(lambda x: int(math.ceil(x*x))**2, lst))\n\
    NameError: name 'math' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1pmhq1w3.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp1pmhq1w3.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp1pmhq1w3.py\", line\
    \ 24, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmp1pmhq1w3.py\"\
    , line 21, in sum_squares\n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n  File \"/tmp/tmp1pmhq1w3.py\", line 21, in <lambda>\n    return sum(map(lambda\
    \ x: int(math.ceil(x*x))**2, lst))\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 39, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in sum_squares\n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in <lambda>\n    return sum(map(lambda x: int(math.ceil(x*x))**2, lst))\n\
    NameError: name 'math' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    lst = [round(elem, 0) for elem in lst]\n    return\
    \ sum(map(lambda x: x**2, lst))\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0ll_1ejy.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp0ll_1ejy.py\", line 39,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp0ll_1ejy.py\", line\
    \ 28, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: round(x ** 2, int(math.ceil(math.log10(abs(x)))))\n\
    \                 , lst))\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk_k6lcpa.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmpk_k6lcpa.py\", line 40,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpk_k6lcpa.py\", line\
    \ 26, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpk_k6lcpa.py\"\
    , line 22, in sum_squares\n    return sum(map(lambda x: round(x ** 2, int(math.ceil(math.log10(abs(x)))))\n\
    \  File \"/tmp/tmpk_k6lcpa.py\", line 22, in <lambda>\n    return sum(map(lambda\
    \ x: round(x ** 2, int(math.ceil(math.log10(abs(x)))))\nNameError: name 'math'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1pmhq1w3.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp1pmhq1w3.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp1pmhq1w3.py\", line\
    \ 24, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmp1pmhq1w3.py\"\
    , line 21, in sum_squares\n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n  File \"/tmp/tmp1pmhq1w3.py\", line 21, in <lambda>\n    return sum(map(lambda\
    \ x: int(math.ceil(x*x))**2, lst))\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 39, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in sum_squares\n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in <lambda>\n    return sum(map(lambda x: int(math.ceil(x*x))**2, lst))\n\
    NameError: name 'math' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    lst = sorted(lst)\n    \n    sum = 0\n \
    \   \n    for num in lst:\n        sum += num ** 2\n    \n    return int(sum)\n\
    \ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbvvgq7vy.py\", line\
    \ 48, in <module>\n    test_check()\n  File \"/tmp/tmpbvvgq7vy.py\", line 46,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpbvvgq7vy.py\", line\
    \ 35, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(round(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmparn2pj_6.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmparn2pj_6.py\"\
    , line 39, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmparn2pj_6.py\"\
    , line 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    lst = [round(i, int(math.ceil(math.log10(i))))\
    \ for i in lst]\n    return sum(map(lambda x: x**2, lst))\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkyymqvv3.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmpkyymqvv3.py\", line 40,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpkyymqvv3.py\", line\
    \ 26, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpkyymqvv3.py\"\
    , line 22, in sum_squares\n    lst = [round(i, int(math.ceil(math.log10(i))))\
    \ for i in lst]\n  File \"/tmp/tmpkyymqvv3.py\", line 22, in <listcomp>\n    lst\
    \ = [round(i, int(math.ceil(math.log10(i)))) for i in lst]\nNameError: name 'math'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 39, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in sum_squares\n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in <lambda>\n    return sum(map(lambda x: int(math.ceil(x*x))**2, lst))\n\
    NameError: name 'math' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    lst = sorted(lst)\n    sum = 0\n    for x in lst:\n\
    \        sum += int(math.ceil(x))\n    return sum\n\ndef check(candidate):\n \
    \   assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpx5oemyk0.py\", line\
    \ 44, in <module>\n    test_check()\n  File \"/tmp/tmpx5oemyk0.py\", line 42,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpx5oemyk0.py\", line\
    \ 28, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpx5oemyk0.py\"\
    , line 24, in sum_squares\n    sum += int(math.ceil(x))\nNameError: name 'math'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(round(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmparn2pj_6.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmparn2pj_6.py\"\
    , line 39, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmparn2pj_6.py\"\
    , line 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum(map(lambda x: int(round(x*x))**2, lst))\n\
    \ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpufii6fas.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpufii6fas.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpufii6fas.py\", line\
    \ 24, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 39, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in sum_squares\n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in <lambda>\n    return sum(map(lambda x: int(math.ceil(x*x))**2, lst))\n\
    NameError: name 'math' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum(map(lambda x: round(x ** 2, int(math.ceil(math.log(x,\
    \ 2)))), lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphvnlz9xn.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmphvnlz9xn.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmphvnlz9xn.py\", line\
    \ 24, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmphvnlz9xn.py\"\
    , line 21, in sum_squares\n    return sum(map(lambda x: round(x ** 2, int(math.ceil(math.log(x,\
    \ 2)))), lst))\n  File \"/tmp/tmphvnlz9xn.py\", line 21, in <lambda>\n    return\
    \ sum(map(lambda x: round(x ** 2, int(math.ceil(math.log(x, 2)))), lst))\nNameError:\
    \ name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: round(x ** 2, int(math.ceil(math.log(x,\
    \ 2)))), lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpybixih14.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpybixih14.py\", line 39,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpybixih14.py\", line\
    \ 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpybixih14.py\"\
    , line 22, in sum_squares\n    return sum(map(lambda x: round(x ** 2, int(math.ceil(math.log(x,\
    \ 2)))), lst))\n  File \"/tmp/tmpybixih14.py\", line 22, in <lambda>\n    return\
    \ sum(map(lambda x: round(x ** 2, int(math.ceil(math.log(x, 2)))), lst))\nNameError:\
    \ name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 39, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in sum_squares\n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in <lambda>\n    return sum(map(lambda x: int(math.ceil(x*x))**2, lst))\n\
    NameError: name 'math' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    sum = 0\n    for x in lst:\n        sum += int(math.ceil(x))\n\
    \    return sum\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8tt44aly.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmp8tt44aly.py\", line 41,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp8tt44aly.py\", line\
    \ 27, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmp8tt44aly.py\"\
    , line 23, in sum_squares\n    sum += int(math.ceil(x))\nNameError: name 'math'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1pmhq1w3.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp1pmhq1w3.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp1pmhq1w3.py\", line\
    \ 24, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmp1pmhq1w3.py\"\
    , line 21, in sum_squares\n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n  File \"/tmp/tmp1pmhq1w3.py\", line 21, in <lambda>\n    return sum(map(lambda\
    \ x: int(math.ceil(x*x))**2, lst))\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum(map(lambda x: round(x ** 2, int(math.ceil(math.log10(x)))),\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp392q1_2k.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp392q1_2k.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp392q1_2k.py\", line\
    \ 24, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmp392q1_2k.py\"\
    , line 21, in sum_squares\n    return sum(map(lambda x: round(x ** 2, int(math.ceil(math.log10(x)))),\
    \ lst))\n  File \"/tmp/tmp392q1_2k.py\", line 21, in <lambda>\n    return sum(map(lambda\
    \ x: round(x ** 2, int(math.ceil(math.log10(x)))), lst))\nNameError: name 'math'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: round(x*x), lst))\n\
    \ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpye8pl6nm.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpye8pl6nm.py\", line 39,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpye8pl6nm.py\", line\
    \ 28, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    lst = sorted(lst)\n    sum = 0\n    for num in\
    \ lst:\n        sum += num ** 2\n    return sum\n\n\ndef check(candidate):\n \
    \   assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpf0zs4se9.py\", line\
    \ 45, in <module>\n    test_check()\n  File \"/tmp/tmpf0zs4se9.py\", line 43,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpf0zs4se9.py\", line\
    \ 32, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    lst = sorted(lst)\n    \n    sum = 0\n \
    \   \n    for num in lst:\n        sum += num**2\n        \n    return sum\n\n\
    def check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcwyzl5sg.py\", line\
    \ 48, in <module>\n    test_check()\n  File \"/tmp/tmpcwyzl5sg.py\", line 46,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpcwyzl5sg.py\", line\
    \ 35, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 39, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in sum_squares\n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in <lambda>\n    return sum(map(lambda x: int(math.ceil(x*x))**2, lst))\n\
    NameError: name 'math' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: round(x ** 2, int(math.ceil(math.log(x,\
    \ 2)))), lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpybixih14.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpybixih14.py\", line 39,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpybixih14.py\", line\
    \ 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpybixih14.py\"\
    , line 22, in sum_squares\n    return sum(map(lambda x: round(x ** 2, int(math.ceil(math.log(x,\
    \ 2)))), lst))\n  File \"/tmp/tmpybixih14.py\", line 22, in <lambda>\n    return\
    \ sum(map(lambda x: round(x ** 2, int(math.ceil(math.log(x, 2)))), lst))\nNameError:\
    \ name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    sum_squares = 0\n    for num in lst:\n \
    \       sum_squares += num * num\n    return int(sum_squares)\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxlpj5vgo.py\"\
    , line 44, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxlpj5vgo.py\"\
    , line 42, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxlpj5vgo.py\"\
    , line 31, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    sum = 0\n    for num in lst:\n        sum += num\
    \ ** 2\n    return int(sum)\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9xmmd4he.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmp9xmmd4he.py\", line 41,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp9xmmd4he.py\", line\
    \ 30, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 39, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in sum_squares\n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in <lambda>\n    return sum(map(lambda x: int(math.ceil(x*x))**2, lst))\n\
    NameError: name 'math' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: round(x*x), lst))\n\
    \    \ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  \
    \  assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0,\
    \ 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_0jgev_v.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp_0jgev_v.py\", line 39,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp_0jgev_v.py\", line\
    \ 28, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum(map(lambda x: int(round(x*x))**2, lst))\n\
    \ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpufii6fas.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpufii6fas.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpufii6fas.py\", line\
    \ 24, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 39, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in sum_squares\n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in <lambda>\n    return sum(map(lambda x: int(math.ceil(x*x))**2, lst))\n\
    NameError: name 'math' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 39, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in sum_squares\n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in <lambda>\n    return sum(map(lambda x: int(math.ceil(x*x))**2, lst))\n\
    NameError: name 'math' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 39, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in sum_squares\n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in <lambda>\n    return sum(map(lambda x: int(math.ceil(x*x))**2, lst))\n\
    NameError: name 'math' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(round(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmparn2pj_6.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmparn2pj_6.py\"\
    , line 39, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmparn2pj_6.py\"\
    , line 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: round(x ** 2, int(math.ceil(math.log(x,\
    \ 2)))), lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpybixih14.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpybixih14.py\", line 39,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpybixih14.py\", line\
    \ 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpybixih14.py\"\
    , line 22, in sum_squares\n    return sum(map(lambda x: round(x ** 2, int(math.ceil(math.log(x,\
    \ 2)))), lst))\n  File \"/tmp/tmpybixih14.py\", line 22, in <lambda>\n    return\
    \ sum(map(lambda x: round(x ** 2, int(math.ceil(math.log(x, 2)))), lst))\nNameError:\
    \ name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 39, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in sum_squares\n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in <lambda>\n    return sum(map(lambda x: int(math.ceil(x*x))**2, lst))\n\
    NameError: name 'math' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    sum_squares = 0\n    for num in lst:\n \
    \       sum_squares += num * num\n    return int(sum_squares)\n</cell>\n<cell>\n\
    sum_squares([1.0, 2.0, 3.0])\n</cell>\n<cell>\nsum_squares([1.0, 4.0, 9.0])\n\
    </cell>\n<cell>\nsum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n<cell>\nsum_squares([1.4,\
    \ 4.2, 0.0])\n</cell>\n<cell>\nsum_squares([-2.4, 1.0, 1.0])\n</cell>\n<text>\n\
    Problem 3\nWrite a function that takes a list as an argument and returns a list\
    \ with the numbers of the list squared.\n\nExamples:\n>>> lst([1.0, 2.0, 3.0])\n\
    [1.0, 4.0, 9.0]\n>>> lst([1.0, 4.0, 9.0])\n[1.0, 8.0, 27.0]\n>>> lst([1.0, 3.0,\
    \ 5.0, 7.0])\n[1.0, 15.0, 49.0, 97.0]\n>>> lst([1.4, 4.2, 0.0])\n[1.0, 4.0, 6.0]\n\
    >>> lst([-2.4, 1.0, 1.0])\n[-2.4, 1.0, 1.0]\n\n\n</text>\n<cell>\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: SyntaxError
  stderr: "  File \"/tmp/tmp6tmq4mf5.py\", line 26\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 39, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in sum_squares\n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in <lambda>\n    return sum(map(lambda x: int(math.ceil(x*x))**2, lst))\n\
    NameError: name 'math' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: round(x ** 2, int(math.ceil(math.log(x,\
    \ 2)))), lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpybixih14.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpybixih14.py\", line 39,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpybixih14.py\", line\
    \ 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpybixih14.py\"\
    , line 22, in sum_squares\n    return sum(map(lambda x: round(x ** 2, int(math.ceil(math.log(x,\
    \ 2)))), lst))\n  File \"/tmp/tmpybixih14.py\", line 22, in <lambda>\n    return\
    \ sum(map(lambda x: round(x ** 2, int(math.ceil(math.log(x, 2)))), lst))\nNameError:\
    \ name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1pmhq1w3.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp1pmhq1w3.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp1pmhq1w3.py\", line\
    \ 24, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmp1pmhq1w3.py\"\
    , line 21, in sum_squares\n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n  File \"/tmp/tmp1pmhq1w3.py\", line 21, in <lambda>\n    return sum(map(lambda\
    \ x: int(math.ceil(x*x))**2, lst))\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    sum = 0\n    for num in lst:\n        sum += num\
    \ * num\n    return int(sum)\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpg2i_7n7w.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmpg2i_7n7w.py\", line 41,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpg2i_7n7w.py\", line\
    \ 30, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    sum = 0\n    for x in lst:\n        sum += int(math.ceil(x))\n\
    \    return sum\n\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpugobn6s6.py\", line\
    \ 44, in <module>\n    test_check()\n  File \"/tmp/tmpugobn6s6.py\", line 42,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpugobn6s6.py\", line\
    \ 28, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpugobn6s6.py\"\
    , line 23, in sum_squares\n    sum += int(math.ceil(x))\nNameError: name 'math'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    sum = 0\n    for i in lst:\n        sum += int(math.ceil(i))\n\
    \    return sum\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4y6nlb85.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmp4y6nlb85.py\", line 41,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp4y6nlb85.py\", line\
    \ 27, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmp4y6nlb85.py\"\
    , line 23, in sum_squares\n    sum += int(math.ceil(i))\nNameError: name 'math'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum(map(lambda x: int(round(x*x))**2, lst))\n\
    \ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpufii6fas.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpufii6fas.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpufii6fas.py\", line\
    \ 24, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum(map(lambda x: int(round(x*x))**2, lst))\n\
    \ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpufii6fas.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpufii6fas.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpufii6fas.py\", line\
    \ 24, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    sum = 0\n    for x in lst:\n        sum += int(math.ceil(x)\
    \ ** 2)\n    return sum\n\ndef check(candidate):\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpii277s5w.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmpii277s5w.py\", line 41,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpii277s5w.py\", line\
    \ 27, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpii277s5w.py\"\
    , line 23, in sum_squares\n    sum += int(math.ceil(x) ** 2)\nNameError: name\
    \ 'math' is not defined\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 39, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in sum_squares\n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in <lambda>\n    return sum(map(lambda x: int(math.ceil(x*x))**2, lst))\n\
    NameError: name 'math' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: round(x*x), lst))\n\
    \ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpye8pl6nm.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpye8pl6nm.py\", line 39,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpye8pl6nm.py\", line\
    \ 28, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum(map(lambda x: int(math.ceil(x * x)),\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpekrf0urw.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpekrf0urw.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpekrf0urw.py\", line\
    \ 24, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpekrf0urw.py\"\
    , line 21, in sum_squares\n    return sum(map(lambda x: int(math.ceil(x * x)),\
    \ lst))\n  File \"/tmp/tmpekrf0urw.py\", line 21, in <lambda>\n    return sum(map(lambda\
    \ x: int(math.ceil(x * x)), lst))\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 39, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in sum_squares\n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in <lambda>\n    return sum(map(lambda x: int(math.ceil(x*x))**2, lst))\n\
    NameError: name 'math' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum(map(lambda x: round(x ** 2, int(math.ceil(math.log10(x)))),\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp392q1_2k.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp392q1_2k.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp392q1_2k.py\", line\
    \ 24, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmp392q1_2k.py\"\
    , line 21, in sum_squares\n    return sum(map(lambda x: round(x ** 2, int(math.ceil(math.log10(x)))),\
    \ lst))\n  File \"/tmp/tmp392q1_2k.py\", line 21, in <lambda>\n    return sum(map(lambda\
    \ x: round(x ** 2, int(math.ceil(math.log10(x)))), lst))\nNameError: name 'math'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1pmhq1w3.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp1pmhq1w3.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp1pmhq1w3.py\", line\
    \ 24, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmp1pmhq1w3.py\"\
    , line 21, in sum_squares\n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n  File \"/tmp/tmp1pmhq1w3.py\", line 21, in <lambda>\n    return sum(map(lambda\
    \ x: int(math.ceil(x*x))**2, lst))\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1pmhq1w3.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp1pmhq1w3.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp1pmhq1w3.py\", line\
    \ 24, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmp1pmhq1w3.py\"\
    , line 21, in sum_squares\n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n  File \"/tmp/tmp1pmhq1w3.py\", line 21, in <lambda>\n    return sum(map(lambda\
    \ x: int(math.ceil(x*x))**2, lst))\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: round(x ** 2, int(math.ceil(math.log(x,\
    \ 2)))), lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpybixih14.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpybixih14.py\", line 39,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpybixih14.py\", line\
    \ 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpybixih14.py\"\
    , line 22, in sum_squares\n    return sum(map(lambda x: round(x ** 2, int(math.ceil(math.log(x,\
    \ 2)))), lst))\n  File \"/tmp/tmpybixih14.py\", line 22, in <lambda>\n    return\
    \ sum(map(lambda x: round(x ** 2, int(math.ceil(math.log(x, 2)))), lst))\nNameError:\
    \ name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(math.ceil(x*x)*x),\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3tts75zi.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp3tts75zi.py\", line 39,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp3tts75zi.py\", line\
    \ 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmp3tts75zi.py\"\
    , line 22, in sum_squares\n    return sum(map(lambda x: int(math.ceil(x*x)*x),\
    \ lst))\n  File \"/tmp/tmp3tts75zi.py\", line 22, in <lambda>\n    return sum(map(lambda\
    \ x: int(math.ceil(x*x)*x), lst))\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(math.ceil(x*x)*x),\
    \ lst))\n    \n</cell>\n<cell>\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: SyntaxError
  stderr: "  File \"/tmp/tmp1axvyjyn.py\", line 24\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    lst = sorted(lst)\n    sum = 0\n    for num in\
    \ lst:\n        sum += num ** 2\n    return int(sum)\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp681u_oov.py\", line\
    \ 44, in <module>\n    test_check()\n  File \"/tmp/tmp681u_oov.py\", line 42,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp681u_oov.py\", line\
    \ 31, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 39, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in sum_squares\n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in <lambda>\n    return sum(map(lambda x: int(math.ceil(x*x))**2, lst))\n\
    NameError: name 'math' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(round(x*x))**2,\
    \ lst))\n</cell>\n<cell>\ndef check(candidate):\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: SyntaxError
  stderr: "  File \"/tmp/tmp9mfsqxrt.py\", line 23\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(round(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmparn2pj_6.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmparn2pj_6.py\"\
    , line 39, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmparn2pj_6.py\"\
    , line 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    sum = 0\n    for x in lst:\n        sum\
    \ += int(math.ceil(x))\n    return sum\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyzvhzojk.py\", line\
    \ 44, in <module>\n    test_check()\n  File \"/tmp/tmpyzvhzojk.py\", line 42,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpyzvhzojk.py\", line\
    \ 28, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpyzvhzojk.py\"\
    , line 24, in sum_squares\n    sum += int(math.ceil(x))\nNameError: name 'math'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 39, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in sum_squares\n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in <lambda>\n    return sum(map(lambda x: int(math.ceil(x*x))**2, lst))\n\
    NameError: name 'math' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 39, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in sum_squares\n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in <lambda>\n    return sum(map(lambda x: int(math.ceil(x*x))**2, lst))\n\
    NameError: name 'math' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: round(x*x), lst))\n\
    \ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpye8pl6nm.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpye8pl6nm.py\", line 39,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpye8pl6nm.py\", line\
    \ 28, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(round(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmparn2pj_6.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmparn2pj_6.py\"\
    , line 39, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmparn2pj_6.py\"\
    , line 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    sum = 0\n    for num in lst:\n        sum += num\
    \ * num\n    return int(math.ceil(sum))\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkwyjhhhw.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmpkwyjhhhw.py\", line 41,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpkwyjhhhw.py\", line\
    \ 27, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpkwyjhhhw.py\"\
    , line 24, in sum_squares\n    return int(math.ceil(sum))\nNameError: name 'math'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 39, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in sum_squares\n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in <lambda>\n    return sum(map(lambda x: int(math.ceil(x*x))**2, lst))\n\
    NameError: name 'math' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 39, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in sum_squares\n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in <lambda>\n    return sum(map(lambda x: int(math.ceil(x*x))**2, lst))\n\
    NameError: name 'math' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 39, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in sum_squares\n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in <lambda>\n    return sum(map(lambda x: int(math.ceil(x*x))**2, lst))\n\
    NameError: name 'math' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    sum = 0\n    for x in lst:\n        sum += int(math.ceil(x))\n\
    \    return sum\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8tt44aly.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmp8tt44aly.py\", line 41,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp8tt44aly.py\", line\
    \ 27, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmp8tt44aly.py\"\
    , line 23, in sum_squares\n    sum += int(math.ceil(x))\nNameError: name 'math'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 39, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in sum_squares\n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in <lambda>\n    return sum(map(lambda x: int(math.ceil(x*x))**2, lst))\n\
    NameError: name 'math' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: round(x**2,0),\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7pu54kib.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp7pu54kib.py\", line 39,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp7pu54kib.py\", line\
    \ 28, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    sum = 0\n    for i in lst:\n        sum += int(math.ceil(i))\n\
    \    return sum\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4y6nlb85.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmp4y6nlb85.py\", line 41,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp4y6nlb85.py\", line\
    \ 27, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmp4y6nlb85.py\"\
    , line 23, in sum_squares\n    sum += int(math.ceil(i))\nNameError: name 'math'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 39, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in sum_squares\n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in <lambda>\n    return sum(map(lambda x: int(math.ceil(x*x))**2, lst))\n\
    NameError: name 'math' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    lst = sorted(lst)\n    \n    sum = 0\n \
    \   \n    for num in lst:\n        sum += num**2\n    \n    return sum\n\ndef\
    \ check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert\
    \ candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) ==\
    \ 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0,\
    \ 10000.0]) == 200000000\n    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert\
    \ candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n    assert candidate([0.0]) ==\
    \ 0\n    assert candidate([-1.0]) == 1\n    assert candidate([-1.0, 1.0, 0.0])\
    \ == 2\n\ndef test_check():\n    check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpur_7ka5c.py\", line\
    \ 48, in <module>\n    test_check()\n  File \"/tmp/tmpur_7ka5c.py\", line 46,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpur_7ka5c.py\", line\
    \ 35, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum(map(lambda x: round(x ** 2, 0), lst))\n\
    \ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpw5abpbii.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpw5abpbii.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpw5abpbii.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 295, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 293, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3we6zncr.py\"\
    , line 279, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum(map(lambda x: int(round(x*x))**2, lst))\n\
    \ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpufii6fas.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpufii6fas.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpufii6fas.py\", line\
    \ 24, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    lst = [round(i, int(math.ceil(math.log10(i))))\
    \ for i in lst]\n    return sum(map(lambda x: x**2, lst))\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9fn3lkg2.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp9fn3lkg2.py\", line 39,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp9fn3lkg2.py\", line\
    \ 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmp9fn3lkg2.py\"\
    , line 21, in sum_squares\n    lst = [round(i, int(math.ceil(math.log10(i))))\
    \ for i in lst]\n  File \"/tmp/tmp9fn3lkg2.py\", line 21, in <listcomp>\n    lst\
    \ = [round(i, int(math.ceil(math.log10(i)))) for i in lst]\nNameError: name 'math'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    lst = sorted(lst)\n    sum = 0\n    for num in\
    \ lst:\n        sum += num * num\n    return int(sum)\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdmlnnwh2.py\", line\
    \ 44, in <module>\n    test_check()\n  File \"/tmp/tmpdmlnnwh2.py\", line 42,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpdmlnnwh2.py\", line\
    \ 31, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    sum = 0\n    for x in lst:\n        sum\
    \ += int(x ** 2)\n    return sum\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp68jw36t_.py\", line\
    \ 44, in <module>\n    test_check()\n  File \"/tmp/tmp68jw36t_.py\", line 42,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp68jw36t_.py\", line\
    \ 31, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    lst = sorted(lst)\n    \n    sum = 0\n \
    \   \n    for x in lst:\n        sum += x ** 2\n        \n    return sum\n   \
    \ \ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7gfecl5r.py\", line\
    \ 48, in <module>\n    test_check()\n  File \"/tmp/tmp7gfecl5r.py\", line 46,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp7gfecl5r.py\", line\
    \ 35, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 39, in test_check\n    check(sum_squares)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in sum_squares\n    return sum(map(lambda x: int(math.ceil(x*x))**2,\
    \ lst))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzshgys9.py\"\
    , line 22, in <lambda>\n    return sum(map(lambda x: int(math.ceil(x*x))**2, lst))\n\
    NameError: name 'math' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    lst = sorted(lst)\n    sum = 0\n    for num in\
    \ lst:\n        sum += num * num\n    return int(sum)\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdmlnnwh2.py\", line\
    \ 44, in <module>\n    test_check()\n  File \"/tmp/tmpdmlnnwh2.py\", line 42,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpdmlnnwh2.py\", line\
    \ 31, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659749235
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \n    return sum(map(lambda x: round(x ** 2, 0),\
    \ lst))\n    \ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) ==\
    \ 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4cuwb6lw.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp4cuwb6lw.py\", line 39,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp4cuwb6lw.py\", line\
    \ 28, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659749235

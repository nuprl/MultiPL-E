name: HumanEval_102_choose_num
language: py
results:
- program: "def choose_num(x: int, y: int) -> int:\n    \"\"\"This function takes\
    \ two positive numbers x and y and returns the\n    biggest even integer number\
    \ that is in the range [x, y] inclusive. If \n    there's no such number, then\
    \ the function should return -1.\n\n    For example:\n    >>> choose_num(12, 15)\n\
    \    14\n    >>> choose_num(13, 12)\n    -1\n    \"\"\"\n    if x <= y:\n    \
    \    return -1\n    \n    even = x % 2 == 0\n    \n    if even:\n        \n  \
    \      if y % 2 == 0:\n            return x\n        else:\n            return\
    \ y\n    else:\n        \n        if y % 2 == 0:\n            return y\n     \
    \   else:\n            return x\n    \ndef check(candidate):\n    assert candidate(12,\
    \ 15) == 14\n    assert candidate(13, 12) == -1\n    assert candidate(33, 12354)\
    \ == 12354\n    assert candidate(5234, 5233) == -1\n    assert candidate(6, 29)\
    \ == 28\n    assert candidate(27, 10) == -1\n    assert candidate(7, 7) == -1\n\
    \    assert candidate(546, 546) == 546\n\ndef test_check():\n    check(choose_num)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxlp3ib6c.py\"\
    , line 43, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxlp3ib6c.py\"\
    , line 41, in test_check\n    check(choose_num)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxlp3ib6c.py\"\
    , line 31, in check\n    assert candidate(12, 15) == 14\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def choose_num(x: int, y: int) -> int:\n    \"\"\"This function takes\
    \ two positive numbers x and y and returns the\n    biggest even integer number\
    \ that is in the range [x, y] inclusive. If \n    there's no such number, then\
    \ the function should return -1.\n\n    For example:\n    >>> choose_num(12, 15)\n\
    \    14\n    >>> choose_num(13, 12)\n    -1\n    \"\"\"\n    if x > y:\n     \
    \   x, y = y, x\n    \n    if x % 2 == 0:\n        if y % 2 == 0:\n          \
    \  return x\n        else:\n            return y\n    else:\n        if y % 2\
    \ == 0:\n            return y\n        else:\n            return x\n\ndef check(candidate):\n\
    \    assert candidate(12, 15) == 14\n    assert candidate(13, 12) == -1\n    assert\
    \ candidate(33, 12354) == 12354\n    assert candidate(5234, 5233) == -1\n    assert\
    \ candidate(6, 29) == 28\n    assert candidate(27, 10) == -1\n    assert candidate(7,\
    \ 7) == -1\n    assert candidate(546, 546) == 546\n\ndef test_check():\n    check(choose_num)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyqnqu6h7.py\"\
    , line 39, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyqnqu6h7.py\"\
    , line 37, in test_check\n    check(choose_num)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyqnqu6h7.py\"\
    , line 27, in check\n    assert candidate(12, 15) == 14\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def choose_num(x: int, y: int) -> int:\n    \"\"\"This function takes\
    \ two positive numbers x and y and returns the\n    biggest even integer number\
    \ that is in the range [x, y] inclusive. If \n    there's no such number, then\
    \ the function should return -1.\n\n    For example:\n    >>> choose_num(12, 15)\n\
    \    14\n    >>> choose_num(13, 12)\n    -1\n    \"\"\"\n    if x > y:\n     \
    \   x, y = y, x\n    \n    even = x % 2 == 0\n    \n    if even:\n        even\
    \ = y % 2 == 0\n    \n    if even and x != y:\n        return y\n    elif not\
    \ even and x != y:\n        return x\n    elif even and y != x:\n        return\
    \ y\n    elif not even and y != x:\n        return x\n    else:\n        return\
    \ -1\n\ndef check(candidate):\n    assert candidate(12, 15) == 14\n    assert\
    \ candidate(13, 12) == -1\n    assert candidate(33, 12354) == 12354\n    assert\
    \ candidate(5234, 5233) == -1\n    assert candidate(6, 29) == 28\n    assert candidate(27,\
    \ 10) == -1\n    assert candidate(7, 7) == -1\n    assert candidate(546, 546)\
    \ == 546\n\ndef test_check():\n    check(choose_num)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7dkuxgjx.py\"\
    , line 44, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7dkuxgjx.py\"\
    , line 42, in test_check\n    check(choose_num)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7dkuxgjx.py\"\
    , line 32, in check\n    assert candidate(12, 15) == 14\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def choose_num(x: int, y: int) -> int:\n    \"\"\"This function takes\
    \ two positive numbers x and y and returns the\n    biggest even integer number\
    \ that is in the range [x, y] inclusive. If \n    there's no such number, then\
    \ the function should return -1.\n\n    For example:\n    >>> choose_num(12, 15)\n\
    \    14\n    >>> choose_num(13, 12)\n    -1\n    \"\"\"\n    if x > y:\n     \
    \   x, y = y, x\n    \n    if x % 2 == 0:\n        return y\n    \n    if y %\
    \ 2 == 0:\n        return x\n    \n    if x % 2 == 0 and y % 2 == 0:\n       \
    \ return x + y\n    \n    if x % 2 == 0 and y % 2 != 0:\n        return x + y\
    \ - 1\n    \n    if x % 2 != 0 and y % 2 != 0:\n        return x + y - 1\n   \
    \ \n    if x % 2 != 0 and y % 2 == 0:\n        return x + y\n    \n    if x %\
    \ 2 == 0 and y % 2 != 0:\n        return x + y + 1\n    \n    if x % 2 != 0 and\
    \ y % 2 == 0:\n        return x + y - 1\n    \n    return -1\n</cell>\n<cell>\n\
    def check(candidate):\n    assert candidate(12, 15) == 14\n    assert candidate(13,\
    \ 12) == -1\n    assert candidate(33, 12354) == 12354\n    assert candidate(5234,\
    \ 5233) == -1\n    assert candidate(6, 29) == 28\n    assert candidate(27, 10)\
    \ == -1\n    assert candidate(7, 7) == -1\n    assert candidate(546, 546) == 546\n\
    \ndef test_check():\n    check(choose_num)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpplpl890b.py\"\
    , line 40\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def choose_num(x: int, y: int) -> int:\n    \"\"\"This function takes\
    \ two positive numbers x and y and returns the\n    biggest even integer number\
    \ that is in the range [x, y] inclusive. If \n    there's no such number, then\
    \ the function should return -1.\n\n    For example:\n    >>> choose_num(12, 15)\n\
    \    14\n    >>> choose_num(13, 12)\n    -1\n    \"\"\"\n    if x > y:\n     \
    \   x, y = y, x\n    \n    even = x % 2 == 0\n    \n    if even:\n        even\
    \ = y % 2 == 0\n    \n    if even and x > y:\n        return -1\n    \n    if\
    \ even and x == y:\n        return x\n    \n    if even and x > y:\n        return\
    \ y\n    \n    if even and x == y:\n        return x\n    \n    if even and x\
    \ == y:\n        return x\n    \n    if even and x > y:\n        return y\n  \
    \  \n    if even and x == y:\n        return x\n    \n    if even and x > y:\n\
    \        return y\n    \n    if even and x == y:\n        return x\n    \n   \
    \ if even and x > y:\n        return y\n    \n    if even and x == y:\n      \
    \  return x\n    \n    if even and x > y:\n        return y\n    \n    if even\
    \ and x == y:\n        return x\n    \n    if even and x > y:\n        return\
    \ y\n    \n    if even and x == y:\n        return x\n    \n    if even and x\
    \ > y:\n        return y\n    \n    if even and x == y:\n        return x\n  \
    \  \n    if even and x > y:\n        return y\n    \n    if even and x == y:\n\
    \        return x\n    \n    if even and x > y:\n        return y\n    \n    if\
    \ even and x == y:\n        return x\n    \n    if even and x > y:\n        return\
    \ y\n    \n    if even and x == y:\n        return x\n    \n    if even and x\
    \ > y:\n        return y\n    \n    if even and x == y:\n        return x\n  \
    \  \n    if even and x > y:\n        return y\n    \n    if even and x == y:\n\
    \        return x\n    \n    if even and x > y:\n        return y\n    \n    if\
    \ even and x == y:\n        return x\n    \n    if even and x > y:\n        return\
    \ y\n    \n    if even and x == y:\n        return x\n    \n    if even and x\
    \ > y:\n        return y\n    \n    if even and x == y:\n        return x\n  \
    \  \n    if even and x > y:\n        return y\n    \n    if even and x == y:\n\
    \        return x\n    \n    if even and x > y:\n        return y\n    \n    if\
    \ even and x == y:\n        return x\n    \n    if even and x > y:\n        return\
    \ y\n    \n    if even and x == y:\n        return x\n    \n    if even and x\
    \ > y:\n        return y\n    \n    if even and x == y:\n        return x\n  \
    \  \n    if even and x > y:\n        return y\n    \n    if even and x == y:\n\
    \        return x\n    \n    if even and x > y:\n        return y\n    \n    if\
    \ even and x == y:\n        return x\n    \n    if even and x > y:\ndef check(candidate):\n\
    \    assert candidate(12, 15) == 14\n    assert candidate(13, 12) == -1\n    assert\
    \ candidate(33, 12354) == 12354\n    assert candidate(5234, 5233) == -1\n    assert\
    \ candidate(6, 29) == 28\n    assert candidate(27, 10) == -1\n    assert candidate(7,\
    \ 7) == -1\n    assert candidate(546, 546) == 546\n\ndef test_check():\n    check(choose_num)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm4podigv.py\"\
    , line 156\n    def check(candidate):\nIndentationError: expected an indented\
    \ block after 'if' statement on line 155\n"
  exit_code: -1
  status: Exception
- program: "def choose_num(x: int, y: int) -> int:\n    \"\"\"This function takes\
    \ two positive numbers x and y and returns the\n    biggest even integer number\
    \ that is in the range [x, y] inclusive. If \n    there's no such number, then\
    \ the function should return -1.\n\n    For example:\n    >>> choose_num(12, 15)\n\
    \    14\n    >>> choose_num(13, 12)\n    -1\n    \"\"\"\n    if x > y:\n     \
    \   x, y = y, x\n    \n    even = True\n    \n    while even and x != y:\n   \
    \     if x % 2 == 0:\n            even = False\n            x //= 2\n        else:\n\
    \            y //= 2\n    \n    if even:\n        return x\n    else:\n      \
    \  return -1\n\ndef check(candidate):\n    assert candidate(12, 15) == 14\n  \
    \  assert candidate(13, 12) == -1\n    assert candidate(33, 12354) == 12354\n\
    \    assert candidate(5234, 5233) == -1\n    assert candidate(6, 29) == 28\n \
    \   assert candidate(27, 10) == -1\n    assert candidate(7, 7) == -1\n    assert\
    \ candidate(546, 546) == 546\n\ndef test_check():\n    check(choose_num)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpel1ipv6f.py\"\
    , line 42, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpel1ipv6f.py\"\
    , line 40, in test_check\n    check(choose_num)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpel1ipv6f.py\"\
    , line 30, in check\n    assert candidate(12, 15) == 14\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def choose_num(x: int, y: int) -> int:\n    \"\"\"This function takes\
    \ two positive numbers x and y and returns the\n    biggest even integer number\
    \ that is in the range [x, y] inclusive. If \n    there's no such number, then\
    \ the function should return -1.\n\n    For example:\n    >>> choose_num(12, 15)\n\
    \    14\n    >>> choose_num(13, 12)\n    -1\n    \"\"\"\n    if x > y:\n     \
    \   x, y = y, x\n    \n    if x % 2 == 0:\n        return y\n    \n    if y %\
    \ 2 == 0:\n        return x\n    \n    if x % 2 == 0 and y % 2 == 0:\n       \
    \ return x // 2\n    \n    if x % 2 == 0 and y % 2 != 0:\n        return y //\
    \ 2\n    \n    if x % 2 != 0 and y % 2 == 0:\n        return x // 2 + 1\n    \n\
    \    if x % 2 != 0 and y % 2 != 0:\n        return y // 2 + 1\n    \n    return\
    \ -1\n</cell>\n<cell>\ndef check(candidate):\n    assert candidate(12, 15) ==\
    \ 14\n    assert candidate(13, 12) == -1\n    assert candidate(33, 12354) == 12354\n\
    \    assert candidate(5234, 5233) == -1\n    assert candidate(6, 29) == 28\n \
    \   assert candidate(27, 10) == -1\n    assert candidate(7, 7) == -1\n    assert\
    \ candidate(546, 546) == 546\n\ndef test_check():\n    check(choose_num)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfml0f_2p.py\"\
    , line 34\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def choose_num(x: int, y: int) -> int:\n    \"\"\"This function takes\
    \ two positive numbers x and y and returns the\n    biggest even integer number\
    \ that is in the range [x, y] inclusive. If \n    there's no such number, then\
    \ the function should return -1.\n\n    For example:\n    >>> choose_num(12, 15)\n\
    \    14\n    >>> choose_num(13, 12)\n    -1\n    \"\"\"\n    if x > y:\n     \
    \   x, y = y, x\n    if x == y:\n        return -1\n    if x % 2 == 0:\n     \
    \   return x // 2\n    if y % 2 == 0:\n        return y // 2\n    if x % 2 ==\
    \ 0 and y % 2 == 0:\n        return x // 2 + y // 2\n    if x % 2 == 0 and y %\
    \ 2 != 0:\n        return x // 2 + 1\n    if x % 2 != 0 and y % 2 == 0:\n    \
    \    return y // 2 + 1\n    if x % 2 != 0 and y % 2 != 0:\n        return x //\
    \ 2 + y // 2\n    return -1\n\n\ndef check(candidate):\n    assert candidate(12,\
    \ 15) == 14\n    assert candidate(13, 12) == -1\n    assert candidate(33, 12354)\
    \ == 12354\n    assert candidate(5234, 5233) == -1\n    assert candidate(6, 29)\
    \ == 28\n    assert candidate(27, 10) == -1\n    assert candidate(7, 7) == -1\n\
    \    assert candidate(546, 546) == 546\n\ndef test_check():\n    check(choose_num)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4le8g6hw.py\"\
    , line 44, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4le8g6hw.py\"\
    , line 42, in test_check\n    check(choose_num)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4le8g6hw.py\"\
    , line 32, in check\n    assert candidate(12, 15) == 14\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def choose_num(x: int, y: int) -> int:\n    \"\"\"This function takes\
    \ two positive numbers x and y and returns the\n    biggest even integer number\
    \ that is in the range [x, y] inclusive. If \n    there's no such number, then\
    \ the function should return -1.\n\n    For example:\n    >>> choose_num(12, 15)\n\
    \    14\n    >>> choose_num(13, 12)\n    -1\n    \"\"\"\n    if x > y:\n     \
    \   x, y = y, x\n    if x == y:\n        return -1\n    if x % 2 == 0:\n     \
    \   return x // 2\n    if y % 2 == 0:\n        return y // 2\n    if x % 2 ==\
    \ 0 and y % 2 == 0:\n        return x // 2 + y // 2\n    if x % 2 == 1 and y %\
    \ 2 == 1:\n        return x // 2 + y // 2\n    if x % 2 == 1 and y % 2 != 0:\n\
    \        return x // 2 + y // 2 + 1\n    if x % 2 != 1 and y % 2 != 0:\n     \
    \   return x // 2 + y // 2 + 2\n    return -1\n\n\ndef check(candidate):\n   \
    \ assert candidate(12, 15) == 14\n    assert candidate(13, 12) == -1\n    assert\
    \ candidate(33, 12354) == 12354\n    assert candidate(5234, 5233) == -1\n    assert\
    \ candidate(6, 29) == 28\n    assert candidate(27, 10) == -1\n    assert candidate(7,\
    \ 7) == -1\n    assert candidate(546, 546) == 546\n\ndef test_check():\n    check(choose_num)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9_gnpvry.py\"\
    , line 44, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9_gnpvry.py\"\
    , line 42, in test_check\n    check(choose_num)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9_gnpvry.py\"\
    , line 32, in check\n    assert candidate(12, 15) == 14\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def choose_num(x: int, y: int) -> int:\n    \"\"\"This function takes\
    \ two positive numbers x and y and returns the\n    biggest even integer number\
    \ that is in the range [x, y] inclusive. If \n    there's no such number, then\
    \ the function should return -1.\n\n    For example:\n    >>> choose_num(12, 15)\n\
    \    14\n    >>> choose_num(13, 12)\n    -1\n    \"\"\"\n    if x <= y:\n    \
    \    smaller = x\n    else:\n        smaller = y\n\n    larger = smaller\n\n \
    \   while smaller != larger:\n        if smaller % 2 == 0:\n            smaller\
    \ += 1\n        else:\n            smaller -= 1\n\n        if larger % 2 == 0:\n\
    \            larger += 1\n        else:\n            larger -= 1\n\n    return\
    \ larger\n\n\ndef check(candidate):\n    assert candidate(12, 15) == 14\n    assert\
    \ candidate(13, 12) == -1\n    assert candidate(33, 12354) == 12354\n    assert\
    \ candidate(5234, 5233) == -1\n    assert candidate(6, 29) == 28\n    assert candidate(27,\
    \ 10) == -1\n    assert candidate(7, 7) == -1\n    assert candidate(546, 546)\
    \ == 546\n\ndef test_check():\n    check(choose_num)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0o76qnlr.py\"\
    , line 46, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0o76qnlr.py\"\
    , line 44, in test_check\n    check(choose_num)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0o76qnlr.py\"\
    , line 34, in check\n    assert candidate(12, 15) == 14\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def choose_num(x: int, y: int) -> int:\n    \"\"\"This function takes\
    \ two positive numbers x and y and returns the\n    biggest even integer number\
    \ that is in the range [x, y] inclusive. If \n    there's no such number, then\
    \ the function should return -1.\n\n    For example:\n    >>> choose_num(12, 15)\n\
    \    14\n    >>> choose_num(13, 12)\n    -1\n    \"\"\"\n    if x > y:\n     \
    \   x, y = y, x\n    if x % 2 == 0:\n        return x // 2\n    if y % 2 == 0:\n\
    \        return y // 2\n    if x <= y:\n        return -1\n    if y > x:\n   \
    \     return -1\n    return x + (y - x)//2\n\n\ndef check(candidate):\n    assert\
    \ candidate(12, 15) == 14\n    assert candidate(13, 12) == -1\n    assert candidate(33,\
    \ 12354) == 12354\n    assert candidate(5234, 5233) == -1\n    assert candidate(6,\
    \ 29) == 28\n    assert candidate(27, 10) == -1\n    assert candidate(7, 7) ==\
    \ -1\n    assert candidate(546, 546) == 546\n\ndef test_check():\n    check(choose_num)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvi_nnuz8.py\"\
    , line 38, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvi_nnuz8.py\"\
    , line 36, in test_check\n    check(choose_num)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvi_nnuz8.py\"\
    , line 26, in check\n    assert candidate(12, 15) == 14\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def choose_num(x: int, y: int) -> int:\n    \"\"\"This function takes\
    \ two positive numbers x and y and returns the\n    biggest even integer number\
    \ that is in the range [x, y] inclusive. If \n    there's no such number, then\
    \ the function should return -1.\n\n    For example:\n    >>> choose_num(12, 15)\n\
    \    14\n    >>> choose_num(13, 12)\n    -1\n    \"\"\"\n    if x > y:\n     \
    \   x, y = y, x\n    if x % 2 == 0:\n        if y % 2 == 0:\n            return\
    \ x\n        else:\n            return y\n    else:\n        if y % 2 == 0:\n\
    \            return y\n        else:\n            return x\n\n\ndef check(candidate):\n\
    \    assert candidate(12, 15) == 14\n    assert candidate(13, 12) == -1\n    assert\
    \ candidate(33, 12354) == 12354\n    assert candidate(5234, 5233) == -1\n    assert\
    \ candidate(6, 29) == 28\n    assert candidate(27, 10) == -1\n    assert candidate(7,\
    \ 7) == -1\n    assert candidate(546, 546) == 546\n\ndef test_check():\n    check(choose_num)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkv1w6uxq.py\"\
    , line 39, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkv1w6uxq.py\"\
    , line 37, in test_check\n    check(choose_num)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkv1w6uxq.py\"\
    , line 27, in check\n    assert candidate(12, 15) == 14\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def choose_num(x: int, y: int) -> int:\n    \"\"\"This function takes\
    \ two positive numbers x and y and returns the\n    biggest even integer number\
    \ that is in the range [x, y] inclusive. If \n    there's no such number, then\
    \ the function should return -1.\n\n    For example:\n    >>> choose_num(12, 15)\n\
    \    14\n    >>> choose_num(13, 12)\n    -1\n    \"\"\"\n    if x > y:\n     \
    \   x, y = y, x\n    if x % 2 == 0:\n        if y % 2 == 0:\n            return\
    \ x\n        else:\n            return y\n    else:\n        if y % 2 == 0:\n\
    \            return y\n        else:\n            return x\n\n\ndef check(candidate):\n\
    \    assert candidate(12, 15) == 14\n    assert candidate(13, 12) == -1\n    assert\
    \ candidate(33, 12354) == 12354\n    assert candidate(5234, 5233) == -1\n    assert\
    \ candidate(6, 29) == 28\n    assert candidate(27, 10) == -1\n    assert candidate(7,\
    \ 7) == -1\n    assert candidate(546, 546) == 546\n\ndef test_check():\n    check(choose_num)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf6t9owce.py\"\
    , line 39, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf6t9owce.py\"\
    , line 37, in test_check\n    check(choose_num)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf6t9owce.py\"\
    , line 27, in check\n    assert candidate(12, 15) == 14\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def choose_num(x: int, y: int) -> int:\n    \"\"\"This function takes\
    \ two positive numbers x and y and returns the\n    biggest even integer number\
    \ that is in the range [x, y] inclusive. If \n    there's no such number, then\
    \ the function should return -1.\n\n    For example:\n    >>> choose_num(12, 15)\n\
    \    14\n    >>> choose_num(13, 12)\n    -1\n    \"\"\"\n    if x <= y:\n    \
    \    smaller = x\n        larger = y\n    else:\n        smaller = y\n       \
    \ larger = x\n    \n    even = smaller\n    odd = larger\n    \n    while even\
    \ % 2 == 0 and odd % 2 == 0:\n        even += 2\n        odd += 2\n    \n    if\
    \ even > larger:\n        return even\n    else:\n        return odd\n\n\ndef\
    \ check(candidate):\n    assert candidate(12, 15) == 14\n    assert candidate(13,\
    \ 12) == -1\n    assert candidate(33, 12354) == 12354\n    assert candidate(5234,\
    \ 5233) == -1\n    assert candidate(6, 29) == 28\n    assert candidate(27, 10)\
    \ == -1\n    assert candidate(7, 7) == -1\n    assert candidate(546, 546) == 546\n\
    \ndef test_check():\n    check(choose_num)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp468fxsli.py\"\
    , line 45, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp468fxsli.py\"\
    , line 43, in test_check\n    check(choose_num)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp468fxsli.py\"\
    , line 33, in check\n    assert candidate(12, 15) == 14\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def choose_num(x: int, y: int) -> int:\n    \"\"\"This function takes\
    \ two positive numbers x and y and returns the\n    biggest even integer number\
    \ that is in the range [x, y] inclusive. If \n    there's no such number, then\
    \ the function should return -1.\n\n    For example:\n    >>> choose_num(12, 15)\n\
    \    14\n    >>> choose_num(13, 12)\n    -1\n    \"\"\"\n    if x > y:\n     \
    \   x, y = y, x\n    \n    if x % 2 == 0:\n        if y % 2 == 0:\n          \
    \  return x\n        else:\n            return y\n    else:\n        if y % 2\
    \ == 0:\n            return y\n        else:\n            return x\n\ndef check(candidate):\n\
    \    assert candidate(12, 15) == 14\n    assert candidate(13, 12) == -1\n    assert\
    \ candidate(33, 12354) == 12354\n    assert candidate(5234, 5233) == -1\n    assert\
    \ candidate(6, 29) == 28\n    assert candidate(27, 10) == -1\n    assert candidate(7,\
    \ 7) == -1\n    assert candidate(546, 546) == 546\n\ndef test_check():\n    check(choose_num)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsnfc0bvq.py\"\
    , line 39, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsnfc0bvq.py\"\
    , line 37, in test_check\n    check(choose_num)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsnfc0bvq.py\"\
    , line 27, in check\n    assert candidate(12, 15) == 14\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def choose_num(x: int, y: int) -> int:\n    \"\"\"This function takes\
    \ two positive numbers x and y and returns the\n    biggest even integer number\
    \ that is in the range [x, y] inclusive. If \n    there's no such number, then\
    \ the function should return -1.\n\n    For example:\n    >>> choose_num(12, 15)\n\
    \    14\n    >>> choose_num(13, 12)\n    -1\n    \"\"\"\n    if x > y:\n     \
    \   x, y = y, x\n    if x % 2 == 0:\n        return x // 2\n    if y % 2 == 0:\n\
    \        return y // 2\n    if x > y:\n        x, y = y, x\n    if x % 2 == 0\
    \ and y % 2 == 0:\n        return x // 2 + y // 2\n    if x % 2 == 0 and y % 2\
    \ != 0:\n        return x // 2 + 1\n    if x % 2 != 0 and y % 2 == 0:\n      \
    \  return x // 2 + 1\n    if x % 2 != 0 and y % 2 != 0:\n        return x // 2\
    \ + y // 2\n    return -1\n\n\ndef check(candidate):\n    assert candidate(12,\
    \ 15) == 14\n    assert candidate(13, 12) == -1\n    assert candidate(33, 12354)\
    \ == 12354\n    assert candidate(5234, 5233) == -1\n    assert candidate(6, 29)\
    \ == 28\n    assert candidate(27, 10) == -1\n    assert candidate(7, 7) == -1\n\
    \    assert candidate(546, 546) == 546\n\ndef test_check():\n    check(choose_num)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmputuypdjl.py\"\
    , line 44, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmputuypdjl.py\"\
    , line 42, in test_check\n    check(choose_num)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmputuypdjl.py\"\
    , line 32, in check\n    assert candidate(12, 15) == 14\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def choose_num(x: int, y: int) -> int:\n    \"\"\"This function takes\
    \ two positive numbers x and y and returns the\n    biggest even integer number\
    \ that is in the range [x, y] inclusive. If \n    there's no such number, then\
    \ the function should return -1.\n\n    For example:\n    >>> choose_num(12, 15)\n\
    \    14\n    >>> choose_num(13, 12)\n    -1\n    \"\"\"\n    if x < y:\n     \
    \   smaller, larger = y, x\n    else:\n        smaller, larger = x, y\n    smaller_even\
    \ = is_even(smaller)\n    larger_even = is_even(larger)\n    if smaller_even and\
    \ larger_even:\n        return smaller\n    elif smaller_even and not larger_even:\n\
    \        return larger\n    elif not smaller_even and larger_even:\n        return\
    \ smaller\n    else:\n        return -1\n\n\ndef check(candidate):\n    assert\
    \ candidate(12, 15) == 14\n    assert candidate(13, 12) == -1\n    assert candidate(33,\
    \ 12354) == 12354\n    assert candidate(5234, 5233) == -1\n    assert candidate(6,\
    \ 29) == 28\n    assert candidate(27, 10) == -1\n    assert candidate(7, 7) ==\
    \ -1\n    assert candidate(546, 546) == 546\n\ndef test_check():\n    check(choose_num)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3ck3cj5m.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3ck3cj5m.py\"\
    , line 39, in test_check\n    check(choose_num)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3ck3cj5m.py\"\
    , line 29, in check\n    assert candidate(12, 15) == 14\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3ck3cj5m.py\"\
    , line 16, in choose_num\n    smaller_even = is_even(smaller)\nNameError: name\
    \ 'is_even' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def choose_num(x: int, y: int) -> int:\n    \"\"\"This function takes\
    \ two positive numbers x and y and returns the\n    biggest even integer number\
    \ that is in the range [x, y] inclusive. If \n    there's no such number, then\
    \ the function should return -1.\n\n    For example:\n    >>> choose_num(12, 15)\n\
    \    14\n    >>> choose_num(13, 12)\n    -1\n    \"\"\"\n    if x > y:\n     \
    \   x, y = y, x\n    if x % 2 == 0:\n        if y % 2 == 0:\n            return\
    \ x\n        else:\n            return y\n    else:\n        if y % 2 == 0:\n\
    \            return y\n        else:\n            return x\n\n\ndef check(candidate):\n\
    \    assert candidate(12, 15) == 14\n    assert candidate(13, 12) == -1\n    assert\
    \ candidate(33, 12354) == 12354\n    assert candidate(5234, 5233) == -1\n    assert\
    \ candidate(6, 29) == 28\n    assert candidate(27, 10) == -1\n    assert candidate(7,\
    \ 7) == -1\n    assert candidate(546, 546) == 546\n\ndef test_check():\n    check(choose_num)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqm5i1dif.py\"\
    , line 39, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqm5i1dif.py\"\
    , line 37, in test_check\n    check(choose_num)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqm5i1dif.py\"\
    , line 27, in check\n    assert candidate(12, 15) == 14\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def choose_num(x: int, y: int) -> int:\n    \"\"\"This function takes\
    \ two positive numbers x and y and returns the\n    biggest even integer number\
    \ that is in the range [x, y] inclusive. If \n    there's no such number, then\
    \ the function should return -1.\n\n    For example:\n    >>> choose_num(12, 15)\n\
    \    14\n    >>> choose_num(13, 12)\n    -1\n    \"\"\"\n    if x <= y:\n    \
    \    if x % 2 == 0:\n            return x\n        else:\n            return y\n\
    \    else:\n        if y % 2 == 0:\n            return y\n        else:\n    \
    \        return x\n\n\ndef check(candidate):\n    assert candidate(12, 15) ==\
    \ 14\n    assert candidate(13, 12) == -1\n    assert candidate(33, 12354) == 12354\n\
    \    assert candidate(5234, 5233) == -1\n    assert candidate(6, 29) == 28\n \
    \   assert candidate(27, 10) == -1\n    assert candidate(7, 7) == -1\n    assert\
    \ candidate(546, 546) == 546\n\ndef test_check():\n    check(choose_num)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpggou75ts.py\"\
    , line 37, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpggou75ts.py\"\
    , line 35, in test_check\n    check(choose_num)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpggou75ts.py\"\
    , line 25, in check\n    assert candidate(12, 15) == 14\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def choose_num(x: int, y: int) -> int:\n    \"\"\"This function takes\
    \ two positive numbers x and y and returns the\n    biggest even integer number\
    \ that is in the range [x, y] inclusive. If \n    there's no such number, then\
    \ the function should return -1.\n\n    For example:\n    >>> choose_num(12, 15)\n\
    \    14\n    >>> choose_num(13, 12)\n    -1\n    \"\"\"\n    if x > y:\n     \
    \   x, y = y, x\n    if x % 2 == 0:\n        return y\n    if y % 2 == 0:\n  \
    \      return x\n    if x > y:\n        x, y = y, x\n    if x % 2 == 0 and y %\
    \ 2 == 0:\n        return x\n    if x % 2 == 0 and y % 2 != 0:\n        return\
    \ y\n    if x % 2 != 0 and y % 2 != 0:\n        return x\n    if x % 2 != 0 and\
    \ y % 2 == 0:\n        return y\n    return -1\n\n\ndef check(candidate):\n  \
    \  assert candidate(12, 15) == 14\n    assert candidate(13, 12) == -1\n    assert\
    \ candidate(33, 12354) == 12354\n    assert candidate(5234, 5233) == -1\n    assert\
    \ candidate(6, 29) == 28\n    assert candidate(27, 10) == -1\n    assert candidate(7,\
    \ 7) == -1\n    assert candidate(546, 546) == 546\n\ndef test_check():\n    check(choose_num)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl280ss6q.py\"\
    , line 44, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl280ss6q.py\"\
    , line 42, in test_check\n    check(choose_num)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl280ss6q.py\"\
    , line 32, in check\n    assert candidate(12, 15) == 14\nAssertionError\n"
  exit_code: -1
  status: Exception

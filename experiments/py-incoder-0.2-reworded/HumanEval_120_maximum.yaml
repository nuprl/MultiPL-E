name: HumanEval_120_maximum
language: py
prompt: "from typing import List\n\ndef maximum(arr: List[int], k: int) -> List[int]:\n\
  \    \"\"\"\n    Given an array arr of integers and a positive integer k, return\
  \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
  \ 1:\n\n    >>> maximum([-3, -4, 5], 3)\n    [-4, -3, 5]\n\n    Example 2:\n\n \
  \   >>> maximum([4, -4, 4], 2)\n    [4, 4]\n\n    Example 3:\n\n    >>> maximum([-3,\
  \ 2, 1, 2, -1, -2, 1], 1)\n    [2]\n\n    Note:\n        1. The length of the array\
  \ will be in the range of [1, 1000].\n        2. The elements in the array will\
  \ be in the range of [-1000, 1000].\n        3. 0 <= k <= len(arr)\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate([-3, -4, 5], 3) == [-4, -3, 5]\n\
  \    assert candidate([4, -4, 4], 2) == [4, 4]\n    assert candidate([-3, 2, 1,\
  \ 2, -1, -2, 1], 1) == [2]\n    assert candidate([123, -123, 20, 0, 1, 2, -3], 3)\
  \ == [2, 20, 123]\n    assert candidate([-123, 20, 0, 1, 2, -3], 4) == [0, 1, 2,\
  \ 20]\n    assert candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0, 0, 3,\
  \ 5, 15]\n    assert candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5]\n    assert candidate([1,\
  \ 0, 5, -7], 1) == [5]\n    assert candidate([4, -4], 2) == [-4, 4]\n    assert\
  \ candidate([-10, 10], 2) == [-10, 10]\n    assert candidate([1, 2, 3, -23, 243,\
  \ -400, 0], 0) == []\n\ndef test_check():\n    check(maximum)\n\ntest_check()\n"
completions: ["    \n    # write your code here\n    \n    return sorted(arr)[-k:]\n",
  "    pass\n", "    \n    # write your code here\n    \n    return sorted(arr, key=lambda\
    \ x: -x)[:k]\n", "    pass\n", "    pass\n", "    \n    # Your code here\n   \
    \ \n    return sorted(arr, key=lambda x: -x)[:k]\n</cell>\n<cell>", "    pass\n",
  "    \n    # write your code here\n    \n    return sorted(arr)[-k:]\n</cell>\n\
    <cell>", "    \n    # write your code here\n    \n    return sorted(arr, key=lambda\
    \ x: -x)[:k]\n</cell>\n<cell>", "    # write your code here\n    maximum_list\
    \ = []\n    maximum = arr[0]\n    for num in arr:\n        if num > maximum:\n\
    \            maximum = num\n            maximum_list.append(maximum)\n       \
    \ else:\n            maximum_list.append(num)\n    return maximum_list\n", " \
    \   \n    # write your code here\n    \n    return sorted(arr, key=lambda x: -x)[:k]\n\
    </cell>\n<cell>", "    \n    # write your code here\n    \n    maximum = []\n\
    \    \n    for i in range(len(arr)):\n        maximum.append(max(arr[:k]))\n \
    \       \n    return maximum\n", "    pass\n", "    # Your code here\n    \n \
    \   return sorted(arr)[-k:]\n", "    \n    # write your code here\n    \n    return\
    \ sorted(arr)[-k:]\n", "    \n    # Your code here\n    \n    return sorted(arr)[-k:]\n",
  "    pass\n", "    # Your code here\n    maximum = arr[0]\n    maximum_index = 0\n\
    \    for i in range(1, len(arr)):\n        if arr[i] > maximum:\n            maximum\
    \ = arr[i]\n            maximum_index = i\n    \n    if maximum_index == len(arr)\
    \ - 1:\n        return arr\n    else:\n        return arr[maximum_index + 1 :\
    \ len(arr)]\n", "    \n    maximum = arr[0]\n    maximum_index = 0\n    \n   \
    \ for i in range(1, len(arr)):\n        if arr[i] > maximum:\n            maximum\
    \ = arr[i]\n            maximum_index = i\n    \n    if maximum_index == len(arr)\
    \ - 1:\n        return arr\n    else:\n        return arr[:maximum_index + 1]\
    \ + arr[maximum_index + 1:]\n", "    pass\n", "    pass\n", "    pass\n", "  \
    \  \n    # write your code here\n    \n    return sorted(arr)[-k:]\n", "    #\
    \ write your code here\n    maximum = arr[0]\n    maximum_index = 0\n    for i\
    \ in range(1, len(arr)):\n        if arr[i] > maximum:\n            maximum =\
    \ arr[i]\n            maximum_index = i\n    maximum_index = maximum_index + 1\n\
    \    maximum_index = maximum_index - 1\n    maximum = maximum + arr[maximum_index]\n\
    \    maximum = maximum - arr[0]\n    maximum = maximum + arr[0]\n    maximum =\
    \ maximum + arr[0]\n    maximum = maximum + arr[0]\n    maximum = maximum + arr[0]\n\
    \    maximum = maximum + arr[0]\n    maximum = maximum + arr[0]\n    maximum =\
    \ maximum + arr[0]\n    maximum = maximum + arr[0]\n    maximum = maximum + arr[0]\n\
    \    maximum = maximum + arr[0]\n    maximum = maximum + arr[0]\n    maximum =\
    \ maximum + arr[0]\n    maximum = maximum + arr[0]\n    maximum = maximum + arr[0]\n\
    \    maximum = maximum + arr[0]\n    maximum = maximum + arr[0]\n    maximum =\
    \ maximum + arr[0]\n    maximum = maximum + arr[0]\n    maximum = maximum + arr[0]\n\
    \    maximum = maximum + arr[0]\n    maximum = maximum + arr[0]\n    maximum =\
    \ maximum + arr[0]\n    maximum = maximum + arr[0]\n    maximum = maximum + arr[0]\n\
    \    maximum = maximum + arr[0]\n    maximum = maximum + arr[0]\n    maximum =\
    \ maximum + arr[0]\n    maximum = maximum + arr[0]\n    maximum = maximum + arr[0]\n\
    \    maximum = maximum + arr[0]\n    maximum = maximum + arr[0]\n    maximum =\
    \ maximum + arr[0]\n    maximum = maximum + arr[0]\n    maximum = maximum + arr[0]\n\
    \    maximum = maximum + arr[0]\n    maximum = maximum + arr[0]\n    maximum =\
    \ maximum + arr[0]\n    maximum = maximum + arr[0]\n    maximum = maximum + arr[0]\n\
    \    maximum = maximum + arr[0]\n    maximum = maximum + arr[0]\n    maximum =\
    \ maximum + arr[0]\n    maximum = maximum + arr[0]\n    maximum = maximum + arr[0]\n\
    \    maximum = maximum + arr[0]\n    maximum = maximum + arr[0]\n    maximum =\
    \ maximum + arr[0]\n    maximum = maximum + arr[0]\n    maximum = maximum + arr[0]\n\
    \    maximum = maximum + arr[0]\n    maximum = maximum + arr[0]\n    maximum =\
    \ maximum + arr[0]\n    maximum = maximum + arr[0]\n    maximum = maximum + arr[0]\n\
    \    maximum = maximum + arr[0]\n    maximum", "    pass\n", "    \n    # write\
    \ your code here\n    \n    maximum = arr[0]\n    maximum_index = 0\n    \n  \
    \  for i in range(1, len(arr)):\n        if arr[i] > maximum:\n            maximum\
    \ = arr[i]\n            maximum_index = i\n    \n    if maximum_index == 0:\n\
    \        return arr\n    else:\n        return arr[0 : maximum_index + 1]\n",
  "    \n    # write your code here\n    \n    return sorted(arr)[-k:]\n", "    pass\n",
  "    # Your code here\n    maximum_list = []\n    maximum = arr[0]\n    for num\
    \ in arr:\n        if num > maximum:\n            maximum = num\n            maximum_list.append(maximum)\n\
    \    return maximum_list\n", "    # write your code here\n    maximum = arr[0]\n\
    \    maximum_index = 0\n    for i in range(1, len(arr)):\n        if arr[i] >\
    \ maximum:\n            maximum = arr[i]\n            maximum_index = i\n    \n\
    \    if maximum_index == len(arr) - 1:\n        return arr\n    else:\n      \
    \  return arr[maximum_index + 1 : len(arr)]\n", "    pass\n", "    \n    # write\
    \ your code here\n    \n    return sorted(arr)[-k:]\n</cell>\n<cell>", "    pass\n",
  "    \n    # write your code here\n    \n    return sorted(arr)[-k:]\n</cell>\n\
    <cell>", "    # write your code here\n    \n    return sorted(arr, key=lambda\
    \ x: -x)[:k]\n", "    pass\n", "    \n    maximum = arr[0]\n    maximum_index\
    \ = 0\n    \n    for i in range(1, len(arr)):\n        if arr[i] > maximum:\n\
    \            maximum = arr[i]\n            maximum_index = i\n    \n    return\
    \ arr[0:maximum_index + 1]\n", "    \n    # Your code here\n    \n    return sorted(arr)[-k:]\n",
  "    pass\n", "    pass\n", "    \n    # Your code here\n    \n    return sorted(arr)[-k:]\n",
  "    pass\n", "    \n    # write your code here\n    \n    return sorted(arr, key=lambda\
    \ x: -x)[:k]\n", "    \n    # write your code here\n    \n    maximum_list = []\n\
    \    \n    maximum_list.append(max(arr))\n    \n    for i in range(1, len(arr)):\n\
    \        if arr[i] > maximum_list[-1]:\n            maximum_list.append(arr[i])\n\
    \    \n    return maximum_list\n</cell>\n<cell>", "    pass\n", "    \n    # Your\
    \ code here\n    \n    return sorted(arr, key=lambda x: -x)[:k]\n", "    \n  \
    \  maximum = arr[0]\n    maximumIndex = 0\n    \n    for i in range(1, len(arr)):\n\
    \        if arr[i] > maximum:\n            maximum = arr[i]\n            maximumIndex\
    \ = i\n    \n    if maximumIndex == len(arr) - 1:\n        return arr\n    else:\n\
    \        return arr[maximumIndex:] + arr[:maximumIndex]\n", "    pass\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

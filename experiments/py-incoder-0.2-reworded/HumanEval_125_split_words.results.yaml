name: HumanEval_125_split_words
language: py
results:
- program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    return txt.split()\n\ndef check(candidate):\n    assert\
    \ candidate('Hello world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!')\
    \ == ['Hello', 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n\
    \    assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n \
    \   assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppf0zcr2j.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppf0zcr2j.py\"\
    , line 29, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppf0zcr2j.py\"\
    , line 20, in check\n    assert candidate('Hello,world!') == ['Hello', 'world!']\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    return txt.split()\n\n\ndef check(candidate):\n    assert\
    \ candidate('Hello world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!')\
    \ == ['Hello', 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n\
    \    assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n \
    \   assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw76dmr_l.py\"\
    , line 32, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw76dmr_l.py\"\
    , line 30, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw76dmr_l.py\"\
    , line 21, in check\n    assert candidate('Hello,world!') == ['Hello', 'world!']\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    words = txt.split(' ')\n    if len(words) == 1:\n    \
    \    return words[0]\n    elif len(words) == 2:\n        return words\n    else:\n\
    \        words = [word for word in words if word != '']\n        words = [word\
    \ for word in words if word.isalpha()]\n        words = [word for word in words\
    \ if ord(word[0]) % 2 == 1]\n        return words\n\ndef check(candidate):\n \
    \   assert candidate('Hello world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!')\
    \ == ['Hello', 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n\
    \    assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n \
    \   assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcnas2vo8.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcnas2vo8.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcnas2vo8.py\"\
    , line 29, in check\n    assert candidate('Hello,world!') == ['Hello', 'world!']\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    return txt.split()\n\ndef check(candidate):\n    assert\
    \ candidate('Hello world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!')\
    \ == ['Hello', 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n\
    \    assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n \
    \   assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw6jxsr4h.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw6jxsr4h.py\"\
    , line 29, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw6jxsr4h.py\"\
    , line 20, in check\n    assert candidate('Hello,world!') == ['Hello', 'world!']\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    words = txt.split()\n    if len(words) == 0:\n       \
    \ return words\n    elif len(words) == 1:\n        return words\n    else:\n \
    \       words = list(words)\n        words[0] = words[0].lower()\n        words[-1]\
    \ = words[-1].lower()\n        return words\n\ndef check(candidate):\n    assert\
    \ candidate('Hello world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!')\
    \ == ['Hello', 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n\
    \    assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n \
    \   assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_wjlncl1.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_wjlncl1.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_wjlncl1.py\"\
    , line 28, in check\n    assert candidate('Hello world!') == ['Hello', 'world!']\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    return txt.split()\n\ndef check(candidate):\n    assert\
    \ candidate('Hello world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!')\
    \ == ['Hello', 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n\
    \    assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n \
    \   assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptnokwesp.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptnokwesp.py\"\
    , line 29, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptnokwesp.py\"\
    , line 20, in check\n    assert candidate('Hello,world!') == ['Hello', 'world!']\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    return txt.split()\n\ndef check(candidate):\n    assert\
    \ candidate('Hello world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!')\
    \ == ['Hello', 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n\
    \    assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n \
    \   assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy6jum98h.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy6jum98h.py\"\
    , line 29, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy6jum98h.py\"\
    , line 20, in check\n    assert candidate('Hello,world!') == ['Hello', 'world!']\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    return txt.split()\n\ndef check(candidate):\n    assert\
    \ candidate('Hello world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!')\
    \ == ['Hello', 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n\
    \    assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n \
    \   assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9avevr61.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9avevr61.py\"\
    , line 29, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9avevr61.py\"\
    , line 20, in check\n    assert candidate('Hello,world!') == ['Hello', 'world!']\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    return txt.split()\n\ndef check(candidate):\n    assert\
    \ candidate('Hello world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!')\
    \ == ['Hello', 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n\
    \    assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n \
    \   assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm8o4n0t4.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm8o4n0t4.py\"\
    , line 29, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm8o4n0t4.py\"\
    , line 20, in check\n    assert candidate('Hello,world!') == ['Hello', 'world!']\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    words = txt.split()\n    if len(words) == 1:\n       \
    \ return words[0]\n    elif len(words) > 1:\n        return words\n    else:\n\
    \        return len(txt)\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3zh5w__v.py\"\
    , line 37, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3zh5w__v.py\"\
    , line 35, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3zh5w__v.py\"\
    , line 26, in check\n    assert candidate('Hello,world!') == ['Hello', 'world!']\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    return txt.split()\n\ndef check(candidate):\n    assert\
    \ candidate('Hello world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!')\
    \ == ['Hello', 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n\
    \    assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n \
    \   assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmzouwba8.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmzouwba8.py\"\
    , line 29, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmzouwba8.py\"\
    , line 20, in check\n    assert candidate('Hello,world!') == ['Hello', 'world!']\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    words = txt.split()\n    if len(words) == 0:\n       \
    \ return words\n    else:\n        words = [word for word in words if word !=\
    \ '']\n        if len(words) == 1:\n            return words\n        else:\n\
    \            words = [word for word in words if word != '']\n            words\
    \ = [word for word in words if word.isalpha()]\n            if len(words) <= 1:\n\
    \                return words\n            else:\n                words = [word\
    \ for word in words if word.isalpha()]\n                words = [word for word\
    \ in words if word.islower()]\n                words = [word for word in words\
    \ if ord(word[0]) % 2 != 0]\n                return words\n\ndef check(candidate):\n\
    \    assert candidate('Hello world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!')\
    \ == ['Hello', 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n\
    \    assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n \
    \   assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu0ndd_jc.py\"\
    , line 47, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu0ndd_jc.py\"\
    , line 45, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu0ndd_jc.py\"\
    , line 35, in check\n    assert candidate('Hello world!') == ['Hello', 'world!']\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    return txt.split()\n\ndef check(candidate):\n    assert\
    \ candidate('Hello world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!')\
    \ == ['Hello', 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n\
    \    assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n \
    \   assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp234nc2bb.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp234nc2bb.py\"\
    , line 29, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp234nc2bb.py\"\
    , line 20, in check\n    assert candidate('Hello,world!') == ['Hello', 'world!']\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    return txt.split()\n\ndef check(candidate):\n    assert\
    \ candidate('Hello world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!')\
    \ == ['Hello', 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n\
    \    assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n \
    \   assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph677e6tb.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph677e6tb.py\"\
    , line 29, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph677e6tb.py\"\
    , line 20, in check\n    assert candidate('Hello,world!') == ['Hello', 'world!']\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    return txt.split()\n\ndef check(candidate):\n    assert\
    \ candidate('Hello world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!')\
    \ == ['Hello', 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n\
    \    assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n \
    \   assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplnh2d29e.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplnh2d29e.py\"\
    , line 29, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplnh2d29e.py\"\
    , line 20, in check\n    assert candidate('Hello,world!') == ['Hello', 'world!']\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    return txt.split()\n\ndef check(candidate):\n    assert\
    \ candidate('Hello world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!')\
    \ == ['Hello', 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n\
    \    assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n \
    \   assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjlkq4knw.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjlkq4knw.py\"\
    , line 29, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjlkq4knw.py\"\
    , line 20, in check\n    assert candidate('Hello,world!') == ['Hello', 'world!']\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    words = txt.split()\n    if len(words) == 0:\n       \
    \ return words\n    else:\n        words = [word for word in words if word !=\
    \ \"\"]\n        words = [word for word in words if word.isalpha()]\n        if\
    \ len(words) == 0:\n            return words\n        else:\n            words\
    \ = [word for word in words if ord(word[0]) % 2 == 1]\n            if len(words)\
    \ == 0:\n                return words\n            else:\n                return\
    \ words\n\ndef check(candidate):\n    assert candidate('Hello world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello,world!') == ['Hello', 'world!']\n   \
    \ assert candidate('Hello world,!') == ['Hello', 'world,!']\n    assert candidate('Hello,Hello,world\
    \ !') == ['Hello,Hello,world', '!']\n    assert candidate('abcdef') == 3\n   \
    \ assert candidate('aaabb') == 2\n    assert candidate('aaaBb') == 1\n    assert\
    \ candidate('') == 0\n\ndef test_check():\n    check(split_words)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7nziifx6.py\"\
    , line 44, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7nziifx6.py\"\
    , line 42, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7nziifx6.py\"\
    , line 32, in check\n    assert candidate('Hello world!') == ['Hello', 'world!']\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    return txt.split()\n\ndef check(candidate):\n    assert\
    \ candidate('Hello world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!')\
    \ == ['Hello', 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n\
    \    assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n \
    \   assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph_fq2tv9.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph_fq2tv9.py\"\
    , line 29, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph_fq2tv9.py\"\
    , line 20, in check\n    assert candidate('Hello,world!') == ['Hello', 'world!']\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    return txt.split()\n\ndef check(candidate):\n    assert\
    \ candidate('Hello world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!')\
    \ == ['Hello', 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n\
    \    assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n \
    \   assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy5ygsuyp.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy5ygsuyp.py\"\
    , line 29, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy5ygsuyp.py\"\
    , line 20, in check\n    assert candidate('Hello,world!') == ['Hello', 'world!']\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    return txt.split()\n\ndef check(candidate):\n    assert\
    \ candidate('Hello world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!')\
    \ == ['Hello', 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n\
    \    assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n \
    \   assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpabj2dlsm.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpabj2dlsm.py\"\
    , line 29, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpabj2dlsm.py\"\
    , line 20, in check\n    assert candidate('Hello,world!') == ['Hello', 'world!']\n\
    AssertionError\n"
  exit_code: -1
  status: Exception

name: HumanEval_95_check_dict_case
language: py
prompt: "from typing import Dict\n\ndef check_dict_case(dict: Dict[str, str]) -> bool:\n\
  \    \"\"\"\n    Given a dictionary, return True if all keys are strings in lower\
  \ \n    case or all keys are strings in upper case, else return False.\n    The\
  \ function should return False is the given dictionary is empty.\n    Examples:\n\
  \    >>> check_dict_case({ 'a': 'apple', 'b': 'banana' })\n    True\n    >>> check_dict_case({\
  \ 'a': 'apple', 'A': 'banana', 'B': 'banana' })\n    False\n    >>> check_dict_case({\
  \ 'a': 'apple', 8: 'banana', 'a': 'apple' })\n    False\n    >>> check_dict_case({\
  \ 'Name': 'John', 'Age': '36', 'City': 'Houston' })\n    False\n    >>> check_dict_case({\
  \ 'STATE': 'NC', 'ZIP': '12345' })\n    True\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate({ 'p': 'pineapple', 'b': 'banana'\
  \ }) == True\n    assert candidate({ 'p': 'pineapple', 'A': 'banana', 'B': 'banana'\
  \ }) == False\n    assert candidate({ 'p': 'pineapple', '5': 'banana', 'a': 'apple'\
  \ }) == False\n    assert candidate({ 'Name': 'John', 'Age': '36', 'City': 'Houston'\
  \ }) == False\n    assert candidate({ 'STATE': 'NC', 'ZIP': '12345' }) == True\n\
  \    assert candidate({ 'fruit': 'Orange', 'taste': 'Sweet' }) == True\n    assert\
  \ candidate({  }) == False\n\ndef test_check():\n    check(check_dict_case)\n\n\
  test_check()\n"
completions: ["    \n    if not dict:\n        return False\n    \n    for key in\
    \ dict:\n        if not isinstance(key, str):\n            return False\n    \
    \    \n        if key.lower() not in dict:\n            return False\n       \
    \ \n        if key.upper() not in dict:\n            return False\n        \n\
    \    return True\n", "    if not dict:\n        return False\n    for k in dict.keys():\n\
    \        if not isinstance(k, str):\n            return False\n    return True\n",
  "    if not dict:\n        return False\n    for k in dict:\n        if not isinstance(k,\
    \ str):\n            return False\n    return True\n", "    if not isinstance(dict,\
    \ dict):\n        return False\n    \n    for key, value in dict.items():\n  \
    \      if not isinstance(key, str):\n            return False\n        if not\
    \ isinstance(value, str):\n            return False\n    return True\n", "   \
    \ if not dict:\n        return False\n    for k in dict.keys():\n        if not\
    \ isinstance(k, str):\n            return False\n    return True\n", "    if not\
    \ dict:\n        return False\n    for k in dict:\n        if not isinstance(k,\
    \ str):\n            return False\n    return True\n", "    if not dict:\n   \
    \     return False\n    for k in dict.keys():\n        if not isinstance(k, str):\n\
    \            return False\n    return True\n", "    if not dict:\n        return\
    \ False\n    \n    for k in dict.keys():\n        if not isinstance(k, str):\n\
    \            return False\n    return True\n", "    if not dict:\n        return\
    \ False\n    for k in dict.keys():\n        if not isinstance(k, str):\n     \
    \       return False\n    return True\n", "    if not dict:\n        return False\n\
    \    for k in dict:\n        if not isinstance(k, str):\n            return False\n\
    \    return True\n", "    if not dict:\n        return False\n    \n    for k\
    \ in dict.keys():\n        if not isinstance(k, str):\n            return False\n\
    \    return True\n", "    if not isinstance(dict, dict):\n        return False\n\
    \    \n    for key, value in dict.items():\n        if not isinstance(key, str):\n\
    \            return False\n        if not isinstance(value, str):\n          \
    \  return False\n    return True\n", "    if not dict:\n        return False\n\
    \    for k in dict.keys():\n        if not isinstance(k, str):\n            return\
    \ False\n    return True\n", "    if not dict:\n        return False\n    for\
    \ k in dict:\n        if not isinstance(k, str):\n            return False\n \
    \   return True\n", "    \n    if not dict:\n        return False\n    \n    for\
    \ k in dict.keys():\n        if not isinstance(k, str):\n            return False\n\
    \    \n    for k in dict.keys():\n        if k.isupper():\n            continue\n\
    \        else:\n            return False\n    \n    return True\n", "    if not\
    \ dict:\n        return False\n    for k in dict.keys():\n        if not isinstance(k,\
    \ str):\n            return False\n    return True\n", "    if not dict:\n   \
    \     return False\n    for k in dict:\n        if not isinstance(k, str):\n \
    \           return False\n    return True\n", "    for k in dict.keys():\n   \
    \     if not isinstance(k, str):\n            return False\n    return True\n",
  "    if not dict:\n        return False\n    for k in dict.keys():\n        if not\
    \ isinstance(k, str):\n            return False\n    return True\n", "    \n \
    \   if not dict:\n        return False\n    \n    for key, value in dict.items():\n\
    \        if not isinstance(key, str):\n            return False\n        if not\
    \ isinstance(value, str):\n            return False\n    return True\n</cell>\n\
    <cell>\ncheck_dict_case({ 'a': 'apple', 'B': 'banana' })\n</cell>\n<cell>\ncheck_dict_case({\
    \ 'a': 'apple', 'A': 'banana', 'B': 'banana' })\n</cell>\n<cell>\ncheck_dict_case({\
    \ 'a': 'apple', 8: 'banana', 'a': 'apple' })\n</cell>\n<cell>\ncheck_dict_case({\
    \ 'Name': 'John', 'Age': '36', 'City': 'Houston' })\n</cell>\n<cell>\ncheck_dict_case({\
    \ 'STATE': 'NC', 'ZIP': '12345' })\n</cell>\n<text>\nExercise 2: Write a function\
    \ that takes a dictionary as an argument and returns a dictionary where all keys\
    \ are strings in lower case and all values are strings in upper case.\n\n</text>\n\
    <cell>", "    if not dict:\n        return False\n    for k in dict.keys():\n\
    \        if not isinstance(k, str):\n            return False\n    return True\n",
  "    if not dict:\n        return False\n    for key, value in dict.items():\n \
    \       if not isinstance(key, str):\n            return False\n        if not\
    \ isinstance(value, str):\n            return False\n    return True\n", "   \
    \ if not dict:\n        return False\n    \n    for key in dict:\n        if not\
    \ isinstance(key, str):\n            return False\n        \n        if key.lower()\
    \ in dict.keys():\n            return True\n        \n        if key.upper() in\
    \ dict.keys():\n            return True\n        \n    return False\n", "    if\
    \ not dict:\n        return False\n    \n    for key in dict:\n        if not\
    \ isinstance(key, str):\n            return False\n    return True\n", "    if\
    \ not dict:\n        return False\n    for k in dict.keys():\n        if not isinstance(k,\
    \ str):\n            return False\n    return True\n", "    if not isinstance(dict,\
    \ dict):\n        return False\n    \n    for key, value in dict.items():\n  \
    \      if not isinstance(key, str):\n            return False\n        if not\
    \ isinstance(value, str):\n            return False\n    return True\n", "   \
    \ if not isinstance(dict, dict):\n        return False\n    \n    for key in dict:\n\
    \        if not isinstance(key, str):\n            return False\n        \n  \
    \      if key.lower() not in dict:\n            return False\n        \n     \
    \   if key.upper() not in dict:\n            return False\n        \n    return\
    \ True\n", "    if not isinstance(dict, dict):\n        return False\n    for\
    \ k in dict.keys():\n        if not isinstance(k, str):\n            return False\n\
    \    return True\n", "    if not dict:\n        return False\n    for k in dict.keys():\n\
    \        if not isinstance(k, str):\n            return False\n    return True\n",
  "    if not dict:\n        return False\n    for k in dict.keys():\n        if not\
    \ isinstance(k, str):\n            return False\n    return True\n", "    if not\
    \ dict:\n        return False\n    for k in dict.keys():\n        if not isinstance(k,\
    \ str):\n            return False\n    return True\n", "    if not dict:\n   \
    \     return False\n    \n    for key in dict:\n        if not isinstance(key,\
    \ str):\n            return False\n    return True\n", "    if not dict:\n   \
    \     return False\n    for key, value in dict.items():\n        if not isinstance(key,\
    \ str):\n            return False\n        if not isinstance(value, str):\n  \
    \          return False\n    return True\n", "    if not dict:\n        return\
    \ False\n    for k in dict.keys():\n        if not isinstance(k, str):\n     \
    \       return False\n    return True\n", "    if not dict:\n        return False\n\
    \    for k in dict:\n        if not isinstance(k, str):\n            return False\n\
    \    return True\n", "    if not dict:\n        return False\n    for k in dict.keys():\n\
    \        if not isinstance(k, str):\n            return False\n    return True\n",
  "    if not isinstance(dict, dict):\n        return False\n    \n    for key, value\
    \ in dict.items():\n        if not isinstance(key, str):\n            return False\n\
    \        if not isinstance(value, str):\n            return False\n    return\
    \ True\n", "    if not isinstance(dict, dict):\n        return False\n    for\
    \ key, value in dict.items():\n        if not isinstance(key, str):\n        \
    \    return False\n        if not isinstance(value, str):\n            return\
    \ False\n    return True\n", "    if not dict:\n        return False\n    for\
    \ k in dict.keys():\n        if not isinstance(k, str):\n            return False\n\
    \    return True\n", "    if not dict:\n        return False\n    for k in dict.keys():\n\
    \        if not isinstance(k, str):\n            return False\n    return True\n",
  "    if not dict:\n        return False\n    for k in dict.keys():\n        if not\
    \ isinstance(k, str):\n            return False\n    return True\n", "    \n \
    \   if not dict:\n        return False\n    \n    for key in dict:\n        if\
    \ not isinstance(key, str):\n            return False\n        \n        if key.lower()\
    \ not in dict:\n            return False\n        \n        if key.upper() not\
    \ in dict:\n            return False\n        \n    return True\n", "    if not\
    \ dict:\n        return False\n    for k in dict:\n        if not isinstance(k,\
    \ str):\n            return False\n    return True\n", "    if not isinstance(dict,\
    \ dict):\n        return False\n    \n    for key, value in dict.items():\n  \
    \      if not isinstance(key, str):\n            return False\n        if not\
    \ isinstance(value, str):\n            return False\n    return True\n", "   \
    \ if not isinstance(dict, dict):\n        return False\n    \n    for key, value\
    \ in dict.items():\n        if not isinstance(key, str):\n            return False\n\
    \        if not isinstance(value, str):\n            return False\n    return\
    \ True\n", "    if not isinstance(dict, dict):\n        return False\n    \n \
    \   for key in dict:\n        if not isinstance(key, str):\n            return\
    \ False\n        \n        if key.lower() not in dict:\n            return False\n\
    \        \n        if key.upper() not in dict:\n            return False\n   \
    \     \n    return True\n", "    \n    if not dict:\n        return False\n  \
    \  \n    for key, value in dict.items():\n        if not isinstance(key, str):\n\
    \            return False\n        if not isinstance(value, str):\n          \
    \  return False\n    return True\n", "    if not dict:\n        return False\n\
    \    for key in dict:\n        if not isinstance(key, str):\n            return\
    \ False\n    return True\n", "    for k in dict.keys():\n        if not isinstance(k,\
    \ str):\n            return False\n    return True\n", "    \n    if not dict:\n\
    \        return False\n    \n    for k in dict.keys():\n        if not isinstance(k,\
    \ str):\n            return False\n    \n    return True\n", "    if not isinstance(dict,\
    \ dict):\n        return False\n    for k in dict:\n        if not isinstance(k,\
    \ str):\n            return False\n    return True\n", "    if not dict:\n   \
    \     return False\n    for k in dict.keys():\n        if not isinstance(k, str):\n\
    \            return False\n    return True\n", "    \n    if not dict:\n     \
    \   return False\n    \n    for k in dict.keys():\n        if not isinstance(k,\
    \ str):\n            return False\n        \n    return True\n</cell>\n<cell>",
  "    if not dict:\n        return False\n    for key in dict:\n        if not isinstance(key,\
    \ str):\n            return False\n    return True\n", "    if not dict:\n   \
    \     return False\n    for k in dict.keys():\n        if not isinstance(k, str):\n\
    \            return False\n    return True\n", "    if not dict:\n        return\
    \ False\n    for k in dict.keys():\n        if not isinstance(k, str):\n     \
    \       return False\n    return True\n", "    if not dict:\n        return False\n\
    \    for k in dict:\n        if not isinstance(k, str):\n            return False\n\
    \    return True\n", "    if not dict:\n        return False\n    for k in dict.keys():\n\
    \        if not isinstance(k, str):\n            return False\n    return True\n",
  "    if not dict:\n        return False\n    for k in dict.keys():\n        if not\
    \ isinstance(k, str):\n            return False\n    return True\n", "    if not\
    \ isinstance(dict, dict):\n        return False\n    \n    for key in dict:\n\
    \        if not isinstance(key, str):\n            return False\n    \n    for\
    \ key in dict:\n        if key.lower() != key:\n            return False\n   \
    \ \n    return True\n", "    if not dict:\n        return False\n    for key,\
    \ value in dict.items():\n        if not isinstance(key, str):\n            return\
    \ False\n        if not isinstance(value, str):\n            return False\n  \
    \  return True\n", "    if not dict:\n        return False\n    for key in dict:\n\
    \        if not isinstance(key, str):\n            return False\n    return True\n",
  "    if not isinstance(dict, dict):\n        return False\n    \n    for key in\
    \ dict:\n        if not isinstance(key, str):\n            return False\n    \
    \    if key.lower() not in dict or key.upper() not in dict:\n            return\
    \ False\n    return True\n", "    \n    for k in dict.keys():\n        if not\
    \ isinstance(k, str):\n            return False\n    return True\n", "    \n \
    \   # Write your code here\n    \n    return True\n</cell>\n<cell>", "    if not\
    \ dict:\n        return False\n    for k in dict.keys():\n        if not isinstance(k,\
    \ str):\n            return False\n    return True\n", "    if not dict:\n   \
    \     return False\n    for k in dict.keys():\n        if not isinstance(k, str):\n\
    \            return False\n    return True\n", "    if not isinstance(dict, dict):\n\
    \        return False\n    \n    for key, value in dict.items():\n        if not\
    \ isinstance(key, str):\n            return False\n        if not isinstance(value,\
    \ str):\n            return False\n    return True\n", "    if not dict:\n   \
    \     return False\n    for k in dict.keys():\n        if not isinstance(k, str):\n\
    \            return False\n    return True\n", "    if not isinstance(dict, dict):\n\
    \        return False\n    \n    for k in dict.keys():\n        if not isinstance(k,\
    \ str):\n            return False\n    \n    return True\n", "    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n", "    \n    if not dict:\n      \
    \  return False\n    \n    for k in dict.keys():\n        if type(k) is not str:\n\
    \            return False\n    \n    for k in dict.keys():\n        if k.isupper():\n\
    \            if not dict[k] == k.lower():\n                return False\n    \
    \    else:\n            if not dict[k] == k.upper():\n                return False\n\
    \    \n    return True\n</cell>\n<cell>\ncheck_dict_case({ 'a': 'apple', 'b':\
    \ 'banana' })\n</cell>\n<cell>\ncheck_dict_case({ 'a': 'apple', 'A': 'banana',\
    \ 'B': 'banana' })\n</cell>\n<cell>\ncheck_dict_case({ 'a': 'apple', 8: 'banana',\
    \ 'a': 'apple' })\n</cell>\n<cell>\ncheck_dict_case({ 'Name': 'John', 'Age': '36',\
    \ 'City': 'Houston' })\n</cell>\n<cell>\ncheck_dict_case({ 'STATE': 'NC', 'ZIP':\
    \ '12345' })\n</cell>\n<text>\nExercise 3\nWrite a function that takes a dictionary\
    \ as an argument and returns a new dictionary where all keys are strings in lower\
    \ case and all values are strings in upper case. \nThe function should return\
    \ None if the given dictionary is empty.\nExamples:\n>>> check_dict_case({ 'a':\
    \ 'apple', 'b': 'banana' })\n{ 'a': 'APPLE', 'b': 'BANANA' }\n>>> check_dict_case({\
    \ 'a': 'apple', 'A': 'banana', 'B': 'banana' })\n{ 'a': 'APPLE', 'A': 'BANANA',\
    \ 'B': 'BANANA' }\n>>> check_dict_case({ 'a': 'apple', 8: 'banana', 'a': 'apple'\
    \ })\n{ 'a': None, '8': 'BANANA', 'a': 'APPLE' }\n>>> check_dict_case({ 'Name':\
    \ 'John', 'Age': '36', 'City': 'Houston' })\n{ 'Name': 'JOHN', 'Age': '36', 'City':\
    \ 'HOUSTON' }\n>>> check_dict_case({ 'STATE': 'NC', 'ZIP': '12345' })\n{ 'STATE':\
    \ 'NC', 'ZIP': '12345' }\n\"\"\"\n", "    if not dict:\n        return False\n\
    \    for key, value in dict.items():\n        if not isinstance(key, str):\n \
    \           return False\n        if not isinstance(value, str):\n           \
    \ return False\n    return True\n", "    if not dict:\n        return False\n\
    \    for k in dict.keys():\n        if not isinstance(k, str):\n            return\
    \ False\n    return True\n", "    if not isinstance(dict, dict):\n        return\
    \ False\n    \n    for key, value in dict.items():\n        if not isinstance(key,\
    \ str):\n            return False\n        if not isinstance(value, str):\n  \
    \          return False\n    return True\n", "    if not dict:\n        return\
    \ False\n    for k in dict.keys():\n        if not isinstance(k, str):\n     \
    \       return False\n    return True\n", "    if not dict:\n        return False\n\
    \    \n    for key in dict:\n        if not isinstance(key, str):\n          \
    \  return False\n    return True\n", "    if not dict:\n        return False\n\
    \    for k in dict.keys():\n        if not isinstance(k, str):\n            return\
    \ False\n    return True\n", "    \n    if not dict:\n        return False\n \
    \   \n    for key, value in dict.items():\n        if not isinstance(key, str):\n\
    \            return False\n        if not isinstance(value, str):\n          \
    \  return False\n    return True\n", "    \n    # Write your code here\n    \n\
    \    return True\n</cell>\n<text>\nExercise 2\nWrite a function that takes a dictionary\
    \ as an argument and returns a dictionary where all keys are strings in lower\
    \ case and all values are strings in upper case.\n\nThe function should return\
    \ a dictionary where all keys are strings in lower case and all values are strings\
    \ in upper case.\n\nThe function should return an empty dictionary if the given\
    \ dictionary is empty.\n\nExamples:\n>>> check_dict_case({ 'a': 'apple', 'b':\
    \ 'banana' })\n{'a': 'APPLE', 'b': 'BANANA'}\n>>> check_dict_case({ 'a': 'apple',\
    \ 'A': 'banana', 'B': 'banana' })\n{'a': 'APPLE', 'A': 'BANANA', 'B': 'BANANA'}\n\
    >>> check_dict_case({ 'a': 'apple', 8: 'banana', 'a': 'apple' })\n{'a': 8, 'a':\
    \ 'APPLE'}\n>>> check_dict_case({ 'Name': 'John', 'Age': '36', 'City': 'Houston'\
    \ })\n{'Name': 'JOHN', 'Age': '36', 'City': 'HOUSTON'}\n>>> check_dict_case({\
    \ 'STATE': 'NC', 'ZIP': '12345' })\n{'STATE': 'NC', 'ZIP': '12345'}\n\"\"\"\n",
  "    if not isinstance(dict, dict):\n        return False\n    for key, value in\
    \ dict.items():\n        if not isinstance(key, str):\n            return False\n\
    \        if not isinstance(value, str):\n            return False\n    return\
    \ True\n", "    \n    if not dict:\n        return False\n    \n    for key, value\
    \ in dict.items():\n        if not isinstance(key, str):\n            return False\n\
    \        if not isinstance(value, str):\n            return False\n    return\
    \ True\n", "    if not dict:\n        return False\n    \n    for k in dict.keys():\n\
    \        if not isinstance(k, str):\n            return False\n    return True\n",
  "    for k in dict.keys():\n        if not isinstance(k, str):\n            return\
    \ False\n    return True\n", "    if not dict:\n        return False\n    for\
    \ key, value in dict.items():\n        if not isinstance(key, str):\n        \
    \    return False\n        if not isinstance(value, str):\n            return\
    \ False\n    return True\n", "    if not dict:\n        return False\n    for\
    \ k in dict.keys():\n        if not isinstance(k, str):\n            return False\n\
    \    return True\n", "    if not dict:\n        return False\n    for k in dict.keys():\n\
    \        if not isinstance(k, str):\n            return False\n    return True\n",
  "    if not isinstance(dict, dict):\n        return False\n    \n    for key, value\
    \ in dict.items():\n        if not isinstance(key, str):\n            return False\n\
    \        if not isinstance(value, str):\n            return False\n    return\
    \ True\n", "    if not dict:\n        return False\n    for k in dict:\n     \
    \   if not isinstance(k, str):\n            return False\n    return True\n",
  "    if not dict:\n        return False\n    for k in dict.keys():\n        if not\
    \ isinstance(k, str):\n            return False\n    return True\n", "    if not\
    \ dict:\n        return False\n    for key in dict:\n        if not isinstance(key,\
    \ str):\n            return False\n    return True\n", "    \n    if not dict:\n\
    \        return False\n    \n    for key, value in dict.items():\n        if not\
    \ isinstance(key, str):\n            return False\n        if not isinstance(value,\
    \ str):\n            return False\n    return True\n", "    if not dict:\n   \
    \     return False\n    for k in dict.keys():\n        if not isinstance(k, str):\n\
    \            return False\n    return True\n", "    \n    # Write your code here\n\
    \    \n    return True # Replace this line\n\n", "    \n    # Write your code\
    \ here\n    \n    return False if len(dict) == 0 else all(map(lambda key: key.lower()\
    \ == key, dict.keys()))\n", "    \n    # Write your code here\n    \n    return\
    \ all(isinstance(key, str) for key in dict.keys())\n</cell>\n<cell>", "    if\
    \ not dict:\n        return False\n    for key in dict:\n        if not isinstance(key,\
    \ str):\n            return False\n    return True\n", "    if not isinstance(dict,\
    \ dict):\n        return False\n    for key, value in dict.items():\n        if\
    \ not isinstance(key, str):\n            return False\n        if not isinstance(value,\
    \ str):\n            return False\n    return True\n", "    if not dict:\n   \
    \     return False\n    for k in dict.keys():\n        if not isinstance(k, str):\n\
    \            return False\n    return True\n", "    if not dict:\n        return\
    \ False\n    for k in dict:\n        if not isinstance(k, str):\n            return\
    \ False\n    return True\n", "    if not isinstance(dict, dict):\n        return\
    \ False\n    \n    for key, value in dict.items():\n        if not isinstance(key,\
    \ str):\n            return False\n        if not isinstance(value, str):\n  \
    \          return False\n    return True\n", "    if not isinstance(dict, dict):\n\
    \        return False\n    for key, value in dict.items():\n        if not isinstance(key,\
    \ str):\n            return False\n        if not isinstance(value, str):\n  \
    \          return False\n    return True\n", "    if not dict:\n        return\
    \ False\n    for k in dict.keys():\n        if not isinstance(k, str):\n     \
    \       return False\n    return True\n", "    if not isinstance(dict, dict):\n\
    \        return False\n    for k in dict.keys():\n        if not isinstance(k,\
    \ str):\n            return False\n    return True\n", "    if not dict:\n   \
    \     return False\n    for k in dict.keys():\n        if not isinstance(k, str):\n\
    \            return False\n    return True\n", "    for k in dict:\n        if\
    \ not isinstance(k, str):\n            return False\n    return True\n", "   \
    \ if not dict:\n        return False\n    for k in dict.keys():\n        if not\
    \ isinstance(k, str):\n            return False\n    return True\n", "    if not\
    \ dict:\n        return False\n    for key in dict:\n        if not isinstance(key,\
    \ str):\n            return False\n    return True\n", "    for k in dict:\n \
    \       if not isinstance(k, str):\n            return False\n    return True\n",
  "    \n    if not dict:\n        return False\n    \n    for key, value in dict.items():\n\
    \        if not isinstance(key, str):\n            return False\n        if not\
    \ isinstance(value, str):\n            return False\n    return True\n", "   \
    \ if not dict:\n        return False\n    for key in dict:\n        if not isinstance(key,\
    \ str):\n            return False\n    return True\n", "    if not dict:\n   \
    \     return False\n    for k in dict.keys():\n        if not isinstance(k, str):\n\
    \            return False\n    return True\n", "    if not dict:\n        return\
    \ False\n    for k in dict.keys():\n        if not isinstance(k, str):\n     \
    \       return False\n    return True\n", "    if not isinstance(dict, dict):\n\
    \        return False\n    \n    for key in dict:\n        if not isinstance(key,\
    \ str):\n            return False\n        \n        if key.lower() in dict.keys():\n\
    \            return True\n        elif key.upper() in dict.keys():\n         \
    \   return True\n        else:\n            return False\n    \n    return False\n\
    </cell>\n<cell>\ncheck_dict_case({ 'a': 'apple', 'B': 'banana' })\n</cell>\n<cell>\n\
    check_dict_case({ 'a': 'apple', 'A': 'banana', 'B': 'banana' })\n</cell>\n<cell>\n\
    check_dict_case({ 'a': 'apple', 8: 'banana', 'a': 'apple' })\n</cell>\n<cell>\n\
    check_dict_case({ 'Name': 'John', 'Age': '36', 'City': 'Houston' })\n</cell>\n\
    <cell>\ncheck_dict_case({ 'STATE': 'NC', 'ZIP': '12345' })\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a string and returns the number of uppercase\
    \ and lowercase letters.\n\nExamples:\n>>> count_letters('Hello World')\n2\n>>>\
    \ count_letters('Hello World!')\n1\n>>> count_letters('Hello World!!')\n2\n>>>\
    \ count_letters('Hello World!!!')\n3\n>>> count_letters('Hello World!!!')\n3\n\
    >>> count_letters('Hello World!!!')\n3\n>>> count_letters('Hello World!!!')\n\
    3\n>>> count_letters('Hello World!!!')\n3\n>>> count_letters('Hello World!!!')\n\
    3\n>>> count_letters('Hello World!!!')\n3\n>>> count_letters('Hello World!!!')\n\
    3\n>>> count_letters('Hello World!!!')\n3\n>>> count_letters('Hello World!!!')\n\
    3\n>>> count_letters('Hello World!!!')\n3\n>>> count_letters('Hello World!!!')\n\
    3\n>>> count_letters('Hello World!!!')\n3\n>>> count_letters('Hello World!!!')\n\
    3\n>>> count_letters('Hello World!!!')\n3\n>>> count_letters('Hello World!!!')\n\
    3\n>>> count_letters('Hello World!!!')\n3\n>>> count_letters('Hello World!!!')\n\
    3\n>>> count_letters('Hello World!!!')\n3\n>>> count_letters('Hello World!!!')\n\
    3\n>>> count_letters('Hello World!!!')\n3\n>>> count_letters('Hello World!!!')\n\
    3\n>>> count_letters('Hello World!!!')\n3\n>>> count_letters('Hello World!!!')\n\
    3\n>>> count_letters('Hello World!!!')\n3\n>>> ", "    if not dict:\n        return\
    \ False\n    for k in dict.keys():\n        if not isinstance(k, str):\n     \
    \       return False\n    return True\n", "    if not dict:\n        return False\n\
    \    for k in dict.keys():\n        if not isinstance(k, str):\n            return\
    \ False\n    return True\n", "    if not dict:\n        return False\n    for\
    \ k in dict:\n        if not isinstance(k, str):\n            return False\n \
    \   return True\n", "    if not dict:\n        return False\n    for key, value\
    \ in dict.items():\n        if not isinstance(key, str):\n            return False\n\
    \        if not isinstance(value, str):\n            return False\n    return\
    \ True\n", "    if not dict:\n        return False\n    for k in dict.keys():\n\
    \        if not isinstance(k, str):\n            return False\n    return True\n",
  "    if not isinstance(dict, dict):\n        return False\n    \n    for k in dict.keys():\n\
    \        if not isinstance(k, str):\n            return False\n    return True\n",
  "    if not dict:\n        return False\n    \n    for key in dict:\n        if\
    \ not isinstance(key, str):\n            return False\n        \n        if key.lower()\
    \ not in dict:\n            return False\n        \n        if key.upper() not\
    \ in dict:\n            return False\n        \n    return True\n", "    if not\
    \ dict:\n        return False\n    for k in dict.keys():\n        if not isinstance(k,\
    \ str):\n            return False\n    return True\n", "    if not dict:\n   \
    \     return False\n    for k in dict.keys():\n        if not isinstance(k, str):\n\
    \            return False\n    return True\n", "    if not dict:\n        return\
    \ False\n    \n    for key, value in dict.items():\n        if not isinstance(key,\
    \ str):\n            return False\n        if not isinstance(value, str):\n  \
    \          return False\n    return True\n", "    for k in dict:\n        if not\
    \ isinstance(k, str):\n            return False\n    return True\n", "    if not\
    \ dict:\n        return False\n    for k in dict.keys():\n        if not isinstance(k,\
    \ str):\n            return False\n    return True\n", "    if not dict:\n   \
    \     return False\n    for k in dict.keys():\n        if not isinstance(k, str):\n\
    \            return False\n    return True\n", "    if not isinstance(dict, dict):\n\
    \        return False\n    \n    for key, value in dict.items():\n        if not\
    \ isinstance(key, str):\n            return False\n        if not isinstance(value,\
    \ str):\n            return False\n    return True\n", "    if not dict:\n   \
    \     return False\n    \n    for k in dict.keys():\n        if not isinstance(k,\
    \ str):\n            return False\n        \n    return True\n", "    if not dict:\n\
    \        return False\n    for k in dict.keys():\n        if not isinstance(k,\
    \ str):\n            return False\n    return True\n", "    \n    if not dict:\n\
    \        return False\n    \n    for k in dict.keys():\n        if type(k) is\
    \ not str:\n            return False\n    \n    for k in dict.keys():\n      \
    \  if k.isupper():\n            if type(k) is not str:\n                return\
    \ False\n        else:\n            if type(k) is not str:\n                return\
    \ False\n    \n    return True\n</cell>\n<cell>\ncheck_dict_case({ 'a': 'apple',\
    \ 'B': 'banana' })\n</cell>\n<cell>\ncheck_dict_case({ 'a': 'apple', 'A': 'banana',\
    \ 'B': 'banana' })\n</cell>\n<cell>\ncheck_dict_case({ 'a': 'apple', 8: 'banana',\
    \ 'a': 'apple' })\n</cell>\n<cell>\ncheck_dict_case({ 'Name': 'John', 'Age': '36',\
    \ 'City': 'Houston' })\n</cell>\n<cell>\ncheck_dict_case({ 'STATE': 'NC', 'ZIP':\
    \ '12345' })\n</cell>\n<text>\nExercise 3: Write a function that takes a dictionary\
    \ and returns a new dictionary where all keys are strings in lower case and all\
    \ values are strings in upper case.\n\n</text>\n<cell>", "    if not dict:\n \
    \       return False\n    for k in dict.keys():\n        if not isinstance(k,\
    \ str):\n            return False\n    return True\n", "    if not dict:\n   \
    \     return False\n    for k in dict.keys():\n        if not isinstance(k, str):\n\
    \            return False\n    return True\n", "    if not dict:\n        return\
    \ False\n    for k in dict:\n        if not isinstance(k, str):\n            return\
    \ False\n    return True\n", "    if not dict:\n        return False\n    \n \
    \   for key in dict:\n        if not isinstance(key, str):\n            return\
    \ False\n        \n    lower_case_keys = set(key.lower() for key in dict)\n  \
    \  upper_case_keys = set(key.upper() for key in dict)\n    \n    return lower_case_keys\
    \ == upper_case_keys\n", "    if not dict:\n        return False\n    for k in\
    \ dict.keys():\n        if not isinstance(k, str):\n            return False\n\
    \    return True\n", "    if not isinstance(dict, dict):\n        return False\n\
    \    \n    for key, value in dict.items():\n        if not isinstance(key, str):\n\
    \            return False\n        if not isinstance(value, str):\n          \
    \  return False\n    return True\n", "    if not dict:\n        return False\n\
    \    for key in dict:\n        if not isinstance(key, str):\n            return\
    \ False\n    return True\n", "    if not isinstance(dict, dict):\n        return\
    \ False\n    \n    for k in dict.keys():\n        if not isinstance(k, str):\n\
    \            return False\n    \n    return True\n", "    \n    if not dict:\n\
    \        return False\n    \n    for key in dict:\n        if not isinstance(key,\
    \ str):\n            return False\n    \n    for key in dict:\n        if key.lower()\
    \ != key:\n            return False\n    \n    for key in dict:\n        if key.upper()\
    \ != key:\n            return False\n    \n    return True\n", "    if not dict:\n\
    \        return False\n    for key, value in dict.items():\n        if not isinstance(key,\
    \ str):\n            return False\n        if not isinstance(value, str):\n  \
    \          return False\n    return True\n", "    for key, value in dict.items():\n\
    \        if not isinstance(key, str):\n            return False\n        if not\
    \ isinstance(value, str):\n            return False\n    return True\n", "   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    if not dict:\n\
    \        return False\n    for k in dict.keys():\n        if not isinstance(k,\
    \ str):\n            return False\n    return True\n", "    if not dict:\n   \
    \     return False\n    \n    for key, value in dict.items():\n        if not\
    \ isinstance(key, str):\n            return False\n        if not isinstance(value,\
    \ str):\n            return False\n    return True\n", "    if not dict:\n   \
    \     return False\n    for k in dict:\n        if not isinstance(k, str):\n \
    \           return False\n    return True\n", "    \n    # Write your code here\n\
    \    \n    return True\n", "    if not dict:\n        return False\n    \n   \
    \ for key in dict:\n        if not isinstance(key, str):\n            return False\n\
    \        \n        if key.lower() != key:\n            return False\n        \n\
    \        if key.upper() != key:\n            return False\n    \n    return True\n\
    </cell>\n<cell>\ncheck_dict_case({ 'a': 'apple', 'B': 'banana' })\n</cell>\n<cell>\n\
    check_dict_case({ 'a': 'apple', 'A': 'banana', 'B': 'banana' })\n</cell>\n<cell>\n\
    check_dict_case({ 'a': 'apple', 8: 'banana', 'a': 'apple' })\n</cell>\n<cell>\n\
    check_dict_case({ 'Name': 'John', 'Age': '36', 'City': 'Houston' })\n</cell>\n\
    <cell>\ncheck_dict_case({ 'STATE': 'NC', 'ZIP': '12345' })\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a dictionary and returns a new dictionary\
    \ where all keys are converted to lower case and all values are converted to upper\
    \ case. \nThe function should return None if the given dictionary is empty.\n\
    Examples:\n>>> check_dict_case({ 'a': 'apple', 'B': 'banana' })\n{ 'a': 'APPLE',\
    \ 'B': 'BANANA' }\n>>> check_dict_case({ 'a': 'apple', 'A': 'banana', 'B': 'banana'\
    \ })\n{ 'a': 'APPLE', 'A': 'BANANA', 'B': 'BANANA' }\n>>> check_dict_case({ 'a':\
    \ 'apple', 8: 'banana', 'a': 'apple' })\n{ 'a': 8, 'a': 'APPLE' }\n>>> check_dict_case({\
    \ 'Name': 'John', 'Age': '36', 'City': 'Houston' })\n{ 'Name': 'JOHN', 'Age':\
    \ '36', 'City': 'HOUSTON' }\n>>> check_dict_case({ 'STATE': 'NC', 'ZIP': '12345'\
    \ })\n{ 'STATE': 'NC', 'ZIP': '12345' }\n\"\"\"\n", "    if not dict:\n      \
    \  return False\n    for k in dict.keys():\n        if not isinstance(k, str):\n\
    \            return False\n    return True\n", "    if not dict:\n        return\
    \ False\n    \n    for key in dict:\n        if not isinstance(key, str):\n  \
    \          return False\n    return True\n", "    if not dict:\n        return\
    \ False\n    for k in dict.keys():\n        if not isinstance(k, str):\n     \
    \       return False\n    return True\n", "    if not dict:\n        return False\n\
    \    for key in dict:\n        if not isinstance(key, str):\n            return\
    \ False\n    return True\n", "    if not dict:\n        return False\n    for\
    \ key, value in dict.items():\n        if not isinstance(key, str):\n        \
    \    return False\n        if not isinstance(value, str):\n            return\
    \ False\n    return True\n", "    \n    if not dict:\n        return False\n \
    \   \n    for key, value in dict.items():\n        if not isinstance(key, str):\n\
    \            return False\n        if not isinstance(value, str):\n          \
    \  return False\n    return True\n</cell>\n<cell>", "    \n    if not dict:\n\
    \        return False\n    \n    for key in dict:\n        if not isinstance(key,\
    \ str):\n            return False\n        \n    return True\n", "    if not dict:\n\
    \        return False\n    for k in dict.keys():\n        if not isinstance(k,\
    \ str):\n            return False\n    return True\n", "    if not dict:\n   \
    \     return False\n    for k in dict.keys():\n        if not isinstance(k, str):\n\
    \            return False\n    return True\n", "    \n    # Write your code here\n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    ", "    \n    if not dict:\n        return\
    \ False\n    \n    for key, value in dict.items():\n        if not isinstance(key,\
    \ str):\n            return False\n        if not isinstance(value, str):\n  \
    \          return False\n    return True\n", "    if not dict:\n        return\
    \ False\n    for k in dict.keys():\n        if not isinstance(k, str):\n     \
    \       return False\n    return True\n", "    for k in dict.keys():\n       \
    \ if not isinstance(k, str):\n            return False\n    return True\n", " \
    \   if not dict:\n        return False\n    for k in dict:\n        if not isinstance(k,\
    \ str):\n            return False\n    return True\n", "    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n", "    \n    if not dict:\n        return\
    \ False\n    \n    for key, value in dict.items():\n        if not isinstance(key,\
    \ str):\n            return False\n        if not isinstance(value, str):\n  \
    \          return False\n    return True\n", "    if not dict:\n        return\
    \ False\n    for k in dict.keys():\n        if not isinstance(k, str):\n     \
    \       return False\n    return True\n", "    if not dict:\n        return False\n\
    \    for k in dict.keys():\n        if not isinstance(k, str):\n            return\
    \ False\n    return True\n", "    if not dict:\n        return False\n    for\
    \ k in dict.keys():\n        if not isinstance(k, str):\n            return False\n\
    \    return True\n", "    if not dict:\n        return False\n    for key, value\
    \ in dict.items():\n        if not isinstance(key, str):\n            return False\n\
    \        if not isinstance(value, str):\n            return False\n    return\
    \ True\n", "    \n    # Write your code here\n    \n    return True # Replace\
    \ this line\n\n\ncheck_dict_case({ 'a': 'apple', 'b': 'banana' })\ncheck_dict_case({\
    \ 'a': 'apple', 'A': 'banana', 'B': 'banana' })\ncheck_dict_case({ 'a': 'apple',\
    \ 8: 'banana', 'a': 'apple' })\ncheck_dict_case({ 'Name': 'John', 'Age': '36',\
    \ 'City': 'Houston' })\ncheck_dict_case({ 'STATE': 'NC', 'ZIP': '12345' })\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a dictionary as an argument and\
    \ returns a new dictionary that has all keys in lower case and all keys in upper\
    \ case.\n\nThe function should ignore the case of the keys in the new dictionary.\n\
    \nThe function should ignore the case of the keys in the original dictionary.\n\
    \nThe function should ignore the case of the keys in the new dictionary and in\
    \ the original dictionary.\n\nThe function should ignore the case of the keys\
    \ in the new dictionary and in the original dictionary.\n\nThe function should\
    \ ignore the case of the keys in the new dictionary and in the original dictionary.\n\
    \nThe function should ignore the case of the keys in the new dictionary and in\
    \ the original dictionary.\n\nThe function should ignore the case of the keys\
    \ in the new dictionary and in the original dictionary.\n\nThe function should\
    \ ignore the case of the keys in the new dictionary and in the original dictionary.\n\
    \nThe function should ignore the case of the keys in the new dictionary and in\
    \ the original dictionary.\n\nThe function should ignore the case of the keys\
    \ in the new dictionary and in the original dictionary.\n\nThe function should\
    \ ignore the case of the keys in the new dictionary and in the original dictionary.\n\
    \nThe function should ignore the case of the keys in the new dictionary and in\
    \ the original dictionary.\n\nThe function should ignore the case of the keys\
    \ in the new dictionary and in the original dictionary.\n\nThe function should\
    \ ignore the case of the keys in the new dictionary and in the original dictionary.\n\
    \nThe function should ignore the case of the keys in the new dictionary and in\
    \ the original dictionary.\n\nThe function should ignore the case of the keys\
    \ in the new dictionary and in the original dictionary.\n\nThe function should\
    \ ignore the case of the keys in the new dictionary and in the original dictionary.\n\
    \nThe function should ignore the case of the keys in the new dictionary and in\
    \ the original dictionary.\n\nThe function should ignore the case of the keys\
    \ in the new dictionary and in the original dictionary.\n\nThe function should\
    \ ignore the case of the keys in the new dictionary and in the original dictionary.\n\
    \nThe function should ignore the case of the keys in the new dictionary and in\
    \ the original dictionary.\n\nThe function should ignore the case of the keys\
    \ in the new dictionary and in the original dictionary.\n\nThe function should\
    \ ignore the case of the keys in the new dictionary and in the original dictionary.\n\
    \nThe function should ignore the case of the keys in the ", "    if not dict:\n\
    \        return False\n    for k in dict.keys():\n        if not isinstance(k,\
    \ str):\n            return False\n    return True\n", "    if not dict:\n   \
    \     return False\n    for k in dict.keys():\n        if not isinstance(k, str):\n\
    \            return False\n    return True\n", "    if not dict:\n        return\
    \ False\n    for k in dict.keys():\n        if not isinstance(k, str):\n     \
    \       return False\n    return True\n", "    if not dict:\n        return False\n\
    \    for k in dict.keys():\n        if not isinstance(k, str):\n            return\
    \ False\n    return True\n", "    if not dict:\n        return False\n    for\
    \ k in dict.keys():\n        if not isinstance(k, str):\n            return False\n\
    \    return True\n", "    if not dict:\n        return False\n    for k in dict.keys():\n\
    \        if not isinstance(k, str):\n            return False\n    return True\n",
  "    if not dict:\n        return False\n    \n    for key, value in dict.items():\n\
    \        if not isinstance(key, str):\n            return False\n        if not\
    \ isinstance(value, str):\n            return False\n    return True\n", "   \
    \ for k in dict:\n        if not isinstance(k, str):\n            return False\n\
    \    return True\n", "    if not dict:\n        return False\n    for key in dict:\n\
    \        if not isinstance(key, str):\n            return False\n    return True\n",
  "    if not dict:\n        return False\n    \n    for key, value in dict.items():\n\
    \        if not isinstance(key, str):\n            return False\n        if not\
    \ isinstance(value, str):\n            return False\n    return True\n", "   \
    \ if not isinstance(dict, dict):\n        return False\n    for key, value in\
    \ dict.items():\n        if not isinstance(key, str):\n            return False\n\
    \        if not isinstance(value, str):\n            return False\n    return\
    \ True\n", "    if not dict:\n        return False\n    for k in dict.keys():\n\
    \        if not isinstance(k, str):\n            return False\n    return True\n",
  "    if not dict:\n        return False\n    \n    for key, value in dict.items():\n\
    \        if not isinstance(key, str):\n            return False\n        if not\
    \ isinstance(value, str):\n            return False\n    return True\n", "   \
    \ if not isinstance(dict, dict):\n        return False\n    for key, value in\
    \ dict.items():\n        if not isinstance(key, str):\n            return False\n\
    \        if not isinstance(value, str):\n            return False\n    return\
    \ True\n", "    if not dict:\n        return False\n    for k in dict.keys():\n\
    \        if not isinstance(k, str):\n            return False\n    return True\n",
  "    if not dict:\n        return False\n    for k in dict:\n        if not isinstance(k,\
    \ str):\n            return False\n    return True\n", "    if not dict:\n   \
    \     return False\n    for k in dict.keys():\n        if not isinstance(k, str):\n\
    \            return False\n    return True\n", "    if not dict:\n        return\
    \ False\n    for key in dict:\n        if not isinstance(key, str):\n        \
    \    return False\n    return True\n", "    \n    if not dict:\n        return\
    \ False\n    \n    for key in dict:\n        if not isinstance(key, str):\n  \
    \          return False\n        \n        if key.lower() in dict.keys():\n  \
    \          return True\n        \n        if key.upper() in dict.keys():\n   \
    \         return True\n        \n    return False\n</cell>\n<cell>\ncheck_dict_case({\
    \ 'a': 'apple', 'A': 'banana', 'B': 'banana' })\n</cell>\n<cell>\ncheck_dict_case({\
    \ 'a': 'apple', 8: 'banana', 'a': 'apple' })\n</cell>\n<cell>\ncheck_dict_case({\
    \ 'Name': 'John', 'Age': '36', 'City': 'Houston' })\n</cell>\n<cell>\ncheck_dict_case({\
    \ 'STATE': 'NC', 'ZIP': '12345' })\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a string and returns a list of words in the string. \nThe function\
    \ should ignore all punctuation and split on whitespace. \nThe function should\
    \ ignore case when splitting on whitespace. \nThe function should ignore hyphens\
    \ and apostrophes. \nThe function should ignore words that are only one character\
    \ long. \nThe function should ignore words that are longer than two characters.\
    \ \nThe function should ignore words that are longer than three characters. \n\
    The function should ignore words that are longer than four characters. \nThe function\
    \ should ignore words that are longer than five characters. \nThe function should\
    \ ignore words that are longer than six characters. \nThe function should ignore\
    \ words that are longer than seven characters. \nThe function should ignore words\
    \ that are longer than eight characters. \nThe function should ignore words that\
    \ are longer than nine characters. \nThe function should ignore words that are\
    \ longer than ten characters. \nThe function should ignore words that are longer\
    \ than eleven characters. \nThe function should ignore words that are longer than\
    \ twelve characters. \nThe function should ignore words that are longer than thirteen\
    \ characters. \nThe function should ignore words that are longer than fourteen\
    \ characters. \nThe function should ignore words that are longer than fifteen\
    \ characters. \nThe function should ignore words that are longer than sixteen\
    \ characters. \nThe function should ignore words that are longer than seventeen\
    \ characters. \nThe function should ignore words that are longer than eighteen\
    \ characters. \nThe function should ignore words that are longer than nineteen\
    \ characters. \nThe function should ignore words that are longer than twenty characters.\
    \ \nThe function should ignore words that are longer than twenty characters. \n\
    The function should ignore words that are longer than thirty-two characters. \n\
    The function should ignore ", "    if not dict:\n        return False\n    for\
    \ key in dict:\n        if not isinstance(key, str):\n            return False\n\
    \    return True\n", "    \n    # Write your code here\n    \n    return True\n\
    </cell>\n<cell>", "    if not dict:\n        return False\n    for key in dict:\n\
    \        if not isinstance(key, str):\n            return False\n    return True\n",
  "    if not isinstance(dict, dict):\n        return False\n    for k in dict:\n\
    \        if not isinstance(k, str):\n            return False\n    return True\n",
  "    for key, value in dict.items():\n        if not isinstance(key, str):\n   \
    \         return False\n        if not isinstance(value, str):\n            return\
    \ False\n    return True\n", "    if not isinstance(dict, dict):\n        return\
    \ False\n    \n    for key, value in dict.items():\n        if not isinstance(key,\
    \ str):\n            return False\n        if not isinstance(value, str):\n  \
    \          return False\n    return True\n", "    if not dict:\n        return\
    \ False\n    for k in dict:\n        if not isinstance(k, str):\n            return\
    \ False\n    return True\n", "    \n    if not dict:\n        return False\n \
    \   \n    for k in dict.keys():\n        if not isinstance(k, str):\n        \
    \    return False\n    \n    return True\n", "    if not isinstance(dict, dict):\n\
    \        return False\n    for k in dict.keys():\n        if not isinstance(k,\
    \ str):\n            return False\n    return True\n", "    if not isinstance(dict,\
    \ dict):\n        return False\n    \n    for key, value in dict.items():\n  \
    \      if not isinstance(key, str):\n            return False\n        if not\
    \ isinstance(value, str):\n            return False\n    return True\n", "   \
    \ if not isinstance(dict, dict):\n        return False\n    \n    for k in dict:\n\
    \        if not isinstance(k, str):\n            return False\n    return True\n",
  "    if not dict:\n        return False\n    for key, value in dict.items():\n \
    \       if not isinstance(key, str):\n            return False\n        if not\
    \ isinstance(value, str):\n            return False\n    return True\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

language: py
name: HumanEval_88_sort_array
results:
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_array = [sum(array[0:i]) for i in\
    \ range(len(array))]\n    odd_sum = [i for i in sum_array if i % 2 == 1]\n   \
    \ even_sum = [i for i in sum_array if i % 2 == 0]\n    odd_sum = sorted(odd_sum,\
    \ reverse=True)\n    even_sum = sorted(even_sum, reverse=False)\n    return odd_sum\
    \ + even_sum\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert\
    \ candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2,\
    \ 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87,\
    \ 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11])\
    \ == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpohdn0ymu.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpohdn0ymu.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpohdn0ymu.py\", line 31,\
    \ in check\n    assert candidate([5]) == [5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_array = sum(array)\n    if sum_array\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnq6_9_w.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpfnq6_9_w.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpfnq6_9_w.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    # write your code here\n    sum = 0\n\
    \    for i in array:\n        sum += i\n    if sum % 2 == 0:\n        array.sort()\n\
    \    else:\n        array.reverse()\n    return array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp97z2x_9z.py\", line\
    \ 44, in <module>\n    test_check()\n  File \"/tmp/tmp97z2x_9z.py\", line 42,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp97z2x_9z.py\", line 35,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_array = sum(array)\n    if sum_array\
    \ % 2 == 0:\n        array.sort(reverse=True)\n    else:\n        array.sort()\n\
    \    return array\n\ndef check(candidate):\n    assert candidate([]) == []\n \
    \   assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvnfx9hk9.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpvnfx9hk9.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpvnfx9hk9.py\", line 33,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        return sorted(array)\n    else:\n        return sorted(array,\
    \ key=lambda x: -x)\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_3_c4za5.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp_3_c4za5.py\", line 38,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp_3_c4za5.py\", line 31,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort(reverse=True)\n    else:\n        array.sort()\n\
    \    return array\n\ndef check(candidate):\n    assert candidate([]) == []\n \
    \   assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8k4pj245.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp8k4pj245.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp8k4pj245.py\", line 33,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum = 0\n    length = len(array)\n  \
    \  for i in range(length):\n        sum += array[i]\n        if sum % 2 == 0:\n\
    \            array[i], array[length - i - 1] = array[length - i - 1], array[i]\n\
    \    return array\n\ndef check(candidate):\n    assert candidate([]) == []\n \
    \   assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpeiv7j8_f.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmpeiv7j8_f.py\", line 40,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpeiv7j8_f.py\", line 33,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        return sorted(array)\n    else:\n        return sorted(array,\
    \ key=lambda x: -x)\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_3_c4za5.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp_3_c4za5.py\", line 38,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp_3_c4za5.py\", line 31,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_first_and_last_element = sum(array[0:-1])\n\
    \    if sum_of_first_and_last_element % 2 == 0:\n        array.sort()\n    else:\n\
    \        array.reverse()\n    return array\n\ndef check(candidate):\n    assert\
    \ candidate([]) == []\n    assert candidate([5]) == [5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n  \
    \  assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert\
    \ candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpem5a8eyl.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpem5a8eyl.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpem5a8eyl.py\", line 33,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0lxrxqmb.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp0lxrxqmb.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp0lxrxqmb.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0lxrxqmb.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp0lxrxqmb.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp0lxrxqmb.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    length = len(array)\n    if length ==\
    \ 0:\n        return array\n    if length == 1:\n        return array\n    sum_first\
    \ = array[0]\n    sum_last = array[length - 1]\n    if sum_first + sum_last %\
    \ 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgmyi2wai.py\", line\
    \ 47, in <module>\n    test_check()\n  File \"/tmp/tmpgmyi2wai.py\", line 45,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpgmyi2wai.py\", line 38,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_first_and_last_element = sum(array[0:-1])\n\
    \    if sum_of_first_and_last_element % 2 == 0:\n        array.sort()\n    else:\n\
    \        array.reverse()\n    return array\n\ndef check(candidate):\n    assert\
    \ candidate([]) == []\n    assert candidate([5]) == [5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n  \
    \  assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert\
    \ candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpem5a8eyl.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpem5a8eyl.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpem5a8eyl.py\", line 33,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    # write your code here\n    sum = 0\n\
    \    length = len(array)\n    for i in range(length):\n        sum += array[i]\n\
    \    if sum % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n\
    \    return array\n\ndef check(candidate):\n    assert candidate([]) == []\n \
    \   assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7hjz9iir.py\", line\
    \ 45, in <module>\n    test_check()\n  File \"/tmp/tmp7hjz9iir.py\", line 43,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp7hjz9iir.py\", line 36,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0lxrxqmb.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp0lxrxqmb.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp0lxrxqmb.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0lxrxqmb.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp0lxrxqmb.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp0lxrxqmb.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum = 0\n    for i in array:\n      \
    \  sum += i\n    if sum % 2:\n        array.sort()\n    else:\n        array.reverse()\n\
    \    return array\n\ndef check(candidate):\n    assert candidate([]) == []\n \
    \   assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp409kc82e.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmp409kc82e.py\", line 41,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp409kc82e.py\", line 35,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        sorted_array = sorted(array)\n    else:\n        sorted_array\
    \ = sorted(array, reverse=True)\n    return sorted_array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpiuaaim0o.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpiuaaim0o.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpiuaaim0o.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        sorted_array = sorted(array)\n    else:\n        sorted_array\
    \ = sorted(array, reverse=True)\n    return sorted_array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpiuaaim0o.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpiuaaim0o.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpiuaaim0o.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0lxrxqmb.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp0lxrxqmb.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp0lxrxqmb.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_first_and_last_element = sum(array[0:-1])\n\
    \    if sum_of_first_and_last_element % 2 == 0:\n        array.sort()\n    else:\n\
    \        array.reverse()\n    return array\n\ndef check(candidate):\n    assert\
    \ candidate([]) == []\n    assert candidate([5]) == [5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n  \
    \  assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert\
    \ candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpem5a8eyl.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpem5a8eyl.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpem5a8eyl.py\", line 33,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0lxrxqmb.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp0lxrxqmb.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp0lxrxqmb.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort(reverse=True)\n    else:\n        array.sort()\n\
    \    return array\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjf3yi04p.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmpjf3yi04p.py\", line 40,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpjf3yi04p.py\", line 34,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0lxrxqmb.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp0lxrxqmb.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp0lxrxqmb.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert\
    \ candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2,\
    \ 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87,\
    \ 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11])\
    \ == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcywael_0.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmpcywael_0.py\", line 40,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpcywael_0.py\", line 33,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_first_and_last_element = sum(array[0:-1])\n\
    \    if sum_of_first_and_last_element % 2 == 0:\n        array.sort()\n    else:\n\
    \        array.reverse()\n    return array\n\ndef check(candidate):\n    assert\
    \ candidate([]) == []\n    assert candidate([5]) == [5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n  \
    \  assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert\
    \ candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpem5a8eyl.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpem5a8eyl.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpem5a8eyl.py\", line 33,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_array = sum(array)\n    if sum_array\
    \ % 2 == 0:\n        return sorted(array)\n    else:\n        return sorted(array,\
    \ key=lambda x: -x)\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpocahq90o.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpocahq90o.py\", line 38,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpocahq90o.py\", line 31,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    array_copy = array.copy()\n    array_copy.sort()\n\
    \    return array_copy\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4_sc7vfv.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmp4_sc7vfv.py\", line 36,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp4_sc7vfv.py\", line 30,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_first_and_last_element = sum(array[0:-1])\n\
    \    if sum_of_first_and_last_element % 2 == 0:\n        array.sort()\n    else:\n\
    \        array.reverse()\n    return array\n\n\ndef check(candidate):\n    assert\
    \ candidate([]) == []\n    assert candidate([5]) == [5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n  \
    \  assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert\
    \ candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_ex8b5hs.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmp_ex8b5hs.py\", line 40,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp_ex8b5hs.py\", line 34,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    array_copy = array.copy()\n    array_copy.sort()\n\
    \    return array_copy\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4_sc7vfv.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmp4_sc7vfv.py\", line 36,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp4_sc7vfv.py\", line 30,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_array = [sum(array[:i]) + array[i]\
    \ for i in range(1, len(array))]\n    if sum_array[0] % 2 == 0:\n        return\
    \ sorted(array, key=lambda x: -x)\n    else:\n        return sorted(array, key=lambda\
    \ x: x)\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9zffupit.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp9zffupit.py\", line 38,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp9zffupit.py\", line 29,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmp9zffupit.py\", line\
    \ 23, in sort_array\n    if sum_array[0] % 2 == 0:\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        return sorted(array)\n    else:\n        return sorted(array,\
    \ key=lambda x: -x)\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpa820q6ae.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpa820q6ae.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpa820q6ae.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0lxrxqmb.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp0lxrxqmb.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp0lxrxqmb.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0lxrxqmb.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp0lxrxqmb.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp0lxrxqmb.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert\
    \ candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2,\
    \ 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87,\
    \ 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11])\
    \ == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcywael_0.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmpcywael_0.py\", line 40,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpcywael_0.py\", line 33,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_array = [sum(array[0:i]) + array[i]\
    \ for i in range(len(array))]\n    sum_array.sort()\n    if sum_array[-1] % 2\
    \ == 0:\n        sum_array.reverse()\n    return sum_array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpt6e8lq8l.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpt6e8lq8l.py\", line 38,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpt6e8lq8l.py\", line 29,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpt6e8lq8l.py\", line\
    \ 24, in sort_array\n    if sum_array[-1] % 2 == 0:\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum = 0\n    for i in array:\n      \
    \  sum += i\n    if sum % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n\
    \    return array\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe5ik2ikn.py\", line\
    \ 44, in <module>\n    test_check()\n  File \"/tmp/tmpe5ik2ikn.py\", line 42,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpe5ik2ikn.py\", line 35,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    length = len(array)\n    if length ==\
    \ 0:\n        return []\n    if length % 2 == 0:\n        odd_sum = sum(array[0:length//2])\n\
    \        even_sum = sum(array[0:length//2])\n        if odd_sum % 2 == 0:\n  \
    \          array.sort()\n        else:\n            array.reverse()\n    else:\n\
    \        odd_sum = sum(array[0:length//2])\n        even_sum = sum(array[0:length//2])\n\
    \        if odd_sum % 2 != 0:\n            array.sort()\n        else:\n     \
    \       array.reverse()\n    return array\n\ndef check(candidate):\n    assert\
    \ candidate([]) == []\n    assert candidate([5]) == [5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n  \
    \  assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert\
    \ candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgv0bp7ww.py\", line\
    \ 53, in <module>\n    test_check()\n  File \"/tmp/tmpgv0bp7ww.py\", line 51,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpgv0bp7ww.py\", line 44,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    array_copy = array.copy()\n    array_copy.sort()\n\
    \    return array_copy\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4_sc7vfv.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmp4_sc7vfv.py\", line 36,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp4_sc7vfv.py\", line 30,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    length = len(array)\n    if length ==\
    \ 0:\n        return []\n    if length == 1:\n        return array\n    mid =\
    \ length // 2\n    left = sort_array(array[:mid])\n    right = sort_array(array[mid:])\n\
    \    if sum(left) + sum(right) % 2:\n        return left + right\n    else:\n\
    \        return right + left\n\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6,\
    \ 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkjx1uwnl.py\", line\
    \ 47, in <module>\n    test_check()\n  File \"/tmp/tmpkjx1uwnl.py\", line 45,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpkjx1uwnl.py\", line 38,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort(reverse=True)\n    else:\n        array.sort()\n\
    \    return array\n\ndef check(candidate):\n    assert candidate([]) == []\n \
    \   assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8k4pj245.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp8k4pj245.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp8k4pj245.py\", line 33,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_first_and_last_element = sum(array[0:-1])\n\
    \    if sum_of_first_and_last_element % 2 == 0:\n        array.sort()\n    else:\n\
    \        array.reverse()\n    return array\n\ndef check(candidate):\n    assert\
    \ candidate([]) == []\n    assert candidate([5]) == [5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n  \
    \  assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert\
    \ candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpem5a8eyl.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpem5a8eyl.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpem5a8eyl.py\", line 33,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        sorted_array = sorted(array)\n    else:\n        sorted_array\
    \ = sorted(array, reverse=True)\n    return sorted_array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpiuaaim0o.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpiuaaim0o.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpiuaaim0o.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    length = len(array)\n    if length ==\
    \ 0:\n        return []\n    if length == 1:\n        return array\n    mid =\
    \ length // 2\n    if array[mid] % 2 == 0:\n        return sort_array(array[mid:]\
    \ + array[:mid])\n    else:\n        return sort_array(array[:mid] + array[mid:])\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnrmbake9.py\", line\
    \ 45, in <module>\n    test_check()\n  File \"/tmp/tmpnrmbake9.py\", line 43,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpnrmbake9.py\", line 36,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n \
    \ File \"/tmp/tmpnrmbake9.py\", line 29, in sort_array\n    return sort_array(array[mid:]\
    \ + array[:mid])\n  File \"/tmp/tmpnrmbake9.py\", line 29, in sort_array\n   \
    \ return sort_array(array[mid:] + array[:mid])\n  File \"/tmp/tmpnrmbake9.py\"\
    , line 29, in sort_array\n    return sort_array(array[mid:] + array[:mid])\n \
    \ [Previous line repeated 993 more times]\n  File \"/tmp/tmpnrmbake9.py\", line\
    \ 22, in sort_array\n    length = len(array)\nRecursionError: maximum recursion\
    \ depth exceeded while calling a Python object\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_array = sum(array)\n    if sum_array\
    \ % 2 == 0:\n        array.sort(reverse=True)\n    else:\n        array.sort()\n\
    \    return array\n\ndef check(candidate):\n    assert candidate([]) == []\n \
    \   assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvnfx9hk9.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpvnfx9hk9.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpvnfx9hk9.py\", line 33,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum = 0\n    for i in array:\n      \
    \  sum += i\n    if sum % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n\
    \    return array\n\ndef check(candidate):\n    assert candidate([]) == []\n \
    \   assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpaxf8m6sg.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmpaxf8m6sg.py\", line 41,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpaxf8m6sg.py\", line 34,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_first_and_last_element = sum(array[0:-1])\n\
    \    if sum_of_first_and_last_element % 2 == 0:\n        array.sort()\n    else:\n\
    \        array.reverse()\n    return array\n\ndef check(candidate):\n    assert\
    \ candidate([]) == []\n    assert candidate([5]) == [5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n  \
    \  assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert\
    \ candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpem5a8eyl.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpem5a8eyl.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpem5a8eyl.py\", line 33,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    array_copy = array.copy()\n    array_copy.sort()\n\
    \    return array_copy\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4_sc7vfv.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmp4_sc7vfv.py\", line 36,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp4_sc7vfv.py\", line 30,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_array = sum(array)\n    if sum_array\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnq6_9_w.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpfnq6_9_w.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpfnq6_9_w.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    length = len(array)\n    if length ==\
    \ 0:\n        return []\n    if length == 1:\n        return array\n    \n   \
    \ sum_first_index = array[0]\n    sum_last_index = array[length - 1]\n    \n \
    \   if sum_first_index > sum_last_index:\n        array = array[::-1]\n      \
    \  \n    sum_first_index_even = sum_first_index % 2 == 0\n    sum_last_index_even\
    \ = sum_last_index % 2 == 0\n    \n    if sum_first_index_even and sum_last_index_even:\n\
    \        array = array[::-1]\n    elif sum_first_index_even and not sum_last_index_even:\n\
    \        array = array\n    elif not sum_first_index_even and sum_last_index_even:\n\
    \        array = array\n    \n    sum_first_index_odd = sum_first_index % 2 !=\
    \ 0\n    sum_last_index_odd = sum_last_index % 2 != 0\n    \n    if sum_first_index_odd\
    \ and sum_last_index_odd:\n        array = array[::-1]\n    elif sum_first_index_odd\
    \ and sum_last_index_even:\n        array = array\n    elif not sum_first_index_odd\
    \ and sum_last_index_odd:\n        array = array\n    \n    return array\n\ndef\
    \ check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpma4ldrgf.py\", line\
    \ 68, in <module>\n    test_check()\n  File \"/tmp/tmpma4ldrgf.py\", line 66,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpma4ldrgf.py\", line 59,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum = 0\n    length = len(array)\n  \
    \  for i in range(length):\n        sum += array[i]\n        if sum % 2 == 0:\n\
    \            array[i], array[length-i-1] = array[length-i-1], array[i]\n     \
    \       length -= 1\n    return array\n\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6,\
    \ 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9z9dm08t.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmp9z9dm08t.py\", line 41,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp9z9dm08t.py\", line 34,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    # write your code here\n    sum = 0\n\
    \    length = len(array)\n    for i in range(length):\n        sum += array[i]\n\
    \    if sum % 2 == 1:\n        array.sort()\n    else:\n        array.reverse()\n\
    \    return array\n\ndef check(candidate):\n    assert candidate([]) == []\n \
    \   assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpimnc7qbg.py\", line\
    \ 45, in <module>\n    test_check()\n  File \"/tmp/tmpimnc7qbg.py\", line 43,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpimnc7qbg.py\", line 37,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0lxrxqmb.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp0lxrxqmb.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp0lxrxqmb.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_array = sum(array)\n    if sum_array\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnq6_9_w.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpfnq6_9_w.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpfnq6_9_w.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0lxrxqmb.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp0lxrxqmb.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp0lxrxqmb.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_array = 0\n    for num in array:\n\
    \        sum_array += num\n    if sum_array % 2 == 0:\n        array.sort()\n\
    \    else:\n        array.reverse()\n    return array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9myj9u0h.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmp9myj9u0h.py\", line 41,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp9myj9u0h.py\", line 34,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        return sorted(array)\n    else:\n        return sorted(array,\
    \ key=lambda x: -x)\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_3_c4za5.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp_3_c4za5.py\", line 38,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp_3_c4za5.py\", line 31,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    # write your code here\n    sum = 0\n\
    \    for i in array:\n        sum += i\n    if sum % 2 == 0:\n        array.sort()\n\
    \    else:\n        array.reverse()\n    return array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp97z2x_9z.py\", line\
    \ 44, in <module>\n    test_check()\n  File \"/tmp/tmp97z2x_9z.py\", line 42,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp97z2x_9z.py\", line 35,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0lxrxqmb.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp0lxrxqmb.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp0lxrxqmb.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_array = []\n    sum_array.append(array[0])\n\
    \    sum_array.append(array[-1])\n    sum_array.append(array[0])\n    sum_array.append(array[-1])\n\
    \    sum_array.append(array[0])\n    sum_array.append(array[-1])\n    sum_array.append(array[0])\n\
    \    sum_array.append(array[-1])\n    sum_array.append(array[0])\n    sum_array.append(array[-1])\n\
    \    sum_array.append(array[0])\n    sum_array.append(array[-1])\n    sum_array.append(array[0])\n\
    \    sum_array.append(array[-1])\n    sum_array.append(array[0])\n    sum_array.append(array[-1])\n\
    \    sum_array.append(array[0])\n    sum_array.append(array[-1])\n    sum_array.append(array[0])\n\
    \    sum_array.append(array[-1])\n    sum_array.append(array[0])\n    sum_array.append(array[-1])\n\
    \    sum_array.append(array[0])\n    sum_array.append(array[-1])\n    sum_array.append(array[0])\n\
    \    sum_array.append(array[-1])\n    sum_array.append(array[0])\n    sum_array.append(array[-1])\n\
    \    sum_array.append(array[0])\n    sum_array.append(array[-1])\n    sum_array.append(array[0])\n\
    \    sum_array.append(array[-1])\n    sum_array.append(array[0])\n    sum_array.append(array[-1])\n\
    \    sum_array.append(array[0])\n    sum_array.append(array[-1])\n    sum_array.append(array[0])\n\
    \    sum_array.append(array[-1])\n    sum_array.append(array[0])\n    sum_array.append(array[-1])\n\
    \    sum_array.append(array[0])\n    sum_array.append(array[-1])\n    sum_array.append(array[0])\n\
    \    sum_array.append(array[-1])\n    sum_array.append(array[0])\n    sum_array.append(array[-1])\n\
    \    sum_array.append(array[0])\n    sum_array.append(array[-1])\n    sum_array.append(array[0])\n\
    \    sum_array.append(array[-1])\n    sum_array.append(array[0])\n    sum_array.append(array[-1])\n\
    \    sum_array.append(array[0])\n    sum_array.append(array[-1])\n    sum_array.append(array[0])\n\
    \    sum_array.append(array[-1])\n    sum_array.append(array[0])\n    sum_array.append(array[-1])\n\
    \    sum_array.append(array[0])\n    sum_array.append(array[-1])\n    sum_array.append(array[0])\n\
    \    sum_array.append(array[-1])\n    sum_array.append(array[0])\n    sum_array.append(array[-1])\n\
    \    sum_array.append(array[0])\n    sum_array.append(array[-1])\n    sum_array.append(array[0])\n\
    \    sum_array.append(array[-1])\n    sum_array.append(array[0])\n    sum_array.append(array[-1])\n\
    \    sum_array.append(array[0])\n    sum_array.append(array[-1])\n    sum_array\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb872wel9.py\", line\
    \ 108, in <module>\n    test_check()\n  File \"/tmp/tmpb872wel9.py\", line 106,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpb872wel9.py\", line 97,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpb872wel9.py\", line\
    \ 23, in sort_array\n    sum_array.append(array[0])\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort(reverse=True)\n    else:\n        array.sort()\n\
    \    return array\n\ndef check(candidate):\n    assert candidate([]) == []\n \
    \   assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8k4pj245.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp8k4pj245.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp8k4pj245.py\", line 33,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum = 0\n    length = len(array)\n  \
    \  for i in range(length):\n        sum += array[i]\n        if sum % 2 != 0:\n\
    \            array[i], array[length - i - 1] = array[length - i - 1], array[i]\n\
    \    return array\n\ndef check(candidate):\n    assert candidate([]) == []\n \
    \   assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjobioe6v.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmpjobioe6v.py\", line 40,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpjobioe6v.py\", line 33,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        return sorted(array)\n    else:\n        return sorted(array,\
    \ key=lambda x: -x)\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_3_c4za5.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp_3_c4za5.py\", line 38,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp_3_c4za5.py\", line 31,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    # write your code here\n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6,\
    \ 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprysnh6bo.py\", line\
    \ 289, in <module>\n    test_check()\n  File \"/tmp/tmprysnh6bo.py\", line 287,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmprysnh6bo.py\", line 278,\
    \ in check\n    assert candidate([]) == []\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        return sorted(array)\n    else:\n        return sorted(array,\
    \ reverse=True)\n\ndef check(candidate):\n    assert candidate([]) == []\n   \
    \ assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0,\
    \ 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3,\
    \ 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2qmj9m1g.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp2qmj9m1g.py\", line 38,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp2qmj9m1g.py\", line 31,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    array_copy = array.copy()\n    array_copy.sort()\n\
    \    return array_copy\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4_sc7vfv.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmp4_sc7vfv.py\", line 36,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp4_sc7vfv.py\", line 30,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_first_and_last_element = sum(array[0:-1])\n\
    \    if sum_of_first_and_last_element % 2 == 0:\n        array.sort()\n    else:\n\
    \        array.reverse()\n    return array\n\n\ndef check(candidate):\n    assert\
    \ candidate([]) == []\n    assert candidate([5]) == [5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n  \
    \  assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert\
    \ candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_ex8b5hs.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmp_ex8b5hs.py\", line 40,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp_ex8b5hs.py\", line 34,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_first_and_last_element = sum(array[0:-1])\
    \ + array[-1]\n    if sum_of_first_and_last_element % 2 == 0:\n        array.sort()\n\
    \    else:\n        array.reverse()\n    return array\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxmyy71g8.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmpxmyy71g8.py\", line 40,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpxmyy71g8.py\", line 31,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpxmyy71g8.py\", line\
    \ 22, in sort_array\n    sum_of_first_and_last_element = sum(array[0:-1]) + array[-1]\n\
    IndexError: list index out of range\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    length = len(array)\n    if length <\
    \ 2:\n        return array\n    sum_first = array[0]\n    sum_last = array[-1]\n\
    \    if sum_first + sum_last % 2 == 0:\n        array.sort()\n    else:\n    \
    \    array.reverse()\n    return array\n\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6,\
    \ 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8l1btx8e.py\", line\
    \ 45, in <module>\n    test_check()\n  File \"/tmp/tmp8l1btx8e.py\", line 43,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp8l1btx8e.py\", line 36,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    array_copy = array.copy()\n    array_copy.sort()\n\
    \    return array_copy\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4_sc7vfv.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmp4_sc7vfv.py\", line 36,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp4_sc7vfv.py\", line 30,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_first_and_last_element = sum(array[0:-1])\n\
    \    if sum_of_first_and_last_element % 2 == 0:\n        return sorted(array)\n\
    \    else:\n        return sorted(array, reverse=True)\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkfcucqbi.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpkfcucqbi.py\", line 38,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpkfcucqbi.py\", line 34,\
    \ in check\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0lxrxqmb.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp0lxrxqmb.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp0lxrxqmb.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum = 0\n    length = len(array)\n  \
    \  for i in range(length):\n        sum += array[i]\n        if sum % 2 == 0:\n\
    \            sum = 0\n            array[i], array[length - i - 1] = array[length\
    \ - i - 1], array[i]\n    return array\n\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6,\
    \ 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnz9vmbvh.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmpnz9vmbvh.py\", line 41,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpnz9vmbvh.py\", line 34,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort(reverse=True)\n    else:\n        array.sort()\n\
    \    return array\n\ndef check(candidate):\n    assert candidate([]) == []\n \
    \   assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8k4pj245.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp8k4pj245.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp8k4pj245.py\", line 33,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    array_copy = array.copy()\n    array_copy.sort()\n\
    \    return array_copy\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4_sc7vfv.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmp4_sc7vfv.py\", line 36,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp4_sc7vfv.py\", line 30,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert\
    \ candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2,\
    \ 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87,\
    \ 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11])\
    \ == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcywael_0.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmpcywael_0.py\", line 40,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpcywael_0.py\", line 33,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    array_copy = array.copy()\n    array_copy.sort()\n\
    \    return array_copy\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4_sc7vfv.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmp4_sc7vfv.py\", line 36,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp4_sc7vfv.py\", line 30,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    length = len(array)\n    if length ==\
    \ 0:\n        return []\n    if length == 1:\n        return array\n    mid =\
    \ length // 2\n    left = sort_array(array[:mid])\n    right = sort_array(array[mid:])\n\
    \    if sum(left) % 2 == 1:\n        return left + right\n    else:\n        return\
    \ right + left\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert\
    \ candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2,\
    \ 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87,\
    \ 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11])\
    \ == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpejyebv_b.py\", line\
    \ 47, in <module>\n    test_check()\n  File \"/tmp/tmpejyebv_b.py\", line 45,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpejyebv_b.py\", line 38,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_first_and_last_element = sum(array[0:-1])\n\
    \    if sum_of_first_and_last_element % 2 == 0:\n        array.sort()\n    else:\n\
    \        array.reverse()\n    return array\n\ndef check(candidate):\n    assert\
    \ candidate([]) == []\n    assert candidate([5]) == [5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n  \
    \  assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert\
    \ candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpem5a8eyl.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpem5a8eyl.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpem5a8eyl.py\", line 33,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    # write your code here\n    sum_of_first_last_element\
    \ = sum(array[0:-1])\n    if sum_of_first_last_element % 2 == 0:\n        array.sort()\n\
    \    else:\n        array.reverse()\n    return array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7sttn8m5.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmp7sttn8m5.py\", line 40,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp7sttn8m5.py\", line 34,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    # write your code here\n    sum = 0\n\
    \    for i in array:\n        sum += i\n    if sum % 2 == 0:\n        array.sort()\n\
    \    else:\n        array.reverse()\n    return array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp97z2x_9z.py\", line\
    \ 44, in <module>\n    test_check()\n  File \"/tmp/tmp97z2x_9z.py\", line 42,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp97z2x_9z.py\", line 35,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum = 0\n    length = len(array)\n  \
    \  i = 0\n    while i < length:\n        sum += array[i]\n        i += 1\n   \
    \ \n    if sum % 2 == 0:\n        array.sort(reverse = True)\n    else:\n    \
    \    array.sort()\n    return array\n\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6,\
    \ 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9jsqm72v.py\", line\
    \ 47, in <module>\n    test_check()\n  File \"/tmp/tmp9jsqm72v.py\", line 45,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp9jsqm72v.py\", line 39,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0lxrxqmb.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp0lxrxqmb.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp0lxrxqmb.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum = 0\n    length = len(array)\n  \
    \  i = 0\n    while i < length:\n        sum += array[i]\n        i += 1\n   \
    \ \n    if sum % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n\
    \    return array\n\ndef check(candidate):\n    assert candidate([]) == []\n \
    \   assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppnvbieno.py\", line\
    \ 47, in <module>\n    test_check()\n  File \"/tmp/tmppnvbieno.py\", line 45,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmppnvbieno.py\", line 38,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_first_and_last_element = sum(array[0:-1])\n\
    \    if sum_of_first_and_last_element % 2 == 0:\n        array.sort()\n    else:\n\
    \        array.reverse()\n    return array\n\ndef check(candidate):\n    assert\
    \ candidate([]) == []\n    assert candidate([5]) == [5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n  \
    \  assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert\
    \ candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpem5a8eyl.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpem5a8eyl.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpem5a8eyl.py\", line 33,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    length = len(array)\n    if length ==\
    \ 0:\n        return array\n    if length == 1:\n        return array\n    if\
    \ array[length - 1] + array[length - 2] % 2 == 0:\n        array[length - 1],\
    \ array[length - 2] = array[length - 2], array[length - 1]\n        return array\n\
    \    else:\n        array[length - 1], array[length - 2] = array[length - 2],\
    \ array[length - 1]\n        return array\n\n\ndef check(candidate):\n    assert\
    \ candidate([]) == []\n    assert candidate([5]) == [5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n  \
    \  assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert\
    \ candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpv0rrc3mh.py\", line\
    \ 47, in <module>\n    test_check()\n  File \"/tmp/tmpv0rrc3mh.py\", line 45,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpv0rrc3mh.py\", line 38,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0lxrxqmb.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp0lxrxqmb.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp0lxrxqmb.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0lxrxqmb.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp0lxrxqmb.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp0lxrxqmb.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    array_copy = array.copy()\n    array_copy.sort()\n\
    \    return array_copy\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4_sc7vfv.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmp4_sc7vfv.py\", line 36,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp4_sc7vfv.py\", line 30,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0lxrxqmb.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp0lxrxqmb.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp0lxrxqmb.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    array_copy = array.copy()\n    array_copy.sort()\n\
    \    return array_copy\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4_sc7vfv.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmp4_sc7vfv.py\", line 36,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp4_sc7vfv.py\", line 30,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    length = len(array)\n    if length ==\
    \ 0:\n        return []\n    if length == 1:\n        return array\n    mid =\
    \ length // 2\n    left = sort_array(array[:mid])\n    right = sort_array(array[mid:])\n\
    \    if sum(left) + sum(right) % 2 == 1:\n        return left + right\n    else:\n\
    \        return right + left\n\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6,\
    \ 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_32x2_z6.py\", line\
    \ 47, in <module>\n    test_check()\n  File \"/tmp/tmp_32x2_z6.py\", line 45,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp_32x2_z6.py\", line 38,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_first_and_last_element = sum(array[0:-1])\n\
    \    if sum_of_first_and_last_element % 2 == 0:\n        array.sort()\n    else:\n\
    \        array.reverse()\n    return array\n\ndef check(candidate):\n    assert\
    \ candidate([]) == []\n    assert candidate([5]) == [5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n  \
    \  assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert\
    \ candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpem5a8eyl.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpem5a8eyl.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpem5a8eyl.py\", line 33,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0lxrxqmb.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp0lxrxqmb.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp0lxrxqmb.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_array = sum(array)\n    if sum_array\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnq6_9_w.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpfnq6_9_w.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpfnq6_9_w.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0lxrxqmb.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp0lxrxqmb.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp0lxrxqmb.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0lxrxqmb.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp0lxrxqmb.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp0lxrxqmb.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_first_and_last_element = sum(array[0:-1])\
    \ + array[-1]\n    if sum_of_first_and_last_element % 2 == 0:\n        return\
    \ sorted(array)\n    else:\n        return sorted(array, reverse=True)\n\ndef\
    \ check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpv0lrrw1z.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpv0lrrw1z.py\", line 38,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpv0lrrw1z.py\", line 29,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpv0lrrw1z.py\", line\
    \ 22, in sort_array\n    sum_of_first_and_last_element = sum(array[0:-1]) + array[-1]\n\
    IndexError: list index out of range\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0lxrxqmb.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp0lxrxqmb.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp0lxrxqmb.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0lxrxqmb.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp0lxrxqmb.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp0lxrxqmb.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_first_and_last_element = sum(array[0:-1])\
    \ + array[-1]\n    if sum_of_first_and_last_element % 2 == 0:\n        array.sort()\n\
    \    else:\n        array.reverse()\n    return array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcn4g51y5.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpcn4g51y5.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpcn4g51y5.py\", line 30,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpcn4g51y5.py\", line\
    \ 22, in sort_array\n    sum_of_first_and_last_element = sum(array[0:-1]) + array[-1]\n\
    IndexError: list index out of range\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        return sorted(array)\n    else:\n        return sorted(array,\
    \ key=lambda x: -x)\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_3_c4za5.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp_3_c4za5.py\", line 38,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp_3_c4za5.py\", line 31,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    array_copy = array.copy()\n    array_copy.sort()\n\
    \    return array_copy\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4_sc7vfv.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmp4_sc7vfv.py\", line 36,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp4_sc7vfv.py\", line 30,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum = 0\n    length = len(array)\n  \
    \  for i in range(length):\n        sum += array[i]\n        if sum % 2 == 0:\n\
    \            array[i], array[length-1] = array[length-1], array[i]\n         \
    \   length -= 1\n    return array\n\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6,\
    \ 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpctajj40h.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmpctajj40h.py\", line 41,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpctajj40h.py\", line 34,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_first_and_last_element = sum(array[0:-1])\n\
    \    if sum_of_first_and_last_element % 2 == 0:\n        array.sort()\n    else:\n\
    \        array.reverse()\n    return array\n\ndef check(candidate):\n    assert\
    \ candidate([]) == []\n    assert candidate([5]) == [5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n  \
    \  assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert\
    \ candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpem5a8eyl.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpem5a8eyl.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpem5a8eyl.py\", line 33,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    length = len(array)\n    if length ==\
    \ 0:\n        return array\n    if length == 1:\n        return array\n    mid\
    \ = length // 2\n    left = array[mid]\n    right = array[mid+1]\n    if left\
    \ > right:\n        array[mid], array[mid+1] = array[mid+1], array[mid]\n    if\
    \ left % 2 == 1:\n        array[mid], array[mid+1] = array[mid+1], array[mid]\n\
    \    left_sum = 0\n    right_sum = 0\n    for i in range(mid, -1, -1):\n     \
    \   left_sum += array[i]\n        right_sum += array[mid]\n        if left_sum\
    \ % 2 == 1:\n            array[mid], array[mid+1] = array[mid+1], array[mid]\n\
    \            left_sum -= 1\n            right_sum -= 1\n    if left_sum % 2 ==\
    \ 1:\n        array[mid], array[mid+1] = array[mid+1], array[mid]\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0mpex213.py\", line\
    \ 59, in <module>\n    test_check()\n  File \"/tmp/tmp0mpex213.py\", line 57,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp0mpex213.py\", line 50,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    array_copy = array.copy()\n    array_copy.sort()\n\
    \    return array_copy\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4_sc7vfv.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmp4_sc7vfv.py\", line 36,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp4_sc7vfv.py\", line 30,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum = 0\n    length = len(array)\n  \
    \  i = 0\n    while i < length:\n        sum += array[i]\n        i += 1\n   \
    \ if sum % 2 == 0:\n        return sorted(array)\n    else:\n        return sorted(array,\
    \ reverse=True)\n\ndef check(candidate):\n    assert candidate([]) == []\n   \
    \ assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0,\
    \ 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3,\
    \ 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfr5rr3z9.py\", line\
    \ 45, in <module>\n    test_check()\n  File \"/tmp/tmpfr5rr3z9.py\", line 43,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpfr5rr3z9.py\", line 36,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    length = len(array)\n    if length ==\
    \ 0:\n        return []\n    if length == 1:\n        return array\n    mid =\
    \ length // 2\n    left_sum = sum(array[:mid])\n    right_sum = sum(array[mid:])\n\
    \    if left_sum % 2 == 0:\n        left_sum -= left_sum // 2\n        right_sum\
    \ -= right_sum // 2\n        array = array[::-1]\n        array[mid], array[length\
    \ - 1] = array[length - 1], array[mid]\n        array = array[:mid] + array[mid:]\n\
    \        array[mid], array[length - 1] = array[length - 1], array[mid]\n     \
    \   array = array[:mid] + array[mid:]\n        array[mid], array[length - 1] =\
    \ array[length - 1], array[mid]\n        array = array[:mid] + array[mid:]\n \
    \       array[mid], array[length - 1] = array[length - 1], array[mid]\n      \
    \  array = array[:mid] + array[mid:]\n        array[mid], array[length - 1] =\
    \ array[length - 1], array[mid]\n        array = array[:mid] + array[mid:]\n \
    \       array[mid], array[length - 1] = array[length - 1], array[mid]\n      \
    \  array = array[:mid] + array[mid:]\n        array[mid], array[length - 1] =\
    \ array[length - 1], array[mid]\n        array = array[:mid] + array[mid:]\n \
    \       array[mid], array[length - 1] = array[length - 1], array[mid]\n      \
    \  array = array[:mid] + array[mid:]\n        array[mid], array[length - 1] =\
    \ array[length - 1], array[mid]\n        array = array[:mid] + array[mid:]\n \
    \       array[mid], array[length - 1] = array[length - 1], array[mid]\n      \
    \  array = array[:mid] + array[mid:]\n        array[mid], array[length - 1] =\
    \ array[length - 1], array[mid]\n        array = array[:mid] + array[mid:]\n \
    \       array[mid], array[length - 1] = array[length - 1], array[mid]\n      \
    \  array = array[:mid] + array[mid:]\n        array[mid], array[length - 1] =\
    \ array[length - 1], array[mid]\n        array = array[:mid] + array[mid:]\n \
    \       array[mid], array[length - 1] = array[length - 1], array[mid]\n      \
    \  array = array[:mid] + array[mid:]\n        array[mid], array[length - 1] =\
    \ array[length - 1], array[mid]\n        array = array[:mid] + array[mid:]\n \
    \       array[mid], array[length - 1] = array[length - 1], array[mid]\n      \
    \  array = array[:mid] + array[mid:]\n        array[mid], array[length - 1] =\
    \ array[length - 1], array[mid]\n        array = array[:mid] + array[mid:]\n \
    \       array[mid], array[length - 1] = array[length - 1], array[mid]\n      \
    \  array = array[:mid] + array[mid:]\n        array[mid], array[length - 1] =\
    \ array[length - 1], \ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5729s43f.py\", line\
    \ 83, in <module>\n    test_check()\n  File \"/tmp/tmp5729s43f.py\", line 81,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp5729s43f.py\", line 74,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_first_and_last_element = sum(array[0:-1])\n\
    \    if sum_of_first_and_last_element % 2 == 0:\n        array.sort()\n    else:\n\
    \        array.reverse()\n    return array\n\ndef check(candidate):\n    assert\
    \ candidate([]) == []\n    assert candidate([5]) == [5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n  \
    \  assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert\
    \ candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpem5a8eyl.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpem5a8eyl.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpem5a8eyl.py\", line 33,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    length = len(array)\n    if length ==\
    \ 0:\n        return []\n    if length == 1:\n        return array\n    mid =\
    \ length // 2\n    if array[mid] % 2 == 0:\n        return sort_array(array[mid:]\
    \ + array[:mid])\n    else:\n        return sort_array(array[:mid] + array[mid:])\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnrmbake9.py\", line\
    \ 45, in <module>\n    test_check()\n  File \"/tmp/tmpnrmbake9.py\", line 43,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpnrmbake9.py\", line 36,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n \
    \ File \"/tmp/tmpnrmbake9.py\", line 29, in sort_array\n    return sort_array(array[mid:]\
    \ + array[:mid])\n  File \"/tmp/tmpnrmbake9.py\", line 29, in sort_array\n   \
    \ return sort_array(array[mid:] + array[:mid])\n  File \"/tmp/tmpnrmbake9.py\"\
    , line 29, in sort_array\n    return sort_array(array[mid:] + array[:mid])\n \
    \ [Previous line repeated 993 more times]\n  File \"/tmp/tmpnrmbake9.py\", line\
    \ 22, in sort_array\n    length = len(array)\nRecursionError: maximum recursion\
    \ depth exceeded while calling a Python object\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    # write your code here\n    sum = 0\n\
    \    for i in array:\n        sum += i\n    if sum % 2 == 0:\n        array.sort()\n\
    \    else:\n        array.reverse()\n    return array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp97z2x_9z.py\", line\
    \ 44, in <module>\n    test_check()\n  File \"/tmp/tmp97z2x_9z.py\", line 42,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp97z2x_9z.py\", line 35,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    array_copy = array.copy()\n    array_copy.sort()\n\
    \    return array_copy\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4_sc7vfv.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmp4_sc7vfv.py\", line 36,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp4_sc7vfv.py\", line 30,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum = 0\n    for i in array:\n      \
    \  sum += i\n    if sum % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n\
    \    return array\n\ndef check(candidate):\n    assert candidate([]) == []\n \
    \   assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpaxf8m6sg.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmpaxf8m6sg.py\", line 41,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpaxf8m6sg.py\", line 34,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    array_copy = array.copy()\n    array_copy.sort()\n\
    \    return array_copy\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4_sc7vfv.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmp4_sc7vfv.py\", line 36,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp4_sc7vfv.py\", line 30,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_first_and_last_element = sum(array[0:-1])\n\
    \    if sum_of_first_and_last_element % 2 == 0:\n        array.sort()\n    else:\n\
    \        array.reverse()\n    return array\n\ndef check(candidate):\n    assert\
    \ candidate([]) == []\n    assert candidate([5]) == [5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n  \
    \  assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert\
    \ candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpem5a8eyl.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpem5a8eyl.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpem5a8eyl.py\", line 33,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    length = len(array)\n    if length ==\
    \ 0:\n        return array\n    if length == 1:\n        return array\n    if\
    \ array[length - 1] + array[length - 2] % 2 == 0:\n        array[length - 1],\
    \ array[length - 2] = array[length - 2], array[length - 1]\n        return array\n\
    \    else:\n        array[length - 1], array[length - 2] = array[length - 2],\
    \ array[length - 1]\n        return array\n\n\ndef check(candidate):\n    assert\
    \ candidate([]) == []\n    assert candidate([5]) == [5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n  \
    \  assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert\
    \ candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpv0rrc3mh.py\", line\
    \ 47, in <module>\n    test_check()\n  File \"/tmp/tmpv0rrc3mh.py\", line 45,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpv0rrc3mh.py\", line 38,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        return sorted(array)\n    else:\n        return sorted(array,\
    \ key=lambda x: -x)\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_3_c4za5.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp_3_c4za5.py\", line 38,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp_3_c4za5.py\", line 31,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        sorted_array = sorted(array)\n    else:\n        sorted_array\
    \ = sorted(array, reverse=True)\n    return sorted_array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpiuaaim0o.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpiuaaim0o.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpiuaaim0o.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0lxrxqmb.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp0lxrxqmb.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp0lxrxqmb.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: 1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    length = len(array)\n    if length ==\
    \ 0:\n        return []\n    if length == 1:\n        return array\n    if length\
    \ == 2:\n        if array[0] > array[1]:\n            return array\n        else:\n\
    \            return [array[1], array[0]]\n    if length == 3:\n        if array[0]\
    \ > array[1] and array[0] > array[2]:\n            return array\n        elif\
    \ array[1] > array[2]:\n            return [array[2], array[1], array[0]]\n  \
    \      else:\n            return [array[0], array[2], array[1]]\n    if length\
    \ == 4:\n        if array[0] > array[1] and array[0] > array[2] and array[0] >\
    \ array[3]:\n            return array\n        elif array[1] > array[2] and array[1]\
    \ > array[3]:\n            return [array[3], array[2], array[1], array[0]]\n \
    \       elif array[2] > array[3]:\n            return [array[3], array[1], array[0],\
    \ array[2]]\n        else:\n            return [array[0], array[3], array[2],\
    \ array[1]]\n    if length == 5:\n        if array[0] > array[1] and array[0]\
    \ > array[2] and array[0] > array[3] and array[0] > array[4]:\n            return\
    \ array\n        elif array[1] > array[2] and array[1] > array[3] and array[1]\
    \ > array[4]:\n            return [array[4], array[3], array[2], array[1], array[0]]\n\
    \        elif array[2] > array[3] and array[2] > array[4]:\n            return\
    \ [array[4], array[3], array[1], array[0], array[2]]\n        elif array[3] >\
    \ array[4]:\n            return [array[4], array[3], array[2], array[1], array[0]]\n\
    \        else:\n            return [array[0], array[4], array[3], array[2], array[1],\
    \ array[2]]\n    if length == 6:\n        if array[0] > array[1] and array[0]\
    \ > array[2] and array[0] > array[3] and array[0] > array[4] and array[0] > array[5]:\n\
    \            return array\n        elif array[1] > array[2] and array[1] > array[3]\
    \ and array[1] > array[4] and array[1] > array[5]:\n            return [array[5],\
    \ array[4], array[3], array[2], array[1], array[0]]\n        elif array[2] > array[3]\
    \ and array[2] > array[4] and array[2] > array[5]:\n            return [array[5],\
    \ array[4], array[3], array[1], array[0], array[2]]\n        elif array[3] > array[4]\
    \ and array[3] > array[5]:\n            return [array[5], array[4], array[3],\
    \ array[2], array[1], array[0]]\n        elif array[4] > array[5]:\n         \
    \   return [array[5], array[4], array[3], array[2], array[1], array[0]]\n    \
    \    else:\n            return [array[0], array[5], array[4], array[3], array[2],\
    \ array[1], array[2]]\n    if length == 7:\n        if array[0] > array[1] and\
    \ array[0]\ndef check(candidate):\n    assert candidate([]) == []\n    assert\
    \ candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2,\
    \ 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87,\
    \ 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11])\
    \ == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: SyntaxError
  stderr: "  File \"/tmp/tmpctg1q1gq.py\", line 73\n    if array[0] > array[1] and\
    \ array[0]\n                                       ^\nSyntaxError: expected ':'\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0lxrxqmb.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp0lxrxqmb.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp0lxrxqmb.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0lxrxqmb.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp0lxrxqmb.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp0lxrxqmb.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    # write your code here\n    sum_of_array\
    \ = sum(array[0:-1])\n    if sum_of_array % 2 == 0:\n        array.sort()\n  \
    \  else:\n        array.reverse()\n    return array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpy24n1euy.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmpy24n1euy.py\", line 40,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpy24n1euy.py\", line 34,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_array = sum(array)\n    if sum_array\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert\
    \ candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2,\
    \ 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87,\
    \ 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11])\
    \ == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbqtn95ea.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmpbqtn95ea.py\", line 40,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpbqtn95ea.py\", line 33,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    length = len(array)\n    if length ==\
    \ 0:\n        return []\n    if length == 1:\n        return array\n    mid =\
    \ length // 2\n    left = array[mid]\n    right = array[mid-1]\n    if left ==\
    \ right:\n        return array\n    if left + right % 2 == 0:\n        array[mid],\
    \ array[mid-1] = array[mid-1], array[mid]\n        array = sort_array(array)\n\
    \        array[mid], array[mid-1] = array[mid-1], array[mid]\n        return array\n\
    \    else:\n        array[mid], array[mid-1] = array[mid-1], array[mid]\n    \
    \    array = sort_array(array)\n        array[mid], array[mid-1] = array[mid-1],\
    \ array[mid]\n        return array\n\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6,\
    \ 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7oayl2lz.py\", line\
    \ 55, in <module>\n    test_check()\n  File \"/tmp/tmp7oayl2lz.py\", line 53,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp7oayl2lz.py\", line 46,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n \
    \ File \"/tmp/tmp7oayl2lz.py\", line 39, in sort_array\n    array = sort_array(array)\n\
    \  File \"/tmp/tmp7oayl2lz.py\", line 39, in sort_array\n    array = sort_array(array)\n\
    \  File \"/tmp/tmp7oayl2lz.py\", line 39, in sort_array\n    array = sort_array(array)\n\
    \  [Previous line repeated 993 more times]\n  File \"/tmp/tmp7oayl2lz.py\", line\
    \ 22, in sort_array\n    length = len(array)\nRecursionError: maximum recursion\
    \ depth exceeded while calling a Python object\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        sorted_array = sorted(array)\n    else:\n        sorted_array\
    \ = sorted(array, reverse=True)\n    return sorted_array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpiuaaim0o.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpiuaaim0o.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpiuaaim0o.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    array_copy = array.copy()\n    array_copy.sort()\n\
    \    return array_copy\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4_sc7vfv.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmp4_sc7vfv.py\", line 36,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp4_sc7vfv.py\", line 30,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0lxrxqmb.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp0lxrxqmb.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp0lxrxqmb.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    array_copy = array.copy()\n    array_copy.sort()\n\
    \    return array_copy\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4_sc7vfv.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmp4_sc7vfv.py\", line 36,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp4_sc7vfv.py\", line 30,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_first_and_last_element = sum(array[0:-1])\
    \ + array[-1]\n    if sum_of_first_and_last_element % 2 == 0:\n        return\
    \ sorted(array)\n    else:\n        return sorted(array, reverse=True)\n\ndef\
    \ check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpv0lrrw1z.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpv0lrrw1z.py\", line 38,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpv0lrrw1z.py\", line 29,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpv0lrrw1z.py\", line\
    \ 22, in sort_array\n    sum_of_first_and_last_element = sum(array[0:-1]) + array[-1]\n\
    IndexError: list index out of range\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_first_and_last_element = sum(array[0:-1])\
    \ + array[-1]\n    if sum_of_first_and_last_element % 2 == 0:\n        array.sort()\n\
    \    else:\n        array.reverse()\n    return array\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxmyy71g8.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmpxmyy71g8.py\", line 40,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpxmyy71g8.py\", line 31,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpxmyy71g8.py\", line\
    \ 22, in sort_array\n    sum_of_first_and_last_element = sum(array[0:-1]) + array[-1]\n\
    IndexError: list index out of range\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    array_copy = array.copy()\n    array_copy.sort()\n\
    \    return array_copy\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4_sc7vfv.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmp4_sc7vfv.py\", line 36,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp4_sc7vfv.py\", line 30,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    # write your code here\n    sum = 0\n\
    \    for i in array:\n        sum += i\n    if sum % 2 == 0:\n        array.sort()\n\
    \    else:\n        array.reverse()\n    return array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp97z2x_9z.py\", line\
    \ 44, in <module>\n    test_check()\n  File \"/tmp/tmp97z2x_9z.py\", line 42,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp97z2x_9z.py\", line 35,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    # write your code here\n    sum = 0\n\
    \    length = len(array)\n    for i in range(length):\n        sum += array[i]\n\
    \        if sum % 2 == 0:\n            array[i], array[length-1] = array[length-1],\
    \ array[i]\n            length -= 1\n    return array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpitpbdf1l.py\", line\
    \ 44, in <module>\n    test_check()\n  File \"/tmp/tmpitpbdf1l.py\", line 42,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpitpbdf1l.py\", line 35,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum = 0\n    length = len(array)\n  \
    \  i = 0\n    while i < length:\n        sum += array[i]\n        i += 1\n   \
    \ \n    if sum % 2 != 0:\n        array.sort(reverse=True)\n    else:\n      \
    \  array.sort()\n    return array\n\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6,\
    \ 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpoh2m9qe4.py\", line\
    \ 47, in <module>\n    test_check()\n  File \"/tmp/tmpoh2m9qe4.py\", line 45,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpoh2m9qe4.py\", line 38,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_array = sum(array)\n    if sum_array\
    \ % 2 == 0:\n        array.sort(reverse=True)\n    else:\n        array.sort()\n\
    \    return array\n\ndef check(candidate):\n    assert candidate([]) == []\n \
    \   assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvnfx9hk9.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpvnfx9hk9.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpvnfx9hk9.py\", line 33,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort(reverse=True)\n    else:\n        array.sort()\n\
    \    return array\n\ndef check(candidate):\n    assert candidate([]) == []\n \
    \   assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8k4pj245.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp8k4pj245.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp8k4pj245.py\", line 33,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort(reverse=True)\n    else:\n        array.sort()\n\
    \    return array\n\ndef check(candidate):\n    assert candidate([]) == []\n \
    \   assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8k4pj245.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp8k4pj245.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp8k4pj245.py\", line 33,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    # write your code here\n    sum = 0\n\
    \    for i in array:\n        sum += i\n    if sum % 2 == 0:\n        array.sort()\n\
    \    else:\n        array.reverse()\n    return array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp97z2x_9z.py\", line\
    \ 44, in <module>\n    test_check()\n  File \"/tmp/tmp97z2x_9z.py\", line 42,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp97z2x_9z.py\", line 35,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_first_and_last_element = sum(array[0:-1])\n\
    \    if sum_of_first_and_last_element % 2 == 0:\n        array.sort()\n    else:\n\
    \        array.reverse()\n    return array\n\ndef check(candidate):\n    assert\
    \ candidate([]) == []\n    assert candidate([5]) == [5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n  \
    \  assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert\
    \ candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpem5a8eyl.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpem5a8eyl.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpem5a8eyl.py\", line 33,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0lxrxqmb.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp0lxrxqmb.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp0lxrxqmb.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_array = sum(array)\n    if sum_array\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnq6_9_w.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpfnq6_9_w.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpfnq6_9_w.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_first_and_last_element = sum(array[0:-1])\n\
    \    if sum_of_first_and_last_element % 2 == 0:\n        array.sort()\n    else:\n\
    \        array.reverse()\n    return array\n\n\ndef check(candidate):\n    assert\
    \ candidate([]) == []\n    assert candidate([5]) == [5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n  \
    \  assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert\
    \ candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_ex8b5hs.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmp_ex8b5hs.py\", line 40,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp_ex8b5hs.py\", line 34,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        sorted_array = sorted(array)\n    else:\n        sorted_array\
    \ = sorted(array, reverse=True)\n    return sorted_array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpiuaaim0o.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpiuaaim0o.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpiuaaim0o.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0lxrxqmb.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp0lxrxqmb.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp0lxrxqmb.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    length = len(array)\n    if length <\
    \ 2:\n        return array\n    sum_of_first_and_last = sum(array[0:-1])\n   \
    \ if sum_of_first_and_last % 2 == 0:\n        array.reverse()\n        return\
    \ array\n    else:\n        array.reverse()\n        array.append(array[0])\n\
    \        return array\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmxfwoz_5.py\", line\
    \ 46, in <module>\n    test_check()\n  File \"/tmp/tmpmxfwoz_5.py\", line 44,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpmxfwoz_5.py\", line 37,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_array = sum(array)\n    if sum_array\
    \ % 2 == 0:\n        array.sort(reverse=True)\n    else:\n        array.sort()\n\
    \    return array\n\ndef check(candidate):\n    assert candidate([]) == []\n \
    \   assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvnfx9hk9.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpvnfx9hk9.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpvnfx9hk9.py\", line 33,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0lxrxqmb.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp0lxrxqmb.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp0lxrxqmb.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    # write your code here\n    \n    sum\
    \ = 0\n    \n    for i in range(len(array)):\n        sum += array[i]\n    \n\
    \    if sum % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n\
    \    \n    return array\n\ndef check(candidate):\n    assert candidate([]) ==\
    \ []\n    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5])\
    \ == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5,\
    \ 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpluchul0t.py\", line\
    \ 48, in <module>\n    test_check()\n  File \"/tmp/tmpluchul0t.py\", line 46,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpluchul0t.py\", line 39,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_first_and_last_element = sum(array[0:-1])\n\
    \    if sum_of_first_and_last_element % 2 == 0:\n        array.sort()\n    else:\n\
    \        array.reverse()\n    return array\n\ndef check(candidate):\n    assert\
    \ candidate([]) == []\n    assert candidate([5]) == [5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n  \
    \  assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert\
    \ candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpem5a8eyl.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpem5a8eyl.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpem5a8eyl.py\", line 33,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_array = [sum(array[:i]) + array[i]\
    \ for i in range(len(array))]\n    sum_array.sort()\n    if sum_array[-1] % 2\
    \ == 0:\n        return array[::-1]\n    return array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmmvzqlli.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpmmvzqlli.py\", line 38,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpmmvzqlli.py\", line 29,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpmmvzqlli.py\", line\
    \ 24, in sort_array\n    if sum_array[-1] % 2 == 0:\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_first_and_last_element = sum(array[0:-1])\n\
    \    if sum_of_first_and_last_element % 2 == 0:\n        array.sort()\n    else:\n\
    \        array.reverse()\n    return array\n\ndef check(candidate):\n    assert\
    \ candidate([]) == []\n    assert candidate([5]) == [5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n  \
    \  assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert\
    \ candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpem5a8eyl.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpem5a8eyl.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpem5a8eyl.py\", line 33,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    array_copy = array.copy()\n    array_copy.sort()\n\
    \    return array_copy\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4_sc7vfv.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmp4_sc7vfv.py\", line 36,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp4_sc7vfv.py\", line 30,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_first_and_last_element = sum(array[0:-1])\
    \ + array[-1]\n    if sum_of_first_and_last_element % 2 == 0:\n        array.sort()\n\
    \    else:\n        array.reverse()\n    return array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcn4g51y5.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpcn4g51y5.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpcn4g51y5.py\", line 30,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpcn4g51y5.py\", line\
    \ 22, in sort_array\n    sum_of_first_and_last_element = sum(array[0:-1]) + array[-1]\n\
    IndexError: list index out of range\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0lxrxqmb.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp0lxrxqmb.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp0lxrxqmb.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0lxrxqmb.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp0lxrxqmb.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp0lxrxqmb.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0lxrxqmb.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp0lxrxqmb.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp0lxrxqmb.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    # write your code here\n    sum = 0\n\
    \    for i in array:\n        sum += i\n    if sum % 2 == 0:\n        array.sort()\n\
    \    else:\n        array.reverse()\n    return array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp97z2x_9z.py\", line\
    \ 44, in <module>\n    test_check()\n  File \"/tmp/tmp97z2x_9z.py\", line 42,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp97z2x_9z.py\", line 35,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    length = len(array)\n    if length ==\
    \ 0:\n        return []\n    if length == 1:\n        return array\n    mid =\
    \ length // 2\n    left = sort_array(array[:mid])\n    right = sort_array(array[mid:])\n\
    \    if sum(left) + sum(right) % 2 == 1:\n        return left + right\n    else:\n\
    \        return right + left\n\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6,\
    \ 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_32x2_z6.py\", line\
    \ 47, in <module>\n    test_check()\n  File \"/tmp/tmp_32x2_z6.py\", line 45,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp_32x2_z6.py\", line 38,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        sorted_array = sorted(array)\n    else:\n        sorted_array\
    \ = sorted(array, reverse=True)\n    return sorted_array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpiuaaim0o.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpiuaaim0o.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpiuaaim0o.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_array = sum(array)\n    if sum_array\
    \ % 2 == 0:\n        sorted_array = sorted(array)\n    else:\n        sorted_array\
    \ = sorted(array, reverse=True)\n    return sorted_array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdop7017v.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpdop7017v.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpdop7017v.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_first_and_last_element = sum(array[0:-1])\n\
    \    if sum_of_first_and_last_element % 2 == 0:\n        array.sort()\n    else:\n\
    \        array.reverse()\n    return array\n\ndef check(candidate):\n    assert\
    \ candidate([]) == []\n    assert candidate([5]) == [5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n  \
    \  assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert\
    \ candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpem5a8eyl.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpem5a8eyl.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpem5a8eyl.py\", line 33,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    length = len(array)\n    if length ==\
    \ 0:\n        return []\n    if length == 1:\n        return array\n    sum_first\
    \ = array[0]\n    sum_last = array[length - 1]\n    if sum_first + sum_last %\
    \ 2 == 0:\n        return array[::-1]\n    else:\n        return array\n\ndef\
    \ check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpw1_2bjqv.py\", line\
    \ 46, in <module>\n    test_check()\n  File \"/tmp/tmpw1_2bjqv.py\", line 44,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpw1_2bjqv.py\", line 37,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0lxrxqmb.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp0lxrxqmb.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp0lxrxqmb.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_first_and_last_element = sum(array[0:-1])\n\
    \    if sum_of_first_and_last_element % 2 == 0:\n        array.sort()\n    else:\n\
    \        array.reverse()\n    return array\n\ndef check(candidate):\n    assert\
    \ candidate([]) == []\n    assert candidate([5]) == [5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n  \
    \  assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert\
    \ candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpem5a8eyl.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpem5a8eyl.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpem5a8eyl.py\", line 33,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_first_and_last_element = sum(array[0:-1])\
    \ + array[-1]\n    if sum_of_first_and_last_element % 2 == 0:\n        array.sort()\n\
    \    else:\n        array.reverse()\n    return array\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxmyy71g8.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmpxmyy71g8.py\", line 40,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpxmyy71g8.py\", line 31,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpxmyy71g8.py\", line\
    \ 22, in sort_array\n    sum_of_first_and_last_element = sum(array[0:-1]) + array[-1]\n\
    IndexError: list index out of range\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_array = sum(array)\n    if sum_array\
    \ % 2 == 0:\n        sorted_array = sorted(array)\n    else:\n        sorted_array\
    \ = sorted(array, reverse=True)\n    return sorted_array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdop7017v.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpdop7017v.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpdop7017v.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0lxrxqmb.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp0lxrxqmb.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp0lxrxqmb.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        return sorted(array)\n    else:\n        return sorted(array,\
    \ reverse=True)\n\ndef check(candidate):\n    assert candidate([]) == []\n   \
    \ assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0,\
    \ 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3,\
    \ 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2qmj9m1g.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp2qmj9m1g.py\", line 38,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp2qmj9m1g.py\", line 31,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_array = [sum(array[0:i]) + array[i]\
    \ for i in range(1, len(array))]\n    sum_array.sort()\n    if sum_array[-1] %\
    \ 2 == 0:\n        return sum_array\n    else:\n        return sum_array[::-1]\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpinmlpe4i.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpinmlpe4i.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpinmlpe4i.py\", line 30,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpinmlpe4i.py\", line\
    \ 24, in sort_array\n    if sum_array[-1] % 2 == 0:\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    # write your code here\n    sum = 0\n\
    \    length = len(array)\n    i = 0\n    while i < length:\n        sum += array[i]\n\
    \        i += 1\n    if sum % 2 == 0:\n        return sorted(array)\n    else:\n\
    \        return sorted(array, reverse=True)\n\ndef check(candidate):\n    assert\
    \ candidate([]) == []\n    assert candidate([5]) == [5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n  \
    \  assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert\
    \ candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplf4guovx.py\", line\
    \ 46, in <module>\n    test_check()\n  File \"/tmp/tmplf4guovx.py\", line 44,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmplf4guovx.py\", line 37,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_first_and_last_element = sum(array[0:-1])\n\
    \    if sum_of_first_and_last_element % 2 == 0:\n        array.sort()\n    else:\n\
    \        array.reverse()\n    return array\n\ndef check(candidate):\n    assert\
    \ candidate([]) == []\n    assert candidate([5]) == [5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n  \
    \  assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert\
    \ candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpem5a8eyl.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpem5a8eyl.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpem5a8eyl.py\", line 33,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0lxrxqmb.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp0lxrxqmb.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp0lxrxqmb.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort(reverse=True)\n    else:\n        array.sort()\n\
    \    return array\n\ndef check(candidate):\n    assert candidate([]) == []\n \
    \   assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8k4pj245.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp8k4pj245.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp8k4pj245.py\", line 33,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_first_and_last_element = sum(array[0:-1])\n\
    \    if sum_of_first_and_last_element % 2 == 0:\n        array.sort()\n    else:\n\
    \        array.reverse()\n    return array\n\ndef check(candidate):\n    assert\
    \ candidate([]) == []\n    assert candidate([5]) == [5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n  \
    \  assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert\
    \ candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpem5a8eyl.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpem5a8eyl.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpem5a8eyl.py\", line 33,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum = 0\n    for i in array:\n      \
    \  sum += i\n    if sum % 2 == 0:\n        return sorted(array)\n    else:\n \
    \       return sorted(array, reverse = True)\n\ndef check(candidate):\n    assert\
    \ candidate([]) == []\n    assert candidate([5]) == [5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n  \
    \  assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert\
    \ candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpei2h5qbv.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmpei2h5qbv.py\", line 40,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpei2h5qbv.py\", line 33,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_first_and_last_element = sum(array[0:-1])\n\
    \    if sum_of_first_and_last_element % 2 == 0:\n        array.sort()\n    else:\n\
    \        array.reverse()\n    return array\n\ndef check(candidate):\n    assert\
    \ candidate([]) == []\n    assert candidate([5]) == [5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n  \
    \  assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert\
    \ candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpem5a8eyl.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpem5a8eyl.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpem5a8eyl.py\", line 33,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort(reverse=True)\n    else:\n        array.sort()\n\
    \    return array\n\ndef check(candidate):\n    assert candidate([]) == []\n \
    \   assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8k4pj245.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp8k4pj245.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp8k4pj245.py\", line 33,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    array_copy = array.copy()\n    array_copy.sort()\n\
    \    return array_copy\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4_sc7vfv.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmp4_sc7vfv.py\", line 36,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp4_sc7vfv.py\", line 30,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum = 0\n    array_copy = array.copy()\n\
    \    array_copy.sort()\n    sum = 0\n    for i in array_copy:\n        sum +=\
    \ i\n        if sum % 2 == 0:\n            array_copy.reverse()\n            sum\
    \ = 0\n    return array_copy\n\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6,\
    \ 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpo97h3hp3.py\", line\
    \ 45, in <module>\n    test_check()\n  File \"/tmp/tmpo97h3hp3.py\", line 43,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpo97h3hp3.py\", line 39,\
    \ in check\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        return sorted(array)\n    else:\n        return sorted(array,\
    \ reverse=True)\n\ndef check(candidate):\n    assert candidate([]) == []\n   \
    \ assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0,\
    \ 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3,\
    \ 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2qmj9m1g.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp2qmj9m1g.py\", line 38,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp2qmj9m1g.py\", line 31,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    # write your code here\n    sum = 0\n\
    \    length = len(array)\n    for i in range(length):\n        sum += array[i]\n\
    \        if sum % 2 == 0:\n            array[i], array[length-1] = array[length-1],\
    \ array[i]\n            length -= 1\n    return array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpitpbdf1l.py\", line\
    \ 44, in <module>\n    test_check()\n  File \"/tmp/tmpitpbdf1l.py\", line 42,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpitpbdf1l.py\", line 35,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    # write your code here\n    sum = 0\n\
    \    for i in array:\n        sum += i\n    if sum % 2 == 0:\n        array.sort()\n\
    \    else:\n        array.reverse()\n    return array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp97z2x_9z.py\", line\
    \ 44, in <module>\n    test_check()\n  File \"/tmp/tmp97z2x_9z.py\", line 42,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp97z2x_9z.py\", line 35,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_first_and_last_element = sum(array[0:-1])\
    \ + array[-1]\n    if sum_of_first_and_last_element % 2 == 0:\n        return\
    \ sorted(array)\n    else:\n        return sorted(array, reverse=True)\n\ndef\
    \ check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpv0lrrw1z.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpv0lrrw1z.py\", line 38,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpv0lrrw1z.py\", line 29,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpv0lrrw1z.py\", line\
    \ 22, in sort_array\n    sum_of_first_and_last_element = sum(array[0:-1]) + array[-1]\n\
    IndexError: list index out of range\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0lxrxqmb.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp0lxrxqmb.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp0lxrxqmb.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        sorted_array = sorted(array)\n    else:\n        sorted_array\
    \ = sorted(array, reverse=True)\n    return sorted_array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpiuaaim0o.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpiuaaim0o.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpiuaaim0o.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        sorted_array = sorted(array)\n    else:\n        sorted_array\
    \ = sorted(array, reverse=True)\n    return sorted_array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpiuaaim0o.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpiuaaim0o.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpiuaaim0o.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    array_copy = array.copy()\n    array_copy.sort()\n\
    \    return array_copy\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4_sc7vfv.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmp4_sc7vfv.py\", line 36,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp4_sc7vfv.py\", line 30,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum = 0\n    for num in array:\n    \
    \    sum += num\n    if sum % 2 == 0:\n        array.sort()\n    else:\n     \
    \   array.reverse()\n    return array\n\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6,\
    \ 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpn_lrqrgb.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmpn_lrqrgb.py\", line 41,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpn_lrqrgb.py\", line 34,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    length = len(array)\n    if length ==\
    \ 0:\n        return []\n    if length == 1:\n        return array\n    mid =\
    \ length // 2\n    left = sort_array(array[:mid])\n    right = sort_array(array[mid:])\n\
    \    if sum(left) + sum(right) % 2 == 1:\n        return left + right\n    else:\n\
    \        return right + left\n\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6,\
    \ 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_32x2_z6.py\", line\
    \ 47, in <module>\n    test_check()\n  File \"/tmp/tmp_32x2_z6.py\", line 45,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp_32x2_z6.py\", line 38,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_first_and_last_element = sum(array[0:-1])\n\
    \    if sum_of_first_and_last_element % 2 == 0:\n        array.sort()\n    else:\n\
    \        array.reverse()\n    return array\n\ndef check(candidate):\n    assert\
    \ candidate([]) == []\n    assert candidate([5]) == [5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n  \
    \  assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert\
    \ candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpem5a8eyl.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpem5a8eyl.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpem5a8eyl.py\", line 33,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_first_and_last_element = sum(array[0:-1])\n\
    \    if sum_of_first_and_last_element % 2 == 0:\n        array.sort()\n    else:\n\
    \        array.reverse()\n    return array\n\ndef check(candidate):\n    assert\
    \ candidate([]) == []\n    assert candidate([5]) == [5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n  \
    \  assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert\
    \ candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpem5a8eyl.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpem5a8eyl.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpem5a8eyl.py\", line 33,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort(reverse=True)\n    else:\n        array.sort()\n\
    \    return array\n\ndef check(candidate):\n    assert candidate([]) == []\n \
    \   assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8k4pj245.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp8k4pj245.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp8k4pj245.py\", line 33,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        sorted_array = sorted(array)\n    else:\n        sorted_array\
    \ = sorted(array, reverse=True)\n    return sorted_array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpiuaaim0o.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpiuaaim0o.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpiuaaim0o.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    array_copy = array.copy()\n    array_copy.sort()\n\
    \    return array_copy\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4_sc7vfv.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmp4_sc7vfv.py\", line 36,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp4_sc7vfv.py\", line 30,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    # write your code here\n    sum_array\
    \ = sum(array[0:-1])\n    if sum_array % 2 == 0:\n        array.sort()\n    else:\n\
    \        array.reverse()\n    return array\n\ndef check(candidate):\n    assert\
    \ candidate([]) == []\n    assert candidate([5]) == [5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n  \
    \  assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert\
    \ candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpeylt_roo.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmpeylt_roo.py\", line 40,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpeylt_roo.py\", line 34,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    array_copy = array.copy()\n    array_copy.sort()\n\
    \    return array_copy\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4_sc7vfv.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmp4_sc7vfv.py\", line 36,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp4_sc7vfv.py\", line 30,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_first_and_last_element = sum(array[0:-1])\
    \ + array[-1]\n    if sum_of_first_and_last_element % 2 == 0:\n        array.sort()\n\
    \    else:\n        array.reverse()\n    return array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcn4g51y5.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpcn4g51y5.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpcn4g51y5.py\", line 30,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpcn4g51y5.py\", line\
    \ 22, in sort_array\n    sum_of_first_and_last_element = sum(array[0:-1]) + array[-1]\n\
    IndexError: list index out of range\n"
  stdout: ''
  timestamp: 1659749412
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    array_copy = array.copy()\n    array_copy.sort()\n\
    \    return array_copy\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4_sc7vfv.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmp4_sc7vfv.py\", line 36,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp4_sc7vfv.py\", line 30,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
  timestamp: 1659749412

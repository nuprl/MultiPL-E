name: HumanEval_81_numerical_letter_grade
language: py
prompt: "from typing import List\n\ndef numerical_letter_grade(grades: List[float])\
  \ -> List[str]:\n    \"\"\"It is the last week of the semester and the teacher has\
  \ to give the grades\n    to students. The teacher has been making her own algorithm\
  \ for grading.\n    The only problem is, she has lost the code she used for grading.\n\
  \    She has given you a list of GPAs for some students and you have to write \n\
  \    a function that can output a list of letter grades using the following table:\n\
  \             GPA       |    Letter grade\n              4.0                A+\n\
  \            > 3.7                A \n            > 3.3                A- \n   \
  \         > 3.0                B+\n            > 2.7                B \n       \
  \     > 2.3                B-\n            > 2.0                C+\n           \
  \ > 1.7                C\n            > 1.3                C-\n            > 1.0\
  \                D+ \n            > 0.7                D \n            > 0.0   \
  \             D-\n              0.0                E\n    \n\n    Example:\n   \
  \ >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    ['A+', 'B', 'C-', 'C', 'A-']\n\
  \    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate([4.0, 3, 1.7, 2, 3.5]) == ['A+',\
  \ 'B', 'C-', 'C', 'A-']\n    assert candidate([1.2]) == ['D+']\n    assert candidate([0.5])\
  \ == ['D-']\n    assert candidate([0.0]) == ['E']\n    assert candidate([1.0, 0.3,\
  \ 1.5, 2.8, 3.3]) == ['D', 'D-', 'C-', 'B', 'B+']\n    assert candidate([0.0, 0.7])\
  \ == ['E', 'D-']\n\ndef test_check():\n    check(numerical_letter_grade)\n\ntest_check()\n"
completions: ["    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n\
    \    grades_sorted = sorted(grades)\n    \n    letter_grades = []\n    \n    for\
    \ grade in grades_sorted:\n        if grade >= 3.0:\n            letter_grades.append('A+')\n\
    \        elif grade >= 2.7:\n            letter_grades.append('B')\n        elif\
    \ grade >= 2.3:\n            letter_grades.append('B-')\n        elif grade >=\
    \ 1.7:\n            letter_grades.append('C')\n        elif grade >= 1.3:\n  \
    \          letter_grades.append('C-')\n        elif grade >= 1.0:\n          \
    \  letter_grades.append('D+')\n        elif grade >= 0.7:\n            letter_grades.append('D')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n\
    \            letter_grades.append('E')\n    \n    return letter_grades\n", " \
    \   \n    grades_sorted = sorted(grades)\n    \n    letter_grades = []\n    \n\
    \    for grade in grades_sorted:\n        if grade >= 3.0:\n            letter_grades.append('A+')\n\
    \        elif grade >= 2.0:\n            letter_grades.append('B+')\n        elif\
    \ grade >= 1.7:\n            letter_grades.append('C+')\n        elif grade >=\
    \ 1.3:\n            letter_grades.append('C-')\n        elif grade >= 1.0:\n \
    \           letter_grades.append('D+')\n        elif grade >= 0.7:\n         \
    \   letter_grades.append('D')\n        elif grade >= 0.0:\n            letter_grades.append('D-')\n\
    \        else:\n            letter_grades.append('E')\n    \n    return letter_grades\n\
    </cell>\n<cell>", "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", " \
    \   \n    grades.sort()\n    \n    grades_length = len(grades)\n    \n    if grades_length\
    \ == 0:\n        return []\n    \n    if grades_length == 1:\n        return [\"\
    A+\"]\n    \n    if grades_length == 2:\n        return [\"A\", \"A-\"]\n    \n\
    \    if grades_length == 3:\n        return [\"B+\", \"B\", \"B-\"]\n    \n  \
    \  if grades_length == 4:\n        return [\"C+\", \"C\", \"C-\"]\n    \n    if\
    \ grades_length == 5:\n        return [\"D+\", \"D\", \"D-\"]\n    \n    if grades_length\
    \ == 6:\n        return [\"E\"]\n    \n    if grades_length == 7:\n        return\
    \ [\"F\"]\n    \n    if grades_length == 8:\n        return [\"G\"]\n    \n  \
    \  if grades_length == 9:\n        return [\"H\"]\n    \n    if grades_length\
    \ == 10:\n        return [\"I\"]\n    \n    if grades_length == 11:\n        return\
    \ [\"J\"]\n    \n    if grades_length == 12:\n        return [\"K\"]\n    \n \
    \   if grades_length == 13:\n        return [\"L\"]\n    \n    if grades_length\
    \ == 14:\n        return [\"M\"]\n    \n    if grades_length == 15:\n        return\
    \ [\"N\"]\n    \n    if grades_length == 16:\n        return [\"O\"]\n    \n \
    \   if grades_length == 17:\n        return [\"P\"]\n    \n    if grades_length\
    \ == 18:\n        return [\"Q\"]\n    \n    if grades_length == 19:\n        return\
    \ [\"R\"]\n    \n    if grades_length == 20:\n        return [\"S\"]\n    \n \
    \   if grades_length == 21:\n        return [\"T\"]\n    \n    if grades_length\
    \ == 22:\n        return [\"U\"]\n    \n    if grades_length == 23:\n        return\
    \ [\"V\"]\n    \n    if grades_length == 24:\n        return [\"W\"]\n    \n \
    \   if grades_length == 25:\n        return [\"X\"]\n    \n    if grades_length\
    \ == 26:\n        return [\"Y\"]\n    \n    if grades_length == 27:\n        return\
    \ [\"Z\"]\n    \n    if grades_length == 28:\n        return [\"AA\"]\n    \n\
    \    if grades_length == 29:\n        return [\"AB\"]\n    \n    if grades_length\
    \ == 30:\n        return [\"AC\"]\n    \n    if grades_length == 31:\n       \
    \ return [\"AD\"]\n    \n    if grades_length == 32:\n        return [\"AE\"]\n\
    \    \n    if grades_length == 33:\n        return [\"AF\"]\n    \n    if ", " \
    \   \n    grades.sort()\n    \n    letter_grades = []\n    \n    for grade in\
    \ grades:\n        if grade >= 3.0:\n            letter_grades.append('A+')\n\
    \        elif grade >= 2.7:\n            letter_grades.append('B+')\n        elif\
    \ grade >= 2.3:\n            letter_grades.append('B-')\n        elif grade >=\
    \ 1.7:\n            letter_grades.append('C+')\n        elif grade >= 1.3:\n \
    \           letter_grades.append('C-')\n        elif grade >= 1.0:\n         \
    \   letter_grades.append('D+')\n        elif grade >= 0.7:\n            letter_grades.append('D')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n\
    \            letter_grades.append('E')\n    \n    return letter_grades\n</cell>\n\
    <cell>", "    \n    grades.sort()\n    \n    grades_length = len(grades)\n   \
    \ \n    if grades_length == 0:\n        return []\n    \n    if grades_length\
    \ == 1:\n        return [\"A+\"]\n    \n    if grades_length == 2:\n        if\
    \ grades[0] > grades[1]:\n            return [\"A+\"]\n        else:\n       \
    \     return [\"A\"]\n    \n    if grades_length == 3:\n        if grades[0] >\
    \ grades[1] and grades[0] > grades[2]:\n            return [\"A+\"]\n        elif\
    \ grades[0] > grades[1] and grades[0] < grades[2]:\n            return [\"A\"\
    ]\n        elif grades[0] < grades[1] and grades[0] > grades[2]:\n           \
    \ return [\"A-\"]\n        elif grades[0] < grades[1] and grades[0] < grades[2]:\n\
    \            return [\"B+\"]\n        elif grades[0] < grades[1] and grades[0]\
    \ > grades[2]:\n            return [\"B\"]\n        elif grades[0] > grades[1]\
    \ and grades[0] < grades[2]:\n            return [\"B-\"]\n        elif grades[0]\
    \ > grades[1] and grades[0] > grades[2]:\n            return [\"C+\"]\n      \
    \  elif grades[0] < grades[1] and grades[0] < grades[2]:\n            return [\"\
    C\"]\n        elif grades[0] < grades[1] and grades[0] > grades[2]:\n        \
    \    return [\"C-\"]\n        elif grades[0] > grades[1] and grades[0] > grades[2]:\n\
    \            return [\"D+\"]\n        elif grades[0] < grades[1] and grades[0]\
    \ < grades[2]:\n            return [\"D\"]\n        elif grades[0] < grades[1]\
    \ and grades[0] > grades[2]:\n            return [\"D-\"]\n        elif grades[0]\
    \ > grades[1] and grades[0] > grades[2]:\n            return [\"E\"]\n    \n \
    \   if grades_length == 4:\n        if grades[0] > grades[1] and grades[0] > grades[2]\
    \ and grades[0] > grades[3]:\n            return [\"A+\"]\n        elif grades[0]\
    \ > grades[1] and grades[0] < grades[2] and grades[0] > grades[3]:\n         \
    \   return [\"A\"]\n        elif grades[0] < grades[1] and grades[0] > grades[2]\
    \ and grades[0] > grades[3]:\n            return [\"A-\"]\n        elif grades[0]\
    \ < grades[1] and grades[0] < grades[2] and grades[0] > grades[3]:\n         \
    \   return [\"B+\"]\n        elif grades[0] < grades[1] and grades[0] < grades[2]\
    \ and grades[0] < grades[3]:\n            return [\"B\"]\n        elif grades[0]\
    \ < grades[1] and grades[0] > grades[2] and grades[0] < grades[3]:\n         \
    \   return [\"B-\"]\n        elif grades[0] > grades[1] and grades[0] > grades[2]\
    \ and grades[0]", "    \n    grades_sorted = sorted(grades)\n    \n    letter_grades\
    \ = []\n    \n    for grade in grades_sorted:\n        if grade > 3.0:\n     \
    \       letter_grades.append('A+')\n        elif grade > 2.7:\n            letter_grades.append('B')\n\
    \        elif grade > 2.3:\n            letter_grades.append('B-')\n        elif\
    \ grade > 1.7:\n            letter_grades.append('C')\n        elif grade > 1.3:\n\
    \            letter_grades.append('C-')\n        elif grade > 1.0:\n         \
    \   letter_grades.append('D+')\n        elif grade > 0.7:\n            letter_grades.append('D')\n\
    \        elif grade > 0.0:\n            letter_grades.append('D-')\n        else:\n\
    \            letter_grades.append('E')\n    \n    return letter_grades\n", " \
    \   \n    grades_sorted = sorted(grades)\n    \n    letter_grades = []\n    \n\
    \    for grade in grades_sorted:\n        if grade < 3.0:\n            letter_grades.append('A')\n\
    \        elif grade < 3.7:\n            letter_grades.append('A-')\n        elif\
    \ grade < 4.0:\n            letter_grades.append('B+')\n        elif grade < 4.7:\n\
    \            letter_grades.append('B')\n        elif grade < 5.0:\n          \
    \  letter_grades.append('B-')\n        elif grade < 5.7:\n            letter_grades.append('C+')\n\
    \        elif grade < 6.0:\n            letter_grades.append('C')\n        elif\
    \ grade < 6.7:\n            letter_grades.append('C-')\n        elif grade < 7.0:\n\
    \            letter_grades.append('D+')\n        elif grade < 7.7:\n         \
    \   letter_grades.append('D')\n        elif grade < 8.0:\n            letter_grades.append('D-')\n\
    \        elif grade < 8.7:\n            letter_grades.append('E')\n        else:\n\
    \            letter_grades.append('F')\n    \n    return letter_grades\n", " \
    \   \n    grades_sorted = sorted(grades)\n    \n    letter_grades = []\n    \n\
    \    for grade in grades_sorted:\n        if grade >= 3.0 and grade <= 3.7:\n\
    \            letter_grades.append('A+')\n        elif grade >= 3.7 and grade <=\
    \ 3.3:\n            letter_grades.append('A')\n        elif grade >= 3.3 and grade\
    \ <= 3.0:\n            letter_grades.append('A-')\n        elif grade >= 3.0 and\
    \ grade <= 2.7:\n            letter_grades.append('B+')\n        elif grade >=\
    \ 2.7 and grade <= 2.3:\n            letter_grades.append('B')\n        elif grade\
    \ >= 2.3 and grade <= 2.0:\n            letter_grades.append('B-')\n        elif\
    \ grade >= 2.0 and grade <= 1.7:\n            letter_grades.append('C+')\n   \
    \     elif grade >= 1.7 and grade <= 1.3:\n            letter_grades.append('C')\n\
    \        elif grade >= 1.3 and grade <= 1.0:\n            letter_grades.append('C-')\n\
    \        elif grade >= 1.0 and grade <= 0.7:\n            letter_grades.append('D+')\n\
    \        elif grade >= 0.7 and grade <= 0.0:\n            letter_grades.append('D')\n\
    \        elif grade <= 0.0:\n            letter_grades.append('D-')\n        else:\n\
    \            letter_grades.append('E')\n    \n    return letter_grades\n", " \
    \   \n    grades.sort()\n    grades_length = len(grades)\n    \n    if grades_length\
    \ == 0:\n        return []\n    \n    if grades_length == 1:\n        return ['A+']\n\
    \    \n    if grades_length == 2:\n        return ['A+', 'B']\n    \n    if grades_length\
    \ == 3:\n        return ['A+', 'B-', 'C']\n    \n    if grades_length == 4:\n\
    \        return ['A+', 'B-', 'C-', 'D']\n    \n    if grades_length == 5:\n  \
    \      return ['A+', 'B-', 'C-', 'D-', 'E']\n    \n    if grades_length == 6:\n\
    \        return ['A+', 'B-', 'C-', 'D-', 'E', 'F']\n    \n    if grades_length\
    \ == 7:\n        return ['A+', 'B-', 'C-', 'D-', 'E', 'F-']\n    \n    if grades_length\
    \ == 8:\n        return ['A+', 'B-', 'C-', 'D-', 'E', 'F-', 'G']\n    \n    if\
    \ grades_length == 9:\n        return ['A+', 'B-', 'C-', 'D-', 'E', 'F-', 'G-']\n\
    \    \n    if grades_length == 10:\n        return ['A+', 'B-', 'C-', 'D-', 'E',\
    \ 'F-', 'G-', 'A-']\n    \n    if grades_length == 11:\n        return ['A+',\
    \ 'B-', 'C-', 'D-', 'E', 'F-', 'G-', 'A-', 'B']\n    \n    if grades_length ==\
    \ 12:\n        return ['A+', 'B-', 'C-', 'D-', 'E', 'F-', 'G-', 'A-', 'B-']\n\
    \    \n    if grades_length == 13:\n        return ['A+', 'B-', 'C-', 'D-', 'E',\
    \ 'F-', 'G-', 'A-', 'B-', 'C']\n    \n    if grades_length == 14:\n        return\
    \ ['A+', 'B-', 'C-', 'D-', 'E', 'F-', 'G-', 'A-', 'B-', 'C-']\n    \n    if grades_length\
    \ == 15:\n        return ['A+', 'B-', 'C-', 'D-', 'E', 'F-', 'G-', 'A-', 'B-',\
    \ 'C-', 'D']\n    \n    if grades_length == 16:\n        return ['A+', 'B-', 'C-',\
    \ 'D-', 'E', 'F-', 'G-', 'A-', 'B-', 'C-', 'D-']\n    \n    if grades_length ==\
    \ 17:\n        return ['A+', 'B-', 'C-', 'D-', 'E', 'F-', 'G-', 'A-', 'B-', 'C-',\
    \ 'D-', 'E']\n    \n    if grades_length == 18:\n        return ['A+', 'B-', 'C-',\
    \ 'D-', 'E', 'F-', 'G-', 'A-', 'B-', 'C-', 'D-', 'E-']\n    \n    if grades_length\
    \ == 19:\n        return ['A+', 'B-', 'C-', 'D-', 'E', 'F-', 'G-', 'A-', 'B-',\
    \ 'C-', 'D-', 'E", "    \n    grades.sort()\n    \n    letter_grades = []\n  \
    \  \n    \n    for grade in grades:\n        if grade < 3.0:\n            letter_grades.append('A')\n\
    \        elif grade < 3.7:\n            letter_grades.append('A-')\n        elif\
    \ grade < 4.0:\n            letter_grades.append('B+')\n        elif grade < 4.7:\n\
    \            letter_grades.append('B')\n        elif grade < 5.0:\n          \
    \  letter_grades.append('B-')\n        elif grade < 5.7:\n            letter_grades.append('C+')\n\
    \        elif grade < 6.0:\n            letter_grades.append('C')\n        elif\
    \ grade < 6.7:\n            letter_grades.append('C-')\n        elif grade < 7.0:\n\
    \            letter_grades.append('D+')\n        elif grade < 7.7:\n         \
    \   letter_grades.append('D')\n        elif grade < 8.0:\n            letter_grades.append('D-')\n\
    \        elif grade < 8.7:\n            letter_grades.append('E')\n        else:\n\
    \            letter_grades.append('F')\n    \n    return letter_grades\n</cell>\n\
    <cell>", "    \n    grades.sort()\n    \n    letter_grades = []\n    \n    \n\
    \    for grade in grades:\n        if grade >= 3.0:\n            letter_grades.append('A+')\n\
    \        elif grade >= 2.7:\n            letter_grades.append('B')\n        elif\
    \ grade >= 2.3:\n            letter_grades.append('B-')\n        elif grade >=\
    \ 1.7:\n            letter_grades.append('C')\n        elif grade >= 1.3:\n  \
    \          letter_grades.append('C-')\n        elif grade >= 1.0:\n          \
    \  letter_grades.append('D+')\n        elif grade >= 0.7:\n            letter_grades.append('D')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n\
    \            letter_grades.append('E')\n    \n    return letter_grades\n</cell>\n\
    <cell>", "    \n    letter_grades = []\n    \n    for grade in grades:\n     \
    \   if grade >= 4.0:\n            letter_grades.append('A+')\n        elif grade\
    \ > 3.7:\n            letter_grades.append('A')\n        elif grade > 3.3:\n \
    \           letter_grades.append('A-')\n        elif grade > 3.0:\n          \
    \  letter_grades.append('B+')\n        elif grade > 2.7:\n            letter_grades.append('B')\n\
    \        elif grade > 2.3:\n            letter_grades.append('B-')\n        elif\
    \ grade > 2.0:\n            letter_grades.append('C+')\n        elif grade > 1.7:\n\
    \            letter_grades.append('C')\n        elif grade > 1.3:\n          \
    \  letter_grades.append('C-')\n        elif grade > 1.0:\n            letter_grades.append('D+')\n\
    \        elif grade > 0.7:\n            letter_grades.append('D')\n        elif\
    \ grade > 0.0:\n            letter_grades.append('D-')\n        else:\n      \
    \      letter_grades.append('E')\n            \n    return letter_grades\n", " \
    \   \n    grades.sort()\n    \n    grades_length = len(grades)\n    \n    letter_grades\
    \ = []\n    \n    if grades_length < 1:\n        return letter_grades\n    \n\
    \    if grades_length == 1:\n        letter_grades.append('A+')\n        return\
    \ letter_grades\n    \n    if grades_length == 2:\n        if grades[0] > grades[1]:\n\
    \            letter_grades.append('A')\n        else:\n            letter_grades.append('B')\n\
    \        return letter_grades\n    \n    if grades_length == 3:\n        if grades[0]\
    \ > grades[1] and grades[0] > grades[2]:\n            letter_grades.append('A')\n\
    \        elif grades[1] > grades[2]:\n            letter_grades.append('B')\n\
    \        else:\n            letter_grades.append('C')\n        return letter_grades\n\
    \    \n    if grades_length == 4:\n        if grades[0] > grades[1] and grades[0]\
    \ > grades[2] and grades[0] > grades[3]:\n            letter_grades.append('A')\n\
    \        elif grades[1] > grades[2] and grades[1] > grades[3]:\n            letter_grades.append('B')\n\
    \        elif grades[2] > grades[3]:\n            letter_grades.append('C')\n\
    \        else:\n            letter_grades.append('C')\n        return letter_grades\n\
    \    \n    if grades_length == 5:\n        if grades[0] > grades[1] and grades[0]\
    \ > grades[2] and grades[0] > grades[3] and grades[0] > grades[4]:\n         \
    \   letter_grades.append('A')\n        elif grades[1] > grades[2] and grades[1]\
    \ > grades[3] and grades[1] > grades[4]:\n            letter_grades.append('B')\n\
    \        elif grades[2] > grades[3] and grades[2] > grades[4]:\n            letter_grades.append('C')\n\
    \        elif grades[3] > grades[4]:\n            letter_grades.append('C')\n\
    \        else:\n            letter_grades.append('D')\n        return letter_grades\n\
    \    \n    if grades_length == 6:\n        if grades[0] > grades[1] and grades[0]\
    \ > grades[2] and grades[0] > grades[3] and grades[0] > grades[4] and grades[0]\
    \ > grades[5]:\n            letter_grades.append('A')\n        elif grades[1]\
    \ > grades[2] and grades[1] > grades[3] and grades[1] > grades[4] and grades[1]\
    \ > grades[5]:\n            letter_grades.append('B')\n        elif grades[2]\
    \ > grades[3] and grades[2] > grades[4] and grades[2] > grades[5]:\n         \
    \   letter_grades.append('C')\n        elif grades[3] > grades[4] and grades[3]\
    \ > grades[5]:\n            letter_grades.append('C')\n        elif ", "    \n\
    \    grades_sorted = sorted(grades)\n    \n    letter_grades = []\n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n\
    \    grades.sort()\n    \n    grades_length = len(grades)\n    \n    if grades_length\
    \ == 0:\n        return []\n    \n    if grades_length == 1:\n        return [\"\
    A+\"]\n    \n    if grades_length == 2:\n        if grades[0] > 3.7:\n       \
    \     return [\"A\"]\n        if grades[0] > 3.3:\n            return [\"A-\"\
    ]\n        if grades[0] > 2.7:\n            return [\"B\"]\n        if grades[0]\
    \ > 2.3:\n            return [\"B-\"]\n        if grades[0] > 1.7:\n         \
    \   return [\"C\"]\n        if grades[0] > 1.3:\n            return [\"C-\"]\n\
    \        if grades[0] > 1.0:\n            return [\"D+\"]\n        if grades[0]\
    \ > 0.7:\n            return [\"D\"]\n        if grades[0] > 0.0:\n          \
    \  return [\"D-\"]\n        if grades[0] == 0.0:\n            return [\"E\"]\n\
    \    \n    if grades_length == 3:\n        if grades[0] > 3.7:\n            if\
    \ grades[1] > 3.3:\n                return [\"A+\"]\n            if grades[1]\
    \ > 2.7:\n                return [\"A\"]\n            if grades[1] > 2.3:\n  \
    \              return [\"A-\"]\n            if grades[1] > 1.7:\n            \
    \    return [\"B\"]\n            if grades[1] > 1.3:\n                return [\"\
    B-\"]\n            if grades[1] > 1.0:\n                return [\"C\"]\n     \
    \       if grades[1] > 0.7:\n                return [\"C+\"]\n            if grades[1]\
    \ > 0.0:\n                return [\"C-\"]\n            if grades[1] == 0.0:\n\
    \                return [\"D+\"]\n            if grades[1] == 0.0:\n         \
    \       return [\"D\"]\n            if grades[1] == 0.0:\n                return\
    \ [\"E\"]\n        if grades[0] > 3.3:\n            if grades[1] > 2.7:\n    \
    \            return [\"A+\"]\n            if grades[1] > 2.3:\n              \
    \  return [\"A-\"]\n            if grades[1] > 1.7:\n                return [\"\
    B\"]\n            if grades[1] > 1.3:\n                return [\"B-\"]\n     \
    \       if grades[1] > 1.0:\n                return [\"C\"]\n            if grades[1]\
    \ > 0.7:\n                return [\"C+\"]\n            if grades[1] > 0.0:\n \
    \               return [\"C-\"]\n            if grades[1] == 0.0:\n          \
    \      return [\"D+\"]\n            if grades[1] == 0.0:\n                return\
    \ [\"D\"]\n            if grades[1] == 0.0:\n                return [\"E\"]\n\
    \        if grades[0] > 2.7:\n            if grades[1] > 2.3:\n              \
    \  return [\"A+\"]\n            if grades[1] > 1.7:\n                return [\"\
    B\"]\n            if grades[1] > 1.3:\n                return [\"B-\"]\n     \
    \       if grades[1] > 1.0:\n                return [\"C\"]\n            if grades[1]\
    \ > 0.7:\n                return [\"C+\"]\n            if grades[1]", "    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    letter_grades =\
    \ []\n    \n    for grade in grades:\n        if grade >= 3.0:\n            letter_grades.append('A+')\n\
    \        elif grade >= 2.7:\n            letter_grades.append('B')\n        elif\
    \ grade >= 2.3:\n            letter_grades.append('B-')\n        elif grade >=\
    \ 1.7:\n            letter_grades.append('C')\n        elif grade >= 1.3:\n  \
    \          letter_grades.append('C-')\n        elif grade >= 1.0:\n          \
    \  letter_grades.append('D+')\n        elif grade >= 0.7:\n            letter_grades.append('D')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n\
    \            letter_grades.append('E')\n    \n    return letter_grades\n</cell>\n\
    <cell>", "    \n    grades.sort()\n    \n    letter_grades = []\n    \n    for\
    \ grade in grades:\n        if grade >= 3.0:\n            letter_grades.append('A+')\n\
    \        elif grade >= 2.0:\n            letter_grades.append('B+')\n        elif\
    \ grade >= 1.7:\n            letter_grades.append('C+')\n        elif grade >=\
    \ 1.3:\n            letter_grades.append('C-')\n        elif grade >= 1.0:\n \
    \           letter_grades.append('D+')\n        elif grade >= 0.7:\n         \
    \   letter_grades.append('D')\n        elif grade >= 0.0:\n            letter_grades.append('D-')\n\
    \        else:\n            letter_grades.append('E')\n            \n    return\
    \ letter_grades\n", "    \n    grades.sort()\n    \n    grades_length = len(grades)\n\
    \    \n    if grades_length == 0:\n        return []\n    \n    if grades_length\
    \ == 1:\n        return ['A+']\n    \n    if grades_length == 2:\n        return\
    \ ['A+', 'B']\n    \n    if grades_length == 3:\n        return ['A+', 'B', 'C']\n\
    \    \n    if grades_length == 4:\n        return ['A+', 'B', 'C-']\n    \n  \
    \  if grades_length == 5:\n        return ['A+', 'B', 'C-', 'C']\n    \n    if\
    \ grades_length == 6:\n        return ['A+', 'B', 'C-', 'C-']\n    \n    if grades_length\
    \ == 7:\n        return ['A+', 'B', 'C-', 'C-', 'C']\n    \n    if grades_length\
    \ == 8:\n        return ['A+', 'B', 'C-', 'C-', 'C-']\n    \n    if grades_length\
    \ == 9:\n        return ['A+', 'B', 'C-', 'C-', 'C-', 'C']\n    \n    if grades_length\
    \ == 10:\n        return ['A+', 'B', 'C-', 'C-', 'C-', 'C-']\n    \n    if grades_length\
    \ == 11:\n        return ['A+', 'B', 'C-', 'C-', 'C-', 'C-', 'C']\n    \n    if\
    \ grades_length == 12:\n        return ['A+', 'B', 'C-', 'C-', 'C-', 'C-', 'C-',\
    \ 'C']\n    \n    if grades_length == 13:\n        return ['A+', 'B', 'C-', 'C-',\
    \ 'C-', 'C-', 'C-', 'C-']\n    \n    if grades_length == 14:\n        return ['A+',\
    \ 'B', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C']\n    \n    if grades_length ==\
    \ 15:\n        return ['A+', 'B', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-']\n\
    \    \n    if grades_length == 16:\n        return ['A+', 'B', 'C-', 'C-', 'C-',\
    \ 'C-', 'C-', 'C-', 'C-', 'C-']\n    \n    if grades_length == 17:\n        return\
    \ ['A+', 'B', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C']\n    \n   \
    \ if grades_length == 18:\n        return ['A+', 'B', 'C-', 'C-', 'C-', 'C-',\
    \ 'C-', 'C-', 'C-', 'C-', 'C-']\n    \n    if grades_length == 19:\n        return\
    \ ['A+', 'B', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-']\n    \n  \
    \  if grades_length == 20:\n        return ['A+', 'B', 'C-', 'C-', 'C-', 'C-',\
    \ 'C-', 'C-', 'C-', 'C-', 'C-', 'C']\n    \n    if grades_length == 2", "    \n\
    \    letter_grades = []\n    \n    for grade in grades:\n        if grade >= 3.0:\n\
    \            letter_grades.append('A+')\n        elif grade >= 2.7:\n        \
    \    letter_grades.append('B+')\n        elif grade >= 2.3:\n            letter_grades.append('B-')\n\
    \        elif grade >= 1.7:\n            letter_grades.append('C+')\n        elif\
    \ grade >= 1.3:\n            letter_grades.append('C-')\n        elif grade >=\
    \ 1.0:\n            letter_grades.append('D+')\n        elif grade >= 0.7:\n \
    \           letter_grades.append('D')\n        elif grade >= 0.0:\n          \
    \  letter_grades.append('D-')\n        else:\n            letter_grades.append('E')\n\
    \    \n    return letter_grades\n", "    \n    grades.sort()\n    \n    grades_length\
    \ = len(grades)\n    \n    if grades_length == 0:\n        return []\n    \n \
    \   if grades_length == 1:\n        return ['A+']\n    \n    if grades_length\
    \ == 2:\n        return ['A+', 'B']\n    \n    if grades_length == 3:\n      \
    \  return ['A+', 'B', 'C']\n    \n    if grades_length == 4:\n        return ['A+',\
    \ 'B', 'C-']\n    \n    if grades_length == 5:\n        return ['A+', 'B', 'C-',\
    \ 'C']\n    \n    if grades_length == 6:\n        return ['A+', 'B', 'C-', 'C-']\n\
    \    \n    if grades_length == 7:\n        return ['A+', 'B', 'C-', 'C-', 'C']\n\
    \    \n    if grades_length == 8:\n        return ['A+', 'B', 'C-', 'C-', 'C-']\n\
    \    \n    if grades_length == 9:\n        return ['A+', 'B', 'C-', 'C-', 'C-',\
    \ 'C']\n    \n    if grades_length == 10:\n        return ['A+', 'B', 'C-', 'C-',\
    \ 'C-', 'C-']\n    \n    if grades_length == 11:\n        return ['A+', 'B', 'C-',\
    \ 'C-', 'C-', 'C-', 'C']\n    \n    if grades_length == 12:\n        return ['A+',\
    \ 'B', 'C-', 'C-', 'C-', 'C-', 'C-']\n    \n    if grades_length == 13:\n    \
    \    return ['A+', 'B', 'C-', 'C-', 'C-', 'C-', 'C-', 'C']\n    \n    if grades_length\
    \ == 14:\n        return ['A+', 'B', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-']\n   \
    \ \n    if grades_length == 15:\n        return ['A+', 'B', 'C-', 'C-', 'C-',\
    \ 'C-', 'C-', 'C-', 'C']\n    \n    if grades_length == 16:\n        return ['A+',\
    \ 'B', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C']\n    \n    if grades_length\
    \ == 17:\n        return ['A+', 'B', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-',\
    \ 'C-', 'C']\n    \n    if grades_length == 18:\n        return ['A+', 'B', 'C-',\
    \ 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C']\n    \n    if grades_length\
    \ == 19:\n        return ['A+', 'B', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-',\
    \ 'C-', 'C-', 'C']\n    \n    if grades_length == 20:\n        return ['A+', 'B',\
    \ 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C']\n    \n   \
    \ if grades_length == 21:", "    \n    grades_sorted = sorted(grades)\n    \n\
    \    letter_grades = []\n    \n    for grade in grades_sorted:\n        if grade\
    \ > 3.7:\n            letter_grades.append('A+')\n        elif grade > 3.3:\n\
    \            letter_grades.append('A-')\n        elif grade > 2.7:\n         \
    \   letter_grades.append('B+')\n        elif grade > 2.3:\n            letter_grades.append('B-')\n\
    \        elif grade > 1.7:\n            letter_grades.append('C+')\n        elif\
    \ grade > 1.3:\n            letter_grades.append('C')\n        elif grade > 1.0:\n\
    \            letter_grades.append('D+')\n        elif grade > 0.7:\n         \
    \   letter_grades.append('D')\n        elif grade > 0.0:\n            letter_grades.append('D-')\n\
    \        else:\n            letter_grades.append('E')\n    \n    return letter_grades\n\
    \    ", "    \n    grades_sorted = sorted(grades)\n    grades_sorted.reverse()\n\
    \    grades_sorted = grades_sorted + [0]\n    grades_sorted = grades_sorted +\
    \ [0]\n    grades_sorted = grades_sorted + [0]\n    grades_sorted = grades_sorted\
    \ + [0]\n    grades_sorted = grades_sorted + [0]\n    grades_sorted = grades_sorted\
    \ + [0]\n    grades_sorted = grades_sorted + [0]\n    grades_sorted = grades_sorted\
    \ + [0]\n    grades_sorted = grades_sorted + [0]\n    grades_sorted = grades_sorted\
    \ + [0]\n    grades_sorted = grades_sorted + [0]\n    grades_sorted = grades_sorted\
    \ + [0]\n    grades_sorted = grades_sorted + [0]\n    grades_sorted = grades_sorted\
    \ + [0]\n    grades_sorted = grades_sorted + [0]\n    grades_sorted = grades_sorted\
    \ + [0]\n    grades_sorted = grades_sorted + [0]\n    grades_sorted = grades_sorted\
    \ + [0]\n    grades_sorted = grades_sorted + [0]\n    grades_sorted = grades_sorted\
    \ + [0]\n    grades_sorted = grades_sorted + [0]\n    grades_sorted = grades_sorted\
    \ + [0]\n    grades_sorted = grades_sorted + [0]\n    grades_sorted = grades_sorted\
    \ + [0]\n    grades_sorted = grades_sorted + [0]\n    grades_sorted = grades_sorted\
    \ + [0]\n    grades_sorted = grades_sorted + [0]\n    grades_sorted = grades_sorted\
    \ + [0]\n    grades_sorted = grades_sorted + [0]\n    grades_sorted = grades_sorted\
    \ + [0]\n    grades_sorted = grades_sorted + [0]\n    grades_sorted = grades_sorted\
    \ + [0]\n    grades_sorted = grades_sorted + [0]\n    grades_sorted = grades_sorted\
    \ + [0]\n    grades_sorted = grades_sorted + [0]\n    grades_sorted = grades_sorted\
    \ + [0]\n    grades_sorted = grades_sorted + [0]\n    grades_sorted = grades_sorted\
    \ + [0]\n    grades_sorted = grades_sorted + [0]\n    grades_sorted = grades_sorted\
    \ + [0]\n    grades_sorted = grades_sorted + [0]\n    grades_sorted = grades_sorted\
    \ + [0]\n    grades_sorted = grades_sorted + [0]\n    grades_sorted = grades_sorted\
    \ + [0]\n    grades_sorted = grades_sorted + ", "    \n    grades_sorted = sorted(grades)\n\
    \    \n    letter_grades = []\n    \n    for grade in grades_sorted:\n       \
    \ if grade >= 3.0:\n            letter_grades.append('A+')\n        elif grade\
    \ >= 2.0:\n            letter_grades.append('B+')\n        elif grade >= 1.7:\n\
    \            letter_grades.append('C+')\n        elif grade >= 1.3:\n        \
    \    letter_grades.append('C-')\n        elif grade >= 1.0:\n            letter_grades.append('D+')\n\
    \        elif grade >= 0.7:\n            letter_grades.append('D')\n        elif\
    \ grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n     \
    \       letter_grades.append('E')\n    \n    return letter_grades\n", "    \n\
    \    grades_sorted = sorted(grades)\n    \n    letter_grades = []\n    \n    for\
    \ grade in grades_sorted:\n        if grade < 3.0:\n            letter_grades.append('A+')\n\
    \        elif grade < 3.7:\n            letter_grades.append('A')\n        elif\
    \ grade < 3.3:\n            letter_grades.append('A-')\n        elif grade < 3.0:\n\
    \            letter_grades.append('B+')\n        elif grade < 2.7:\n         \
    \   letter_grades.append('B')\n        elif grade < 2.3:\n            letter_grades.append('B-')\n\
    \        elif grade < 2.0:\n            letter_grades.append('C+')\n        elif\
    \ grade < 1.7:\n            letter_grades.append('C')\n        elif grade < 1.3:\n\
    \            letter_grades.append('C-')\n        elif grade < 1.0:\n         \
    \   letter_grades.append('D+')\n        elif grade < 0.7:\n            letter_grades.append('D')\n\
    \        elif grade < 0.0:\n            letter_grades.append('D-')\n        else:\n\
    \            letter_grades.append('E')\n    \n    return letter_grades\n", " \
    \   \n    grades_sorted = sorted(grades)\n    grades_sorted.reverse()\n    \n\
    \    letter_grades = []\n    \n    for grade in grades_sorted:\n        if grade\
    \ < 3.0:\n            letter_grades.append('A')\n        elif grade < 3.7:\n \
    \           letter_grades.append('A-')\n        elif grade < 4.0:\n          \
    \  letter_grades.append('B+')\n        elif grade < 4.7:\n            letter_grades.append('B')\n\
    \        elif grade < 5.0:\n            letter_grades.append('B-')\n        elif\
    \ grade < 5.7:\n            letter_grades.append('C+')\n        elif grade < 6.0:\n\
    \            letter_grades.append('C')\n        elif grade < 6.7:\n          \
    \  letter_grades.append('C-')\n        elif grade < 7.0:\n            letter_grades.append('D+')\n\
    \        elif grade < 7.7:\n            letter_grades.append('D')\n        elif\
    \ grade < 8.0:\n            letter_grades.append('D-')\n        elif grade < 9.0:\n\
    \            letter_grades.append('E')\n        else:\n            letter_grades.append('F')\n\
    \    \n    return letter_grades\n</cell>\n<cell>", "    \n    letter_grades =\
    \ []\n    \n    for grade in grades:\n        if grade >= 3.0:\n            letter_grades.append('A+')\n\
    \        elif grade >= 2.7:\n            letter_grades.append('B')\n        elif\
    \ grade >= 2.3:\n            letter_grades.append('B-')\n        elif grade >=\
    \ 1.7:\n            letter_grades.append('C')\n        elif grade >= 1.3:\n  \
    \          letter_grades.append('C-')\n        elif grade >= 1.0:\n          \
    \  letter_grades.append('D+')\n        elif grade >= 0.7:\n            letter_grades.append('D')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n\
    \            letter_grades.append('E')\n    \n    return letter_grades\n", " \
    \   \n    letter_grades = []\n    for grade in grades:\n        if grade >= 3.0:\n\
    \            letter_grades.append('A+')\n        elif grade >= 2.7:\n        \
    \    letter_grades.append('B+')\n        elif grade >= 2.3:\n            letter_grades.append('B-')\n\
    \        elif grade >= 1.7:\n            letter_grades.append('C+')\n        elif\
    \ grade >= 1.3:\n            letter_grades.append('C-')\n        elif grade >=\
    \ 1.0:\n            letter_grades.append('D+')\n        elif grade >= 0.7:\n \
    \           letter_grades.append('D')\n        elif grade >= 0.0:\n          \
    \  letter_grades.append('D-')\n        else:\n            letter_grades.append('E')\n\
    \    return letter_grades\n", "    \n    grades_sorted = sorted(grades)\n    \n\
    \    letter_grades = []\n    \n    \n    for grade in grades_sorted:\n       \
    \ if grade >= 3.0:\n            letter_grades.append('A+')\n        elif grade\
    \ >= 2.7:\n            letter_grades.append('B')\n        elif grade >= 2.3:\n\
    \            letter_grades.append('B-')\n        elif grade >= 1.7:\n        \
    \    letter_grades.append('C')\n        elif grade >= 1.3:\n            letter_grades.append('C-')\n\
    \        elif grade >= 1.0:\n            letter_grades.append('D+')\n        elif\
    \ grade >= 0.7:\n            letter_grades.append('D')\n        elif grade >=\
    \ 0.0:\n            letter_grades.append('D-')\n        else:\n            letter_grades.append('E')\n\
    \            \n    return letter_grades\n</cell>\n<cell>", "    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n", "    \n    grades.sort()\n    \n    letter_grades\
    \ = []\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    ", "    \n    grades_sorted = sorted(grades)\n  \
    \  \n    grades_sorted_reverse = sorted(grades_sorted, reverse=True)\n    \n \
    \   grades_sorted_reverse.reverse()\n    \n    grades_sorted_reverse.insert(0,\
    \ 0.0)\n    \n    grades_sorted_reverse.insert(0, 0.0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0.0)\n    \n    grades_sorted_reverse.insert(0, 0.0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0.0)\n    \n    grades_sorted_reverse.insert(0, 0.0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0.0)\n    \n    grades_sorted_reverse.insert(0, 0.0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0.0)\n    \n    grades_sorted_reverse.insert(0, 0.0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0.0)\n    \n    grades_sorted_reverse.insert(0, 0.0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0.0)\n    \n    grades_sorted_reverse.insert(0, 0.0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0.0)\n    \n    grades_sorted_reverse.insert(0, 0.0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0.0)\n    \n    grades_sorted_reverse.insert(0, 0.0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0.0)\n    \n    grades_sorted_reverse.insert(0, 0.0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0.0)\n    \n    grades_sorted_reverse.insert(0, 0.0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0.0)\n    \n    grades_sorted_reverse.insert(0, 0.0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0.0)\n    \n    grades_sorted_reverse.insert(0, 0.0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0.0)\n    \n    grades_sorted_reverse.insert(0, 0.0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0.0)\n    \n    grades_sorted_reverse.insert(0, 0.0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0.0)\n    \n    grades_sorted_reverse.insert(0, 0.0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0.0)\n    \n    grades_sorted_reverse.insert(0, 0.0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0.0)\n    \n    grades_sorted_reverse.insert(0, 0.0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0.0)\n    \n    grades_sorted_reverse.insert(0, 0.0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0.0)\n    \n    grades_sorted_reverse.insert(0, 0.0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0.0)\n    \n    grades_sorted_reverse.insert(0, 0.0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0.0)\n    \n    ", "    \n    grades_sorted = sorted(grades)\n    \n    letter_grades\
    \ = []\n    \n    for grade in grades_sorted:\n        if grade >= 3.0:\n    \
    \        letter_grades.append('A+')\n        elif grade >= 2.7:\n            letter_grades.append('B')\n\
    \        elif grade >= 2.3:\n            letter_grades.append('B-')\n        elif\
    \ grade >= 1.7:\n            letter_grades.append('C')\n        elif grade >=\
    \ 1.3:\n            letter_grades.append('C-')\n        elif grade >= 1.0:\n \
    \           letter_grades.append('D+')\n        elif grade >= 0.7:\n         \
    \   letter_grades.append('D')\n        elif grade >= 0.0:\n            letter_grades.append('D-')\n\
    \        else:\n            letter_grades.append('E')\n    \n    return letter_grades\n\
    </cell>\n<cell>", "    \n    grades_sorted = sorted(grades)\n    \n    letter_grades\
    \ = []\n    \n    for grade in grades_sorted:\n        if grade >= 3.0:\n    \
    \        letter_grades.append('A+')\n        elif grade >= 2.7:\n            letter_grades.append('B')\n\
    \        elif grade >= 2.3:\n            letter_grades.append('B-')\n        elif\
    \ grade >= 1.7:\n            letter_grades.append('C')\n        elif grade >=\
    \ 1.3:\n            letter_grades.append('C-')\n        elif grade >= 1.0:\n \
    \           letter_grades.append('D+')\n        elif grade >= 0.7:\n         \
    \   letter_grades.append('D')\n        elif grade >= 0.0:\n            letter_grades.append('D-')\n\
    \        else:\n            letter_grades.append('E')\n            \n    return\
    \ letter_grades\n", "    \n    grades.sort()\n    \n    grades_len = len(grades)\n\
    \    \n    if grades_len == 0:\n        return []\n    \n    if grades_len ==\
    \ 1:\n        return ['A+']\n    \n    if grades_len == 2:\n        return ['A+',\
    \ 'B']\n    \n    if grades_len == 3:\n        return ['A+', 'B', 'C']\n    \n\
    \    if grades_len == 4:\n        return ['A+', 'B', 'C-']\n    \n    if grades_len\
    \ == 5:\n        return ['A+', 'B', 'C-', 'C']\n    \n    if grades_len == 6:\n\
    \        return ['A+', 'B', 'C-', 'C-']\n    \n    if grades_len == 7:\n     \
    \   return ['A+', 'B', 'C-', 'C-', 'C']\n    \n    if grades_len == 8:\n     \
    \   return ['A+', 'B', 'C-', 'C-', 'C-']\n    \n    if grades_len == 9:\n    \
    \    return ['A+', 'B', 'C-', 'C-', 'C-', 'C']\n    \n    if grades_len == 10:\n\
    \        return ['A+', 'B', 'C-', 'C-', 'C-', 'C-']\n    \n    if grades_len ==\
    \ 11:\n        return ['A+', 'B', 'C-', 'C-', 'C-', 'C-', 'C']\n    \n    if grades_len\
    \ == 12:\n        return ['A+', 'B', 'C-', 'C-', 'C-', 'C-', 'C-', 'C']\n    \n\
    \    if grades_len == 13:\n        return ['A+', 'B', 'C-', 'C-', 'C-', 'C-',\
    \ 'C-', 'C-']\n    \n    if grades_len == 14:\n        return ['A+', 'B', 'C-',\
    \ 'C-', 'C-', 'C-', 'C-', 'C-', 'C']\n    \n    if grades_len == 15:\n       \
    \ return ['A+', 'B', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-']\n    \n    if grades_len\
    \ == 16:\n        return ['A+', 'B', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-',\
    \ 'C-']\n    \n    if grades_len == 17:\n        return ['A+', 'B', 'C-', 'C-',\
    \ 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C']\n    \n    if grades_len == 18:\n \
    \       return ['A+', 'B', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-']\n\
    \    \n    if grades_len == 19:\n        return ['A+', 'B', 'C-', 'C-', 'C-',\
    \ 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C']\n    \n    if grades_len == 20:\n \
    \       return ['A+', 'B', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-',\
    \ 'C-', 'C']\n    \n    if grade", "    \n    letter_grades = []\n    \n    for\
    \ grade in grades:\n        if grade >= 3.0:\n            letter_grades.append('A+')\n\
    \        elif grade >= 2.7:\n            letter_grades.append('B+')\n        elif\
    \ grade >= 2.3:\n            letter_grades.append('B-')\n        elif grade >=\
    \ 1.7:\n            letter_grades.append('C+')\n        elif grade >= 1.3:\n \
    \           letter_grades.append('C-')\n        elif grade >= 1.0:\n         \
    \   letter_grades.append('D+')\n        elif grade >= 0.7:\n            letter_grades.append('D')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n\
    \            letter_grades.append('E')\n    \n    return letter_grades\n", " \
    \   \n    grades_sorted = sorted(grades)\n    \n    letter_grades = []\n    \n\
    \    for grade in grades_sorted:\n        if grade >= 3.0:\n            letter_grades.append('A+')\n\
    \        elif grade >= 2.7:\n            letter_grades.append('B')\n        elif\
    \ grade >= 2.3:\n            letter_grades.append('B-')\n        elif grade >=\
    \ 1.7:\n            letter_grades.append('C')\n        elif grade >= 1.3:\n  \
    \          letter_grades.append('C-')\n        elif grade >= 1.0:\n          \
    \  letter_grades.append('D+')\n        elif grade >= 0.7:\n            letter_grades.append('D')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n\
    \            letter_grades.append('E')\n            \n    return letter_grades\n\
    </cell>\n<cell>", "    \n    grades_sorted = sorted(grades)\n    \n    letter_grades\
    \ = []\n    \n    for grade in grades_sorted:\n        if grade < 3.0:\n     \
    \       letter_grades.append('A+')\n        elif grade < 3.7:\n            letter_grades.append('A')\n\
    \        elif grade < 3.3:\n            letter_grades.append('A-')\n        elif\
    \ grade < 3.0:\n            letter_grades.append('B+')\n        elif grade < 2.7:\n\
    \            letter_grades.append('B')\n        elif grade < 2.3:\n          \
    \  letter_grades.append('B-')\n        elif grade < 2.0:\n            letter_grades.append('C+')\n\
    \        elif grade < 1.7:\n            letter_grades.append('C')\n        elif\
    \ grade < 1.3:\n            letter_grades.append('C-')\n        elif grade < 1.0:\n\
    \            letter_grades.append('D+')\n        elif grade < 0.7:\n         \
    \   letter_grades.append('D')\n        elif grade < 0.0:\n            letter_grades.append('D-')\n\
    \        else:\n            letter_grades.append('E')\n    \n    return letter_grades\n",
  "    \n    grades_sorted = sorted(grades)\n    grades_sorted.reverse()\n    \n \
    \   grades_sorted_length = len(grades_sorted)\n    \n    grades_sorted_index =\
    \ 0\n    \n    grades_sorted_index_list = []\n    \n    while grades_sorted_index\
    \ < grades_sorted_length:\n        grades_sorted_index_list.append(grades_sorted_index)\n\
    \        grades_sorted_index += 1\n    \n    grades_sorted_index_list.reverse()\n\
    \    \n    grades_sorted_index_list_length = len(grades_sorted_index_list)\n \
    \   \n    grades_sorted_index_list_index = 0\n    \n    grades_sorted_index_list_index_list\
    \ = []\n    \n    while grades_sorted_index_list_index < grades_sorted_index_list_length:\n\
    \        grades_sorted_index_list_index_list.append(grades_sorted_index_list_index)\n\
    \        grades_sorted_index_list_index += 1\n    \n    grades_sorted_index_list_index_list.reverse()\n\
    \    \n    grades_sorted_index_list_index_list_length = len(grades_sorted_index_list_index_list)\n\
    \    \n    grades_sorted_index_list_index_list_index = 0\n    \n    grades_sorted_index_list_index_list_index_list\
    \ = []\n    \n    while grades_sorted_index_list_index_list_index < grades_sorted_index_list_index_list_length:\n\
    \        grades_sorted_index_list_index_list_index_list.append(grades_sorted_index_list_index_list_index)\n\
    \        grades_sorted_index_list_index_list_index += 1\n    \n    grades_sorted_index_list_index_list_index_list.reverse()\n\
    \    \n    grades_sorted_index_list_index_list_index_list_length = len(grades_sorted_index_list_index_list_index_list)\n\
    \    \n    grades_sorted_index_list_index_list_index_list_index_list.reverse()\n\
    \    \n    grades_sorted_index_list_index_list_index_list_index_list_length =\
    \ len(grades_sorted_index_list_index_list_index_list_index_list)\n    \n    grades_sorted_index_list_index_list_index_list_index_list_index_list.reverse()\n\
    \    \n    grades_sorted_index_list_index_list_index_list_index_list_index_list_length\
    \ = len(grades_sorted_index_list_index_list_index_list_index_list_index_list)\n\
    \    \n    grades_sorted_index_list_index_list_index_list_index_list_index_list_index_list.reverse()\n\
    \    \n    grades_sorted_index_list_index_list_index_list_index_list_index_list_index_list_length\
    \ = len(grades_sorted_index_list_index_list_index_list_index_list_index_list_index_list)\n\
    \    \n    grades_sorted_index_list_index_list_index_list_index_list_index_list_index_list_index_list_index_list_length\
    \ = len(grades_sorted_index_list_index_list_index_list_index_list_index_list_index_list_index_list_index_list_index_list_index_list_index_list_index_",
  "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    grades_sorted\
    \ = sorted(grades)\n    \n    letter_grades = []\n    \n    for grade in grades_sorted:\n\
    \        if grade >= 3.0:\n            letter_grades.append('A+')\n        elif\
    \ grade >= 2.7:\n            letter_grades.append('B')\n        elif grade >=\
    \ 2.3:\n            letter_grades.append('B-')\n        elif grade >= 1.7:\n \
    \           letter_grades.append('C')\n        elif grade >= 1.3:\n          \
    \  letter_grades.append('C-')\n        elif grade >= 1.0:\n            letter_grades.append('D+')\n\
    \        elif grade >= 0.7:\n            letter_grades.append('D')\n        elif\
    \ grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n     \
    \       letter_grades.append('E')\n    \n    return letter_grades\n", "    \n\
    \    grades.sort()\n    \n    letter_grades = []\n    \n    grade = grades[-1]\n\
    \    \n    if grade >= 4.0:\n        letter_grades.append('A+')\n    elif grade\
    \ >= 3.7:\n        letter_grades.append('A')\n    elif grade >= 3.3:\n       \
    \ letter_grades.append('A-')\n    elif grade >= 3.0:\n        letter_grades.append('B+')\n\
    \    elif grade >= 2.7:\n        letter_grades.append('B')\n    elif grade >=\
    \ 2.3:\n        letter_grades.append('B-')\n    elif grade >= 2.0:\n        letter_grades.append('C+')\n\
    \    elif grade >= 1.7:\n        letter_grades.append('C')\n    elif grade >=\
    \ 1.3:\n        letter_grades.append('C-')\n    elif grade >= 1.0:\n        letter_grades.append('D+')\n\
    \    elif grade >= 0.7:\n        letter_grades.append('D')\n    elif grade >=\
    \ 0.0:\n        letter_grades.append('D-')\n    else:\n        letter_grades.append('E')\n\
    \    \n    return letter_grades\n", "    \n    grades_sorted = sorted(grades)\n\
    \    \n    letter_grades = []\n    \n    for grade in grades_sorted:\n       \
    \ if grade >= 3.0:\n            letter_grades.append('A+')\n        elif grade\
    \ >= 2.0:\n            letter_grades.append('B+')\n        elif grade >= 1.7:\n\
    \            letter_grades.append('C+')\n        elif grade >= 1.3:\n        \
    \    letter_grades.append('C-')\n        elif grade >= 1.0:\n            letter_grades.append('D+')\n\
    \        elif grade >= 0.7:\n            letter_grades.append('D')\n        elif\
    \ grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n     \
    \       letter_grades.append('E')\n    \n    return letter_grades\n</cell>\n<cell>",
  "    \n    grades_sorted = sorted(grades)\n    \n    grades_sorted.reverse()\n \
    \   \n    grades_sorted = grades_sorted + [grades_sorted[0]]\n    \n    grades_sorted\
    \ = grades_sorted + [grades_sorted[-1]]\n    \n    grades_sorted = grades_sorted\
    \ + [grades_sorted[0]]\n    \n    grades_sorted = grades_sorted + [grades_sorted[-1]]\n\
    \    \n    grades_sorted = grades_sorted + [grades_sorted[0]]\n    \n    grades_sorted\
    \ = grades_sorted + [grades_sorted[-1]]\n    \n    grades_sorted = grades_sorted\
    \ + [grades_sorted[0]]\n    \n    grades_sorted = grades_sorted + [grades_sorted[-1]]\n\
    \    \n    grades_sorted = grades_sorted + [grades_sorted[0]]\n    \n    grades_sorted\
    \ = grades_sorted + [grades_sorted[-1]]\n    \n    grades_sorted = grades_sorted\
    \ + [grades_sorted[0]]\n    \n    grades_sorted = grades_sorted + [grades_sorted[-1]]\n\
    \    \n    grades_sorted = grades_sorted + [grades_sorted[0]]\n    \n    grades_sorted\
    \ = grades_sorted + [grades_sorted[-1]]\n    \n    grades_sorted = grades_sorted\
    \ + [grades_sorted[0]]\n    \n    grades_sorted = grades_sorted + [grades_sorted[-1]]\n\
    \    \n    grades_sorted = grades_sorted + [grades_sorted[0]]\n    \n    grades_sorted\
    \ = grades_sorted + [grades_sorted[-1]]\n    \n    grades_sorted = grades_sorted\
    \ + [grades_sorted[0]]\n    \n    grades_sorted = grades_sorted + [grades_sorted[-1]]\n\
    \    \n    grades_sorted = grades_sorted + [grades_sorted[0]]\n    \n    grades_sorted\
    \ = grades_sorted + [grades_sorted[-1]]\n    \n    grades_sorted = grades_sorted\
    \ + [grades_sorted[0]]\n    \n    grades_sorted = grades_sorted + [grades_sorted[-1]]\n\
    \    \n    grades_sorted = grades_sorted + [grades_sorted[0]]\n    \n    grades_sorted\
    \ = grades_sorted + [grades_sorted[-1]]\n    \n    grades_sorted = grades_sorted\
    \ + [grades_sorted[0]]\n    \n    grades_sorted = grades_sorted + [grades_sorted[-1]]\n\
    \    ", "    \n    grades_sorted = sorted(grades)\n    \n    grades_sorted_length\
    \ = len(grades_sorted)\n    \n    if grades_sorted_length == 0:\n        return\
    \ []\n    \n    letter_grades = []\n    \n    grades_sorted_index = 0\n    \n\
    \    while grades_sorted_index < grades_sorted_length:\n        \n        grade\
    \ = grades_sorted[grades_sorted_index]\n        \n        if grade > 3.7:\n  \
    \          letter_grades.append('A+')\n            grades_sorted_index += 1\n\
    \            \n        elif grade > 3.3:\n            letter_grades.append('A-')\n\
    \            grades_sorted_index += 1\n            \n        elif grade > 3.0:\n\
    \            letter_grades.append('B+')\n            grades_sorted_index += 1\n\
    \            \n        elif grade > 2.7:\n            letter_grades.append('B')\n\
    \            grades_sorted_index += 1\n            \n        elif grade > 2.3:\n\
    \            letter_grades.append('B-')\n            grades_sorted_index += 1\n\
    \            \n        elif grade > 2.0:\n            letter_grades.append('C+')\n\
    \            grades_sorted_index += 1\n            \n        elif grade > 1.7:\n\
    \            letter_grades.append('C')\n            grades_sorted_index += 1\n\
    \            \n        elif grade > 1.3:\n            letter_grades.append('C-')\n\
    \            grades_sorted_index += 1\n            \n        elif grade > 1.0:\n\
    \            letter_grades.append('D+')\n            grades_sorted_index += 1\n\
    \            \n        elif grade > 0.7:\n            letter_grades.append('D')\n\
    \            grades_sorted_index += 1\n            \n        elif grade > 0.0:\n\
    \            letter_grades.append('D-')\n            grades_sorted_index += 1\n\
    \            \n        else:\n            letter_grades.append('E')\n        \
    \    grades_sorted_index += 1\n            \n    return letter_grades\n", "  \
    \  \n    letter_grades = []\n    \n    for grade in grades:\n        if grade\
    \ >= 3.0:\n            letter_grades.append('A+')\n        elif grade >= 2.7:\n\
    \            letter_grades.append('B+')\n        elif grade >= 2.3:\n        \
    \    letter_grades.append('B-')\n        elif grade >= 1.7:\n            letter_grades.append('C+')\n\
    \        elif grade >= 1.3:\n            letter_grades.append('C-')\n        elif\
    \ grade >= 1.0:\n            letter_grades.append('D+')\n        elif grade >=\
    \ 0.7:\n            letter_grades.append('D')\n        elif grade >= 0.0:\n  \
    \          letter_grades.append('D-')\n        else:\n            letter_grades.append('E')\n\
    \            \n    return letter_grades\n</cell>\n<cell>", "    \n    grades_sorted\
    \ = sorted(grades)\n    \n    letter_grades = []\n    \n    for grade in grades_sorted:\n\
    \        if grade >= 3.0:\n            letter_grades.append('A+')\n        elif\
    \ grade >= 2.0:\n            letter_grades.append('B+')\n        elif grade >=\
    \ 1.7:\n            letter_grades.append('C+')\n        elif grade >= 1.3:\n \
    \           letter_grades.append('C-')\n        elif grade >= 1.0:\n         \
    \   letter_grades.append('D+')\n        elif grade >= 0.7:\n            letter_grades.append('D')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n\
    \            letter_grades.append('E')\n    \n    return letter_grades\n", " \
    \   \n    grades_sorted = sorted(grades)\n    grades_sorted.reverse()\n    grades_sorted\
    \ = grades_sorted + [grades_sorted[0]]\n    \n    grades_sorted = [str(grade)\
    \ for grade in grades_sorted]\n    grades_sorted = grades_sorted.replace('[',\
    \ '')\n    grades_sorted = grades_sorted.replace(']', '')\n    grades_sorted =\
    \ grades_sorted.replace(',', '')\n    grades_sorted = grades_sorted.replace('\
    \ ', '')\n    grades_sorted = grades_sorted.split(',')\n    \n    grades_sorted\
    \ = [grade for grade in grades_sorted if grade != '']\n    \n    grades_sorted\
    \ = [grade for grade in grades_sorted if grade != '-']\n    \n    grades_sorted\
    \ = [grade for grade in grades_sorted if grade != '+']\n    \n    grades_sorted\
    \ = [grade for grade in grades_sorted if grade != '0']\n    \n    grades_sorted\
    \ = [grade for grade in grades_sorted if grade != '0']\n    \n    grades_sorted\
    \ = [grade for grade in grades_sorted if grade != '-']\n    \n    grades_sorted\
    \ = [grade for grade in grades_sorted if grade != '+']\n    \n    grades_sorted\
    \ = [grade for grade in grades_sorted if grade != '0']\n    \n    grades_sorted\
    \ = [grade for grade in grades_sorted if grade != '0']\n    \n    grades_sorted\
    \ = [grade for grade in grades_sorted if grade != '-']\n    \n    grades_sorted\
    \ = [grade for grade in grades_sorted if grade != '+']\n    \n    grades_sorted\
    \ = [grade for grade in grades_sorted if grade != '0']\n    \n    grades_sorted\
    \ = [grade for grade in grades_sorted if grade != '0']\n    \n    grades_sorted\
    \ = [grade for grade in grades_sorted if grade != '-']\n    \n    grades_sorted\
    \ = [grade for grade in grades_sorted if grade != '+']\n    \n    grades_sorted\
    \ = [grade for grade in grades_sorted if grade != '0']\n    \n    grades_sorted\
    \ = [grade for grade ", "    \n    grades_sorted = sorted(grades)\n    \n    letter_grades\
    \ = []\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n", "    \n    grades_sorted = sorted(grades)\n    grades_sorted.reverse()\n\
    \    \n    grades_sum = 0\n    grades_count = 0\n    \n    grades_letters = []\n\
    \    \n    for grade in grades_sorted:\n        if grade > 3.7:\n            grades_letters.append('A+')\n\
    \        elif grade > 3.3:\n            grades_letters.append('A-')\n        elif\
    \ grade > 3.0:\n            grades_letters.append('B+')\n        elif grade >\
    \ 2.7:\n            grades_letters.append('B')\n        elif grade > 2.3:\n  \
    \          grades_letters.append('B-')\n        elif grade > 2.0:\n          \
    \  grades_letters.append('C+')\n        elif grade > 1.7:\n            grades_letters.append('C')\n\
    \        elif grade > 1.3:\n            grades_letters.append('C-')\n        elif\
    \ grade > 1.0:\n            grades_letters.append('D+')\n        elif grade >\
    \ 0.7:\n            grades_letters.append('D')\n        elif grade > 0.0:\n  \
    \          grades_letters.append('D-')\n        else:\n            grades_letters.append('E')\n\
    \        grades_sum += grade\n        grades_count += 1\n    \n    if grades_count\
    \ == 0:\n        grades_letters.append('E')\n    \n    return grades_letters\n\
    </cell>\n<cell>", "    \n    grades.sort()\n    \n    letter_grades = []\n   \
    \ \n    for grade in grades:\n        if grade >= 3.0:\n            letter_grades.append('A+')\n\
    \        elif grade >= 2.7:\n            letter_grades.append('B')\n        elif\
    \ grade >= 2.3:\n            letter_grades.append('B-')\n        elif grade >=\
    \ 1.7:\n            letter_grades.append('C')\n        elif grade >= 1.3:\n  \
    \          letter_grades.append('C-')\n        elif grade >= 1.0:\n          \
    \  letter_grades.append('D+')\n        elif grade >= 0.7:\n            letter_grades.append('D')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n\
    \            letter_grades.append('E')\n    \n    return letter_grades\n", " \
    \   \n    letter_grades = []\n    \n    for grade in grades:\n        if grade\
    \ >= 3.0:\n            letter_grades.append('A+')\n        elif grade >= 2.7:\n\
    \            letter_grades.append('B')\n        elif grade >= 2.3:\n         \
    \   letter_grades.append('B-')\n        elif grade >= 1.7:\n            letter_grades.append('C')\n\
    \        elif grade >= 1.3:\n            letter_grades.append('C-')\n        elif\
    \ grade >= 1.0:\n            letter_grades.append('D+')\n        elif grade >=\
    \ 0.7:\n            letter_grades.append('D')\n        elif grade >= 0.0:\n  \
    \          letter_grades.append('D-')\n        else:\n            letter_grades.append('E')\n\
    \    \n    return letter_grades\n", "    \n    letter_grades = []\n    \n    for\
    \ grade in grades:\n        if grade >= 3.0:\n            letter_grades.append('A+')\n\
    \        elif grade >= 2.7:\n            letter_grades.append('B+')\n        elif\
    \ grade >= 2.3:\n            letter_grades.append('B-')\n        elif grade >=\
    \ 1.7:\n            letter_grades.append('C+')\n        elif grade >= 1.3:\n \
    \           letter_grades.append('C-')\n        elif grade >= 1.0:\n         \
    \   letter_grades.append('D+')\n        elif grade >= 0.7:\n            letter_grades.append('D')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n\
    \            letter_grades.append('E')\n    return letter_grades\n</cell>\n<cell>",
  "    \n    letter_grades = []\n    for grade in grades:\n        if grade >= 3.0:\n\
    \            letter_grades.append('A+')\n        elif grade >= 2.7:\n        \
    \    letter_grades.append('B')\n        elif grade >= 2.3:\n            letter_grades.append('B-')\n\
    \        elif grade >= 1.7:\n            letter_grades.append('C')\n        elif\
    \ grade >= 1.3:\n            letter_grades.append('C-')\n        elif grade >=\
    \ 1.0:\n            letter_grades.append('D+')\n        elif grade >= 0.7:\n \
    \           letter_grades.append('D')\n        elif grade >= 0.0:\n          \
    \  letter_grades.append('D-')\n        else:\n            letter_grades.append('E')\n\
    \    return letter_grades\n    \n    ", "    \n    grades.sort()\n    \n    grades_len\
    \ = len(grades)\n    \n    if grades_len == 0:\n        return []\n    \n    if\
    \ grades_len == 1:\n        return [\"A+\"]\n    \n    if grades_len == 2:\n \
    \       if grades[0] > grades[1]:\n            return [\"A+\"]\n        else:\n\
    \            return [\"A-\"]\n    \n    if grades_len == 3:\n        if grades[0]\
    \ > grades[1] and grades[0] > grades[2]:\n            return [\"A+\"]\n      \
    \  elif grades[1] > grades[0] and grades[1] > grades[2]:\n            return [\"\
    A-\"]\n        elif grades[2] > grades[0] and grades[2] > grades[1]:\n       \
    \     return [\"B+\"]\n        elif grades[0] > grades[1] and grades[0] > grades[2]:\n\
    \            return [\"B\"]\n        elif grades[1] > grades[0] and grades[1]\
    \ > grades[2]:\n            return [\"B-\"]\n        elif grades[2] > grades[0]\
    \ and grades[2] > grades[1]:\n            return [\"C+\"]\n        elif grades[0]\
    \ > grades[1] and grades[0] > grades[2]:\n            return [\"C\"]\n       \
    \ elif grades[1] > grades[0] and grades[1] > grades[2]:\n            return [\"\
    C-\"]\n        elif grades[2] > grades[0] and grades[2] > grades[1]:\n       \
    \     return [\"D+\"]\n        elif grades[0] > grades[1] and grades[0] > grades[2]:\n\
    \            return [\"D\"]\n        elif grades[1] > grades[0] and grades[1]\
    \ > grades[2]:\n            return [\"D-\"]\n        elif grades[2] > grades[0]\
    \ and grades[2] > grades[1]:\n            return [\"E\"]\n    \n    if grades_len\
    \ == 4:\n        if grades[0] > grades[1] and grades[0] > grades[2] and grades[0]\
    \ > grades[3]:\n            return [\"A+\"]\n        elif grades[1] > grades[0]\
    \ and grades[1] > grades[2] and grades[1] > grades[3]:\n            return [\"\
    A-\"]\n        elif grades[2] > grades[0] and grades[2] > grades[1] and grades[2]\
    \ > grades[3]:\n            return [\"B+\"]\n        elif grades[0] > grades[1]\
    \ and grades[0] > grades[2] and grades[0] > grades[3]:\n            return [\"\
    B\"]\n        elif grades[1] > grades[0] and grades[1] > grades[2] and grades[1]\
    \ > grades[3]:\n            return [\"B-\"]\n        elif grades[2] > grades[0]\
    \ and grades[2] > grades[1] and grades[2] > grades[3]:\n            return [\"\
    C+\"]\n        elif grades[0] > grades[1] and grades[0] > grades[2] and grades[0]\
    \ > grades[3]:\n            return ", "    \n    grades_sorted = sorted(grades)\n\
    \    \n    letter_grades = []\n    \n    for grade in grades_sorted:\n       \
    \ if grade >= 3.0:\n            letter_grades.append('A+')\n        elif grade\
    \ >= 2.0:\n            letter_grades.append('B+')\n        elif grade >= 1.7:\n\
    \            letter_grades.append('C+')\n        elif grade >= 1.3:\n        \
    \    letter_grades.append('C-')\n        elif grade >= 1.0:\n            letter_grades.append('D+')\n\
    \        elif grade >= 0.7:\n            letter_grades.append('D')\n        elif\
    \ grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n     \
    \       letter_grades.append('E')\n    \n    return letter_grades\n", "    \n\
    \    grades.sort()\n    \n    letter_grades = []\n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ", "  \
    \  \n    grades.sort()\n    \n    grades_length = len(grades)\n    \n    if grades_length\
    \ < 4:\n        return ['E']\n    \n    if grades_length < 5:\n        return\
    \ ['D-']\n    \n    if grades_length < 6:\n        return ['D', 'A-']\n    \n\
    \    if grades_length < 7:\n        return ['D', 'B-']\n    \n    if grades_length\
    \ < 8:\n        return ['D', 'B', 'C-']\n    \n    if grades_length < 9:\n   \
    \     return ['D', 'B', 'C', 'A-']\n    \n    if grades_length < 10:\n       \
    \ return ['D', 'B', 'C', 'A+']\n    \n    if grades_length < 11:\n        return\
    \ ['D', 'B', 'C', 'A']\n    \n    if grades_length < 12:\n        return ['D',\
    \ 'B', 'C', 'A- ']\n    \n    if grades_length < 13:\n        return ['D', 'B',\
    \ 'C', 'B+']\n    \n    if grades_length < 14:\n        return ['D', 'B', 'C',\
    \ 'B']\n    \n    if grades_length < 15:\n        return ['D', 'B', 'C', 'B-']\n\
    \    \n    if grades_length < 16:\n        return ['D', 'B', 'C', 'C+']\n    \n\
    \    if grades_length < 17:\n        return ['D', 'B', 'C', 'C']\n    \n    if\
    \ grades_length < 18:\n        return ['D', 'B', 'C', 'C-']\n    \n    if grades_length\
    \ < 19:\n        return ['D', 'B', 'C', 'D+']\n    \n    if grades_length < 20:\n\
    \        return ['D', 'B', 'C', 'D']\n    \n    if grades_length < 21:\n     \
    \   return ['D', 'B', 'C', 'D-']\n    \n    if grades_length < 22:\n        return\
    \ ['D', 'B', 'C', 'E']\n    \n    if grades_length < 23:\n        return ['D',\
    \ 'B', 'C', 'E- ']\n    \n    if grades_length < 24:\n        return ['D', 'B',\
    \ 'C', 'F']\n    \n    if grades_length < 25:\n        return ['D', 'B', 'C',\
    \ 'F-']\n    \n    if grades_length < 26:\n        return ['D', 'B', 'C', 'G']\n\
    \    \n    if grades_length < 27:\n        return ['D', 'B', 'C', 'G-']\n    \n\
    \    if grades_length < 28:\n        return ['D', 'B', 'C', 'H']\n    \n    if\
    \ grades_length < 29:\n        return ['D', 'B', 'C', 'H-']\n    \n    if grades_length\
    \ < 30:\n        return ['D', 'B', 'C', 'I']\n    \n    if grades_length < 31:\n\
    \        return ['D', 'B', 'C', 'I-']\n    \n    if grade", "    \n    grades.sort()\n\
    \    \n    letter_grades = []\n    \n    grade = grades[-1]\n    \n    if grade\
    \ >= 4.0:\n        letter_grades.append('A+')\n    elif grade >= 3.7:\n      \
    \  letter_grades.append('A')\n    elif grade >= 3.3:\n        letter_grades.append('A-')\n\
    \    elif grade >= 3.0:\n        letter_grades.append('B+')\n    elif grade >=\
    \ 2.7:\n        letter_grades.append('B')\n    elif grade >= 2.3:\n        letter_grades.append('B-')\n\
    \    elif grade >= 2.0:\n        letter_grades.append('C+')\n    elif grade >=\
    \ 1.7:\n        letter_grades.append('C')\n    elif grade >= 1.3:\n        letter_grades.append('C-')\n\
    \    elif grade >= 1.0:\n        letter_grades.append('D+')\n    elif grade >=\
    \ 0.7:\n        letter_grades.append('D')\n    elif grade >= 0.0:\n        letter_grades.append('D-')\n\
    \    else:\n        letter_grades.append('E')\n    \n    return letter_grades\n",
  "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n", "    \n    grades.sort()\n    \n    letter_grades\
    \ = []\n    \n    for grade in grades:\n        if grade > 3.7:\n            letter_grades.append('A+')\n\
    \        elif grade > 3.3:\n            letter_grades.append('A-')\n        elif\
    \ grade > 2.7:\n            letter_grades.append('B+')\n        elif grade > 2.3:\n\
    \            letter_grades.append('B-')\n        elif grade > 1.7:\n         \
    \   letter_grades.append('C+')\n        elif grade > 1.3:\n            letter_grades.append('C')\n\
    \        elif grade > 1.0:\n            letter_grades.append('D+')\n        elif\
    \ grade > 0.7:\n            letter_grades.append('D')\n        elif grade > 0.0:\n\
    \            letter_grades.append('D-')\n        else:\n            letter_grades.append('E')\n\
    \    \n    return letter_grades\n", "    \n    grades_sorted = sorted(grades)\n\
    \    \n    letter_grades = []\n    \n    for grade in grades_sorted:\n       \
    \ if grade >= 3.0:\n            letter_grades.append('A+')\n        elif grade\
    \ >= 2.7:\n            letter_grades.append('B')\n        elif grade >= 2.3:\n\
    \            letter_grades.append('B-')\n        elif grade >= 1.7:\n        \
    \    letter_grades.append('C')\n        elif grade >= 1.3:\n            letter_grades.append('C-')\n\
    \        elif grade >= 1.0:\n            letter_grades.append('D+')\n        elif\
    \ grade >= 0.7:\n            letter_grades.append('D')\n        elif grade >=\
    \ 0.0:\n            letter_grades.append('D-')\n        else:\n            letter_grades.append('E')\n\
    \            \n    return letter_grades\n</cell>\n<cell>", "    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n", "    \n    letter_grades = []\n    \n\
    \    for grade in grades:\n        if grade >= 3.0:\n            letter_grades.append('A+')\n\
    \        elif grade >= 2.7:\n            letter_grades.append('B')\n        elif\
    \ grade >= 2.3:\n            letter_grades.append('B-')\n        elif grade >=\
    \ 1.7:\n            letter_grades.append('C')\n        elif grade >= 1.3:\n  \
    \          letter_grades.append('C-')\n        elif grade >= 1.0:\n          \
    \  letter_grades.append('D+')\n        elif grade >= 0.7:\n            letter_grades.append('D')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n\
    \            letter_grades.append('E')\n    \n    return letter_grades\n", " \
    \   \n    grades.sort()\n    grades_len = len(grades)\n    \n    if grades_len\
    \ < 2:\n        return ['E']\n    \n    if grades_len == 2:\n        if grades[0]\
    \ > grades[1]:\n            return ['A+']\n        else:\n            return ['A']\n\
    \    \n    if grades_len == 3:\n        if grades[0] > grades[1] and grades[0]\
    \ > grades[2]:\n            return ['A+', 'B+']\n        elif grades[0] > grades[1]\
    \ and grades[0] < grades[2]:\n            return ['A+', 'B-']\n        elif grades[0]\
    \ < grades[1] and grades[0] > grades[2]:\n            return ['A', '-', 'B+']\n\
    \        elif grades[0] < grades[1] and grades[0] < grades[2]:\n            return\
    \ ['A', '-', 'B-']\n        elif grades[0] == grades[1] and grades[0] > grades[2]:\n\
    \            return ['A+', 'B+']\n        elif grades[0] == grades[1] and grades[0]\
    \ < grades[2]:\n            return ['A+', 'B-']\n        elif grades[0] == grades[1]\
    \ and grades[0] == grades[2]:\n            return ['A']\n        elif grades[0]\
    \ < grades[1] and grades[0] > grades[2]:\n            return ['A', '-', 'B+']\n\
    \        elif grades[0] < grades[1] and grades[0] < grades[2]:\n            return\
    \ ['A', '-', 'B-']\n        elif grades[0] < grades[1] and grades[0] == grades[2]:\n\
    \            return ['A+', 'B']\n        elif grades[0] > grades[1] and grades[0]\
    \ < grades[2]:\n            return ['A+', 'B-']\n        elif grades[0] > grades[1]\
    \ and grades[0] == grades[2]:\n            return ['A', '-', 'B']\n        elif\
    \ grades[0] == grades[1] and grades[0] < grades[2]:\n            return ['A+',\
    \ 'B']\n        elif grades[0] == grades[1] and grades[0] == grades[2]:\n    \
    \        return ['A']\n        elif grades[0] > grades[1] and grades[0] < grades[2]:\n\
    \            return ['A+', 'B-']\n        elif grades[0] > grades[1] and grades[0]\
    \ == grades[2]:\n            return ['A', '-', 'B']\n        elif grades[0] ==\
    \ grades[1] and grades[0] > grades[2]:\n            return ['A+', 'B']\n     \
    \   elif grades[0] == grades[1] and grades[0] == grades[2]:\n            return\
    \ ['A']\n        elif grades[0] < grades[1] and grades[0] == grades[2]:\n    \
    \        return ['A', '-', 'B']\n        elif grades[0] < grades[1] and grades[0]\
    \ < grades[2]:\n            return ['A+', 'B-']\n        elif grades[0] < grades[1]\
    \ and grades[0] > grades[2]:\n            return ['A+', 'B+']\n    \n    if grades_len\
    \ == 4:\n        if grades[0] > grades[1] and grades[0] > grades[2] and ", " \
    \   \n    grades.sort()\n    \n    letter_grades = []\n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ", "  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    letter_grades\
    \ = []\n    \n    for grade in grades:\n        if grade > 3.7:\n            letter_grades.append('A+')\n\
    \        elif grade > 3.3:\n            letter_grades.append('A-')\n        elif\
    \ grade > 3.0:\n            letter_grades.append('B+')\n        elif grade > 2.7:\n\
    \            letter_grades.append('B')\n        elif grade > 2.3:\n          \
    \  letter_grades.append('B-')\n        elif grade > 2.0:\n            letter_grades.append('C+')\n\
    \        elif grade > 1.7:\n            letter_grades.append('C')\n        elif\
    \ grade > 1.3:\n            letter_grades.append('C-')\n        elif grade > 1.0:\n\
    \            letter_grades.append('D+')\n        elif grade > 0.7:\n         \
    \   letter_grades.append('D')\n        elif grade > 0.0:\n            letter_grades.append('D-')\n\
    \        else:\n            letter_grades.append('E')\n    \n    return letter_grades\n",
  "    \n    grades.sort()\n    \n    letter_grades = []\n    \n    \n    for grade\
    \ in grades:\n        if grade < 3.0:\n            letter_grades.append('A')\n\
    \        elif grade < 3.7:\n            letter_grades.append('A-')\n        elif\
    \ grade < 4.0:\n            letter_grades.append('B+')\n        elif grade < 4.7:\n\
    \            letter_grades.append('B')\n        elif grade < 5.0:\n          \
    \  letter_grades.append('B-')\n        elif grade < 5.7:\n            letter_grades.append('C+')\n\
    \        elif grade < 6.0:\n            letter_grades.append('C')\n        elif\
    \ grade < 6.7:\n            letter_grades.append('C-')\n        elif grade < 7.0:\n\
    \            letter_grades.append('D+')\n        elif grade < 7.7:\n         \
    \   letter_grades.append('D')\n        elif grade < 8.0:\n            letter_grades.append('D-')\n\
    \        elif grade < 8.7:\n            letter_grades.append('E')\n        else:\n\
    \            letter_grades.append('F')\n    \n    return letter_grades\n", " \
    \   \n    grades_sorted = sorted(grades)\n    \n    grades_sorted_length = len(grades_sorted)\n\
    \    \n    letter_grades = []\n    \n    if grades_sorted_length == 0:\n     \
    \   letter_grades.append('E')\n        return letter_grades\n    \n    if grades_sorted_length\
    \ == 1:\n        letter_grades.append('A')\n        return letter_grades\n   \
    \ \n    if grades_sorted_length == 2:\n        if grades_sorted[0] > grades_sorted[1]:\n\
    \            letter_grades.append('A+')\n        else:\n            letter_grades.append('A-')\n\
    \        return letter_grades\n    \n    if grades_sorted_length == 3:\n     \
    \   if grades_sorted[0] > grades_sorted[1] and grades_sorted[0] > grades_sorted[2]:\n\
    \            letter_grades.append('A+')\n        elif grades_sorted[1] > grades_sorted[2]:\n\
    \            letter_grades.append('A-')\n        else:\n            letter_grades.append('B+')\n\
    \        return letter_grades\n    \n    if grades_sorted_length == 4:\n     \
    \   if grades_sorted[0] > grades_sorted[1] and grades_sorted[0] > grades_sorted[2]\
    \ and grades_sorted[0] > grades_sorted[3]:\n            letter_grades.append('A+')\n\
    \        elif grades_sorted[1] > grades_sorted[2] and grades_sorted[1] > grades_sorted[3]:\n\
    \            letter_grades.append('A-')\n        elif grades_sorted[2] > grades_sorted[3]:\n\
    \            letter_grades.append('B+')\n        else:\n            letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_sorted_length == 5:\n     \
    \   if grades_sorted[0] > grades_sorted[1] and grades_sorted[0] > grades_sorted[2]\
    \ and grades_sorted[0] > grades_sorted[3] and grades_sorted[0] > grades_sorted[4]:\n\
    \            letter_grades.append('A+')\n        elif grades_sorted[1] > grades_sorted[2]\
    \ and grades_sorted[1] > grades_sorted[3] and grades_sorted[1] > grades_sorted[4]:\n\
    \            letter_grades.append('A-')\n        elif grades_sorted[2] > grades_sorted[3]\
    \ and grades_sorted[2] > grades_sorted[4]:\n            letter_grades.append('B+')\n\
    \        elif grades_sorted[3] > grades_sorted[4]:\n            letter_grades.append('B-')\n\
    \        else:\n            letter_grades.append('C+')\n        return letter_grades\n\
    \    \n    if grades_sorted_length == 6:\n        if grades_sorted[0] > grades_sorted[1]\
    \ and grades_sorted[0] > grades_sorted[2] and grades_sorted[0] > grades_sorted[3]\
    \ and grades_sorted[0] > grades_", "    \n    letter_grades = []\n    \n    for\
    \ grade in grades:\n        if grade > 3.7:\n            letter_grades.append('A+')\n\
    \        elif grade > 3.3:\n            letter_grades.append('A-')\n        elif\
    \ grade > 3.0:\n            letter_grades.append('B+')\n        elif grade > 2.7:\n\
    \            letter_grades.append('B')\n        elif grade > 2.3:\n          \
    \  letter_grades.append('B-')\n        elif grade > 2.0:\n            letter_grades.append('C+')\n\
    \        elif grade > 1.7:\n            letter_grades.append('C')\n        elif\
    \ grade > 1.3:\n            letter_grades.append('C-')\n        elif grade > 1.0:\n\
    \            letter_grades.append('D+')\n        elif grade > 0.7:\n         \
    \   letter_grades.append('D')\n        elif grade > 0.0:\n            letter_grades.append('D-')\n\
    \        else:\n            letter_grades.append('E')\n    \n    return letter_grades\n",
  "    \n    letter_grades = []\n    \n    for grade in grades:\n        if grade\
    \ >= 3.0:\n            letter_grades.append('A+')\n        elif grade >= 2.7:\n\
    \            letter_grades.append('B')\n        elif grade >= 2.3:\n         \
    \   letter_grades.append('B-')\n        elif grade >= 1.7:\n            letter_grades.append('C')\n\
    \        elif grade >= 1.3:\n            letter_grades.append('C-')\n        elif\
    \ grade >= 1.0:\n            letter_grades.append('D+')\n        elif grade >=\
    \ 0.7:\n            letter_grades.append('D')\n        elif grade >= 0.0:\n  \
    \          letter_grades.append('D-')\n        else:\n            letter_grades.append('E')\n\
    \    \n    return letter_grades\n", "    \n    grades_sorted = sorted(grades)\n\
    \    \n    letter_grades = []\n    \n    for grade in grades_sorted:\n       \
    \ if grade < 3.0:\n            letter_grades.append('A+')\n        elif grade\
    \ < 3.7:\n            letter_grades.append('A')\n        elif grade < 4.0:\n \
    \           letter_grades.append('A-')\n        elif grade < 4.7:\n          \
    \  letter_grades.append('B+')\n        elif grade < 5.0:\n            letter_grades.append('B')\n\
    \        elif grade < 5.7:\n            letter_grades.append('B-')\n        elif\
    \ grade < 6.0:\n            letter_grades.append('C+')\n        elif grade < 6.7:\n\
    \            letter_grades.append('C')\n        elif grade < 7.0:\n          \
    \  letter_grades.append('C-')\n        elif grade < 7.7:\n            letter_grades.append('D+')\n\
    \        elif grade < 8.0:\n            letter_grades.append('D')\n        elif\
    \ grade < 8.7:\n            letter_grades.append('D-')\n        elif grade < 9.0:\n\
    \            letter_grades.append('E')\n        else:\n            letter_grades.append('F')\n\
    \    \n    return letter_grades\n", "    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n", "    \n    grades.sort()\n    \n    letter_grades = []\n    \n\
    \    for grade in grades:\n        if grade > 3.7:\n            letter_grades.append('A+')\n\
    \        elif grade > 3.3:\n            letter_grades.append('A-')\n        elif\
    \ grade > 2.7:\n            letter_grades.append('B+')\n        elif grade > 2.3:\n\
    \            letter_grades.append('B-')\n        elif grade > 1.7:\n         \
    \   letter_grades.append('C+')\n        elif grade > 1.3:\n            letter_grades.append('C')\n\
    \        elif grade > 1.0:\n            letter_grades.append('D+')\n        elif\
    \ grade > 0.7:\n            letter_grades.append('D')\n        elif grade > 0.0:\n\
    \            letter_grades.append('D-')\n        else:\n            letter_grades.append('E')\n\
    \    \n    return letter_grades\n", "    \n    grades_sorted = sorted(grades)\n\
    \    \n    letter_grades = []\n    \n    for grade in grades_sorted:\n       \
    \ if grade >= 3.0:\n            letter_grades.append('A+')\n        elif grade\
    \ >= 2.0:\n            letter_grades.append('B+')\n        elif grade >= 1.7:\n\
    \            letter_grades.append('C+')\n        elif grade >= 1.3:\n        \
    \    letter_grades.append('C-')\n        elif grade >= 1.0:\n            letter_grades.append('D+')\n\
    \        elif grade >= 0.7:\n            letter_grades.append('D')\n        elif\
    \ grade >= 0.0:\n            letter_grades.append('D-')\n        elif grade >=\
    \ 0.0:\n            letter_grades.append('E')\n        else:\n            letter_grades.append('F')\n\
    \            \n    return letter_grades\n    ", "    \n    grades_sorted = sorted(grades)\n\
    \    \n    grades_sorted_length = len(grades_sorted)\n    \n    letter_grades\
    \ = []\n    \n    if grades_sorted_length == 0:\n        letter_grades.append('E')\n\
    \        return letter_grades\n    \n    if grades_sorted_length == 1:\n     \
    \   letter_grades.append('A')\n        return letter_grades\n    \n    if grades_sorted_length\
    \ == 2:\n        if grades_sorted[0] > grades_sorted[1]:\n            letter_grades.append('A')\n\
    \        else:\n            letter_grades.append('B')\n        return letter_grades\n\
    \    \n    if grades_sorted_length == 3:\n        if grades_sorted[0] > grades_sorted[1]\
    \ and grades_sorted[0] > grades_sorted[2]:\n            letter_grades.append('A')\n\
    \        elif grades_sorted[1] > grades_sorted[2]:\n            letter_grades.append('B')\n\
    \        else:\n            letter_grades.append('C')\n        return letter_grades\n\
    \    \n    if grades_sorted_length == 4:\n        if grades_sorted[0] > grades_sorted[1]\
    \ and grades_sorted[0] > grades_sorted[2] and grades_sorted[0] > grades_sorted[3]:\n\
    \            letter_grades.append('A')\n        elif grades_sorted[1] > grades_sorted[2]\
    \ and grades_sorted[1] > grades_sorted[3]:\n            letter_grades.append('B')\n\
    \        elif grades_sorted[2] > grades_sorted[3]:\n            letter_grades.append('C')\n\
    \        else:\n            letter_grades.append('D')\n        return letter_grades\n\
    \    \n    if grades_sorted_length == 5:\n        if grades_sorted[0] > grades_sorted[1]\
    \ and grades_sorted[0] > grades_sorted[2] and grades_sorted[0] > grades_sorted[3]\
    \ and grades_sorted[0] > grades_sorted[4]:\n            letter_grades.append('A')\n\
    \        elif grades_sorted[1] > grades_sorted[2] and grades_sorted[1] > grades_sorted[3]\
    \ and grades_sorted[1] > grades_sorted[4]:\n            letter_grades.append('B')\n\
    \        elif grades_sorted[2] > grades_sorted[3] and grades_sorted[2] > grades_sorted[4]:\n\
    \            letter_grades.append('C')\n        elif grades_sorted[3] > grades_sorted[4]:\n\
    \            letter_grades.append('D')\n        else:\n            letter_grades.append('E')\n\
    \        return letter_grades\n    \n    if grades_sorted_length == 6:\n     \
    \   if grades_sorted[0] > grades_sorted[1] and grades_sorted[0] > grades_sorted[2]\
    \ and grades_sorted[0] > grades_sorted[3] and grades_sorted[0] > grades_sorted[4]\
    \ and grades_sorted[0] > ", "    \n    grades.sort()\n    \n    grades_length\
    \ = len(grades)\n    \n    letter_grades = []\n    \n    \n    if grades_length\
    \ == 0:\n        letter_grades.append('E')\n        return letter_grades\n   \
    \ \n    if grades_length == 1:\n        letter_grades.append('A')\n        return\
    \ letter_grades\n    \n    if grades_length == 2:\n        if grades[0] > grades[1]:\n\
    \            letter_grades.append('A')\n        else:\n            letter_grades.append('B')\n\
    \        return letter_grades\n    \n    if grades_length == 3:\n        if grades[0]\
    \ > grades[1] and grades[0] > grades[2]:\n            letter_grades.append('A')\n\
    \        elif grades[1] > grades[2]:\n            letter_grades.append('B')\n\
    \        else:\n            letter_grades.append('C')\n        return letter_grades\n\
    \    \n    if grades_length == 4:\n        if grades[0] > grades[1] and grades[0]\
    \ > grades[2] and grades[0] > grades[3]:\n            letter_grades.append('A')\n\
    \        elif grades[1] > grades[2] and grades[1] > grades[3]:\n            letter_grades.append('B')\n\
    \        elif grades[2] > grades[3]:\n            letter_grades.append('C')\n\
    \        else:\n            letter_grades.append('D')\n        return letter_grades\n\
    \    \n    if grades_length == 5:\n        if grades[0] > grades[1] and grades[0]\
    \ > grades[2] and grades[0] > grades[3] and grades[0] > grades[4]:\n         \
    \   letter_grades.append('A')\n        elif grades[1] > grades[2] and grades[1]\
    \ > grades[3] and grades[1] > grades[4]:\n            letter_grades.append('B')\n\
    \        elif grades[2] > grades[3] and grades[2] > grades[4]:\n            letter_grades.append('C')\n\
    \        elif grades[3] > grades[4]:\n            letter_grades.append('D')\n\
    \        else:\n            letter_grades.append('E')\n        return letter_grades\n\
    \    \n    if grades_length == 6:\n        if grades[0] > grades[1] and grades[0]\
    \ > grades[2] and grades[0] > grades[3] and grades[0] > grades[4] and grades[0]\
    \ > grades[5]:\n            letter_grades.append('A')\n        elif grades[1]\
    \ > grades[2] and grades[1] > grades[3] and grades[1] > grades[4] and grades[1]\
    \ > grades[5]:\n            letter_grades.append('B')\n        elif grades[2]\
    \ > grades[3] and grades[2] > grades[4] and grades[2] > grades[5]:\n         \
    \   letter_grades.append('C')\n        elif grades[3] > grades[4] and grades[3]\
    \ > grades[5]:\n            ", "    \n    grades_sorted = sorted(grades)\n   \
    \ \n    letter_grades = []\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n", "    \n    grades.sort()\n    \n    letter_grades\
    \ = []\n    \n    \n    for grade in grades:\n        if grade < 3.0:\n      \
    \      letter_grades.append('A')\n        elif grade < 3.7:\n            letter_grades.append('A-')\n\
    \        elif grade < 4.0:\n            letter_grades.append('B+')\n        elif\
    \ grade < 4.7:\n            letter_grades.append('B')\n        elif grade < 5.0:\n\
    \            letter_grades.append('B-')\n        elif grade < 5.7:\n         \
    \   letter_grades.append('C+')\n        elif grade < 6.0:\n            letter_grades.append('C')\n\
    \        elif grade < 6.7:\n            letter_grades.append('C-')\n        elif\
    \ grade < 7.0:\n            letter_grades.append('D+')\n        elif grade < 7.7:\n\
    \            letter_grades.append('D')\n        elif grade < 8.0:\n          \
    \  letter_grades.append('D-')\n        elif grade < 8.7:\n            letter_grades.append('E')\n\
    \        else:\n            letter_grades.append('F')\n            \n    return\
    \ letter_grades\n", "    \n    letter_grades = []\n    for grade in grades:\n\
    \        if grade > 3.0:\n            letter_grades.append('A+')\n        elif\
    \ grade > 2.7:\n            letter_grades.append('B+')\n        elif grade > 2.3:\n\
    \            letter_grades.append('B-')\n        elif grade > 1.7:\n         \
    \   letter_grades.append('C+')\n        elif grade > 1.3:\n            letter_grades.append('C-')\n\
    \        elif grade > 1.0:\n            letter_grades.append('D+')\n        elif\
    \ grade > 0.7:\n            letter_grades.append('D')\n        elif grade > 0.0:\n\
    \            letter_grades.append('D-')\n        else:\n            letter_grades.append('E')\n\
    \    return letter_grades\n", "    \n    grades.sort()\n    \n    grades_length\
    \ = len(grades)\n    \n    letter_grades = []\n    \n    if grades_length == 0:\n\
    \        letter_grades.append('E')\n        return letter_grades\n    \n    if\
    \ grades_length == 1:\n        letter_grades.append('D-')\n        return letter_grades\n\
    \    \n    if grades_length == 2:\n        letter_grades.append('C-')\n      \
    \  return letter_grades\n    \n    if grades_length == 3:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 4:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 5:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 6:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 7:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 8:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 9:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 10:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 11:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 12 or grades_length\
    \ == 13:\n        letter_grades.append('B-')\n        return letter_grades\n \
    \   \n    if grades_length == 14:\n        letter_grades.append('B-')\n      \
    \  return letter_grades\n    \n    if grades_length == 15:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 16:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 17:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 18:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 19:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 20:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 21:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 22:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 23:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_", "    \n    grades_sorted\
    \ = sorted(grades)\n    \n    grades_sorted_length = len(grades_sorted)\n    \n\
    \    letter_grades = []\n    \n    if grades_sorted_length == 0:\n        letter_grades.append('E')\n\
    \        return letter_grades\n    \n    if grades_sorted_length == 1:\n     \
    \   letter_grades.append('A')\n        return letter_grades\n    \n    if grades_sorted_length\
    \ == 2:\n        letter_grades.append('A')\n        return letter_grades\n   \
    \ \n    if grades_sorted_length == 3:\n        letter_grades.append('A')\n   \
    \     return letter_grades\n    \n    if grades_sorted_length == 4:\n        letter_grades.append('A')\n\
    \        return letter_grades\n    \n    if grades_sorted_length == 5:\n     \
    \   letter_grades.append('A')\n        return letter_grades\n    \n    if grades_sorted_length\
    \ == 6:\n        letter_grades.append('A')\n        return letter_grades\n   \
    \ \n    if grades_sorted_length == 7:\n        letter_grades.append('A')\n   \
    \     return letter_grades\n    \n    if grades_sorted_length == 8:\n        letter_grades.append('A')\n\
    \        return letter_grades\n    \n    if grades_sorted_length == 9:\n     \
    \   letter_grades.append('A')\n        return letter_grades\n    \n    if grades_sorted_length\
    \ == 10:\n        letter_grades.append('A')\n        return letter_grades\n  \
    \  \n    if grades_sorted_length == 11:\n        letter_grades.append('A')\n \
    \       return letter_grades\n    \n    if grades_sorted_length == 12:\n     \
    \   letter_grades.append('A')\n        return letter_grades\n    \n    if grades_sorted_length\
    \ == 13:\n        letter_grades.append('A')\n        return letter_grades\n  \
    \  \n    if grades_sorted_length == 14:\n        letter_grades.append('A')\n \
    \       return letter_grades\n    \n    if grades_sorted_length == 15:\n     \
    \   letter_grades.append('A')\n        return letter_grades\n    \n    if grades_sorted_length\
    \ == 16:\n        letter_grades.append('A')\n        return letter_grades\n  \
    \  \n    if grades_sorted_length == 17:\n        letter_grades.append('A')\n \
    \       return letter_grades\n    \n    if grades_sorted_length == 18:\n     \
    \   letter_grades.append('A')\n        return letter_grades\n    \n    if grades_sorted_length\
    \ == 19:\n        letter_grades.append('A')\n        return letter_grades\n  \
    \  \n    if grades_sorted_length == 20:\n        letter_grades.append('A')\n \
    \       return letter_grades\n    \n    if grades_sorted_length == 21:\n     \
    \   letter_grades.append('A')\n        return letter_grades\n    ", "    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    grades_sorted =\
    \ sorted(grades)\n    \n    grades_sorted.reverse()\n    \n    grades_sorted =\
    \ [str(grade) for grade in grades_sorted]\n    \n    grades_sorted = [grades_sorted[grades_sorted.index(grade)-1]\
    \ for grade in grades_sorted]\n    \n    grades_sorted = [grades_sorted[grades_sorted.index(grade)+1]\
    \ for grade in grades_sorted]\n    \n    grades_sorted = [grades_sorted[grades_sorted.index(grade)]\
    \ for grade in grades_sorted]\n    \n    grades_sorted = [grades_sorted[grades_sorted.index(grade)]\
    \ for grade in grades_sorted]\n    \n    grades_sorted = [grades_sorted[grades_sorted.index(grade)]\
    \ for grade in grades_sorted]\n    \n    grades_sorted = [grades_sorted[grades_sorted.index(grade)]\
    \ for grade in grades_sorted]\n    \n    grades_sorted = [grades_sorted[grades_sorted.index(grade)]\
    \ for grade in grades_sorted]\n    \n    grades_sorted = [grades_sorted[grades_sorted.index(grade)]\
    \ for grade in grades_sorted]\n    \n    grades_sorted = [grades_sorted[grades_sorted.index(grade)]\
    \ for grade in grades_sorted]\n    \n    grades_sorted = [grades_sorted[grades_sorted.index(grade)]\
    \ for grade in grades_sorted]\n    \n    grades_sorted = [grades_sorted[grades_sorted.index(grade)]\
    \ for grade in grades_sorted]\n    \n    grades_sorted = [grades_sorted[grades_sorted.index(grade)]\
    \ for grade in grades_sorted]\n    \n    grades_sorted = [grades_sorted[grades_sorted.index(grade)]\
    \ for grade in grades_sorted]\n    \n    grades_sorted = [grades_sorted[grades_sorted.index(grade)]\
    \ for grade in grades_sorted]\n    \n    grades_sorted = [grades_sorted[grades_sorted.index(grade)]\
    \ for grade in grades_sorted]\n    \n    grades_sorted = [grades_sorted[grades_sorted.index(grade)]\
    \ for grade in grades_sorted]\n    \n    grades_sorted = [grades_sorted[grades_sorted.index(grade)]\
    \ for grade ", "    \n    grades_sorted = sorted(grades)\n    \n    letter_grades\
    \ = []\n    \n    for grade in grades_sorted:\n        if grade >= 3.0:\n    \
    \        letter_grades.append('A+')\n        elif grade >= 2.7:\n            letter_grades.append('B+')\n\
    \        elif grade >= 2.3:\n            letter_grades.append('B-')\n        elif\
    \ grade >= 1.7:\n            letter_grades.append('C+')\n        elif grade >=\
    \ 1.3:\n            letter_grades.append('C-')\n        elif grade >= 1.0:\n \
    \           letter_grades.append('D+')\n        elif grade >= 0.7:\n         \
    \   letter_grades.append('D')\n        elif grade >= 0.0:\n            letter_grades.append('D-')\n\
    \        else:\n            letter_grades.append('E')\n    \n    return letter_grades\n",
  "    \n    grades_sorted = sorted(grades)\n    \n    grades_sorted_reversed = sorted(grades_sorted,\
    \ reverse=True)\n    \n    grades_sorted_reversed_len = len(grades_sorted_reversed)\n\
    \    \n    grades_sorted_reversed_len_half = grades_sorted_reversed_len // 2\n\
    \    \n    grades_sorted_reversed_len_half = grades_sorted_reversed_len_half if\
    \ grades_sorted_reversed_len_half > 0 else 1\n    \n    grades_sorted_reversed_len_half\
    \ = grades_sorted_reversed_len_half if grades_sorted_reversed_len_half < len(grades_sorted_reversed)\
    \ else len(grades_sorted_reversed)\n    \n    grades_sorted_reversed_len_half\
    \ = grades_sorted_reversed_len_half if grades_sorted_reversed_len_half > 0 else\
    \ 1\n    \n    grades_sorted_reversed_len_half = grades_sorted_reversed_len_half\
    \ if grades_sorted_reversed_len_half < len(grades_sorted_reversed) else len(grades_sorted_reversed)\n\
    \    \n    grades_sorted_reversed_len_half = grades_sorted_reversed_len_half if\
    \ grades_sorted_reversed_len_half > 0 else 1\n    \n    grades_sorted_reversed_len_half\
    \ = grades_sorted_reversed_len_half if grades_sorted_reversed_len_half < len(grades_sorted_reversed)\
    \ else len(grades_sorted_reversed)\n    \n    grades_sorted_reversed_len_half\
    \ = grades_sorted_reversed_len_half if grades_sorted_reversed_len_half > 0 else\
    \ 1\n    \n    grades_sorted_reversed_len_half = grades_sorted_reversed_len_half\
    \ if grades_sorted_reversed_len_half < len(grades_sorted_reversed) else len(grades_sorted_reversed)\n\
    \    \n    grades_sorted_reversed_len_half = grades_sorted_reversed_len_half if\
    \ grades_sorted_reversed_len_half > 0 else 1\n    \n    grades_sorted_reversed_len_half\
    \ = grades_sorted_reversed_len_half if grades_sorted_reversed_len_half < len(grades_sorted_reversed)\
    \ else len(grades_sorted_reversed)\n    \n    grades_sorted_reversed_len_half\
    \ = grades_sorted_reversed_len_half if grades_sorted_reversed_len_half > 0 else\
    \ 1\n    \n    grades_sorted_reversed_len_half = grades_sorted_reversed_len_half\
    \ if grades_sorted_reversed_len_half < len(grades_sorted_reversed) else len(grades_sorted_reversed)\n\
    \    \n    grades_sorted_reversed_len_half = grades_sorted_reversed_len_half if\
    \ grades_sorted_reversed_len_", "    \n    grades.sort()\n    \n    grades_length\
    \ = len(grades)\n    \n    letter_grades = []\n    \n    if grades_length == 0:\n\
    \        letter_grades.append('E')\n        return letter_grades\n    \n    if\
    \ grades_length == 1:\n        letter_grades.append('A')\n        return letter_grades\n\
    \    \n    if grades_length == 2:\n        letter_grades.append('B')\n       \
    \ return letter_grades\n    \n    if grades_length == 3:\n        letter_grades.append('C')\n\
    \        return letter_grades\n    \n    if grades_length == 4:\n        letter_grades.append('D')\n\
    \        return letter_grades\n    \n    if grades_length == 5:\n        letter_grades.append('E')\n\
    \        return letter_grades\n    \n    if grades_length == 6:\n        letter_grades.append('F')\n\
    \        return letter_grades\n    \n    if grades_length == 7:\n        letter_grades.append('G')\n\
    \        return letter_grades\n    \n    if grades_length == 8:\n        letter_grades.append('A')\n\
    \        return letter_grades\n    \n    if grades_length == 9:\n        letter_grades.append('B')\n\
    \        return letter_grades\n    \n    if grades_length == 10:\n        letter_grades.append('C')\n\
    \        return letter_grades\n    \n    if grades_length == 11:\n        letter_grades.append('D')\n\
    \        return letter_grades\n    \n    if grades_length == 12:\n        letter_grades.append('E')\n\
    \        return letter_grades\n    \n    if grades_length == 13:\n        letter_grades.append('F')\n\
    \        return letter_grades\n    \n    if grades_length == 14:\n        letter_grades.append('G')\n\
    \        return letter_grades\n    \n    if grades_length == 15:\n        letter_grades.append('A')\n\
    \        return letter_grades\n    \n    if grades_length == 16:\n        letter_grades.append('B')\n\
    \        return letter_grades\n    \n    if grades_length == 17:\n        letter_grades.append('C')\n\
    \        return letter_grades\n    \n    if grades_length == 18:\n        letter_grades.append('D')\n\
    \        return letter_grades\n    \n    if grades_length == 19:\n        letter_grades.append('E')\n\
    \        return letter_grades\n    \n    if grades_length == 20:\n        letter_grades.append('F')\n\
    \        return letter_grades\n    \n    if grades_length == 21:\n        letter_grades.append('G')\n\
    \        return letter_grades\n    \n    if grades_length == 22:\n        letter_grades.append('A')\n\
    \        return letter_grades\n    \n    if grades_length == 23:\n        ", " \
    \   \n    grades_sorted = sorted(grades)\n    \n    grades_sorted_length = len(grades_sorted)\n\
    \    \n    grades_sorted_index = 0\n    \n    grades_sorted_index_length = len(grades_sorted_index)\n\
    \    \n    grades_sorted_index_index_length = len(grades_sorted_index_index)\n\
    \    \n    grades_sorted_index_index_index_length = len(grades_sorted_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_length = len(grades_sorted_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_length = len(grades_sorted_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index_length = len(grades_sorted_index_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index_index_length = len(grades_sorted_index_index_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index_index_index_length\
    \ = len(grades_sorted_index_index_index_index_index_index_index_index)\n    \n\
    \    grades_sorted_index_index_index_index_index_index_index_index_length = len(grades_sorted_index_index_index_index_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index_index_index_index_index_length\
    \ = len(grades_sorted_index_index_index_index_index_index_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index_index_index_index_index_index_length\
    \ = len(grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_length\
    \ = len(grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_index_index_length\
    \ = len(grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_length\
    \ = len(grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_length\
    \ = len(grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_length\
    \ = len(grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index)\n\
    \    \n    grades_", "    \n    grades.sort()\n    \n    grades_length = len(grades)\n\
    \    \n    if grades_length < 1:\n        return []\n    \n    if grades_length\
    \ == 1:\n        return [\"A+\"]\n    \n    if grades_length == 2:\n        return\
    \ [\"A\", \"A-\"]\n    \n    if grades_length == 3:\n        return [\"B+\", \"\
    B\", \"B-\"]\n    \n    if grades_length == 4:\n        return [\"C+\", \"C\"\
    , \"C-\"]\n    \n    if grades_length == 5:\n        return [\"D+\", \"D\", \"\
    D-\"]\n    \n    if grades_length == 6:\n        return [\"E\"]\n    \n    if\
    \ grades_length == 7:\n        return [\"F\"]\n    \n    if grades_length == 8:\n\
    \        return [\"G\"]\n    \n    if grades_length == 9:\n        return [\"\
    H\"]\n    \n    if grades_length == 10:\n        return [\"I\"]\n    \n    if\
    \ grades_length == 11:\n        return [\"J\"]\n    \n    if grades_length ==\
    \ 12:\n        return [\"K\"]\n    \n    if grades_length == 13:\n        return\
    \ [\"L\"]\n    \n    if grades_length == 14:\n        return [\"M\"]\n    \n \
    \   if grades_length == 15:\n        return [\"N\"]\n    \n    if grades_length\
    \ == 16:\n        return [\"O\"]\n    \n    if grades_length == 17:\n        return\
    \ [\"P\"]\n    \n    if grades_length == 18:\n        return [\"Q\"]\n    \n \
    \   if grades_length == 19:\n        return [\"R\"]\n    \n    if grades_length\
    \ == 20:\n        return [\"S\"]\n    \n    if grades_length == 21:\n        return\
    \ [\"T\"]\n    \n    if grades_length == 22:\n        return [\"U\"]\n    \n \
    \   if grades_length == 23:\n        return [\"V\"]\n    \n    if grades_length\
    \ == 24:\n        return [\"W\"]\n    \n    if grades_length == 25:\n        return\
    \ [\"X\"]\n    \n    if grades_length == 26:\n        return [\"Y\"]\n    \n \
    \   if grades_length == 27:\n        return [\"Z\"]\n    \n    if grades_length\
    \ == 28:\n        return [\"AA\"]\n    \n    if grades_length == 29:\n       \
    \ return [\"AB\"]\n    \n    if grades_length == 30:\n        return [\"AC\"]\n\
    \    \n    if grades_length == 31:\n        return [\"AD\"]\n    \n    if grades_length\
    \ == 32:\n        return [\"AE\"]\n    \n    if grades_length == 33:\n       \
    \ return [\"AF\"]\n    \n", "    \n    grades_sorted = sorted(grades)\n    grades_sorted.reverse()\n\
    \    grades_sorted.insert(0, 0.0)\n    grades_sorted.append(0.0)\n    \n    grades_sorted\
    \ = [str(grade) for grade in grades_sorted]\n    \n    grades_sorted = [grades_sorted[grades_sorted.index(\"\
    E\")+1:grades_sorted.index(\"D\")] for grade in grades_sorted]\n    \n    grades_sorted\
    \ = [grades_sorted[grades_sorted.index(\"D\")+1:grades_sorted.index(\"C\")] for\
    \ grade in grades_sorted]\n    \n    grades_sorted = [grades_sorted[grades_sorted.index(\"\
    C\")+1:grades_sorted.index(\"B\")] for grade in grades_sorted]\n    \n    grades_sorted\
    \ = [grades_sorted[grades_sorted.index(\"B\")+1:grades_sorted.index(\"A\")] for\
    \ grade in grades_sorted]\n    \n    grades_sorted = [grades_sorted[grades_sorted.index(\"\
    A\")+1:] for grade in grades_sorted]\n    \n    grades_sorted = [grades_sorted[grades_sorted.index(\"\
    E\")+1:] for grade in grades_sorted]\n    \n    grades_sorted = [grades_sorted[grades_sorted.index(\"\
    D\")+1:] for grade in grades_sorted]\n    \n    grades_sorted = [grades_sorted[grades_sorted.index(\"\
    C\")+1:] for grade in grades_sorted]\n    \n    grades_sorted = [grades_sorted[grades_sorted.index(\"\
    B\")+1:] for grade in grades_sorted]\n    \n    grades_sorted = [grades_sorted[grades_sorted.index(\"\
    A\")+1:] for grade in grades_sorted]\n    \n    grades_sorted = [grades_sorted[grades_sorted.index(\"\
    A\")+1:] for grade in grades_sorted]\n    \n    grades_sorted = [grades_sorted[grades_sorted.index(\"\
    B\")+1:] for grade in grades_sorted]\n    \n    grades_sorted = [grades_sorted[grades_sorted.index(\"\
    C\")+1:] for grade in grades_sorted]\n    \n    grades_sorted = [grades_sorted[grades_sorted.index(\"\
    D\")+1:] for ", "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", " \
    \   \n    grades_sorted = sorted(grades)\n    \n    letter_grades = []\n    \n\
    \    for grade in grades_sorted:\n        if grade >= 3.0:\n            letter_grades.append('A+')\n\
    \        elif grade >= 2.7:\n            letter_grades.append('B')\n        elif\
    \ grade >= 2.3:\n            letter_grades.append('B-')\n        elif grade >=\
    \ 1.7:\n            letter_grades.append('C')\n        elif grade >= 1.3:\n  \
    \          letter_grades.append('C-')\n        elif grade >= 1.0:\n          \
    \  letter_grades.append('D+')\n        elif grade >= 0.7:\n            letter_grades.append('D')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n\
    \            letter_grades.append('E')\n    \n    return letter_grades\n", " \
    \   \n    grades.sort()\n    \n    grades_length = len(grades)\n    \n    letter_grades\
    \ = []\n    \n    if grades_length < 1:\n        return letter_grades\n    \n\
    \    if grades_length == 1:\n        letter_grades.append('A')\n        return\
    \ letter_grades\n    \n    if grades_length == 2:\n        letter_grades.append('A')\n\
    \        letter_grades.append('B')\n        return letter_grades\n    \n    if\
    \ grades_length == 3:\n        letter_grades.append('A')\n        letter_grades.append('B')\n\
    \        letter_grades.append('C')\n        return letter_grades\n    \n    if\
    \ grades_length == 4:\n        letter_grades.append('A')\n        letter_grades.append('B')\n\
    \        letter_grades.append('C')\n        letter_grades.append('D')\n      \
    \  return letter_grades\n    \n    if grades_length == 5:\n        letter_grades.append('A')\n\
    \        letter_grades.append('B')\n        letter_grades.append('C')\n      \
    \  letter_grades.append('D')\n        letter_grades.append('E')\n        return\
    \ letter_grades\n    \n    if grades_length == 6:\n        letter_grades.append('A')\n\
    \        letter_grades.append('B')\n        letter_grades.append('C')\n      \
    \  letter_grades.append('D')\n        letter_grades.append('E')\n        letter_grades.append('F')\n\
    \        return letter_grades\n    \n    if grades_length == 7:\n        letter_grades.append('A')\n\
    \        letter_grades.append('B')\n        letter_grades.append('C')\n      \
    \  letter_grades.append('D')\n        letter_grades.append('E')\n        letter_grades.append('F')\n\
    \        letter_grades.append('G')\n        return letter_grades\n    \n    if\
    \ grades_length == 8:\n        letter_grades.append('A')\n        letter_grades.append('B')\n\
    \        letter_grades.append('C')\n        letter_grades.append('D')\n      \
    \  letter_grades.append('E')\n        letter_grades.append('F')\n        letter_grades.append('G')\n\
    \        letter_grades.append('H')\n        return letter_grades\n    \n    if\
    \ grades_length == 9:\n        letter_grades.append('A')\n        letter_grades.append('B')\n\
    \        letter_grades.append('C')\n        letter_grades.append('D')\n      \
    \  letter_grades.append('E')\n        letter_grades.append('F')\n        letter_grades.append('G')\n\
    \        letter_grades.append('H')\n        letter_grades.append('I')\n      \
    \  return letter_grades\n    \n    if grades_length == 10:\n        letter_grades.append('A')\n\
    \        letter_grades.append('B')\n        letter_grades.append('C')\n      \
    \  letter_grades.append('D')\n", "    \n    grades_sorted = sorted(grades)\n \
    \   \n    letter_grades = []\n    \n    \n    for grade in grades_sorted:\n  \
    \      if grade >= 3.0:\n            letter_grades.append('A+')\n        elif\
    \ grade >= 2.7:\n            letter_grades.append('B+')\n        elif grade >=\
    \ 2.3:\n            letter_grades.append('B-')\n        elif grade >= 1.7:\n \
    \           letter_grades.append('C+')\n        elif grade >= 1.3:\n         \
    \   letter_grades.append('C-')\n        elif grade >= 1.0:\n            letter_grades.append('D+')\n\
    \        elif grade >= 0.7:\n            letter_grades.append('D')\n        elif\
    \ grade >= 0.0:\n            letter_grades.append('D-')\n        elif grade <=\
    \ 0.0:\n            letter_grades.append('E')\n        else:\n            letter_grades.append('F')\n\
    \    \n    return letter_grades\n", "    \n    grades.sort()\n    \n    grades_length\
    \ = len(grades)\n    \n    if grades_length < 4:\n        return ['E']\n    \n\
    \    if grades_length < 5:\n        return ['D-']\n    \n    if grades_length\
    \ < 6:\n        return ['C-', 'C', 'A-', 'A+']\n    \n    if grades_length < 7:\n\
    \        return ['B-', 'B', 'A-', 'A+']\n    \n    if grades_length < 8:\n   \
    \     return ['B-', 'B', 'A-', 'A+']\n    \n    if grades_length < 9:\n      \
    \  return ['B-', 'B', 'A-', 'A+']\n    \n    if grades_length < 10:\n        return\
    \ ['B-', 'B', 'A-', 'A+']\n    \n    if grades_length < 11:\n        return ['B-',\
    \ 'B', 'A-', 'A+']\n    \n    if grades_length < 12:\n        return ['B-', 'B',\
    \ 'A-', 'A+']\n    \n    if grades_length < 13:\n        return ['B-', 'B', 'A-',\
    \ 'A+']\n    \n    if grades_length < 14:\n        return ['B-', 'B', 'A-', 'A+']\n\
    \    \n    if grades_length < 15:\n        return ['B-', 'B', 'A-', 'A+']\n  \
    \  \n    if grades_length < 16:\n        return ['B-', 'B', 'A-', 'A+']\n    \n\
    \    if grades_length < 17:\n        return ['B-', 'B', 'A-', 'A+']\n    \n  \
    \  if grades_length < 18:\n        return ['B-', 'B', 'A-', 'A+']\n    \n    if\
    \ grades_length < 19:\n        return ['B-', 'B', 'A-', 'A+']\n    \n    if grades_length\
    \ < 20:\n        return ['B-', 'B', 'A-', 'A+']\n    \n    if grades_length <\
    \ 21:\n        return ['B-', 'B', 'A-', 'A+']\n    \n    if grades_length < 22:\n\
    \        return ['B-', 'B', 'A-', 'A+']\n    \n    if grades_length < 23:\n  \
    \      return ['B-', 'B', 'A-', 'A+']\n    \n    if grades_length < 24:\n    \
    \    return ['B-', 'B', 'A-', 'A+']\n    \n    if grades_length < 25:\n      \
    \  return ['B-', 'B', 'A-', 'A+']\n    \n    if grades_length < 26:\n        return\
    \ ['B-', 'B', 'A-', 'A+']\n    \n    if grades_length < 27:\n        return ['B-',\
    \ 'B', 'A-', 'A+']\n    \n    if grades_length < 28:\n        return ['B-', 'B',\
    \ 'A-', 'A+']\n    \n    if grades_length < 29:\n        return ['B-', 'B', 'A-',\
    \ 'A+']\n    \n    if grades_length", "    \n    grades.sort()\n    \n    grades_length\
    \ = len(grades)\n    \n    if grades_length < 4:\n        return ['E']\n    \n\
    \    if grades_length < 5:\n        return ['D-']\n    \n    if grades_length\
    \ < 6:\n        return ['C-', 'C']\n    \n    if grades_length < 7:\n        return\
    \ ['B-', 'B']\n    \n    if grades_length < 8:\n        return ['A-', 'A']\n \
    \   \n    if grades_length < 9:\n        return ['A-', 'A+']\n    \n    if grades_length\
    \ < 10:\n        return ['B+', 'B']\n    \n    if grades_length < 11:\n      \
    \  return ['B', 'B+']\n    \n    if grades_length < 12:\n        return ['B',\
    \ 'B-']\n    \n    if grades_length < 13:\n        return ['B', 'B-', 'C']\n \
    \   \n    if grades_length < 14:\n        return ['B', 'B-', 'C+']\n    \n   \
    \ if grades_length < 15:\n        return ['B', 'B-', 'C+', 'D']\n    \n    if\
    \ grades_length < 16:\n        return ['B', 'B-', 'C+', 'D+']\n    \n    if grades_length\
    \ < 17:\n        return ['B', 'B-', 'C+', 'D+', 'E']\n    \n    if grades_length\
    \ < 18:\n        return ['B', 'B-', 'C+', 'D+', 'E+']\n    \n    if grades_length\
    \ < 19:\n        return ['B', 'B-', 'C+', 'D+', 'E+', 'A']\n    \n    if grades_length\
    \ < 20:\n        return ['B', 'B-', 'C+', 'D+', 'E+', 'A+']\n    \n    if grades_length\
    \ < 21:\n        return ['B', 'B-', 'C+', 'D+', 'E+', 'A+']\n    \n    if grades_length\
    \ < 22:\n        return ['B', 'B-', 'C+', 'D+', 'E+', 'A+']\n    \n    if grades_length\
    \ < 23:\n        return ['B', 'B-', 'C+', 'D+', 'E+', 'A+']\n    \n    if grades_length\
    \ < 24:\n        return ['B', 'B-', 'C+', 'D+', 'E+', 'A+']\n    \n    if grades_length\
    \ < 25:\n        return ['B', 'B-', 'C+', 'D+', 'E+', 'A+']\n    \n    if grades_length\
    \ < 26:\n        return ['B', 'B-', 'C+', 'D+', 'E+', 'A+']\n    \n    if grades_length\
    \ < 27:\n        return ['B', 'B-', 'C+', 'D+', 'E+', 'A+']\n    \n    if grades_length\
    \ < 28:\n        return ['B', 'B-', 'C+', 'D+', 'E+', 'A+", "    \n    grades_sorted\
    \ = sorted(grades)\n    \n    letter_grades = []\n    \n    for grade in grades_sorted:\n\
    \        if grade >= 3.0:\n            letter_grades.append('A+')\n        elif\
    \ grade >= 2.7:\n            letter_grades.append('B')\n        elif grade >=\
    \ 2.3:\n            letter_grades.append('B-')\n        elif grade >= 1.7:\n \
    \           letter_grades.append('C')\n        elif grade >= 1.3:\n          \
    \  letter_grades.append('C-')\n        elif grade >= 1.0:\n            letter_grades.append('D+')\n\
    \        elif grade >= 0.7:\n            letter_grades.append('D')\n        elif\
    \ grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n     \
    \       letter_grades.append('E')\n    \n    return letter_grades\n", "    \n\
    \    grades_sorted = sorted(grades)\n    \n    letter_grades = []\n    \n    for\
    \ grade in grades_sorted:\n        if grade >= 3.0:\n            letter_grades.append('A+')\n\
    \        elif grade >= 2.7:\n            letter_grades.append('B')\n        elif\
    \ grade >= 2.3:\n            letter_grades.append('B-')\n        elif grade >=\
    \ 1.7:\n            letter_grades.append('C')\n        elif grade >= 1.3:\n  \
    \          letter_grades.append('C-')\n        elif grade >= 1.0:\n          \
    \  letter_grades.append('D+')\n        elif grade >= 0.7:\n            letter_grades.append('D')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n\
    \            letter_grades.append('E')\n    \n    return letter_grades\n", " \
    \   \n    grades_sorted = sorted(grades)\n    \n    letter_grades = []\n    \n\
    \    for grade in grades_sorted:\n        if grade >= 3.0:\n            letter_grades.append('A+')\n\
    \        elif grade >= 2.7:\n            letter_grades.append('B')\n        elif\
    \ grade >= 2.3:\n            letter_grades.append('B-')\n        elif grade >=\
    \ 1.7:\n            letter_grades.append('C')\n        elif grade >= 1.3:\n  \
    \          letter_grades.append('C-')\n        elif grade >= 1.0:\n          \
    \  letter_grades.append('D+')\n        elif grade >= 0.7:\n            letter_grades.append('D')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n\
    \            letter_grades.append('E')\n    \n    return letter_grades\n", " \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    grades.sort()\n\
    \    \n    letter_grades = []\n    \n    for grade in grades:\n        if grade\
    \ < 3.0:\n            letter_grades.append('A')\n        elif grade < 4.0:\n \
    \           letter_grades.append('A-')\n        elif grade < 5.0:\n          \
    \  letter_grades.append('B+')\n        elif grade < 6.0:\n            letter_grades.append('B')\n\
    \        elif grade < 7.0:\n            letter_grades.append('B-')\n        elif\
    \ grade < 8.0:\n            letter_grades.append('C+')\n        elif grade < 9.0:\n\
    \            letter_grades.append('C')\n        elif grade < 10.0:\n         \
    \   letter_grades.append('C-')\n        elif grade < 11.0:\n            letter_grades.append('D+')\n\
    \        elif grade < 12.0:\n            letter_grades.append('D')\n        elif\
    \ grade < 13.0:\n            letter_grades.append('D-')\n        elif grade <\
    \ 14.0:\n            letter_grades.append('E')\n        else:\n            letter_grades.append('F')\n\
    \    \n    return letter_grades\n", "    \n    grades_sorted = sorted(grades)\n\
    \    \n    letter_grades = []\n    \n    for grade in grades_sorted:\n       \
    \ if grade >= 3.0:\n            letter_grades.append('A+')\n        elif grade\
    \ >= 2.0:\n            letter_grades.append('A')\n        elif grade >= 1.7:\n\
    \            letter_grades.append('A-')\n        elif grade >= 1.3:\n        \
    \    letter_grades.append('B+')\n        elif grade >= 1.0:\n            letter_grades.append('B')\n\
    \        elif grade >= 0.7:\n            letter_grades.append('B-')\n        elif\
    \ grade >= 0.0:\n            letter_grades.append('C+')\n        elif grade >=\
    \ 0.0:\n            letter_grades.append('C')\n        elif grade >= 0.0:\n  \
    \          letter_grades.append('C-')\n        elif grade >= 0.0:\n          \
    \  letter_grades.append('D+')\n        elif grade >= 0.0:\n            letter_grades.append('D')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('D-')\n        elif\
    \ grade >= 0.0:\n            letter_grades.append('E')\n        else:\n      \
    \      letter_grades.append('F')\n            \n    return letter_grades\n</cell>\n\
    <cell>", "    \n    letter_grades = []\n    \n    for grade in grades:\n     \
    \   if grade >= 3.0:\n            letter_grades.append('A+')\n        elif grade\
    \ >= 2.7:\n            letter_grades.append('B+')\n        elif grade >= 2.3:\n\
    \            letter_grades.append('B-')\n        elif grade >= 1.7:\n        \
    \    letter_grades.append('C+')\n        elif grade >= 1.3:\n            letter_grades.append('C-')\n\
    \        elif grade >= 1.0:\n            letter_grades.append('D+')\n        elif\
    \ grade >= 0.7:\n            letter_grades.append('D')\n        elif grade >=\
    \ 0.0:\n            letter_grades.append('D-')\n        else:\n            letter_grades.append('E')\n\
    \    \n    return letter_grades\n", "    \n    grades_sorted = sorted(grades)\n\
    \    grades_sorted.reverse()\n    grades_sorted = [str(grade) for grade in grades_sorted]\n\
    \    grades_sorted = grades_sorted[:5]\n    grades_sorted.reverse()\n    grades_sorted\
    \ = [grades_sorted[grades_sorted.index(grade) + 1] for grade in grades_sorted]\n\
    \    grades_sorted = [grades_sorted[grades_sorted.index(grade) - 1] for grade\
    \ in grades_sorted]\n    grades_sorted = [grades_sorted[grades_sorted.index(grade)\
    \ + 1] for grade in grades_sorted]\n    grades_sorted = [grades_sorted[grades_sorted.index(grade)\
    \ - 1] for grade in grades_sorted]\n    grades_sorted = [grades_sorted[grades_sorted.index(grade)\
    \ + 1] for grade in grades_sorted]\n    grades_sorted = [grades_sorted[grades_sorted.index(grade)\
    \ - 1] for grade in grades_sorted]\n    grades_sorted = [grades_sorted[grades_sorted.index(grade)\
    \ + 1] for grade in grades_sorted]\n    grades_sorted = [grades_sorted[grades_sorted.index(grade)\
    \ - 1] for grade in grades_sorted]\n    grades_sorted = [grades_sorted[grades_sorted.index(grade)\
    \ + 1] for grade in grades_sorted]\n    grades_sorted = [grades_sorted[grades_sorted.index(grade)\
    \ - 1] for grade in grades_sorted]\n    grades_sorted = [grades_sorted[grades_sorted.index(grade)\
    \ + 1] for grade in grades_sorted]\n    grades_sorted = [grades_sorted[grades_sorted.index(grade)\
    \ - 1] for grade in grades_sorted]\n    grades_sorted = [grades_sorted[grades_sorted.index(grade)\
    \ + 1] for grade in grades_sorted]\n    grades_sorted = [grades_sorted[grades_sorted.index(grade)\
    \ - 1] for grade in grades_sorted]\n    grades_sorted = [grades_sorted[grades_sorted.index(grade)\
    \ + 1] for grade in grades_sorted]\n    grades_sorted = [grades_sorted[grades_sorted.index(grade)\
    \ - 1] for grade in grades_sorted]\n    grades_sorted = [grades_sorted[grades_sorted.index(grade)\
    \ + 1] for grade in grades_sorted", "    \n    grades_sorted = sorted(grades)\n\
    \    \n    grades_sorted_reverse = sorted(grades_sorted, reverse=True)\n    \n\
    \    grades_sorted_reverse.reverse()\n    \n    grades_sorted_reverse.reverse()\n\
    \    \n    grades_sorted_reverse.reverse()\n    \n    grades_sorted_reverse.reverse()\n\
    \    \n    grades_sorted_reverse.reverse()\n    \n    grades_sorted_reverse.reverse()\n\
    \    \n    grades_sorted_reverse.reverse()\n    \n    grades_sorted_reverse.reverse()\n\
    \    \n    grades_sorted_reverse.reverse()\n    \n    grades_sorted_reverse.reverse()\n\
    \    \n    grades_sorted_reverse.reverse()\n    \n    grades_sorted_reverse.reverse()\n\
    \    \n    grades_sorted_reverse.reverse()\n    \n    grades_sorted_reverse.reverse()\n\
    \    \n    grades_sorted_reverse.reverse()\n    \n    grades_sorted_reverse.reverse()\n\
    \    \n    grades_sorted_reverse.reverse()\n    \n    grades_sorted_reverse.reverse()\n\
    \    \n    grades_sorted_reverse.reverse()\n    \n    grades_sorted_reverse.reverse()\n\
    \    \n    grades_sorted_reverse.reverse()\n    \n    grades_sorted_reverse.reverse()\n\
    \    \n    grades_sorted_reverse.reverse()\n    \n    grades_sorted_reverse.reverse()\n\
    \    \n    grades_sorted_reverse.reverse()\n    \n    grades_sorted_reverse.reverse()\n\
    \    \n    grades_sorted_reverse.reverse()\n    \n    grades_sorted_reverse.reverse()\n\
    \    \n    grades_sorted_reverse.reverse()\n    \n    grades_sorted_reverse.reverse()\n\
    \    \n    grades_sorted_reverse.reverse()\n    \n    grades_sorted_reverse.reverse()\n\
    \    \n    grades_sorted_reverse.reverse()\n    \n    grades_sorted_reverse.reverse()\n\
    \    \n    grades_sorted_reverse.reverse()\n    \n    grades_sorted_reverse.reverse()\n\
    \    \n    grades_sorted_reverse.reverse()\n    \n    grades_sorted_reverse.reverse()\n\
    \    \n    grades_sorted_reverse.reverse()\n    \n    grades_sorted_reverse.reverse()\n\
    \    \n    grades_sorted_reverse.reverse()\n    \n    grades_sorted_reverse.reverse()\n\
    \    \n    grades_sorted_reverse.reverse()\n    \n    grades_sorted_reverse.reverse()\n\
    \    \n    grades_sorted_reverse.reverse()\n    \n    grades_sorted_reverse.reverse()\n\
    \    \n    grades_sorted_reverse.reverse()\n    \n    grades_sorted_reverse.reverse()\n\
    \    \n    grades_sorted_", "    \n    grades_sorted = sorted(grades)\n    grades_sorted.reverse()\n\
    \    \n    letter_grades = []\n    \n    for grade in grades_sorted:\n       \
    \ if grade < 3.0:\n            letter_grades.append('A+')\n        elif grade\
    \ < 4.0:\n            letter_grades.append('A')\n        elif grade < 5.0:\n \
    \           letter_grades.append('A-')\n        elif grade < 6.0:\n          \
    \  letter_grades.append('B+')\n        elif grade < 7.0:\n            letter_grades.append('B')\n\
    \        elif grade < 8.0:\n            letter_grades.append('B-')\n        elif\
    \ grade < 9.0:\n            letter_grades.append('C+')\n        elif grade < 10.0:\n\
    \            letter_grades.append('C')\n        elif grade < 11.0:\n         \
    \   letter_grades.append('C-')\n        elif grade < 12.0:\n            letter_grades.append('D+')\n\
    \        elif grade < 13.0:\n            letter_grades.append('D')\n        elif\
    \ grade < 14.0:\n            letter_grades.append('D-')\n        elif grade <\
    \ 15.0:\n            letter_grades.append('E')\n        else:\n            letter_grades.append('F')\n\
    \    \n    return letter_grades\n", "    \n    grades.sort()\n    \n    letter_grades\
    \ = []\n    \n    grade = grades[-1]\n    \n    if grade >= 4.0:\n        letter_grades.append('A+')\n\
    \    elif grade >= 3.7:\n        letter_grades.append('A')\n    elif grade >=\
    \ 3.3:\n        letter_grades.append('A-')\n    elif grade >= 3.0:\n        letter_grades.append('B+')\n\
    \    elif grade >= 2.7:\n        letter_grades.append('B')\n    elif grade >=\
    \ 2.3:\n        letter_grades.append('B-')\n    elif grade >= 2.0:\n        letter_grades.append('C+')\n\
    \    elif grade >= 1.7:\n        letter_grades.append('C')\n    elif grade >=\
    \ 1.3:\n        letter_grades.append('C-')\n    elif grade >= 1.0:\n        letter_grades.append('D+')\n\
    \    elif grade >= 0.7:\n        letter_grades.append('D')\n    elif grade >=\
    \ 0.0:\n        letter_grades.append('D-')\n    else:\n        letter_grades.append('E')\n\
    \    \n    return letter_grades\n", "    \n    grades.sort()\n    \n    grades_length\
    \ = len(grades)\n    \n    if grades_length == 0:\n        return []\n    \n \
    \   if grades_length == 1:\n        return ['A+']\n    \n    if grades_length\
    \ == 2:\n        return ['A+', 'B']\n    \n    if grades_length == 3:\n      \
    \  return ['A+', 'B', 'C']\n    \n    if grades_length == 4:\n        return ['A+',\
    \ 'B', 'C-']\n    \n    if grades_length == 5:\n        return ['A+', 'B', 'C-',\
    \ 'C']\n    \n    if grades_length == 6:\n        return ['A+', 'B', 'C-', 'C-']\n\
    \    \n    if grades_length == 7:\n        return ['A+', 'B', 'C-', 'C-', 'C']\n\
    \    \n    if grades_length == 8:\n        return ['A+', 'B', 'C-', 'C-', 'C-']\n\
    \    \n    if grades_length == 9:\n        return ['A+', 'B', 'C-', 'C-', 'C-',\
    \ 'C']\n    \n    if grades_length == 10:\n        return ['A+', 'B', 'C-', 'C-',\
    \ 'C-', 'C-']\n    \n    if grades_length == 11:\n        return ['A+', 'B', 'C-',\
    \ 'C-', 'C-', 'C-', 'C']\n    \n    if grades_length == 12:\n        return ['A+',\
    \ 'B', 'C-', 'C-', 'C-', 'C-', 'C-', 'C']\n    \n    if grades_length == 13:\n\
    \        return ['A+', 'B', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-']\n    \n    if\
    \ grades_length == 14:\n        return ['A+', 'B', 'C-', 'C-', 'C-', 'C-', 'C-',\
    \ 'C-', 'C']\n    \n    if grades_length == 15:\n        return ['A+', 'B', 'C-',\
    \ 'C-', 'C-', 'C-', 'C-', 'C-', 'C-']\n    \n    if grades_length == 16:\n   \
    \     return ['A+', 'B', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-']\n   \
    \ \n    if grades_length == 17:\n        return ['A+', 'B', 'C-', 'C-', 'C-',\
    \ 'C-', 'C-', 'C-', 'C-', 'C-', 'C']\n    \n    if grades_length == 18:\n    \
    \    return ['A+', 'B', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-']\n\
    \    \n    if grades_length == 19:\n        return ['A+', 'B', 'C-', 'C-', 'C-',\
    \ 'C-', 'C-', 'C-', 'C-', 'C-', 'C-']\n    \n    if grades_length == 20:\n   \
    \     return ['A+', 'B', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-',\
    \ 'C']\n    \n    if grades_length == 2", "    \n    grades_sorted = sorted(grades)\n\
    \    \n    grades_sorted_length = len(grades_sorted)\n    \n    letter_grades\
    \ = []\n    \n    if grades_sorted_length == 0:\n        letter_grades.append('E')\n\
    \        return letter_grades\n    \n    if grades_sorted_length == 1:\n     \
    \   letter_grades.append('A')\n        return letter_grades\n    \n    if grades_sorted_length\
    \ == 2:\n        if grades_sorted[0] > grades_sorted[1]:\n            letter_grades.append('A')\n\
    \        else:\n            letter_grades.append('B')\n        return letter_grades\n\
    \    \n    if grades_sorted_length == 3:\n        if grades_sorted[0] > grades_sorted[1]\
    \ and grades_sorted[0] > grades_sorted[2]:\n            letter_grades.append('A')\n\
    \        elif grades_sorted[1] > grades_sorted[2]:\n            letter_grades.append('B')\n\
    \        else:\n            letter_grades.append('C')\n        return letter_grades\n\
    \    \n    if grades_sorted_length == 4:\n        if grades_sorted[0] > grades_sorted[1]\
    \ and grades_sorted[0] > grades_sorted[2] and grades_sorted[0] > grades_sorted[3]:\n\
    \            letter_grades.append('A')\n        elif grades_sorted[1] > grades_sorted[2]\
    \ and grades_sorted[1] > grades_sorted[3]:\n            letter_grades.append('B')\n\
    \        elif grades_sorted[2] > grades_sorted[3]:\n            letter_grades.append('C')\n\
    \        else:\n            letter_grades.append('D')\n        return letter_grades\n\
    \    \n    if grades_sorted_length == 5:\n        if grades_sorted[0] > grades_sorted[1]\
    \ and grades_sorted[0] > grades_sorted[2] and grades_sorted[0] > grades_sorted[3]\
    \ and grades_sorted[0] > grades_sorted[4]:\n            letter_grades.append('A')\n\
    \        elif grades_sorted[1] > grades_sorted[2] and grades_sorted[1] > grades_sorted[3]\
    \ and grades_sorted[1] > grades_sorted[4]:\n            letter_grades.append('B')\n\
    \        elif grades_sorted[2] > grades_sorted[3] and grades_sorted[2] > grades_sorted[4]:\n\
    \            letter_grades.append('C')\n        elif grades_sorted[3] > grades_sorted[4]:\n\
    \            letter_grades.append('D')\n        else:\n            letter_grades.append('E')\n\
    \        return letter_grades\n    \n    if grades_sorted_length == 6:\n     \
    \   if grades_sorted[0] > grades_sorted[1] and grades_sorted[0] > grades_sorted[2]\
    \ and grades_sorted[0] > grades_sorted[3] and grades_sorted[0] > grades_sorted[4]\
    \ and grades_sorted[0] > ", "    \n    grades.sort()\n    grades_length = len(grades)\n\
    \    \n    if grades_length < 1:\n        return []\n    \n    grades_average\
    \ = sum(grades)/grades_length\n    \n    if grades_average < 3.0:\n        grades_average\
    \ = 3.0\n    \n    if grades_average > 3.7:\n        grades_average = 3.7\n  \
    \  \n    grades_average = grades_average/4.0\n    \n    grades_average = round(grades_average,\
    \ 2)\n    \n    if grades_average < 3.0:\n        grades_average = 3.0\n    \n\
    \    if grades_average > 3.7:\n        grades_average = 3.7\n    \n    grades_average\
    \ = grades_average/4.0\n    \n    grades_average = round(grades_average, 2)\n\
    \    \n    if grades_average < 3.0:\n        grades_average = 3.0\n    \n    if\
    \ grades_average > 3.7:\n        grades_average = 3.7\n    \n    grades_average\
    \ = grades_average/4.0\n    \n    grades_average = round(grades_average, 2)\n\
    \    \n    if grades_average < 3.0:\n        grades_average = 3.0\n    \n    if\
    \ grades_average > 3.7:\n        grades_average = 3.7\n    \n    grades_average\
    \ = grades_average/4.0\n    \n    grades_average = round(grades_average, 2)\n\
    \    \n    if grades_average < 3.0:\n        grades_average = 3.0\n    \n    if\
    \ grades_average > 3.7:\n        grades_average = 3.7\n    \n    grades_average\
    \ = grades_average/4.0\n    \n    grades_average = round(grades_average, 2)\n\
    \    \n    if grades_average < 3.0:\n        grades_average = 3.0\n    \n    if\
    \ grades_average > 3.7:\n        grades_average = 3.7\n    \n    grades_average\
    \ = grades_average/4.0\n    \n    grades_average = round(grades_average, 2)\n\
    \    \n    if grades_average < 3.0:\n        grades_average = 3.0\n    \n    if\
    \ grades_average > 3.7:\n        grades_average = 3.7\n    \n    grades_average\
    \ = grades_average/4.0\n    \n    grades_average = round(grades_average, 2)\n\
    \    \n    if grades_average < 3.0:\n        grades_average = 3.0\n    \n    if\
    \ grades_average > 3.7:\n        grades_average = 3.7\n    \n    grades_average\
    \ = grades_average/4.0", "    \n    grades_sorted = sorted(grades)\n    \n   \
    \ letter_grades = []\n    \n    for grade in grades_sorted:\n        if grade\
    \ > 3.0:\n            letter_grades.append('A+')\n        elif grade > 2.7:\n\
    \            letter_grades.append('B')\n        elif grade > 2.3:\n          \
    \  letter_grades.append('B-')\n        elif grade > 1.7:\n            letter_grades.append('C')\n\
    \        elif grade > 1.3:\n            letter_grades.append('C-')\n        elif\
    \ grade > 1.0:\n            letter_grades.append('D+')\n        elif grade > 0.7:\n\
    \            letter_grades.append('D')\n        elif grade > 0.0:\n          \
    \  letter_grades.append('D-')\n        else:\n            letter_grades.append('E')\n\
    \    \n    return letter_grades\n", "    \n    grades.sort()\n    \n    grades_length\
    \ = len(grades)\n    \n    if grades_length < 1:\n        return []\n    \n  \
    \  if grades_length == 1:\n        return [\"A+\"]\n    \n    if grades_length\
    \ == 2:\n        if grades[0] > grades[1]:\n            return [\"A+\"]\n    \
    \    else:\n            return [\"A-\"]\n    \n    if grades_length == 3:\n  \
    \      if grades[0] > grades[1] and grades[0] > grades[2]:\n            return\
    \ [\"A+\"]\n        elif grades[0] > grades[1] and grades[0] < grades[2]:\n  \
    \          return [\"A-\"]\n        elif grades[0] < grades[1] and grades[0] >\
    \ grades[2]:\n            return [\"B+\"]\n        elif grades[0] < grades[1]\
    \ and grades[0] < grades[2]:\n            return [\"B\"]\n        elif grades[0]\
    \ < grades[1] and grades[0] == grades[2]:\n            return [\"B-\"]\n     \
    \   elif grades[0] == grades[1] and grades[0] > grades[2]:\n            return\
    \ [\"C+\"]\n        elif grades[0] == grades[1] and grades[0] < grades[2]:\n \
    \           return [\"C\"]\n        elif grades[0] == grades[1] and grades[0]\
    \ == grades[2]:\n            return [\"C-\"]\n        elif grades[0] > grades[1]\
    \ and grades[0] < grades[2]:\n            return [\"D+\"]\n        elif grades[0]\
    \ > grades[1] and grades[0] == grades[2]:\n            return [\"D\"]\n      \
    \  elif grades[0] == grades[1] and grades[0] < grades[2]:\n            return\
    \ [\"D-\"]\n        elif grades[0] == grades[1] and grades[0] == grades[2]:\n\
    \            return [\"E\"]\n    \n    if grades_length == 4:\n        if grades[0]\
    \ > grades[1] and grades[0] > grades[2] and grades[0] > grades[3]:\n         \
    \   return [\"A+\"]\n        elif grades[0] > grades[1] and grades[0] < grades[2]\
    \ and grades[0] > grades[3]:\n            return [\"A-\"]\n        elif grades[0]\
    \ < grades[1] and grades[0] > grades[2] and grades[0] > grades[3]:\n         \
    \   return [\"B+\"]\n        elif grades[0] < grades[1] and grades[0] < grades[2]\
    \ and grades[0] > grades[3]:\n            return [\"B\"]\n        elif grades[0]\
    \ < grades[1] and grades[0] == grades[2] and grades[0] > grades[3]:\n        \
    \    return [\"B-\"]\n        elif grades[0] == grades[1] and grades[0] > grades[2]\
    \ and grades[0] > grades[3]:\n            return [\"C+\"]\n        elif grades[0]\
    \ == grades[1] and grades[0] < grades[2] and grades[0] > grades[3]:\n        \
    \    return [\"C\"]\n        elif grades[0] == grades[1] and ", "    \n    grades_sorted\
    \ = sorted(grades)\n    \n    letter_grades = []\n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    grades.sort()\n\
    \    \n    grades_len = len(grades)\n    \n    if grades_len == 0:\n        return\
    \ []\n    \n    if grades_len == 1:\n        return [\"A+\"]\n    \n    if grades_len\
    \ == 2:\n        if grades[0] > grades[1]:\n            return [\"A+\"]\n    \
    \    else:\n            return [\"A\"]\n    \n    if grades_len == 3:\n      \
    \  if grades[0] > grades[1] and grades[0] > grades[2]:\n            return [\"\
    A+\"]\n        elif grades[1] > grades[2]:\n            return [\"A\"]\n     \
    \   else:\n            return [\"A-\"]\n    \n    if grades_len == 4:\n      \
    \  if grades[0] > grades[1] and grades[0] > grades[2] and grades[0] > grades[3]:\n\
    \            return [\"A+\"]\n        elif grades[1] > grades[2] and grades[1]\
    \ > grades[3]:\n            return [\"A\"]\n        elif grades[2] > grades[3]:\n\
    \            return [\"A-\"]\n        else:\n            return [\"B+\"]\n   \
    \ \n    if grades_len == 5:\n        if grades[0] > grades[1] and grades[0] >\
    \ grades[2] and grades[0] > grades[3] and grades[0] > grades[4]:\n           \
    \ return [\"A+\"]\n        elif grades[1] > grades[2] and grades[1] > grades[3]\
    \ and grades[1] > grades[4]:\n            return [\"A\"]\n        elif grades[2]\
    \ > grades[3] and grades[2] > grades[4]:\n            return [\"A-\"]\n      \
    \  elif grades[3] > grades[4]:\n            return [\"B+\"]\n        else:\n \
    \           return [\"B\"]\n    \n    if grades_len == 6:\n        if grades[0]\
    \ > grades[1] and grades[0] > grades[2] and grades[0] > grades[3] and grades[0]\
    \ > grades[4] and grades[0] > grades[5]:\n            return [\"A+\"]\n      \
    \  elif grades[1] > grades[2] and grades[1] > grades[3] and grades[1] > grades[4]\
    \ and grades[1] > grades[5]:\n            return [\"A\"]\n        elif grades[2]\
    \ > grades[3] and grades[2] > grades[4] and grades[2] > grades[5]:\n         \
    \   return [\"A-\"]\n        elif grades[3] > grades[4] and grades[3] > grades[5]:\n\
    \            return [\"B+\"]\n        elif grades[4] > grades[5]:\n          \
    \  return [\"B\"]\n        else:\n            return [\"B-\"]\n    \n    if grades_len\
    \ == 7:\n        if grades[0] > grades[1] and grades[0] > grades[2] and grades[0]\
    \ > grades[3] and grades[0] > grades[4] and grades[0] > grades[5] and grades[0]",
  "    \n    grades.sort()\n    \n    letter_grades = []\n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ", "  \
    \  \n    grades_sorted = sorted(grades)\n    \n    letter_grades = []\n    \n\
    \    for grade in grades_sorted:\n        if grade >= 3.0:\n            letter_grades.append('A+')\n\
    \        elif grade >= 2.7:\n            letter_grades.append('B')\n        elif\
    \ grade >= 2.3:\n            letter_grades.append('B-')\n        elif grade >=\
    \ 1.7:\n            letter_grades.append('C')\n        elif grade >= 1.3:\n  \
    \          letter_grades.append('C-')\n        elif grade >= 1.0:\n          \
    \  letter_grades.append('D+')\n        elif grade >= 0.7:\n            letter_grades.append('D')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n\
    \            letter_grades.append('E')\n    \n    return letter_grades\n", " \
    \   \n    grades_sorted = sorted(grades)\n    \n    letter_grades = []\n    \n\
    \    \n    for grade in grades_sorted:\n        if grade < 3.0:\n            letter_grades.append('A')\n\
    \        elif grade < 3.7:\n            letter_grades.append('A-')\n        elif\
    \ grade < 4.0:\n            letter_grades.append('B+')\n        elif grade < 4.7:\n\
    \            letter_grades.append('B')\n        elif grade < 5.0:\n          \
    \  letter_grades.append('B-')\n        elif grade < 5.7:\n            letter_grades.append('C+')\n\
    \        elif grade < 6.0:\n            letter_grades.append('C')\n        elif\
    \ grade < 6.7:\n            letter_grades.append('C-')\n        elif grade < 7.0:\n\
    \            letter_grades.append('D+')\n        elif grade < 7.7:\n         \
    \   letter_grades.append('D')\n        elif grade < 8.0:\n            letter_grades.append('D-')\n\
    \        elif grade < 8.7:\n            letter_grades.append('E')\n        else:\n\
    \            letter_grades.append('F')\n            \n    return letter_grades\n\
    </cell>\n<cell>", "    \n    grades.sort()\n    \n    grades_len = len(grades)\n\
    \    \n    if grades_len == 0:\n        return []\n    \n    if grades_len ==\
    \ 1:\n        return [\"A+\"]\n    \n    if grades_len == 2:\n        return [\"\
    A\", \"A-\"]\n    \n    if grades_len == 3:\n        return [\"B+\", \"B\", \"\
    B-\"]\n    \n    if grades_len == 4:\n        return [\"C+\", \"C\", \"C-\"]\n\
    \    \n    if grades_len == 5:\n        return [\"D+\", \"D\", \"D-\"]\n    \n\
    \    if grades_len == 6:\n        return [\"E\"]\n    \n    if grades_len == 7:\n\
    \        return [\"F\"]\n    \n    if grades_len == 8:\n        return [\"G\"\
    ]\n    \n    if grades_len == 9:\n        return [\"H\"]\n    \n    if grades_len\
    \ == 10:\n        return [\"I\"]\n    \n    if grades_len == 11:\n        return\
    \ [\"J\"]\n    \n    if grades_len == 12:\n        return [\"K\"]\n    \n    if\
    \ grades_len == 13:\n        return [\"L\"]\n    \n    if grades_len == 14:\n\
    \        return [\"M\"]\n    \n    if grades_len == 15:\n        return [\"N\"\
    ]\n    \n    if grades_len == 16:\n        return [\"O\"]\n    \n    if grades_len\
    \ == 17:\n        return [\"P\"]\n    \n    if grades_len == 18:\n        return\
    \ [\"Q\"]\n    \n    if grades_len == 19:\n        return [\"R\"]\n    \n    if\
    \ grades_len == 20:\n        return [\"S\"]\n    \n    if grades_len == 21:\n\
    \        return [\"T\"]\n    \n    if grades_len == 22:\n        return [\"U\"\
    ]\n    \n    if grades_len == 23:\n        return [\"V\"]\n    \n    if grades_len\
    \ == 24:\n        return [\"W\"]\n    \n    if grades_len == 25:\n        return\
    \ [\"X\"]\n    \n    if grades_len == 26:\n        return [\"Y\"]\n    \n    if\
    \ grades_len == 27:\n        return [\"Z\"]\n    \n    if grades_len == 28:\n\
    \        return [\"AA\"]\n    \n    if grades_len == 29:\n        return [\"AB\"\
    ]\n    \n    if grades_len == 30:\n        return [\"AC\"]\n    \n    if grades_len\
    \ == 31:\n        return [\"AD\"]\n    \n    if grades_len == 32:\n        return\
    \ [\"AE\"]\n    \n    if grades_len == 33:\n        return [\"AF\"]\n    \n  \
    \  if ", "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n\
    \    grades_sorted = sorted(grades)\n    grades_sorted.reverse()\n    grades_sorted\
    \ = [grades_sorted[0]] + grades_sorted\n    grades_sorted = grades_sorted + [grades_sorted[-1]]\n\
    \    grades_sorted = grades_sorted + [grades_sorted[0]]\n    grades_sorted = grades_sorted\
    \ + [grades_sorted[-1]]\n    grades_sorted = grades_sorted + [grades_sorted[0]]\n\
    \    grades_sorted = grades_sorted + [grades_sorted[-1]]\n    grades_sorted =\
    \ grades_sorted + [grades_sorted[0]]\n    grades_sorted = grades_sorted + [grades_sorted[-1]]\n\
    \    grades_sorted = grades_sorted + [grades_sorted[0]]\n    grades_sorted = grades_sorted\
    \ + [grades_sorted[-1]]\n    grades_sorted = grades_sorted + [grades_sorted[0]]\n\
    \    grades_sorted = grades_sorted + [grades_sorted[-1]]\n    grades_sorted =\
    \ grades_sorted + [grades_sorted[0]]\n    grades_sorted = grades_sorted + [grades_sorted[-1]]\n\
    \    grades_sorted = grades_sorted + [grades_sorted[0]]\n    grades_sorted = grades_sorted\
    \ + [grades_sorted[-1]]\n    grades_sorted = grades_sorted + [grades_sorted[0]]\n\
    \    grades_sorted = grades_sorted + [grades_sorted[-1]]\n    grades_sorted =\
    \ grades_sorted + [grades_sorted[0]]\n    grades_sorted = grades_sorted + [grades_sorted[-1]]\n\
    \    grades_sorted = grades_sorted + [grades_sorted[0]]\n    grades_sorted = grades_sorted\
    \ + [grades_sorted[-1]]\n    grades_sorted = grades_sorted + [grades_sorted[0]]\n\
    \    grades_sorted = grades_sorted + [grades_sorted[-1]]\n    grades_sorted =\
    \ grades_sorted + [grades_sorted[0]]\n    grades_sorted = grades_sorted + [grades_sorted[-1]]\n\
    \    grades_sorted = grades_sorted + [grades_sorted[0]]\n    grades_sorted = grades_sorted\
    \ + [grades_sorted[-1]]\n    grades_sorted = grades_sorted + [grades_sorted[0]]\n\
    \    grades_sorted = grades_sorted + [grades_sorted[-1]]\n    grades_sorted =\
    \ grades_sorted + [grades_sorted[0]]\n    grades_sorted = grades_sorted + [grades_sorted",
  "    \n    grades.sort()\n    \n    letter_grades = []\n    \n    for grade in grades:\n\
    \        if grade > 3.0:\n            letter_grades.append('A+')\n        elif\
    \ grade > 2.7:\n            letter_grades.append('B')\n        elif grade > 2.3:\n\
    \            letter_grades.append('B-')\n        elif grade > 1.7:\n         \
    \   letter_grades.append('C')\n        elif grade > 1.3:\n            letter_grades.append('C-')\n\
    \        elif grade > 1.0:\n            letter_grades.append('D+')\n        elif\
    \ grade > 0.7:\n            letter_grades.append('D')\n        elif grade > 0.0:\n\
    \            letter_grades.append('D-')\n        else:\n            letter_grades.append('E')\n\
    \    \n    return letter_grades\n", "    \n    grades_sorted = sorted(grades)\n\
    \    \n    grades_sorted_length = len(grades_sorted)\n    \n    grades_sorted_index\
    \ = 0\n    \n    grades_sorted_index_length = len(grades_sorted_index)\n    \n\
    \    grades_sorted_index_index_length = len(grades_sorted_index_index)\n    \n\
    \    grades_sorted_index_index_index_length = len(grades_sorted_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_length = len(grades_sorted_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_length = len(grades_sorted_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index_length = len(grades_sorted_index_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index_index_length = len(grades_sorted_index_index_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index_index_index_length\
    \ = len(grades_sorted_index_index_index_index_index_index_index_index)\n    \n\
    \    grades_sorted_index_index_index_index_index_index_index_index_length = len(grades_sorted_index_index_index_index_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index_index_index_index_index_length\
    \ = len(grades_sorted_index_index_index_index_index_index_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index_index_index_index_index_index_length\
    \ = len(grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_length\
    \ = len(grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_index_index_length\
    \ = len(grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_length\
    \ = len(grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_length\
    \ = len(grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_length\
    \ = len(grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index)\n\
    \    \n    grade", "    \n    grades.sort()\n    grades_length = len(grades)\n\
    \    \n    if grades_length < 2:\n        return ['E']\n    \n    if grades_length\
    \ == 2:\n        if grades[0] > grades[1]:\n            return ['A+']\n      \
    \  else:\n            return ['A']\n    \n    if grades_length == 3:\n       \
    \ if grades[0] > grades[1]:\n            if grades[0] > grades[2]:\n         \
    \       return ['A+', 'B+']\n            else:\n                return ['A+',\
    \ 'B-']\n        else:\n            if grades[0] > grades[2]:\n              \
    \  return ['A+', 'B-']\n            else:\n                return ['A+', 'B']\n\
    \    \n    if grades_length == 4:\n        if grades[0] > grades[1]:\n       \
    \     if grades[0] > grades[2]:\n                if grades[0] > grades[3]:\n \
    \                   return ['A+', 'B+', 'C+']\n                else:\n       \
    \             return ['A+', 'B+', 'C-']\n            else:\n                if\
    \ grades[0] > grades[3]:\n                    return ['A+', 'B+', 'C-']\n    \
    \            else:\n                    return ['A+', 'B+', 'C']\n        else:\n\
    \            if grades[0] > grades[2]:\n                if grades[0] > grades[3]:\n\
    \                    if grades[0] > grades[4]:\n                        return\
    \ ['A+', 'B+', 'C-']\n                    else:\n                        return\
    \ ['A+', 'B+', 'C']\n                else:\n                    if grades[0] >\
    \ grades[4]:\n                        return ['A+', 'B+', 'C']\n             \
    \       else:\n                        return ['A+', 'B+', 'C-']\n           \
    \ else:\n                if grades[0] > grades[3]:\n                    if grades[0]\
    \ > grades[4]:\n                        return ['A+', 'B+', 'C']\n           \
    \         else:\n                        return ['A+', 'B+', 'C-']\n         \
    \       else:\n                    if grades[0] > grades[4]:\n               \
    \         return ['A+', 'B+', 'C-']\n                    else:\n             \
    \           return ['A+', 'B+', 'C+']\n    \n    if grades_length == 5:\n    \
    \    if grades[0] > grades[1]:\n            if grades[0] > grades[2]:\n      \
    \          if grades[0] > grades[3]:\n                    if grades[0] > grades[4]:\n\
    \                        if grades[0] > grades[5]:\n                         \
    \   return ['A+', 'B+', 'C+', 'D+']\n                        else:\n         \
    \                   return ['A+', 'B+', 'C+', 'D-']\n                    else:\n\
    \                        if grades[0] > grades[5]:\n                         \
    \   return ['A+', 'B+', 'C+', 'D-']\n                        else:\n         \
    \                   return ['A+', 'B+', 'C+', 'D']\n                else:\n  \
    \                  if grades[0] > grades[4]:\n                        if grades[0]\
    \ > grades[5]:\n                            if grades[0] > grades[6]:\n      \
    \                          return ['A+', 'B+', 'C+', 'D-']\n                 \
    \           else:\n                                return ['A+', 'B+', 'C+', 'D']\n\
    \                        else:\n", "    \n    letter_grades = []\n    \n    for\
    \ grade in grades:\n        if grade >= 3.0:\n            letter_grades.append('A+')\n\
    \        elif grade >= 2.7:\n            letter_grades.append('B+')\n        elif\
    \ grade >= 2.3:\n            letter_grades.append('B-')\n        elif grade >=\
    \ 1.7:\n            letter_grades.append('C+')\n        elif grade >= 1.3:\n \
    \           letter_grades.append('C-')\n        elif grade >= 1.0:\n         \
    \   letter_grades.append('D+')\n        elif grade >= 0.7:\n            letter_grades.append('D')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n\
    \            letter_grades.append('E')\n    \n    return letter_grades\n</cell>\n\
    <cell>", "    \n    grades.sort()\n    \n    grades_length = len(grades)\n   \
    \ \n    letter_grades = []\n    \n    if grades_length == 0:\n        letter_grades.append('E')\n\
    \        return letter_grades\n    \n    if grades_length == 1:\n        letter_grades.append('D-')\n\
    \        return letter_grades\n    \n    if grades_length == 2:\n        if grades[0]\
    \ > grades[1]:\n            letter_grades.append('B-')\n        else:\n      \
    \      letter_grades.append('B-')\n        return letter_grades\n    \n    if\
    \ grades_length == 3:\n        if grades[0] > grades[1] and grades[0] > grades[2]:\n\
    \            letter_grades.append('B-')\n        elif grades[0] > grades[1] and\
    \ grades[0] < grades[2]:\n            letter_grades.append('B-')\n        elif\
    \ grades[0] < grades[1] and grades[0] > grades[2]:\n            letter_grades.append('B-')\n\
    \        elif grades[0] < grades[1] and grades[0] < grades[2]:\n            letter_grades.append('B-')\n\
    \        elif grades[0] == grades[1] and grades[0] > grades[2]:\n            letter_grades.append('B-')\n\
    \        elif grades[0] == grades[1] and grades[0] < grades[2]:\n            letter_grades.append('B-')\n\
    \        elif grades[0] == grades[1] and grades[0] == grades[2]:\n           \
    \ letter_grades.append('B')\n        elif grades[0] > grades[1] and grades[0]\
    \ == grades[2]:\n            letter_grades.append('B')\n        elif grades[0]\
    \ < grades[1] and grades[0] == grades[2]:\n            letter_grades.append('B')\n\
    \        elif grades[0] > grades[1] and grades[0] < grades[2]:\n            letter_grades.append('B')\n\
    \        elif grades[0] < grades[1] and grades[0] < grades[2]:\n            letter_grades.append('B')\n\
    \        elif grades[0] > grades[1] and grades[0] > grades[2]:\n            letter_grades.append('B')\n\
    \        elif grades[0] < grades[1] and grades[0] > grades[2]:\n            letter_grades.append('B')\n\
    \        elif grades[0] > grades[1] and grades[0] < grades[2]:\n            letter_grades.append('B')\n\
    \        elif grades[0] < grades[1] and grades[0] < grades[2]:\n            letter_grades.append('B')\n\
    \        elif grades[0] == grades[1] and grades[0] > grades[2]:\n            letter_grades.append('B')\n\
    \        elif grades[0] == grades[1] and grades[0] < grades[2]:\n            letter_grades.append('B')\n\
    \        elif grades[0] == grades[1] and grades[0] == grades[2]:\n           \
    \ letter_grades.append('B')\n        elif grades[0] > grades[1] and grades[0]\
    \ == grades[2]:\n            letter_grades.append('B')\n        elif grades[0]\
    \ < grade", "    \n    grades_sorted = sorted(grades)\n    \n    letter_grades\
    \ = []\n    \n    for grade in grades_sorted:\n        if grade < 3.0:\n     \
    \       letter_grades.append('A')\n        elif grade < 3.7:\n            letter_grades.append('A-')\n\
    \        elif grade < 4.0:\n            letter_grades.append('B+')\n        elif\
    \ grade < 4.7:\n            letter_grades.append('B')\n        elif grade < 5.0:\n\
    \            letter_grades.append('B-')\n        elif grade < 5.7:\n         \
    \   letter_grades.append('C+')\n        elif grade < 6.0:\n            letter_grades.append('C')\n\
    \        elif grade < 6.7:\n            letter_grades.append('C-')\n        elif\
    \ grade < 7.0:\n            letter_grades.append('D+')\n        elif grade < 7.7:\n\
    \            letter_grades.append('D')\n        elif grade < 8.0:\n          \
    \  letter_grades.append('D-')\n        elif grade < 8.7:\n            letter_grades.append('E')\n\
    \        else:\n            letter_grades.append('F')\n    \n    return letter_grades\n",
  "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    grades_sorted\
    \ = sorted(grades)\n    \n    grades_sorted.reverse()\n    \n    grades_sorted.append(0)\n\
    \    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n\
    \    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n\
    \    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n\
    \    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n\
    \    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n\
    \    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n\
    \    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n\
    \    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n\
    \    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n\
    \    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n\
    \    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n\
    \    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n\
    \    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n\
    \    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n\
    \    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n\
    \    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n\
    \    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n\
    \    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n\
    \    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n\
    \    grades_sorted.append(0)\n    ", "    \n    grades_sorted = sorted(grades)\n\
    \    \n    letter_grades = []\n    \n    for grade in grades_sorted:\n       \
    \ if grade >= 3.0:\n            letter_grades.append('A+')\n        elif grade\
    \ >= 2.7:\n            letter_grades.append('B')\n        elif grade >= 2.3:\n\
    \            letter_grades.append('B-')\n        elif grade >= 1.7:\n        \
    \    letter_grades.append('C')\n        elif grade >= 1.3:\n            letter_grades.append('C-')\n\
    \        elif grade >= 1.0:\n            letter_grades.append('D+')\n        elif\
    \ grade >= 0.7:\n            letter_grades.append('D')\n        elif grade >=\
    \ 0.0:\n            letter_grades.append('D-')\n        else:\n            letter_grades.append('E')\n\
    \    \n    return letter_grades\n", "    \n    letter_grades = []\n    \n    for\
    \ grade in grades:\n        if grade > 3.7:\n            letter_grades.append('A+')\n\
    \        elif grade > 3.3:\n            letter_grades.append('A-')\n        elif\
    \ grade > 3.0:\n            letter_grades.append('B+')\n        elif grade > 2.7:\n\
    \            letter_grades.append('B')\n        elif grade > 2.3:\n          \
    \  letter_grades.append('B-')\n        elif grade > 2.0:\n            letter_grades.append('C+')\n\
    \        elif grade > 1.7:\n            letter_grades.append('C')\n        elif\
    \ grade > 1.3:\n            letter_grades.append('C-')\n        elif grade > 1.0:\n\
    \            letter_grades.append('D+')\n        elif grade > 0.7:\n         \
    \   letter_grades.append('D')\n        elif grade > 0.0:\n            letter_grades.append('D-')\n\
    \        else:\n            letter_grades.append('E')\n    \n    return letter_grades\n",
  "    \n    grades.sort()\n    \n    grades_length = len(grades)\n    \n    letter_grades\
    \ = []\n    \n    if grades_length == 0:\n        letter_grades.append('E')\n\
    \        return letter_grades\n    \n    if grades_length == 1:\n        letter_grades.append('A')\n\
    \        return letter_grades\n    \n    if grades_length == 2:\n        letter_grades.append('A')\n\
    \        return letter_grades\n    \n    if grades_length == 3:\n        letter_grades.append('A')\n\
    \        return letter_grades\n    \n    if grades_length == 4:\n        letter_grades.append('A')\n\
    \        return letter_grades\n    \n    if grades_length == 5:\n        letter_grades.append('A')\n\
    \        return letter_grades\n    \n    if grades_length == 6:\n        letter_grades.append('A')\n\
    \        return letter_grades\n    \n    if grades_length == 7:\n        letter_grades.append('A')\n\
    \        return letter_grades\n    \n    if grades_length == 8:\n        letter_grades.append('A')\n\
    \        return letter_grades\n    \n    if grades_length == 9:\n        letter_grades.append('A')\n\
    \        return letter_grades\n    \n    if grades_length == 10:\n        letter_grades.append('A')\n\
    \        return letter_grades\n    \n    if grades_length == 11:\n        letter_grades.append('A')\n\
    \        return letter_grades\n    \n    if grades_length == 12:\n        letter_grades.append('A')\n\
    \        return letter_grades\n    \n    if grades_length == 13:\n        letter_grades.append('A')\n\
    \        return letter_grades\n    \n    if grades_length == 14:\n        letter_grades.append('A')\n\
    \        return letter_grades\n    \n    if grades_length == 15:\n        letter_grades.append('A')\n\
    \        return letter_grades\n    \n    if grades_length == 16:\n        letter_grades.append('A')\n\
    \        return letter_grades\n    \n    if grades_length == 17:\n        letter_grades.append('A')\n\
    \        return letter_grades\n    \n    if grades_length == 18:\n        letter_grades.append('A')\n\
    \        return letter_grades\n    \n    if grades_length == 19:\n        letter_grades.append('A')\n\
    \        return letter_grades\n    \n    if grades_length == 20:\n        letter_grades.append('A')\n\
    \        return letter_grades\n    \n    if grades_length == 21:\n        letter_grades.append('A')\n\
    \        return letter_grades\n    \n    if grades_length == 22:\n        letter_grades.append('A')\n\
    \        return letter_grades\n    \n    if grades_length == 23:\n        ", " \
    \   \n    grades_sorted = sorted(grades)\n    \n    grades_sorted.reverse()\n\
    \    \n    grades_sorted = [grades_sorted[0]] + grades_sorted\n    \n    grades_sorted.reverse()\n\
    \    \n    grades_sorted = [grades_sorted[0]] + grades_sorted\n    \n    grades_sorted.reverse()\n\
    \    \n    grades_sorted = [grades_sorted[0]] + grades_sorted\n    \n    grades_sorted.reverse()\n\
    \    \n    grades_sorted = [grades_sorted[0]] + grades_sorted\n    \n    grades_sorted.reverse()\n\
    \    \n    grades_sorted = [grades_sorted[0]] + grades_sorted\n    \n    grades_sorted.reverse()\n\
    \    \n    grades_sorted = [grades_sorted[0]] + grades_sorted\n    \n    grades_sorted.reverse()\n\
    \    \n    grades_sorted = [grades_sorted[0]] + grades_sorted\n    \n    grades_sorted.reverse()\n\
    \    \n    grades_sorted = [grades_sorted[0]] + grades_sorted\n    \n    grades_sorted.reverse()\n\
    \    \n    grades_sorted = [grades_sorted[0]] + grades_sorted\n    \n    grades_sorted.reverse()\n\
    \    \n    grades_sorted = [grades_sorted[0]] + grades_sorted\n    \n    grades_sorted.reverse()\n\
    \    \n    grades_sorted = [grades_sorted[0]] + grades_sorted\n    \n    grades_sorted.reverse()\n\
    \    \n    grades_sorted = [grades_sorted[0]] + grades_sorted\n    \n    grades_sorted.reverse()\n\
    \    \n    grades_sorted = [grades_sorted[0]] + grades_sorted\n    \n    grades_sorted.reverse()\n\
    \    \n    grades_sorted = [grades_sorted[0]] + grades_sorted\n    \n    grades_sorted.reverse()\n\
    \    \n    grades_sorted = [grades_sorted[0]] + grades_sorted\n    \n    grades_sorted.reverse()\n\
    \    \n    grades_sorted = [grades_sorted[0]] + grades_sorted\n    \n    grades_sorted.reverse()\n\
    \    \n    grades_sorted = [grades_sorted[0]] + grades_sorted\n    \n    grades_sorted.reverse()\n\
    \    \n    grades_sorted = [grades_sorted[0]] + grades_sorted\n    \n    grades_sorted.reverse()\n\
    \    \n    grades_", "    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n",
  "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    grades.sort()\n\
    \    \n    grades_length = len(grades)\n    \n    if grades_length < 4:\n    \
    \    return ['E']\n    \n    if grades_length < 5:\n        return ['D-']\n  \
    \  \n    if grades_length < 6:\n        return ['C-', 'C']\n    \n    if grades_length\
    \ < 7:\n        return ['B-', 'B']\n    \n    if grades_length < 8:\n        return\
    \ ['A-', 'A']\n    \n    if grades_length < 9:\n        return ['A-', 'A+']\n\
    \    \n    if grades_length < 10:\n        return ['A-', 'A+', 'B']\n    \n  \
    \  if grades_length < 11:\n        return ['A-', 'A+', 'B-', 'B']\n    \n    if\
    \ grades_length < 12:\n        return ['A-', 'A+', 'B-', 'B-', 'B']\n    \n  \
    \  if grades_length < 13:\n        return ['A-', 'A+', 'B-', 'B-', 'B-', 'B']\n\
    \    \n    if grades_length < 14:\n        return ['A-', 'A+', 'B-', 'B-', 'B-',\
    \ 'B-', 'B']\n    \n    if grades_length < 15:\n        return ['A-', 'A+', 'B-',\
    \ 'B-', 'B-', 'B-', 'B-', 'B-', 'B']\n    \n    if grades_length < 16:\n     \
    \   return ['A-', 'A+', 'B-', 'B-', 'B-', 'B-', 'B-', 'B-', 'B-', 'B']\n    \n\
    \    if grades_length < 17:\n        return ['A-', 'A+', 'B-', 'B-', 'B-', 'B-',\
    \ 'B-', 'B-', 'B-', 'B-', 'B']\n    \n    if grades_length < 18:\n        return\
    \ ['A-', 'A+', 'B-', 'B-', 'B-', 'B-', 'B-', 'B-', 'B-', 'B-', 'B-', 'B']\n  \
    \  \n    if grades_length < 19:\n        return ['A-', 'A+', 'B-', 'B-', 'B-',\
    \ 'B-', 'B-', 'B-', 'B-', 'B-', 'B-', 'B-', 'B']\n    \n    if grades_length <\
    \ 20:\n        return ['A-', 'A+', 'B-', 'B-', 'B-', 'B-', 'B-', 'B-', 'B-', 'B-',\
    \ 'B-', 'B-', 'B-', 'B']\n    \n    if grades_length < 21:\n        return ['A-',\
    \ 'A+', 'B-', 'B-', 'B-', 'B-', 'B-', 'B-', 'B-', 'B-', 'B-', 'B-', 'B-', 'B-',\
    \ 'B']\n    \n    if grades_length < 22:\n        return ['A-', 'A+', 'B-', 'B-',\
    \ 'B-', 'B-', 'B-', 'B-', 'B-', 'B-', 'B-', 'B-', 'B-', 'B-', 'B']\n    \n   \
    \ if grades_length < 23:\n        return ['A-', 'A+', 'B-", "    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n", "    \n    grades_sorted = sorted(grades)\n\
    \    \n    letter_grades = []\n    \n    for grade in grades_sorted:\n       \
    \ if grade < 3.0:\n            letter_grades.append('A+')\n        elif grade\
    \ < 3.7:\n            letter_grades.append('A')\n        elif grade < 3.3:\n \
    \           letter_grades.append('A-')\n        elif grade < 3.0:\n          \
    \  letter_grades.append('B+')\n        elif grade < 2.7:\n            letter_grades.append('B')\n\
    \        elif grade < 2.3:\n            letter_grades.append('B-')\n        elif\
    \ grade < 2.0:\n            letter_grades.append('C+')\n        elif grade < 1.7:\n\
    \            letter_grades.append('C')\n        elif grade < 1.3:\n          \
    \  letter_grades.append('C-')\n        elif grade < 1.0:\n            letter_grades.append('D+')\n\
    \        elif grade < 0.7:\n            letter_grades.append('D')\n        elif\
    \ grade < 0.0:\n            letter_grades.append('D-')\n        else:\n      \
    \      letter_grades.append('E')\n    \n    return letter_grades\n", "    \n \
    \   grades.sort()\n    \n    grades_length = len(grades)\n    \n    letter_grades\
    \ = []\n    \n    if grades_length < 4:\n        return letter_grades\n    \n\
    \    if grades_length < 5:\n        letter_grades.append('E')\n        return\
    \ letter_grades\n    \n    if grades_length < 6:\n        letter_grades.append('D-')\n\
    \        return letter_grades\n    \n    if grades_length < 7:\n        letter_grades.append('C-')\n\
    \        return letter_grades\n    \n    if grades_length < 8:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length < 9:\n        letter_grades.append('B')\n\
    \        return letter_grades\n    \n    if grades_length < 10:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length < 11:\n        letter_grades.append('B')\n\
    \        return letter_grades\n    \n    if grades_length < 12:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length < 13:\n        letter_grades.append('B')\n\
    \        return letter_grades\n    \n    if grades_length < 14:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length < 15:\n        letter_grades.append('B')\n\
    \        return letter_grades\n    \n    if grades_length < 16:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length < 17:\n        letter_grades.append('B')\n\
    \        return letter_grades\n    \n    if grades_length < 18:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length < 19:\n        letter_grades.append('B')\n\
    \        return letter_grades\n    \n    if grades_length < 20:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length < 21:\n        letter_grades.append('B')\n\
    \        return letter_grades\n    \n    if grades_length < 22:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length < 23:\n        letter_grades.append('B')\n\
    \        return letter_grades\n    \n    if grades_length < 24:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length < 25:\n        letter_grades.append('B')\n\
    \        return letter_grades\n    \n    if grades_length < 26:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length < 27:\n        ", " \
    \   \n    grades_sorted = sorted(grades)\n    grades_sorted.reverse()\n    \n\
    \    grades_sorted_length = len(grades_sorted)\n    \n    letter_grades = []\n\
    \    \n    for grade in grades_sorted:\n        if grade >= 3.0:\n           \
    \ letter_grades.append('A+')\n        elif grade >= 2.7:\n            letter_grades.append('B+')\n\
    \        elif grade >= 2.3:\n            letter_grades.append('B-')\n        elif\
    \ grade >= 1.7:\n            letter_grades.append('C+')\n        elif grade >=\
    \ 1.3:\n            letter_grades.append('C')\n        elif grade >= 1.0:\n  \
    \          letter_grades.append('C-')\n        elif grade >= 0.7:\n          \
    \  letter_grades.append('D+')\n        elif grade >= 0.0:\n            letter_grades.append('D')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('D-')\n        elif\
    \ grade >= 0.0:\n            letter_grades.append('E')\n        else:\n      \
    \      letter_grades.append('F')\n    \n    return letter_grades\n</cell>\n<cell>",
  "    \n    grades.sort()\n    \n    grades_length = len(grades)\n    \n    if grades_length\
    \ == 0:\n        return []\n    \n    if grades_length == 1:\n        return [\"\
    A+\"]\n    \n    if grades_length == 2:\n        if grades[0] > grades[1]:\n \
    \           return [\"A+\", \"B\"]\n        else:\n            return [\"A\",\
    \ \"B\"]\n    \n    if grades_length == 3:\n        if grades[0] > grades[1] and\
    \ grades[0] > grades[2]:\n            return [\"A+\", \"B\", \"C\"]\n        elif\
    \ grades[1] > grades[0] and grades[1] > grades[2]:\n            return [\"A\"\
    , \"B+\", \"C\"]\n        elif grades[2] > grades[0] and grades[2] > grades[1]:\n\
    \            return [\"A\", \"B\", \"C+\"]\n        elif grades[0] > grades[1]\
    \ and grades[0] > grades[2]:\n            return [\"A\", \"B\", \"C\"]\n     \
    \   elif grades[1] > grades[0] and grades[1] > grades[2]:\n            return\
    \ [\"A\", \"B+\", \"C\"]\n        elif grades[2] > grades[0] and grades[2] > grades[1]:\n\
    \            return [\"A\", \"B\", \"C+\"]\n        elif grades[0] > grades[1]\
    \ and grades[0] > grades[2]:\n            return [\"A\", \"B\", \"C\"]\n     \
    \   elif grades[1] > grades[0] and grades[1] > grades[2]:\n            return\
    \ [\"A\", \"B+\", \"C\"]\n        elif grades[2] > grades[0] and grades[2] > grades[1]:\n\
    \            return [\"A\", \"B\", \"C+\"]\n        elif grades[0] > grades[1]\
    \ and grades[0] > grades[2]:\n            return [\"A\", \"B\", \"C\"]\n     \
    \   elif grades[1] > grades[0] and grades[1] > grades[2]:\n            return\
    \ [\"A\", \"B+\", \"C\"]\n        elif grades[2] > grades[0] and grades[2] > grades[1]:\n\
    \            return [\"A\", \"B\", \"C+\"]\n        elif grades[0] > grades[1]\
    \ and grades[0] > grades[2]:\n            return [\"A\", \"B\", \"C\"]\n     \
    \   elif grades[1] > grades[0] and grades[1] > grades[2]:\n            return\
    \ [\"A\", \"B+\", \"C\"]\n        elif grades[2] > grades[0] and grades[2] > grades[1]:\n\
    \            return [\"A\", \"B\", \"C+\"]\n        elif grades[0] > grades[1]\
    \ and grades[0] > grades[2]:\n            return [\"A\", \"B\", \"C\"]\n     \
    \   elif grades[1] > grades[0] and grades[1] > grades[2]:\n            return\
    \ [\"A\", \"B+\", \"C\"]\n        elif grades[2] > grades[0] and grades[2] > grades[1]:\n\
    \            return [\"A\", \"B\", \"C+\"]\n        elif grades[0] > grades[1]\
    \ and grades[0] > ", "    \n    grades.sort()\n    grades_length = len(grades)\n\
    \    \n    if grades_length == 0:\n        return []\n    \n    if grades_length\
    \ == 1:\n        return ['A+']\n    \n    if grades_length == 2:\n        return\
    \ ['A+', 'B']\n    \n    if grades_length == 3:\n        return ['A+', 'B', 'C']\n\
    \    \n    if grades_length == 4:\n        return ['A+', 'B', 'C-']\n    \n  \
    \  if grades_length == 5:\n        return ['A+', 'B', 'C-', 'C']\n    \n    if\
    \ grades_length == 6:\n        return ['A+', 'B', 'C-', 'C-']\n    \n    if grades_length\
    \ == 7:\n        return ['A+', 'B', 'C-', 'C-', 'C']\n    \n    if grades_length\
    \ == 8:\n        return ['A+', 'B', 'C-', 'C-', 'C-']\n    \n    if grades_length\
    \ == 9:\n        return ['A+', 'B', 'C-', 'C-', 'C-', 'C']\n    \n    if grades_length\
    \ == 10:\n        return ['A+', 'B', 'C-', 'C-', 'C-', 'C-']\n    \n    if grades_length\
    \ == 11:\n        return ['A+', 'B', 'C-', 'C-', 'C-', 'C-', 'C']\n    \n    if\
    \ grades_length == 12:\n        return ['A+', 'B', 'C-', 'C-', 'C-', 'C-', 'C-',\
    \ 'C']\n    \n    if grades_length == 13:\n        return ['A+', 'B', 'C-', 'C-',\
    \ 'C-', 'C-', 'C-', 'C-']\n    \n    if grades_length == 14:\n        return ['A+',\
    \ 'B', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C']\n    \n    if grades_length ==\
    \ 15:\n        return ['A+', 'B', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-']\n\
    \    \n    if grades_length == 16:\n        return ['A+', 'B', 'C-', 'C-', 'C-',\
    \ 'C-', 'C-', 'C-', 'C-', 'C-']\n    \n    if grades_length == 17:\n        return\
    \ ['A+', 'B', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C']\n    \n   \
    \ if grades_length == 18:\n        return ['A+', 'B', 'C-', 'C-', 'C-', 'C-',\
    \ 'C-', 'C-', 'C-', 'C-', 'C-']\n    \n    if grades_length == 19:\n        return\
    \ ['A+', 'B', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-']\n    \n  \
    \  if grades_length == 20:\n        return ['A+', 'B', 'C-', 'C-', 'C-', 'C-',\
    \ 'C-', 'C-', 'C-', 'C-', 'C-', 'C']\n    \n    if grades_length == 21:\n", " \
    \   \n    grades_sorted = sorted(grades)\n    \n    letter_grades = []\n    \n\
    \    for grade in grades_sorted:\n        if grade >= 3.0:\n            letter_grades.append('A+')\n\
    \        elif grade >= 2.0:\n            letter_grades.append('A')\n        elif\
    \ grade >= 1.7:\n            letter_grades.append('A-')\n        elif grade >=\
    \ 1.3:\n            letter_grades.append('B+')\n        elif grade >= 1.0:\n \
    \           letter_grades.append('B')\n        elif grade >= 0.7:\n          \
    \  letter_grades.append('B-')\n        elif grade >= 0.0:\n            letter_grades.append('C+')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('C')\n        elif\
    \ grade >= 0.0:\n            letter_grades.append('C-')\n        elif grade >=\
    \ 0.0:\n            letter_grades.append('D+')\n        elif grade >= 0.0:\n \
    \           letter_grades.append('D')\n        elif grade >= 0.0:\n          \
    \  letter_grades.append('D-')\n        elif grade >= 0.0:\n            letter_grades.append('E')\n\
    \        else:\n            letter_grades.append('F')\n    \n    return letter_grades\n",
  "    \n    grades_sorted = sorted(grades)\n    \n    letter_grades = []\n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", " \
    \   \n    grades.sort()\n    \n    letter_grades = []\n    \n    for grade in\
    \ grades:\n        if grade >= 3.0:\n            letter_grades.append('A+')\n\
    \        elif grade >= 2.7:\n            letter_grades.append('B')\n        elif\
    \ grade >= 2.3:\n            letter_grades.append('B-')\n        elif grade >=\
    \ 1.7:\n            letter_grades.append('C')\n        elif grade >= 1.3:\n  \
    \          letter_grades.append('C-')\n        elif grade >= 1.0:\n          \
    \  letter_grades.append('D+')\n        elif grade >= 0.7:\n            letter_grades.append('D')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n\
    \            letter_grades.append('E')\n    \n    return letter_grades\n", " \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    grades_sorted\
    \ = sorted(grades)\n    \n    letter_grades = []\n    \n    \n    for grade in\
    \ grades_sorted:\n        if grade >= 3.0:\n            letter_grades.append('A+')\n\
    \        elif grade >= 2.7:\n            letter_grades.append('B')\n        elif\
    \ grade >= 2.3:\n            letter_grades.append('B-')\n        elif grade >=\
    \ 1.7:\n            letter_grades.append('C')\n        elif grade >= 1.3:\n  \
    \          letter_grades.append('C-')\n        elif grade >= 1.0:\n          \
    \  letter_grades.append('D+')\n        elif grade >= 0.7:\n            letter_grades.append('D')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n\
    \            letter_grades.append('E')\n            \n    return letter_grades\n\
    \    \n    ", "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", " \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n", "    \n    grades.sort()\n    \n    letter_grades\
    \ = []\n    \n    for grade in grades:\n        if grade >= 3.0:\n           \
    \ letter_grades.append('A+')\n        elif grade >= 2.7:\n            letter_grades.append('B')\n\
    \        elif grade >= 2.3:\n            letter_grades.append('B-')\n        elif\
    \ grade >= 1.7:\n            letter_grades.append('C')\n        elif grade >=\
    \ 1.3:\n            letter_grades.append('C-')\n        elif grade >= 1.0:\n \
    \           letter_grades.append('D+')\n        elif grade >= 0.7:\n         \
    \   letter_grades.append('D')\n        elif grade >= 0.0:\n            letter_grades.append('D-')\n\
    \        else:\n            letter_grades.append('E')\n    \n    return letter_grades\n\
    </cell>\n<cell>", "    \n    grades_sorted = sorted(grades)\n    \n    letter_grades\
    \ = []\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n", "    \n    grades.sort()\n    \n    grades_length = len(grades)\n\
    \    \n    if grades_length == 0:\n        return []\n    \n    if grades_length\
    \ == 1:\n        return ['A+']\n    \n    if grades_length == 2:\n        return\
    \ ['A+', 'B']\n    \n    if grades_length == 3:\n        return ['A+', 'B', 'C']\n\
    \    \n    if grades_length == 4:\n        return ['A+', 'B', 'C-']\n    \n  \
    \  if grades_length == 5:\n        return ['A+', 'B', 'C-', 'C']\n    \n    if\
    \ grades_length == 6:\n        return ['A+', 'B', 'C-', 'C-']\n    \n    if grades_length\
    \ == 7:\n        return ['A+', 'B', 'C-', 'C-', 'C']\n    \n    if grades_length\
    \ == 8:\n        return ['A+', 'B', 'C-', 'C-', 'C-']\n    \n    if grades_length\
    \ == 9:\n        return ['A+', 'B', 'C-', 'C-', 'C-', 'C']\n    \n    if grades_length\
    \ == 10:\n        return ['A+', 'B', 'C-', 'C-', 'C-', 'C-']\n    \n    if grades_length\
    \ == 11:\n        return ['A+', 'B', 'C-', 'C-', 'C-', 'C-', 'C']\n    \n    if\
    \ grades_length == 12:\n        return ['A+', 'B', 'C-', 'C-', 'C-', 'C-', 'C-',\
    \ 'C']\n    \n    if grades_length == 13:\n        return ['A+', 'B', 'C-', 'C-',\
    \ 'C-', 'C-', 'C-', 'C-', 'C']\n    \n    if grades_length == 14:\n        return\
    \ ['A+', 'B', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C']\n    \n    if grades_length\
    \ == 15:\n        return ['A+', 'B', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-',\
    \ 'C-', 'C']\n    \n    if grades_length == 16:\n        return ['A+', 'B', 'C-',\
    \ 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C']\n    \n    if grades_length\
    \ == 17:\n        return ['A+', 'B', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-',\
    \ 'C-', 'C-', 'C-', 'C']\n    \n    if grades_length == 18:\n        return ['A+',\
    \ 'B', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C']\n\
    \    \n    if grades_length == 19:\n        return ['A+', 'B', 'C-', 'C-', 'C-',\
    \ 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C']\n    \n    if grades_length\
    \ == 20:\n        return ['A+', 'B', 'C-', 'C", "    \n    grades.sort()\n   \
    \ \n    letter_grades = []\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    ", "    \n    grades.sort()\n \
    \   \n    letter_grades = []\n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    ", "    \n    grades.sort()\n \
    \   \n    grades_length = len(grades)\n    \n    if grades_length < 1:\n     \
    \   return []\n    \n    if grades_length == 1:\n        return [\"A\"]\n    \n\
    \    if grades_length == 2:\n        if grades[0] > grades[1]:\n            return\
    \ [\"B\"]\n        else:\n            return [\"B-\"]\n    \n    if grades_length\
    \ == 3:\n        if grades[0] > grades[1] and grades[0] > grades[2]:\n       \
    \     return [\"C+\"]\n        elif grades[0] > grades[1] and grades[0] < grades[2]:\n\
    \            return [\"C\"]\n        elif grades[0] < grades[1] and grades[0]\
    \ > grades[2]:\n            return [\"C-\"]\n        elif grades[0] < grades[1]\
    \ and grades[0] < grades[2]:\n            return [\"C\"]\n        elif grades[0]\
    \ == grades[1] and grades[0] > grades[2]:\n            return [\"C-\"]\n     \
    \   elif grades[0] == grades[1] and grades[0] < grades[2]:\n            return\
    \ [\"C\"]\n        elif grades[0] == grades[1] and grades[0] == grades[2]:\n \
    \           return [\"C\"]\n        elif grades[0] > grades[1] and grades[0] <\
    \ grades[2]:\n            return [\"C+\"]\n        elif grades[0] < grades[1]\
    \ and grades[0] > grades[2]:\n            return [\"C+\"]\n        elif grades[0]\
    \ > grades[1] and grades[0] == grades[2]:\n            return [\"C+\"]\n     \
    \   elif grades[0] < grades[1] and grades[0] == grades[2]:\n            return\
    \ [\"C+\"]\n        elif grades[0] == grades[1] and grades[0] < grades[2]:\n \
    \           return [\"C+\"]\n        elif grades[0] == grades[1] and grades[0]\
    \ == grades[2]:\n            return [\"C+\"]\n        elif grades[0] > grades[1]\
    \ and grades[0] < grades[2]:\n            return [\"C+\"]\n        elif grades[0]\
    \ < grades[1] and grades[0] == grades[2]:\n            return [\"C+\"]\n     \
    \   elif grades[0] == grades[1] and grades[0] < grades[2]:\n            return\
    \ [\"C+\"]\n        elif grades[0] == grades[1] and grades[0] == grades[2]:\n\
    \            return [\"C+\"]\n        elif grades[0] > grades[1] and grades[0]\
    \ < grades[2]:\n            return [\"C+\"]\n        elif grades[0] < grades[1]\
    \ and grades[0] == grades[2]:\n            return [\"C+\"]\n        elif grades[0]\
    \ == grades[1] and grades[0] < grades[2]:\n            return [\"C+\"]\n     \
    \   elif grades[0] == grades[1] and grades[0] == grades[2]:\n            return\
    \ [\"C+\"]\n        elif grades[0] > grades[1] and grades[0] < grades[2]:\n  \
    \          return [\"C+\"]\n        elif grade", "    \n    grades_sorted = sorted(grades)\n\
    \    \n    letter_grades = []\n    \n    for grade in grades_sorted:\n       \
    \ if grade > 3.0:\n            letter_grades.append('A+')\n        elif grade\
    \ > 2.7:\n            letter_grades.append('B')\n        elif grade > 2.3:\n \
    \           letter_grades.append('B-')\n        elif grade > 1.7:\n          \
    \  letter_grades.append('C')\n        elif grade > 1.3:\n            letter_grades.append('C-')\n\
    \        elif grade > 1.0:\n            letter_grades.append('D+')\n        elif\
    \ grade > 0.7:\n            letter_grades.append('D')\n        elif grade > 0.0:\n\
    \            letter_grades.append('D-')\n        else:\n            letter_grades.append('E')\n\
    \    \n    return letter_grades\n", "    \n    grades_sorted = sorted(grades)\n\
    \    \n    letter_grades = []\n    \n    for grade in grades_sorted:\n       \
    \ if grade >= 3.0:\n            letter_grades.append('A+')\n        elif grade\
    \ >= 2.7:\n            letter_grades.append('B+')\n        elif grade >= 2.3:\n\
    \            letter_grades.append('B-')\n        elif grade >= 1.7:\n        \
    \    letter_grades.append('C+')\n        elif grade >= 1.3:\n            letter_grades.append('C')\n\
    \        elif grade >= 1.0:\n            letter_grades.append('D+')\n        elif\
    \ grade >= 0.7:\n            letter_grades.append('D')\n        elif grade >=\
    \ 0.0:\n            letter_grades.append('D-')\n        else:\n            letter_grades.append('E')\n\
    \    \n    return letter_grades\n    \n    ", "    \n    grades_sorted = sorted(grades)\n\
    \    \n    letter_grades = []\n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n", "    \n    grades_sorted = sorted(grades)\n\
    \    \n    grades_sorted.reverse()\n    \n    grades_sorted = [str(grade) for\
    \ grade in grades_sorted]\n    \n    grades_sorted = grades_sorted[:len(grades_sorted)-1]\n\
    \    \n    grades_sorted = [grades_sorted[0]] + grades_sorted\n    \n    grades_sorted\
    \ = grades_sorted[:len(grades_sorted)-1]\n    \n    grades_sorted = [grades_sorted[0]]\
    \ + grades_sorted\n    \n    grades_sorted = grades_sorted[:len(grades_sorted)-1]\n\
    \    \n    grades_sorted = [grades_sorted[0]] + grades_sorted\n    \n    grades_sorted\
    \ = grades_sorted[:len(grades_sorted)-1]\n    \n    grades_sorted = [grades_sorted[0]]\
    \ + grades_sorted\n    \n    grades_sorted = grades_sorted[:len(grades_sorted)-1]\n\
    \    \n    grades_sorted = [grades_sorted[0]] + grades_sorted\n    \n    grades_sorted\
    \ = grades_sorted[:len(grades_sorted)-1]\n    \n    grades_sorted = [grades_sorted[0]]\
    \ + grades_sorted\n    \n    grades_sorted = grades_sorted[:len(grades_sorted)-1]\n\
    \    \n    grades_sorted = [grades_sorted[0]] + grades_sorted\n    \n    grades_sorted\
    \ = grades_sorted[:len(grades_sorted)-1]\n    \n    grades_sorted = [grades_sorted[0]]\
    \ + grades_sorted\n    \n    grades_sorted = grades_sorted[:len(grades_sorted)-1]\n\
    \    \n    grades_sorted = [grades_sorted[0]] + grades_sorted\n    \n    grades_sorted\
    \ = grades_sorted[:len(grades_sorted)-1]\n    \n    grades_sorted = [grades_sorted[0]]\
    \ + grades_sorted\n    \n    grades_sorted = grades_sorted[:len(grades_sorted)-1]\n\
    \    \n    grades_sorted = [grades_sorted[0]] + grades_sorted\n    \n    grades_sorted\
    \ = grades_sorted[:len(grades_sorted)-1]\n    \n    grades_sorted = [grades_sorted[0]]\
    \ + grades_sorted\n    \n    grades_sorted = grades_sorted[:len(grades_sorted)-1]\n\
    \    \n    grades_sorted = [grades_sorted[0]] + grades_sorted\n    \n    grades_sorted\
    \ = grades_sorted[:len(grades_sorted)-1]", "    \n    grades.sort()\n    \n  \
    \  grades_len = len(grades)\n    \n    if grades_len == 0:\n        return []\n\
    \    \n    grades_sum = 0\n    \n    for i in range(grades_len):\n        grades_sum\
    \ += grades[i]\n    \n    grades_avg = grades_sum / grades_len\n    \n    grades_diff\
    \ = 0\n    \n    for i in range(grades_len):\n        grades_diff += abs(grades[i]\
    \ - grades_avg)\n    \n    grades_diff_avg = grades_diff / grades_len\n    \n\
    \    grades_diff_max = grades_diff\n    \n    grades_diff_max_index = 0\n    \n\
    \    for i in range(grades_len):\n        if grades_diff_max > grades_diff:\n\
    \            grades_diff_max = grades_diff\n            grades_diff_max_index\
    \ = i\n    \n    grades_diff_max_index = grades_diff_max_index + 1\n    \n   \
    \ grades_diff_max_index = grades_diff_max_index - 1\n    \n    grades_diff_max_index\
    \ = grades_diff_max_index + 1\n    \n    grades_diff_max_index = grades_diff_max_index\
    \ - 1\n    \n    grades_diff_max_index = grades_diff_max_index + 1\n    \n   \
    \ grades_diff_max_index = grades_diff_max_index - 1\n    \n    grades_diff_max_index\
    \ = grades_diff_max_index + 1\n    \n    grades_diff_max_index = grades_diff_max_index\
    \ - 1\n    \n    grades_diff_max_index = grades_diff_max_index + 1\n    \n   \
    \ grades_diff_max_index = grades_diff_max_index - 1\n    \n    grades_diff_max_index\
    \ = grades_diff_max_index + 1\n    \n    grades_diff_max_index = grades_diff_max_index\
    \ - 1\n    \n    grades_diff_max_index = grades_diff_max_index + 1\n    \n   \
    \ grades_diff_max_index = grades_diff_max_index - 1\n    \n    grades_diff_max_index\
    \ = grades_diff_max_index + 1\n    \n    grades_diff_max_index = grades_diff_max_index\
    \ - 1\n    \n    grades_diff_max_index = grades_diff_max_index + 1\n    \n   \
    \ grades_diff_max_index = grades_diff_max_index - 1\n    \n    grades_diff_max_index\
    \ = grades_diff_max_index + 1\n    \n    grades_diff_max_index = grades_diff_max_index\
    \ - 1\n    \n    grades_diff_max_index = grades_diff_max_index + 1\n    \n   \
    \ grades_diff_max_index = grades_diff_max_index - 1\n    \n    grades_diff_max_index\
    \ = grades_diff_max_index + 1\n    ", "    \n    grades.sort()\n    \n    grades_length\
    \ = len(grades)\n    \n    if grades_length == 0:\n        return []\n    \n \
    \   if grades_length == 1:\n        return ['A+']\n    \n    if grades_length\
    \ == 2:\n        return ['A+', 'B']\n    \n    if grades_length == 3:\n      \
    \  return ['A+', 'B', 'C']\n    \n    if grades_length == 4:\n        return ['A+',\
    \ 'B', 'C-']\n    \n    if grades_length == 5:\n        return ['A+', 'B', 'C-',\
    \ 'C']\n    \n    if grades_length == 6:\n        return ['A+', 'B', 'C-', 'C-']\n\
    \    \n    if grades_length == 7:\n        return ['A+', 'B', 'C-', 'C-', 'C']\n\
    \    \n    if grades_length == 8:\n        return ['A+', 'B', 'C-', 'C-', 'C-']\n\
    \    \n    if grades_length == 9:\n        return ['A+', 'B', 'C-', 'C-', 'C-',\
    \ 'C']\n    \n    if grades_length == 10:\n        return ['A+', 'B', 'C-', 'C-',\
    \ 'C-', 'C-']\n    \n    if grades_length == 11:\n        return ['A+', 'B', 'C-',\
    \ 'C-', 'C-', 'C-', 'C']\n    \n    if grades_length == 12:\n        return ['A+',\
    \ 'B', 'C-', 'C-', 'C-', 'C-', 'C-', 'C']\n    \n    if grades_length == 13:\n\
    \        return ['A+', 'B', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-']\n    \n    if\
    \ grades_length == 14:\n        return ['A+', 'B', 'C-', 'C-', 'C-', 'C-', 'C-',\
    \ 'C-', 'C']\n    \n    if grades_length == 15:\n        return ['A+', 'B', 'C-',\
    \ 'C-', 'C-', 'C-', 'C-', 'C-', 'C-']\n    \n    if grades_length == 16:\n   \
    \     return ['A+', 'B', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-']\n   \
    \ \n    if grades_length == 17:\n        return ['A+', 'B', 'C-', 'C-', 'C-',\
    \ 'C-', 'C-', 'C-', 'C-', 'C-', 'C']\n    \n    if grades_length == 18:\n    \
    \    return ['A+', 'B', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-']\n\
    \    \n    if grades_length == 19:\n        return ['A+', 'B', 'C-', 'C-', 'C-',\
    \ 'C-', 'C-', 'C-', 'C-', 'C-', 'C-']\n    \n    if grades_length == 20:\n   \
    \     return ['A+', 'B', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-',\
    \ 'C']\n    \n    if grades_length == 2", "    \n    grades.sort()\n    \n   \
    \ grades_length = len(grades)\n    \n    letter_grades = []\n    \n    \n    if\
    \ grades_length < 4:\n        letter_grades.append('E')\n        return letter_grades\n\
    \    \n    if grades_length < 5:\n        letter_grades.append('D-') \n      \
    \  return letter_grades\n    \n    if grades_length < 6:\n        letter_grades.append('C-')\n\
    \        return letter_grades\n    \n    if grades_length < 7:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length < 8:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length < 9:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length < 10:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length < 11:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length < 12:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length < 13:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length < 14:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length < 15:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length < 16:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length < 17:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length < 18:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length < 19:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length < 20:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length < 21:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length < 22:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length < 23:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length < 24:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length < 25:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length < 26:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    ", "    \n    grades_sorted = sorted(grades)\n\
    \    \n    grades_sorted_length = len(grades_sorted)\n    \n    letter_grades\
    \ = []\n    \n    if grades_sorted_length == 0:\n        letter_grades.append('E')\n\
    \    else:\n        if grades_sorted_length == 1:\n            letter_grades.append('A')\n\
    \        else:\n            if grades_sorted[0] < 3.0:\n                letter_grades.append('A+')\n\
    \            elif grades_sorted[0] > 3.0 and grades_sorted[0] < 3.7:\n       \
    \         letter_grades.append('A')\n            elif grades_sorted[0] > 3.7 and\
    \ grades_sorted[0] < 3.3:\n                letter_grades.append('A-')\n      \
    \      elif grades_sorted[0] > 3.3 and grades_sorted[0] < 3.0:\n             \
    \   letter_grades.append('B+')\n            elif grades_sorted[0] > 3.0 and grades_sorted[0]\
    \ < 2.7:\n                letter_grades.append('B')\n            elif grades_sorted[0]\
    \ > 2.7 and grades_sorted[0] < 2.3:\n                letter_grades.append('B-')\n\
    \            elif grades_sorted[0] > 2.3 and grades_sorted[0] < 2.0:\n       \
    \         letter_grades.append('C+')\n            elif grades_sorted[0] > 2.0\
    \ and grades_sorted[0] < 1.7:\n                letter_grades.append('C')\n   \
    \         elif grades_sorted[0] > 1.7 and grades_sorted[0] < 1.3:\n          \
    \      letter_grades.append('C-')\n            elif grades_sorted[0] > 1.3 and\
    \ grades_sorted[0] < 1.0:\n                letter_grades.append('D+')\n      \
    \      elif grades_sorted[0] > 1.0 and grades_sorted[0] < 0.7:\n             \
    \   letter_grades.append('D')\n            elif grades_sorted[0] > 0.7 and grades_sorted[0]\
    \ < 0.0:\n                letter_grades.append('D-')\n            else:\n    \
    \            letter_grades.append('E')\n    \n    return letter_grades\n</cell>\n\
    <cell>", "    \n    grades_sorted = sorted(grades)\n    \n    grades_sorted_length\
    \ = len(grades_sorted)\n    \n    grades_sorted_index = 0\n    \n    grades_sorted_index_length\
    \ = len(grades_sorted_index)\n    \n    grades_sorted_index_index_length = len(grades_sorted_index_index)\n\
    \    \n    grades_sorted_index_index_index_length = len(grades_sorted_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_length = len(grades_sorted_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_length = len(grades_sorted_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index_length = len(grades_sorted_index_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index_index_length = len(grades_sorted_index_index_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index_index_index_length\
    \ = len(grades_sorted_index_index_index_index_index_index_index_index)\n    \n\
    \    grades_sorted_index_index_index_index_index_index_index_index_length = len(grades_sorted_index_index_index_index_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index_index_index_index_index_length\
    \ = len(grades_sorted_index_index_index_index_index_index_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index_index_index_index_index_index_length\
    \ = len(grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_length\
    \ = len(grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_index_index_length\
    \ = len(grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_length\
    \ = len(grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_length\
    \ = len(grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_length\
    \ = len(grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_",
  "    \n    grades.sort()\n    \n    grades_length = len(grades)\n    \n    if grades_length\
    \ == 0:\n        return []\n    \n    if grades_length == 1:\n        if grades[0]\
    \ >= 3.0:\n            return [\"A+\"]\n        elif grades[0] >= 2.0:\n     \
    \       return [\"B+\"]\n        elif grades[0] >= 1.7:\n            return [\"\
    C+\"]\n        elif grades[0] >= 1.3:\n            return [\"C-\"]\n        elif\
    \ grades[0] >= 1.0:\n            return [\"D+\"]\n        elif grades[0] >= 0.7:\n\
    \            return [\"D\"]\n        elif grades[0] >= 0.0:\n            return\
    \ [\"D-\"]\n        else:\n            return [\"E\"]\n    \n    \n    if grades_length\
    \ == 2:\n        if grades[0] >= 3.0 and grades[1] >= 3.0:\n            return\
    \ [\"A+\", \"B+\"]\n        elif grades[0] >= 2.0 and grades[1] >= 2.0:\n    \
    \        return [\"B+\", \"C+\"]\n        elif grades[0] >= 1.7 and grades[1]\
    \ >= 1.7:\n            return [\"C+\", \"C-\"]\n        elif grades[0] >= 1.3\
    \ and grades[1] >= 1.3:\n            return [\"C-\", \"A-\"]\n        elif grades[0]\
    \ >= 1.0 and grades[1] >= 1.0:\n            return [\"D+\", \"D\"]\n        elif\
    \ grades[0] >= 0.7 and grades[1] >= 0.7:\n            return [\"D\", \"D-\"]\n\
    \        elif grades[0] >= 0.0 and grades[1] >= 0.0:\n            return [\"D-\"\
    , \"E\"]\n        else:\n            return [\"E\"]\n    \n    \n    if grades_length\
    \ == 3:\n        if grades[0] >= 3.0 and grades[1] >= 3.0 and grades[2] >= 3.0:\n\
    \            return [\"A+\", \"B+\", \"C+\"]\n        elif grades[0] >= 2.0 and\
    \ grades[1] >= 2.0 and grades[2] >= 2.0:\n            return [\"B+\", \"C+\",\
    \ \"C-\"]\n        elif grades[0] >= 1.7 and grades[1] >= 1.7 and grades[2] >=\
    \ 1.7:\n            return [\"C+\", \"C-\", \"A-\"]\n        elif grades[0] >=\
    \ 1.3 and grades[1] >= 1.3 and grades[2] >= 1.3:\n            return [\"C-\",\
    \ \"A-\", \"A-\"]\n        elif grades[0] >= 1.0 and grades[1] >= 1.0 and grades[2]\
    \ >= 1.0:\n            return [\"D+\", \"D\", \"D-\"]\n        elif grades[0]\
    \ >= 0.7 and grades[1] >= 0.7 and grades[2] >= 0.7:\n            return [\"D\"\
    , \"D-\", \"D-\"]\n        elif grades[0] >= 0.0 and grades[1] >= 0.0 and grades[2]\
    \ >= 0.0:\n            return [\"D-\", \"E\", \"E\"]\n        else:\n        \
    \    return [\"E\"]\n    \n    \n    if grades_length == 4:", "    \n    grades_sorted\
    \ = sorted(grades)\n    \n    grades_sorted_length = len(grades_sorted)\n    \n\
    \    letter_grades = []\n    \n    if grades_sorted_length == 0:\n        letter_grades.append('E')\n\
    \        return letter_grades\n    \n    if grades_sorted_length == 1:\n     \
    \   letter_grades.append('A')\n        return letter_grades\n    \n    if grades_sorted_length\
    \ == 2:\n        if grades_sorted[0] > grades_sorted[1]:\n            letter_grades.append('A+')\n\
    \        else:\n            letter_grades.append('A-')\n        return letter_grades\n\
    \    \n    if grades_sorted_length == 3:\n        if grades_sorted[0] > grades_sorted[1]\
    \ and grades_sorted[0] > grades_sorted[2]:\n            letter_grades.append('A+')\n\
    \        elif grades_sorted[1] > grades_sorted[2]:\n            letter_grades.append('A-')\n\
    \        else:\n            letter_grades.append('B+')\n        return letter_grades\n\
    \    \n    if grades_sorted_length == 4:\n        if grades_sorted[0] > grades_sorted[1]\
    \ and grades_sorted[0] > grades_sorted[2] and grades_sorted[0] > grades_sorted[3]:\n\
    \            letter_grades.append('A+')\n        elif grades_sorted[1] > grades_sorted[2]\
    \ and grades_sorted[1] > grades_sorted[3]:\n            letter_grades.append('A-')\n\
    \        elif grades_sorted[2] > grades_sorted[3]:\n            letter_grades.append('B+')\n\
    \        else:\n            letter_grades.append('B-')\n        return letter_grades\n\
    \    \n    if grades_sorted_length == 5:\n        if grades_sorted[0] > grades_sorted[1]\
    \ and grades_sorted[0] > grades_sorted[2] and grades_sorted[0] > grades_sorted[3]\
    \ and grades_sorted[0] > grades_sorted[4]:\n            letter_grades.append('A+')\n\
    \        elif grades_sorted[1] > grades_sorted[2] and grades_sorted[1] > grades_sorted[3]\
    \ and grades_sorted[1] > grades_sorted[4]:\n            letter_grades.append('A-')\n\
    \        elif grades_sorted[2] > grades_sorted[3] and grades_sorted[2] > grades_sorted[4]:\n\
    \            letter_grades.append('B+')\n        elif grades_sorted[3] > grades_sorted[4]:\n\
    \            letter_grades.append('B-')\n        else:\n            letter_grades.append('C+')\n\
    \        return letter_grades\n    \n    if grades_sorted_length == 6:\n     \
    \   if grades_sorted[0] > grades_sorted[1] and grades_sorted[0] > grades_sorted[2]\
    \ and grades_sorted[0] > grades_sorted[3] and grades_sorted[0] > grades_", " \
    \   \n    grades_sorted = sorted(grades)\n    \n    letter_grades = []\n    \n\
    \    for grade in grades_sorted:\n        if grade < 3.0:\n            letter_grades.append('A')\n\
    \        elif grade < 4.0:\n            letter_grades.append('A-')\n        elif\
    \ grade < 5.0:\n            letter_grades.append('B+')\n        elif grade < 6.0:\n\
    \            letter_grades.append('B')\n        elif grade < 7.0:\n          \
    \  letter_grades.append('B-')\n        elif grade < 8.0:\n            letter_grades.append('C+')\n\
    \        elif grade < 9.0:\n            letter_grades.append('C')\n        elif\
    \ grade < 10.0:\n            letter_grades.append('C-')\n        elif grade <\
    \ 11.0:\n            letter_grades.append('D+')\n        elif grade < 12.0:\n\
    \            letter_grades.append('D')\n        elif grade < 13.0:\n         \
    \   letter_grades.append('D-')\n        elif grade < 14.0:\n            letter_grades.append('E')\n\
    \        else:\n            letter_grades.append('F')\n    \n    return letter_grades\n\
    </cell>\n<cell>", "    \n    grades_sorted = sorted(grades)\n    grades_sorted.reverse()\n\
    \    \n    grades_sorted = [str(grade) for grade in grades_sorted]\n    \n   \
    \ grades_sorted = [grades_sorted[i: i+3] for i in range(0, len(grades_sorted),\
    \ 3)]\n    \n    grades_sorted = [grades_sorted[i] + grades_sorted[i+1] + grades_sorted[i+2]\
    \ for i in range(len(grades_sorted)-1)]\n    \n    grades_sorted = [grades_sorted[i]\
    \ + grades_sorted[i+1] for i in range(len(grades_sorted)-1)]\n    \n    grades_sorted\
    \ = [grades_sorted[i] + grades_sorted[i+1] for i in range(len(grades_sorted)-1)]\n\
    \    \n    grades_sorted = [grades_sorted[i] + grades_sorted[i+1] for i in range(len(grades_sorted)-1)]\n\
    \    \n    grades_sorted = [grades_sorted[i] + grades_sorted[i+1] for i in range(len(grades_sorted)-1)]\n\
    \    \n    grades_sorted = [grades_sorted[i] + grades_sorted[i+1] for i in range(len(grades_sorted)-1)]\n\
    \    \n    grades_sorted = [grades_sorted[i] + grades_sorted[i+1] for i in range(len(grades_sorted)-1)]\n\
    \    \n    grades_sorted = [grades_sorted[i] + grades_sorted[i+1] for i in range(len(grades_sorted)-1)]\n\
    \    \n    grades_sorted = [grades_sorted[i] + grades_sorted[i+1] for i in range(len(grades_sorted)-1)]\n\
    \    \n    grades_sorted = [grades_sorted[i] + grades_sorted[i+1] for i in range(len(grades_sorted)-1)]\n\
    \    \n    grades_sorted = [grades_sorted[i] + grades_sorted[i+1] for i in range(len(grades_sorted)-1)]\n\
    \    \n    grades_sorted = [grades_sorted[i] + grades_sorted[i+1] for i in range(len(grades_sorted)-1)]\n\
    \    \n    grades_sorted = [grades_sorted[i] + grades_sorted[i+1] for i in range(len(grades_sorted)-1)]\n\
    \    \n    grades_sorted = [grades_sorted[i] + grades_sorted[i+1] for i in range(len(grades_sorted)-1)]\n\
    \    \n    grades_sorted = [grades_sorted[i] + grades_sorted[i+1] for i in range(len(grades_sorted)-1)]\n\
    \    \n    grades_sorted = [grades_sorted[i] + grades_sorted[i+1] for i in range(len(grades_sorted)-1)]\n\
    \    \n    grades_sorted = [grades_sorted[i] + grades_sorted[i+1] for i in range(len(grades_sorted)-1)]\n\
    \    \n    grade", "    \n    grades_sorted = sorted(grades)\n    \n    letter_grades\
    \ = []\n    \n    \n    if grades_sorted[0] < 3.0:\n        letter_grades.append('A+')\n\
    \    elif grades_sorted[0] < 3.7:\n        letter_grades.append('A')\n    elif\
    \ grades_sorted[0] < 3.3:\n        letter_grades.append('A-')\n    elif grades_sorted[0]\
    \ < 3.0:\n        letter_grades.append('B+')\n    elif grades_sorted[0] < 2.7:\n\
    \        letter_grades.append('B')\n    elif grades_sorted[0] < 2.3:\n       \
    \ letter_grades.append('B-')\n    elif grades_sorted[0] < 2.0:\n        letter_grades.append('C+')\n\
    \    elif grades_sorted[0] < 1.7:\n        letter_grades.append('C')\n    elif\
    \ grades_sorted[0] < 1.3:\n        letter_grades.append('C-')\n    elif grades_sorted[0]\
    \ < 1.0:\n        letter_grades.append('D+')\n    elif grades_sorted[0] < 0.7:\n\
    \        letter_grades.append('D')\n    elif grades_sorted[0] < 0.0:\n       \
    \ letter_grades.append('D-')\n    else:\n        letter_grades.append('E')\n \
    \   \n    return letter_grades\n", "    \n    grades.sort()\n    \n    grades_len\
    \ = len(grades)\n    \n    if grades_len == 0:\n        return []\n    \n    if\
    \ grades_len == 1:\n        return ['A+']\n    \n    if grades_len == 2:\n   \
    \     return ['A+', 'B']\n    \n    if grades_len == 3:\n        return ['A+',\
    \ 'B', 'C']\n    \n    if grades_len == 4:\n        return ['A+', 'B', 'C-']\n\
    \    \n    if grades_len == 5:\n        return ['A+', 'B', 'C-', 'C']\n    \n\
    \    if grades_len == 6:\n        return ['A+', 'B', 'C-', 'C-']\n    \n    if\
    \ grades_len == 7:\n        return ['A+', 'B', 'C-', 'C-', 'C']\n    \n    if\
    \ grades_len == 8:\n        return ['A+', 'B', 'C-', 'C-', 'C-']\n    \n    if\
    \ grades_len == 9:\n        return ['A+', 'B', 'C-', 'C-', 'C-', 'C']\n    \n\
    \    if grades_len == 10:\n        return ['A+', 'B', 'C-', 'C-', 'C-', 'C-']\n\
    \    \n    if grades_len == 11:\n        return ['A+', 'B', 'C-', 'C-', 'C-',\
    \ 'C-', 'C']\n    \n    if grades_len == 12:\n        return ['A+', 'B', 'C-',\
    \ 'C-', 'C-', 'C-', 'C-', 'C']\n    \n    if grades_len == 13:\n        return\
    \ ['A+', 'B', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-']\n    \n    if grades_len ==\
    \ 14:\n        return ['A+', 'B', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C']\n \
    \   \n    if grades_len == 15:\n        return ['A+', 'B', 'C-', 'C-', 'C-', 'C-',\
    \ 'C-', 'C-', 'C-']\n    \n    if grades_len == 16:\n        return ['A+', 'B',\
    \ 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-']\n    \n    if grades_len ==\
    \ 17:\n        return ['A+', 'B', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-',\
    \ 'C']\n    \n    if grades_len == 18:\n        return ['A+', 'B', 'C-', 'C-',\
    \ 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-']\n    \n    if grades_len == 19:\n\
    \        return ['A+', 'B', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-',\
    \ 'C']\n    \n    if grades_len == 20:\n        return ['A+', 'B', 'C-', 'C-',\
    \ 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C-', 'C']\n    \n    if grade", " \
    \   \n    grades_sorted = sorted(grades)\n    \n    letter_grades = []\n    \n\
    \    \n    for grade in grades_sorted:\n        if grade >= 3.0:\n           \
    \ letter_grades.append('A+')\n        elif grade >= 2.0:\n            letter_grades.append('B+')\n\
    \        elif grade >= 1.7:\n            letter_grades.append('C+')\n        elif\
    \ grade >= 1.3:\n            letter_grades.append('C-')\n        elif grade >=\
    \ 1.0:\n            letter_grades.append('D+')\n        elif grade >= 0.7:\n \
    \           letter_grades.append('D')\n        elif grade >= 0.0:\n          \
    \  letter_grades.append('D-')\n        else:\n            letter_grades.append('E')\n\
    \    \n    return letter_grades\n", "    \n    grades.sort()\n    \n    letter_grades\
    \ = []\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    ", "    \n    grades.sort()\n    \n    grades_len\
    \ = len(grades)\n    \n    if grades_len == 0:\n        return []\n    \n    if\
    \ grades_len == 1:\n        if grades[0] < 4.0:\n            return ['A+']\n \
    \       elif grades[0] > 3.7:\n            return ['A']\n        elif grades[0]\
    \ > 3.3:\n            return ['A-']\n        elif grades[0] > 3.0:\n         \
    \   return ['B+']\n        elif grades[0] > 2.7:\n            return ['B']\n \
    \       elif grades[0] > 2.3:\n            return ['B-']\n        elif grades[0]\
    \ > 2.0:\n            return ['C+']\n        elif grades[0] > 1.7:\n         \
    \   return ['C']\n        elif grades[0] > 1.3:\n            return ['C-']\n \
    \       elif grades[0] > 1.0:\n            return ['D+']\n        elif grades[0]\
    \ > 0.7:\n            return ['D']\n        elif grades[0] > 0.0:\n          \
    \  return ['D-']\n        else:\n            return ['E']\n    \n    if grades_len\
    \ == 2:\n        if grades[0] < 4.0 and grades[1] < 4.0:\n            return ['A+',\
    \ 'B+']\n        elif grades[0] > 3.7 and grades[1] > 3.7:\n            return\
    \ ['A+', 'B']\n        elif grades[0] > 3.3 and grades[1] > 3.3:\n           \
    \ return ['A+', 'B-']\n        elif grades[0] > 3.0 and grades[1] > 3.0:\n   \
    \         return ['A', 'B+']\n        elif grades[0] > 2.7 and grades[1] > 2.7:\n\
    \            return ['A', 'B']\n        elif grades[0] > 2.3 and grades[1] > 2.3:\n\
    \            return ['A', 'B-']\n        elif grades[0] > 2.0 and grades[1] >\
    \ 2.0:\n            return ['A+', 'C+']\n        elif grades[0] > 1.7 and grades[1]\
    \ > 1.7:\n            return ['A', 'C']\n        elif grades[0] > 1.3 and grades[1]\
    \ > 1.3:\n            return ['A', 'C-']\n        elif grades[0] > 1.0 and grades[1]\
    \ > 1.0:\n            return ['A+', 'B+', 'C+']\n        elif grades[0] > 0.7\
    \ and grades[1] > 0.7:\n            return ['A', 'B', 'C']\n        elif grades[0]\
    \ > 0.0 and grades[1] > 0.0:\n            return ['A', 'B', 'C-']\n        else:\n\
    \            return ['E']\n    \n    if grades_len == 3:\n        if grades[0]\
    \ < 4.0 and grades[1] < 4.0 and grades[2] < 4.0:\n            return ['A+', 'B+',\
    \ 'C+']\n        elif grades[0] > 3.7 and grades[1] > 3.7 and grades[2] > 3.7:\n\
    \            return ['A+', 'B+', 'C']\n        elif grades[0] > 3.3 and grades[1]\
    \ > 3.3 and grades[2] > 3.3:\n            return ['A+', 'B+', 'C-']\n", "    \n\
    \    grades.sort()\n    \n    letter_grades = []\n    \n    for grade in grades:\n\
    \        if grade < 3.0:\n            letter_grades.append('A+')\n        elif\
    \ grade < 3.7:\n            letter_grades.append('A')\n        elif grade < 3.3:\n\
    \            letter_grades.append('A-')\n        elif grade < 3.0:\n         \
    \   letter_grades.append('B+')\n        elif grade < 2.7:\n            letter_grades.append('B')\n\
    \        elif grade < 2.3:\n            letter_grades.append('B-')\n        elif\
    \ grade < 2.0:\n            letter_grades.append('C+')\n        elif grade < 1.7:\n\
    \            letter_grades.append('C')\n        elif grade < 1.3:\n          \
    \  letter_grades.append('C-')\n        elif grade < 1.0:\n            letter_grades.append('D+')\n\
    \        elif grade < 0.7:\n            letter_grades.append('D')\n        elif\
    \ grade < 0.0:\n            letter_grades.append('D-')\n        else:\n      \
    \      letter_grades.append('E')\n    \n    return letter_grades\n    \n    ",
  "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    letter_grades\
    \ = []\n    \n    for grade in grades:\n        if grade >= 4.0:\n           \
    \ letter_grades.append('A+')\n        elif grade > 3.7:\n            letter_grades.append('A')\n\
    \        elif grade > 3.3:\n            letter_grades.append('A-')\n        elif\
    \ grade > 3.0:\n            letter_grades.append('B+')\n        elif grade > 2.7:\n\
    \            letter_grades.append('B')\n        elif grade > 2.3:\n          \
    \  letter_grades.append('B-')\n        elif grade > 2.0:\n            letter_grades.append('C+')\n\
    \        elif grade > 1.7:\n            letter_grades.append('C')\n        elif\
    \ grade > 1.3:\n            letter_grades.append('C-')\n        elif grade > 1.0:\n\
    \            letter_grades.append('D+')\n        elif grade > 0.7:\n         \
    \   letter_grades.append('D')\n        elif grade > 0.0:\n            letter_grades.append('D-')\n\
    \        else:\n            letter_grades.append('E')\n    \n    return letter_grades\n",
  "    \n    letter_grades = []\n    \n    for grade in grades:\n        if grade\
    \ >= 4.0:\n            letter_grades.append('A+')\n        elif grade > 3.7:\n\
    \            letter_grades.append('A')\n        elif grade > 3.3:\n          \
    \  letter_grades.append('A-')\n        elif grade > 3.0:\n            letter_grades.append('B+')\n\
    \        elif grade > 2.7:\n            letter_grades.append('B')\n        elif\
    \ grade > 2.3:\n            letter_grades.append('B-')\n        elif grade > 2.0:\n\
    \            letter_grades.append('C+')\n        elif grade > 1.7:\n         \
    \   letter_grades.append('C')\n        elif grade > 1.3:\n            letter_grades.append('C-')\n\
    \        elif grade > 1.0:\n            letter_grades.append('D+')\n        elif\
    \ grade > 0.7:\n            letter_grades.append('D')\n        elif grade > 0.0:\n\
    \            letter_grades.append('D-')\n        else:\n            letter_grades.append('E')\n\
    \    \n    return letter_grades\n", "    \n    grades.sort()\n    \n    grades_length\
    \ = len(grades)\n    \n    letter_grades = []\n    \n    if grades_length < 1:\n\
    \        return letter_grades\n    \n    if grades_length == 1:\n        letter_grades.append('A+')\n\
    \        return letter_grades\n    \n    if grades_length == 2:\n        letter_grades.append('A')\n\
    \        return letter_grades\n    \n    if grades_length == 3:\n        letter_grades.append('A-')\n\
    \        return letter_grades\n    \n    if grades_length == 4:\n        letter_grades.append('B+')\n\
    \        return letter_grades\n    \n    if grades_length == 5:\n        letter_grades.append('B')\n\
    \        return letter_grades\n    \n    if grades_length == 6:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 7:\n        letter_grades.append('C+')\n\
    \        return letter_grades\n    \n    if grades_length == 8:\n        letter_grades.append('C')\n\
    \        return letter_grades\n    \n    if grades_length == 9:\n        letter_grades.append('C-')\n\
    \        return letter_grades\n    \n    if grades_length == 10:\n        letter_grades.append('D+')\n\
    \        return letter_grades\n    \n    if grades_length == 11:\n        letter_grades.append('D')\n\
    \        return letter_grades\n    \n    if grades_length == 12:\n        letter_grades.append('D-')\n\
    \        return letter_grades\n    \n    if grades_length == 13:\n        letter_grades.append('E')\n\
    \        return letter_grades\n    \n    if grades_length == 14:\n        letter_grades.append('F')\n\
    \        return letter_grades\n    \n    if grades_length == 15:\n        letter_grades.append('F')\n\
    \        return letter_grades\n    \n    if grades_length == 16:\n        letter_grades.append('F')\n\
    \        return letter_grades\n    \n    if grades_length == 17:\n        letter_grades.append('F')\n\
    \        return letter_grades\n    \n    if grades_length == 18:\n        letter_grades.append('F')\n\
    \        return letter_grades\n    \n    if grades_length == 19:\n        letter_grades.append('F')\n\
    \        return letter_grades\n    \n    if grades_length == 20:\n        letter_grades.append('F')\n\
    \        return letter_grades\n    \n    if grades_length == 21:\n        letter_grades.append('F')\n\
    \        return letter_grades\n    \n    if grades_length == 22:\n        letter_grades.append('F')\n\
    \        return letter_grades\n    \n    if grades_length == 23:\n        letter_grade",
  "    \n    grades_sorted = sorted(grades)\n    \n    letter_grades = []\n    \n\
    \    for grade in grades_sorted:\n        if grade > 3.7:\n            letter_grades.append('A+')\n\
    \        elif grade > 3.3:\n            letter_grades.append('A-')\n        elif\
    \ grade > 3.0:\n            letter_grades.append('B+')\n        elif grade > 2.7:\n\
    \            letter_grades.append('B')\n        elif grade > 2.3:\n          \
    \  letter_grades.append('B-')\n        elif grade > 2.0:\n            letter_grades.append('C+')\n\
    \        elif grade > 1.7:\n            letter_grades.append('C')\n        elif\
    \ grade > 1.3:\n            letter_grades.append('C-')\n        elif grade > 1.0:\n\
    \            letter_grades.append('D+')\n        elif grade > 0.7:\n         \
    \   letter_grades.append('D')\n        elif grade > 0.0:\n            letter_grades.append('D-')\n\
    \        else:\n            letter_grades.append('E')\n    \n    return letter_grades\n",
  "    \n    grades_sorted = sorted(grades)\n    \n    letter_grades = []\n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", " \
    \   \n    grades_sorted = sorted(grades)\n    \n    grades_sorted.reverse()\n\
    \    \n    grades_sorted = grades_sorted + [grades_sorted[0]]\n    \n    grades_sorted\
    \ = grades_sorted + [grades_sorted[-1]]\n    \n    grades_sorted = grades_sorted\
    \ + [grades_sorted[0]]\n    \n    grades_sorted = grades_sorted + [grades_sorted[-1]]\n\
    \    \n    grades_sorted = grades_sorted + [grades_sorted[0]]\n    \n    grades_sorted\
    \ = grades_sorted + [grades_sorted[-1]]\n    \n    grades_sorted = grades_sorted\
    \ + [grades_sorted[0]]\n    \n    grades_sorted = grades_sorted + [grades_sorted[-1]]\n\
    \    \n    grades_sorted = grades_sorted + [grades_sorted[0]]\n    \n    grades_sorted\
    \ = grades_sorted + [grades_sorted[-1]]\n    \n    grades_sorted = grades_sorted\
    \ + [grades_sorted[0]]\n    \n    grades_sorted = grades_sorted + [grades_sorted[-1]]\n\
    \    \n    grades_sorted = grades_sorted + [grades_sorted[0]]\n    \n    grades_sorted\
    \ = grades_sorted + [grades_sorted[-1]]\n    \n    grades_sorted = grades_sorted\
    \ + [grades_sorted[0]]\n    \n    grades_sorted = grades_sorted + [grades_sorted[-1]]\n\
    \    \n    grades_sorted = grades_sorted + [grades_sorted[0]]\n    \n    grades_sorted\
    \ = grades_sorted + [grades_sorted[-1]]\n    \n    grades_sorted = grades_sorted\
    \ + [grades_sorted[0]]\n    \n    grades_sorted = grades_sorted + [grades_sorted[-1]]\n\
    \    \n    grades_sorted = grades_sorted + [grades_sorted[0]]\n    \n    grades_sorted\
    \ = grades_sorted + [grades_sorted[-1]]\n    \n    grades_sorted = grades_sorted\
    \ + [grades_sorted[0]]\n    \n    grades_sorted = grades_sorted + [grades_sorted[-1]]\n\
    \    \n    grades_sorted = grades_sorted + [grades_sorted[0]]\n    \n    grades_sorted\
    \ = grades_sorted + [grades_sorted[-1]]\n    \n    grades_sorted = grades_sorted\
    \ + [grades_sorted[0]]\n    \n    grades_sorted = grades_sorted + [grades_sorted[-1]]\n\
    \    ", "    \n    grades_sorted = sorted(grades)\n    grades_sorted.reverse()\n\
    \    \n    letter_grades = []\n    \n    for grade in grades_sorted:\n       \
    \ if grade >= 3.0:\n            letter_grades.append('A+')\n        elif grade\
    \ >= 2.0:\n            letter_grades.append('B+')\n        elif grade >= 1.7:\n\
    \            letter_grades.append('C+')\n        elif grade >= 1.3:\n        \
    \    letter_grades.append('C')\n        elif grade >= 1.0:\n            letter_grades.append('D+')\n\
    \        elif grade >= 0.7:\n            letter_grades.append('D')\n        elif\
    \ grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n     \
    \       letter_grades.append('E')\n            \n    return letter_grades\n</cell>\n\
    <cell>", "    \n    grades.sort()\n    \n    grades_len = len(grades)\n    \n\
    \    letter_grades = []\n    \n    if grades_len == 0:\n        return letter_grades\n\
    \    \n    if grades_len == 1:\n        letter_grades.append('A+' if grades[0]\
    \ >= 3.0 else 'A')\n        return letter_grades\n    \n    if grades_len == 2:\n\
    \        letter_grades.append('A+' if grades[0] >= 3.0 else 'A')\n        letter_grades.append('B+'\
    \ if grades[1] >= 3.0 else 'B')\n        return letter_grades\n    \n    if grades_len\
    \ == 3:\n        letter_grades.append('A+' if grades[0] >= 3.0 else 'A')\n   \
    \     letter_grades.append('B+' if grades[1] >= 3.0 else 'B')\n        letter_grades.append('C+'\
    \ if grades[2] >= 3.0 else 'C')\n        return letter_grades\n    \n    if grades_len\
    \ == 4:\n        letter_grades.append('A+' if grades[0] >= 3.0 else 'A')\n   \
    \     letter_grades.append('B+' if grades[1] >= 3.0 else 'B')\n        letter_grades.append('C+'\
    \ if grades[2] >= 3.0 else 'C')\n        letter_grades.append('D+' if grades[3]\
    \ >= 3.0 else 'D')\n        return letter_grades\n    \n    if grades_len == 5:\n\
    \        letter_grades.append('A+' if grades[0] >= 3.0 else 'A')\n        letter_grades.append('B+'\
    \ if grades[1] >= 3.0 else 'B')\n        letter_grades.append('C+' if grades[2]\
    \ >= 3.0 else 'C')\n        letter_grades.append('D+' if grades[3] >= 3.0 else\
    \ 'D')\n        letter_grades.append('E+' if grades[4] >= 3.0 else 'E')\n    \
    \    return letter_grades\n    \n    if grades_len == 6:\n        letter_grades.append('A+'\
    \ if grades[0] >= 3.0 else 'A')\n        letter_grades.append('B+' if grades[1]\
    \ >= 3.0 else 'B')\n        letter_grades.append('C+' if grades[2] >= 3.0 else\
    \ 'C')\n        letter_grades.append('D+' if grades[3] >= 3.0 else 'D')\n    \
    \    letter_grades.append('E+' if grades[4] >= 3.0 else 'E')\n        letter_grades.append('F+'\
    \ if grades[5] >= 3.0 else 'F')\n        return letter_grades\n    \n    if grades_len\
    \ == 7:\n        letter_grades.append('A+' if grades[0] >= 3.0 else 'A')\n   \
    \     letter_grades.append('B+' if grades[1] >= 3.0 else 'B')\n        letter_grades.append('C",
  "    \n    grades_sorted = sorted(grades)\n    \n    letter_grades = []\n    \n\
    \    for grade in grades_sorted:\n        if grade < 3.0:\n            letter_grades.append('A')\n\
    \        elif grade < 3.7:\n            letter_grades.append('A-')\n        elif\
    \ grade < 4.0:\n            letter_grades.append('B+')\n        elif grade < 4.7:\n\
    \            letter_grades.append('B')\n        elif grade < 5.0:\n          \
    \  letter_grades.append('B-')\n        elif grade < 5.7:\n            letter_grades.append('C+')\n\
    \        elif grade < 6.0:\n            letter_grades.append('C')\n        elif\
    \ grade < 6.7:\n            letter_grades.append('C-')\n        elif grade < 7.0:\n\
    \            letter_grades.append('D+')\n        elif grade < 7.7:\n         \
    \   letter_grades.append('D')\n        elif grade < 8.0:\n            letter_grades.append('D-')\n\
    \        elif grade < 8.7:\n            letter_grades.append('E')\n        else:\n\
    \            letter_grades.append('F')\n    \n    return letter_grades\n", " \
    \   \n    grades_sorted = sorted(grades)\n    \n    letter_grades = []\n    \n\
    \    for grade in grades_sorted:\n        if grade >= 3.0:\n            letter_grades.append('A+')\n\
    \        elif grade >= 2.7:\n            letter_grades.append('B')\n        elif\
    \ grade >= 2.3:\n            letter_grades.append('B-')\n        elif grade >=\
    \ 1.7:\n            letter_grades.append('C')\n        elif grade >= 1.3:\n  \
    \          letter_grades.append('C-')\n        elif grade >= 1.0:\n          \
    \  letter_grades.append('D+')\n        elif grade >= 0.7:\n            letter_grades.append('D')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n\
    \            letter_grades.append('E')\n            \n    return letter_grades\n",
  "    \n    grades_sorted = sorted(grades)\n    \n    letter_grades = []\n    \n\
    \    for grade in grades_sorted:\n        if grade >= 3.0:\n            letter_grades.append('A+')\n\
    \        elif grade >= 2.7:\n            letter_grades.append('B')\n        elif\
    \ grade >= 2.3:\n            letter_grades.append('B-')\n        elif grade >=\
    \ 1.7:\n            letter_grades.append('C')\n        elif grade >= 1.3:\n  \
    \          letter_grades.append('C-')\n        elif grade >= 1.0:\n          \
    \  letter_grades.append('D+')\n        elif grade >= 0.7:\n            letter_grades.append('D')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n\
    \            letter_grades.append('E')\n    \n    return letter_grades\n", " \
    \   \n    letter_grades = []\n    \n    for grade in grades:\n        if grade\
    \ >= 3.0:\n            letter_grades.append('A+')\n        elif grade >= 2.7:\n\
    \            letter_grades.append('B')\n        elif grade >= 2.3:\n         \
    \   letter_grades.append('B-')\n        elif grade >= 1.7:\n            letter_grades.append('C')\n\
    \        elif grade >= 1.3:\n            letter_grades.append('C-')\n        elif\
    \ grade >= 1.0:\n            letter_grades.append('D+')\n        elif grade >=\
    \ 0.7:\n            letter_grades.append('D')\n        elif grade >= 0.0:\n  \
    \          letter_grades.append('D-')\n        else:\n            letter_grades.append('E')\n\
    \    \n    return letter_grades\n</cell>\n<cell>", "    \n    grades_sorted =\
    \ sorted(grades)\n    grades_sorted_reverse = sorted(grades_sorted, reverse=True)\n\
    \    \n    grades_sorted_reverse.insert(0, 0.0)\n    grades_sorted_reverse.insert(0,\
    \ 0.0)\n    \n    grades_sorted_reverse.insert(0, 0.0)\n    grades_sorted_reverse.insert(0,\
    \ 0.0)\n    \n    grades_sorted_reverse.insert(0, 0.0)\n    grades_sorted_reverse.insert(0,\
    \ 0.0)\n    \n    grades_sorted_reverse.insert(0, 0.0)\n    grades_sorted_reverse.insert(0,\
    \ 0.0)\n    \n    grades_sorted_reverse.insert(0, 0.0)\n    grades_sorted_reverse.insert(0,\
    \ 0.0)\n    \n    grades_sorted_reverse.insert(0, 0.0)\n    grades_sorted_reverse.insert(0,\
    \ 0.0)\n    \n    grades_sorted_reverse.insert(0, 0.0)\n    grades_sorted_reverse.insert(0,\
    \ 0.0)\n    \n    grades_sorted_reverse.insert(0, 0.0)\n    grades_sorted_reverse.insert(0,\
    \ 0.0)\n    \n    grades_sorted_reverse.insert(0, 0.0)\n    grades_sorted_reverse.insert(0,\
    \ 0.0)\n    \n    grades_sorted_reverse.insert(0, 0.0)\n    grades_sorted_reverse.insert(0,\
    \ 0.0)\n    \n    grades_sorted_reverse.insert(0, 0.0)\n    grades_sorted_reverse.insert(0,\
    \ 0.0)\n    \n    grades_sorted_reverse.insert(0, 0.0)\n    grades_sorted_reverse.insert(0,\
    \ 0.0)\n    \n    grades_sorted_reverse.insert(0, 0.0)\n    grades_sorted_reverse.insert(0,\
    \ 0.0)\n    \n    grades_sorted_reverse.insert(0, 0.0)\n    grades_sorted_reverse.insert(0,\
    \ 0.0)\n    \n    grades_sorted_reverse.insert(0, 0.0)\n    grades_sorted_reverse.insert(0,\
    \ 0.0)\n    \n    grades_sorted_reverse.insert(0, 0.0)\n    grades_sorted_reverse.insert(0,\
    \ 0.0)\n    \n    grades_sorted_reverse.insert(0, 0.0)\n    grades_sorted_reverse.insert(0,\
    \ 0.0)\n    \n    grades_sorted_reverse.insert(0, 0.0)\n    grades_sorted_reverse.insert(0,\
    \ 0.0)\n    \n    grades_sorted_reverse.insert(0, 0.0)\n    grades_sorted_reverse.insert(0,\
    \ 0.0)\n    \n    grades_sorted_reverse.insert(0, 0.0)\n    grades_sorted_reverse.insert(0,\
    \ 0.0)\n    \n    grades_sorted_reverse.insert(0, 0.0)\n    grades_sorted_reverse.insert(0,\
    \ 0.0)\n    \n    grades_sorted_reverse.insert(0, 0.0)\n    grades_sorted_reverse.insert(0,\
    \ 0.0)\n    \n    grades_sorted_reverse.insert(0, 0.0)\n    grades_sorted_reverse.insert(0,\
    \ 0.0)\n    \n    grades_sorted_reverse.insert(0, 0.0)\n    grades_sorted_reverse.insert(0,\
    \ 0.0)\n    \n    grades_sorted_reverse.", "    \n    grades.sort()\n    \n  \
    \  grades_length = len(grades)\n    \n    if grades_length < 2:\n        return\
    \ ['E']\n    \n    if grades_length == 2:\n        if grades[0] > grades[1]:\n\
    \            return ['A+']\n        else:\n            return ['A']\n    \n  \
    \  if grades_length == 3:\n        if grades[0] > grades[1] and grades[0] > grades[2]:\n\
    \            return ['A+']\n        elif grades[1] > grades[2]:\n            return\
    \ ['A']\n        elif grades[0] == grades[1] and grades[1] > grades[2]:\n    \
    \        return ['A']\n        elif grades[0] == grades[1] and grades[1] == grades[2]:\n\
    \            return ['B']\n        elif grades[0] > grades[1] and grades[1] >\
    \ grades[2]:\n            return ['B']\n        elif grades[0] > grades[1] and\
    \ grades[1] == grades[2]:\n            return ['B']\n        elif grades[0] ==\
    \ grades[1] and grades[1] > grades[2]:\n            return ['B']\n        elif\
    \ grades[0] == grades[1] and grades[1] == grades[2]:\n            return ['C']\n\
    \        elif grades[0] > grades[1] and grades[1] == grades[2]:\n            return\
    \ ['C']\n        elif grades[0] == grades[1] and grades[1] > grades[2]:\n    \
    \        return ['C']\n        elif grades[0] == grades[1] and grades[1] == grades[2]:\n\
    \            return ['C']\n        elif grades[0] > grades[1] and grades[1] >\
    \ grades[2]:\n            return ['C']\n        elif grades[0] == grades[1] and\
    \ grades[1] > grades[2]:\n            return ['C']\n        elif grades[0] ==\
    \ grades[1] and grades[1] == grades[2]:\n            return ['C']\n        elif\
    \ grades[0] > grades[1] and grades[1] > grades[2]:\n            return ['C']\n\
    \        elif grades[0] == grades[1] and grades[1] > grades[2]:\n            return\
    \ ['C']\n        elif grades[0] == grades[1] and grades[1] == grades[2]:\n   \
    \         return ['C']\n        elif grades[0] > grades[1] and grades[1] > grades[2]:\n\
    \            return ['C']\n        elif grades[0] == grades[1] and grades[1] >\
    \ grades[2]:\n            return ['C']\n        elif grades[0] == grades[1] and\
    \ grades[1] == grades[2]:\n            return ['C']\n        elif grades[0] >\
    \ grades[1] and grades[1] > grades[2]:\n            return ['C']\n        elif\
    \ grades[0] == grades[1] and grades[1] > grades[2]:\n            return ['C']\n\
    \        elif grades[0] == grades[1] and grades[1] == grades[2]:\n           \
    \ return ['C']\n        elif grades[0] > grades[1] and grades[1] > grades[2]:\n\
    \            return ['C']\n        elif grades[0] == grades[1] and grades[1] >\
    \ grades[2]:\n            return ['C", "    \n    grades.sort()\n    \n    grades_length\
    \ = len(grades)\n    \n    if grades_length < 1:\n        return []\n    \n  \
    \  if grades_length == 1:\n        return [\"A+\"]\n    \n    if grades_length\
    \ == 2:\n        if grades[0] > grades[1]:\n            return [\"A+\"]\n    \
    \    else:\n            return [\"A-\"]\n    \n    if grades_length == 3:\n  \
    \      if grades[0] > grades[1] and grades[0] > grades[2]:\n            return\
    \ [\"A+\"]\n        elif grades[1] > grades[2]:\n            return [\"A-\"]\n\
    \        else:\n            return [\"B+\"]\n    \n    if grades_length == 4:\n\
    \        if grades[0] > grades[1] and grades[0] > grades[2] and grades[0] > grades[3]:\n\
    \            return [\"A+\"]\n        elif grades[1] > grades[2] and grades[1]\
    \ > grades[3]:\n            return [\"A-\"]\n        elif grades[2] > grades[3]:\n\
    \            return [\"B+\"]\n        else:\n            return [\"B-\"]\n   \
    \ \n    if grades_length == 5:\n        if grades[0] > grades[1] and grades[0]\
    \ > grades[2] and grades[0] > grades[3] and grades[0] > grades[4]:\n         \
    \   return [\"A+\"]\n        elif grades[1] > grades[2] and grades[1] > grades[3]\
    \ and grades[1] > grades[4]:\n            return [\"A-\"]\n        elif grades[2]\
    \ > grades[3] and grades[2] > grades[4]:\n            return [\"B+\"]\n      \
    \  elif grades[3] > grades[4]:\n            return [\"B-\"]\n        else:\n \
    \           return [\"C+\"]\n    \n    if grades_length == 6:\n        if grades[0]\
    \ > grades[1] and grades[0] > grades[2] and grades[0] > grades[3] and grades[0]\
    \ > grades[4] and grades[0] > grades[5]:\n            return [\"A+\"]\n      \
    \  elif grades[1] > grades[2] and grades[1] > grades[3] and grades[1] > grades[4]\
    \ and grades[1] > grades[5]:\n            return [\"A-\"]\n        elif grades[2]\
    \ > grades[3] and grades[2] > grades[4] and grades[2] > grades[5]:\n         \
    \   return [\"B+\"]\n        elif grades[3] > grades[4] and grades[3] > grades[5]:\n\
    \            return [\"B-\"]\n        elif grades[4] > grades[5]:\n          \
    \  return [\"C+\"]\n        else:\n            return [\"C-\"]\n    \n    if grades_length\
    \ == 7:\n        if grades[0] > grades[1] and grades[0] > grades[2] and grades[0]\
    \ > grades[3] and grades[0] > grades[4] and grades[0] > grades[", "    \n    grades_sorted\
    \ = sorted(grades)\n    grades_sorted.reverse()\n    grades_sorted = grades_sorted[:5]\n\
    \    \n    grades_sorted = [str(grade) for grade in grades_sorted]\n    grades_sorted\
    \ = grades_sorted[:5]\n    \n    grades_sorted = [grade for grade in grades_sorted\
    \ if grade != '0']\n    grades_sorted = grades_sorted[:5]\n    \n    grades_sorted\
    \ = [grade for grade in grades_sorted if grade != '-']\n    grades_sorted = grades_sorted[:5]\n\
    \    \n    grades_sorted = [grade for grade in grades_sorted if grade != '+']\n\
    \    grades_sorted = grades_sorted[:5]\n    \n    grades_sorted = [grade for grade\
    \ in grades_sorted if grade != '0']\n    grades_sorted = grades_sorted[:5]\n \
    \   \n    grades_sorted = [grade for grade in grades_sorted if grade != '-']\n\
    \    grades_sorted = grades_sorted[:5]\n    \n    grades_sorted = [grade for grade\
    \ in grades_sorted if grade != '+']\n    grades_sorted = grades_sorted[:5]\n \
    \   \n    grades_sorted = [grade for grade in grades_sorted if grade != '0']\n\
    \    grades_sorted = grades_sorted[:5]\n    \n    grades_sorted = [grade for grade\
    \ in grades_sorted if grade != '-']\n    grades_sorted = grades_sorted[:5]\n \
    \   \n    grades_sorted = [grade for grade in grades_sorted if grade != '+']\n\
    \    grades_sorted = grades_sorted[:5]\n    \n    grades_sorted = [grade for grade\
    \ in grades_sorted if grade != '0']\n    grades_sorted = grades_sorted[:5]\n \
    \   \n    grades_sorted = [grade for grade in grades_sorted if grade != '-']\n\
    \    grades_sorted = grades_sorted[:5]\n    \n    grades_sorted = [grade for grade\
    \ in grades_sorted if grade != '+']\n    grades_sorted = grades_sorted[:5]\n \
    \   \n    grades_sorted = [grade for grade in grades_sorted if grade != '0']\n\
    \    grades_sorted = grades_sorted", "    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n", "    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n",
  "    \n    grades.sort()\n    \n    grades_length = len(grades)\n    \n    if grades_length\
    \ < 1:\n        return []\n    \n    if grades_length == 1:\n        return [\"\
    A+\"]\n    \n    if grades_length == 2:\n        if grades[0] > grades[1]:\n \
    \           return [\"A+\"]\n        else:\n            return [\"A-\"]\n    \n\
    \    if grades_length == 3:\n        if grades[0] > grades[1] and grades[0] >\
    \ grades[2]:\n            return [\"A+\"]\n        elif grades[1] > grades[2]:\n\
    \            return [\"A-\"]\n        else:\n            return [\"B+\"]\n   \
    \ \n    if grades_length == 4:\n        if grades[0] > grades[1] and grades[0]\
    \ > grades[2] and grades[0] > grades[3]:\n            return [\"A+\"]\n      \
    \  elif grades[1] > grades[2] and grades[1] > grades[3]:\n            return [\"\
    A-\"]\n        elif grades[2] > grades[3]:\n            return [\"B+\"]\n    \
    \    else:\n            return [\"B-\"]\n    \n    if grades_length == 5:\n  \
    \      if grades[0] > grades[1] and grades[0] > grades[2] and grades[0] > grades[3]\
    \ and grades[0] > grades[4]:\n            return [\"A+\"]\n        elif grades[1]\
    \ > grades[2] and grades[1] > grades[3] and grades[1] > grades[4]:\n         \
    \   return [\"A-\"]\n        elif grades[2] > grades[3] and grades[2] > grades[4]:\n\
    \            return [\"B+\"]\n        elif grades[3] > grades[4]:\n          \
    \  return [\"B-\"]\n        else:\n            return [\"C+\"]\n    \n    if grades_length\
    \ == 6:\n        if grades[0] > grades[1] and grades[0] > grades[2] and grades[0]\
    \ > grades[3] and grades[0] > grades[4] and grades[0] > grades[5]:\n         \
    \   return [\"A+\"]\n        elif grades[1] > grades[2] and grades[1] > grades[3]\
    \ and grades[1] > grades[4] and grades[1] > grades[5]:\n            return [\"\
    A-\"]\n        elif grades[2] > grades[3] and grades[2] > grades[4] and grades[2]\
    \ > grades[5]:\n            return [\"B+\"]\n        elif grades[3] > grades[4]\
    \ and grades[3] > grades[5]:\n            return [\"B-\"]\n        elif grades[4]\
    \ > grades[5]:\n            return [\"C+\"]\n        else:\n            return\
    \ [\"C-\"]\n    \n    if grades_length == 7:\n        if grades[0] > grades[1]\
    \ and grades[0] > grades[2] and grades[0] > grades[3] and grades[0] > grades[4]\
    \ and grades[0] > grades[", "    \n    grades.sort()\n    \n    grades_len = len(grades)\n\
    \    \n    if grades_len == 0:\n        return []\n    \n    grades_sum = 0\n\
    \    \n    for grade in grades:\n        grades_sum += grade\n    \n    grades_avg\
    \ = grades_sum / grades_len\n    \n    if grades_avg >= 4.0:\n        grades_grades\
    \ = ['A+']\n    elif grades_avg >= 3.7:\n        grades_grades = ['A']\n    elif\
    \ grades_avg >= 3.3:\n        grades_grades = ['A-']\n    elif grades_avg >= 3.0:\n\
    \        grades_grades = ['B+']\n    elif grades_avg >= 2.7:\n        grades_grades\
    \ = ['B']\n    elif grades_avg >= 2.3:\n        grades_grades = ['B-']\n    elif\
    \ grades_avg >= 2.0:\n        grades_grades = ['C+']\n    elif grades_avg >= 1.7:\n\
    \        grades_grades = ['C']\n    elif grades_avg >= 1.3:\n        grades_grades\
    \ = ['C-']\n    elif grades_avg >= 1.0:\n        grades_grades = ['D+']\n    elif\
    \ grades_avg >= 0.7:\n        grades_grades = ['D']\n    elif grades_avg >= 0.0:\n\
    \        grades_grades = ['D-']\n    else:\n        grades_grades = ['E']\n  \
    \  \n    return grades_grades\n</cell>\n<cell>", "    \n    grades_sorted = sorted(grades)\n\
    \    \n    letter_grades = []\n    \n    for grade in grades_sorted:\n       \
    \ if grade >= 3.0:\n            letter_grades.append('A+')\n        elif grade\
    \ >= 2.7:\n            letter_grades.append('B')\n        elif grade >= 2.3:\n\
    \            letter_grades.append('B-')\n        elif grade >= 1.7:\n        \
    \    letter_grades.append('C')\n        elif grade >= 1.3:\n            letter_grades.append('C-')\n\
    \        elif grade >= 1.0:\n            letter_grades.append('D+')\n        elif\
    \ grade >= 0.7:\n            letter_grades.append('D')\n        elif grade >=\
    \ 0.0:\n            letter_grades.append('D-')\n        else:\n            letter_grades.append('E')\n\
    \    \n    return letter_grades\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

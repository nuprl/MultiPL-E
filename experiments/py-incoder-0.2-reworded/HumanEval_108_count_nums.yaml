name: HumanEval_108_count_nums
language: py
prompt: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n    \"\
  \"\"\n    Write a function count_nums which takes an array of integers and returns\n\
  \    the number of elements which has a sum of digits > 0.\n    If a number is negative,\
  \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
  \ -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n\
  \    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
  \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1,\
  \ 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n\
  \    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert candidate([0,\
  \ 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n    check(count_nums)\n\
  \ntest_check()\n"
completions: ["    count = 0\n    for num in arr:\n        if num < 0:\n         \
    \   num = abs(num)\n        count += num // 10\n    return count\n", "    count\
    \ = 0\n    for num in arr:\n        if num > 0:\n            count += 1\n    return\
    \ count\n", "    count = 0\n    for num in arr:\n        if num > 0:\n       \
    \     count += 1\n    return count\n", "    count = 0\n    for num in arr:\n \
    \       if num > 0:\n            count += 1\n    return count\n", "    count =\
    \ 0\n    for num in arr:\n        if num > 0:\n            count += 1\n    return\
    \ count\n", "    count = 0\n    for num in arr:\n        if num < 0:\n       \
    \     num = abs(num)\n        count += num // 10\n    return count\n", "    count\
    \ = 0\n    for num in arr:\n        if num > 0:\n            count += 1\n    return\
    \ count\n", "    count = 0\n    for num in arr:\n        if num < 0:\n       \
    \     num = abs(num)\n        count += num // 10\n    return count\n", "    count\
    \ = 0\n    for num in arr:\n        if num < 0:\n            num = abs(num)\n\
    \        count += num // 10\n        count += num % 10\n    return count\n", " \
    \   count = 0\n    for num in arr:\n        if num > 0:\n            count +=\
    \ 1\n    return count\n", "    count = 0\n    for num in arr:\n        if num\
    \ > 0:\n            count += 1\n    return count\n", "    count = 0\n    for num\
    \ in arr:\n        if num < 0:\n            num = abs(num)\n            sign =\
    \ -1\n        else:\n            sign = 1\n        digits = [int(i) for i in str(num)]\n\
    \        digits = [sign * i for i in digits]\n        count += sum(digits)\n \
    \   return count\n", "    count = 0\n    for num in arr:\n        if num < 0:\n\
    \            num = abs(num)\n            sign = -1\n        else:\n          \
    \  sign = 1\n        digits = [int(i) for i in str(num)]\n        sum_digits =\
    \ sum(digits)\n        if sum_digits > 0:\n            count += 1\n    return\
    \ count\n", "    count = 0\n    for num in arr:\n        if num < 0:\n       \
    \     num = abs(num)\n            sign = -1\n        else:\n            sign =\
    \ 1\n        digits = [int(i) for i in str(num)]\n        sum_digits = sum(digits)\n\
    \        if sum_digits > 0:\n            count += 1\n    return count\n", "  \
    \  count = 0\n    for num in arr:\n        if num > 0:\n            count += 1\n\
    \    return count\n", "    count = 0\n    for num in arr:\n        if num < 0:\n\
    \            num = abs(num)\n        count += num // 10\n        count += num\
    \ % 10\n    return count\n", "    count = 0\n    for num in arr:\n        if num\
    \ > 0:\n            count += 1\n    return count\n", "    count = 0\n    for num\
    \ in arr:\n        if num > 0:\n            count += 1\n    return count\n", " \
    \   count = 0\n    for num in arr:\n        if num > 0:\n            count +=\
    \ 1\n    return count\n", "    count = 0\n    for num in arr:\n        if num\
    \ < 0:\n            num = abs(num)\n            sign = -1\n        else:\n   \
    \         sign = 1\n        digits = [int(d) for d in str(num)]\n        count\
    \ += sign * (sum(digits) - len(digits))\n    return count\n", "    count = 0\n\
    \    for num in arr:\n        if num > 0:\n            count += 1\n    return\
    \ count\n", "    count = 0\n    for num in arr:\n        if num > 0:\n       \
    \     count += 1\n    return count\n", "    \n    count = 0\n    for num in arr:\n\
    \        if num < 0:\n            num = abs(num)\n        \n        if num > 9:\n\
    \            count += num // 10\n            num -= num // 10\n        \n    \
    \    count += num\n        \n    return count\n", "    count = 0\n    for num\
    \ in arr:\n        if num > 0:\n            count += 1\n    return count\n", " \
    \   count = 0\n    for num in arr:\n        if num < 0:\n            num = abs(num)\n\
    \        count += num // 10\n    return count\n", "    count = 0\n    for num\
    \ in arr:\n        if num < 0:\n            num = abs(num)\n        count += num\
    \ // 10\n        count += num % 10\n    return count\n", "    count = 0\n    for\
    \ num in arr:\n        if num < 0:\n            num = abs(num)\n        count\
    \ += num // 10\n    return count\n", "    count = 0\n    for num in arr:\n   \
    \     if num > 0:\n            count += 1\n    return count\n", "    count = 0\n\
    \    for num in arr:\n        if num > 0:\n            count += 1\n    return\
    \ count\n", "    count = 0\n    for num in arr:\n        if num < 0:\n       \
    \     num = abs(num)\n        count += num // 10\n    return count\n", "    \n\
    \    count = 0\n    for num in arr:\n        if num > 0:\n            count +=\
    \ 1\n    return count\n", "    \n    count = 0\n    for num in arr:\n        if\
    \ num < 0:\n            num = abs(num)\n        \n        digits = [int(i) for\
    \ i in str(num)]\n        \n        count += len([i for i in digits if i > 0])\n\
    \        \n    return count\n", "    count = 0\n    for num in arr:\n        if\
    \ num > 0:\n            count += 1\n    return count\n", "    count = 0\n    for\
    \ num in arr:\n        if num < 0:\n            num = abs(num)\n        count\
    \ += num // 10\n    return count\n", "    count = 0\n    for num in arr:\n   \
    \     if num > 0:\n            count += 1\n    return count\n", "    count = 0\n\
    \    for num in arr:\n        if num > 0:\n            count += 1\n    return\
    \ count\n", "    count = 0\n    for num in arr:\n        if num > 0:\n       \
    \     count += 1\n    return count\n", "    count = 0\n    for num in arr:\n \
    \       if num < 0:\n            num = abs(num)\n        count += num // 10\n\
    \    return count\n", "    count = 0\n    for num in arr:\n        if num > 0:\n\
    \            count += 1\n    return count\n", "    count = 0\n    for num in arr:\n\
    \        if num > 0:\n            count += 1\n    return count\n", "    \n   \
    \ count = 0\n    \n    for num in arr:\n        if num < 0:\n            num =\
    \ abs(num)\n            \n        digits = [int(i) for i in str(num)]\n      \
    \  \n        if sum(digits) > 0: # if sum > 0, then add to count\n           \
    \ count += 1\n            \n    return count\n", "    count = 0\n    for num in\
    \ arr:\n        if num < 0:\n            num = abs(num)\n        count += num\
    \ // 10\n        count -= num % 10\n    return count\n", "    \n    return len([x\
    \ for x in arr if x > 0])\n", "    count = 0\n    for num in arr:\n        if\
    \ num > 0:\n            count += 1\n    return count\n", "    \n    count = 0\n\
    \    \n    for num in arr:\n        if num < 0:\n            num = abs(num)\n\
    \            \n        if num > 0:\n            count += num // 10\n         \
    \   \n    return count\n</cell>\n<cell>\ncount_nums([-2, -1, 0, 1])\n</cell>\n\
    <cell>\ncount_nums([-2, -1, 0, 1, 2])\n</cell>\n<cell>\ncount_nums([-2, -1, 0,\
    \ 1, -2, -1, 0, 1])\n</cell>\n<cell>\ncount_nums([-2, -1, 0, 1, -2, -1, 0, 1])\n\
    </cell>\n<cell>\ncount_nums([-2, -1, 0, 1, -2, -1, 0, 1])\n</cell>\n<cell>\ncount_nums([-2,\
    \ -1, 0, 1, -2, -1, 0, 1])\n</cell>\n<cell>\ncount_nums([-2, -1, 0, 1, -2, -1,\
    \ 0, 1])\n</cell>\n<cell>\ncount_nums([-2, -1, 0, 1, -2, -1, 0, 1])\n</cell>\n\
    <cell>\ncount_nums([-2, -1, 0, 1, -2, -1, 0, 1])\n</cell>\n<cell>\ncount_nums([-2,\
    \ -1, 0, 1, -2, -1, 0, 1])\n</cell>\n<cell>\ncount_nums([-2, -1, 0, 1, -2, -1,\
    \ 0, 1])\n</cell>\n<cell>\ncount_nums([-2, -1, 0, 1, -2, -1, 0, 1])\n</cell>\n\
    <cell>\ncount_nums([-2, -1, 0, 1, -2, -1, 0, 1])\n</cell>\n<cell>\ncount_nums([-2,\
    \ -1, 0, 1, -2, -1, 0, 1])\n</cell>\n<cell>\ncount_nums([-2, -1, 0, 1, -2, -1,\
    \ 0, 1])\n</cell>\n<cell>\ncount_nums([-2, -1, 0, 1, -2, -1, 0, 1])\n</cell>\n\
    <cell>\ncount_nums([-2, -1, 0, 1, -2, -1, 0, 1])\n</cell>\n<cell>\ncount_nums([-2,\
    \ -1, 0, 1, -2, -1, 0, 1])\n</cell>\n<cell>\ncount_nums([-2, -1, 0, 1, -2, -1,\
    \ 0, 1])\n</cell>\n<cell>\ncount_nums([-2, -1, 0, 1, -2, -1, 0, 1])\n</cell>\n\
    <cell>\ncount_nums([-2, -1, 0, 1, -2, -1, 0, 1])\n</cell>\n<cell>\ncount_nums([-2,\
    \ -1, 0, 1, -2, -1, 0, 1])\n</cell>\n<cell>\ncount_nums([-2, -1, 0, 1, -2, -1,\
    \ 0, 1])\n</cell>\n<cell>\ncount_nums([-2, -1, 0, 1, -2, -1, 0, ", "    count\
    \ = 0\n    for num in arr:\n        if num > 0:\n            count += 1\n    return\
    \ count\n", "    count = 0\n    for num in arr:\n        if num < 0:\n       \
    \     num = abs(num)\n        count += num // 10\n    return count\n", "    count\
    \ = 0\n    for num in arr:\n        if num < 0:\n            num = abs(num)\n\
    \            sign = -1\n        else:\n            sign = 1\n        digits =\
    \ [int(digit) for digit in str(num)]\n        sum_of_digits = sum(digits)\n  \
    \      if sum_of_digits > 0:\n            count += 1\n    return count\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

{
  "language": "lua",
  "name": "HumanEval_34_unique",
  "results": [
    {
      "exit_code": 1,
      "program": "-- Return sorted unique elements in a table\n-- >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n-- [0, 2, 3, 5, 9, 123]\nlocal function unique(l)\n    local t = {}\n    for i, v in ipairs(l) do\n        if t[v] == nil then\n            t[v] = true\n        end\n    end\n    return unpack(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp18q9pgy2.lua:11: attempt to call a nil value (global 'unpack')\nstack traceback:\n\t/tmp/tmp18q9pgy2.lua:11: in local 'candidate'\n\t/tmp/tmp18q9pgy2.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "timestamp": 1661907479
    },
    {
      "exit_code": 1,
      "program": "-- Return sorted unique elements in a table\n-- >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n-- [0, 2, 3, 5, 9, 123]\nlocal function unique(l)\n    local t = {}\n    for i, v in ipairs(l) do\n        if t[v] == nil then\n            t[v] = true\n        end\n    end\n    return unpack(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp18q9pgy2.lua:11: attempt to call a nil value (global 'unpack')\nstack traceback:\n\t/tmp/tmp18q9pgy2.lua:11: in local 'candidate'\n\t/tmp/tmp18q9pgy2.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "timestamp": 1661907479
    },
    {
      "exit_code": 1,
      "program": "-- Return sorted unique elements in a table\n-- >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n-- [0, 2, 3, 5, 9, 123]\nlocal function unique(l)\n    local t = {}\n    for i, v in ipairs(l) do\n        if not t[v] then\n            t[v] = true\n        end\n    end\n    return unpack(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxywfrycw.lua:11: attempt to call a nil value (global 'unpack')\nstack traceback:\n\t/tmp/tmpxywfrycw.lua:11: in local 'candidate'\n\t/tmp/tmpxywfrycw.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "timestamp": 1661907479
    },
    {
      "exit_code": 1,
      "program": "-- Return sorted unique elements in a table\n-- >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n-- [0, 2, 3, 5, 9, 123]\nlocal function unique(l)\n    local t = {}\n    for i, v in ipairs(l) do\n        if t[v] == nil then\n            t[v] = true\n        end\n    end\n    return unpack(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp18q9pgy2.lua:11: attempt to call a nil value (global 'unpack')\nstack traceback:\n\t/tmp/tmp18q9pgy2.lua:11: in local 'candidate'\n\t/tmp/tmp18q9pgy2.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "timestamp": 1661907479
    },
    {
      "exit_code": 1,
      "program": "-- Return sorted unique elements in a table\n-- >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n-- [0, 2, 3, 5, 9, 123]\nlocal function unique(l)\n    local t = {}\n    for i, v in ipairs(l) do\n        if not t[v] then\n            t[v] = true\n        end\n    end\n    return unpack(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxywfrycw.lua:11: attempt to call a nil value (global 'unpack')\nstack traceback:\n\t/tmp/tmpxywfrycw.lua:11: in local 'candidate'\n\t/tmp/tmpxywfrycw.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "timestamp": 1661907479
    },
    {
      "exit_code": 1,
      "program": "-- Return sorted unique elements in a table\n-- >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n-- [0, 2, 3, 5, 9, 123]\nlocal function unique(l)\n    local t = {}\n    for i, v in ipairs(l) do\n        if not t[v] then\n            t[v] = true\n        end\n    end\n    return unpack(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxywfrycw.lua:11: attempt to call a nil value (global 'unpack')\nstack traceback:\n\t/tmp/tmpxywfrycw.lua:11: in local 'candidate'\n\t/tmp/tmpxywfrycw.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "timestamp": 1661907479
    },
    {
      "exit_code": 1,
      "program": "-- Return sorted unique elements in a table\n-- >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n-- [0, 2, 3, 5, 9, 123]\nlocal function unique(l)\n    local t = {}\n    for i, v in ipairs(l) do\n        if not t[v] then\n            t[v] = true\n        end\n    end\n    return unpack(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxywfrycw.lua:11: attempt to call a nil value (global 'unpack')\nstack traceback:\n\t/tmp/tmpxywfrycw.lua:11: in local 'candidate'\n\t/tmp/tmpxywfrycw.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "timestamp": 1661907479
    },
    {
      "exit_code": 1,
      "program": "-- Return sorted unique elements in a table\n-- >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n-- [0, 2, 3, 5, 9, 123]\nlocal function unique(l)\n    local t = {}\n    for i, v in ipairs(l) do\n        if not t[v] then\n            t[v] = true\n        end\n    end\n    return unpack(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxywfrycw.lua:11: attempt to call a nil value (global 'unpack')\nstack traceback:\n\t/tmp/tmpxywfrycw.lua:11: in local 'candidate'\n\t/tmp/tmpxywfrycw.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "timestamp": 1661907479
    },
    {
      "exit_code": 1,
      "program": "-- Return sorted unique elements in a table\n-- >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n-- [0, 2, 3, 5, 9, 123]\nlocal function unique(l)\n    local t = {}\n    for i, v in ipairs(l) do\n        if not t[v] then\n            t[v] = true\n        end\n    end\n    return unpack(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxywfrycw.lua:11: attempt to call a nil value (global 'unpack')\nstack traceback:\n\t/tmp/tmpxywfrycw.lua:11: in local 'candidate'\n\t/tmp/tmpxywfrycw.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "timestamp": 1661907479
    },
    {
      "exit_code": 1,
      "program": "-- Return sorted unique elements in a table\n-- >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n-- [0, 2, 3, 5, 9, 123]\nlocal function unique(l)\n    local t = {}\n    for i, v in ipairs(l) do\n        if not t[v] then\n            t[v] = true\n        end\n    end\n    return unpack(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxywfrycw.lua:11: attempt to call a nil value (global 'unpack')\nstack traceback:\n\t/tmp/tmpxywfrycw.lua:11: in local 'candidate'\n\t/tmp/tmpxywfrycw.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "timestamp": 1661907479
    },
    {
      "exit_code": 1,
      "program": "-- Return sorted unique elements in a table\n-- >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n-- [0, 2, 3, 5, 9, 123]\nlocal function unique(l)\n    local t = {}\n    for i, v in ipairs(l) do\n        if not t[v] then\n            t[v] = true\n        end\n    end\n    return unpack(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxywfrycw.lua:11: attempt to call a nil value (global 'unpack')\nstack traceback:\n\t/tmp/tmpxywfrycw.lua:11: in local 'candidate'\n\t/tmp/tmpxywfrycw.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "timestamp": 1661907479
    },
    {
      "exit_code": 1,
      "program": "-- Return sorted unique elements in a table\n-- >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n-- [0, 2, 3, 5, 9, 123]\nlocal function unique(l)\n    local t = {}\n    for i, v in ipairs(l) do\n        if not t[v] then t[v] = true end\n    end\n    return unpack(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_dhah0xz.lua:9: attempt to call a nil value (global 'unpack')\nstack traceback:\n\t/tmp/tmp_dhah0xz.lua:9: in local 'candidate'\n\t/tmp/tmp_dhah0xz.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "timestamp": 1661907479
    },
    {
      "exit_code": 1,
      "program": "-- Return sorted unique elements in a table\n-- >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n-- [0, 2, 3, 5, 9, 123]\nlocal function unique(l)\n    local t = {}\n    for i, v in ipairs(l) do\n        if not t[v] then\n            t[v] = true\n        end\n    end\n    return unpack(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxywfrycw.lua:11: attempt to call a nil value (global 'unpack')\nstack traceback:\n\t/tmp/tmpxywfrycw.lua:11: in local 'candidate'\n\t/tmp/tmpxywfrycw.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "timestamp": 1661907479
    },
    {
      "exit_code": 1,
      "program": "-- Return sorted unique elements in a table\n-- >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n-- [0, 2, 3, 5, 9, 123]\nlocal function unique(l)\n    local t = {}\n    for i, v in ipairs(l) do\n        if not t[v] then\n            t[v] = true\n        end\n    end\n    return t.keys()\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpo0liep6i.lua:11: attempt to call a nil value (field 'keys')\nstack traceback:\n\t/tmp/tmpo0liep6i.lua:11: in local 'candidate'\n\t/tmp/tmpo0liep6i.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "timestamp": 1661907479
    },
    {
      "exit_code": 1,
      "program": "-- Return sorted unique elements in a table\n-- >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n-- [0, 2, 3, 5, 9, 123]\nlocal function unique(l)\n    local t = {}\n    for i, v in ipairs(l) do\n        if not t[v] then\n            t[v] = true\n        end\n    end\n    return unpack(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxywfrycw.lua:11: attempt to call a nil value (global 'unpack')\nstack traceback:\n\t/tmp/tmpxywfrycw.lua:11: in local 'candidate'\n\t/tmp/tmpxywfrycw.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "timestamp": 1661907479
    },
    {
      "exit_code": 1,
      "program": "-- Return sorted unique elements in a table\n-- >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n-- [0, 2, 3, 5, 9, 123]\nlocal function unique(l)\n    local t = {}\n    for i, v in ipairs(l) do\n        if not t[v] then\n            t[v] = true\n        end\n    end\n    return unpack(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxywfrycw.lua:11: attempt to call a nil value (global 'unpack')\nstack traceback:\n\t/tmp/tmpxywfrycw.lua:11: in local 'candidate'\n\t/tmp/tmpxywfrycw.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "timestamp": 1661907479
    },
    {
      "exit_code": 1,
      "program": "-- Return sorted unique elements in a table\n-- >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n-- [0, 2, 3, 5, 9, 123]\nlocal function unique(l)\n    local t = {}\n    for i, v in ipairs(l) do\n        if not t[v] then\n            t[v] = true\n        end\n    end\n    return unpack(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxywfrycw.lua:11: attempt to call a nil value (global 'unpack')\nstack traceback:\n\t/tmp/tmpxywfrycw.lua:11: in local 'candidate'\n\t/tmp/tmpxywfrycw.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "timestamp": 1661907479
    },
    {
      "exit_code": 1,
      "program": "-- Return sorted unique elements in a table\n-- >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n-- [0, 2, 3, 5, 9, 123]\nlocal function unique(l)\n    local t = {}\n    for i, v in ipairs(l) do\n        if not t[v] then t[v] = true end\n    end\n    return unpack(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_dhah0xz.lua:9: attempt to call a nil value (global 'unpack')\nstack traceback:\n\t/tmp/tmp_dhah0xz.lua:9: in local 'candidate'\n\t/tmp/tmp_dhah0xz.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "timestamp": 1661907479
    },
    {
      "exit_code": 1,
      "program": "-- Return sorted unique elements in a table\n-- >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n-- [0, 2, 3, 5, 9, 123]\nlocal function unique(l)\n    local t = {}\n    for i, v in ipairs(l) do\n        if not t[v] then t[v] = true end\n    end\n    return unpack(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_dhah0xz.lua:9: attempt to call a nil value (global 'unpack')\nstack traceback:\n\t/tmp/tmp_dhah0xz.lua:9: in local 'candidate'\n\t/tmp/tmp_dhah0xz.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "timestamp": 1661907479
    },
    {
      "exit_code": 1,
      "program": "-- Return sorted unique elements in a table\n-- >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n-- [0, 2, 3, 5, 9, 123]\nlocal function unique(l)\n    local t = {}\n    for i, v in ipairs(l) do\n        if not t[v] then t[v] = true end\n    end\n    return unpack(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_dhah0xz.lua:9: attempt to call a nil value (global 'unpack')\nstack traceback:\n\t/tmp/tmp_dhah0xz.lua:9: in local 'candidate'\n\t/tmp/tmp_dhah0xz.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "timestamp": 1661907479
    }
  ]
}
{
  "language": "lua",
  "name": "HumanEval_42_incr_list",
  "results": [
    {
      "exit_code": 1,
      "program": "-- Return table with elements incremented by 1.\n-- >>> incr_list([1, 2, 3])\n-- [2, 3, 4]\n-- >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n-- [6, 4, 6, 3, 4, 4, 10, 1, 124]\nlocal function incr_list(l)\n    local t = {}\n    for i=1,#\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = incr_list\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({3, 2, 1}), {4, 3, 2})\n    lu.assertEquals(candidate({5, 2, 5, 2, 3, 3, 9, 0, 123}), {6, 3, 6, 3, 4, 4, 10, 1, 124})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmp74r0jz00.lua:9: 'do' expected near '='\n",
      "stdout": "",
      "timestamp": 1661907402
    },
    {
      "exit_code": 1,
      "program": "-- Return table with elements incremented by 1.\n-- >>> incr_list([1, 2, 3])\n-- [2, 3, 4]\n-- >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n-- [6, 4, 6, 3, 4, 4, 10, 1, 124]\nlocal function incr_list(l)\n    for i=1,#                                                                                                                                                                                    \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = incr_list\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({3, 2, 1}), {4, 3, 2})\n    lu.assertEquals(candidate({5, 2, 5, 2, 3, 3, 9, 0, 123}), {6, 3, 6, 3, 4, 4, 10, 1, 124})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmp1_wq8zt9.lua:8: 'do' expected near '='\n",
      "stdout": "",
      "timestamp": 1661907403
    },
    {
      "exit_code": 1,
      "program": "-- Return table with elements incremented by 1.\n-- >>> incr_list([1, 2, 3])\n-- [2, 3, 4]\n-- >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n-- [6, 4, 6, 3, 4, 4, 10, 1, 124]\nlocal function incr_list(l)\n    for i=1,#                                                                                                                                                                                    \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = incr_list\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({3, 2, 1}), {4, 3, 2})\n    lu.assertEquals(candidate({5, 2, 5, 2, 3, 3, 9, 0, 123}), {6, 3, 6, 3, 4, 4, 10, 1, 124})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmp1_wq8zt9.lua:8: 'do' expected near '='\n",
      "stdout": "",
      "timestamp": 1661907403
    },
    {
      "exit_code": 1,
      "program": "-- Return table with elements incremented by 1.\n-- >>> incr_list([1, 2, 3])\n-- [2, 3, 4]\n-- >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n-- [6, 4, 6, 3, 4, 4, 10, 1, 124]\nlocal function incr_list(l)\n    local t = {}\n    for i=1,#\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = incr_list\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({3, 2, 1}), {4, 3, 2})\n    lu.assertEquals(candidate({5, 2, 5, 2, 3, 3, 9, 0, 123}), {6, 3, 6, 3, 4, 4, 10, 1, 124})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmp74r0jz00.lua:9: 'do' expected near '='\n",
      "stdout": "",
      "timestamp": 1661907402
    },
    {
      "exit_code": 1,
      "program": "-- Return table with elements incremented by 1.\n-- >>> incr_list([1, 2, 3])\n-- [2, 3, 4]\n-- >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n-- [6, 4, 6, 3, 4, 4, 10, 1, 124]\nlocal function incr_list(l)\n    local t = {}\n    for i=1,#\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = incr_list\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({3, 2, 1}), {4, 3, 2})\n    lu.assertEquals(candidate({5, 2, 5, 2, 3, 3, 9, 0, 123}), {6, 3, 6, 3, 4, 4, 10, 1, 124})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmp74r0jz00.lua:9: 'do' expected near '='\n",
      "stdout": "",
      "timestamp": 1661907402
    },
    {
      "exit_code": 1,
      "program": "-- Return table with elements incremented by 1.\n-- >>> incr_list([1, 2, 3])\n-- [2, 3, 4]\n-- >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n-- [6, 4, 6, 3, 4, 4, 10, 1, 124]\nlocal function incr_list(l)\n    local t = {}\n    for i=1,#\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = incr_list\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({3, 2, 1}), {4, 3, 2})\n    lu.assertEquals(candidate({5, 2, 5, 2, 3, 3, 9, 0, 123}), {6, 3, 6, 3, 4, 4, 10, 1, 124})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmp74r0jz00.lua:9: 'do' expected near '='\n",
      "stdout": "",
      "timestamp": 1661907402
    },
    {
      "exit_code": 1,
      "program": "-- Return table with elements incremented by 1.\n-- >>> incr_list([1, 2, 3])\n-- [2, 3, 4]\n-- >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n-- [6, 4, 6, 3, 4, 4, 10, 1, 124]\nlocal function incr_list(l)\n    local t = {}\n    for i=1,#\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = incr_list\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({3, 2, 1}), {4, 3, 2})\n    lu.assertEquals(candidate({5, 2, 5, 2, 3, 3, 9, 0, 123}), {6, 3, 6, 3, 4, 4, 10, 1, 124})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmp74r0jz00.lua:9: 'do' expected near '='\n",
      "stdout": "",
      "timestamp": 1661907402
    },
    {
      "exit_code": 1,
      "program": "-- Return table with elements incremented by 1.\n-- >>> incr_list([1, 2, 3])\n-- [2, 3, 4]\n-- >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n-- [6, 4, 6, 3, 4, 4, 10, 1, 124]\nlocal function incr_list(l)\n    local t = {}\n    for i=1,#\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = incr_list\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({3, 2, 1}), {4, 3, 2})\n    lu.assertEquals(candidate({5, 2, 5, 2, 3, 3, 9, 0, 123}), {6, 3, 6, 3, 4, 4, 10, 1, 124})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmp74r0jz00.lua:9: 'do' expected near '='\n",
      "stdout": "",
      "timestamp": 1661907402
    },
    {
      "exit_code": 1,
      "program": "-- Return table with elements incremented by 1.\n-- >>> incr_list([1, 2, 3])\n-- [2, 3, 4]\n-- >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n-- [6, 4, 6, 3, 4, 4, 10, 1, 124]\nlocal function incr_list(l)\n    local t = {}\n    for i=1,#\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = incr_list\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({3, 2, 1}), {4, 3, 2})\n    lu.assertEquals(candidate({5, 2, 5, 2, 3, 3, 9, 0, 123}), {6, 3, 6, 3, 4, 4, 10, 1, 124})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmp74r0jz00.lua:9: 'do' expected near '='\n",
      "stdout": "",
      "timestamp": 1661907402
    },
    {
      "exit_code": 1,
      "program": "-- Return table with elements incremented by 1.\n-- >>> incr_list([1, 2, 3])\n-- [2, 3, 4]\n-- >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n-- [6, 4, 6, 3, 4, 4, 10, 1, 124]\nlocal function incr_list(l)\n    local t = {}\n    for i=1,#\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = incr_list\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({3, 2, 1}), {4, 3, 2})\n    lu.assertEquals(candidate({5, 2, 5, 2, 3, 3, 9, 0, 123}), {6, 3, 6, 3, 4, 4, 10, 1, 124})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmp74r0jz00.lua:9: 'do' expected near '='\n",
      "stdout": "",
      "timestamp": 1661907402
    },
    {
      "exit_code": 1,
      "program": "-- Return table with elements incremented by 1.\n-- >>> incr_list([1, 2, 3])\n-- [2, 3, 4]\n-- >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n-- [6, 4, 6, 3, 4, 4, 10, 1, 124]\nlocal function incr_list(l)\n    local t = {}\n    for i=1,#\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = incr_list\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({3, 2, 1}), {4, 3, 2})\n    lu.assertEquals(candidate({5, 2, 5, 2, 3, 3, 9, 0, 123}), {6, 3, 6, 3, 4, 4, 10, 1, 124})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmp74r0jz00.lua:9: 'do' expected near '='\n",
      "stdout": "",
      "timestamp": 1661907402
    },
    {
      "exit_code": 1,
      "program": "-- Return table with elements incremented by 1.\n-- >>> incr_list([1, 2, 3])\n-- [2, 3, 4]\n-- >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n-- [6, 4, 6, 3, 4, 4, 10, 1, 124]\nlocal function incr_list(l)\n    local t = {}\n    for i=1,#\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = incr_list\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({3, 2, 1}), {4, 3, 2})\n    lu.assertEquals(candidate({5, 2, 5, 2, 3, 3, 9, 0, 123}), {6, 3, 6, 3, 4, 4, 10, 1, 124})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmp74r0jz00.lua:9: 'do' expected near '='\n",
      "stdout": "",
      "timestamp": 1661907402
    },
    {
      "exit_code": 1,
      "program": "-- Return table with elements incremented by 1.\n-- >>> incr_list([1, 2, 3])\n-- [2, 3, 4]\n-- >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n-- [6, 4, 6, 3, 4, 4, 10, 1, 124]\nlocal function incr_list(l)\n    local i, t = 1, {}\n    for inlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = incr_list\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({3, 2, 1}), {4, 3, 2})\n    lu.assertEquals(candidate({5, 2, 5, 2, 3, 3, 9, 0, 123}), {6, 3, 6, 3, 4, 4, 10, 1, 124})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpvm9bgrvn.lua:9: 'do' expected near '='\n",
      "stdout": "",
      "timestamp": 1661907402
    },
    {
      "exit_code": 0,
      "program": "-- Return table with elements incremented by 1.\n-- >>> incr_list([1, 2, 3])\n-- [2, 3, 4]\n-- >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n-- [6, 4, 6, 3, 4, 4, 10, 1, 124]\nlocal function incr_list(l)\n    local t = {}\n    for i = 1, #l do\n        t[i] = l[i]\n        t[i] = t[i] + 1\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = incr_list\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({3, 2, 1}), {4, 3, 2})\n    lu.assertEquals(candidate({5, 2, 5, 2, 3, 3, 9, 0, 123}), {6, 3, 6, 3, 4, 4, 10, 1, 124})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "OK",
      "stderr": "",
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "timestamp": 1661907402
    },
    {
      "exit_code": 1,
      "program": "-- Return table with elements incremented by 1.\n-- >>> incr_list([1, 2, 3])\n-- [2, 3, 4]\n-- >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n-- [6, 4, 6, 3, 4, 4, 10, 1, 124]\nlocal function incr_list(l)\n    local t = {}\n    for inlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = incr_list\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({3, 2, 1}), {4, 3, 2})\n    lu.assertEquals(candidate({5, 2, 5, 2, 3, 3, 9, 0, 123}), {6, 3, 6, 3, 4, 4, 10, 1, 124})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmp13kdme51.lua:9: 'do' expected near '='\n",
      "stdout": "",
      "timestamp": 1661907403
    },
    {
      "exit_code": 0,
      "program": "-- Return table with elements incremented by 1.\n-- >>> incr_list([1, 2, 3])\n-- [2, 3, 4]\n-- >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n-- [6, 4, 6, 3, 4, 4, 10, 1, 124]\nlocal function incr_list(l)\n    local i = 1\n    while i <= #l do\n        l[i] = l[i] + 1\n        i = i + 1\n    end\n    return l\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = incr_list\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({3, 2, 1}), {4, 3, 2})\n    lu.assertEquals(candidate({5, 2, 5, 2, 3, 3, 9, 0, 123}), {6, 3, 6, 3, 4, 4, 10, 1, 124})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "OK",
      "stderr": "",
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "timestamp": 1661907402
    },
    {
      "exit_code": 1,
      "program": "-- Return table with elements incremented by 1.\n-- >>> incr_list([1, 2, 3])\n-- [2, 3, 4]\n-- >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n-- [6, 4, 6, 3, 4, 4, 10, 1, 124]\nlocal function incr_list(l)\n    local t = {}\n    for i=1,#                                                                                                                        \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = incr_list\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({3, 2, 1}), {4, 3, 2})\n    lu.assertEquals(candidate({5, 2, 5, 2, 3, 3, 9, 0, 123}), {6, 3, 6, 3, 4, 4, 10, 1, 124})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpqv6hrhox.lua:9: 'do' expected near '='\n",
      "stdout": "",
      "timestamp": 1661907402
    },
    {
      "exit_code": 1,
      "program": "-- Return table with elements incremented by 1.\n-- >>> incr_list([1, 2, 3])\n-- [2, 3, 4]\n-- >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n-- [6, 4, 6, 3, 4, 4, 10, 1, 124]\nlocal function incr_list(l)\n    local i, t = 1, {}\n    for i=1,#\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = incr_list\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({3, 2, 1}), {4, 3, 2})\n    lu.assertEquals(candidate({5, 2, 5, 2, 3, 3, 9, 0, 123}), {6, 3, 6, 3, 4, 4, 10, 1, 124})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpg37q4k2c.lua:9: 'do' expected near '='\n",
      "stdout": "",
      "timestamp": 1661907403
    },
    {
      "exit_code": 1,
      "program": "-- Return table with elements incremented by 1.\n-- >>> incr_list([1, 2, 3])\n-- [2, 3, 4]\n-- >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n-- [6, 4, 6, 3, 4, 4, 10, 1, 124]\nlocal function incr_list(l)\n    local t = {}\n    for i=1,#\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = incr_list\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({3, 2, 1}), {4, 3, 2})\n    lu.assertEquals(candidate({5, 2, 5, 2, 3, 3, 9, 0, 123}), {6, 3, 6, 3, 4, 4, 10, 1, 124})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmp74r0jz00.lua:9: 'do' expected near '='\n",
      "stdout": "",
      "timestamp": 1661907402
    },
    {
      "exit_code": 1,
      "program": "-- Return table with elements incremented by 1.\n-- >>> incr_list([1, 2, 3])\n-- [2, 3, 4]\n-- >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n-- [6, 4, 6, 3, 4, 4, 10, 1, 124]\nlocal function incr_list(l)\n    local t = {}\n    for i=1,#\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = incr_list\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({3, 2, 1}), {4, 3, 2})\n    lu.assertEquals(candidate({5, 2, 5, 2, 3, 3, 9, 0, 123}), {6, 3, 6, 3, 4, 4, 10, 1, 124})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmp74r0jz00.lua:9: 'do' expected near '='\n",
      "stdout": "",
      "timestamp": 1661907402
    }
  ]
}
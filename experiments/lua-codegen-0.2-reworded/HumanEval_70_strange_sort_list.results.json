{
  "language": "lua",
  "name": "HumanEval_70_strange_sort_list",
  "results": [
    {
      "exit_code": 1,
      "program": "-- Given table of integers, return table in strange order.\n-- Strange sorting, is when you start with the minimum value,\n-- then maximum of the remaining integers, then minimum and so on.\n-- Examples:\n-- >>> strange_sort_list([1, 2, 3, 4])\n-- [1, 4, 2, 3]\n-- >>> strange_sort_list([5, 5, 5, 5])\n-- [5, 5, 5, 5]\n-- >>> strange_sort_list([])\n-- []\nlocal function strange_sort_list(lst)\n    if #lst == 0 then return lst end\n    local min = lst[1]\n    local max = lst[1]\n    for i = 2, #lst do\n        if lst[i] < min then min = lst[i] end\n        if lst[i] > max then max = lst[i] end\n    end\n    for i = 1, #lst do\n        if lst[i] == min then\n            lst[i] = max\n            lst[i+1] = min\n        end\n    end\n    return lst\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = strange_sort_list\n    lu.assertEquals(candidate({1, 2, 3, 4}), {1, 4, 2, 3})\n    lu.assertEquals(candidate({5, 6, 7, 8, 9}), {5, 9, 6, 8, 7})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5}), {1, 5, 2, 4, 3})\n    lu.assertEquals(candidate({5, 6, 7, 8, 9, 1}), {1, 9, 5, 8, 6, 7})\n    lu.assertEquals(candidate({5, 5, 5, 5}), {5, 5, 5, 5})\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8}), {1, 8, 2, 7, 3, 6, 4, 5})\n    lu.assertEquals(candidate({0, 2, 2, 2, 5, 5, -5, -5}), {-5, 5, -5, 5, 0, 2, 2, 2})\n    lu.assertEquals(candidate({111111}), {111111})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpo63qfm43.lua:31: expected: {1, 4, 2, 3}\nactual: {4, 4, 4, 4, 1}\nstack traceback:\n\t/tmp/tmpo63qfm43.lua:31: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907510
    },
    {
      "exit_code": 1,
      "program": "-- Given table of integers, return table in strange order.\n-- Strange sorting, is when you start with the minimum value,\n-- then maximum of the remaining integers, then minimum and so on.\n-- Examples:\n-- >>> strange_sort_list([1, 2, 3, 4])\n-- [1, 4, 2, 3]\n-- >>> strange_sort_list([5, 5, 5, 5])\n-- [5, 5, 5, 5]\n-- >>> strange_sort_list([])\n-- []\nlocal function strange_sort_list(lst)\n    local tbl = {}\n    for i = 1, #lst do\n        tbl[i] = lst[i]\n    end\n    for i = 1, #tbl do\n        for j = 2, #tbl do\n            if tbl[j] < tbl[i] then\n                tbl[i], tbl[j] = tbl[j], tbl[i]\n            end\n        end\n    end\n    return tbl\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = strange_sort_list\n    lu.assertEquals(candidate({1, 2, 3, 4}), {1, 4, 2, 3})\n    lu.assertEquals(candidate({5, 6, 7, 8, 9}), {5, 9, 6, 8, 7})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5}), {1, 5, 2, 4, 3})\n    lu.assertEquals(candidate({5, 6, 7, 8, 9, 1}), {1, 9, 5, 8, 6, 7})\n    lu.assertEquals(candidate({5, 5, 5, 5}), {5, 5, 5, 5})\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8}), {1, 8, 2, 7, 3, 6, 4, 5})\n    lu.assertEquals(candidate({0, 2, 2, 2, 5, 5, -5, -5}), {-5, 5, -5, 5, 0, 2, 2, 2})\n    lu.assertEquals(candidate({111111}), {111111})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpigri1bab.lua:29: expected: {1, 4, 2, 3}\nactual: {1, 4, 3, 2}\nstack traceback:\n\t/tmp/tmpigri1bab.lua:29: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907510
    },
    {
      "exit_code": 1,
      "program": "-- Given table of integers, return table in strange order.\n-- Strange sorting, is when you start with the minimum value,\n-- then maximum of the remaining integers, then minimum and so on.\n-- Examples:\n-- >>> strange_sort_list([1, 2, 3, 4])\n-- [1, 4, 2, 3]\n-- >>> strange_sort_list([5, 5, 5, 5])\n-- [5, 5, 5, 5]\n-- >>> strange_sort_list([])\n-- []\nlocal function strange_sort_list(lst)\n    local t = {}\n    for inlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = strange_sort_list\n    lu.assertEquals(candidate({1, 2, 3, 4}), {1, 4, 2, 3})\n    lu.assertEquals(candidate({5, 6, 7, 8, 9}), {5, 9, 6, 8, 7})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5}), {1, 5, 2, 4, 3})\n    lu.assertEquals(candidate({5, 6, 7, 8, 9, 1}), {1, 9, 5, 8, 6, 7})\n    lu.assertEquals(candidate({5, 5, 5, 5}), {5, 5, 5, 5})\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8}), {1, 8, 2, 7, 3, 6, 4, 5})\n    lu.assertEquals(candidate({0, 2, 2, 2, 5, 5, -5, -5}), {-5, 5, -5, 5, 0, 2, 2, 2})\n    lu.assertEquals(candidate({111111}), {111111})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpj941g4ek.lua:14: 'do' expected near '='\n",
      "stdout": "",
      "timestamp": 1661907510
    },
    {
      "exit_code": 1,
      "program": "-- Given table of integers, return table in strange order.\n-- Strange sorting, is when you start with the minimum value,\n-- then maximum of the remaining integers, then minimum and so on.\n-- Examples:\n-- >>> strange_sort_list([1, 2, 3, 4])\n-- [1, 4, 2, 3]\n-- >>> strange_sort_list([5, 5, 5, 5])\n-- [5, 5, 5, 5]\n-- >>> strange_sort_list([])\n-- []\nlocal function strange_sort_list(lst)\n    local tbl = {}\n    for i = 1, #lst, 1 do\n        tbl[lst[i]] = i\n    end\n    for i = 1, #lst, 1 do\n        local min = math.inf\n        for j = 1, #lst, 1 do\n            if lst[j] < min then min = lst[j]\n        end\n        tbl[min] = #lst\n        lst[tbl[min]] = min\n    end\n    return tbl\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = strange_sort_list\n    lu.assertEquals(candidate({1, 2, 3, 4}), {1, 4, 2, 3})\n    lu.assertEquals(candidate({5, 6, 7, 8, 9}), {5, 9, 6, 8, 7})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5}), {1, 5, 2, 4, 3})\n    lu.assertEquals(candidate({5, 6, 7, 8, 9, 1}), {1, 9, 5, 8, 6, 7})\n    lu.assertEquals(candidate({5, 5, 5, 5}), {5, 5, 5, 5})\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8}), {1, 8, 2, 7, 3, 6, 4, 5})\n    lu.assertEquals(candidate({0, 2, 2, 2, 5, 5, -5, -5}), {-5, 5, -5, 5, 0, 2, 2, 2})\n    lu.assertEquals(candidate({111111}), {111111})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmp9qmtw17e.lua:41: 'end' expected (to close 'function' at line 11) near <eof>\n",
      "stdout": "",
      "timestamp": 1661907510
    },
    {
      "exit_code": 1,
      "program": "-- Given table of integers, return table in strange order.\n-- Strange sorting, is when you start with the minimum value,\n-- then maximum of the remaining integers, then minimum and so on.\n-- Examples:\n-- >>> strange_sort_list([1, 2, 3, 4])\n-- [1, 4, 2, 3]\n-- >>> strange_sort_list([5, 5, 5, 5])\n-- [5, 5, 5, 5]\n-- >>> strange_sort_list([])\n-- []\nlocal function strange_sort_list(lst)\n    local t = {}\n    for inlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = strange_sort_list\n    lu.assertEquals(candidate({1, 2, 3, 4}), {1, 4, 2, 3})\n    lu.assertEquals(candidate({5, 6, 7, 8, 9}), {5, 9, 6, 8, 7})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5}), {1, 5, 2, 4, 3})\n    lu.assertEquals(candidate({5, 6, 7, 8, 9, 1}), {1, 9, 5, 8, 6, 7})\n    lu.assertEquals(candidate({5, 5, 5, 5}), {5, 5, 5, 5})\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8}), {1, 8, 2, 7, 3, 6, 4, 5})\n    lu.assertEquals(candidate({0, 2, 2, 2, 5, 5, -5, -5}), {-5, 5, -5, 5, 0, 2, 2, 2})\n    lu.assertEquals(candidate({111111}), {111111})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpj941g4ek.lua:14: 'do' expected near '='\n",
      "stdout": "",
      "timestamp": 1661907510
    },
    {
      "exit_code": 1,
      "program": "-- Given table of integers, return table in strange order.\n-- Strange sorting, is when you start with the minimum value,\n-- then maximum of the remaining integers, then minimum and so on.\n-- Examples:\n-- >>> strange_sort_list([1, 2, 3, 4])\n-- [1, 4, 2, 3]\n-- >>> strange_sort_list([5, 5, 5, 5])\n-- [5, 5, 5, 5]\n-- >>> strange_sort_list([])\n-- []\nlocal function strange_sort_list(lst)\n    if #lst == 0 then return lst end\n    local min = lst[1]\n    local max = lst[1]\n    for i = 2, #lst, 2 do\n        if lst[i] < min then min = lst[i] end\n        if lst[i] > max then max = lst[i] end\n    end\n    for i = 1, #lst, 1 do\n        if lst[i] < min then lst[i] = min end\n        if lst[i] > max then lst[i] = max end\n    end\n    return lst\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = strange_sort_list\n    lu.assertEquals(candidate({1, 2, 3, 4}), {1, 4, 2, 3})\n    lu.assertEquals(candidate({5, 6, 7, 8, 9}), {5, 9, 6, 8, 7})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5}), {1, 5, 2, 4, 3})\n    lu.assertEquals(candidate({5, 6, 7, 8, 9, 1}), {1, 9, 5, 8, 6, 7})\n    lu.assertEquals(candidate({5, 5, 5, 5}), {5, 5, 5, 5})\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8}), {1, 8, 2, 7, 3, 6, 4, 5})\n    lu.assertEquals(candidate({0, 2, 2, 2, 5, 5, -5, -5}), {-5, 5, -5, 5, 0, 2, 2, 2})\n    lu.assertEquals(candidate({111111}), {111111})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsjhh8s11.lua:29: expected: {1, 4, 2, 3}\nactual: {1, 2, 3, 4}\nstack traceback:\n\t/tmp/tmpsjhh8s11.lua:29: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907510
    },
    {
      "exit_code": 1,
      "program": "-- Given table of integers, return table in strange order.\n-- Strange sorting, is when you start with the minimum value,\n-- then maximum of the remaining integers, then minimum and so on.\n-- Examples:\n-- >>> strange_sort_list([1, 2, 3, 4])\n-- [1, 4, 2, 3]\n-- >>> strange_sort_list([5, 5, 5, 5])\n-- [5, 5, 5, 5]\n-- >>> strange_sort_list([])\n-- []\nlocal function strange_sort_list(lst)\n    local tbl = {}\n    for i = 1, #lst do\n        tbl[i] = lst[i]\n    end\n    for i = 1, #tbl do\n        tbl[i] = tbl[i]\n        for j = i + 1, #tbl do\n            if tbl[i] > tbl[j] then\n                tbl[i], tbl[j] = tbl[j], tbl[i]\n            end\n        end\n    end\n    return tbl\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = strange_sort_list\n    lu.assertEquals(candidate({1, 2, 3, 4}), {1, 4, 2, 3})\n    lu.assertEquals(candidate({5, 6, 7, 8, 9}), {5, 9, 6, 8, 7})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5}), {1, 5, 2, 4, 3})\n    lu.assertEquals(candidate({5, 6, 7, 8, 9, 1}), {1, 9, 5, 8, 6, 7})\n    lu.assertEquals(candidate({5, 5, 5, 5}), {5, 5, 5, 5})\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8}), {1, 8, 2, 7, 3, 6, 4, 5})\n    lu.assertEquals(candidate({0, 2, 2, 2, 5, 5, -5, -5}), {-5, 5, -5, 5, 0, 2, 2, 2})\n    lu.assertEquals(candidate({111111}), {111111})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxhf0bdw8.lua:30: expected: {1, 4, 2, 3}\nactual: {1, 2, 3, 4}\nstack traceback:\n\t/tmp/tmpxhf0bdw8.lua:30: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907510
    },
    {
      "exit_code": 1,
      "program": "-- Given table of integers, return table in strange order.\n-- Strange sorting, is when you start with the minimum value,\n-- then maximum of the remaining integers, then minimum and so on.\n-- Examples:\n-- >>> strange_sort_list([1, 2, 3, 4])\n-- [1, 4, 2, 3]\n-- >>> strange_sort_list([5, 5, 5, 5])\n-- [5, 5, 5, 5]\n-- >>> strange_sort_list([])\n-- []\nlocal function strange_sort_list(lst)\n    if lst == nil then return nil end\n    local t = {}\n    for i = 1, #lst, 2 do\n        t[i] = lst[i]\n        t[i+1] = lst[i+1]\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = strange_sort_list\n    lu.assertEquals(candidate({1, 2, 3, 4}), {1, 4, 2, 3})\n    lu.assertEquals(candidate({5, 6, 7, 8, 9}), {5, 9, 6, 8, 7})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5}), {1, 5, 2, 4, 3})\n    lu.assertEquals(candidate({5, 6, 7, 8, 9, 1}), {1, 9, 5, 8, 6, 7})\n    lu.assertEquals(candidate({5, 5, 5, 5}), {5, 5, 5, 5})\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8}), {1, 8, 2, 7, 3, 6, 4, 5})\n    lu.assertEquals(candidate({0, 2, 2, 2, 5, 5, -5, -5}), {-5, 5, -5, 5, 0, 2, 2, 2})\n    lu.assertEquals(candidate({111111}), {111111})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp27jm3wxr.lua:24: expected: {1, 4, 2, 3}\nactual: {1, 2, 3, 4}\nstack traceback:\n\t/tmp/tmp27jm3wxr.lua:24: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907510
    },
    {
      "exit_code": 1,
      "program": "-- Given table of integers, return table in strange order.\n-- Strange sorting, is when you start with the minimum value,\n-- then maximum of the remaining integers, then minimum and so on.\n-- Examples:\n-- >>> strange_sort_list([1, 2, 3, 4])\n-- [1, 4, 2, 3]\n-- >>> strange_sort_list([5, 5, 5, 5])\n-- [5, 5, 5, 5]\n-- >>> strange_sort_list([])\n-- []\nlocal function strange_sort_list(lst)\n    if #lst == 0 then return lst end\n    local min = lst[1]\n    local max = lst[1]\n    for i = 2, #lst, 2 do\n        if lst[i] < min then min = lst[i] end\n        if lst[i] > max then max = lst[i] end\n    end\n    for i = 1, #lst, 1 do\n        if lst[i] == min then\n            lst[i], lstnlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = strange_sort_list\n    lu.assertEquals(candidate({1, 2, 3, 4}), {1, 4, 2, 3})\n    lu.assertEquals(candidate({5, 6, 7, 8, 9}), {5, 9, 6, 8, 7})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5}), {1, 5, 2, 4, 3})\n    lu.assertEquals(candidate({5, 6, 7, 8, 9, 1}), {1, 9, 5, 8, 6, 7})\n    lu.assertEquals(candidate({5, 5, 5, 5}), {5, 5, 5, 5})\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8}), {1, 8, 2, 7, 3, 6, 4, 5})\n    lu.assertEquals(candidate({0, 2, 2, 2, 5, 5, -5, -5}), {-5, 5, -5, 5, 0, 2, 2, 2})\n    lu.assertEquals(candidate({111111}), {111111})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmp7fxang8b.lua:22: ']' expected near '='\n",
      "stdout": "",
      "timestamp": 1661907510
    },
    {
      "exit_code": 1,
      "program": "-- Given table of integers, return table in strange order.\n-- Strange sorting, is when you start with the minimum value,\n-- then maximum of the remaining integers, then minimum and so on.\n-- Examples:\n-- >>> strange_sort_list([1, 2, 3, 4])\n-- [1, 4, 2, 3]\n-- >>> strange_sort_list([5, 5, 5, 5])\n-- [5, 5, 5, 5]\n-- >>> strange_sort_list([])\n-- []\nlocal function strange_sort_list(lst)\n    local tbl = {}\n    for i = 1, #lst, 2 do\n        tbl[i] = lst[i]\n    end\n    for i = #lst, 1, -2 do\n        tbl[i] = lst[i]\n    end\n    return tbl\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = strange_sort_list\n    lu.assertEquals(candidate({1, 2, 3, 4}), {1, 4, 2, 3})\n    lu.assertEquals(candidate({5, 6, 7, 8, 9}), {5, 9, 6, 8, 7})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5}), {1, 5, 2, 4, 3})\n    lu.assertEquals(candidate({5, 6, 7, 8, 9, 1}), {1, 9, 5, 8, 6, 7})\n    lu.assertEquals(candidate({5, 5, 5, 5}), {5, 5, 5, 5})\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8}), {1, 8, 2, 7, 3, 6, 4, 5})\n    lu.assertEquals(candidate({0, 2, 2, 2, 5, 5, -5, -5}), {-5, 5, -5, 5, 0, 2, 2, 2})\n    lu.assertEquals(candidate({111111}), {111111})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmparnsdhgt.lua:25: expected: {1, 4, 2, 3}\nactual: {1, 2, 3, 4}\nstack traceback:\n\t/tmp/tmparnsdhgt.lua:25: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907510
    },
    {
      "exit_code": 1,
      "program": "-- Given table of integers, return table in strange order.\n-- Strange sorting, is when you start with the minimum value,\n-- then maximum of the remaining integers, then minimum and so on.\n-- Examples:\n-- >>> strange_sort_list([1, 2, 3, 4])\n-- [1, 4, 2, 3]\n-- >>> strange_sort_list([5, 5, 5, 5])\n-- [5, 5, 5, 5]\n-- >>> strange_sort_list([])\n-- []\nlocal function strange_sort_list(lst)\n    local t = {}\n    for i = 1, #lst, 2 do\n        t[lst[i]] = i\n    end\n    for i = 2, #lst, 2 do\n        t[lst[i]] = i - 1\n    end\n    for i = 1, #lst, 2 do\n        t[lst[i]] = i\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = strange_sort_list\n    lu.assertEquals(candidate({1, 2, 3, 4}), {1, 4, 2, 3})\n    lu.assertEquals(candidate({5, 6, 7, 8, 9}), {5, 9, 6, 8, 7})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5}), {1, 5, 2, 4, 3})\n    lu.assertEquals(candidate({5, 6, 7, 8, 9, 1}), {1, 9, 5, 8, 6, 7})\n    lu.assertEquals(candidate({5, 5, 5, 5}), {5, 5, 5, 5})\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8}), {1, 8, 2, 7, 3, 6, 4, 5})\n    lu.assertEquals(candidate({0, 2, 2, 2, 5, 5, -5, -5}), {-5, 5, -5, 5, 0, 2, 2, 2})\n    lu.assertEquals(candidate({111111}), {111111})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzxojuvhs.lua:28: expected: {1, 4, 2, 3}\nactual: {1, 1, 3, 3}\nstack traceback:\n\t/tmp/tmpzxojuvhs.lua:28: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907510
    },
    {
      "exit_code": 1,
      "program": "-- Given table of integers, return table in strange order.\n-- Strange sorting, is when you start with the minimum value,\n-- then maximum of the remaining integers, then minimum and so on.\n-- Examples:\n-- >>> strange_sort_list([1, 2, 3, 4])\n-- [1, 4, 2, 3]\n-- >>> strange_sort_list([5, 5, 5, 5])\n-- [5, 5, 5, 5]\n-- >>> strange_sort_list([])\n-- []\nlocal function strange_sort_list(lst)\n    local t = {}\n    for i = 1, #lst, 2 do\n        t[lst[i]] = i\n    end\n    for i = 1, #lst, 2 do\n        t[lst[i]] = i\n    end\n    for i = 1, #lst, 2 do\n        t[lst[i]] = i\n    end\n    for i = 1, #lst, 2 do\n        t[lst[i]] = i\n    end\n    for i = 1, #lst, 2 do\n        t[lst[i]] = i\n    end\n    for i = 1, #lst, 2 do\n        t[lst[i]] = i\n    end\n    for i = 1, #lst, 2 do\n        t[lst[i]] = i\n    end\n    for i = 1, #lst, 2 do\n        t[lst[i]] = i\n    end\n    for i = 1, #lst, 2 do\n        t[lst[i]] = i\n    end\n    for i = 1, #lst, 2 do\n        t[lst[i]] = i\n    end\n    for i = 1, #lst, 2 do\n        t[lst[i]] = i\n    end\n    for i = 1, #lst, 2 do\n        t[lst[i]] = i\n    end\n    for i = 1, #lst, 2 do\n        t[lst[i]] = i\n    end\n    for i = 1, #lst, 2 do\n        t[lst[i]] = i\n    end\n    for i = 1, #lst, 2 do\n        t[lst[i]] = i\n    end\n    for i = 1, #lst, 2 do\n        t[lst[i]] = i\n    end\n    for i = 1, #lst, 2 do\n        t[lst[i]] = i\n    end\n    for i = 1, #lst, 2 do\n        t[lst[i]] = i\n    end\n    for i = 1, #lst, 2 do\n        t[lst[i\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = strange_sort_list\n    lu.assertEquals(candidate({1, 2, 3, 4}), {1, 4, 2, 3})\n    lu.assertEquals(candidate({5, 6, 7, 8, 9}), {5, 9, 6, 8, 7})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5}), {1, 5, 2, 4, 3})\n    lu.assertEquals(candidate({5, 6, 7, 8, 9, 1}), {1, 9, 5, 8, 6, 7})\n    lu.assertEquals(candidate({5, 5, 5, 5}), {5, 5, 5, 5})\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8}), {1, 8, 2, 7, 3, 6, 4, 5})\n    lu.assertEquals(candidate({0, 2, 2, 2, 5, 5, -5, -5}), {-5, 5, -5, 5, 0, 2, 2, 2})\n    lu.assertEquals(candidate({111111}), {111111})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmp4ixqv1hn.lua:69: ']' expected near 'lu'\n",
      "stdout": "",
      "timestamp": 1661907510
    },
    {
      "exit_code": 1,
      "program": "-- Given table of integers, return table in strange order.\n-- Strange sorting, is when you start with the minimum value,\n-- then maximum of the remaining integers, then minimum and so on.\n-- Examples:\n-- >>> strange_sort_list([1, 2, 3, 4])\n-- [1, 4, 2, 3]\n-- >>> strange_sort_list([5, 5, 5, 5])\n-- [5, 5, 5, 5]\n-- >>> strange_sort_list([])\n-- []\nlocal function strange_sort_list(lst)\n    local n = table.getn(lst)\n    if n == 0 then\n        return lst\n    end\n    local min = math.min(lst)\n    local max = math.max(lst)\n    local result = {}\n    for i = 1, n, 1 do\n        result[i] = max\n        max = math.min(max, lst[i])\n        min = math.max(min, lst[i])\n    end\n    for i = 1, n, 1 do\n        result[n + i] = min\n        min = math.max(min, lst[i])\n    end\n    for i = 1, n, 1 do\n        result[n * 2 - i] = lst[i]\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = strange_sort_list\n    lu.assertEquals(candidate({1, 2, 3, 4}), {1, 4, 2, 3})\n    lu.assertEquals(candidate({5, 6, 7, 8, 9}), {5, 9, 6, 8, 7})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5}), {1, 5, 2, 4, 3})\n    lu.assertEquals(candidate({5, 6, 7, 8, 9, 1}), {1, 9, 5, 8, 6, 7})\n    lu.assertEquals(candidate({5, 5, 5, 5}), {5, 5, 5, 5})\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8}), {1, 8, 2, 7, 3, 6, 4, 5})\n    lu.assertEquals(candidate({0, 2, 2, 2, 5, 5, -5, -5}), {-5, 5, -5, 5, 0, 2, 2, 2})\n    lu.assertEquals(candidate({111111}), {111111})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnd33yv9m.lua:12: attempt to call a nil value (field 'getn')\nstack traceback:\n\t/tmp/tmpnd33yv9m.lua:12: in local 'candidate'\n\t/tmp/tmpnd33yv9m.lua:37: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "timestamp": 1661907510
    },
    {
      "exit_code": 1,
      "program": "-- Given table of integers, return table in strange order.\n-- Strange sorting, is when you start with the minimum value,\n-- then maximum of the remaining integers, then minimum and so on.\n-- Examples:\n-- >>> strange_sort_list([1, 2, 3, 4])\n-- [1, 4, 2, 3]\n-- >>> strange_sort_list([5, 5, 5, 5])\n-- [5, 5, 5, 5]\n-- >>> strange_sort_list([])\n-- []\nlocal function strange_sort_list(lst)\n    local tbl = {}\n    for i = 1, #lst, 2 do\n        if lst[i] < lst[i + 1] then\n            tbl[lst[i]] = lst[i]\n            tbl[lst[i + 1]] = lst[i + 1]\n        end\n    end\n    return tbl\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = strange_sort_list\n    lu.assertEquals(candidate({1, 2, 3, 4}), {1, 4, 2, 3})\n    lu.assertEquals(candidate({5, 6, 7, 8, 9}), {5, 9, 6, 8, 7})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5}), {1, 5, 2, 4, 3})\n    lu.assertEquals(candidate({5, 6, 7, 8, 9, 1}), {1, 9, 5, 8, 6, 7})\n    lu.assertEquals(candidate({5, 5, 5, 5}), {5, 5, 5, 5})\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8}), {1, 8, 2, 7, 3, 6, 4, 5})\n    lu.assertEquals(candidate({0, 2, 2, 2, 5, 5, -5, -5}), {-5, 5, -5, 5, 0, 2, 2, 2})\n    lu.assertEquals(candidate({111111}), {111111})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpwgkq_axl.lua:25: expected: {1, 4, 2, 3}\nactual: {1, 2, 3, 4}\nstack traceback:\n\t/tmp/tmpwgkq_axl.lua:25: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907510
    },
    {
      "exit_code": 1,
      "program": "-- Given table of integers, return table in strange order.\n-- Strange sorting, is when you start with the minimum value,\n-- then maximum of the remaining integers, then minimum and so on.\n-- Examples:\n-- >>> strange_sort_list([1, 2, 3, 4])\n-- [1, 4, 2, 3]\n-- >>> strange_sort_list([5, 5, 5, 5])\n-- [5, 5, 5, 5]\n-- >>> strange_sort_list([])\n-- []\nlocal function strange_sort_list(lst)\n    local tbl = {}\n    for inlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = strange_sort_list\n    lu.assertEquals(candidate({1, 2, 3, 4}), {1, 4, 2, 3})\n    lu.assertEquals(candidate({5, 6, 7, 8, 9}), {5, 9, 6, 8, 7})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5}), {1, 5, 2, 4, 3})\n    lu.assertEquals(candidate({5, 6, 7, 8, 9, 1}), {1, 9, 5, 8, 6, 7})\n    lu.assertEquals(candidate({5, 5, 5, 5}), {5, 5, 5, 5})\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8}), {1, 8, 2, 7, 3, 6, 4, 5})\n    lu.assertEquals(candidate({0, 2, 2, 2, 5, 5, -5, -5}), {-5, 5, -5, 5, 0, 2, 2, 2})\n    lu.assertEquals(candidate({111111}), {111111})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpdr2n7yzd.lua:14: 'do' expected near '='\n",
      "stdout": "",
      "timestamp": 1661907510
    },
    {
      "exit_code": 1,
      "program": "-- Given table of integers, return table in strange order.\n-- Strange sorting, is when you start with the minimum value,\n-- then maximum of the remaining integers, then minimum and so on.\n-- Examples:\n-- >>> strange_sort_list([1, 2, 3, 4])\n-- [1, 4, 2, 3]\n-- >>> strange_sort_list([5, 5, 5, 5])\n-- [5, 5, 5, 5]\n-- >>> strange_sort_list([])\n-- []\nlocal function strange_sort_list(lst)\n    local t = {}\n    for i = 1, #lst, 2 do\n        if lst[i] < lst[i + 1] then\n            t[#\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = strange_sort_list\n    lu.assertEquals(candidate({1, 2, 3, 4}), {1, 4, 2, 3})\n    lu.assertEquals(candidate({5, 6, 7, 8, 9}), {5, 9, 6, 8, 7})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5}), {1, 5, 2, 4, 3})\n    lu.assertEquals(candidate({5, 6, 7, 8, 9, 1}), {1, 9, 5, 8, 6, 7})\n    lu.assertEquals(candidate({5, 5, 5, 5}), {5, 5, 5, 5})\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8}), {1, 8, 2, 7, 3, 6, 4, 5})\n    lu.assertEquals(candidate({0, 2, 2, 2, 5, 5, -5, -5}), {-5, 5, -5, 5, 0, 2, 2, 2})\n    lu.assertEquals(candidate({111111}), {111111})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmp4r_5mim4.lua:16: ']' expected near '='\n",
      "stdout": "",
      "timestamp": 1661907510
    },
    {
      "exit_code": 1,
      "program": "-- Given table of integers, return table in strange order.\n-- Strange sorting, is when you start with the minimum value,\n-- then maximum of the remaining integers, then minimum and so on.\n-- Examples:\n-- >>> strange_sort_list([1, 2, 3, 4])\n-- [1, 4, 2, 3]\n-- >>> strange_sort_list([5, 5, 5, 5])\n-- [5, 5, 5, 5]\n-- >>> strange_sort_list([])\n-- []\nlocal function strange_sort_list(lst)\n    local t = {}\n    for inlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = strange_sort_list\n    lu.assertEquals(candidate({1, 2, 3, 4}), {1, 4, 2, 3})\n    lu.assertEquals(candidate({5, 6, 7, 8, 9}), {5, 9, 6, 8, 7})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5}), {1, 5, 2, 4, 3})\n    lu.assertEquals(candidate({5, 6, 7, 8, 9, 1}), {1, 9, 5, 8, 6, 7})\n    lu.assertEquals(candidate({5, 5, 5, 5}), {5, 5, 5, 5})\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8}), {1, 8, 2, 7, 3, 6, 4, 5})\n    lu.assertEquals(candidate({0, 2, 2, 2, 5, 5, -5, -5}), {-5, 5, -5, 5, 0, 2, 2, 2})\n    lu.assertEquals(candidate({111111}), {111111})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpj941g4ek.lua:14: 'do' expected near '='\n",
      "stdout": "",
      "timestamp": 1661907510
    },
    {
      "exit_code": 1,
      "program": "-- Given table of integers, return table in strange order.\n-- Strange sorting, is when you start with the minimum value,\n-- then maximum of the remaining integers, then minimum and so on.\n-- Examples:\n-- >>> strange_sort_list([1, 2, 3, 4])\n-- [1, 4, 2, 3]\n-- >>> strange_sort_list([5, 5, 5, 5])\n-- [5, 5, 5, 5]\n-- >>> strange_sort_list([])\n-- []\nlocal function strange_sort_list(lst)\n    local t = {}\n    for i = 1, #lst, 2 do\n        t[lst[i]] = i\n    end\n    for i = 1, #lst, 2 do\n        t[lst[i]] = i\n    end\n    for i = 1, #lst, 2 do\n        t[lst[i]] = i\n    end\n    for i = 1, #lst, 2 do\n        t[lst[i]] = i\n    end\n    for i = 1, #lst, 2 do\n        t[lst[i]] = i\n    end\n    for i = 1, #lst, 2 do\n        t[lst[i]] = i\n    end\n    for i = 1, #lst, 2 do\n        t[lst[i]] = i\n    end\n    for i = 1, #lst, 2 do\n        t[lst[i]] = i\n    end\n    for i = 1, #lst, 2 do\n        t[lst[i]] = i\n    end\n    for i = 1, #lst, 2 do\n        t[lst[i]] = i\n    end\n    for i = 1, #lst, 2 do\n        t[lst[i]] = i\n    end\n    for i = 1, #lst, 2 do\n        t[lst[i]] = i\n    end\n    for i = 1, #lst, 2 do\n        t[lst[i]] = i\n    end\n    for i = 1, #lst, 2 do\n        t[lst[i]] = i\n    end\n    for i = 1, #lst, 2 do\n        t[lst[i]] = i\n    end\n    for i = 1, #lst, 2 do\n        t[lst[i]] = i\n    end\n    for i = 1, #lst, 2 do\n        t[lst[i]] = i\n    end\n    for i = 1, #lst, 2 do\n        t[lst[i]] = i\n    end\n    for i = 1, #lst, 2 do\n        t[lst[i\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = strange_sort_list\n    lu.assertEquals(candidate({1, 2, 3, 4}), {1, 4, 2, 3})\n    lu.assertEquals(candidate({5, 6, 7, 8, 9}), {5, 9, 6, 8, 7})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5}), {1, 5, 2, 4, 3})\n    lu.assertEquals(candidate({5, 6, 7, 8, 9, 1}), {1, 9, 5, 8, 6, 7})\n    lu.assertEquals(candidate({5, 5, 5, 5}), {5, 5, 5, 5})\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8}), {1, 8, 2, 7, 3, 6, 4, 5})\n    lu.assertEquals(candidate({0, 2, 2, 2, 5, 5, -5, -5}), {-5, 5, -5, 5, 0, 2, 2, 2})\n    lu.assertEquals(candidate({111111}), {111111})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmp4ixqv1hn.lua:69: ']' expected near 'lu'\n",
      "stdout": "",
      "timestamp": 1661907510
    },
    {
      "exit_code": 1,
      "program": "-- Given table of integers, return table in strange order.\n-- Strange sorting, is when you start with the minimum value,\n-- then maximum of the remaining integers, then minimum and so on.\n-- Examples:\n-- >>> strange_sort_list([1, 2, 3, 4])\n-- [1, 4, 2, 3]\n-- >>> strange_sort_list([5, 5, 5, 5])\n-- [5, 5, 5, 5]\n-- >>> strange_sort_list([])\n-- []\nlocal function strange_sort_list(lst)\n    local tbl = {}\n    for i = 1, #lst do\n        if lst[i] > lst[i-1] then\n            tblnlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = strange_sort_list\n    lu.assertEquals(candidate({1, 2, 3, 4}), {1, 4, 2, 3})\n    lu.assertEquals(candidate({5, 6, 7, 8, 9}), {5, 9, 6, 8, 7})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5}), {1, 5, 2, 4, 3})\n    lu.assertEquals(candidate({5, 6, 7, 8, 9, 1}), {1, 9, 5, 8, 6, 7})\n    lu.assertEquals(candidate({5, 5, 5, 5}), {5, 5, 5, 5})\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8}), {1, 8, 2, 7, 3, 6, 4, 5})\n    lu.assertEquals(candidate({0, 2, 2, 2, 5, 5, -5, -5}), {-5, 5, -5, 5, 0, 2, 2, 2})\n    lu.assertEquals(candidate({111111}), {111111})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmp3akcwfrn.lua:16: ']' expected near '='\n",
      "stdout": "",
      "timestamp": 1661907510
    },
    {
      "exit_code": 1,
      "program": "-- Given table of integers, return table in strange order.\n-- Strange sorting, is when you start with the minimum value,\n-- then maximum of the remaining integers, then minimum and so on.\n-- Examples:\n-- >>> strange_sort_list([1, 2, 3, 4])\n-- [1, 4, 2, 3]\n-- >>> strange_sort_list([5, 5, 5, 5])\n-- [5, 5, 5, 5]\n-- >>> strange_sort_list([])\n-- []\nlocal function strange_sort_list(lst)\n    local tbl = {}\n    for i = 1, #lst, 2 do\n        tbl[lst[i]] = i\n    end\n    for i = 1, #lst, 2 do\n        tbl[lst[i]] = i\n    end\n    for i = 1, #lst, 2 do\n        tbl[lst[i]] = i\n    end\n    for i = 1, #lst, 2 do\n        tbl[lst[i]] = i\n    end\n    for i = 1, #lst, 2 do\n        tbl[lst[i]] = i\n    end\n    for i = 1, #lst, 2 do\n        tbl[lst[i]] = i\n    end\n    for i = 1, #lst, 2 do\n        tbl[lst[i]] = i\n    end\n    for i = 1, #lst, 2 do\n        tbl[lst[i]] = i\n    end\n    for i = 1, #lst, 2 do\n        tbl[lst[i]] = i\n    end\n    for i = 1, #lst, 2 do\n        tbl[lst[i]] = i\n    end\n    for i = 1, #lst, 2 do\n        tbl[lst[i]] = i\n    end\n    for i = 1, #lst, 2 do\n        tbl[lst[i]] = i\n    end\n    for i = 1, #lst, 2 do\n        tbl[lst[i]] = i\n    end\n    for i = 1, #lst, 2 do\n        tbl[lst[i]] = i\n    end\n    for i = 1, #lst, 2 do\n        tbl[lst[i]] = i\n    end\n    for i = 1, #lst, 2 do\n        tbl[lst[i]] = i\n    end\n    for i = 1, #lst, 2 do\n        tbl[lst[i]] = i\n    end\n    for i = 1, #lst, 2 do\n        tbl[lst[i]] = i\n    end\n    \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = strange_sort_list\n    lu.assertEquals(candidate({1, 2, 3, 4}), {1, 4, 2, 3})\n    lu.assertEquals(candidate({5, 6, 7, 8, 9}), {5, 9, 6, 8, 7})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5}), {1, 5, 2, 4, 3})\n    lu.assertEquals(candidate({5, 6, 7, 8, 9, 1}), {1, 9, 5, 8, 6, 7})\n    lu.assertEquals(candidate({5, 5, 5, 5}), {5, 5, 5, 5})\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8}), {1, 8, 2, 7, 3, 6, 4, 5})\n    lu.assertEquals(candidate({0, 2, 2, 2, 5, 5, -5, -5}), {-5, 5, -5, 5, 0, 2, 2, 2})\n    lu.assertEquals(candidate({111111}), {111111})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmp5px0_rs9.lua:83: 'end' expected (to close 'function' at line 11) near <eof>\n",
      "stdout": "",
      "timestamp": 1661907510
    }
  ]
}
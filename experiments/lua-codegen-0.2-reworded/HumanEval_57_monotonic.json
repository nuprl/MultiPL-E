{
  "name": "HumanEval_57_monotonic",
  "language": "lua",
  "prompt": "-- Return true is table elements are monotonically increasing or decreasing.\n-- >>> monotonic([1, 2, 4, 20])\n-- True\n-- >>> monotonic([1, 20, 4, 10])\n-- False\n-- >>> monotonic([4, 1, 0, -10])\n-- True\nlocal function monotonic(l)\n",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())",
  "completions": [
    "    if #l == 0 then\n        return true\n    end\n    if l[1] < l[2] then\n        return true\n    end\n    if l[1] > l[2] then\n        return false\n    end\n    return monotonic(l[3:])\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i-1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local i, j, n = 1, 1, len(l)\n    for i = 1, n do\n        if l[i] < l[i-1] then\n            return false\n        end\n        if l[i] > l[i-1] then\n            n = i\n        end\n    end\n    return true\nend",
    "    if #l < 2 then return true end\n    if l[1] > l[2] then return false else return true end\nend",
    "    local t = {}\n    for i
    "    local n = 1\n    for k = 2, #l, 2 do\n        if l[k] < l[k-1] then\n            n = -n\n        end\n    end\n    return n == 1\nend",
    "    local i, j\n    for i = 1, #l, 1 do\n        for j = i + 1, #l, 1 do\n            if l[i] > l[j] then\n                return false\n            end\n        end\n    end\n    return true\nend",
    "    local i, n = 1, #l\n    if n == 0 then return true end\n    if l[1] < l[n] then return true end\n    for i = 2, n do\n        if l[i] < l[i-1] then return false end\n    end\n    return true\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i-1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i-1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local i, n = 1, #l\n    while i < n do\n        if l[i] < l[i-1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local i, j = 1, 1\n    while i < #l do\n        if l[i] < l[j] then\n            j = i\n        end\n        i = i + 1\n    end\n    return j == 1\nend",
    "    local n = 1\n    for i = 2, #l, 2 do\n        if l[i] < l[i-1] then\n            n = -n\n        end\n    end\n    return n == 1\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i-1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i-1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local i = 1\n    local last = l[1]\n    for i = 2, #l, 1 do\n        if l[i] < last then\n            return false\n        end\n        last = l[i]\n    end\n    return true\nend",
    "    local i = 1\n    local last = l[1]\n    while i < #l do\n        if l[i] < last then\n            return false\n        end\n        last = l[i]\n        i = i + 1\n    end\n    return true\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i-1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i-1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local i = 1\n    local last = l[1]\n    for i = 2, #l, 1 do\n        if l[i] < last then\n            return false\n        end\n        last = l[i]\n    end\n    return true\nend",
    "    local i = 1\n    local last = l[1]\n    while i < #l do\n        if l[i] < last then\n            return false\n        end\n        last = l[i]\n        i = i + 1\n    end\n    return true\nend",
    "    local i = 1\n    local last = l[1]\n    for i = 2, #l, 1 do\n        if l[i] < last then\n            return false\n        end\n        last = l[i]\n    end\n    return true\nend",
    "    local i = 1\n    local last = l[1]\n    while i < #l do\n        if l[i] < last then\n            return false\n        elseif l[i] > last then\n            last = l[i]\n        else\n            return true\n        i = i + 1\n    end\n    return true\nend",
    "    local i = 1\n    local last = l[1]\n    while i < #l do\n        if l[i] < last then\n            return false\n        elseif l[i] > last then\n            last = l[i]\n        else\n            i = i + 1\n        end\n    end\n    return true\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i-1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local i = 1\n    local last = l[1]\n    while i < #l do\n        if l[i] < last then\n            return false\n        end\n        last = l[i]\n        i = i + 1\n    end\n    return true\nend",
    "    local i = 1\n    local last = l[1]\n    while i < #l do\n        if l[i] < last then\n            return false\n        end\n        last = l[i]\n        i = i + 1\n    end\n    return true\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i-1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i-1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local n = 1\n    for i = 2, #l, 2 do\n        if l[i] < l[i-1] then\n            n = -n\n        end\n    end\n    return n == 1\nend",
    "    local n = 0\n    for i = 1, #l, 1 do\n        if l[i] < l[i-1] then\n            n = n + 1\n        end\n    end\n    return n == #l\nend",
    "    local i = 1\n    local j = 2\n    while j < #l do\n        if l[i] < l[j] then\n            return false\n        end\n        i = j\n        j = j + 1\n    end\n    return true\nend",
    "    local n = 1\n    for i = 1, #l, 2 do\n        if l[i] < l[i-1] then\n            n = -n\n        end\n    end\n    return n == 1\nend",
    "    local i = 1\n    local last = l[1]\n    while i < #l do\n        if l[i] < last then\n            return false\n        end\n        last = l[i]\n        i = i + 1\n    end\n    return true\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i - 1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local i, j, k\n    for i = 1, #l, 1 do\n        for j = 2, #l, 2 do\n            for k = 3, #l, 3 do\n                if l[i] > l[j] and l[j] > l[k] then\n                    return false\n                end\n            end\n        end\n    end\n    return true\nend",
    "    local i, j\n    for i = 1, #l, 1 do\n        for j = 2, #l, 2 do\n            if l[i] > l[j] then\n                return false\n            end\n        end\n    end\n    return true\nend",
    "    local i, m = 1, l[1]\n    for i = 2, #l, 1 do\n        if l[i] < m then\n            m = l[i]\n        else\n            return false\n    end\n    return true\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i-1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local i, j\n    for i = 1, #l, 1 do\n        for j = i + 1, #l, 1 do\n            if l[i] > l[j] then\n                return false\n            end\n        end\n    end\n    return true\nend",
    "    local i, j\n    for i = 1, #l, 1 do\n        for j = i + 1, #l, 1 do\n            if l[i] > l[j] then\n                return false\n            end\n        end\n    end\n    return true\nend",
    "    local i = 1\n    local last = l[i]\n    while i < #l do\n        if l[i] < last then\n            return false\n        end\n        last = l[i]\n        i = i + 1\n    end\n    return true\nend",
    "    local n = 1\n    local last = l[1]\n    for i = 2, #l, 1 do\n        if l[i] < last then\n            n = -n\n        end\n        last = l[i]\n    end\n    return n\nend",
    "    local i = 1\n    local last = l[1]\n    while i < #l do\n        if l[i] < last then\n            return false\n        end\n        last = l[i]\n        i = i + 1\n    end\n    return true\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i-1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i - 1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local n = 1\n    for i = 1, #l, 2 do\n        if l[i] > l[i+1] then\n            n = -n\n        end\n    end\n    return n == 1\nend",
    "    local n = 1\n    local last = l[1]\n    for i = 2, #l, 1 do\n        if l[i] < last then\n            n = -n\n        end\n        last = l[i]\n    end\n    return n == 1\nend",
    "    local n = 0\n    local m = 0\n    for i = 1, #l, 1 do\n        if l[i] > l[i-1] then\n            n = i\n        elseif l[i] < l[i-1] then\n            m = i\n        end\n    end\n    return n > 0 and m == 0\nend",
    "    local i = 1\n    local last = l[i]\n    while i < #l do\n        if l[i] < last then\n            return false\n        end\n        last = l[i]\n        i = i + 1\n    end\n    return true\nend",
    "    local t = {}\n    for i=1,#l,1 do\n        t[l[i]] = true\n    end\n    for i=2,#l,1 do\n        if t[l[i]] and (l[i] > l[i-1] or l[i] < l[i-1]) then\n            return false\n        end\n    end\n    return true\nend",
    "    local n = 1\n    local last = l[1]\n    for _, v in ipairs(l) do\n        if v < last then\n            return false\n        end\n        last = v\n        n = n + 1\n    end\n    return n > 1\nend",
    "    local i = 1\n    local last = l[i]\n    while i < #l do\n        if l[i] < last then\n            return false\n        elseif l[i] > last then\n            last = l[i]\n        else\n            i = i + 1\n        end\n    end\n    return true\nend",
    "    local i = 1\n    local last = l[1]\n    while i < #l do\n        if l[i] < last then\n            return false\n        end\n        last = l[i]\n        i = i + 1\n    end\n    return true\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i-1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local i, j = 1, 1\n    while i < #l do\n        if l[i] < l[j] then\n            j = i\n        end\n        i = i + 1\n    end\n    return j == 1\nend",
    "    local i, j, k\n    for i = 1, #l, 1 do\n        for j = 2, #l, 2 do\n            k = l[i] - l[j]\n            if k < 0 then\n                return false\n            end\n        end\n    end\n    return true\nend",
    "    local t = {}\n    for i=1,#l,1 do\n        t[l[i]] = true\n    end\n    for i=2,#l,1 do\n        if t[l[i-1]] and (l[i] < l[i-1] or l[i] > l[i-1]) then\n            return false\n        end\n    end\n    return true\nend",
    "    local i = 1\n    local last = l[1]\n    while i < #l do\n        if l[i] < last then\n            return false\n        elseif l[i] > last then\n            last = l[i]\n        else\n            return true\n        i = i + 1\n    end\n    return true\nend",
    "    local i, j, k, t\n    t = l[1]\n    for i = 2, #l, 1 do\n        if l[i] < t then t = l[i]\n        elseif l[i] > t then return false\n        end\n    end\n    return true\nend",
    "    local i, j\n    for i = 1, #l, 1 do\n        for j = i + 1, #l, 1 do\n            if l[i] > l[j] then\n                return false\n            end\n        end\n    end\n    return true\nend",
    "    local n = 1\n    local m = 1\n    for i = 1, #l, 1 do\n        if l[i] < l[i-1] then\n            n = -1\n        elseif l[i] > l[i-1] then\n            m = 1\n        end\n    end\n    return n == 1 or m == -1\nend",
    "    local i = 1\n    local last = l[1]\n    while i < #l do\n        if l[i] < last then\n            return false\n        end\n        last = l[i]\n        i = i + 1\n    end\n    return true\nend",
    "    local i = 1\n    local last = l[1]\n    while i < #l do\n        if l[i] < last then\n            return false\n        end\n        last = l[i]\n        i = i + 1\n    end\n    return true\nend",
    "    local t = {}\n    for i = 1, #l, 1 do\n        t[l[i]] = true\n    end\n    for i = 2, #l, 1 do\n        if t[l[i]] and (l[i] > l[i - 1] or l[i - 1] > l[i]) then\n            return false\n        end\n    end\n    return true\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i-1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local n = 1\n    for i = 1, #l, 2 do\n        if l[i] < l[i-1] then\n            n = -n\n        end\n    end\n    return n == 1\nend",
    "    local n = 0\n    local m = 0\n    for i = 1, #l, 1 do\n        if l[i] < l[i-1] then\n            n = i\n            m = 1\n        elseif l[i] > l[i-1] then\n            n = i\n            m = -1\n        end\n    end\n    return n, m\nend",
    "    local i = 1\n    local last = l[1]\n    while i < #l do\n        if l[i] < last then\n            return false\n        end\n        last = l[i]\n        i = i + 1\n    end\n    return true\nend",
    "    local t = {}\n    for i = 1, #l, 1 do\n        t[l[i]] = true\n    end\n    for i = 2, #l, 1 do\n        if t[l[i]] and (l[i] > l[i-1] or l[i] < l[i-1]) then\n            return false\n        end\n    end\n    return true\nend",
    "    local i = 1\n    local last = l[1]\n    while i < #l and l[i] <= last\n        i = i + 1\n        last = l[i]\n    return i == #l\nend",
    "    local n = 0\n    local m = 0\n    for i = 1, #l, 1 do\n        if l[i] < l[i-1] then\n            n = n + 1\n        elseif l[i] > l[i-1] then\n            m = m + 1\n        end\n    end\n    return m == 0 or n == 0\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i-1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local n = 1\n    for i = 2, #l, 2 do\n        if l[i] < l[i-1] then\n            n = -n\n        end\n    end\n    return n == 1\nend",
    "    local i = 1\n    local last = l[1]\n    for i = 2, #l, 1 do\n        if l[i] < last then\n            return false\n        end\n        last = l[i]\n    end\n    return true\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i-1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i-1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local i = 1\n    local last = l[i]\n    while i < #l do\n        if l[i] < last then\n            return false\n        end\n        last = l[i]\n        i = i + 1\n    end\n    return true\nend",
    "    local n = 1\n    for i = 2, #l, 2 do\n        if l[i] < l[i-1] then\n            n = -n\n        end\n    end\n    return n == 1\nend",
    "    local i = 1\n    local last = l[1]\n    while i < #l do\n        if l[i] < last then\n            return false\n        end\n        last = l[i]\n        i = i + 1\n    end\n    return true\nend",
    "    local i, j\n    for i = 1, #l, 1 do\n        for j = i + 1, #l, 1 do\n            if l[i] > l[j] then\n                return false\n            end\n        end\n    end\n    return true\nend",
    "    local i, j\n    for i = 1, #l, 1 do\n        for j = 2, #l, 2 do\n            if l[i] > l[j] then\n                return false\n            end\n        end\n    end\n    return true\nend",
    "    local t = {}\n    for i = 1, #l, 1 do\n        t[l[i]] = true\n    end\n    for i = 2, #l, 1 do\n        if t[l[i]] and l[i] < l[i - 1] then\n            return false\n        end\n    end\n    return true\nend",
    "    local i, j, k\n    for i = 1, #l, 1 do\n        for j = 2, #l, 2 do\n            if l[i] > l[j] then\n                k = i\n                i = j\n                j = k\n            end\n        end\n    end\n    return i == 1 or j == 2\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i-1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i-1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local i, j\n    for i = 1, #l, 1 do\n        for j = i + 1, #l, 1 do\n            if l[i] > l[j] then\n                return false\n            end\n        end\n    end\n    return true\nend",
    "    local n = 0\n    local i = 1\n    while i < #l do\n        if l[i] < l[i-1] then\n            n = n + 1\n        end\n        i = i + 1\n    end\n    return n == #l\nend",
    "    local i = 1\n    local last = l[1]\n    while i < #l do\n        if l[i] < last then\n            return false\n        end\n        last = l[i]\n        i = i + 1\n    end\n    return true\nend",
    "    local n = 1\n    local last = l[1]\n    for i = 2, #l, 1 do\n        if l[i] < last then\n            n = -1\n            break\n        elseif l[i] > last then\n            n = 1\n            break\n        else\n            last = l[i]\n    end\n    return n\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i-1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    if #l < 2 then return true end\n    if l[1] > l[2] then return false else return true end\nend",
    "    local i = 1\n    local last = l[1]\n    while i < #l do\n        if l[i] < last then\n            return false\n        end\n        last = l[i]\n        i = i + 1\n    end\n    return true\nend",
    "    local n = 1\n    for i = 2, #l, 1 do\n        if l[i] < l[i-1] then\n            n = -n\n        end\n    end\n    return n == 1\nend",
    "    local i = 1\n    local last = l[1]\n    while i < #l do\n        if l[i] < last then\n            return false\n        end\n        last = l[i]\n        i = i + 1\n    end\n    return true\nend",
    "    local n = 1\n    local m = 1\n    for i = 1, #l, 2 do\n        if l[i] < l[i-1] then\n            n = -n\n        end\n        if l[i] > l[i-1] then\n            m = -m\n        end\n    end\n    return m == 1 and n == 1\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i-1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    if #l == 0 then return true end\n    if l[1] > l[2] then return true\n    if l[1] < l[2] then return false\n    return monotonic(l[3:])\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i-1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local n = 1\n    for i = 2, #l, 2 do\n        if l[i] < l[i-1] then\n            n = -n\n        end\n    end\n    return n == 1\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i-1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i-1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local n = 1\n    local last = l[1]\n    for i = 2, #l, 1 do\n        if l[i] < last then\n            n = -n\n        end\n        last = l[i]\n    end\n    return n\nend",
    "    local i, j, k\n    for i = 1, #l, 1 do\n        for j = 2, #l, 2 do\n            if l[i] > l[j] then\n                k = j\n                j = i\n                i = k\n            end\n        end\n    end\n    return i == 1 or i == #l\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i - 1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i-1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local i, j, k\n    for i = 1, #l, 1 do\n        for j = 2, #l, 2 do\n            if l[i] > l[j] then\n                k = j\n                break\n            end\n        end\n        if k then\n            return false\n        end\n    end\n    return true\nend",
    "    local i, n = 1, #l\n    if n < 2 then return true end\n    for i = 2, n, 1 do\n        if l[i] < l[i-1] then return false end\n    end\n    return true\nend",
    "    local t = {}\n    for i = 1, #l, 1 do\n        t[l[i]] = true\n    end\n    for i = 2, #l, 1 do\n        if t[l[i]] and l[i] ~= l[i-1] then\n            return false\n        end\n    end\n    return true\nend",
    "    local i, j\n    for i = 1, #l, 1 do\n        for j = i + 1, #l, 1 do\n            if l[i] > l[j] then\n                return false\n            end\n        end\n    end\n    return true\nend",
    "    local i, j, k\n    for i = 1, #l, 1 do\n        for j = 2, #l, 2 do\n            if l[i] > l[j] then\n                k = j\n                for k = j + 1, #l, k do\n                    if l[k] < l[i] then\n                        return false\n                    end\n                end\n            elseif l[i] < l[j] then\n                k = i\n                for k = i + 1, #l, k do\n                    if l[k] > l[j] then\n                        return false\n                    end\n                end\n            end\n        end\n    end\n    return true\nend",
    "    local i = 1\n    local last = l[i]\n    while i < #l do\n        if l[i] < last then\n            return false\n        end\n        last = l[i]\n        i = i + 1\n    end\n    return true\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i-1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local n = 0\n    local m = 0\n    for _, v in ipairs(l) do\n        if v < l[n] then\n            n = n + 1\n        elseif v > l[m] then\n            m = m + 1\n        end\n    end\n    return m == n\nend",
    "    local i = 1\n    local last = l[1]\n    while i < #l do\n        if l[i] < last then\n            return false\n        end\n        last = l[i]\n        i = i + 1\n    end\n    return true\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i - 1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local i = 1\n    local last = l[1]\n    while i < #l do\n        if l[i] < last then\n            return false\n        elseif l[i] > last then\n            last = l[i]\n        else\n            i = i + 1\n        end\n    end\n    return true\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i-1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i - 1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local i = 1\n    local last = l[1]\n    while i < #l do\n        if l[i] < last then\n            return false\n        elseif l[i] > last then\n            last = l[i]\n        else\n            i = i + 1\n        end\n    end\n    return true\nend",
    "    local t = {}\n    for i=1,#l,1 do\n        t[l[i]] = true\n    end\n    for i=1,#l,1 do\n        if t[l[i-1]] and t[l[i]] then\n            return true\n        end\n    end\n    return false\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i-1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    if #l == 0 then\n        return true\n    end\n    if l[1] < l[2] then\n        return true\n    end\n    if l[1] > l[2] then\n        return false\n    end\n    return monotonic(l[3:])\nend",
    "    local t = {}\n    for i=1,#l,1 do\n        t[l[i]] = true\n    end\n    for i=2,#l,1 do\n        if t[l[i]] and l[i] ~= l[i-1] then\n            return false\n        end\n    end\n    return true\nend",
    "    local i, j, k\n    for i = 1, #l, 1 do\n        for j = 2, #l, 2 do\n            if l[i] > l[j] then\n                k = j\n                break\n            end\n        end\n        if k then\n            return false\n        end\n    end\n    return true\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i-1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i-1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local i, j\n    for i = 1, #l, 2 do\n        if l[i] < l[i-1] then return false end\n        if l[i] > l[i-1] then return true end\n    end\n    return true\nend",
    "    local n = 1\n    for i = 2, #l, 2 do\n        if l[i] < l[i-1] then\n            n = -n\n        end\n    end\n    return n == 1\nend",
    "    local i = 1\n    local last = l[1]\n    for i = 2, #l, 1 do\n        if l[i] < last then\n            return false\n        end\n        last = l[i]\n    end\n    return true\nend",
    "    local i, j\n    for i = 1, #l, 1 do\n        for j = 2, #l, 2 do\n            if l[i] > l[j] then\n                return false\n            end\n        end\n    end\n    return true\nend",
    "    local i = 1\n    local last = l[1]\n    while i < #l do\n        if l[i] < last then\n            return false\n        elseif l[i] > last then\n            last = l[i]\n        else\n            i = i + 1\n        end\n    end\n    return true\nend",
    "    local i = 1\n    local last = l[1]\n    while i < #l do\n        if l[i] < last then\n            return false\n        end\n        last = l[i]\n        i = i + 1\n    end\n    return true\nend",
    "    local i = 1\n    local last = l[1]\n    for i = 2, #l, 1 do\n        if l[i] < last then\n            return false\n        end\n        last = l[i]\n    end\n    return true\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i - 1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local n = 1\n    for i = 2, #l, 2 do\n        if l[i] < l[i-1] then\n            n = -n\n        end\n    end\n    return n == 1\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i-1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i-1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i-1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local i, j, k\n    for i = 1, #l, 1 do\n        for j = 2, #l, 2 do\n            if l[i] > l[j] then\n                k = j\n                break\n            end\n        end\n        if k then\n            return false\n        end\n    end\n    return true\nend",
    "    local i, j, k\n    for i = 1, #l, 1 do\n        for j = 2, #l, 2 do\n            k = l[i]\n            if k < l[j] then\n                return false\n            end\n        end\n    end\n    return true\nend",
    "    local i = 1\n    local last = l[1]\n    while i < #l do\n        if l[i] < last then\n            return false\n        end\n        last = l[i]\n        i = i + 1\n    end\n    return true\nend",
    "    local n = 1\n    for i = 1, #l, 2 do\n        if l[i] < l[i-1] then\n            n = -1\n            break\n        elseif l[i] > l[i-1] then\n            n = 1\n            break\n        end\n    end\n    return n\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i-1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local i = 1\n    local j = 2\n    while j < #l do\n        if l[i] < l[j] then\n            return false\n        end\n        i = j\n        j = j + 1\n    end\n    return true\nend",
    "    local n = 0\n    local m = 0\n    for _, v in ipairs(l) do\n        if v < l[n] then\n            n = n + 1\n        elseif v > l[m] then\n            m = m + 1\n        end\n    end\n    return n == m\nend",
    "    local t = {}\n    for i = 1, #l, 1 do\n        t[l[i]] = true\n    end\n    for i = 2, #l, 1 do\n        if t[l[i]] and (l[i] > l[i-1] or l[i] < l[i-1]) then\n            return false\n        end\n    end\n    return true\nend",
    "    local i = 1\n    local last = l[i]\n    while i < #l do\n        if l[i] < last then\n            return false\n        elseif l[i] > last then\n            last = l[i]\n        else\n            i = i + 1\n        end\n    end\n    return true\nend",
    "    local n = 1\n    for i = 1, #l, 2 do\n        if l[i] < l[i-1] then\n            n = -n\n        end\n    end\n    return n == 1\nend",
    "    local i = 1\n    local last = l[1]\n    while i < #l do\n        if l[i] < last then\n            return false\n        elseif l[i] > last then\n            last = l[i]\n        else\n            i = i + 1\n        end\n    end\n    return true\nend",
    "    local t = {}\n    for i = 1, #l, 1 do\n        t[l[i]] = true\n    end\n    for i = 2, #l, 1 do\n        if l[i] < l[i-1] then\n            return false\n        end\n    end\n    return true\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i-1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local i = 1\n    local last = l[1]\n    for i = 2, #l, 1 do\n        if l[i] < last then\n            return false\n        end\n        last = l[i]\n    end\n    return true\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i - 1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local n = 1\n    for i = 1, #l, 2 do\n        if l[i] < l[i-1] then\n            n = -n\n        end\n    end\n    return n == 1\nend",
    "    local n = 1\n    local last = l[1]\n    for i = 2, #l, 1 do\n        if l[i] < last then\n            n = -n\n        end\n        last = l[i]\n    end\n    return n\nend",
    "    local i, j = 1, 1\n    while i < #l do\n        if l[i] < l[j] then\n            j = i\n        end\n        i = i + 1\n    end\n    return j == 1\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i-1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i-1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i-1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i-1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local i, j\n    for i = 1, #l, 1 do\n        for j = i + 1, #l, 1 do\n            if l[i] > l[j] then\n                return false\n            end\n        end\n    end\n    return true\nend",
    "    local i = 1\n    local last = l[1]\n    while i < #l do\n        if l[i] < last then\n            return false\n        end\n        last = l[i]\n        i = i + 1\n    end\n    return true\nend",
    "    local i = 1\n    local last = l[1]\n    while i < #l do\n        if l[i] < last then\n            return false\n        end\n        last = l[i]\n        i = i + 1\n    end\n    return true\nend",
    "    local i = 1\n    local last = l[1]\n    while i < #l do\n        if l[i] < last then\n            return false\n        end\n        last = l[i]\n        i = i + 1\n    end\n    return true\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i-1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i-1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local n = 1\n    local last = l[1]\n    for i = 2, #l, 1 do\n        if l[i] < last then\n            n = -1\n            break\n        elseif l[i] > last then\n            n = 1\n        end\n        last = l[i]\n    end\n    return n\nend",
    "    local i, n = 1, #l\n    if n < 2 then return true end\n    for i = 2, n do\n        if l[i] < l[i - 1] then return false\n        end\n    end\n    return true\nend",
    "    local i = 1\n    local last = l[1]\n    for i = 2, #l, 1 do\n        if l[i] < last then\n            return false\n        end\n        last = l[i]\n    end\n    return true\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i-1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i - 1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i-1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local n = 1\n    for i = 2, #l, 2 do\n        if l[i] < l[i-1] then\n            n = -n\n        end\n    end\n    return n == 1\nend",
    "    local i = 1\n    local last = l[1]\n    for i = 2, #l, 1 do\n        if l[i] < last then\n            return false\n        end\n        last = l[i]\n    end\n    return true\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i - 1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local i = 1\n    local last = l[1]\n    for i = 2, #l, 1 do\n        if l[i] < last then\n            return false\n        end\n        last = l[i]\n    end\n    return true\nend",
    "    local i, n = 1, #l\n    while i < n and l[i] < l[i + 1] do\n        i = i + 1\n    end\n    return i == n\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i-1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local i = 1\n    local last = l[1]\n    while i < #l do\n        if l[i] < last then\n            return false\n        end\n        last = l[i]\n        i = i + 1\n    end\n    return true\nend",
    "    if #l < 2 then return true end\n    if l[1] > l[2] then return true\n    if l[1] < l[2] then return false\n    for i = 3, #l, 2 do\n        if l[i] < l[i - 1] then return false\n        if l[i] > l[i - 1] then return true\n    end\n    return true\nend",
    "    local i = 1\n    local last = l[i]\n    while i < #l do\n        if l[i] < last then\n            return false\n        elseif l[i] > last then\n            last = l[i]\n        else\n            i = i + 1\n        end\n    end\n    return true\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i-1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local i = 1\n    local last = l[1]\n    while i < #l do\n        if l[i] < last then\n            return false\n        end\n        last = l[i]\n        i = i + 1\n    end\n    return true\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i-1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i-1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i - 1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i-1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i-1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local i = 1\n    local last = l[1]\n    while i < #l and l[i] <= last\n        i = i + 1\n        last = l[i]\n    return i == #l\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i-1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local i = 1\n    local last = l[1]\n    while i < #l and l[i] <= last\n        i = i + 1\n    end\n    return i == #l or l[i] < last\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i-1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local i, j, k\n    for i = 1, #l, 1 do\n        for j = 2, #l, 2 do\n            if l[i] > l[j] then\n                k = j\n                break\n            end\n        end\n        if k then\n            return false\n        end\n    end\n    return true\nend",
    "    local n = 1\n    for i = 2, #l, 1 do\n        if l[i] < l[i-1] then\n            n = -n\n        end\n    end\n    return n == 1\nend",
    "    local n = 1\n    for i = 2, #l, 2 do\n        if l[i] < l[i-1] then\n            n = -n\n        end\n    end\n    return n == 1\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i - 1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local i = 1\n    local last = l[1]\n    while i < #l do\n        if l[i] < last then\n            return false\n        end\n        last = l[i]\n        i = i + 1\n    end\n    return true\nend",
    "    local i = 1\n    while i < #l do\n        if l[i] < l[i-1] then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local t = {}\n    for i = 1, #l, 1 do\n        t[l[i]] = true\n    end\n    for i = 2, #l, 1 do\n        if t[l[i]] and l[i] ~= l[i-1] then\n            return false\n        end\n    end\n    return true\nend"
  ],
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ]
}
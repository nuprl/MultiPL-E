name: HumanEval_141_file_name_check
language: lua
prompt: "-- Create a function which takes a string representing a file's name, and\
  \ returns\n-- 'Yes' if the the file's name is valid, and returns 'No' otherwise.\n\
  -- A file's name is considered to be valid if and only if all the following conditions\
  \ \n-- are met:\n-- - There should not be more than three digits ('0'-'9') in the\
  \ file's name.\n-- - The file's name contains exactly one dot '.'\n-- - The substring\
  \ before the dot should not be empty, and it starts with a letter from \n-- the\
  \ latin alphapet ('a'-'z' and 'A'-'Z').\n-- - The substring after the dot should\
  \ be one of these: ['txt', 'exe', 'dll']\n-- Examples:\n-- >>> file_name_check(\"\
  example.txt\")\n-- 'Yes'\n-- >>> file_name_check(\"1example.dll\")\n-- 'No'\nlocal\
  \ function file_name_check(file_name)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = file_name_check\n\
  \    lu.assertEquals(candidate('example.txt'), 'Yes')\n    lu.assertEquals(candidate('1example.dll'),\
  \ 'No')\n    lu.assertEquals(candidate('s1sdf3.asd'), 'No')\n    lu.assertEquals(candidate('K.dll'),\
  \ 'Yes')\n    lu.assertEquals(candidate('MY16FILE3.exe'), 'Yes')\n    lu.assertEquals(candidate('His12FILE94.exe'),\
  \ 'No')\n    lu.assertEquals(candidate('_Y.txt'), 'No')\n    lu.assertEquals(candidate('?aREYA.exe'),\
  \ 'No')\n    lu.assertEquals(candidate('/this_is_valid.dll'), 'No')\n    lu.assertEquals(candidate('this_is_valid.wow'),\
  \ 'No')\n    lu.assertEquals(candidate('this_is_valid.txt'), 'Yes')\n    lu.assertEquals(candidate('this_is_valid.txtexe'),\
  \ 'No')\n    lu.assertEquals(candidate('#this2_i4s_5valid.ten'), 'No')\n    lu.assertEquals(candidate('@this1_is6_valid.exe'),\
  \ 'No')\n    lu.assertEquals(candidate('this_is_12valid.6exe4.txt'), 'No')\n   \
  \ lu.assertEquals(candidate('all.exe.txt'), 'No')\n    lu.assertEquals(candidate('I563_No.exe'),\
  \ 'Yes')\n    lu.assertEquals(candidate('Is3youfault.txt'), 'Yes')\n    lu.assertEquals(candidate('no_one#knows.dll'),\
  \ 'Yes')\n    lu.assertEquals(candidate('1I563_Yes3.exe'), 'No')\n    lu.assertEquals(candidate('I563_Yes3.txtt'),\
  \ 'No')\n    lu.assertEquals(candidate('final..txt'), 'No')\n    lu.assertEquals(candidate('final132'),\
  \ 'No')\n    lu.assertEquals(candidate('_f4indsartal132.'), 'No')\n    lu.assertEquals(candidate('.txt'),\
  \ 'No')\n    lu.assertEquals(candidate('s.'), 'No')\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name\
    \ ~= file_name:match('^[0-9]{3}[.]') then\n        return 'No'\n    end\n    local\
    \ dot_index = string.find(file_name, '.')\n    if dot_index == nil then\n    \
    \    return 'No'\n    end\n    local dot_substring = string.sub(file_name, 1,\
    \ dot_index)\n    if not(dot_substring) then\n        return 'No'\n    end\n \
    \   local dot_substring_upper = string.upper(dot_substring)\n    if not(dot_substring_upper)\
    \ then\n        return 'No'\n    end\n    if not(dot_substring_upper:match('[A-Z][A-Z][A-Z]$'))\
    \ then\n        return 'No'\n    end\n    local extension = string.sub(file_name,\
    \ dot_index + 1, #file_name)\n    if not(extension) then\n        return 'No'\n\
    \    end\n    if not(extension:match('^[tx][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x",
  "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= string.gsub(file_name,\
    \ '^[0-9]+', '') then\n        return 'No'\n    end\n    if not string.sub(file_name,\
    \ 1, 1) ~= string.gsub(file_name, '^[a-zA-Z]', '') then\n        return 'No'\n\
    \    end\n    if string.sub(file_name, -3, -1) ~= 'txt' and string.sub(file_name,\
    \ -3, -1) ~= 'exe' and string.sub(file_name, -3, -1) ~= 'dll' then\n        return\
    \ 'No'\n    end\n    return 'Yes'\nend", "    if string.len(file_name) > 3 then\n\
    \        return 'No'\n    end\n    if string.len(file_name) < 3 then\n       \
    \ return 'No'\n    end\n    if string.sub(file_name, 1, 2) == '0' then\n     \
    \   return 'No'\n    end\n    if string.sub(file_name, 2, 3) == '.' then\n   \
    \     return 'No'\n    end\n    if string.sub(file_name, string.len(file_name)\
    \ - 2, string.len(file_name)) == '.' then\n        return 'No'\n    end\n    if\
    \ string.sub(file_name, 1, 1) ~= '.' then\n        return 'No'\n    end\n    if\
    \ string.sub(file_name, string.len(file_name) - 3, string.len(file_name)) ~= '.'\
    \ then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 1) ~= '.'\
    \ then\n        return 'No'\n    end\n    if string.sub(file_name, string.len(file_name)\
    \ - 3, string.len(file_name)) ~= '.' then\n        return 'No'\n    end\n    if\
    \ string.sub(file_name, 1, 1) ~= '.' then\n        return 'No'\n    end\n    if\
    \ string.sub(file_name, string.len(file_name) - 3, string.len(file_name)) ~= '.'\
    \ then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 1) ~= '.'\
    \ then\n        return 'No'\n    end\n    if string.sub(file_name, string.len(file_name)\
    \ - 3, string.len(file_name)) ~= '.' then\n        return 'No'\n    end\n    if\
    \ string.sub(file_name, 1, 1) ~= '.' then\n        return 'No'\n    end\n    if\
    \ string.sub(file_name, string.len(file_name) - 3, string.len(file_name)) ~= '.'\
    \ then\n        return 'No'\n    end\n    ", "    if #file_name < 3 then\n   \
    \     return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}[.]')\
    \ then\n        return 'No'\n    end\n    local dot_index = string.find(file_name,\
    \ '.')\n    if dot_index == nil then\n        return 'No'\n    end\n    local\
    \ before_dot = string.sub(file_name, 1, dot_index)\n    if not string.sub(before_dot,\
    \ 1, 1) ~= '[' then\n        return 'No'\n    end\n    local after_dot = string.sub(file_name,\
    \ dot_index + 1)\n    if not string.sub(after_dot, 1, 1) ~= '[' then\n       \
    \ return 'No'\n    end\n    if after_dot ~= 'txt' and after_dot ~= 'exe' and after_dot\
    \ ~= 'dll' then\n        return 'No'\n    end\n    return 'Yes'\nend", "    if\
    \ string.len(file_name) > 3 then\n        return 'No'\n    end\n    if string.len(file_name)\
    \ < 3 then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 2) ==\
    \ '0' or string.sub(file_name, 1, 2) == '1' or string.sub(file_name, 1, 2) ==\
    \ '2' or string.sub(file_name, 1, 2) == '3' or string.sub(file_name, 1, 2) ==\
    \ '4' or string.sub(file_name, 1, 2) == '5' or string.sub(file_name, 1, 2) ==\
    \ '6' or string.sub(file_name, 1, 2) == '7' or string.sub(file_name, 1, 2) ==\
    \ '8' or string.sub(file_name, 1, 2) == '9' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, string.len(file_name) - 1, 1) == '.' then\n    \
    \    return 'No'\n    end\n    if string.sub(file_name, 1, 1) ~= '.' then\n  \
    \      return 'No'\n    end\n    if string.sub(file_name, 2, 1) ~= '.' then\n\
    \        return 'No'\n    end\n    if string.sub(file_name, 3, 1) ~= '.' then\n\
    \        return 'No'\n    end\n    if string.sub(file_name, 4, 1) ~= '.' then\n\
    \        return 'No'\n    end\n    if string.sub(file_name, 5, 1) ~= '.' then\n\
    \        return 'No'\n    end\n    if string.sub(file_name, 6, 1) ~= '.' then\n\
    \        return 'No'\n    end\n    if string.sub(file_name, 7, 1) ~= '.' then\n\
    \        return 'No'\n    end\n    if string.sub(file_name, 8, 1) ~= '.' then\n\
    \        return 'No'\n    end\n    if string.sub(file_name, 9, 1) ~", "    if\
    \ #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('[0-9]+')\
    \ then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]') then\n\
    \        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*[.]')\
    \ then\n        return 'No'\n    end\n    if file_name:match('[.](txt|exe|dll)$')\
    \ then\n        return 'Yes'\n    end\n    return 'No'\nend", "    if #file_name\
    \ > 3 then\n        return 'No'\n    end\n    if file_name ~= '.' then\n     \
    \   return 'No'\n    end\n    local dot_index = string.find(file_name, '.')\n\
    \    if dot_index == nil then\n        return 'No'\n    end\n    local file_name_before_dot\
    \ = string.sub(file_name, 1, dot_index)\n    if not file_name_before_dot then\n\
    \        return 'No'\n    end\n    local file_name_after_dot = string.sub(file_name,\
    \ dot_index + 1)\n    if file_name_after_dot ~= 'txt' and file_name_after_dot\
    \ ~= 'exe' and file_name_after_dot ~= 'dll' then\n        return 'No'\n    end\n\
    \    return 'Yes'\nend", "    if #file_name < 3 then\n        return 'No'\n  \
    \  end\n    if file_name ~= file_name:match('[0-9]+') then\n        return 'No'\n\
    \    end\n    if file_name:match('^[a-zA-Z]') then\n        return 'No'\n    end\n\
    \    if file_name:match('^[a-zA-Z][a-zA-Z0-9.]*$') then\n        return 'Yes'\n\
    \    end\n    return 'No'\nend", "    if #file_name > 3 then\n        return 'No'\n\
    \    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name\
    \ > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n       \
    \ return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n\
    \    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name >\
    \ 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return\
    \ 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n  \
    \  if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3\
    \ then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return\
    \ 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n  \
    \  if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3\
    \ then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return\
    \ 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n  \
    \  if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3\
    \ then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return\
    \ 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n  \
    \  if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3\
    \ then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return\
    \ 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n  \
    \  if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3\
    \ then\n        return 'No'\n    end", "    local valid = true\n    local dot_index\
    \ = string.find(file_name, '.')\n    local dot_index_2 = string.find(file_name,\
    \ '..')\n    local dot_index_3 = string.find(file_name, '...')\n    local dot_index_4\
    \ = string.find(file_name, '....')\n    local dot_index_5 = string.find(file_name,\
    \ '....')\n    local dot_index_6 = string.find(file_name, '.....')\n    local\
    \ dot_index_7 = string.find(file_name, '.....')\n    local dot_index_8 = string.find(file_name,\
    \ '......')\n    local dot_index_9 = string.find(file_name, '......')\n    local\
    \ dot_index_10 = string.find(file_name, '.......')\n    local dot_index_11 = string.find(file_name,\
    \ '.......')\n    local dot_index_12 = string.find(file_name, '........')\n  \
    \  local dot_index_13 = string.find(file_name, '........')\n    local dot_index_14\
    \ = string.find(file_name, '.........')\n    local dot_index_15 = string.find(file_name,\
    \ '.........')\n    local dot_index_16 = string.find(file_name, '..........')\n\
    \    local dot_index_17 = string.find(file_name, '..........')\n    local dot_index_18\
    \ = string.find(file_name, '...........')\n    local dot_index_19 = string.find(file_name,\
    \ '...........')\n    local dot_index_20 = string.find(file_name, '............')\n\
    \    local dot_index_21 = string.find(file_name, '............')\n    local dot_index_22\
    \ = string.find(file_name, '.............')\n    local dot_index_23 = string.find(file_name,\
    \ '.............')\n    local dot_index_24 = string.find(file_name, '..............')\n\
    \    local dot_index_25 = string.find", "    if string.len(file_name) > 3 then\n\
    \        return 'No'\n    end\n    if string.len(file_name) < 3 then\n       \
    \ return 'No'\n    end\n    if string.sub(file_name, 1, 2) == '0' or string.sub(file_name,\
    \ 1, 2) == '1' or string.sub(file_name, 1, 2) == '2' or string.sub(file_name,\
    \ 1, 2) == '3' or string.sub(file_name, 1, 2) == '4' or string.sub(file_name,\
    \ 1, 2) == '5' or string.sub(file_name, 1, 2) == '6' or string.sub(file_name,\
    \ 1, 2) == '7' or string.sub(file_name, 1, 2) == '8' or string.sub(file_name,\
    \ 1, 2) == '9' then\n        return 'No'\n    end\n    if string.sub(file_name,\
    \ string.len(file_name) - 2, string.len(file_name)) == 'txt' or string.sub(file_name,\
    \ string.len(file_name) - 2, string.len(file_name)) == 'exe' or string.sub(file_name,\
    \ string.len(file_name) - 2, string.len(file_name)) == 'dll' then\n        return\
    \ 'Yes'\n    end\n    return 'No'\nend", "    local valid = true\n    local dot_index\
    \ = string.find(file_name, '.')\n    if dot_index == nil then\n        valid =\
    \ false\n    else\n        local before_dot = string.sub(file_name, 1, dot_index)\n\
    \        local after_dot = string.sub(file_name, dot_index + 1)\n        if string.len(before_dot)\
    \ > 3 then\n            valid = false\n        elseif string.len(before_dot) ==\
    \ 0 then\n            valid = false\n        elseif string.sub(before_dot, 1,\
    \ 1) ~= 'a' .. 'z' and string.sub(before_dot, 1, 1) ~= 'A' .. 'Z' then\n     \
    \       valid = false\n        elseif string.len(after_dot) > 3 then\n       \
    \     valid = false\n        elseif string.len(after_dot) == 0 then\n        \
    \    valid = false\n        elseif string.sub(after_dot, 1, 1) ~= 'a' .. 'z' and\
    \ string.sub(after_dot, 1, 1) ~= 'A' .. 'Z' then\n            valid = false\n\
    \        elseif string.sub(after_dot, 1, 1) ~= '0' .. '9' then\n            valid\
    \ = false\n        elseif string.sub(after_dot, 1, 1) == '.' then\n          \
    \  valid = false\n        elseif string.sub(after_dot, 1, 1) == '_' then\n   \
    \         valid = false\n        elseif string.sub(after_dot, 1, 1) == '-' then\n\
    \            valid = false\n        elseif string.sub(after_dot, 1, 1) == '.'\
    \ then\n            valid = false\n        elseif string.sub(after_dot, 1, 1)\
    \ == '.' then\n            valid = false\n        elseif string.sub(after_dot,\
    \ 1, 1) == '.' then\n            valid = false\n        elseif string.sub(after_dot,\
    \ 1, 1) == '.' then\n            valid = false\n        elseif string.sub(after_dot,\
    \ 1, 1) == '.' then\n            valid = false\n        elseif string.sub(after_dot,\
    \ 1", "    if string.len(file_name) > 3 and string.sub(file_name, 1, 3) ~= \"\
    0-9\" then\n        return \"No\"\n    end\n    if string.count(file_name, \"\
    .\") != 1 then\n        return \"No\"\n    end\n    if string.sub(file_name, string.index(file_name,\
    \ \".\") + 1) ~= \"txt\" and\n        string.sub(file_name, string.index(file_name,\
    \ \".\") + 1) ~= \"exe\" and\n        string.sub(file_name, string.index(file_name,\
    \ \".\") + 1) ~= \"dll\" then\n        return \"No\"\n    end\n    return \"Yes\"\
    \nend", "    local valid = true\n    local dot_index = string.find(file_name,\
    \ '.')\n    local dot_substring = string.sub(file_name, 1, dot_index)\n    local\
    \ dot_substring_length = #dot_substring\n    local dot_substring_upper = string.upper(dot_substring)\n\
    \    local dot_substring_lower = string.lower(dot_substring)\n    local dot_substring_upper_length\
    \ = #dot_substring_upper\n    local dot_substring_lower_length = #dot_substring_lower\n\
    \    local is_valid_substring = (dot_substring_upper_length == 1 and dot_substring_upper\
    \ == 'T' and dot_substring_lower_length == 1 and dot_substring_lower == 'X') or\
    \ (dot_substring_upper_length == 1 and dot_substring_upper == 'E' and dot_substring_lower_length\
    \ == 1 and dot_substring_lower == 'X') or (dot_substring_upper_length == 1 and\
    \ dot_substring_upper == 'D' and dot_substring_lower_length == 1 and dot_substring_lower\
    \ == 'L')\n    local is_valid_substring_length = #is_valid_substring\n    if dot_index\
    \ == nil or dot_substring == nil or dot_substring_length == 0 or dot_substring_upper_length\
    \ == 0 or dot_substring_lower_length == 0 or is_valid_substring_length == 0 or\
    \ not is_valid_substring then\n        valid = false\n    end\n    return valid\n\
    end", "    local valid = true\n    local dot_index = string.find(file_name, '.')\n\
    \    local dot_substring = string.sub(file_name, 1, dot_index)\n    local dot_substring_length\
    \ = #dot_substring\n    local dot_substring_upper = string.upper(dot_substring)\n\
    \    local dot_substring_lower = string.lower(dot_substring)\n    local dot_substring_upper_length\
    \ = #dot_substring_upper\n    local dot_substring_lower_length = #dot_substring_lower\n\
    \    local dot_substring_upper_start = string.find(dot_substring_upper, 'A')\n\
    \    local dot_substring_lower_start = string.find(dot_substring_lower, 'a')\n\
    \    local dot_substring_upper_end = string.find(dot_substring_upper, 'Z')\n \
    \   local dot_substring_lower_end = string.find(dot_substring_lower, 'z')\n  \
    \  local dot_substring_upper_start_length = #dot_substring_upper_start\n    local\
    \ dot_substring_lower_start_length = #dot_substring_lower_start\n    local dot_substring_upper_end_length\
    \ = #dot_substring_upper_end\n    local dot_substring_lower_end_length = #dot_substring_lower_end\n\
    \    if dot_substring_length > 3 or dot_substring_upper_length != dot_substring_lower_length\
    \ or dot_substring_upper_start > dot_substring_lower_start or dot_substring_upper_end\
    \ > dot_substring_lower_end or dot_substring_upper_start_length != dot_substring_lower_start_length\
    \ or dot_substring_upper_end_length != dot_substring_lower_end_length then\n \
    \       valid = false\n    end\n    return valid\nend", "    local valid = true\n\
    \    local dot_index = string.find(file_name, '.')\n    local dot_index_2 = string.find(file_name,\
    \ '..')\n    local dot_index_3 = string.find(file_name, '...')\n    local dot_index_4\
    \ = string.find(file_name, '....')\n    local dot_index_5 = string.find(file_name,\
    \ '.....')\n    local dot_index_6 = string.find(file_name, '......')\n    local\
    \ dot_index_7 = string.find(file_name, '........')\n    local dot_index_8 = string.find(file_name,\
    \ '..........')\n    local dot_index_9 = string.find(file_name, '...........')\n\
    \    local dot_index_10 = string.find(file_name, '............')\n    local dot_index_11\
    \ = string.find(file_name, '..............')\n    local dot_index_12 = string.find(file_name,\
    \ '.............')\n    local dot_index_13 = string.find(file_name, '..............')\n\
    \    local dot_index_14 = string.find(file_name, '...............')\n    local\
    \ dot_index_15 = string.find(file_name, '................')\n    local dot_index_16\
    \ = string.find(file_name, '.................')\n    local dot_index_17 = string.find(file_name,\
    \ '..................')\n    local dot_index_18 = string.find(file_name, '...................')\n\
    \    local dot_index_19 = string.find(file_name, '....................')\n   \
    \ local dot_index_20 = string.find(file_name, '.....................')\n    local\
    \ dot_index_21 = string.find(file_name, '......................')\n    local dot_index_22\
    \ = string.find(file_name, '.......................')\n    local dot_index_23\
    \ = string.find(file_name, '........................')\n    local dot_index_24\
    \ =", "    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name\
    \ ~= 1 then\n        return 'No'\n    end\n    if file_name:sub(1,1) ~= 'a' ..\
    \ 'z' and file_name:sub(1,1) ~= 'A' .. 'Z' then\n        return 'No'\n    end\n\
    \    if file_name:sub(2,2) ~= '0' .. '9' then\n        return 'No'\n    end\n\
    \    if file_name:sub(3,3) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(4,4)\
    \ ~= 'txt' and file_name:sub(4,4) ~= 'exe' and file_name:sub(4,4) ~= 'dll' then\n\
    \        return 'No'\n    end\n    return 'Yes'\nend", "    if #file_name < 3\
    \ then\n        return 'No'\n    end\n    if file_name ~= string.gsub(file_name,\
    \ '^[0-9]*.', '') then\n        return 'No'\n    end\n    if not string.gsub(file_name,\
    \ '^[a-zA-Z]*.', '') then\n        return 'No'\n    end\n    if string.gsub(file_name,\
    \ '\\.txt$', '') then\n        return 'Yes'\n    end\n    if string.gsub(file_name,\
    \ '\\.exe$', '') then\n        return 'Yes'\n    end\n    if string.gsub(file_name,\
    \ '\\.dll$', '') then\n        return 'Yes'\n    end\n    return 'No'\nend", " \
    \   if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name <\
    \ 2 then\n        return 'No'\n    end\n    if file_name:sub(1,1) ~= '.' then\n\
    \        return 'No'\n    end\n    if file_name:sub(2,2) ~= '.' then\n       \
    \ return 'No'\n    end\n    if file_name:sub(3,3) ~= '.' then\n        return\
    \ 'No'\n    end\n    if file_name:sub(4,4) ~= '.' then\n        return 'No'\n\
    \    end\n    if file_name:sub(5,5) ~= '.' then\n        return 'No'\n    end\n\
    \    if file_name:sub(6,6) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(7,7)\
    \ ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(8,8) ~= '.'\
    \ then\n        return 'No'\n    end\n    if file_name:sub(9,9) ~= '.' then\n\
    \        return 'No'\n    end\n    if file_name:sub(10,10) ~= '.' then\n     \
    \   return 'No'\n    end\n    if file_name:sub(11,11) ~= '.' then\n        return\
    \ 'No'\n    end\n    if file_name:sub(12,12) ~= '.' then\n        return 'No'\n\
    \    end\n    if file_name:sub(13,13) ~= '.' then\n        return 'No'\n    end\n\
    \    if file_name:sub(14,14) ~= '.' then\n        return 'No'\n    end\n    if\
    \ file_name:sub(15,15) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(16,16)\
    \ ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(17,17) ~= '.'\
    \ then\n        return 'No'\n    end\n    if file_name:sub(18,18) ~= '", "   \
    \ if #file_name > 3 then\n        return 'No'\n    end\n    if file_name ~= '.'\
    \ then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 1) ~= '.'\
    \ then\n        return 'No'\n    end\n    if string.sub(file_name, 2, 2) ~= '.'\
    \ then\n        return 'No'\n    end\n    if string.sub(file_name, 3, 3) ~= '.'\
    \ then\n        return 'No'\n    end\n    if string.sub(file_name, 4, 4) ~= '.'\
    \ then\n        return 'No'\n    end\n    if string.sub(file_name, 5, 5) ~= '.'\
    \ then\n        return 'No'\n    end\n    if string.sub(file_name, 6, 6) ~= '.'\
    \ then\n        return 'No'\n    end\n    if string.sub(file_name, 7, 7) ~= '.'\
    \ then\n        return 'No'\n    end\n    if string.sub(file_name, 8, 8) ~= '.'\
    \ then\n        return 'No'\n    end\n    if string.sub(file_name, 9, 9) ~= '.'\
    \ then\n        return 'No'\n    end\n    return 'Yes'\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

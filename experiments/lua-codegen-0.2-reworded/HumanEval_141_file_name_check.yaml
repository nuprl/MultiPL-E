name: HumanEval_141_file_name_check
language: lua
prompt: "-- Create a function which takes a string representing a file's name, and\
  \ returns\n-- 'Yes' if the the file's name is valid, and returns 'No' otherwise.\n\
  -- A file's name is considered to be valid if and only if all the following conditions\
  \ \n-- are met:\n-- - There should not be more than three digits ('0'-'9') in the\
  \ file's name.\n-- - The file's name contains exactly one dot '.'\n-- - The substring\
  \ before the dot should not be empty, and it starts with a letter from \n-- the\
  \ latin alphapet ('a'-'z' and 'A'-'Z').\n-- - The substring after the dot should\
  \ be one of these: ['txt', 'exe', 'dll']\n-- Examples:\n-- >>> file_name_check(\"\
  example.txt\")\n-- 'Yes'\n-- >>> file_name_check(\"1example.dll\")\n-- 'No'\nlocal\
  \ function file_name_check(file_name)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = file_name_check\n\
  \    lu.assertEquals(candidate('example.txt'), 'Yes')\n    lu.assertEquals(candidate('1example.dll'),\
  \ 'No')\n    lu.assertEquals(candidate('s1sdf3.asd'), 'No')\n    lu.assertEquals(candidate('K.dll'),\
  \ 'Yes')\n    lu.assertEquals(candidate('MY16FILE3.exe'), 'Yes')\n    lu.assertEquals(candidate('His12FILE94.exe'),\
  \ 'No')\n    lu.assertEquals(candidate('_Y.txt'), 'No')\n    lu.assertEquals(candidate('?aREYA.exe'),\
  \ 'No')\n    lu.assertEquals(candidate('/this_is_valid.dll'), 'No')\n    lu.assertEquals(candidate('this_is_valid.wow'),\
  \ 'No')\n    lu.assertEquals(candidate('this_is_valid.txt'), 'Yes')\n    lu.assertEquals(candidate('this_is_valid.txtexe'),\
  \ 'No')\n    lu.assertEquals(candidate('#this2_i4s_5valid.ten'), 'No')\n    lu.assertEquals(candidate('@this1_is6_valid.exe'),\
  \ 'No')\n    lu.assertEquals(candidate('this_is_12valid.6exe4.txt'), 'No')\n   \
  \ lu.assertEquals(candidate('all.exe.txt'), 'No')\n    lu.assertEquals(candidate('I563_No.exe'),\
  \ 'Yes')\n    lu.assertEquals(candidate('Is3youfault.txt'), 'Yes')\n    lu.assertEquals(candidate('no_one#knows.dll'),\
  \ 'Yes')\n    lu.assertEquals(candidate('1I563_Yes3.exe'), 'No')\n    lu.assertEquals(candidate('I563_Yes3.txtt'),\
  \ 'No')\n    lu.assertEquals(candidate('final..txt'), 'No')\n    lu.assertEquals(candidate('final132'),\
  \ 'No')\n    lu.assertEquals(candidate('_f4indsartal132.'), 'No')\n    lu.assertEquals(candidate('.txt'),\
  \ 'No')\n    lu.assertEquals(candidate('s.'), 'No')\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name\
    \ ~= file_name:match('^[0-9]{3}[.]') then\n        return 'No'\n    end\n    local\
    \ dot_index = string.find(file_name, '.')\n    if dot_index == nil then\n    \
    \    return 'No'\n    end\n    local dot_substring = string.sub(file_name, 1,\
    \ dot_index)\n    if not(dot_substring) then\n        return 'No'\n    end\n \
    \   local dot_substring_upper = string.upper(dot_substring)\n    if not(dot_substring_upper)\
    \ then\n        return 'No'\n    end\n    if not(dot_substring_upper:match('[A-Z][A-Z][A-Z]$'))\
    \ then\n        return 'No'\n    end\n    local extension = string.sub(file_name,\
    \ dot_index + 1, #file_name)\n    if not(extension) then\n        return 'No'\n\
    \    end\n    if not(extension:match('^[tx][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x",
  "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= string.gsub(file_name,\
    \ '^[0-9]+', '') then\n        return 'No'\n    end\n    if not string.sub(file_name,\
    \ 1, 1) ~= string.gsub(file_name, '^[a-zA-Z]', '') then\n        return 'No'\n\
    \    end\n    if string.sub(file_name, -3, -1) ~= 'txt' and string.sub(file_name,\
    \ -3, -1) ~= 'exe' and string.sub(file_name, -3, -1) ~= 'dll' then\n        return\
    \ 'No'\n    end\n    return 'Yes'\nend", "    if string.len(file_name) > 3 then\n\
    \        return 'No'\n    end\n    if string.len(file_name) < 3 then\n       \
    \ return 'No'\n    end\n    if string.sub(file_name, 1, 2) == '0' then\n     \
    \   return 'No'\n    end\n    if string.sub(file_name, 2, 3) == '.' then\n   \
    \     return 'No'\n    end\n    if string.sub(file_name, string.len(file_name)\
    \ - 2, string.len(file_name)) == '.' then\n        return 'No'\n    end\n    if\
    \ string.sub(file_name, 1, 1) ~= '.' then\n        return 'No'\n    end\n    if\
    \ string.sub(file_name, string.len(file_name) - 3, string.len(file_name)) ~= '.'\
    \ then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 1) ~= '.'\
    \ then\n        return 'No'\n    end\n    if string.sub(file_name, string.len(file_name)\
    \ - 3, string.len(file_name)) ~= '.' then\n        return 'No'\n    end\n    if\
    \ string.sub(file_name, 1, 1) ~= '.' then\n        return 'No'\n    end\n    if\
    \ string.sub(file_name, string.len(file_name) - 3, string.len(file_name)) ~= '.'\
    \ then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 1) ~= '.'\
    \ then\n        return 'No'\n    end\n    if string.sub(file_name, string.len(file_name)\
    \ - 3, string.len(file_name)) ~= '.' then\n        return 'No'\n    end\n    if\
    \ string.sub(file_name, 1, 1) ~= '.' then\n        return 'No'\n    end\n    if\
    \ string.sub(file_name, string.len(file_name) - 3, string.len(file_name)) ~= '.'\
    \ then\n        return 'No'\n    end\n    ", "    if #file_name < 3 then\n   \
    \     return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}[.]')\
    \ then\n        return 'No'\n    end\n    local dot_index = string.find(file_name,\
    \ '.')\n    if dot_index == nil then\n        return 'No'\n    end\n    local\
    \ before_dot = string.sub(file_name, 1, dot_index)\n    if not string.sub(before_dot,\
    \ 1, 1) ~= '[' then\n        return 'No'\n    end\n    local after_dot = string.sub(file_name,\
    \ dot_index + 1)\n    if not string.sub(after_dot, 1, 1) ~= '[' then\n       \
    \ return 'No'\n    end\n    if after_dot ~= 'txt' and after_dot ~= 'exe' and after_dot\
    \ ~= 'dll' then\n        return 'No'\n    end\n    return 'Yes'\nend", "    if\
    \ string.len(file_name) > 3 then\n        return 'No'\n    end\n    if string.len(file_name)\
    \ < 3 then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 2) ==\
    \ '0' or string.sub(file_name, 1, 2) == '1' or string.sub(file_name, 1, 2) ==\
    \ '2' or string.sub(file_name, 1, 2) == '3' or string.sub(file_name, 1, 2) ==\
    \ '4' or string.sub(file_name, 1, 2) == '5' or string.sub(file_name, 1, 2) ==\
    \ '6' or string.sub(file_name, 1, 2) == '7' or string.sub(file_name, 1, 2) ==\
    \ '8' or string.sub(file_name, 1, 2) == '9' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, string.len(file_name) - 1, 1) == '.' then\n    \
    \    return 'No'\n    end\n    if string.sub(file_name, 1, 1) ~= '.' then\n  \
    \      return 'No'\n    end\n    if string.sub(file_name, 2, 1) ~= '.' then\n\
    \        return 'No'\n    end\n    if string.sub(file_name, 3, 1) ~= '.' then\n\
    \        return 'No'\n    end\n    if string.sub(file_name, 4, 1) ~= '.' then\n\
    \        return 'No'\n    end\n    if string.sub(file_name, 5, 1) ~= '.' then\n\
    \        return 'No'\n    end\n    if string.sub(file_name, 6, 1) ~= '.' then\n\
    \        return 'No'\n    end\n    if string.sub(file_name, 7, 1) ~= '.' then\n\
    \        return 'No'\n    end\n    if string.sub(file_name, 8, 1) ~= '.' then\n\
    \        return 'No'\n    end\n    if string.sub(file_name, 9, 1) ~", "    if\
    \ #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('[0-9]+')\
    \ then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]') then\n\
    \        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*[.]')\
    \ then\n        return 'No'\n    end\n    if file_name:match('[.](txt|exe|dll)$')\
    \ then\n        return 'Yes'\n    end\n    return 'No'\nend", "    if #file_name\
    \ > 3 then\n        return 'No'\n    end\n    if file_name ~= '.' then\n     \
    \   return 'No'\n    end\n    local dot_index = string.find(file_name, '.')\n\
    \    if dot_index == nil then\n        return 'No'\n    end\n    local file_name_before_dot\
    \ = string.sub(file_name, 1, dot_index)\n    if not file_name_before_dot then\n\
    \        return 'No'\n    end\n    local file_name_after_dot = string.sub(file_name,\
    \ dot_index + 1)\n    if file_name_after_dot ~= 'txt' and file_name_after_dot\
    \ ~= 'exe' and file_name_after_dot ~= 'dll' then\n        return 'No'\n    end\n\
    \    return 'Yes'\nend", "    if #file_name < 3 then\n        return 'No'\n  \
    \  end\n    if file_name ~= file_name:match('[0-9]+') then\n        return 'No'\n\
    \    end\n    if file_name:match('^[a-zA-Z]') then\n        return 'No'\n    end\n\
    \    if file_name:match('^[a-zA-Z][a-zA-Z0-9.]*$') then\n        return 'Yes'\n\
    \    end\n    return 'No'\nend", "    if #file_name > 3 then\n        return 'No'\n\
    \    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name\
    \ > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n       \
    \ return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n\
    \    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name >\
    \ 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return\
    \ 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n  \
    \  if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3\
    \ then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return\
    \ 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n  \
    \  if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3\
    \ then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return\
    \ 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n  \
    \  if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3\
    \ then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return\
    \ 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n  \
    \  if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3\
    \ then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return\
    \ 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n  \
    \  if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3\
    \ then\n        return 'No'\n    end", "    local valid = true\n    local dot_index\
    \ = string.find(file_name, '.')\n    local dot_index_2 = string.find(file_name,\
    \ '..')\n    local dot_index_3 = string.find(file_name, '...')\n    local dot_index_4\
    \ = string.find(file_name, '....')\n    local dot_index_5 = string.find(file_name,\
    \ '....')\n    local dot_index_6 = string.find(file_name, '.....')\n    local\
    \ dot_index_7 = string.find(file_name, '.....')\n    local dot_index_8 = string.find(file_name,\
    \ '......')\n    local dot_index_9 = string.find(file_name, '......')\n    local\
    \ dot_index_10 = string.find(file_name, '.......')\n    local dot_index_11 = string.find(file_name,\
    \ '.......')\n    local dot_index_12 = string.find(file_name, '........')\n  \
    \  local dot_index_13 = string.find(file_name, '........')\n    local dot_index_14\
    \ = string.find(file_name, '.........')\n    local dot_index_15 = string.find(file_name,\
    \ '.........')\n    local dot_index_16 = string.find(file_name, '..........')\n\
    \    local dot_index_17 = string.find(file_name, '..........')\n    local dot_index_18\
    \ = string.find(file_name, '...........')\n    local dot_index_19 = string.find(file_name,\
    \ '...........')\n    local dot_index_20 = string.find(file_name, '............')\n\
    \    local dot_index_21 = string.find(file_name, '............')\n    local dot_index_22\
    \ = string.find(file_name, '.............')\n    local dot_index_23 = string.find(file_name,\
    \ '.............')\n    local dot_index_24 = string.find(file_name, '..............')\n\
    \    local dot_index_25 = string.find", "    if string.len(file_name) > 3 then\n\
    \        return 'No'\n    end\n    if string.len(file_name) < 3 then\n       \
    \ return 'No'\n    end\n    if string.sub(file_name, 1, 2) == '0' or string.sub(file_name,\
    \ 1, 2) == '1' or string.sub(file_name, 1, 2) == '2' or string.sub(file_name,\
    \ 1, 2) == '3' or string.sub(file_name, 1, 2) == '4' or string.sub(file_name,\
    \ 1, 2) == '5' or string.sub(file_name, 1, 2) == '6' or string.sub(file_name,\
    \ 1, 2) == '7' or string.sub(file_name, 1, 2) == '8' or string.sub(file_name,\
    \ 1, 2) == '9' then\n        return 'No'\n    end\n    if string.sub(file_name,\
    \ string.len(file_name) - 2, string.len(file_name)) == 'txt' or string.sub(file_name,\
    \ string.len(file_name) - 2, string.len(file_name)) == 'exe' or string.sub(file_name,\
    \ string.len(file_name) - 2, string.len(file_name)) == 'dll' then\n        return\
    \ 'Yes'\n    end\n    return 'No'\nend", "    local valid = true\n    local dot_index\
    \ = string.find(file_name, '.')\n    if dot_index == nil then\n        valid =\
    \ false\n    else\n        local before_dot = string.sub(file_name, 1, dot_index)\n\
    \        local after_dot = string.sub(file_name, dot_index + 1)\n        if string.len(before_dot)\
    \ > 3 then\n            valid = false\n        elseif string.len(before_dot) ==\
    \ 0 then\n            valid = false\n        elseif string.sub(before_dot, 1,\
    \ 1) ~= 'a' .. 'z' and string.sub(before_dot, 1, 1) ~= 'A' .. 'Z' then\n     \
    \       valid = false\n        elseif string.len(after_dot) > 3 then\n       \
    \     valid = false\n        elseif string.len(after_dot) == 0 then\n        \
    \    valid = false\n        elseif string.sub(after_dot, 1, 1) ~= 'a' .. 'z' and\
    \ string.sub(after_dot, 1, 1) ~= 'A' .. 'Z' then\n            valid = false\n\
    \        elseif string.sub(after_dot, 1, 1) ~= '0' .. '9' then\n            valid\
    \ = false\n        elseif string.sub(after_dot, 1, 1) == '.' then\n          \
    \  valid = false\n        elseif string.sub(after_dot, 1, 1) == '_' then\n   \
    \         valid = false\n        elseif string.sub(after_dot, 1, 1) == '-' then\n\
    \            valid = false\n        elseif string.sub(after_dot, 1, 1) == '.'\
    \ then\n            valid = false\n        elseif string.sub(after_dot, 1, 1)\
    \ == '.' then\n            valid = false\n        elseif string.sub(after_dot,\
    \ 1, 1) == '.' then\n            valid = false\n        elseif string.sub(after_dot,\
    \ 1, 1) == '.' then\n            valid = false\n        elseif string.sub(after_dot,\
    \ 1, 1) == '.' then\n            valid = false\n        elseif string.sub(after_dot,\
    \ 1", "    if string.len(file_name) > 3 and string.sub(file_name, 1, 3) ~= \"\
    0-9\" then\n        return \"No\"\n    end\n    if string.count(file_name, \"\
    .\") != 1 then\n        return \"No\"\n    end\n    if string.sub(file_name, string.index(file_name,\
    \ \".\") + 1) ~= \"txt\" and\n        string.sub(file_name, string.index(file_name,\
    \ \".\") + 1) ~= \"exe\" and\n        string.sub(file_name, string.index(file_name,\
    \ \".\") + 1) ~= \"dll\" then\n        return \"No\"\n    end\n    return \"Yes\"\
    \nend", "    local valid = true\n    local dot_index = string.find(file_name,\
    \ '.')\n    local dot_substring = string.sub(file_name, 1, dot_index)\n    local\
    \ dot_substring_length = #dot_substring\n    local dot_substring_upper = string.upper(dot_substring)\n\
    \    local dot_substring_lower = string.lower(dot_substring)\n    local dot_substring_upper_length\
    \ = #dot_substring_upper\n    local dot_substring_lower_length = #dot_substring_lower\n\
    \    local is_valid_substring = (dot_substring_upper_length == 1 and dot_substring_upper\
    \ == 'T' and dot_substring_lower_length == 1 and dot_substring_lower == 'X') or\
    \ (dot_substring_upper_length == 1 and dot_substring_upper == 'E' and dot_substring_lower_length\
    \ == 1 and dot_substring_lower == 'X') or (dot_substring_upper_length == 1 and\
    \ dot_substring_upper == 'D' and dot_substring_lower_length == 1 and dot_substring_lower\
    \ == 'L')\n    local is_valid_substring_length = #is_valid_substring\n    if dot_index\
    \ == nil or dot_substring == nil or dot_substring_length == 0 or dot_substring_upper_length\
    \ == 0 or dot_substring_lower_length == 0 or is_valid_substring_length == 0 or\
    \ not is_valid_substring then\n        valid = false\n    end\n    return valid\n\
    end", "    local valid = true\n    local dot_index = string.find(file_name, '.')\n\
    \    local dot_substring = string.sub(file_name, 1, dot_index)\n    local dot_substring_length\
    \ = #dot_substring\n    local dot_substring_upper = string.upper(dot_substring)\n\
    \    local dot_substring_lower = string.lower(dot_substring)\n    local dot_substring_upper_length\
    \ = #dot_substring_upper\n    local dot_substring_lower_length = #dot_substring_lower\n\
    \    local dot_substring_upper_start = string.find(dot_substring_upper, 'A')\n\
    \    local dot_substring_lower_start = string.find(dot_substring_lower, 'a')\n\
    \    local dot_substring_upper_end = string.find(dot_substring_upper, 'Z')\n \
    \   local dot_substring_lower_end = string.find(dot_substring_lower, 'z')\n  \
    \  local dot_substring_upper_start_length = #dot_substring_upper_start\n    local\
    \ dot_substring_lower_start_length = #dot_substring_lower_start\n    local dot_substring_upper_end_length\
    \ = #dot_substring_upper_end\n    local dot_substring_lower_end_length = #dot_substring_lower_end\n\
    \    if dot_substring_length > 3 or dot_substring_upper_length != dot_substring_lower_length\
    \ or dot_substring_upper_start > dot_substring_lower_start or dot_substring_upper_end\
    \ > dot_substring_lower_end or dot_substring_upper_start_length != dot_substring_lower_start_length\
    \ or dot_substring_upper_end_length != dot_substring_lower_end_length then\n \
    \       valid = false\n    end\n    return valid\nend", "    local valid = true\n\
    \    local dot_index = string.find(file_name, '.')\n    local dot_index_2 = string.find(file_name,\
    \ '..')\n    local dot_index_3 = string.find(file_name, '...')\n    local dot_index_4\
    \ = string.find(file_name, '....')\n    local dot_index_5 = string.find(file_name,\
    \ '.....')\n    local dot_index_6 = string.find(file_name, '......')\n    local\
    \ dot_index_7 = string.find(file_name, '........')\n    local dot_index_8 = string.find(file_name,\
    \ '..........')\n    local dot_index_9 = string.find(file_name, '...........')\n\
    \    local dot_index_10 = string.find(file_name, '............')\n    local dot_index_11\
    \ = string.find(file_name, '..............')\n    local dot_index_12 = string.find(file_name,\
    \ '.............')\n    local dot_index_13 = string.find(file_name, '..............')\n\
    \    local dot_index_14 = string.find(file_name, '...............')\n    local\
    \ dot_index_15 = string.find(file_name, '................')\n    local dot_index_16\
    \ = string.find(file_name, '.................')\n    local dot_index_17 = string.find(file_name,\
    \ '..................')\n    local dot_index_18 = string.find(file_name, '...................')\n\
    \    local dot_index_19 = string.find(file_name, '....................')\n   \
    \ local dot_index_20 = string.find(file_name, '.....................')\n    local\
    \ dot_index_21 = string.find(file_name, '......................')\n    local dot_index_22\
    \ = string.find(file_name, '.......................')\n    local dot_index_23\
    \ = string.find(file_name, '........................')\n    local dot_index_24\
    \ =", "    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name\
    \ ~= 1 then\n        return 'No'\n    end\n    if file_name:sub(1,1) ~= 'a' ..\
    \ 'z' and file_name:sub(1,1) ~= 'A' .. 'Z' then\n        return 'No'\n    end\n\
    \    if file_name:sub(2,2) ~= '0' .. '9' then\n        return 'No'\n    end\n\
    \    if file_name:sub(3,3) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(4,4)\
    \ ~= 'txt' and file_name:sub(4,4) ~= 'exe' and file_name:sub(4,4) ~= 'dll' then\n\
    \        return 'No'\n    end\n    return 'Yes'\nend", "    if #file_name < 3\
    \ then\n        return 'No'\n    end\n    if file_name ~= string.gsub(file_name,\
    \ '^[0-9]*.', '') then\n        return 'No'\n    end\n    if not string.gsub(file_name,\
    \ '^[a-zA-Z]*.', '') then\n        return 'No'\n    end\n    if string.gsub(file_name,\
    \ '\\.txt$', '') then\n        return 'Yes'\n    end\n    if string.gsub(file_name,\
    \ '\\.exe$', '') then\n        return 'Yes'\n    end\n    if string.gsub(file_name,\
    \ '\\.dll$', '') then\n        return 'Yes'\n    end\n    return 'No'\nend", " \
    \   if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name <\
    \ 2 then\n        return 'No'\n    end\n    if file_name:sub(1,1) ~= '.' then\n\
    \        return 'No'\n    end\n    if file_name:sub(2,2) ~= '.' then\n       \
    \ return 'No'\n    end\n    if file_name:sub(3,3) ~= '.' then\n        return\
    \ 'No'\n    end\n    if file_name:sub(4,4) ~= '.' then\n        return 'No'\n\
    \    end\n    if file_name:sub(5,5) ~= '.' then\n        return 'No'\n    end\n\
    \    if file_name:sub(6,6) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(7,7)\
    \ ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(8,8) ~= '.'\
    \ then\n        return 'No'\n    end\n    if file_name:sub(9,9) ~= '.' then\n\
    \        return 'No'\n    end\n    if file_name:sub(10,10) ~= '.' then\n     \
    \   return 'No'\n    end\n    if file_name:sub(11,11) ~= '.' then\n        return\
    \ 'No'\n    end\n    if file_name:sub(12,12) ~= '.' then\n        return 'No'\n\
    \    end\n    if file_name:sub(13,13) ~= '.' then\n        return 'No'\n    end\n\
    \    if file_name:sub(14,14) ~= '.' then\n        return 'No'\n    end\n    if\
    \ file_name:sub(15,15) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(16,16)\
    \ ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(17,17) ~= '.'\
    \ then\n        return 'No'\n    end\n    if file_name:sub(18,18) ~= '", "   \
    \ if #file_name > 3 then\n        return 'No'\n    end\n    if file_name ~= '.'\
    \ then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 1) ~= '.'\
    \ then\n        return 'No'\n    end\n    if string.sub(file_name, 2, 2) ~= '.'\
    \ then\n        return 'No'\n    end\n    if string.sub(file_name, 3, 3) ~= '.'\
    \ then\n        return 'No'\n    end\n    if string.sub(file_name, 4, 4) ~= '.'\
    \ then\n        return 'No'\n    end\n    if string.sub(file_name, 5, 5) ~= '.'\
    \ then\n        return 'No'\n    end\n    if string.sub(file_name, 6, 6) ~= '.'\
    \ then\n        return 'No'\n    end\n    if string.sub(file_name, 7, 7) ~= '.'\
    \ then\n        return 'No'\n    end\n    if string.sub(file_name, 8, 8) ~= '.'\
    \ then\n        return 'No'\n    end\n    if string.sub(file_name, 9, 9) ~= '.'\
    \ then\n        return 'No'\n    end\n    return 'Yes'\nend", "    local valid\
    \ = true\n    local dot_index = string.find(file_name, '.')\n    local dot_substring\
    \ = string.sub(file_name, 1, dot_index)\n    local dot_substring_length = #dot_substring\n\
    \    local dot_substring_upper = string.upper(dot_substring)\n    local dot_substring_lower\
    \ = string.lower(dot_substring)\n    local dot_substring_lower_length = #dot_substring_lower\n\
    \    local dot_substring_upper_length = #dot_substring_upper\n    if dot_substring_length\
    \ > 3 then\n        valid = false\n    end\n    if dot_substring_lower_length\
    \ == 0 then\n        valid = false\n    end\n    if dot_substring_upper_length\
    \ == 0 then\n        valid = false\n    end\n    if string.sub(dot_substring,\
    \ 1, 1) ~= '.' then\n        valid = false\n    end\n    if string.sub(dot_substring,\
    \ dot_substring_length, 1) ~= 'txt' then\n        valid = false\n    end\n   \
    \ if string.sub(dot_substring, dot_substring_length, 1) ~= 'exe' then\n      \
    \  valid = false\n    end\n    if string.sub(dot_substring, dot_substring_length,\
    \ 1) ~= 'dll' then\n        valid = false\n    end\n    return valid\nend", " \
    \   if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~=\
    \ file_name:match('^[0-9]{3}\\\\.[a-zA-Z]{1}[a-zA-Z0-9]{1}\\\\.[a-zA-Z]{1}$')\
    \ then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}\\\
    \\.[a-zA-Z]{1}[a-zA-Z0-9]{1}\\\\.[a-zA-Z]{1}\\\\.[a-zA-Z]{1}$') then\n       \
    \ return 'No'\n    end\n    return 'Yes'\nend", "    if string.len(file_name)\
    \ > 3 then\n        return 'No'\n    end\n    if string.len(file_name) < 3 then\n\
    \        return 'No'\n    end\n    if string.sub(file_name, 1, 2) == '0' or string.sub(file_name,\
    \ 1, 2) == '1' or string.sub(file_name, 1, 2) == '2' or string.sub(file_name,\
    \ 1, 2) == '3' or string.sub(file_name, 1, 2) == '4' or string.sub(file_name,\
    \ 1, 2) == '5' or string.sub(file_name, 1, 2) == '6' or string.sub(file_name,\
    \ 1, 2) == '7' or string.sub(file_name, 1, 2) == '8' or string.sub(file_name,\
    \ 1, 2) == '9' then\n        return 'No'\n    end\n    if string.sub(file_name,\
    \ string.len(file_name) - 2, string.len(file_name)) == '.txt' then\n        return\
    \ 'Yes'\n    elseif string.sub(file_name, string.len(file_name) - 2, string.len(file_name))\
    \ == '.exe' then\n        return 'Yes'\n    elseif string.sub(file_name, string.len(file_name)\
    \ - 2, string.len(file_name)) == '.dll' then\n        return 'Yes'\n    else\n\
    \        return 'No'\n    end\nend", "    local valid = true\n    local dot_index\
    \ = string.find(file_name, '.')\n    local dot_substring = string.sub(file_name,\
    \ 1, dot_index)\n    local dot_substring_length = #dot_substring\n    local dot_substring_upper\
    \ = string.upper(dot_substring)\n    local dot_substring_lower = string.lower(dot_substring)\n\
    \    local dot_substring_upper_length = #dot_substring_upper\n    local dot_substring_lower_length\
    \ = #dot_substring_lower\n    local is_valid_substring = (dot_substring_length\
    \ == dot_substring_upper_length + dot_substring_lower_length) and (dot_substring_upper_length\
    \ > 0) and (dot_substring_lower_length > 0)\n    local is_valid_substring_length\
    \ = #dot_substring_length\n    local is_valid_substring_upper = (dot_substring_upper_length\
    \ == dot_substring_length) and (dot_substring_upper_length > 0)\n    local is_valid_substring_lower\
    \ = (dot_substring_lower_length == dot_substring_length) and (dot_substring_lower_length\
    \ > 0)\n    local is_valid_substring_upper_length = #dot_substring_upper\n   \
    \ local is_valid_substring_lower_length = #dot_substring_lower\n    local is_valid_substring_upper_lower\
    \ = (dot_substring_upper_length == dot_substring_lower_length) and (dot_substring_upper_length\
    \ > 0) and (dot_substring_lower_length > 0)\n    local is_valid_substring_upper_lower_length\
    \ = #dot_substring_upper_lower\n    local is_valid_substring_upper_lower_length\
    \ = #dot_substring_upper_lower\n    local is_valid_substring_upper_lower_upper\
    \ = (dot_substring_upper_length == dot_substring_lower_length) and (dot_substring_upper_length\
    \ > 0) and (dot_substring_lower_length > 0", "    if #file_name < 3 then\n   \
    \     return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]*$') then\n\
    \        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]') then\n    \
    \    return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9.]*$') then\n\
    \        return 'Yes'\n    end\n    return 'No'\nend", "    if #file_name < 3\
    \ then\n        return 'No'\n    end\n    if file_name ~= string.gsub(file_name,\
    \ '.', '') then\n        return 'No'\n    end\n    if not string.sub(file_name,\
    \ 1, 1) ~= string.gsub(file_name, '.', '') then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, -3, -1) ~= '0-9' then\n        return 'No'\n   \
    \ end\n    return 'Yes'\nend", "    if #file_name < 3 then\n        return 'No'\n\
    \    end\n    if file_name ~= file_name:match('^[0-9]{3}.[a-zA-Z]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}$')\
    \ then\n        return 'No'\n    end\n    if file_name:match('^[0-9]{3}.[a-zA-Z]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}$')\
    \ then\n        return 'No'\n    end\n    if file_name:match('^[0-9]{3}.[a-zA-Z]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}$')\
    \ then\n        return 'No'\n    end\n    return 'Yes'\nend", "    if #file_name\
    \ > 3 then\n        return 'No'\n    end\n    if file_name ~= '.' then\n     \
    \   return 'No'\n    end\n    if string.sub(file_name, 1, 1) ~= '.' then\n   \
    \     return 'No'\n    end\n    if string.sub(file_name, 2, 2) ~= '.' then\n \
    \       return 'No'\n    end\n    if string.sub(file_name, 3, 3) ~= '.' then\n\
    \        return 'No'\n    end\n    if string.sub(file_name, 4, 4) ~= '.' then\n\
    \        return 'No'\n    end\n    if string.sub(file_name, 5, 5) ~= '.' then\n\
    \        return 'No'\n    end\n    if string.sub(file_name, 6, 6) ~= '.' then\n\
    \        return 'No'\n    end\n    if string.sub(file_name, 7, 7) ~= '.' then\n\
    \        return 'No'\n    end\n    if string.sub(file_name, 8, 8) ~= '.' then\n\
    \        return 'No'\n    end\n    if string.sub(file_name, 9, 9) ~= '.' then\n\
    \        return 'No'\n    end\n    return 'Yes'\nend", "    local dot_index =\
    \ string.find(file_name, '.')\n    local dot_substring = string.sub(file_name,\
    \ 1, dot_index)\n    local dot_substring_length = #dot_substring\n    local dot_substring_upper\
    \ = string.upper(dot_substring)\n    local dot_substring_lower = string.lower(dot_substring)\n\
    \    local dot_substring_upper_length = #dot_substring_upper\n    local dot_substring_lower_length\
    \ = #dot_substring_lower\n    local dot_substring_upper_starts_with_letter = string.find(dot_substring_upper,\
    \ 'A') == 1 or string.find(dot_substring_upper, 'a') == 1\n    local dot_substring_lower_starts_with_letter\
    \ = string.find(dot_substring_lower, 'A') == 1 or string.find(dot_substring_lower,\
    \ 'a') == 1\n    local dot_substring_upper_ends_with_letter = string.find(dot_substring_upper,\
    \ 'Z') == dot_substring_upper_length - 1 or string.find(dot_substring_upper, 'z')\
    \ == dot_substring_upper_length - 1\n    local dot_substring_lower_ends_with_letter\
    \ = string.find(dot_substring_lower, 'Z') == dot_substring_lower_length - 1 or\
    \ string.find(dot_substring_lower, 'z') == dot_substring_lower_length - 1\n  \
    \  local dot_substring_upper_starts_with_digit = string.find(dot_substring_upper,\
    \ '0') == 1 or string.find(dot_substring_upper, '1') == 1 or string.find(dot_substring_upper,\
    \ '2') == 1 or string.find(dot_substring_upper, '3') == 1 or string.find(dot_substring_upper,\
    \ '4') == 1 or string.find(dot_substring_upper, '5') == 1 or string.find(dot_substring_upper,\
    \ '6') == 1 or string.find(dot_substring_upper, '", "    local valid = true\n\
    \    local dot_index = string.find(file_name, '.')\n    local dot_substring =\
    \ string.sub(file_name, 1, dot_index)\n    local dot_substring_length = #dot_substring\n\
    \    local dot_substring_upper = string.upper(dot_substring)\n    local dot_substring_lower\
    \ = string.lower(dot_substring)\n    local dot_substring_upper_length = #dot_substring_upper\n\
    \    local dot_substring_lower_length = #dot_substring_lower\n    local dot_substring_upper_index\
    \ = string.find(dot_substring_upper, '.')\n    local dot_substring_lower_index\
    \ = string.find(dot_substring_lower, '.')\n    local dot_substring_upper_index_length\
    \ = #dot_substring_upper_index\n    local dot_substring_lower_index_length = #dot_substring_lower_index\n\
    \    local dot_substring_upper_index_index = string.find(dot_substring_upper,\
    \ 'a')\n    local dot_substring_lower_index_index = string.find(dot_substring_lower,\
    \ 'a')\n    local dot_substring_upper_index_index_length = #dot_substring_upper_index_index\n\
    \    local dot_substring_lower_index_index_length = #dot_substring_lower_index_index\n\
    \    if dot_substring_length > 3 or dot_substring_upper_length > 3 or dot_substring_lower_length\
    \ > 3 or dot_substring_upper_index_length > 1 or dot_substring_lower_index_length\
    \ > 1 or dot_substring_upper_index_index_length > 1 or dot_substring_lower_index_index_length\
    \ > 1 then\n        valid = false\n    end\n    if valid == true then\n      \
    \  if dot_substring_upper_index == 0 or dot_substring_lower_index == 0 then\n\
    \            valid = false\n        end\n        if dot_substring_upper_index_index\
    \ == 0 or dot_substring_lower_index_index == 0 then\n", "    if #file_name > 3\
    \ then\n        return 'No'\n    end\n    if #file_name > 1 and file_name:sub(1,1)\
    \ ~= '.' then\n        return 'No'\n    end\n    if #file_name > 1 and file_name:sub(2,2)\
    \ ~= '.' then\n        return 'No'\n    end\n    if #file_name > 1 and file_name:sub(3,3)\
    \ ~= '.' then\n        return 'No'\n    end\n    if #file_name > 1 and file_name:sub(4,4)\
    \ ~= '.' then\n        return 'No'\n    end\n    if #file_name > 1 and file_name:sub(5,5)\
    \ ~= '.' then\n        return 'No'\n    end\n    if #file_name > 1 and file_name:sub(6,6)\
    \ ~= '.' then\n        return 'No'\n    end\n    if #file_name > 1 and file_name:sub(7,7)\
    \ ~= '.' then\n        return 'No'\n    end\n    if #file_name > 1 and file_name:sub(8,8)\
    \ ~= '.' then\n        return 'No'\n    end\n    if #file_name > 1 and file_name:sub(9,9)\
    \ ~= '.' then\n        return 'No'\n    end\n    if #file_name > 1 and file_name:sub(10,10)\
    \ ~= '.' then\n        return 'No'\n    end\n    if #file_name > 1 and file_name:sub(11,11)\
    \ ~= '.' then\n        return 'No'\n    end\n    if #file_name > 1 and file_name:sub(12,12)\
    \ ~= '.' then\n        return 'No'\n    end\n    if #file_name > 1 and file_name:sub(13,13)\
    \ ~= '.' then\n        return 'No'\n    end\n    if #file_name > 1 and file_name:sub(14,14)\
    \ ~= '.' then\n        return 'No'\n    end\n    if #file_name > 1 and file_name:sub(15,",
  "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= '.'\
    \ then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 1) ~= '.'\
    \ then\n        return 'No'\n    end\n    if string.sub(file_name, 2, 2) ~= '.'\
    \ then\n        return 'No'\n    end\n    if string.sub(file_name, 3, 3) ~= '.'\
    \ then\n        return 'No'\n    end\n    if string.sub(file_name, 4, 4) ~= '.'\
    \ then\n        return 'No'\n    end\n    if string.sub(file_name, 5, 5) ~= '.'\
    \ then\n        return 'No'\n    end\n    if string.sub(file_name, 6, 6) ~= '.'\
    \ then\n        return 'No'\n    end\n    if string.sub(file_name, 7, 7) ~= '.'\
    \ then\n        return 'No'\n    end\n    if string.sub(file_name, 8, 8) ~= '.'\
    \ then\n        return 'No'\n    end\n    if string.sub(file_name, 9, 9) ~= '.'\
    \ then\n        return 'No'\n    end\n    if string.sub(file_name, 10, 10) ~=\
    \ '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 11, 11)\
    \ ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 12,\
    \ 12) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name,\
    \ 13, 13) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name,\
    \ 14, 14) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name,\
    \ 15, 15) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name,\
    \ 16, 16) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name",
  "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= string.gsub(file_name,\
    \ '.', '') then\n        return 'No'\n    end\n    if not string.sub(file_name,\
    \ 1, 1) ~= '^[a-zA-Z]' then\n        return 'No'\n    end\n    if string.sub(file_name,\
    \ -3, -1) ~= '\\.txt|\\.exe|\\.dll' then\n        return 'No'\n    end\n    return\
    \ 'Yes'\nend", "    if #file_name < 3 then\n        return 'No'\n    end\n   \
    \ if file_name ~= file_name:match('^[0-9]{3}[.]') then\n        return 'No'\n\
    \    end\n    local dot_index = string.find(file_name, '.')\n    if dot_index\
    \ == nil then\n        return 'No'\n    end\n    local file_name_before_dot =\
    \ string.sub(file_name, 1, dot_index)\n    if file_name_before_dot == '' then\n\
    \        return 'No'\n    end\n    local file_name_after_dot = string.sub(file_name,\
    \ dot_index + 1)\n    if file_name_after_dot ~= 'txt' and file_name_after_dot\
    \ ~= 'exe' and file_name_after_dot ~= 'dll' then\n        return 'No'\n    end\n\
    \    return 'Yes'\nend", "    local result = 'No'\n    if #file_name == 3 and\
    \ file_name ~= '0' and file_name ~= '1' and file_name ~= '2' and file_name ~=\
    \ '3' and file_name ~= '4' and file_name ~= '5' and file_name ~= '6' and file_name\
    \ ~= '7' and file_name ~= '8' and file_name ~= '9' then\n        result = 'Yes'\n\
    \    end\n    return result\nend", "    if #file_name < 3 then\n        return\
    \ 'No'\n    end\n    if #file_name ~= 3 then\n        return 'No'\n    end\n \
    \   if file_name:sub(1,1) ~= 'a' .. 'z' or file_name:sub(1,1) ~= 'A' .. 'Z' then\n\
    \        return 'No'\n    end\n    if file_name:sub(2,2) ~= '0' .. '9' then\n\
    \        return 'No'\n    end\n    if file_name:sub(3,3) ~= '.' then\n       \
    \ return 'No'\n    end\n    if file_name:sub(4,4) ~= 'txt' or file_name:sub(4,4)\
    \ ~= 'exe' or file_name:sub(4,4) ~= 'dll' then\n        return 'No'\n    end\n\
    \    return 'Yes'\nend", "    if #file_name < 3 then\n        return 'No'\n  \
    \  end\n    if file_name ~= file_name:match('^[0-9]{3}[.]') then\n        return\
    \ 'No'\n    end\n    if file_name:match('^[a-zA-Z]') then\n        return 'No'\n\
    \    end\n    if file_name:match('[.](exe|dll)$') then\n        return 'Yes'\n\
    \    end\n    return 'No'\nend", "    if #file_name < 3 then\n        return 'No'\n\
    \    end\n    if file_name ~= file_name:match('[0-9]+') then\n        return 'No'\n\
    \    end\n    if file_name:match('[0-9]+\\\\.[0-9]+') then\n        return 'No'\n\
    \    end\n    if file_name:match('[a-zA-Z][a-zA-Z0-9]*\\\\.[a-zA-Z][a-zA-Z0-9]*')\
    \ then\n        return 'No'\n    end\n    if file_name:match('[a-zA-Z][a-zA-Z0-9]*\\\
    \\.[txt|exe|dll]') then\n        return 'Yes'\n    end\n    return 'No'\nend",
  "    local valid = true\n    local dot_index = string.find(file_name, '.')\n   \
    \ local dot_substring = string.sub(file_name, 1, dot_index)\n    local dot_substring_length\
    \ = #dot_substring\n    local dot_substring_upper = string.upper(dot_substring)\n\
    \    local dot_substring_lower = string.lower(dot_substring)\n    local dot_substring_upper_length\
    \ = #dot_substring_upper\n    local dot_substring_lower_length = #dot_substring_lower\n\
    \    local dot_substring_upper_index = string.find(dot_substring_upper, '.')\n\
    \    local dot_substring_lower_index = string.find(dot_substring_lower, '.')\n\
    \    local dot_substring_upper_index_length = #dot_substring_upper_index\n   \
    \ local dot_substring_lower_index_length = #dot_substring_lower_index\n    local\
    \ dot_substring_upper_index_index = string.find(dot_substring_upper, 'a')\n  \
    \  local dot_substring_lower_index_index = string.find(dot_substring_lower, 'a')\n\
    \    local dot_substring_upper_index_index_length = #dot_substring_upper_index_index\n\
    \    local dot_substring_lower_index_index_length = #dot_substring_lower_index_index\n\
    \    local dot_substring_upper_index_index_index = string.find(dot_substring_upper,\
    \ 'A')\n    local dot_substring_lower_index_index_index = string.find(dot_substring_lower,\
    \ 'A')\n    local dot_substring_upper_index_index_index_length = #dot_substring_upper_index_index_index\n\
    \    local dot_substring_lower_index_index_index_length = #dot_substring_lower_index_index_index\n\
    \    if dot_substring_length > 3 or dot_substring_upper_length > 3 or dot_substring_lower_length\
    \ > 3 or dot_substring_upper_index_length > 1", "    local valid = true\n    local\
    \ dot_index = string.find(file_name, '.')\n    if dot_index == nil then\n    \
    \    valid = false\n    else\n        local before_dot = string.sub(file_name,\
    \ 1, dot_index)\n        if string.len(before_dot) > 3 then\n            valid\
    \ = false\n        else\n            local after_dot = string.sub(file_name, dot_index\
    \ + 1)\n            if string.len(after_dot) > 3 then\n                valid =\
    \ false\n            else\n                if string.sub(after_dot, 1, 1) ~= '.'\
    \ then\n                    valid = false\n                else\n            \
    \        if string.sub(after_dot, 2, 1) ~= '.' then\n                        valid\
    \ = false\n                    else\n                        if string.sub(after_dot,\
    \ 3, 1) ~= '.' then\n                            valid = false\n             \
    \           end\n                    end\n                end\n            end\n\
    \        end\n    end\n    return valid\nend", "    if #file_name < 3 then\n \
    \       return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]+') then\n\
    \        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]+') then\n   \
    \     return 'No'\n    end\n    if file_name:match('^[0-9]+[a-zA-Z]+') then\n\
    \        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]+[0-9]+') then\n\
    \        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]+[0-9]+[a-zA-Z]+')\
    \ then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]+[0-9]+[a-zA-Z]+[0-9]+')\
    \ then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]+[0-9]+[a-zA-Z]+[0-9]+[a-zA-Z]+')\
    \ then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]+[0-9]+[a-zA-Z]+[0-9]+[a-zA-Z]+[0-9]+')\
    \ then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]+[0-9]+[a-zA-Z]+[0-9]+[a-zA-Z]+[0-9]+[a-zA-Z]+')\
    \ then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]+[0-9]+[a-zA-Z]+[0-9]+[a-zA-Z]+[0-9]+[a-zA-Z]+[0-9]+')\
    \ then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]+[0-",
  "    local valid = true\n    local dot_index = string.find(file_name, '.')\n   \
    \ local dot_substring = string.sub(file_name, 1, dot_index)\n    local dot_substring_length\
    \ = #dot_substring\n    local dot_substring_upper = string.upper(dot_substring)\n\
    \    local dot_substring_lower = string.lower(dot_substring)\n    local dot_substring_upper_length\
    \ = #dot_substring_upper\n    local dot_substring_lower_length = #dot_substring_lower\n\
    \    local is_valid_substring = (dot_substring_length == dot_substring_upper_length\
    \ and \n                                dot_substring_length == dot_substring_lower_length\
    \ and \n                                string.sub(dot_substring_upper, 1, 1)\
    \ == 'a' and \n                                string.sub(dot_substring_lower,\
    \ 1, 1) == 'a')\n    local is_valid_substring_length = #is_valid_substring\n \
    \   local is_valid_substring_upper = string.sub(dot_substring_upper, 1, 1) ==\
    \ 'A'\n    local is_valid_substring_lower = string.sub(dot_substring_lower, 1,\
    \ 1) == 'a'\n    local is_valid_substring_upper_length = #is_valid_substring_upper\n\
    \    local is_valid_substring_lower_length = #is_valid_substring_lower\n    local\
    \ is_valid_substring_upper_lower = string.sub(dot_substring_upper, 1, 1) == string.sub(dot_substring_lower,\
    \ 1, 1)\n    local is_valid_substring_upper_lower_length = #is_valid_substring_upper_lower\n\
    \    local is_valid_substring_upper_lower_upper = string.sub(dot_substring_upper,\
    \ 1, 1) == string.sub(dot_substring_lower, 1, 1) and string.sub(dot_substring_upper,\
    \ 1, 1) == string.sub(dot_substring_upper, 1, 1)\n    local is_valid_", "    if\
    \ #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= '.' and\
    \ file_name ~= '..' then\n        if string.sub(file_name, 1, 3) ~= '0-9' then\n\
    \            return 'No'\n        end\n        if string.sub(file_name, 4, 4)\
    \ ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 5, 5) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 6, 6) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 7, 7) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 8, 8) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 9, 9) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 10, 10) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 11, 11) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 12, 12) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 13, 13) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 14, 14) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 15, 15) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 16, 16) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 17, 17) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 18, 18) ~= '.' then\n            return 'No'\n        end\n        if string.sub(",
  "    local valid = true\n    local dot_index = string.find(file_name, '.')\n   \
    \ local dot_substring = string.sub(file_name, 1, dot_index)\n    local dot_substring_length\
    \ = #dot_substring\n    local dot_substring_upper = string.upper(dot_substring)\n\
    \    local dot_substring_lower = string.lower(dot_substring)\n    local dot_substring_lower_length\
    \ = #dot_substring_lower\n    local dot_substring_lower_first_letter = string.sub(dot_substring_lower,\
    \ 1, 1)\n    local dot_substring_lower_first_letter_length = #dot_substring_lower_first_letter\n\
    \    local dot_substring_lower_first_letter_upper = string.upper(dot_substring_lower_first_letter)\n\
    \    local dot_substring_lower_first_letter_lower = string.lower(dot_substring_lower_first_letter)\n\
    \    local dot_substring_lower_first_letter_lower_length = #dot_substring_lower_first_letter_lower\n\
    \    local dot_substring_lower_first_letter_lower_first_letter = string.sub(dot_substring_lower_first_letter_lower,\
    \ 1, 1)\n    local dot_substring_lower_first_letter_lower_first_letter_length\
    \ = #dot_substring_lower_first_letter_lower_first_letter\n    local dot_substring_lower_first_letter_lower_first_letter_upper\
    \ = string.upper(dot_substring_lower_first_letter_lower_first_letter)\n    local\
    \ dot_substring_lower_first_letter_lower_first_letter_lower = string.lower(dot_substring_lower_first_letter_lower_first_letter)\n\
    \    local dot_substring_lower_first_letter_lower_first_letter_lower_length =\
    \ #dot_substring_lower_first_letter_lower_first_letter_lower\n    local dot_substring_lower_first_letter_lower_first_letter_lower_first_letter\
    \ = string.sub(dot_substring_lower_", "    if #file_name < 3 then\n        return\
    \ 'No'\n    end\n    if file_name ~= string.gsub(file_name, '^[0-9]', '') then\n\
    \        return 'No'\n    end\n    if file_name ~= string.gsub(file_name, '^[a-zA-Z]',\
    \ '') then\n        return 'No'\n    end\n    if file_name ~= string.gsub(file_name,\
    \ '\\.$', '') then\n        return 'No'\n    end\n    if file_name ~= string.gsub(file_name,\
    \ '\\.\\..*', '') then\n        return 'No'\n    end\n    return 'Yes'\nend",
  "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('[0-9]{3}')\
    \ then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]') then\n\
    \        return 'No'\n    end\n    if file_name:match('^[a-zA-Z].*') then\n  \
    \      return 'No'\n    end\n    if file_name:match('^[a-zA-Z].[a-zA-Z].[a-zA-Z]$')\
    \ then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z].[a-zA-Z].[a-zA-Z].[a-zA-Z]$')\
    \ then\n        return 'No'\n    end\n    return 'Yes'\nend", "    if #file_name\
    \ < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('[0-9]{3}')\
    \ then\n        return 'No'\n    end\n    if file_name:match('[0-9]{3}\\\\.[a-zA-Z]{1,3}')\
    \ == nil then\n        return 'No'\n    end\n    if file_name:match('[0-9]{3}\\\
    \\.[a-zA-Z]{1,3}\\\\.[a-zA-Z]{1,3}') == nil then\n        return 'No'\n    end\n\
    \    return 'Yes'\nend", "    if string.len(file_name) > 3 then\n        return\
    \ 'No'\n    end\n    if string.len(file_name) < 3 then\n        return 'No'\n\
    \    end\n    if string.sub(file_name, 1, 2) == '0' then\n        return 'No'\n\
    \    end\n    if string.sub(file_name, 2, 3) == '.' then\n        return 'No'\n\
    \    end\n    if string.sub(file_name, string.len(file_name) - 2, string.len(file_name))\
    \ == '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 1)\
    \ ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, string.len(file_name)\
    \ - 3, string.len(file_name)) ~= '.' then\n        return 'No'\n    end\n    if\
    \ string.sub(file_name, 1, 1) ~= '.' then\n        return 'No'\n    end\n    if\
    \ string.sub(file_name, string.len(file_name) - 3, string.len(file_name)) ~= '.'\
    \ then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 1) ~= '.'\
    \ then\n        return 'No'\n    end\n    if string.sub(file_name, string.len(file_name)\
    \ - 3, string.len(file_name)) ~= '.' then\n        return 'No'\n    end\n    if\
    \ string.sub(file_name, 1, 1) ~= '.' then\n        return 'No'\n    end\n    if\
    \ string.sub(file_name, string.len(file_name) - 3, string.len(file_name)) ~= '.'\
    \ then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 1) ~= '.'\
    \ then\n        return 'No'\n    end\n    if string.sub(file_name, string.len(file_name)\
    \ - 3, string.len(file_name)) ~= '.' then\n        return 'No'\n    end\n    ",
  "    if #file_name > 3 then\n        return 'No'\n    end\n    if file_name ~= ''\
    \ then\n        if string.sub(file_name, 1, 3) ~= '0-9' then\n            return\
    \ 'No'\n        end\n        if string.sub(file_name, 4, 4) ~= '.' then\n    \
    \        return 'No'\n        end\n        if string.sub(file_name, 5, 5) ~= '.'\
    \ then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 6, 6) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 7, 7) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 8, 8) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 9, 9) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 10, 10) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 11, 11) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 12, 12) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 13, 13) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 14, 14) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 15, 15) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 16, 16) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 17, 17) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 18, 18) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 19, 19) ~=", "    if #file_name > 3 then\n        return 'No'\n    end\n   \
    \ if file_name ~= '.' then\n        return 'No'\n    end\n    local file_name_before_dot\
    \ = string.sub(file_name, 1, #file_name - 1)\n    if not file_name_before_dot\
    \ ~= '' then\n        return 'No'\n    end\n    local file_name_after_dot = string.sub(file_name,\
    \ #file_name)\n    if not file_name_after_dot ~= 'txt' and not file_name_after_dot\
    \ ~= 'exe' and not file_name_after_dot ~= 'dll' then\n        return 'No'\n  \
    \  end\n    return 'Yes'\nend", "    if string.len(file_name) > 3 then\n     \
    \   return 'No'\n    end\n    if string.len(file_name) < 3 then\n        return\
    \ 'No'\n    end\n    if string.sub(file_name, 1, 2) == '0' or string.sub(file_name,\
    \ 1, 2) == '1' or string.sub(file_name, 1, 2) == '2' or string.sub(file_name,\
    \ 1, 2) == '3' or string.sub(file_name, 1, 2) == '4' or string.sub(file_name,\
    \ 1, 2) == '5' or string.sub(file_name, 1, 2) == '6' or string.sub(file_name,\
    \ 1, 2) == '7' or string.sub(file_name, 1, 2) == '8' or string.sub(file_name,\
    \ 1, 2) == '9' then\n        return 'No'\n    end\n    if string.sub(file_name,\
    \ string.len(file_name) - 2, string.len(file_name)) == 'txt' or string.sub(file_name,\
    \ string.len(file_name) - 2, string.len(file_name)) == 'exe' or string.sub(file_name,\
    \ string.len(file_name) - 2, string.len(file_name)) == 'dll' then\n        return\
    \ 'Yes'\n    end\n    return 'No'\nend", "    local valid = true\n    local dot_index\
    \ = string.find(file_name, '.')\n    local dot_substring = string.sub(file_name,\
    \ 1, dot_index)\n    local dot_substring_length = #dot_substring\n    local dot_substring_upper\
    \ = string.upper(dot_substring)\n    local dot_substring_lower = string.lower(dot_substring)\n\
    \    local dot_substring_upper_length = #dot_substring_upper\n    local dot_substring_lower_length\
    \ = #dot_substring_lower\n    local is_valid_substring = (dot_substring_length\
    \ == dot_substring_upper_length + dot_substring_lower_length) and (dot_substring_upper_length\
    \ > 0) and (dot_substring_lower_length > 0) and (dot_substring_upper[1] == 'A'\
    \ or dot_substring_lower[1] == 'a')\n    local is_valid_file_extension = (dot_substring_length\
    \ == 3 or dot_substring_length == 4) and (dot_substring_upper == 'TXT' or dot_substring_upper\
    \ == 'EXE' or dot_substring_upper == 'DLL')\n    local is_valid_file_name = (dot_index\
    \ == 0 or dot_index == -1) and is_valid_substring and is_valid_file_extension\n\
    \    return valid and is_valid_file_name\nend", "    if #file_name < 3 then\n\
    \        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9][0-9][0-9]$')\
    \ then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*$')\
    \ then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\\
    .\\.[a-zA-Z][a-zA-Z0-9]*$') then\n        return 'Yes'\n    end\n    return 'No'\n\
    end", "    if string.len(file_name) > 3 then\n        return 'No'\n    end\n \
    \   if string.len(file_name) < 3 then\n        return 'No'\n    end\n    if string.sub(file_name,\
    \ 1, 2) == '0' then\n        return 'No'\n    end\n    if string.sub(file_name,\
    \ 2, 3) == '0' then\n        return 'No'\n    end\n    if string.sub(file_name,\
    \ 3, 4) == '0' then\n        return 'No'\n    end\n    if string.sub(file_name,\
    \ 4, 5) == '0' then\n        return 'No'\n    end\n    if string.sub(file_name,\
    \ 5, 6) == '0' then\n        return 'No'\n    end\n    if string.sub(file_name,\
    \ 6, 7) == '0' then\n        return 'No'\n    end\n    if string.sub(file_name,\
    \ 7, 8) == '0' then\n        return 'No'\n    end\n    if string.sub(file_name,\
    \ 8, 9) == '0' then\n        return 'No'\n    end\n    if string.sub(file_name,\
    \ 9, 10) == '0' then\n        return 'No'\n    end\n    if string.sub(file_name,\
    \ 10, 11) == '0' then\n        return 'No'\n    end\n    if string.sub(file_name,\
    \ 11, 12) == '0' then\n        return 'No'\n    end\n    if string.sub(file_name,\
    \ 12, 13) == '0' then\n        return 'No'\n    end\n    if string.sub(file_name,\
    \ 13, 14) == '0' then\n        return 'No'\n    end\n    if string.sub(file_name,\
    \ 14, 15) == '0' then\n        return 'No'\n    end\n    if string.sub(file_name,\
    \ 15, 16) == '0' then\n        return 'No'\n    end\n    if string.sub(file_name,\
    \ 16, 17) == '0' then\n        return 'No'\n    end\n    if", "    if #file_name\
    \ < 3 then\n        return 'No'\n    end\n    if file_name ~= string.gsub(file_name,\
    \ '.', '') then\n        return 'No'\n    end\n    if not string.sub(file_name,\
    \ 1, 1) ~= string.gsub(file_name, '.', '') then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, -3, -1) ~= '0-9' then\n        return 'No'\n   \
    \ end\n    return 'Yes'\nend", "    local result = 'No'\n    if #file_name ==\
    \ 3 then\n        if file_name ~= '.0' and file_name ~= '.1' and file_name ~=\
    \ '.2' then\n            if string.sub(file_name, 1, 1) ~= '0' and string.sub(file_name,\
    \ 1, 1) ~= '1' and string.sub(file_name, 1, 1) ~= '2' then\n                if\
    \ string.sub(file_name, 2, 2) ~= '.' then\n                    if string.sub(file_name,\
    \ 3, 3) == 'txt' then\n                        result = 'Yes'\n              \
    \      end\n                end\n            end\n        end\n    end\n    return\
    \ result\nend", "    if #file_name > 3 then\n        return 'No'\n    end\n  \
    \  if #file_name == 3 then\n        return 'No'\n    end\n    if file_name:sub(1,1)\
    \ ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(2,2) ~= '.'\
    \ then\n        return 'No'\n    end\n    if file_name:sub(3,3) ~= '.' then\n\
    \        return 'No'\n    end\n    if file_name:sub(4,4) ~= '.' then\n       \
    \ return 'No'\n    end\n    if file_name:sub(5,5) ~= '.' then\n        return\
    \ 'No'\n    end\n    if file_name:sub(6,6) ~= '.' then\n        return 'No'\n\
    \    end\n    if file_name:sub(7,7) ~= '.' then\n        return 'No'\n    end\n\
    \    if file_name:sub(8,8) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(9,9)\
    \ ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(10,10) ~= '.'\
    \ then\n        return 'No'\n    end\n    if file_name:sub(11,11) ~= '.' then\n\
    \        return 'No'\n    end\n    if file_name:sub(12,12) ~= '.' then\n     \
    \   return 'No'\n    end\n    if file_name:sub(13,13) ~= '.' then\n        return\
    \ 'No'\n    end\n    if file_name:sub(14,14) ~= '.' then\n        return 'No'\n\
    \    end\n    if file_name:sub(15,15) ~= '.' then\n        return 'No'\n    end\n\
    \    if file_name:sub(16,16) ~= '.' then\n        return 'No'\n    end\n    if\
    \ file_name:sub(17,17) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(18,18)\
    \ ~= '", "    if #file_name < 3 then\n        return 'No'\n    end\n    if #file_name\
    \ ~= 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:sub(1,1)\
    \ .. '.' .. file_name:sub(2,2) .. '.' .. file_name:sub(3,3) then\n        return\
    \ 'No'\n    end\n    if file_name:sub(1,1) == '.' or file_name:sub(2,2) == '.'\
    \ or file_name:sub(3,3) == '.' then\n        return 'No'\n    end\n    if file_name:sub(1,1)\
    \ ~= 'a' .. 'z' and file_name:sub(1,1) ~= 'A' .. 'Z' then\n        return 'No'\n\
    \    end\n    if file_name:sub(2,2) ~= 'a' .. 'z' and file_name:sub(2,2) ~= 'A'\
    \ .. 'Z' then\n        return 'No'\n    end\n    if file_name:sub(3,3) ~= 'a'\
    \ .. 'z' and file_name:sub(3,3) ~= 'A' .. 'Z' then\n        return 'No'\n    end\n\
    \    return 'Yes'\nend", "    if #file_name > 3 then\n        return 'No'\n  \
    \  end\n    if #file_name < 1 then\n        return 'No'\n    end\n    if file_name:sub(1,1)\
    \ ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(2,2) ~= '.'\
    \ then\n        return 'No'\n    end\n    if file_name:sub(3,3) ~= '.' then\n\
    \        return 'No'\n    end\n    if file_name:sub(4,4) ~= '.' then\n       \
    \ return 'No'\n    end\n    if file_name:sub(5,5) ~= '.' then\n        return\
    \ 'No'\n    end\n    if file_name:sub(6,6) ~= '.' then\n        return 'No'\n\
    \    end\n    if file_name:sub(7,7) ~= '.' then\n        return 'No'\n    end\n\
    \    if file_name:sub(8,8) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(9,9)\
    \ ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(10,10) ~= '.'\
    \ then\n        return 'No'\n    end\n    if file_name:sub(11,11) ~= '.' then\n\
    \        return 'No'\n    end\n    if file_name:sub(12,12) ~= '.' then\n     \
    \   return 'No'\n    end\n    if file_name:sub(13,13) ~= '.' then\n        return\
    \ 'No'\n    end\n    if file_name:sub(14,14) ~= '.' then\n        return 'No'\n\
    \    end\n    if file_name:sub(15,15) ~= '.' then\n        return 'No'\n    end\n\
    \    if file_name:sub(16,16) ~= '.' then\n        return 'No'\n    end\n    if\
    \ file_name:sub(17,17) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(18,18)\
    \ ~= '", "    if #file_name > 3 then\n        return 'No'\n    end\n    if file_name\
    \ ~= '.' then\n        return 'No'\n    end\n    local dot_index = string.find(file_name,\
    \ '.')\n    local before_dot = string.sub(file_name, 1, dot_index)\n    if not\
    \ string.len(before_dot) > 0 then\n        return 'No'\n    end\n    local after_dot\
    \ = string.sub(file_name, dot_index + 1)\n    if not string.len(after_dot) > 0\
    \ then\n        return 'No'\n    end\n    if after_dot ~= 'txt' and after_dot\
    \ ~= 'exe' and after_dot ~= 'dll' then\n        return 'No'\n    end\n    return\
    \ 'Yes'\nend", "    if #file_name > 3 then\n        return 'No'\n    end\n   \
    \ if #file_name == 0 then\n        return 'No'\n    end\n    if file_name:sub(1,3)\
    \ ~= '0-9' then\n        return 'No'\n    end\n    if file_name:sub(1,1) ~= 'a-z'\
    \ or file_name:sub(1,1) ~= 'A-Z' then\n        return 'No'\n    end\n    if file_name:sub(file_name:find('.'),1,2)\
    \ ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(file_name:find('.',2),1)\
    \ ~= 'txt' and file_name:sub(file_name:find('.',2),1) ~= 'exe' and file_name:sub(file_name:find('.',2),1)\
    \ ~= 'dll' then\n        return 'No'\n    end\n    return 'Yes'\nend", "    if\
    \ #file_name > 3 then\n        return 'No'\n    end\n    if #file_name < 1 then\n\
    \        return 'No'\n    end\n    if file_name:sub(1,1) ~= \".\" then\n     \
    \   return 'No'\n    end\n    if file_name:sub(2,2) ~= \".\" then\n        return\
    \ 'No'\n    end\n    if file_name:sub(3,3) ~= \".\" then\n        return 'No'\n\
    \    end\n    if file_name:sub(4,4) ~= \".\" then\n        return 'No'\n    end\n\
    \    if file_name:sub(5,5) ~= \".\" then\n        return 'No'\n    end\n    if\
    \ file_name:sub(6,6) ~= \".\" then\n        return 'No'\n    end\n    if file_name:sub(7,7)\
    \ ~= \".\" then\n        return 'No'\n    end\n    if file_name:sub(8,8) ~= \"\
    .\" then\n        return 'No'\n    end\n    if file_name:sub(9,9) ~= \".\" then\n\
    \        return 'No'\n    end\n    return 'Yes'\nend", "    local valid = true\n\
    \    local dot_index = string.find(file_name, '.')\n    local dot_index_2 = string.find(file_name,\
    \ '.', dot_index + 1)\n    local dot_index_3 = string.find(file_name, '.', dot_index_2\
    \ + 1)\n    local dot_index_4 = string.find(file_name, '.', dot_index_3 + 1)\n\
    \    local dot_index_5 = string.find(file_name, '.', dot_index_4 + 1)\n    local\
    \ dot_index_6 = string.find(file_name, '.', dot_index_5 + 1)\n    local dot_index_7\
    \ = string.find(file_name, '.', dot_index_6 + 1)\n    local dot_index_8 = string.find(file_name,\
    \ '.', dot_index_7 + 1)\n    local dot_index_9 = string.find(file_name, '.', dot_index_8\
    \ + 1)\n    local dot_index_10 = string.find(file_name, '.', dot_index_9 + 1)\n\
    \    local dot_index_11 = string.find(file_name, '.', dot_index_10 + 1)\n    local\
    \ dot_index_12 = string.find(file_name, '.', dot_index_11 + 1)\n    local dot_index_13\
    \ = string.find(file_name, '.', dot_index_12 + 1)\n    local dot_index_14 = string.find(file_name,\
    \ '.', dot_index_13 + 1)\n    local dot_index_15 = string.find(file_name, '.',\
    \ dot_index_14 + 1)\n    local dot_index_16 = string.find(file_name, '.', dot_index_15\
    \ + 1)\n    local dot_index_17 = string.find(file_name, '.', dot_index_16 + 1)\n\
    \    local dot_index_18 = string.find(file_name, '.', dot_index_17 + 1)\n    local\
    \ dot_index_19 = string.find(file_", "    if #file_name < 3 then\n        return\
    \ 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]*$') then\n      \
    \  return 'No'\n    end\n    if file_name:match('^[a-zA-Z]') then\n        return\
    \ 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\.?[a-zA-Z0-9]*$')\
    \ then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\\
    .?[a-zA-Z0-9]*[a-zA-Z0-9]*$') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\\
    .?[a-zA-Z0-9]*[a-zA-Z0-9]*\\.?[a-zA-Z0-9]*$') then\n        return 'No'\n    end\n\
    \    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\.?[a-zA-Z0-9]*[a-zA-Z0-9]*\\.?[a-zA-Z0-9]*\\\
    .?[a-zA-Z0-9]*$') then\n        return 'No'\n    end\n    return 'Yes'\nend",
  "    if #file_name > 3 then\n        return 'No'\n    end\n    if file_name ~= '.'\
    \ then\n        return 'No'\n    end\n    local p = string.find(file_name, '.')\n\
    \    if p == nil then\n        return 'No'\n    end\n    local p1 = string.find(file_name,\
    \ '.', p + 1)\n    if p1 == nil then\n        return 'No'\n    end\n    local\
    \ p2 = string.find(file_name, '.', p1 + 1)\n    if p2 == nil then\n        return\
    \ 'No'\n    end\n    local p3 = string.find(file_name, '.', p2 + 1)\n    if p3\
    \ == nil then\n        return 'No'\n    end\n    if p3 > p2 then\n        return\
    \ 'No'\n    end\n    if p1 > p then\n        return 'No'\n    end\n    if p2 >\
    \ p1 then\n        return 'No'\n    end\n    if p3 > p2 then\n        return 'No'\n\
    \    end\n    return 'Yes'\nend", "    if #file_name < 3 then\n        return\
    \ 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]*$') then\n      \
    \  return 'No'\n    end\n    if file_name:match('^[a-zA-Z]') then\n        return\
    \ 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\.txt$') then\n\
    \        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\\
    .exe$') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\\
    .dll$') then\n        return 'No'\n    end\n    return 'Yes'\nend", "    if #file_name\
    \ < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[a-zA-Z][a-zA-Z0-9]{0,2}\\\
    \\.[a-zA-Z]{1,3}$') then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[a-zA-Z][a-zA-Z0-9]{0,2}\\\
    \\.[a-zA-Z]{1,3}\\\\.[a-zA-Z]{1,3}$') then\n        return 'No'\n    end\n   \
    \ if file_name ~= file_name:match('^[a-zA-Z][a-zA-Z0-9]{0,2}\\\\.[a-zA-Z]{1,3}\\\
    \\.[a-zA-Z]{1,3}\\\\.[a-zA-Z]{1,3}$') then\n        return 'No'\n    end\n   \
    \ return 'Yes'\nend", "    local valid = true\n    local dot_index = string.find(file_name,\
    \ '.')\n    if dot_index == nil then\n        valid = false\n    else\n      \
    \  local before_dot = string.sub(file_name, 1, dot_index)\n        if string.len(before_dot)\
    \ > 3 then\n            valid = false\n        else\n            local after_dot\
    \ = string.sub(file_name, dot_index + 1)\n            if string.len(after_dot)\
    \ > 3 then\n                valid = false\n            else\n                if\
    \ string.sub(after_dot, 1, 1) ~= '.' then\n                    valid = false\n\
    \                else\n                    if string.sub(after_dot, 2, 2) ~= '.'\
    \ then\n                        valid = false\n                    else\n    \
    \                    if string.sub(after_dot, 3, 3) ~= '.' then\n            \
    \                valid = false\n                        end\n                \
    \    end\n                end\n            end\n        end\n    end\n    return\
    \ valid\nend", "    if #file_name == 0 then\n        return 'No'\n    end\n  \
    \  local dot_index = string.find(file_name, '.')\n    if dot_index == nil then\n\
    \        return 'No'\n    end\n    local dot_substring = string.sub(file_name,\
    \ 1, dot_index)\n    if #dot_substring == 0 then\n        return 'No'\n    end\n\
    \    local dot_substring_first_letter = string.sub(dot_substring, 1, 1)\n    if\
    \ not (string.match(dot_substring_first_letter, \"^[a-zA-Z]$\")) then\n      \
    \  return 'No'\n    end\n    local dot_substring_last_letter = string.sub(dot_substring,\
    \ dot_index+1, 1)\n    if not (string.match(dot_substring_last_letter, \"^[a-zA-Z]$\"\
    )) then\n        return 'No'\n    end\n    if #dot_substring_last_letter == 3\
    \ then\n        return 'No'\n    end\n    return 'Yes'\nend", "    if #file_name\
    \ < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}[.]')\
    \ then\n        return 'No'\n    end\n    local dot_index = string.find(file_name,\
    \ '.')\n    local before_dot = string.sub(file_name, 1, dot_index)\n    local\
    \ after_dot = string.sub(file_name, dot_index+1)\n    if not string.sub(before_dot,\
    \ 1, 1) ~= '' then\n        return 'No'\n    end\n    if not string.sub(after_dot,\
    \ 1, 1) ~= '' then\n        return 'No'\n    end\n    if not string.sub(after_dot,\
    \ 1, 1) in ['txt', 'exe', 'dll'] then\n        return 'No'\n    end\n    return\
    \ 'Yes'\nend", "    if string.len(file_name) > 3 then\n        return 'No'\n \
    \   end\n    if string.len(file_name) < 3 then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 1, 2) == '0' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 2, 3) == '.' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, string.len(file_name) - 2, string.len(file_name))\
    \ == '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 1)\
    \ ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, string.len(file_name)\
    \ - 3, string.len(file_name)) ~= '.' then\n        return 'No'\n    end\n    if\
    \ string.sub(file_name, 1, 1) ~= '.' then\n        return 'No'\n    end\n    if\
    \ string.sub(file_name, string.len(file_name) - 3, string.len(file_name)) ~= '.'\
    \ then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 1) ~= '.'\
    \ then\n        return 'No'\n    end\n    if string.sub(file_name, string.len(file_name)\
    \ - 3, string.len(file_name)) ~= '.' then\n        return 'No'\n    end\n    if\
    \ string.sub(file_name, 1, 1) ~= '.' then\n        return 'No'\n    end\n    if\
    \ string.sub(file_name, string.len(file_name) - 3, string.len(file_name)) ~= '.'\
    \ then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 1) ~= '.'\
    \ then\n        return 'No'\n    end\n    if string.sub(file_name, string.len(file_name)\
    \ - 3, string.len(file_name)) ~= '.' then\n        return 'No'\n    end\n    ",
  "    local valid = true\n    local dot_index = string.find(file_name, '.')\n   \
    \ local dot_substring = string.sub(file_name, 1, dot_index)\n    local dot_substring_length\
    \ = #dot_substring\n    local dot_substring_upper = string.upper(dot_substring)\n\
    \    local dot_substring_lower = string.lower(dot_substring)\n    local dot_substring_upper_length\
    \ = #dot_substring_upper\n    local dot_substring_lower_length = #dot_substring_lower\n\
    \    local dot_substring_upper_index = string.find(dot_substring_upper, '.')\n\
    \    local dot_substring_lower_index = string.find(dot_substring_lower, '.')\n\
    \    local dot_substring_upper_index_length = #dot_substring_upper_index\n   \
    \ local dot_substring_lower_index_length = #dot_substring_lower_index\n    local\
    \ dot_substring_upper_index_index = string.find(dot_substring_upper, 'a')\n  \
    \  local dot_substring_lower_index_index = string.find(dot_substring_lower, 'a')\n\
    \    local dot_substring_upper_index_index_length = #dot_substring_upper_index_index\n\
    \    local dot_substring_lower_index_index_length = #dot_substring_lower_index_index\n\
    \    if dot_substring_length == 3 then\n        valid = false\n    elseif dot_substring_upper_length\
    \ != 3 then\n        valid = false\n    elseif dot_substring_lower_length != 3\
    \ then\n        valid = false\n    elseif dot_substring_upper_index_length !=\
    \ 1 then\n        valid = false\n    elseif dot_substring_lower_index_length !=\
    \ 1 then\n        valid = false\n    elseif dot_substring_upper_index_index_length\
    \ != 0 then\n        valid = false\n    elseif dot_substring_lower_index_index_length\
    \ != 0 then\n        valid = false\n    elseif dot_substring_upper_index != 1\
    \ then\n        valid =", "    if #file_name < 3 then\n        return 'No'\n \
    \   end\n    if file_name ~= string.gsub(file_name, '^[0-9]', '') then\n     \
    \   return 'No'\n    end\n    if string.gsub(file_name, '^[a-zA-Z]') ~= '' then\n\
    \        return 'No'\n    end\n    if string.gsub(file_name, '^[0-9][a-zA-Z]')\
    \ ~= '' then\n        return 'No'\n    end\n    if string.gsub(file_name, '^[0-9][a-zA-Z][0-9]')\
    \ ~= '' then\n        return 'No'\n    end\n    if string.gsub(file_name, '^[0-9][a-zA-Z][0-9][a-zA-Z]')\
    \ ~= '' then\n        return 'No'\n    end\n    if string.gsub(file_name, '^[0-9][a-zA-Z][0-9][a-zA-Z][0-9]')\
    \ ~= '' then\n        return 'No'\n    end\n    if string.gsub(file_name, '^[0-9][a-zA-Z][0-9][a-zA-Z][0-9][a-zA-Z]')\
    \ ~= '' then\n        return 'No'\n    end\n    if string.gsub(file_name, '^[0-9][a-zA-Z][0-9][a-zA-Z][0-9][a-zA-Z][0-9]')\
    \ ~= '' then\n        return 'No'\n    end\n    if string.gsub(file_name, '^[0-9][a-zA-Z][0-9][a-zA-Z][0-9][a-zA-Z][0-9][a-zA-Z]')\
    \ ~= '' then\n        return 'No'\n    end\n    if string.gsub(file_name, '^[0-9][a-zA-Z][0-9][",
  "    if string.len(file_name) > 3 then\n        return 'No'\n    end\n    if string.len(file_name)\
    \ < 3 then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 2) ==\
    \ '0' or string.sub(file_name, 1, 2) == '1' or string.sub(file_name, 1, 2) ==\
    \ '2' or string.sub(file_name, 1, 2) == '3' or string.sub(file_name, 1, 2) ==\
    \ '4' or string.sub(file_name, 1, 2) == '5' or string.sub(file_name, 1, 2) ==\
    \ '6' or string.sub(file_name, 1, 2) == '7' or string.sub(file_name, 1, 2) ==\
    \ '8' or string.sub(file_name, 1, 2) == '9' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, string.len(file_name) - 2, string.len(file_name))\
    \ == 'txt' then\n        return 'Yes'\n    end\n    if string.sub(file_name, string.len(file_name)\
    \ - 2, string.len(file_name)) == 'exe' then\n        return 'Yes'\n    end\n \
    \   if string.sub(file_name, string.len(file_name) - 2, string.len(file_name))\
    \ == 'dll' then\n        return 'Yes'\n    end\n    return 'No'\nend", "    local\
    \ valid = true\n    local dot_index = string.find(file_name, '.')\n    if dot_index\
    \ == nil then\n        valid = false\n    else\n        local before_dot = string.sub(file_name,\
    \ 1, dot_index)\n        if string.len(before_dot) > 3 then\n            valid\
    \ = false\n        else\n            if string.sub(before_dot, 1, 1) ~= 'a-zA-Z'\
    \ then\n                valid = false\n            else\n                local\
    \ after_dot = string.sub(file_name, dot_index+1)\n                if after_dot\
    \ ~= 'txt' and after_dot ~= 'exe' and after_dot ~= 'dll' then\n              \
    \      valid = false\n                end\n            end\n        end\n    end\n\
    \    return valid\nend", "    if #file_name < 3 then\n        return 'No'\n  \
    \  end\n    if file_name ~= file_name:match('^[0-9]+') then\n        return 'No'\n\
    \    end\n    if file_name:match('^[a-zA-Z]') then\n        return 'No'\n    end\n\
    \    if file_name:match('^[a-zA-Z].*') then\n        return 'No'\n    end\n  \
    \  if file_name:match('^[a-zA-Z].[a-zA-Z].[a-zA-Z]') then\n        return 'No'\n\
    \    end\n    if file_name:match('^[a-zA-Z].[a-zA-Z].[a-zA-Z].[a-zA-Z]') then\n\
    \        return 'No'\n    end\n    return 'Yes'\nend", "    if #file_name < 3\
    \ then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}.[a-zA-Z]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}$')\
    \ then\n        return 'No'\n    end\n    if file_name:match('^[0-9]{3}.[a-zA-Z]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}$')\
    \ then\n        return 'No'\n    end\n    if file_name:match('^[0-9]{3}.[a-zA-Z]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}$')\
    \ then\n        return 'No'\n    end\n    return 'Yes'\nend", "    if string.len(file_name)\
    \ > 3 then\n        return 'No'\n    end\n    if string.len(file_name) < 3 then\n\
    \        return 'No'\n    end\n    if string.sub(file_name, 1, 2) == '0' or string.sub(file_name,\
    \ 1, 2) == '1' or string.sub(file_name, 1, 2) == '2' or string.sub(file_name,\
    \ 1, 2) == '3' or string.sub(file_name, 1, 2) == '4' or string.sub(file_name,\
    \ 1, 2) == '5' or string.sub(file_name, 1, 2) == '6' or string.sub(file_name,\
    \ 1, 2) == '7' or string.sub(file_name, 1, 2) == '8' or string.sub(file_name,\
    \ 1, 2) == '9' then\n        return 'No'\n    end\n    if string.sub(file_name,\
    \ string.len(file_name) - 2, string.len(file_name)) == 'txt' or string.sub(file_name,\
    \ string.len(file_name) - 2, string.len(file_name)) == 'exe' or string.sub(file_name,\
    \ string.len(file_name) - 2, string.len(file_name)) == 'dll' then\n        return\
    \ 'Yes'\n    end\n    return 'No'\nend", "    if string.len(file_name) > 3 then\n\
    \        return 'No'\n    end\n    if string.len(file_name) < 3 then\n       \
    \ return 'No'\n    end\n    if string.sub(file_name, 1, 2) == '0' then\n     \
    \   return 'No'\n    end\n    if string.sub(file_name, 2, 3) == '.' then\n   \
    \     return 'No'\n    end\n    if string.sub(file_name, string.len(file_name)\
    \ - 2, string.len(file_name)) == '.' then\n        return 'No'\n    end\n    if\
    \ string.sub(file_name, 1, 1) ~= '.' then\n        return 'No'\n    end\n    if\
    \ string.sub(file_name, string.len(file_name) - 1, string.len(file_name)) ~= '.'\
    \ then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 1) ~= '.'\
    \ then\n        return 'No'\n    end\n    if string.sub(file_name, string.len(file_name)\
    \ - 1, string.len(file_name)) ~= '.' then\n        return 'No'\n    end\n    if\
    \ string.sub(file_name, 1, 1) ~= '.' then\n        return 'No'\n    end\n    if\
    \ string.sub(file_name, string.len(file_name) - 1, string.len(file_name)) ~= '.'\
    \ then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 1) ~= '.'\
    \ then\n        return 'No'\n    end\n    if string.sub(file_name, string.len(file_name)\
    \ - 1, string.len(file_name)) ~= '.' then\n        return 'No'\n    end\n    if\
    \ string.sub(file_name, 1, 1) ~= '.' then\n        return 'No'\n    end\n    if\
    \ string.sub(file_name, string.len(file_name) - 1, string.len(file_name)) ~= '.'\
    \ then\n        return 'No'\n    end\n    ", "    if #file_name < 3 then\n   \
    \     return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]+') then\n\
    \        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]') then\n    \
    \    return 'No'\n    end\n    if file_name:match('^[0-9][a-zA-Z]') then\n   \
    \     return 'No'\n    end\n    if file_name:match('^[a-zA-Z][0-9][a-zA-Z]') then\n\
    \        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][0-9][a-zA-Z][0-9][a-zA-Z]')\
    \ then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][0-9][a-zA-Z][0-9][a-zA-Z][0-9][a-zA-Z]')\
    \ then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][0-9][a-zA-Z][0-9][a-zA-Z][0-9][a-zA-Z][0-9][a-zA-Z]')\
    \ then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][0-9][a-zA-Z][0-9][a-zA-Z][0-9][a-zA-Z][0-9][a-zA-Z][0-9][a-zA-Z]')\
    \ then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][0-9][a-zA-Z][0-9][a-zA-Z][0-9][a-zA-Z][0-9][a-zA-Z][0-9][a-zA-Z][0-9][a-zA-Z]')\
    \ then\n        return 'No", "    if #file_name < 3 then\n        return 'No'\n\
    \    end\n    if file_name ~= file_name:match('^[0-9]{3}[.]') then\n        return\
    \ 'No'\n    end\n    local dot_index = string.find(file_name, '.')\n    local\
    \ before_dot = string.sub(file_name, 1, dot_index)\n    local after_dot = string.sub(file_name,\
    \ dot_index + 1)\n    if not before_dot then\n        return 'No'\n    end\n \
    \   if not string.sub(before_dot, 1, 1) ~= 'a'..'z' or not string.sub(before_dot,\
    \ 1, 1) ~= 'A'..'Z' then\n        return 'No'\n    end\n    if not after_dot in\
    \ ['txt', 'exe', 'dll'] then\n        return 'No'\n    end\n    return 'Yes'\n\
    end", "    local dot_index = string.find(file_name, '.')\n    local dot_before_index\
    \ = string.find(file_name, '.', 1, dot_index)\n    local dot_after_index = string.find(file_name,\
    \ '.', dot_index + 1)\n    local dot_before_is_digit = (dot_before_index ~= nil\
    \ and string.sub(file_name, 1, dot_before_index) ~= '' and string.sub(file_name,\
    \ dot_before_index + 1, 1) ~= '')\n    local dot_after_is_valid = (dot_after_index\
    \ ~= nil and string.sub(file_name, dot_index + 1, dot_after_index) in ['txt',\
    \ 'exe', 'dll'])\n    local dot_before_is_letter = (dot_before_index ~= nil and\
    \ string.sub(file_name, 1, dot_before_index) ~= '' and string.sub(file_name, dot_before_index\
    \ + 1, 1) ~= '' and string.sub(file_name, 1, dot_before_index) ~= '_')\n    local\
    \ dot_after_is_letter = (dot_after_index ~= nil and string.sub(file_name, dot_index\
    \ + 1, dot_after_index) ~= '' and string.sub(file_name, dot_index + 1, dot_after_index)\
    \ ~= '_')\n    if dot_before_is_digit and dot_after_is_valid and dot_before_is_letter\
    \ and dot_after_is_letter then\n        return 'Yes'\n    else\n        return\
    \ 'No'\nend", "    if #file_name < 3 then\n        return 'No'\n    end\n    if\
    \ file_name ~= file_name:match('^[0-9]{3}\\\\.[a-zA-Z]{1}[a-zA-Z0-9]{1}\\\\.[a-zA-Z]{1}$')\
    \ then\n        return 'No'\n    end\n    return 'Yes'\nend", "    if #file_name\
    \ < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}[a-zA-Z]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{",
  "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('[0-9]{3}')\
    \ then\n        return 'No'\n    end\n    if file_name:match('[^a-zA-Z]') then\n\
    \        return 'No'\n    end\n    if file_name:match('^[^a-zA-Z]') then\n   \
    \     return 'No'\n    end\n    if file_name:match('[^a-zA-Z0-9]') then\n    \
    \    return 'No'\n    end\n    if file_name:match('^[^a-zA-Z0-9]') then\n    \
    \    return 'No'\n    end\n    if file_name:match('[^a-zA-Z0-9]{3}') then\n  \
    \      return 'No'\n    end\n    if file_name:match('^[^a-zA-Z0-9]{3}') then\n\
    \        return 'No'\n    end\n    if file_name:match('[^a-zA-Z0-9]{3}[^a-zA-Z0-9]')\
    \ then\n        return 'No'\n    end\n    if file_name:match('^[^a-zA-Z0-9]{3}[^a-zA-Z0-9]')\
    \ then\n        return 'No'\n    end\n    if file_name:match('[^a-zA-Z0-9]{3}[^a-zA-Z0-9]{3}')\
    \ then\n        return 'No'\n    end\n    if file_name:match('^[^a-zA-Z0-9]{3}[^a-zA-Z0-9]{3}')\
    \ then\n        return 'No'\n    end\n    return 'Yes'\nend", "    if #file_name\
    \ > 3 then\n        return 'No'\n    end\n    if file_name ~= '' then\n      \
    \  if string.sub(file_name, 1, 3) ~= '0-9' then\n            return 'No'\n   \
    \     end\n        if string.sub(file_name, 4, 4) ~= '.' then\n            return\
    \ 'No'\n        end\n        if string.sub(file_name, 5, 5) ~= '.' then\n    \
    \        return 'No'\n        end\n        if string.sub(file_name, 6, 6) ~= '.'\
    \ then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 7, 7) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 8, 8) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 9, 9) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 10, 10) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 11, 11) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 12, 12) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 13, 13) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 14, 14) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 15, 15) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 16, 16) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 17, 17) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 18, 18) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 19, 19) ~=", "    local result = 'No'\n    if #file_name == 0 then\n       \
    \ result = 'No'\n    elseif #file_name == 1 then\n        result = 'Yes'\n   \
    \ elseif #file_name == 2 then\n        result = 'Yes'\n    elseif #file_name ==\
    \ 3 then\n        result = 'Yes'\n    elseif #file_name == 4 then\n        result\
    \ = 'Yes'\n    elseif #file_name == 5 then\n        result = 'Yes'\n    elseif\
    \ #file_name == 6 then\n        result = 'Yes'\n    elseif #file_name == 7 then\n\
    \        result = 'Yes'\n    elseif #file_name == 8 then\n        result = 'Yes'\n\
    \    elseif #file_name == 9 then\n        result = 'Yes'\n    elseif #file_name\
    \ == 10 then\n        result = 'Yes'\n    elseif #file_name == 11 then\n     \
    \   result = 'Yes'\n    elseif #file_name == 12 then\n        result = 'Yes'\n\
    \    elseif #file_name == 13 then\n        result = 'Yes'\n    elseif #file_name\
    \ == 14 then\n        result = 'Yes'\n    elseif #file_name == 15 then\n     \
    \   result = 'Yes'\n    elseif #file_name == 16 then\n        result = 'Yes'\n\
    \    elseif #file_name == 17 then\n        result = 'Yes'\n    elseif #file_name\
    \ == 18 then\n        result = 'Yes'\n    elseif #file_name == 19 then\n     \
    \   result = 'Yes'\n    elseif #file_name == 20 then\n        result = 'Yes'\n\
    \    elseif #file_name == 21 then\n        result = 'Yes'\n    elseif #file_name\
    \ == 22 then\n        result = 'Yes'\n    elseif #file_name == 23 then\n     \
    \   result = 'Yes'\n    elseif #file_name == 24 then\n        result = 'Yes'\n\
    \    elseif #file_name == 25 then\n        result = 'Yes'\n    elseif #file_name\
    \ == 26 then\n        result = 'Yes'\n    elseif #file_name == 27 then\n     \
    \   result = 'Yes'\n    ", "    local valid = true\n    local dot_index = string.find(file_name,\
    \ '.')\n    local dot_substring = string.sub(file_name, 1, dot_index)\n    local\
    \ dot_substring_length = #dot_substring\n    local dot_substring_upper = string.upper(dot_substring)\n\
    \    local dot_substring_lower = string.lower(dot_substring)\n    local dot_substring_upper_length\
    \ = #dot_substring_upper\n    local dot_substring_lower_length = #dot_substring_lower\n\
    \    local dot_substring_upper_index = string.find(dot_substring_upper, '.')\n\
    \    local dot_substring_lower_index = string.find(dot_substring_lower, '.')\n\
    \    local dot_substring_upper_index_length = #dot_substring_upper_index\n   \
    \ local dot_substring_lower_index_length = #dot_substring_lower_index\n    local\
    \ dot_substring_upper_index_index = string.find(dot_substring_upper, 'a')\n  \
    \  local dot_substring_lower_index_index = string.find(dot_substring_lower, 'a')\n\
    \    local dot_substring_upper_index_index_length = #dot_substring_upper_index_index\n\
    \    local dot_substring_lower_index_index_length = #dot_substring_lower_index_index\n\
    \    local dot_substring_upper_index_index_index = string.find(dot_substring_upper,\
    \ 'A')\n    local dot_substring_lower_index_index_index = string.find(dot_substring_lower,\
    \ 'A')\n    local dot_substring_upper_index_index_index_length = #dot_substring_upper_index_index_index\n\
    \    local dot_substring_lower_index_index_index_length = #dot_substring_lower_index_index_index\n\
    \    local dot_substring_upper_index_index_index_index = string.find(dot_substring_upper,\
    \ '0')\n    local dot_substring_lower_index_index_", "    if #file_name > 3 then\n\
    \        return 'No'\n    end\n    if #file_name == 0 then\n        return 'No'\n\
    \    end\n    if file_name:sub(1,1) ~= '.' then\n        return 'No'\n    end\n\
    \    if file_name:sub(2,2) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(3,3)\
    \ ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(4,4) ~= '.'\
    \ then\n        return 'No'\n    end\n    if file_name:sub(5,5) ~= '.' then\n\
    \        return 'No'\n    end\n    if file_name:sub(6,6) ~= '.' then\n       \
    \ return 'No'\n    end\n    if file_name:sub(7,7) ~= '.' then\n        return\
    \ 'No'\n    end\n    if file_name:sub(8,8) ~= '.' then\n        return 'No'\n\
    \    end\n    if file_name:sub(9,9) ~= '.' then\n        return 'No'\n    end\n\
    \    if file_name:sub(10,10) ~= '.' then\n        return 'No'\n    end\n    if\
    \ file_name:sub(11,11) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(12,12)\
    \ ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(13,13) ~= '.'\
    \ then\n        return 'No'\n    end\n    if file_name:sub(14,14) ~= '.' then\n\
    \        return 'No'\n    end\n    if file_name:sub(15,15) ~= '.' then\n     \
    \   return 'No'\n    end\n    if file_name:sub(16,16) ~= '.' then\n        return\
    \ 'No'\n    end\n    if file_name:sub(17,17) ~= '.' then\n        return 'No'\n\
    \    end\n    if file_name:sub(18,18) ~= '", "    local valid = true\n    local\
    \ dot_index = string.find(file_name, '.')\n    local dot_substring = string.lower(file_name[1:dot_index])\n\
    \    local dot_substring_length = #dot_substring\n    local dot_substring_first_letter\
    \ = string.lower(dot_substring[1])\n    local dot_substring_last_letter = string.lower(dot_substring[dot_substring_length])\n\
    \    local dot_substring_middle_letter = string.lower(dot_substring[1:dot_substring_length])\n\
    \    local dot_substring_middle_letter_length = #dot_substring_middle_letter\n\
    \    local dot_substring_middle_letter_first_letter = string.lower(dot_substring_middle_letter[1])\n\
    \    local dot_substring_middle_letter_last_letter = string.lower(dot_substring_middle_letter[dot_substring_middle_letter_length])\n\
    \    local dot_substring_middle_letter_middle_letter = string.lower(dot_substring_middle_letter[1:dot_substring_middle_letter_length])\n\
    \    local dot_substring_middle_letter_middle_letter_length = #dot_substring_middle_letter_middle_letter\n\
    \    local dot_substring_middle_letter_middle_letter_first_letter = string.lower(dot_substring_middle_letter_middle_letter[1])\n\
    \    local dot_substring_middle_letter_middle_letter_last_letter = string.lower(dot_substring_middle_letter_middle_letter[dot_substring_middle_letter_middle_letter_length])\n\
    \    local dot_substring_middle_letter_middle_letter_middle_letter = string.lower(dot_substring_middle_letter_middle_letter[1:dot_substring_middle_letter_middle_letter_length])\n\
    \    local dot_substring_middle_letter_middle_letter_middle_letter_length = #dot_substring_middle_letter_middle_letter_middle_letter\n\
    \    local dot_substring_middle_letter_middle_letter_middle_letter_", "    local\
    \ valid = true\n    local dot_index = string.find(file_name, '.')\n    local dot_substring\
    \ = string.sub(file_name, 1, dot_index)\n    local dot_substring_length = #dot_substring\n\
    \    local dot_substring_upper = string.upper(dot_substring)\n    local dot_substring_lower\
    \ = string.lower(dot_substring)\n    local dot_substring_upper_length = #dot_substring_upper\n\
    \    local dot_substring_lower_length = #dot_substring_lower\n    local dot_substring_upper_index\
    \ = string.find(dot_substring_upper, '.')\n    local dot_substring_lower_index\
    \ = string.find(dot_substring_lower, '.')\n    local dot_substring_upper_index_length\
    \ = #dot_substring_upper_index\n    local dot_substring_lower_index_length = #dot_substring_lower_index\n\
    \    local dot_substring_upper_index_index = string.find(dot_substring_upper,\
    \ 'a')\n    local dot_substring_lower_index_index = string.find(dot_substring_lower,\
    \ 'a')\n    local dot_substring_upper_index_index_length = #dot_substring_upper_index_index\n\
    \    local dot_substring_lower_index_index_length = #dot_substring_lower_index_index\n\
    \    local dot_substring_upper_index_index_index = string.find(dot_substring_upper,\
    \ 'A')\n    local dot_substring_lower_index_index_index = string.find(dot_substring_lower,\
    \ 'A')\n    local dot_substring_upper_index_index_index_length = #dot_substring_upper_index_index_index\n\
    \    local dot_substring_lower_index_index_index_length = #dot_substring_lower_index_index_index\n\
    \    local dot_substring_upper_index_index_index_index = string.find(dot_substring_upper,\
    \ '0')\n    local dot_substring_lower_index_index_", "    if #file_name < 3 then\n\
    \        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}\\\
    \\.[a-zA-Z]{1}[a-zA-Z0-9]{1}\\\\.[a-zA-Z]{1}$') then\n        return 'No'\n  \
    \  end\n    return 'Yes'\nend", "    if #file_name < 3 then\n        return 'No'\n\
    \    end\n    if file_name ~= file_name:match('^[0-9]{3}[.]') then\n        return\
    \ 'No'\n    end\n    if not file_name:match('^[a-zA-Z]') then\n        return\
    \ 'No'\n    end\n    if not file_name:match('[.](txt|exe|dll)$') then\n      \
    \  return 'No'\n    end\n    return 'Yes'\nend", "    if string.len(file_name)\
    \ < 3 or string.len(file_name) > 6 then\n        return 'No'\n    end\n    if\
    \ string.sub(file_name, 1, 2) == '0-9' then\n        return 'No'\n    end\n  \
    \  if string.sub(file_name, 3, 4) == '.' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 4, 5) == '.' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 5, 6) == '.' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 6, 7) == '.' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 7, 8) == '.' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 8, 9) == '.' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 9, 10) == '.' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 10, 11) == '.' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 11, 12) == '.' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 12, 13) == '.' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 13, 14) == '.' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 14, 15) == '.' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 15, 16) == '.' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 16, 17) == '.' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 17, 18) == '.' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 18, 19) == '.' then\n        return 'No'\n    end",
  "    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3\
    \ then\n        return 'No'\n    end\n    if file_name ~= '.' then\n        return\
    \ 'No'\n    end\n    if string.sub(file_name, 1, 1) ~= '.' then\n        return\
    \ 'No'\n    end\n    if string.sub(file_name, 2, 2) ~= '.' then\n        return\
    \ 'No'\n    end\n    if string.sub(file_name, 3, 3) ~= '.' then\n        return\
    \ 'No'\n    end\n    if string.sub(file_name, 4, 4) ~= '.' then\n        return\
    \ 'No'\n    end\n    if string.sub(file_name, 5, 5) ~= '.' then\n        return\
    \ 'No'\n    end\n    if string.sub(file_name, 6, 6) ~= '.' then\n        return\
    \ 'No'\n    end\n    if string.sub(file_name, 7, 7) ~= '.' then\n        return\
    \ 'No'\n    end\n    if string.sub(file_name, 8, 8) ~= '.' then\n        return\
    \ 'No'\n    end\n    if string.sub(file_name, 9, 9) ~= '.' then\n        return\
    \ 'No'\n    end\n    if string.sub(file_name, 10, 10) ~= '.' then\n        return\
    \ 'No'\n    end\n    if string.sub(file_name, 11, 11) ~= '.' then\n        return\
    \ 'No'\n    end\n    if string.sub(file_name, 12, 12) ~= '.' then\n        return\
    \ 'No'\n    end\n    if string.sub(file_name, 13, 13) ~= '.' then\n        return\
    \ 'No'\n    end\n    if string.sub(file_name, 14, 14) ~= '.' then\n        return\
    \ 'No'\n    end\n    if string.sub(file_name, 15, 15) ~= '.' then\n        return\
    \ 'No'\n    end\n    if string.sub(file_name, 16, 16) ~= '.' then", "    local\
    \ result = 'No'\n    if #file_name == 3 and file_name ~= '0' and file_name ~=\
    \ '1' and file_name ~= '2' and file_name ~= '3' and file_name ~= '4' and file_name\
    \ ~= '5' and file_name ~= '6' and file_name ~= '7' and file_name ~= '8' and file_name\
    \ ~= '9' then\n        result = 'Yes'\n    end\n    return result\nend", "   \
    \ if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[a-zA-Z][a-zA-Z0-9]{2}\\\
    \\.[a-zA-Z0-9]{2}$') then\n        return 'No'\n    end\n    if file_name:match('^[0-9][0-9][0-9]$')\
    \ then\n        return 'No'\n    end\n    return 'Yes'\nend", "    if #file_name\
    \ > 3 then\n        return 'No'\n    end\n    if #file_name < 2 then\n       \
    \ return 'No'\n    end\n    if file_name:sub(1,1) ~= '.' then\n        return\
    \ 'No'\n    end\n    if file_name:sub(2,2) ~= '.' then\n        return 'No'\n\
    \    end\n    if file_name:sub(3,3) ~= '.' then\n        return 'No'\n    end\n\
    \    if file_name:sub(4,4) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(5,5)\
    \ ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(6,6) ~= '.'\
    \ then\n        return 'No'\n    end\n    if file_name:sub(7,7) ~= '.' then\n\
    \        return 'No'\n    end\n    if file_name:sub(8,8) ~= '.' then\n       \
    \ return 'No'\n    end\n    if file_name:sub(9,9) ~= '.' then\n        return\
    \ 'No'\n    end\n    if file_name:sub(10,10) ~= '.' then\n        return 'No'\n\
    \    end\n    if file_name:sub(11,11) ~= '.' then\n        return 'No'\n    end\n\
    \    if file_name:sub(12,12) ~= '.' then\n        return 'No'\n    end\n    if\
    \ file_name:sub(13,13) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(14,14)\
    \ ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(15,15) ~= '.'\
    \ then\n        return 'No'\n    end\n    if file_name:sub(16,16) ~= '.' then\n\
    \        return 'No'\n    end\n    if file_name:sub(17,17) ~= '.' then\n     \
    \   return 'No'\n    end\n    if file_name:sub(18,18) ~= '", "    if string.len(file_name)\
    \ > 3 then\n        return 'No'\n    end\n    if string.len(file_name) < 3 then\n\
    \        return 'No'\n    end\n    if string.sub(file_name, 1, 2) == '0' or string.sub(file_name,\
    \ 1, 2) == '1' or string.sub(file_name, 1, 2) == '2' or string.sub(file_name,\
    \ 1, 2) == '3' or string.sub(file_name, 1, 2) == '4' or string.sub(file_name,\
    \ 1, 2) == '5' or string.sub(file_name, 1, 2) == '6' or string.sub(file_name,\
    \ 1, 2) == '7' or string.sub(file_name, 1, 2) == '8' or string.sub(file_name,\
    \ 1, 2) == '9' then\n        return 'No'\n    end\n    if string.sub(file_name,\
    \ string.len(file_name) - 2, 2) == '.' then\n        return 'No'\n    end\n  \
    \  if string.sub(file_name, 1, 1) ~= '.' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, string.len(file_name) - 3, 3) == '.exe' or string.sub(file_name,\
    \ string.len(file_name) - 3, 3) == '.dll' or string.sub(file_name, string.len(file_name)\
    \ - 3, 3) == '.txt' then\n        return 'Yes'\n    end\n    return 'No'\nend",
  "    local valid = true\n    local dot_index = string.find(file_name, '.')\n   \
    \ local dot_substring = string.sub(file_name, 1, dot_index)\n    local dot_substring_length\
    \ = #dot_substring\n    local dot_substring_upper = string.upper(dot_substring)\n\
    \    local dot_substring_lower = string.lower(dot_substring)\n    local dot_substring_upper_length\
    \ = #dot_substring_upper\n    local dot_substring_lower_length = #dot_substring_lower\n\
    \    local dot_substring_upper_index = string.find(dot_substring_upper, '.')\n\
    \    local dot_substring_lower_index = string.find(dot_substring_lower, '.')\n\
    \    local dot_substring_upper_index_length = #dot_substring_upper_index\n   \
    \ local dot_substring_lower_index_length = #dot_substring_lower_index\n    local\
    \ dot_substring_upper_index_index = string.find(dot_substring_upper, 'a')\n  \
    \  local dot_substring_lower_index_index = string.find(dot_substring_lower, 'a')\n\
    \    local dot_substring_upper_index_index_length = #dot_substring_upper_index_index\n\
    \    local dot_substring_lower_index_index_length = #dot_substring_lower_index_index\n\
    \    if dot_substring_length == 3 or dot_substring_upper_length != 1 or dot_substring_lower_length\
    \ != 1 or dot_substring_upper_index != 1 or dot_substring_lower_index != 1 or\
    \ dot_substring_upper_index_index != 1 or dot_substring_lower_index_index != 1\
    \ or dot_substring_upper_index_index_length != 1 or dot_substring_lower_index_index_length\
    \ != 1 then\n        valid = false\n    end\n    return valid\nend", "    if #file_name\
    \ > 3 then\n        return 'No'\n    end\n    if #file_name < 1 then\n       \
    \ return 'No'\n    end\n    if file_name:sub(1,1) ~= '.' then\n        return\
    \ 'No'\n    end\n    if file_name:sub(2,2) ~= '.' then\n        return 'No'\n\
    \    end\n    if file_name:sub(3,3) ~= '.' then\n        return 'No'\n    end\n\
    \    if file_name:sub(4,4) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(5,5)\
    \ ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(6,6) ~= '.'\
    \ then\n        return 'No'\n    end\n    if file_name:sub(7,7) ~= '.' then\n\
    \        return 'No'\n    end\n    if file_name:sub(8,8) ~= '.' then\n       \
    \ return 'No'\n    end\n    if file_name:sub(9,9) ~= '.' then\n        return\
    \ 'No'\n    end\n    return 'Yes'\nend", "    if #file_name < 3 then\n       \
    \ return 'No'\n    end\n    if file_name ~= file_name:match('^[a-zA-Z][a-zA-Z0-9]{0,2}\\\
    \\.[a-zA-Z]{3}$') then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[a-zA-Z][a-zA-Z0-9]{0,2}\\\
    \\.[a-zA-Z]{3}[a-zA-Z]{3}$') then\n        return 'No'\n    end\n    if file_name\
    \ ~= file_name:match('^[a-zA-Z][a-zA-Z0-9]{0,2}\\\\.[a-zA-Z]{3}[a-zA-Z]{3}[a-zA-Z]{3}$')\
    \ then\n        return 'No'\n    end\n    return 'Yes'\nend", "    if #file_name\
    \ < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[a-zA-Z]')\
    \ then\n        return 'No'\n    end\n    if file_name:match('^[0-9]') then\n\
    \        return 'No'\n    end\n    if file_name:match('^[0-9][0-9][0-9]') then\n\
    \        return 'No'\n    end\n    if file_name:match('^[0-9][0-9][0-9][0-9][0-9][0-9]')\
    \ then\n        return 'No'\n    end\n    if file_name:match('^[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9",
  "    if #file_name == 0 then\n        return 'No'\n    end\n    if #file_name >\
    \ 3 then\n        return 'No'\n    end\n    if file_name ~= '.' then\n       \
    \ return 'No'\n    end\n    local dot_index = string.find(file_name, '.')\n  \
    \  local file_name_before_dot = string.sub(file_name, 1, dot_index)\n    if #file_name_before_dot\
    \ == 0 then\n        return 'No'\n    end\n    if not string.sub(file_name_before_dot,\
    \ 1, 1) ~= 'a' .. 'z' or not string.sub(file_name_before_dot, 1, 1) ~= 'A' ..\
    \ 'Z' then\n        return 'No'\n    end\n    local file_name_after_dot = string.sub(file_name,\
    \ dot_index + 1)\n    if file_name_after_dot ~= 'txt' and file_name_after_dot\
    \ ~= 'exe' and file_name_after_dot ~= 'dll' then\n        return 'No'\n    end\n\
    \    return 'Yes'\nend", "    local valid = true\n    local dot_index = string.find(file_name,\
    \ '.')\n    local dot_substring = string.sub(file_name, 1, dot_index)\n    local\
    \ dot_substring_length = #dot_substring\n    local dot_substring_upper = string.upper(dot_substring)\n\
    \    local dot_substring_lower = string.lower(dot_substring)\n    local dot_substring_upper_length\
    \ = #dot_substring_upper\n    local dot_substring_lower_length = #dot_substring_lower\n\
    \    local dot_substring_upper_index = string.find(dot_substring_upper, '.')\n\
    \    local dot_substring_lower_index = string.find(dot_substring_lower, '.')\n\
    \    local dot_substring_upper_index_length = #dot_substring_upper_index\n   \
    \ local dot_substring_lower_index_length = #dot_substring_lower_index\n    if\
    \ dot_substring_length > 3 or dot_substring_upper_length > 3 or dot_substring_lower_length\
    \ > 3 or dot_substring_upper_index > 0 or dot_substring_lower_index > 0 then\n\
    \        valid = false\n    end\n    if dot_substring_upper_index_length == 0\
    \ or dot_substring_lower_index_length == 0 then\n        valid = false\n    end\n\
    \    if valid == true then\n        if dot_substring_upper_index > 0 and dot_substring_lower_index\
    \ == 0 then\n            valid = false\n        end\n        if dot_substring_lower_index\
    \ > 0 and dot_substring_upper_index == 0 then\n            valid = false\n   \
    \     end\n        if valid == true then\n            if dot_substring_upper_index_length\
    \ > 1 or dot_substring_lower_index_length > 1 then\n                valid = false\n\
    \            end\n            if valid == true then\n                if dot_substring_upper_index\
    \ > 0 and dot_substring_upper_index_length > 1 then\n                    valid\
    \ = false\n                end\n                if valid == true then\n      \
    \              if dot_substring_lower_index", "    if #file_name > 3 then\n  \
    \      return 'No'\n    end\n    if #file_name < 1 then\n        return 'No'\n\
    \    end\n    if file_name:sub(1,1) ~= '.' then\n        return 'No'\n    end\n\
    \    if file_name:sub(2,2) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(3,3)\
    \ ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(4,4) ~= '.'\
    \ then\n        return 'No'\n    end\n    if file_name:sub(5,5) ~= '.' then\n\
    \        return 'No'\n    end\n    if file_name:sub(6,6) ~= '.' then\n       \
    \ return 'No'\n    end\n    if file_name:sub(7,7) ~= '.' then\n        return\
    \ 'No'\n    end\n    if file_name:sub(8,8) ~= '.' then\n        return 'No'\n\
    \    end\n    if file_name:sub(9,9) ~= '.' then\n        return 'No'\n    end\n\
    \    if file_name:sub(10,10) ~= '.' then\n        return 'No'\n    end\n    if\
    \ file_name:sub(11,11) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(12,12)\
    \ ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(13,13) ~= '.'\
    \ then\n        return 'No'\n    end\n    if file_name:sub(14,14) ~= '.' then\n\
    \        return 'No'\n    end\n    if file_name:sub(15,15) ~= '.' then\n     \
    \   return 'No'\n    end\n    if file_name:sub(16,16) ~= '.' then\n        return\
    \ 'No'\n    end\n    if file_name:sub(17,17) ~= '.' then\n        return 'No'\n\
    \    end\n    if file_name:sub(18,18) ~= '", "    if #file_name < 3 then\n   \
    \     return 'No'\n    end\n    if file_name ~= string.gsub(file_name, '^[0-9]*.',\
    \ '') then\n        return 'No'\n    end\n    if not string.sub(file_name, 1,\
    \ 1) ~= string.gsub(file_name, '^[a-zA-Z]*.', '') then\n        return 'No'\n\
    \    end\n    if not string.sub(file_name, 2, 2) in ['txt', 'exe', 'dll'] then\n\
    \        return 'No'\n    end\n    return 'Yes'\nend", "    if #file_name < 3\
    \ then\n        return 'No'\n    end\n    if file_name ~= file_name:match('[0-9]{3}')\
    \ then\n        return 'No'\n    end\n    local dot_index = string.find(file_name,\
    \ '.')\n    if dot_index == nil then\n        return 'No'\n    end\n    local\
    \ file_name_before_dot = string.sub(file_name, 1, dot_index)\n    if file_name_before_dot\
    \ == '' then\n        return 'No'\n    end\n    if not string.sub(file_name_before_dot,\
    \ 1, 1) ~= '[' then\n        return 'No'\n    end\n    local file_name_after_dot\
    \ = string.sub(file_name, dot_index + 1)\n    if file_name_after_dot ~= 'txt'\
    \ and file_name_after_dot ~= 'exe' and file_name_after_dot ~= 'dll' then\n   \
    \     return 'No'\n    end\n    return 'Yes'\nend", "    if #file_name < 3 then\n\
    \        return 'No'\n    end\n    if file_name ~= string.gsub(file_name, '^[0-9]',\
    \ '') then\n        return 'No'\n    end\n    if not file_name[1] ~= '.' then\n\
    \        return 'No'\n    end\n    if not string.gsub(file_name, '^[a-zA-Z]',\
    \ '') then\n        return 'No'\n    end\n    if string.gsub(file_name, '^[0-9]',\
    \ '') then\n        return 'No'\n    end\n    if string.gsub(file_name, '^[a-zA-Z]',\
    \ '') then\n        return 'No'\n    end\n    if string.gsub(file_name, '^[0-9]',\
    \ '') then\n        return 'No'\n    end\n    if string.gsub(file_name, '^[a-zA-Z]',\
    \ '') then\n        return 'No'\n    end\n    if string.gsub(file_name, '^[0-9]',\
    \ '') then\n        return 'No'\n    end\n    if string.gsub(file_name, '^[a-zA-Z]',\
    \ '') then\n        return 'No'\n    end\n    return 'Yes'\nend", "    if #file_name\
    \ < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}[a-zA-Z]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}$')\
    \ then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[a-zA-Z][a-zA-Z0-9]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}$')\
    \ then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9][a-zA-Z]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}$')\
    \ then\n        return 'No'\n    end\n    return 'Yes'\nend", "    local valid\
    \ = true\n    local dot_index = string.find(file_name, '.')\n    local dot_substring\
    \ = string.lower(file_name[1:dot_index])\n    local dot_substring_length = len(dot_substring)\n\
    \    local dot_substring_first_letter = string.lower(dot_substring[1])\n    local\
    \ dot_substring_last_letter = string.lower(dot_substring[dot_substring_length])\n\
    \    local dot_substring_middle_letter = string.lower(dot_substring[dot_substring_length\
    \ - 1])\n    local dot_substring_middle_letter_before_dot = string.lower(dot_substring[dot_substring_length\
    \ - 2])\n    local dot_substring_middle_letter_after_dot = string.lower(dot_substring[dot_substring_length\
    \ + 1])\n    local dot_substring_middle_letter_before_dot_before_dot = string.lower(dot_substring[dot_substring_length\
    \ - 3])\n    local dot_substring_middle_letter_before_dot_after_dot = string.lower(dot_substring[dot_substring_length\
    \ - 2])\n    local dot_substring_middle_letter_after_dot_before_dot = string.lower(dot_substring[dot_substring_length\
    \ + 2])\n    local dot_substring_middle_letter_after_dot_after_dot = string.lower(dot_substring[dot_substring_length\
    \ + 3])\n    if dot_substring_length > 3 or dot_substring_length < 1 or not (dot_substring_first_letter\
    \ >= 'a' and dot_substring_first_letter <= 'z') or not (dot_substring_last_letter\
    \ >= 'a' and dot_substring_last_letter <= 'z') or not (dot_substring_middle_letter\
    \ >= 'a' and dot_substring_middle_letter <= 'z') or not (dot_substring_middle_letter_before_dot\
    \ >= 'a' and dot_substring_middle_letter_before_dot <= 'z') or not (dot_substring_middle",
  "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}\\\
    \\.[a-zA-Z]{1}[a-zA-Z0-9]{1}\\\\.[a-zA-Z]{1}$') then\n        return 'No'\n  \
    \  end\n    return 'Yes'\nend", "    if #file_name < 3 then\n        return 'No'\n\
    \    end\n    if file_name ~= file_name:match('^[a-zA-Z]') then\n        return\
    \ 'No'\n    end\n    if file_name:match('^[0-9]') then\n        return 'No'\n\
    \    end\n    if file_name:match('^[0-9][0-9][0-9]') then\n        return 'No'\n\
    \    end\n    if file_name:match('^[0-9][0-9][0-9].[a-zA-Z]') then\n        return\
    \ 'No'\n    end\n    if file_name:match('^[0-9][0-9][0-9].[a-zA-Z].[a-zA-Z]')\
    \ then\n        return 'No'\n    end\n    if file_name:match('^[0-9][0-9][0-9].[a-zA-Z].[a-zA-Z].[a-zA-Z]')\
    \ then\n        return 'No'\n    end\n    return 'Yes'\nend", "    if #file_name\
    \ < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}[.]')\
    \ then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]') then\n\
    \        return 'No'\n    end\n    if file_name:match('[.](txt|exe|dll)$') then\n\
    \        return 'Yes'\n    end\n    return 'No'\nend", "    if #file_name > 3\
    \ then\n        return 'No'\n    end\n    if #file_name == 0 then\n        return\
    \ 'No'\n    end\n    if file_name:sub(1, #file_name) ~= '.' then\n        return\
    \ 'No'\n    end\n    if file_name:sub(file_name:find('.'), 1, #file_name) == ''\
    \ then\n        return 'No'\n    end\n    if file_name:sub(file_name:find('.')\
    \ + 1, #file_name) ~= 'txt' and file_name:sub(file_name:find('.') + 1, #file_name)\
    \ ~= 'exe' and file_name:sub(file_name:find('.') + 1, #file_name) ~= 'dll' then\n\
    \        return 'No'\n    end\n    return 'Yes'\nend", "    if #file_name < 3\
    \ then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}[.]')\
    \ then\n        return 'No'\n    end\n    if not file_name:match('^[a-zA-Z]')\
    \ then\n        return 'No'\n    end\n    if not file_name:match('[.](txt|exe|dll)$')\
    \ then\n        return 'No'\n    end\n    return 'Yes'\nend", "    if #file_name\
    \ > 3 then\n        return 'No'\n    end\n    if file_name ~= '' then\n      \
    \  if string.sub(file_name, 1, 3) ~= '0-9' then\n            return 'No'\n   \
    \     end\n        if string.sub(file_name, 4, 4) ~= '.' then\n            return\
    \ 'No'\n        end\n        if string.sub(file_name, 5, 5) ~= '.' then\n    \
    \        return 'No'\n        end\n        if string.sub(file_name, 6, 6) ~= '.'\
    \ then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 7, 7) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 8, 8) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 9, 9) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 10, 10) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 11, 11) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 12, 12) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 13, 13) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 14, 14) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 15, 15) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 16, 16) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 17, 17) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 18, 18) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 19, 19) ~=", "    if #file_name > 3 then\n        return 'No'\n    end\n   \
    \ if #file_name < 1 then\n        return 'No'\n    end\n    if file_name:sub(1,1)\
    \ ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(2,2) ~= '.'\
    \ then\n        return 'No'\n    end\n    if file_name:sub(3,3) ~= '.' then\n\
    \        return 'No'\n    end\n    if file_name:sub(4,4) ~= '.' then\n       \
    \ return 'No'\n    end\n    if file_name:sub(5,5) ~= '.' then\n        return\
    \ 'No'\n    end\n    if file_name:sub(6,6) ~= '.' then\n        return 'No'\n\
    \    end\n    if file_name:sub(7,7) ~= '.' then\n        return 'No'\n    end\n\
    \    if file_name:sub(8,8) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(9,9)\
    \ ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(10,10) ~= '.'\
    \ then\n        return 'No'\n    end\n    if file_name:sub(11,11) ~= '.' then\n\
    \        return 'No'\n    end\n    if file_name:sub(12,12) ~= '.' then\n     \
    \   return 'No'\n    end\n    if file_name:sub(13,13) ~= '.' then\n        return\
    \ 'No'\n    end\n    if file_name:sub(14,14) ~= '.' then\n        return 'No'\n\
    \    end\n    if file_name:sub(15,15) ~= '.' then\n        return 'No'\n    end\n\
    \    if file_name:sub(16,16) ~= '.' then\n        return 'No'\n    end\n    if\
    \ file_name:sub(17,17) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(18,18)\
    \ ~= '", "    if #file_name > 3 then\n        return 'No'\n    end\n    if file_name\
    \ ~= '.' then\n        return 'No'\n    end\n    local file_name_sub = string.sub(file_name,\
    \ 1, #file_name)\n    if not file_name_sub ~= '' then\n        return 'No'\n \
    \   end\n    if not string.sub(file_name_sub, 1, 1) ~= '.' then\n        return\
    \ 'No'\n    end\n    if file_name_sub ~= 'txt' and file_name_sub ~= 'exe' and\
    \ file_name_sub ~= 'dll' then\n        return 'No'\n    end\n    return 'Yes'\n\
    end", "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name\
    \ ~= string.gsub(file_name, '.', '') then\n        return 'No'\n    end\n    if\
    \ not string.sub(file_name, 1, 1) ~= string.gsub(file_name, '.', '') then\n  \
    \      return 'No'\n    end\n    if string.sub(file_name, -3, -1) ~= '0-9' then\n\
    \        return 'No'\n    end\n    return 'Yes'\nend", "    if #file_name < 3\
    \ then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]+')\
    \ then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]') then\n\
    \        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9.]+$')\
    \ then\n        return 'Yes'\n    end\n    return 'No'\nend", "    local valid\
    \ = true\n    local dot_index = string.find(file_name, '.')\n    local dot_substring\
    \ = string.lower(file_name[1:dot_index])\n    local dot_substring_length = #dot_substring\n\
    \    local dot_substring_upper = string.upper(dot_substring)\n    local dot_substring_lower\
    \ = string.lower(dot_substring)\n    local dot_substring_upper_length = #dot_substring_upper\n\
    \    local dot_substring_lower_length = #dot_substring_lower\n    local dot_substring_upper_index\
    \ = string.find(dot_substring_upper, '.')\n    local dot_substring_lower_index\
    \ = string.find(dot_substring_lower, '.')\n    local dot_substring_upper_index_length\
    \ = #dot_substring_upper_index\n    local dot_substring_lower_index_length = #dot_substring_lower_index\n\
    \    if dot_substring_length > 3 then valid = false end\n    if dot_substring_upper_length\
    \ > 1 then valid = false end\n    if dot_substring_lower_length > 1 then valid\
    \ = false end\n    if dot_substring_upper_index > 0 then valid = false end\n \
    \   if dot_substring_lower_index > 0 then valid = false end\n    if dot_substring_upper_index_length\
    \ > 1 then valid = false end\n    if dot_substring_lower_index_length > 1 then\
    \ valid = false end\n    if valid then\n        if dot_substring_upper_index ==\
    \ 0 then\n            if dot_substring_lower_index == 0 then\n               \
    \ if string.sub(dot_substring, 1, 1) ~= '.' then valid = false end\n         \
    \   elseif dot_substring_lower_index == 1 then\n                if string.sub(dot_substring,\
    \ 1, 2) ~= '..' then valid = false end\n            else valid = false\n     \
    \   elseif dot_substring_lower_index == 0 then\n            if string.sub(dot_substring,\
    \ 1, 1) ~= '.' then valid = false end\n        else valid =", "    local valid\
    \ = true\n    local dot_index = string.find(file_name, '.')\n    if dot_index\
    \ == nil then\n        valid = false\n    else\n        local before_dot = string.sub(file_name,\
    \ 1, dot_index)\n        if string.len(before_dot) > 3 then\n            valid\
    \ = false\n        else\n            if string.sub(before_dot, 1, 1) ~= 'a' ..\
    \ 'z' and string.sub(before_dot, 1, 1) ~= 'A' .. 'Z' then\n                valid\
    \ = false\n            end\n            local after_dot = string.sub(file_name,\
    \ dot_index + 1)\n            if string.len(after_dot) > 3 then\n            \
    \    valid = false\n            else\n                if string.sub(after_dot,\
    \ 1, 1) ~= 'a' .. 'z' and string.sub(after_dot, 1, 1) ~= 'A' .. 'Z' then\n   \
    \                 valid = false\n                end\n                local valid_substring\
    \ = 'txt'\n                local valid_substring_index = string.find(valid_substring,\
    \ after_dot)\n                if valid_substring_index == nil then\n         \
    \           valid = false\n                else\n                    local valid_substring_length\
    \ = string.len(valid_substring)\n                    local valid_substring_count\
    \ = 0\n                    for i = 1, valid_substring_length do\n            \
    \            if valid_substring[i] == after_dot[i] then\n                    \
    \        valid_substring_count = valid_substring_count + 1\n                 \
    \       end\n                    end\n                    if valid_substring_count\
    \ < 2 then\n                        valid = false\n                    end\n \
    \               end\n            end\n        end\n    end\n    return valid\n\
    end", "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name\
    \ ~= file_name:match('^[0-9]+') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]+')\
    \ then\n        return 'No'\n    end\n    if file_name:match('^[0-9]+[a-zA-Z]+')\
    \ then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]+[0-9]+')\
    \ then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]+[0-9]+[a-zA-Z]+')\
    \ then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]+[0-9]+[a-zA-Z]+[0-9]+')\
    \ then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]+[0-9]+[a-zA-Z]+[0-9]+[a-zA-Z]+')\
    \ then\n        return 'No'\n    end\n    return 'Yes'\nend", "    if #file_name\
    \ < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]+\\\
    \\.[0-9]+\\\\.[0-9]+$') then\n        return 'No'\n    end\n    if not file_name:match('^[a-zA-Z]\\\
    \\.[a-zA-Z]$') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]\\\
    \\.[a-zA-Z]\\\\.[txt|exe|dll]$') then\n        return 'Yes'\n    end\n    return\
    \ 'No'\nend", "    if string.len(file_name) > 3 and string.sub(file_name, 1, 3)\
    \ == \"0-9\" then\n        return \"No\"\n    end\n    if string.len(file_name)\
    \ > 3 and string.sub(file_name, 1, 3) == \"0-9\" then\n        return \"No\"\n\
    \    end\n    if string.len(file_name) > 3 and string.sub(file_name, 1, 3) ==\
    \ \"0-9\" then\n        return \"No\"\n    end\n    if string.len(file_name) >\
    \ 3 and string.sub(file_name, 1, 3) == \"0-9\" then\n        return \"No\"\n \
    \   end\n    if string.len(file_name) > 3 and string.sub(file_name, 1, 3) == \"\
    0-9\" then\n        return \"No\"\n    end\n    if string.len(file_name) > 3 and\
    \ string.sub(file_name, 1, 3) == \"0-9\" then\n        return \"No\"\n    end\n\
    \    if string.len(file_name) > 3 and string.sub(file_name, 1, 3) == \"0-9\" then\n\
    \        return \"No\"\n    end\n    if string.len(file_name) > 3 and string.sub(file_name,\
    \ 1, 3) == \"0-9\" then\n        return \"No\"\n    end\n    if string.len(file_name)\
    \ > 3 and string.sub(file_name, 1, 3) == \"0-9\" then\n        return \"No\"\n\
    \    end\n    if string.len(file_name) > 3 and string.sub(file_name, 1, 3) ==\
    \ \"0-9\" then\n        return \"No\"\n    end\n    if string.len(file_name) >\
    \ 3 and string.sub(file_name, 1, 3) == \"0-9\" then\n        return \"No\"\n \
    \   end\n    if string.len(file_name) > 3 and string.sub(file_name, 1, 3) == \"\
    0-9\" then\n        return \"No\"\n    end\n    if string.len(file_", "    if\
    \ #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= string.gsub(file_name,\
    \ '.', '') then\n        return 'No'\n    end\n    if not string.sub(file_name,\
    \ 1, 1) ~= string.gsub(file_name, '.', '') then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 2, 2) ~= '0' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 3, 3) ~= '1' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 4, 4) ~= '2' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 5, 5) ~= '3' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 6, 6) ~= '4' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 7, 7) ~= '5' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 8, 8) ~= '6' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 9, 9) ~= '7' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 10, 10) ~= '8' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 11, 11) ~= '9' then\n        return 'No'\n    end\n\
    \    return 'Yes'\nend", "    if #file_name > 3 then\n        return 'No'\n  \
    \  end\n    if #file_name < 2 then\n        return 'No'\n    end\n    if file_name:sub(1,1)\
    \ ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(2,2) ~= '.'\
    \ then\n        return 'No'\n    end\n    if file_name:sub(3,3) ~= '.' then\n\
    \        return 'No'\n    end\n    if file_name:sub(4,4) ~= '.' then\n       \
    \ return 'No'\n    end\n    if file_name:sub(5,5) ~= '.' then\n        return\
    \ 'No'\n    end\n    if file_name:sub(6,6) ~= '.' then\n        return 'No'\n\
    \    end\n    if file_name:sub(7,7) ~= '.' then\n        return 'No'\n    end\n\
    \    if file_name:sub(8,8) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(9,9)\
    \ ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(10,10) ~= '.'\
    \ then\n        return 'No'\n    end\n    if file_name:sub(11,11) ~= '.' then\n\
    \        return 'No'\n    end\n    if file_name:sub(12,12) ~= '.' then\n     \
    \   return 'No'\n    end\n    if file_name:sub(13,13) ~= '.' then\n        return\
    \ 'No'\n    end\n    if file_name:sub(14,14) ~= '.' then\n        return 'No'\n\
    \    end\n    if file_name:sub(15,15) ~= '.' then\n        return 'No'\n    end\n\
    \    if file_name:sub(16,16) ~= '.' then\n        return 'No'\n    end\n    if\
    \ file_name:sub(17,17) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(18,18)\
    \ ~= '", "    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name\
    \ > 3 then\n        return 'No'\n    end\n    if file_name ~= '.' then\n     \
    \   return 'No'\n    end\n    if string.sub(file_name, 1, 1) ~= '.' then\n   \
    \     return 'No'\n    end\n    if string.sub(file_name, 2, 2) ~= '.' then\n \
    \       return 'No'\n    end\n    if string.sub(file_name, 3, 3) ~= '.' then\n\
    \        return 'No'\n    end\n    if string.sub(file_name, 4, 4) ~= '.' then\n\
    \        return 'No'\n    end\n    if string.sub(file_name, 5, 5) ~= '.' then\n\
    \        return 'No'\n    end\n    if string.sub(file_name, 6, 6) ~= '.' then\n\
    \        return 'No'\n    end\n    if string.sub(file_name, 7, 7) ~= '.' then\n\
    \        return 'No'\n    end\n    if string.sub(file_name, 8, 8) ~= '.' then\n\
    \        return 'No'\n    end\n    if string.sub(file_name, 9, 9) ~= '.' then\n\
    \        return 'No'\n    end\n    return 'Yes'\nend", "    if #file_name < 3\
    \ then\n        return 'No'\n    end\n    if file_name ~= string.gsub(file_name,\
    \ '.', '') then\n        return 'No'\n    end\n    if not string.sub(file_name,\
    \ 1, 1) ~= string.gsub(file_name, '.', '') then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, -3, -1) ~= '0-9' then\n        return 'No'\n   \
    \ end\n    return 'Yes'\nend", "    if #file_name > 3 then\n        return 'No'\n\
    \    end\n    if file_name ~= file_name:match('^[a-zA-Z]') then\n        return\
    \ 'No'\n    end\n    if file_name:match('^[0-9]') then\n        return 'No'\n\
    \    end\n    if file_name:match('^[0-9][0-9][0-9]') then\n        return 'No'\n\
    \    end\n    if file_name:match('^[0-9][0-9][0-9][0-9][0-9][0-9]') then\n   \
    \     return 'No'\n    end\n    if file_name:match('^[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9",
  "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}\\\
    \\.[a-zA-Z]{1}[a-zA-Z0-9]{1}\\\\.[a-zA-Z]{1}$') then\n        return 'No'\n  \
    \  end\n    if file_name ~= file_name:match('^[a-zA-Z]{1}[a-zA-Z0-9]{1}\\\\.[a-zA-Z]{1}$')\
    \ then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[a-zA-Z]{1}[a-zA-Z0-9]{1}\\\
    \\.[a-zA-Z]{1}\\\\.[a-zA-Z]{1}$') then\n        return 'No'\n    end\n    return\
    \ 'Yes'\nend", "    if #file_name > 3 then\n        return 'No'\n    end\n   \
    \ if #file_name == 0 then\n        return 'No'\n    end\n    if file_name:sub(1,1)\
    \ ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(2,2) ~= '.'\
    \ then\n        return 'No'\n    end\n    if file_name:sub(3,3) ~= '.' then\n\
    \        return 'No'\n    end\n    if file_name:sub(4,4) ~= '.' then\n       \
    \ return 'No'\n    end\n    if file_name:sub(5,5) ~= '.' then\n        return\
    \ 'No'\n    end\n    if file_name:sub(6,6) ~= '.' then\n        return 'No'\n\
    \    end\n    if file_name:sub(7,7) ~= '.' then\n        return 'No'\n    end\n\
    \    if file_name:sub(8,8) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(9,9)\
    \ ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(10,10) ~= '.'\
    \ then\n        return 'No'\n    end\n    if file_name:sub(11,11) ~= '.' then\n\
    \        return 'No'\n    end\n    if file_name:sub(12,12) ~= '.' then\n     \
    \   return 'No'\n    end\n    if file_name:sub(13,13) ~= '.' then\n        return\
    \ 'No'\n    end\n    if file_name:sub(14,14) ~= '.' then\n        return 'No'\n\
    \    end\n    if file_name:sub(15,15) ~= '.' then\n        return 'No'\n    end\n\
    \    if file_name:sub(16,16) ~= '.' then\n        return 'No'\n    end\n    if\
    \ file_name:sub(17,17) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(18,18)\
    \ ~= '", "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name\
    \ ~= file_name:match('^[0-9]{3}[.]') then\n        return 'No'\n    end\n    local\
    \ dot_index = string.find(file_name, '.')\n    if dot_index == nil then\n    \
    \    return 'No'\n    end\n    local before_dot = string.sub(file_name, 1, dot_index)\n\
    \    if not string.sub(before_dot, 1, 1) ~= '[' then\n        return 'No'\n  \
    \  end\n    local after_dot = string.sub(file_name, dot_index + 1)\n    if not\
    \ string.sub(after_dot, 1, 1) == '[' then\n        return 'No'\n    end\n    if\
    \ after_dot ~= 'txt' and after_dot ~= 'exe' and after_dot ~= 'dll' then\n    \
    \    return 'No'\n    end\n    return 'Yes'\nend", "    if #file_name > 3 then\n\
    \        return 'No'\n    end\n    if file_name ~= '.' then\n        return 'No'\n\
    \    end\n    if string.sub(file_name, 1, 1) ~= '.' then\n        return 'No'\n\
    \    end\n    if string.sub(file_name, 2, 2) ~= '.' then\n        return 'No'\n\
    \    end\n    if string.sub(file_name, 3, 3) ~= '.' then\n        return 'No'\n\
    \    end\n    if string.sub(file_name, 4, 4) ~= '.' then\n        return 'No'\n\
    \    end\n    if string.sub(file_name, 5, 5) ~= '.' then\n        return 'No'\n\
    \    end\n    if string.sub(file_name, 6, 6) ~= '.' then\n        return 'No'\n\
    \    end\n    if string.sub(file_name, 7, 7) ~= '.' then\n        return 'No'\n\
    \    end\n    if string.sub(file_name, 8, 8) ~= '.' then\n        return 'No'\n\
    \    end\n    if string.sub(file_name, 9, 9) ~= '.' then\n        return 'No'\n\
    \    end\n    if string.sub(file_name, 10, 10) ~= '.' then\n        return 'No'\n\
    \    end\n    if string.sub(file_name, 11, 11) ~= '.' then\n        return 'No'\n\
    \    end\n    if string.sub(file_name, 12, 12) ~= '.' then\n        return 'No'\n\
    \    end\n    if string.sub(file_name, 13, 13) ~= '.' then\n        return 'No'\n\
    \    end\n    if string.sub(file_name, 14, 14) ~= '.' then\n        return 'No'\n\
    \    end\n    if string.sub(file_name, 15, 15) ~= '.' then\n        return 'No'\n\
    \    end\n    if string.sub(file_name, 16, 16) ~= '.' then\n        return 'No'\n\
    \    end\n    if string.sub(file_name", "    if #file_name > 3 then\n        return\
    \ 'No'\n    end\n    if file_name ~= '' then\n        if string.sub(file_name,\
    \ 1, 3) ~= '0-9' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 4, 4) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 5, 5) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 6, 6) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 7, 7) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 8, 8) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 9, 9) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 10, 10) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 11, 11) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 12, 12) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 13, 13) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 14, 14) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 15, 15) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 16, 16) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 17, 17) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 18, 18) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 19, 19) ~=", "    if #file_name < 3 then\n        return 'No'\n    end\n   \
    \ if file_name ~= file_name:match('^[0-9]*$') then\n        return 'No'\n    end\n\
    \    if file_name:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    if\
    \ file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\.txt$') then\n        return 'Yes'\n\
    \    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\.exe$') then\n      \
    \  return 'Yes'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\.dll$')\
    \ then\n        return 'Yes'\n    end\n    return 'No'\nend", "    if #file_name\
    \ < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9][0-9][0-9]$')\
    \ then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\\
    .$') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\\
    .txt$') then\n        return 'Yes'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\\
    .exe$') then\n        return 'Yes'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\\
    .dll$') then\n        return 'Yes'\n    end\n    return 'No'\nend", "    local\
    \ valid = true\n    local dot_index = string.find(file_name, '.')\n    local dot_substring\
    \ = string.sub(file_name, 1, dot_index)\n    local dot_substring_length = #dot_substring\n\
    \    local dot_substring_upper = string.upper(dot_substring)\n    local dot_substring_lower\
    \ = string.lower(dot_substring)\n    local dot_substring_upper_length = #dot_substring_upper\n\
    \    local dot_substring_lower_length = #dot_substring_lower\n    local dot_substring_upper_index\
    \ = string.find(dot_substring_upper, '.')\n    local dot_substring_lower_index\
    \ = string.find(dot_substring_lower, '.')\n    local dot_substring_upper_index_length\
    \ = #dot_substring_upper_index\n    local dot_substring_lower_index_length = #dot_substring_lower_index\n\
    \    local dot_substring_upper_index_index = string.find(dot_substring_upper,\
    \ 'a')\n    local dot_substring_lower_index_index = string.find(dot_substring_lower,\
    \ 'a')\n    local dot_substring_upper_index_index_length = #dot_substring_upper_index_index\n\
    \    local dot_substring_lower_index_index_length = #dot_substring_lower_index_index\n\
    \    local dot_substring_upper_index_index_index = string.find(dot_substring_upper,\
    \ 'A')\n    local dot_substring_lower_index_index_index = string.find(dot_substring_lower,\
    \ 'A')\n    local dot_substring_upper_index_index_index_length = #dot_substring_upper_index_index_index\n\
    \    local dot_substring_lower_index_index_index_length = #dot_substring_lower_index_index_index\n\
    \    if dot_substring_length == 3 or dot_substring_upper_length != 1 or dot_substring_lower_length\
    \ != 1 or dot_substring_upper_index != 1 or dot", "    local valid = true\n  \
    \  local dot_index = string.find(file_name, \".\")\n    local dot_substring =\
    \ string.lower(string.sub(file_name, 1, dot_index))\n    local dot_substring_length\
    \ = len(dot_substring)\n    local dot_substring_start_index = 1\n    local dot_substring_end_index\
    \ = dot_substring_length\n    local dot_substring_start_letter = string.lower(string.sub(dot_substring,\
    \ dot_substring_start_index, dot_substring_end_index))\n    local dot_substring_end_letter\
    \ = string.lower(string.sub(dot_substring, dot_substring_end_index, dot_substring_end_index))\n\
    \    local dot_substring_start_letter_is_letter = (dot_substring_start_letter\
    \ >= \"a\" and dot_substring_start_letter <= \"z\")\n    local dot_substring_end_letter_is_letter\
    \ = (dot_substring_end_letter >= \"a\" and dot_substring_end_letter <= \"z\")\n\
    \    local dot_substring_start_letter_is_letter_or_digit = (dot_substring_start_letter\
    \ >= \"a\" and dot_substring_start_letter <= \"z\" or dot_substring_start_letter\
    \ >= \"0\" and dot_substring_start_letter <= \"9\")\n    local dot_substring_end_letter_is_letter_or_digit\
    \ = (dot_substring_end_letter >= \"a\" and dot_substring_end_letter <= \"z\" or\
    \ dot_substring_end_letter >= \"0\" and dot_substring_end_letter <= \"9\")\n \
    \   if dot_substring_length == 1 then\n        if dot_substring_start_letter_is_letter_or_digit\
    \ and dot_substring_end_letter_is_letter_or_digit then\n            valid = true\n\
    \        else\n            valid = false\n    else\n        valid = false\n  \
    \  end\n    return valid\nend", "    local valid = true\n    local dot_index =\
    \ string.find(file_name, '.')\n    local dot_substring = string.sub(file_name,\
    \ 1, dot_index)\n    local dot_substring_length = #dot_substring\n    local dot_substring_upper\
    \ = string.upper(dot_substring)\n    local dot_substring_lower = string.lower(dot_substring)\n\
    \    local dot_substring_lower_length = #dot_substring_lower\n    local dot_substring_lower_upper\
    \ = string.upper(dot_substring_lower)\n    local dot_substring_lower_upper_length\
    \ = #dot_substring_lower_upper\n    local dot_substring_lower_upper_valid = (dot_substring_lower_upper\
    \ == 'exe' or dot_substring_lower_upper == 'dll')\n    local dot_substring_lower_valid\
    \ = (dot_substring_lower == 'exe' or dot_substring_lower == 'dll')\n    local\
    \ dot_substring_upper_valid = (dot_substring_upper == 'exe' or dot_substring_upper\
    \ == 'dll')\n    local dot_substring_valid = (dot_substring_lower_length == 3\
    \ or dot_substring_lower_upper_length == 3)\n    if not (dot_substring_length\
    \ == 3 and dot_substring_upper_valid and dot_substring_lower_valid and dot_substring_lower_upper_valid\
    \ and dot_substring_lower_upper_valid and dot_substring_lower_valid and dot_substring_upper_valid\
    \ and dot_substring_valid) then\n        valid = false\n    end\n    return valid\n\
    end", "    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name\
    \ ~= 1 then\n        return 'No'\n    end\n    if file_name[1] ~= '.' then\n \
    \       return 'No'\n    end\n    if file_name[2] ~= '.' then\n        return\
    \ 'No'\n    end\n    if file_name[3] ~= '.' then\n        return 'No'\n    end\n\
    \    if file_name[4] ~= '.' then\n        return 'No'\n    end\n    if file_name[5]\
    \ ~= '.' then\n        return 'No'\n    end\n    if file_name[6] ~= '.' then\n\
    \        return 'No'\n    end\n    if file_name[7] ~= '.' then\n        return\
    \ 'No'\n    end\n    if file_name[8] ~= '.' then\n        return 'No'\n    end\n\
    \    if file_name[9] ~= '.' then\n        return 'No'\n    end\n    if file_name[10]\
    \ ~= '.' then\n        return 'No'\n    end\n    if file_name[11] ~= '.' then\n\
    \        return 'No'\n    end\n    if file_name[12] ~= '.' then\n        return\
    \ 'No'\n    end\n    if file_name[13] ~= '.' then\n        return 'No'\n    end\n\
    \    if file_name[14] ~= '.' then\n        return 'No'\n    end\n    if file_name[15]\
    \ ~= '.' then\n        return 'No'\n    end\n    if file_name[16] ~= '.' then\n\
    \        return 'No'\n    end\n    if file_name[17] ~= '.' then\n        return\
    \ 'No'\n    end\n    if file_name[18] ~= '.' then\n        return 'No'\n    end\n\
    \    if file_name[19] ~= '.' then\n        return 'No'\n    end\n    if file_name[20]\
    \ ~= '.' then\n        return 'No'\n    end\n    if file_name[21] ~= '.' then",
  "    local valid = true\n    local dot_index = string.find(file_name, '.')\n   \
    \ local dot_substring = string.sub(file_name, 1, dot_index)\n    local dot_substring_length\
    \ = #dot_substring\n    local dot_substring_upper = string.upper(dot_substring)\n\
    \    local dot_substring_lower = string.lower(dot_substring)\n    local dot_substring_first_letter_upper\
    \ = string.sub(dot_substring_upper, 1, 1)\n    local dot_substring_first_letter_lower\
    \ = string.sub(dot_substring_lower, 1, 1)\n    local dot_substring_last_letter_upper\
    \ = string.sub(dot_substring_upper, dot_substring_length, 1)\n    local dot_substring_last_letter_lower\
    \ = string.sub(dot_substring_lower, dot_substring_length, 1)\n    local dot_substring_first_letter_is_letter\
    \ = (dot_substring_first_letter_upper >= 'A' and dot_substring_first_letter_upper\
    \ <= 'Z') or (dot_substring_first_letter_lower >= 'a' and dot_substring_first_letter_lower\
    \ <= 'z')\n    local dot_substring_last_letter_is_letter = (dot_substring_last_letter_upper\
    \ >= 'A' and dot_substring_last_letter_upper <= 'Z') or (dot_substring_last_letter_lower\
    \ >= 'a' and dot_substring_last_letter_lower <= 'z')\n    local dot_substring_first_letter_is_not_digit\
    \ = not (dot_substring_first_letter_upper >= '0' and dot_substring_first_letter_upper\
    \ <= '9') and dot_substring_first_letter_is_letter\n    local dot_substring_last_letter_is_not_digit\
    \ = not (dot_substring_last_letter_upper >= '0' and dot_substring_last_letter_upper\
    \ <= '9') and dot_substring_last_letter_is_letter\n    local dot_substring_first_",
  "    if #file_name == 0 then\n        return 'No'\n    end\n    if #file_name >\
    \ 3 then\n        return 'No'\n    end\n    if file_name:sub(1,1) ~= '.' then\n\
    \        return 'No'\n    end\n    if file_name:sub(2,2) ~= '.' then\n       \
    \ return 'No'\n    end\n    if file_name:sub(3,3) ~= '.' then\n        return\
    \ 'No'\n    end\n    if file_name:sub(4,4) ~= '.' then\n        return 'No'\n\
    \    end\n    if file_name:sub(5,5) ~= '.' then\n        return 'No'\n    end\n\
    \    if file_name:sub(6,6) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(7,7)\
    \ ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(8,8) ~= '.'\
    \ then\n        return 'No'\n    end\n    if file_name:sub(9,9) ~= '.' then\n\
    \        return 'No'\n    end\n    if file_name:sub(10,10) ~= '.' then\n     \
    \   return 'No'\n    end\n    if file_name:sub(11,11) ~= '.' then\n        return\
    \ 'No'\n    end\n    if file_name:sub(12,12) ~= '.' then\n        return 'No'\n\
    \    end\n    if file_name:sub(13,13) ~= '.' then\n        return 'No'\n    end\n\
    \    if file_name:sub(14,14) ~= '.' then\n        return 'No'\n    end\n    if\
    \ file_name:sub(15,15) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(16,16)\
    \ ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(17,17) ~= '.'\
    \ then\n        return 'No'\n    end\n    if file_name:sub(18,18) ~= '", "   \
    \ if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name < 1\
    \ then\n        return 'No'\n    end\n    if file_name:sub(1,1) ~= '.' then\n\
    \        return 'No'\n    end\n    if file_name:sub(2,2) ~= '.' then\n       \
    \ return 'No'\n    end\n    if file_name:sub(3,3) ~= '.' then\n        return\
    \ 'No'\n    end\n    if file_name:sub(4,4) ~= '.' then\n        return 'No'\n\
    \    end\n    if file_name:sub(5,5) ~= '.' then\n        return 'No'\n    end\n\
    \    if file_name:sub(6,6) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(7,7)\
    \ ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(8,8) ~= '.'\
    \ then\n        return 'No'\n    end\n    if file_name:sub(9,9) ~= '.' then\n\
    \        return 'No'\n    end\n    if file_name:sub(10,10) ~= '.' then\n     \
    \   return 'No'\n    end\n    if file_name:sub(11,11) ~= '.' then\n        return\
    \ 'No'\n    end\n    if file_name:sub(12,12) ~= '.' then\n        return 'No'\n\
    \    end\n    if file_name:sub(13,13) ~= '.' then\n        return 'No'\n    end\n\
    \    if file_name:sub(14,14) ~= '.' then\n        return 'No'\n    end\n    if\
    \ file_name:sub(15,15) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(16,16)\
    \ ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(17,17) ~= '.'\
    \ then\n        return 'No'\n    end\n    if file_name:sub(18,18) ~= '", "   \
    \ if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('[0-9]*$')\
    \ then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]') then\n\
    \        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\\
    \\.[a-zA-Z]*$') then\n        return 'Yes'\n    end\n    return 'No'\nend", " \
    \   if string.len(file_name) > 3 then\n        return 'No'\n    end\n    if string.len(file_name)\
    \ < 3 then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 2) ==\
    \ '0' then\n        return 'No'\n    end\n    if string.sub(file_name, 2, 3) ==\
    \ '0' then\n        return 'No'\n    end\n    if string.sub(file_name, 3, 4) ==\
    \ '0' then\n        return 'No'\n    end\n    if string.sub(file_name, 4, 5) ==\
    \ '0' then\n        return 'No'\n    end\n    if string.sub(file_name, 5, 6) ==\
    \ '0' then\n        return 'No'\n    end\n    if string.sub(file_name, 6, 7) ==\
    \ '0' then\n        return 'No'\n    end\n    if string.sub(file_name, 7, 8) ==\
    \ '0' then\n        return 'No'\n    end\n    if string.sub(file_name, 8, 9) ==\
    \ '0' then\n        return 'No'\n    end\n    if string.sub(file_name, 9, 10)\
    \ == '0' then\n        return 'No'\n    end\n    if string.sub(file_name, 10,\
    \ 11) == '0' then\n        return 'No'\n    end\n    if string.sub(file_name,\
    \ 11, 12) == '0' then\n        return 'No'\n    end\n    if string.sub(file_name,\
    \ 12, 13) == '0' then\n        return 'No'\n    end\n    if string.sub(file_name,\
    \ 13, 14) == '0' then\n        return 'No'\n    end\n    if string.sub(file_name,\
    \ 14, 15) == '0' then\n        return 'No'\n    end\n    if string.sub(file_name,\
    \ 15, 16) == '0' then\n        return 'No'\n    end\n    if string.sub(file_name,\
    \ 16, 17) == '0' then\n        return 'No'\n    end\n    if", "    if #file_name\
    \ > 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[a-zA-Z]')\
    \ then\n        return 'No'\n    end\n    if not file_name:match('^[0-9]') then\n\
    \        return 'No'\n    end\n    if not file_name:match('\\.$') then\n     \
    \   return 'No'\n    end\n    if file_name:match('^[0-9]\\.$') then\n        return\
    \ 'No'\n    end\n    if file_name:match('^[0-9]\\.txt$') then\n        return\
    \ 'No'\n    end\n    if file_name:match('^[0-9]\\.exe$') then\n        return\
    \ 'No'\n    end\n    if file_name:match('^[0-9]\\.dll$') then\n        return\
    \ 'No'\n    end\n    return 'Yes'\nend", "    local dot_index = string.find(file_name,\
    \ '.')\n    local dot_substring = string.sub(file_name, 1, dot_index)\n    local\
    \ dot_substring_length = #dot_substring\n    local dot_substring_upper = string.upper(dot_substring)\n\
    \    local dot_substring_lower = string.lower(dot_substring)\n    local dot_substring_upper_length\
    \ = #dot_substring_upper\n    local dot_substring_lower_length = #dot_substring_lower\n\
    \    local is_valid = true\n    if dot_substring_length > 3 then\n        is_valid\
    \ = false\n    end\n    if dot_substring_upper_length > 1 then\n        if not\
    \ (dot_substring_upper[1] == 'A' or dot_substring_upper[1] == 'B' or dot_substring_upper[1]\
    \ == 'C') then\n            is_valid = false\n        end\n    end\n    if dot_substring_lower_length\
    \ > 1 then\n        if not (dot_substring_lower[1] == 'a' or dot_substring_lower[1]\
    \ == 'b' or dot_substring_lower[1] == 'c') then\n            is_valid = false\n\
    \        end\n    end\n    if dot_substring_length == 1 then\n        if not (dot_substring_upper[1]\
    \ == 'A' or dot_substring_upper[1] == 'B' or dot_substring_upper[1] == 'C' or\
    \ dot_substring_upper[1] == 'D' or dot_substring_upper[1] == 'E' or dot_substring_upper[1]\
    \ == 'F' or dot_substring_upper[1] == 'G' or dot_substring_upper[1] == 'H' or\
    \ dot_substring_upper[1] == 'I' or dot_substring_upper[1] == 'J' or dot_substring_upper[1]\
    \ == 'K' or dot_substring_upper[1] == 'L' or dot_substring_upper[1] == 'M' or\
    \ dot_substring_", "    local valid = true\n    local dot_index = string.find(file_name,\
    \ '.')\n    local dot_substring = string.sub(file_name, 1, dot_index)\n    local\
    \ dot_substring_length = #dot_substring\n    local dot_substring_upper = string.upper(dot_substring)\n\
    \    local dot_substring_lower = string.lower(dot_substring)\n    local dot_substring_first_letter\
    \ = string.sub(dot_substring, 1, 1)\n    local dot_substring_last_letter = string.sub(dot_substring,\
    \ dot_substring_length, dot_substring_length)\n    local dot_substring_first_letter_upper\
    \ = string.upper(dot_substring_first_letter)\n    local dot_substring_first_letter_lower\
    \ = string.lower(dot_substring_first_letter)\n    local dot_substring_last_letter_upper\
    \ = string.upper(dot_substring_last_letter)\n    local dot_substring_last_letter_lower\
    \ = string.lower(dot_substring_last_letter)\n    if dot_substring_length > 3 or\
    \ dot_substring_length == 0 or not (dot_substring_first_letter_upper == 'A' or\
    \ dot_substring_first_letter_upper == 'B' or dot_substring_first_letter_upper\
    \ == 'C' or dot_substring_first_letter_upper == 'D' or dot_substring_first_letter_upper\
    \ == 'E' or dot_substring_first_letter_upper == 'F' or dot_substring_first_letter_upper\
    \ == 'G' or dot_substring_first_letter_upper == 'H' or dot_substring_first_letter_upper\
    \ == 'I' or dot_substring_first_letter_upper == 'J' or dot_substring_first_letter_upper\
    \ == 'K' or dot_substring_first_letter_upper == 'L' or dot_substring_first_letter_upper\
    \ == 'M' or dot_substring_first_letter_upper == 'N' or dot_substring_first_letter_upper\
    \ == 'O", "    if string.len(file_name) > 3 and string.find(file_name, \"0\")\
    \ == -1 and string.find(file_name, \"1\") == -1 and string.find(file_name, \"\
    2\") == -1 and string.find(file_name, \"3\") == -1 and string.find(file_name,\
    \ \"4\") == -1 and string.find(file_name, \"5\") == -1 and string.find(file_name,\
    \ \"6\") == -1 and string.find(file_name, \"7\") == -1 and string.find(file_name,\
    \ \"8\") == -1 and string.find(file_name, \"9\") == -1 and string.find(file_name,\
    \ \".\") == 1 and string.find(file_name, \"..\") == -1 then\n        return \"\
    Yes\"\n    else\n        return \"No\"\n    end\nend", "    if #file_name < 3\
    \ then\n        return 'No'\n    end\n    if file_name ~= string.gsub(file_name,\
    \ '^[0-9]*.', '') then\n        return 'No'\n    end\n    if file_name ~= string.gsub(file_name,\
    \ '^[a-zA-Z]*.', '') then\n        return 'No'\n    end\n    if file_name ~= string.gsub(file_name,\
    \ '\\.txt$', '') then\n        return 'No'\n    end\n    if file_name ~= string.gsub(file_name,\
    \ '\\.exe$', '') then\n        return 'No'\n    end\n    if file_name ~= string.gsub(file_name,\
    \ '\\.dll$', '') then\n        return 'No'\n    end\n    return 'Yes'\nend", " \
    \   if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name >\
    \ 3 then\n        return 'No'\n    end\n    if file_name ~= '' then\n        if\
    \ string.sub(file_name, 1, 1) ~= '.' then\n            return 'No'\n        end\n\
    \        if string.sub(file_name, 2, 2) ~= '.' then\n            return 'No'\n\
    \        end\n        if string.sub(file_name, 3, 3) ~= '.' then\n           \
    \ return 'No'\n        end\n        if string.sub(file_name, 4, 4) ~= '.' then\n\
    \            return 'No'\n        end\n        if string.sub(file_name, 5, 5)\
    \ ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 6, 6) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 7, 7) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 8, 8) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 9, 9) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 10, 10) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 11, 11) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 12, 12) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 13, 13) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 14, 14) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 15, 15) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 16, 16) ~= '.' then\n            return 'No'\n        end\n", "    if #file_name\
    \ < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('[0-9]{3}')\
    \ then\n        return 'No'\n    end\n    if not file_name:match('[a-zA-Z]') then\n\
    \        return 'No'\n    end\n    if not file_name:match('[a-zA-Z][a-zA-Z0-9.]{1,3}')\
    \ then\n        return 'No'\n    end\n    if file_name:match('[a-zA-Z][a-zA-Z0-9.]{1,3}[a-zA-Z0-9.]{1,3}')\
    \ then\n        return 'No'\n    end\n    if file_name:match('[a-zA-Z][a-zA-Z0-9.]{1,3}[a-zA-Z0-9.]{1,3}[a-zA-Z0-9.]{1,3}')\
    \ then\n        return 'No'\n    end\n    return 'Yes'\nend", "    local valid\
    \ = true\n    local dot_index = string.find(file_name, '.')\n    local dot_substring\
    \ = string.sub(file_name, 1, dot_index)\n    local dot_substring_length = string.len(dot_substring)\n\
    \    local dot_substring_length_valid = dot_substring_length >= 1 and dot_substring[1]\
    \ >= 'a' and dot_substring[1] <= 'z'\n    local dot_substring_valid = dot_substring_length_valid\
    \ and dot_substring[dot_substring_length] == '.'\n    local dot_substring_after_dot_valid\
    \ = dot_substring_valid and string.sub(file_name, dot_index + 1, string.len(file_name))\
    \ in ['txt', 'exe', 'dll']\n    valid = dot_substring_length_valid and dot_substring_after_dot_valid\n\
    \    return valid and 'Yes' or 'No'\nend", "    local valid = true\n    local\
    \ dot_index = string.find(file_name, '.')\n    local dot_substring = string.sub(file_name,\
    \ 1, dot_index)\n    local dot_substring_length = #dot_substring\n    local dot_substring_upper\
    \ = string.upper(dot_substring)\n    local dot_substring_lower = string.lower(dot_substring)\n\
    \    local dot_substring_upper_length = #dot_substring_upper\n    local dot_substring_lower_length\
    \ = #dot_substring_lower\n    local dot_substring_upper_start = string.find(dot_substring_upper,\
    \ 'A')\n    local dot_substring_lower_start = string.find(dot_substring_lower,\
    \ 'a')\n    local dot_substring_upper_end = string.find(dot_substring_upper, 'Z')\n\
    \    local dot_substring_lower_end = string.find(dot_substring_lower, 'z')\n \
    \   local dot_substring_upper_length_valid = dot_substring_upper_length >= 1 and\
    \ dot_substring_upper_length <= 3\n    local dot_substring_lower_length_valid\
    \ = dot_substring_lower_length >= 1 and dot_substring_lower_length <= 3\n    local\
    \ dot_substring_upper_start_valid = dot_substring_upper_start >= 1 and dot_substring_upper_start\
    \ <= dot_substring_upper_end\n    local dot_substring_lower_start_valid = dot_substring_lower_start\
    \ >= 1 and dot_substring_lower_start <= dot_substring_lower_end\n    local dot_substring_upper_end_valid\
    \ = dot_substring_upper_end >= dot_substring_upper_start and dot_substring_upper_end\
    \ <= dot_substring_upper_length - 1\n    local dot_substring_lower_end_valid =\
    \ dot_substring_lower_end >= dot_substring_lower_start and dot_substring_lower_end\
    \ <= dot_substring_lower_length - 1\n    if dot_substring_upper_length_valid and\
    \ dot_", "    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name\
    \ > 3 then\n        return 'No'\n    end\n    if file_name ~= '.' then\n     \
    \   return 'No'\n    end\n    if string.sub(file_name, 1, 1) ~= '.' then\n   \
    \     return 'No'\n    end\n    if string.sub(file_name, 2, 2) ~= '.' then\n \
    \       return 'No'\n    end\n    if string.sub(file_name, 3, 3) ~= '.' then\n\
    \        return 'No'\n    end\n    if string.sub(file_name, 4, 4) ~= '.' then\n\
    \        return 'No'\n    end\n    if string.sub(file_name, 5, 5) ~= '.' then\n\
    \        return 'No'\n    end\n    if string.sub(file_name, 6, 6) ~= '.' then\n\
    \        return 'No'\n    end\n    if string.sub(file_name, 7, 7) ~= '.' then\n\
    \        return 'No'\n    end\n    if string.sub(file_name, 8, 8) ~= '.' then\n\
    \        return 'No'\n    end\n    if string.sub(file_name, 9, 9) ~= '.' then\n\
    \        return 'No'\n    end\n    return 'Yes'\nend", "    if #file_name > 3\
    \ then\n        return 'No'\n    end\n    if file_name ~= '' then\n        if\
    \ string.sub(file_name, 1, 3) ~= '0-9' then\n            return 'No'\n       \
    \ end\n        if string.sub(file_name, 4, 4) ~= '.' then\n            return\
    \ 'No'\n        end\n        if string.sub(file_name, 5, 5) ~= '.' then\n    \
    \        return 'No'\n        end\n        if string.sub(file_name, 6, 6) ~= '.'\
    \ then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 7, 7) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 8, 8) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 9, 9) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 10, 10) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 11, 11) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 12, 12) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 13, 13) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 14, 14) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 15, 15) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 16, 16) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 17, 17) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 18, 18) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name,\
    \ 19, 19) ~=", "    if #file_name < 3 then\n        return 'No'\n    end\n   \
    \ if file_name ~= file_name:match('[0-9]{3}') then\n        return 'No'\n    end\n\
    \    if file_name:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    if\
    \ file_name:match('^[a-zA-Z]\\.\\..+') then\n        return 'No'\n    end\n  \
    \  if file_name:match('^[a-zA-Z]\\.\\..+[txt|exe|dll]$') then\n        return\
    \ 'Yes'\n    end\n    return 'No'\nend", "    if #file_name < 3 then\n       \
    \ return 'No'\n    end\n    if file_name ~= string.gsub(file_name, '^[0-9]*.',\
    \ '') then\n        return 'No'\n    end\n    if not string.gsub(file_name, '^[a-zA-Z]*.',\
    \ '') then\n        return 'No'\n    end\n    if not string.gsub(file_name, '^[a-zA-Z]*.',\
    \ '') then\n        return 'No'\n    end\n    return 'Yes'\nend", "    local valid\
    \ = true\n    local dot_index = string.find(file_name, '.')\n    local dot_substring\
    \ = string.sub(file_name, 1, dot_index)\n    local dot_substring_length = #dot_substring\n\
    \    local dot_substring_upper = string.upper(dot_substring)\n    local dot_substring_lower\
    \ = string.lower(dot_substring)\n    local dot_substring_first_letter = string.sub(dot_substring,\
    \ 1, 1)\n    local dot_substring_last_letter = string.sub(dot_substring, dot_substring_length,\
    \ dot_substring_length)\n    local dot_substring_first_letter_upper = string.upper(dot_substring_first_letter)\n\
    \    local dot_substring_first_letter_lower = string.lower(dot_substring_first_letter)\n\
    \    local dot_substring_last_letter_upper = string.upper(dot_substring_last_letter)\n\
    \    local dot_substring_last_letter_lower = string.lower(dot_substring_last_letter)\n\
    \    local dot_substring_first_letter_is_letter = (dot_substring_first_letter_upper\
    \ >= 'A' and dot_substring_first_letter_upper <= 'Z')\n    local dot_substring_last_letter_is_letter\
    \ = (dot_substring_last_letter_upper >= 'A' and dot_substring_last_letter_upper\
    \ <= 'Z')\n    local dot_substring_first_letter_is_not_digit = (dot_substring_first_letter_upper\
    \ < '0' or dot_substring_first_letter_upper > '9')\n    local dot_substring_last_letter_is_not_digit\
    \ = (dot_substring_last_letter_upper < '0' or dot_substring_last_letter_upper\
    \ > '9')\n    local dot_substring_first_letter_is_not_dot = (dot_substring_first_letter\
    \ != '.')\n    local dot_substring_last_letter_is_not_dot = (dot_substring_last_letter",
  "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}\\\
    \\.[a-zA-Z]{1}[a-zA-Z0-9]{1}\\\\.[a-zA-Z]{1}$') then\n        return 'No'\n  \
    \  end\n    return 'Yes'\nend", "    local dot_index = string.find(file_name,\
    \ '.')\n    local dot_substring = string.sub(file_name, 1, dot_index)\n    local\
    \ dot_substring_length = #dot_substring\n    local dot_substring_upper = string.upper(dot_substring)\n\
    \    local dot_substring_lower = string.lower(dot_substring)\n    local is_valid\
    \ = (dot_substring_length == 3 and dot_substring_upper == dot_substring_lower\
    \ and (dot_substring_lower == 'txt' or dot_substring_lower == 'exe' or dot_substring_lower\
    \ == 'dll'))\n    return is_valid and (dot_index == 1 or (dot_index == 2 and string.sub(file_name,\
    \ dot_index + 1, 1) == '.'))\nend", "    local file_name_parts = string.split(file_name,\
    \ '.')\n    local file_name_part_before_dot = file_name_parts[1]\n    local file_name_part_after_dot\
    \ = file_name_parts[2]\n    if #file_name_parts > 2 then\n        return 'No'\n\
    \    end\n    if #file_name_parts < 2 then\n        return 'No'\n    end\n   \
    \ if file_name_part_before_dot ~= '' then\n        if not string.match(file_name_part_before_dot,\
    \ '^[a-zA-Z]') then\n            return 'No'\n        end\n    end\n    if file_name_part_after_dot\
    \ ~= 'txt' and file_name_part_after_dot ~= 'exe' and file_name_part_after_dot\
    \ ~= 'dll' then\n        return 'No'\n    end\n    return 'Yes'\nend", "    local\
    \ valid = true\n    local dot_index = string.find(file_name, '.')\n    local dot_before_index\
    \ = string.find(file_name, '.', 1, dot_index)\n    local dot_after_index = string.find(file_name,\
    \ '.', dot_index + 1)\n    local dot_before_length = dot_before_index + 1\n  \
    \  local dot_after_length = dot_after_index + 1 - dot_before_length\n    local\
    \ dot_before_is_letter = string.char(file_name[dot_before_index]) >= 'a' and string.char(file_name[dot_before_index])\
    \ <= 'z'\n    local dot_after_is_letter = string.char(file_name[dot_after_index])\
    \ >= 'a' and string.char(file_name[dot_after_index]) <= 'z'\n    local dot_before_is_number\
    \ = string.char(file_name[dot_before_index]) >= '0' and string.char(file_name[dot_before_index])\
    \ <= '9'\n    local dot_after_is_number = string.char(file_name[dot_after_index])\
    \ >= '0' and string.char(file_name[dot_after_index]) <= '9'\n    if dot_before_length\
    \ == 0 or dot_after_length == 0 or dot_before_is_letter == false or dot_after_is_letter\
    \ == false or dot_before_is_number == true or dot_after_is_number == true then\n\
    \        valid = false\n    end\n    return valid\nend", "    local valid = true\n\
    \    local dot_index = string.find(file_name, '.')\n    local dot_substring =\
    \ string.sub(file_name, 1, dot_index)\n    local dot_substring_length = #dot_substring\n\
    \    local dot_substring_upper = string.upper(dot_substring)\n    local dot_substring_lower\
    \ = string.lower(dot_substring)\n    local dot_substring_upper_length = #dot_substring_upper\n\
    \    local dot_substring_lower_length = #dot_substring_lower\n    local dot_substring_upper_first_char\
    \ = string.sub(dot_substring_upper, 1, 1)\n    local dot_substring_lower_first_char\
    \ = string.sub(dot_substring_lower, 1, 1)\n    local dot_substring_upper_last_char\
    \ = string.sub(dot_substring_upper, dot_substring_upper_length, 1)\n    local\
    \ dot_substring_lower_last_char = string.sub(dot_substring_lower, dot_substring_lower_length,\
    \ 1)\n    local dot_substring_upper_first_char_length = #dot_substring_upper_first_char\n\
    \    local dot_substring_lower_first_char_length = #dot_substring_lower_first_char\n\
    \    local dot_substring_upper_last_char_length = #dot_substring_upper_last_char\n\
    \    local dot_substring_lower_last_char_length = #dot_substring_lower_last_char\n\
    \    local dot_substring_upper_first_char_is_letter = (dot_substring_upper_first_char\
    \ >= 'A' and dot_substring_upper_first_char <= 'Z')\n    local dot_substring_lower_first_char_is_letter\
    \ = (dot_substring_lower_first_char >= 'a' and dot_substring_lower_first_char\
    \ <= 'z')\n    local dot_substring_upper_last_char_is_letter = (dot_substring_upper_last_char\
    \ >= 'A' and dot_substring_upper_last", "    if string.len(file_name) > 3 and\
    \ string.sub(file_name, 1, 3) == '0-9' then\n        return 'No'\n    end\n  \
    \  if string.count(file_name, '.') > 1 then\n        return 'No'\n    end\n  \
    \  if string.sub(file_name, string.index(file_name, '.')+1, string.len(file_name))\
    \ == '' then\n        return 'No'\n    end\n    if not string.sub(file_name, 1,\
    \ string.index(file_name, '.'))[1] in string.lowercase or not string.sub(file_name,\
    \ string.index(file_name, '.')+1, string.len(file_name)) in ['txt', 'exe', 'dll']\
    \ then\n        return 'No'\n    end\n    return 'Yes'\nend", "    if #file_name\
    \ < 3 then\n        return 'No'\n    end\n    if #file_name ~= 3 then\n      \
    \  return 'No'\n    end\n    if file_name ~= string.sub(file_name, 1, 2) .. '.'\
    \ .. string.sub(file_name, 2, 3) then\n        return 'No'\n    end\n    if not\
    \ string.sub(file_name, 1, 1) ~= '.' then\n        return 'No'\n    end\n    if\
    \ not string.sub(file_name, string.length(file_name) - 3, string.length(file_name))\
    \ ~= 'txt' or string.sub(file_name, string.length(file_name) - 3, string.length(file_name))\
    \ ~= 'exe' or string.sub(file_name, string.length(file_name) - 3, string.length(file_name))\
    \ ~= 'dll' then\n        return 'No'\n    end\n    return 'Yes'\nend", "    if\
    \ #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]*$')\
    \ then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]') then\n\
    \        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\\
    \\.[a-zA-Z]*$') then\n        return 'Yes'\n    end\n    return 'No'\nend", " \
    \   local valid = true\n    local dot_index = string.find(file_name, \".\")\n\
    \    local dot_index_2 = string.find(file_name, \"..\")\n    local dot_index_3\
    \ = string.find(file_name, \"...\")\n    local dot_index_4 = string.find(file_name,\
    \ \"....\")\n    local dot_index_5 = string.find(file_name, \".....\")\n    local\
    \ dot_index_6 = string.find(file_name, \"........\")\n    local dot_index_7 =\
    \ string.find(file_name, \".........\")\n    local dot_index_8 = string.find(file_name,\
    \ \"..........\")\n    local dot_index_9 = string.find(file_name, \"...........\"\
    )\n    local dot_index_10 = string.find(file_name, \"............\")\n    local\
    \ dot_index_11 = string.find(file_name, \".............\")\n    local dot_index_12\
    \ = string.find(file_name, \"..............\")\n    local dot_index_13 = string.find(file_name,\
    \ \"...............\")\n    local dot_index_14 = string.find(file_name, \"...............\"\
    )\n    local dot_index_15 = string.find(file_name, \"................\")\n   \
    \ local dot_index_16 = string.find(file_name, \".................\")\n    local\
    \ dot_index_17 = string.find(file_name, \"..................\")\n    local dot_index_18\
    \ = string.find(file_name, \"..................\")\n    local dot_index_19 = string.find(file_name,\
    \ \"..................\")\n    local dot_index_20 = string.find(file_name, \"\
    ..................\")\n    local dot_index_21 = string.find(file_name, \"..................\"\
    )\n    local dot_index_22 = string.find(file_name, \"..................\")\n \
    \   local dot_index_23 = string.find(file_name, \"..................\")\n    local\
    \ dot_index_24 = string.find(file_name, \"..................\")\n    local dot_index_25\
    \ = string.find(", "    if #file_name < 3 then\n        return 'No'\n    end\n\
    \    if file_name ~= file_name:match('[0-9]{3}') then\n        return 'No'\n \
    \   end\n    if not file_name:match('[a-zA-Z]') then\n        return 'No'\n  \
    \  end\n    if not file_name:match('[a-zA-Z][a-zA-Z0-9.]*') then\n        return\
    \ 'No'\n    end\n    if file_name:match('[.]{1}') then\n        return 'No'\n\
    \    end\n    if file_name:match('[.]{1}[a-zA-Z]{1}') then\n        return 'No'\n\
    \    end\n    if file_name:match('[.]{1}[a-zA-Z0-9]{1}') then\n        return\
    \ 'No'\n    end\n    if file_name:match('[.]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}')\
    \ then\n        return 'No'\n    end\n    return 'Yes'\nend", "    if string.len(file_name)\
    \ > 3 then\n        return 'No'\n    end\n    if string.len(file_name) < 3 then\n\
    \        return 'No'\n    end\n    if string.sub(file_name, 1, 2) == '0' or string.sub(file_name,\
    \ 1, 2) == '1' or string.sub(file_name, 1, 2) == '2' or string.sub(file_name,\
    \ 1, 2) == '3' or string.sub(file_name, 1, 2) == '4' or string.sub(file_name,\
    \ 1, 2) == '5' or string.sub(file_name, 1, 2) == '6' or string.sub(file_name,\
    \ 1, 2) == '7' or string.sub(file_name, 1, 2) == '8' or string.sub(file_name,\
    \ 1, 2) == '9' then\n        return 'No'\n    end\n    if string.sub(file_name,\
    \ string.len(file_name) - 2, string.len(file_name)) == '.txt' then\n        return\
    \ 'Yes'\n    end\n    if string.sub(file_name, string.len(file_name) - 2, string.len(file_name))\
    \ == '.exe' then\n        return 'Yes'\n    end\n    if string.sub(file_name,\
    \ string.len(file_name) - 2, string.len(file_name)) == '.dll' then\n        return\
    \ 'Yes'\n    end\n    return 'No'\nend", "    if #file_name < 3 then\n       \
    \ return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}[.]') then\n\
    \        return 'No'\n    end\n    local dot_index = string.find(file_name, '.')\n\
    \    local before_dot = string.sub(file_name, 1, dot_index)\n    local after_dot\
    \ = string.sub(file_name, dot_index+1)\n    if not before_dot then\n        return\
    \ 'No'\n    end\n    if not string.sub(before_dot, 1, 1) ~= 'a'-'z' or not string.sub(before_dot,\
    \ 1, 1) ~= 'A'-'Z' then\n        return 'No'\n    end\n    if not after_dot in\
    \ ['txt', 'exe', 'dll'] then\n        return 'No'\n    end\n    return 'Yes'\n\
    end", "    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name\
    \ > 1 and file_name:sub(1,1) ~= '.' then\n        return 'No'\n    end\n    if\
    \ #file_name > 1 and file_name:sub(2,2) ~= '.' then\n        return 'No'\n   \
    \ end\n    if #file_name > 1 and file_name:sub(3,3) ~= '.' then\n        return\
    \ 'No'\n    end\n    if #file_name > 1 and file_name:sub(4,4) ~= '.' then\n  \
    \      return 'No'\n    end\n    if #file_name > 1 and file_name:sub(5,5) ~= '.'\
    \ then\n        return 'No'\n    end\n    if #file_name > 1 and file_name:sub(6,6)\
    \ ~= '.' then\n        return 'No'\n    end\n    if #file_name > 1 and file_name:sub(7,7)\
    \ ~= '.' then\n        return 'No'\n    end\n    if #file_name > 1 and file_name:sub(8,8)\
    \ ~= '.' then\n        return 'No'\n    end\n    if #file_name > 1 and file_name:sub(9,9)\
    \ ~= '.' then\n        return 'No'\n    end\n    return 'Yes'\nend", "    if #file_name\
    \ < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]+')\
    \ then\n        return 'No'\n    end\n    if not file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\\
    .\\.') then\n        return 'No'\n    end\n    if not file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\\
    .\\.[a-zA-Z][a-zA-Z0-9]*$') then\n        return 'No'\n    end\n    return 'Yes'\n\
    end", "    local valid = true\n    local dot_index = string.find(file_name, '.')\n\
    \    local dot_substring = string.lower(file_name[1:dot_index])\n    local dot_substring_length\
    \ = len(dot_substring)\n    local dot_substring_start_index = 1\n    local dot_substring_end_index\
    \ = dot_substring_length\n    local is_valid_substring = false\n    local is_valid_substring_start_index\
    \ = 1\n    local is_valid_substring_end_index = dot_substring_length\n    local\
    \ is_valid_substring_length = 0\n    local is_valid_substring_type = ''\n    local\
    \ is_valid_substring_type_index = 1\n    local is_valid_substring_type_length\
    \ = 0\n    local is_valid_substring_type_start_index = 1\n    local is_valid_substring_type_end_index\
    \ = dot_substring_length\n    local is_valid_substring_type_type = ''\n    local\
    \ is_valid_substring_type_type_index = 1\n    local is_valid_substring_type_type_length\
    \ = 0\n    local is_valid_substring_type_type_start_index = 1\n    local is_valid_substring_type_type_end_index\
    \ = dot_substring_length\n    local is_valid_substring_type_type_type = ''\n \
    \   local is_valid_substring_type_type_type_index = 1\n    local is_valid_substring_type_type_type_length\
    \ = 0\n    local is_valid_substring_type_type_type_start_index = 1\n    local\
    \ is_valid_substring_type_type_type_end_index = dot_substring_length\n    local\
    \ is_valid_substring_type_type_type_type = ''\n    local is_valid_substring_type_type_type_type_index\
    \ = 1\n    local is_valid_substring_type_type_type_type_length = 0\n    local\
    \ is_valid_substring_type_type_type_type_start_index = 1", "    if #file_name\
    \ < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9][0-9][0-9]$')\
    \ then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*$')\
    \ then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\\
    .\\.[a-zA-Z][a-zA-Z0-9]*$') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\\
    .\\.[a-zA-Z][a-zA-Z0-9]*\\.[a-zA-Z][a-zA-Z0-9]*$') then\n        return 'No'\n\
    \    end\n    return 'Yes'\nend", "    if #file_name < 3 then\n        return\
    \ 'No'\n    end\n    if file_name ~= string.gsub(file_name, '^[0-9]', '') then\n\
    \        return 'No'\n    end\n    if string.gsub(file_name, '.', '') ~= '' then\n\
    \        return 'No'\n    end\n    if string.gsub(file_name, '.', 1) ~= string.gsub(file_name,\
    \ '.', 2) then\n        return 'No'\n    end\n    if string.gsub(file_name, '.',\
    \ 2) ~= 'txt' and string.gsub(file_name, '.', 2) ~= 'exe' and string.gsub(file_name,\
    \ '.', 2) ~= 'dll' then\n        return 'No'\n    end\n    return 'Yes'\nend",
  "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9][0-9][0-9]$')\
    \ then\n        return 'No'\n    end\n    if not file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\\
    .$') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\\
    .[tx][t]{1,2}$') then\n        return 'Yes'\n    elseif file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\\
    .[d][l][l]{1,2}$') then\n        return 'Yes'\n    elseif file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\\
    .[e][x][e]{1,2}$') then\n        return 'Yes'\n    else\n        return 'No'\n\
    \    end\nend", "    if #file_name > 3 then\n        return 'No'\n    end\n  \
    \  if #file_name < 1 then\n        return 'No'\n    end\n    if file_name:sub(1,1)\
    \ ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(2,2) ~= '.'\
    \ then\n        return 'No'\n    end\n    if file_name:sub(3,3) ~= '.' then\n\
    \        return 'No'\n    end\n    if file_name:sub(4,4) ~= '.' then\n       \
    \ return 'No'\n    end\n    if file_name:sub(5,5) ~= '.' then\n        return\
    \ 'No'\n    end\n    if file_name:sub(6,6) ~= '.' then\n        return 'No'\n\
    \    end\n    if file_name:sub(7,7) ~= '.' then\n        return 'No'\n    end\n\
    \    if file_name:sub(8,8) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(9,9)\
    \ ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(10,10) ~= '.'\
    \ then\n        return 'No'\n    end\n    if file_name:sub(11,11) ~= '.' then\n\
    \        return 'No'\n    end\n    if file_name:sub(12,12) ~= '.' then\n     \
    \   return 'No'\n    end\n    if file_name:sub(13,13) ~= '.' then\n        return\
    \ 'No'\n    end\n    if file_name:sub(14,14) ~= '.' then\n        return 'No'\n\
    \    end\n    if file_name:sub(15,15) ~= '.' then\n        return 'No'\n    end\n\
    \    if file_name:sub(16,16) ~= '.' then\n        return 'No'\n    end\n    if\
    \ file_name:sub(17,17) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(18,18)\
    \ ~= '", "    if #file_name < 3 then\n        return 'No'\n    end\n    if #file_name\
    \ > 3 then\n        return 'No'\n    end\n    if file_name ~= '.' then\n     \
    \   return 'No'\n    end\n    if string.sub(file_name, 1, 1) ~= '.' then\n   \
    \     return 'No'\n    end\n    if string.sub(file_name, 2, 2) ~= '.' then\n \
    \       return 'No'\n    end\n    if string.sub(file_name, 3, 3) ~= '.' then\n\
    \        return 'No'\n    end\n    if string.sub(file_name, 4, 4) ~= '.' then\n\
    \        return 'No'\n    end\n    if string.sub(file_name, 5, 5) ~= '.' then\n\
    \        return 'No'\n    end\n    if string.sub(file_name, 6, 6) ~= '.' then\n\
    \        return 'No'\n    end\n    if string.sub(file_name, 7, 7) ~= '.' then\n\
    \        return 'No'\n    end\n    if string.sub(file_name, 8, 8) ~= '.' then\n\
    \        return 'No'\n    end\n    if string.sub(file_name, 9, 9) ~= '.' then\n\
    \        return 'No'\n    end\n    if string.sub(file_name, 10, 10) ~= '.' then\n\
    \        return 'No'\n    end\n    if string.sub(file_name, 11, 11) ~= '.' then\n\
    \        return 'No'\n    end\n    if string.sub(file_name, 12, 12) ~= '.' then\n\
    \        return 'No'\n    end\n    if string.sub(file_name, 13, 13) ~= '.' then\n\
    \        return 'No'\n    end\n    if string.sub(file_name, 14, 14) ~= '.' then\n\
    \        return 'No'\n    end\n    if string.sub(file_name, 15, 15) ~= '.' then\n\
    \        return 'No'\n    end\n    if string.sub(file_name, 16, 16) ~= '.' then",
  "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= string.gsub(file_name,\
    \ '.', '') then\n        return 'No'\n    end\n    if not string.sub(file_name,\
    \ 1, 1) ~= string.gsub(file_name, '.', '') then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 2, 2) ~= '0' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 3, 3) ~= '1' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 4, 4) ~= '2' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 5, 5) ~= '3' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 6, 6) ~= '4' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 7, 7) ~= '5' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 8, 8) ~= '6' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 9, 9) ~= '7' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 10, 10) ~= '8' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 11, 11) ~= '9' then\n        return 'No'\n    end\n\
    \    return 'Yes'\nend", "    if #file_name > 3 then\n        return 'No'\n  \
    \  end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name\
    \ > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n       \
    \ return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n\
    \    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name >\
    \ 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return\
    \ 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n  \
    \  if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3\
    \ then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return\
    \ 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n  \
    \  if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3\
    \ then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return\
    \ 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n  \
    \  if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3\
    \ then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return\
    \ 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n  \
    \  if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3\
    \ then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return\
    \ 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n  \
    \  if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3\
    \ then\n        return 'No'\n    end", "    if #file_name < 3 then\n        return\
    \ 'No'\n    end\n    if file_name ~= '.' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 1, 1) ~= '.' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 2, 2) ~= '.' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 3, 3) ~= '.' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 4, 4) ~= '.' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 5, 5) ~= '.' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 6, 6) ~= '.' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 7, 7) ~= '.' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 8, 8) ~= '.' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 9, 9) ~= '.' then\n        return 'No'\n    end\n\
    \    return 'Yes'\nend", "    if #file_name > 3 then\n        return 'No'\n  \
    \  end\n    if #file_name < 2 then\n        return 'No'\n    end\n    if file_name:sub(1,1)\
    \ ~= \".\" then\n        return 'No'\n    end\n    if file_name:sub(2,2) ~= \"\
    .\" then\n        return 'No'\n    end\n    if file_name:sub(3,3) ~= \".\" then\n\
    \        return 'No'\n    end\n    if file_name:sub(4,4) ~= \".\" then\n     \
    \   return 'No'\n    end\n    if file_name:sub(5,5) ~= \".\" then\n        return\
    \ 'No'\n    end\n    if file_name:sub(6,6) ~= \".\" then\n        return 'No'\n\
    \    end\n    if file_name:sub(7,7) ~= \".\" then\n        return 'No'\n    end\n\
    \    if file_name:sub(8,8) ~= \".\" then\n        return 'No'\n    end\n    if\
    \ file_name:sub(9,9) ~= \".\" then\n        return 'No'\n    end\n    return 'Yes'\n\
    end", "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name\
    \ ~= file_name:match('^[0-9]+\\\\.[0-9]+\\\\.[0-9]+$') then\n        return 'No'\n\
    \    end\n    if not file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\\\.[txt|exe|dll]$')\
    \ then\n        return 'No'\n    end\n    return 'Yes'\nend", "    if #file_name\
    \ == 0 then\n        return 'No'\n    end\n    if #file_name > 3 then\n      \
    \  return 'No'\n    end\n    if file_name:sub(1,1) ~= '.' then\n        return\
    \ 'No'\n    end\n    if file_name:sub(2,1) ~= '.' then\n        return 'No'\n\
    \    end\n    if file_name:sub(3,1) ~= '.' then\n        return 'No'\n    end\n\
    \    if file_name:sub(4,1) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(5,1)\
    \ ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(6,1) ~= '.'\
    \ then\n        return 'No'\n    end\n    if file_name:sub(7,1) ~= '.' then\n\
    \        return 'No'\n    end\n    if file_name:sub(8,1) ~= '.' then\n       \
    \ return 'No'\n    end\n    if file_name:sub(9,1) ~= '.' then\n        return\
    \ 'No'\n    end\n    if file_name:sub(10,1) ~= '.' then\n        return 'No'\n\
    \    end\n    if file_name:sub(11,1) ~= '.' then\n        return 'No'\n    end\n\
    \    if file_name:sub(12,1) ~= '.' then\n        return 'No'\n    end\n    if\
    \ file_name:sub(13,1) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(14,1)\
    \ ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(15,1) ~= '.'\
    \ then\n        return 'No'\n    end\n    if file_name:sub(16,1) ~= '.' then\n\
    \        return 'No'\n    end\n    if file_name:sub(17,1) ~= '.' then\n      \
    \  return 'No'\n    end\n    if file_name:sub(18,1) ~= '", "    local valid =\
    \ true\n    local dot_index = string.find(file_name, '.')\n    local dot_substring\
    \ = string.sub(file_name, 1, dot_index)\n    local dot_substring_length = #dot_substring\n\
    \    local dot_substring_upper = string.upper(dot_substring)\n    local dot_substring_lower\
    \ = string.lower(dot_substring)\n    local dot_substring_upper_length = #dot_substring_upper\n\
    \    local dot_substring_lower_length = #dot_substring_lower\n    local dot_substring_upper_index\
    \ = string.find(dot_substring_upper, '.')\n    local dot_substring_lower_index\
    \ = string.find(dot_substring_lower, '.')\n    local dot_substring_upper_index_length\
    \ = #dot_substring_upper_index\n    local dot_substring_lower_index_length = #dot_substring_lower_index\n\
    \    local dot_substring_upper_index_upper = string.upper(dot_substring_upper_index)\n\
    \    local dot_substring_lower_index_lower = string.lower(dot_substring_lower_index)\n\
    \    local dot_substring_upper_index_upper_length = #dot_substring_upper_index_upper\n\
    \    local dot_substring_lower_index_lower_length = #dot_substring_lower_index_lower\n\
    \    local dot_substring_upper_index_upper_index = string.find(dot_substring_upper_index_upper,\
    \ '.')\n    local dot_substring_lower_index_lower_index = string.find(dot_substring_lower_index_lower,\
    \ '.')\n    local dot_substring_upper_index_upper_index_length = #dot_substring_upper_index_upper_index\n\
    \    local dot_substring_lower_index_lower_index_length = #dot_substring_lower_index_lower_index\n\
    \    local dot_substring_upper_index_upper_index_upper = string.upper(dot_substring_upper_index_upper_index)\n\
    \    local dot_", "    if string.len(file_name) > 3 then\n        return 'No'\n\
    \    end\n    if string.len(file_name) < 3 then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 1, 2) == '0' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 3, 4) == '.' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 4, 5) == '.' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 5, 6) == '.' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 6, 7) == '.' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 7, 8) == '.' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 8, 9) == '.' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 9, 10) == '.' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 10, 11) == '.' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 11, 12) == '.' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 12, 13) == '.' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 13, 14) == '.' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 14, 15) == '.' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 15, 16) == '.' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 16, 17) == '.' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 17, 18) == '.' then\n        return 'No'\n    end\n\
    \    if string.sub(file_name, 18, 19) == '.'", "    local valid = true\n    local\
    \ dot_index = string.find(file_name, '.')\n    local dot_before_index = string.find(file_name,\
    \ '.', 1, dot_index)\n    local dot_after_index = string.find(file_name, '.',\
    \ dot_index + 1)\n    local dot_before_length = dot_before_index + 1\n    local\
    \ dot_after_length = dot_after_index + 1 - dot_before_length\n    local dot_before_char\
    \ = string.sub(file_name, 1, dot_before_length)\n    local dot_after_char = string.sub(file_name,\
    \ dot_after_length + 1)\n    local dot_before_char_is_letter = string.char(dot_before_char)\
    \ >= 'a' and string.char(dot_before_char) <= 'z'\n    local dot_after_char_is_letter\
    \ = string.char(dot_after_char) >= 'a' and string.char(dot_after_char) <= 'z'\n\
    \    local dot_before_char_is_number = string.char(dot_before_char) >= '0' and\
    \ string.char(dot_before_char) <= '9'\n    local dot_after_char_is_number = string.char(dot_after_char)\
    \ >= '0' and string.char(dot_after_char) <= '9'\n    if dot_before_length > 3\
    \ or dot_after_length > 3 or not dot_before_char_is_letter or not dot_after_char_is_letter\
    \ or not dot_before_char_is_number or not dot_after_char_is_number then\n    \
    \    valid = false\n    end\n    return valid\nend", "    local valid = true\n\
    \    local dot_index = string.find(file_name, '.')\n    local dot_substring =\
    \ string.sub(file_name, 1, dot_index)\n    local dot_substring_length = #dot_substring\n\
    \    local dot_substring_upper = string.upper(dot_substring)\n    local dot_substring_lower\
    \ = string.lower(dot_substring)\n    local dot_substring_upper_length = #dot_substring_upper\n\
    \    local dot_substring_lower_length = #dot_substring_lower\n    local dot_substring_upper_index\
    \ = string.find(dot_substring_upper, '.')\n    local dot_substring_lower_index\
    \ = string.find(dot_substring_lower, '.')\n    if dot_substring_length > 3 or\
    \ dot_substring_upper_length > 3 or dot_substring_lower_length > 3 or dot_substring_upper_index\
    \ != -1 or dot_substring_lower_index != -1 then\n        valid = false\n    end\n\
    \    if valid == true and dot_substring_upper_length == 0 or dot_substring_lower_length\
    \ == 0 or dot_substring_upper_index != 1 or dot_substring_lower_index != 1 then\n\
    \        valid = false\n    end\n    if valid == true and string.sub(dot_substring_upper,\
    \ 1, 1) ~= 'a' or string.sub(dot_substring_lower, 1, 1) ~= 'a' then\n        valid\
    \ = false\n    end\n    if valid == true and string.sub(dot_substring_upper, dot_substring_upper_index\
    \ + 1, dot_substring_upper_length - dot_substring_upper_index) ~= 'txt' or string.sub(dot_substring_lower,\
    \ dot_substring_lower_index + 1, dot_substring_lower_length - dot_substring_lower_index)\
    \ ~= 'exe' or string.sub(dot_substring_lower, dot_substring_lower_index + 1, dot_substring_lower_length\
    \ - dot_substring_lower_index) ~= '", "    if #file_name > 3 then\n        return\
    \ 'No'\n    end\n    if #file_name < 1 then\n        return 'No'\n    end\n  \
    \  if file_name:sub(1,1) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(2,2)\
    \ ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(3,3) ~= '.'\
    \ then\n        return 'No'\n    end\n    if file_name:sub(4,4) ~= '.' then\n\
    \        return 'No'\n    end\n    if file_name:sub(5,5) ~= '.' then\n       \
    \ return 'No'\n    end\n    if file_name:sub(6,6) ~= '.' then\n        return\
    \ 'No'\n    end\n    if file_name:sub(7,7) ~= '.' then\n        return 'No'\n\
    \    end\n    if file_name:sub(8,8) ~= '.' then\n        return 'No'\n    end\n\
    \    if file_name:sub(9,9) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(10,10)\
    \ ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(11,11) ~= '.'\
    \ then\n        return 'No'\n    end\n    if file_name:sub(12,12) ~= '.' then\n\
    \        return 'No'\n    end\n    if file_name:sub(13,13) ~= '.' then\n     \
    \   return 'No'\n    end\n    if file_name:sub(14,14) ~= '.' then\n        return\
    \ 'No'\n    end\n    if file_name:sub(15,15) ~= '.' then\n        return 'No'\n\
    \    end\n    if file_name:sub(16,16) ~= '.' then\n        return 'No'\n    end\n\
    \    if file_name:sub(17,17) ~= '.' then\n        return 'No'\n    end\n    if\
    \ file_name:sub(18,18) ~= '", "    if string.len(file_name) > 3 then\n       \
    \ return 'No'\n    end\n    if string.len(file_name) < 3 then\n        return\
    \ 'No'\n    end\n    if string.sub(file_name, 1, 2) == '0' then\n        return\
    \ 'No'\n    end\n    if string.sub(file_name, 2, 3) == '.' then\n        return\
    \ 'No'\n    end\n    if string.sub(file_name, string.len(file_name) - 2, string.len(file_name))\
    \ == '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 1)\
    \ ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, string.len(file_name)\
    \ - 3, string.len(file_name)) ~= '.' then\n        return 'No'\n    end\n    if\
    \ string.sub(file_name, 1, 1) ~= '.' then\n        return 'No'\n    end\n    if\
    \ string.sub(file_name, string.len(file_name) - 3, string.len(file_name)) ~= '.'\
    \ then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 1) ~= '.'\
    \ then\n        return 'No'\n    end\n    if string.sub(file_name, string.len(file_name)\
    \ - 3, string.len(file_name)) ~= '.' then\n        return 'No'\n    end\n    if\
    \ string.sub(file_name, 1, 1) ~= '.' then\n        return 'No'\n    end\n    if\
    \ string.sub(file_name, string.len(file_name) - 3, string.len(file_name)) ~= '.'\
    \ then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 1) ~= '.'\
    \ then\n        return 'No'\n    end\n    if string.sub(file_name, string.len(file_name)\
    \ - 3, string.len(file_name)) ~= '.' then\n        return 'No'\n    end\n    ",
  "    local valid = true\n    local dot_index = string.find(file_name, '.')\n   \
    \ local dot_substring = string.lower(file_name[1:dot_index])\n    local dot_substring_length\
    \ = #dot_substring\n    local dot_substring_length_valid = dot_substring_length\
    \ >= 1 and dot_substring[1] >= 'a' and dot_substring[1] <= 'z'\n    local dot_substring_length_valid_2\
    \ = dot_substring_length >= 2 and dot_substring[2] >= 'a' and dot_substring[2]\
    \ <= 'z'\n    local dot_substring_length_valid_3 = dot_substring_length >= 3 and\
    \ dot_substring[3] >= 'a' and dot_substring[3] <= 'z'\n    local dot_substring_length_valid_4\
    \ = dot_substring_length >= 4 and dot_substring[4] >= 'a' and dot_substring[4]\
    \ <= 'z'\n    local dot_substring_length_valid_5 = dot_substring_length >= 5 and\
    \ dot_substring[5] >= 'a' and dot_substring[5] <= 'z'\n    local dot_substring_length_valid_6\
    \ = dot_substring_length >= 6 and dot_substring[6] >= 'a' and dot_substring[6]\
    \ <= 'z'\n    local dot_substring_length_valid_7 = dot_substring_length >= 7 and\
    \ dot_substring[7] >= 'a' and dot_substring[7] <= 'z'\n    local dot_substring_length_valid_8\
    \ = dot_substring_length >= 8 and dot_substring[8] >= 'a' and dot_substring[8]\
    \ <= 'z'\n    local dot_substring_length_valid_9 = dot_substring_length >= 9 and\
    \ dot_substring[9] >= 'a' and dot_substring[9] <= 'z'\n    local dot_substring_length_valid_10\
    \ = dot_substring_length >= 10 and dot_substring[10] >= 'a' and dot_substring[",
  "    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name < 1\
    \ then\n        return 'No'\n    end\n    if file_name ~= '.' then\n        return\
    \ 'No'\n    end\n    local dot_index = string.find(file_name, '.')\n    local\
    \ before_dot = string.sub(file_name, 1, dot_index)\n    local after_dot = string.sub(file_name,\
    \ dot_index+1)\n    if #before_dot == 0 then\n        return 'No'\n    end\n \
    \   if not string.sub(before_dot, 1, 1) ~= 'a' .. 'z' or not string.sub(before_dot,\
    \ 1, 1) ~= 'A' .. 'Z' then\n        return 'No'\n    end\n    if not string.sub(after_dot,\
    \ 1, 1) ~= 'txt' or not string.sub(after_dot, 1, 1) ~= 'exe' or not string.sub(after_dot,\
    \ 1, 1) ~= 'dll' then\n        return 'No'\n    end\n    return 'Yes'\nend", " \
    \   local valid = true\n    local dot_index = string.find(file_name, '.')\n  \
    \  if dot_index == nil then\n        valid = false\n    else\n        local before_dot\
    \ = string.sub(file_name, 1, dot_index)\n        if string.len(before_dot) > 3\
    \ then\n            valid = false\n        else\n            local after_dot =\
    \ string.sub(file_name, dot_index + 1)\n            if string.len(after_dot) >\
    \ 3 then\n                valid = false\n            else\n                if\
    \ string.sub(after_dot, 1, 1) ~= '0' and string.sub(after_dot, 1, 1) ~= '1' and\
    \ string.sub(after_dot, 1, 1) ~= '2' and string.sub(after_dot, 1, 1) ~= '3' and\
    \ string.sub(after_dot, 1, 1) ~= '4' and string.sub(after_dot, 1, 1) ~= '5' and\
    \ string.sub(after_dot, 1, 1) ~= '6' and string.sub(after_dot, 1, 1) ~= '7' and\
    \ string.sub(after_dot, 1, 1) ~= '8' and string.sub(after_dot, 1, 1) ~= '9' then\n\
    \                    valid = false\n                else\n                   \
    \ if string.sub(after_dot, 1, 1) ~= 'a' and string.sub(after_dot, 1, 1) ~= 'b'\
    \ and string.sub(after_dot, 1, 1) ~= 'c' and string.sub(after_dot, 1, 1) ~= 'd'\
    \ and string.sub(after_dot, 1, 1) ~= 'e' and string.sub(after_dot, 1, 1) ~= 'f'\
    \ and string.sub(after_dot, 1, 1) ~= 'g' and string.sub(after_dot, 1, 1) ~= 'h'\
    \ and string.sub(after_dot, 1, 1) ~= 'i' and string.sub(after_dot, 1, 1) ~= 'j'\
    \ and string.sub(after_dot, 1, 1)", "    if #file_name > 3 then\n        return\
    \ 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n  \
    \  if file_name ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name,\
    \ 1, 1) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name,\
    \ 2, 2) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name,\
    \ 3, 3) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name,\
    \ 4, 4) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name,\
    \ 5, 5) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name,\
    \ 6, 6) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name,\
    \ 7, 7) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name,\
    \ 8, 8) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name,\
    \ 9, 9) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name,\
    \ 10, 10) ~= '.' then\n        return 'No'\n    end\n    return 'Yes'\nend", " \
    \   if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~=\
    \ file_name:match('^[0-9]{3}[.]') then\n        return 'No'\n    end\n    local\
    \ dot_index = string.find(file_name, '.')\n    local before_dot = string.lower(file_name:sub(1,\
    \ dot_index))\n    if not before_dot:match('^[a-zA-Z]') then\n        return 'No'\n\
    \    end\n    local after_dot = string.lower(file_name:sub(dot_index + 1, #file_name))\n\
    \    if not after_dot:match('^[txt|exe|dll]$') then\n        return 'No'\n   \
    \ end\n    return 'Yes'\nend", "    if #file_name < 3 then\n        return 'No'\n\
    \    end\n    if file_name ~= file_name:match('^[0-9]+') then\n        return\
    \ 'No'\n    end\n    if not file_name:match('^[a-zA-Z]') then\n        return\
    \ 'No'\n    end\n    if not file_name:match('^[a-zA-Z]\\.\\.[a-zA-Z]') then\n\
    \        return 'No'\n    end\n    if not file_name:match('^[a-zA-Z]\\.\\.[a-zA-Z]\\\
    .\\.[a-zA-Z]') then\n        return 'No'\n    end\n    return 'Yes'\nend", " \
    \   if #file_name > 3 then\n        return 'No'\n    end\n    if file_name ~=\
    \ file_name:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('^[0-9]')\
    \ then\n        return 'No'\n    end\n    if file_name:match('^[0-9][0-9][0-9]')\
    \ then\n        return 'No'\n    end\n    if file_name:match('^[0-9][0-9][0-9][0-9][0-9][0-9]')\
    \ then\n        return 'No'\n    end\n    if file_name:match('^[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

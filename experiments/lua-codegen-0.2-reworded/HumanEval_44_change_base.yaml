name: HumanEval_44_change_base
language: lua
prompt: "-- Change numerical base of input number x to base.\n-- return string representation\
  \ after the conversion.\n-- base numbers are less than 10.\n-- >>> change_base(8,\
  \ 3)\n-- '22'\n-- >>> change_base(8, 2)\n-- '1000'\n-- >>> change_base(7, 2)\n--\
  \ '111'\nlocal function change_base(x, base)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = change_base\n\
  \    lu.assertEquals(candidate(8, 3), '22')\n    lu.assertEquals(candidate(9, 3),\
  \ '100')\n    lu.assertEquals(candidate(234, 2), '11101010')\n    lu.assertEquals(candidate(16,\
  \ 2), '10000')\n    lu.assertEquals(candidate(8, 2), '1000')\n    lu.assertEquals(candidate(7,\
  \ 2), '111')\n    lu.assertEquals(candidate(2, 3), '2')\n    lu.assertEquals(candidate(3,\
  \ 4), '3')\n    lu.assertEquals(candidate(4, 5), '4')\n    lu.assertEquals(candidate(5,\
  \ 6), '5')\n    lu.assertEquals(candidate(6, 7), '6')\n    lu.assertEquals(candidate(7,\
  \ 8), '7')\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local result = \"\"\n    while x > 0 do\n        result = string.format(\"\
    %0\" .. base .. \"d\", x % base) .. result\n        x = math.floor(x / base)\n\
    \    end\n    return result\nend", "    local result = \"\"\n    for i = 1, base\
    \ do\n        result = string.format(\"%0\" .. i .. \"d\", x) .. result\n    end\n\
    \    return result\nend", "    local result = \"\"\n    while x > 0 do\n     \
    \   result = string.format(\"%0\" .. base .. \"d\", x % base) .. result\n    \
    \    x = math.floor(x / base)\n    end\n    return result\nend", "    local result\
    \ = \"\"\n    for i = 1, x do\n        result = string.char(base * i) .. result\n\
    \    end\n    return result\nend", "    local result = \"\"\n    while x > 0 do\n\
    \        result = string.format(\"%0*d\", base, x % base)\n        x = x / base\n\
    \    end\n    return result\nend", "    local result = \"\"\n    while x > 0 do\n\
    \        result = string.char(x % base) .. result\n        x = math.floor(x /\
    \ base)\n    end\n    return result\nend", "    local result = \"\"\n    while\
    \ x > 0 do\n        result = string.byte(x % base) + result\n        x = x / base\n\
    \    end\n    return result\nend", "    local result = \"\"\n    while x > 0 do\n\
    \        result = string.char(base * x % 10 + 48) .. result\n        x = x / 10\n\
    \    end\n    return result\nend", "    local str = ''\n    while x > 0 do\n \
    \       str = string.char(x % base) .. str\n        x = x / base\n    end\n  \
    \  return str\nend", "    local result = \"\"\n    for i = 1, x do\n        result\
    \ = string.format(\"%0\"..#                                                  \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                            ", "    local result\
    \ = \"\"\n    for i = 1, base do\n        result = string.format('%0*d', base,\
    \ x)\n        x = x * base\n    end\n    return result\nend", "    local result\
    \ = \"\"\n    while x > 0 do\n        result = string.byte(x % base) + result\n\
    \        x = x / base\n    end\n    return result\nend", "    local t = {}\n \
    \   for i = 1, base do\n        t[i] = 0\n    end\n    for i = 1, x do\n     \
    \   t[i] = t[i] + 1\n        if t[i] >= base then\n            t[i] = t[i] - base\n\
    \        end\n    end\n    for i = base, 1, -1 do\n        if t[i] > 0 then\n\
    \            t[i] = t[i] * base\n        end\n    end\n    return t[1]\nend",
  "    local result = \"\"\n    for i = 1, x do\n        result = string.char(base\
    \ * i) .. result\n    end\n    return result\nend", "    local result = \"\"\n\
    \    while x > 0 do\n        result = string.char(base * x % 10 + 48) .. result\n\
    \        x = x / 10\n    end\n    return result\nend", "    local result = \"\"\
    \n    for i = 1, base do\n        result = string.format('%0*d', base, x)\n  \
    \      x = x * base\n    end\n    return result\nend", "    local t = {}\n   \
    \ for i=1, base do\n        t[i] = 0\n    end\n    for i=1,x do\n        t[i]\
    \ = t[i] + 1\n        if t[i] > base then\n            t[i] = t[i] - base\n  \
    \      end\n    end\n    for i=base,1,-1 do\n        if t[i] > 0 then\n      \
    \      t[i] = t[i] * base\n        end\n    end\n    return t[1]\nend", "    local\
    \ result = \"\"\n    while x > 0 do\n        result = string.byte(x % base) +\
    \ result\n        x = x / base\n    end\n    return result\nend", "    local result\
    \ = \"\"\n    for i = 1, x do\n        result = string.char(base * i) .. result\n\
    \    end\n    return result\nend", "    local t = {}\n    for i = 1, base do\n\
    \        t[i] = 0\n    end\n    for i = 1, x do\n        t[i] = t[i] + 1\n   \
    \     if t[i] >= base then\n            t[i] = t[i] - base\n        end\n    end\n\
    \    return string.gsub(t.table.table[1], \"%d\", \"\")\nend", "    local result\
    \ = \"\"\n    while x > 0 do\n        result = string.char(base * x % 10 + 48)\
    \ .. result\n        x = x / 10\n    end\n    return result\nend", "    local\
    \ t = {}\n    for i=1, base do\n        t[i] = 0\n    end\n    for i=1,x do\n\
    \        t[i] = t[i] + 1\n        if t[i] >= base then\n            t[i] = t[i]\
    \ - base\n        end\n    end\n    for i=base,1,-1 do\n        if t[i] > 0 then\n\
    \            t[i] = t[i] * base\n        end\n    end\n    return t[1]\nend",
  "    local t = {}\n    for i = 1, base do\n        t[i] = 0\n    end\n    for i\
    \ = 1, x do\n        t[i] = t[i] + 1\n        if t[i] >= base then\n         \
    \   t[i] = t[i] - base\n        end\n    end\n    return string.format('%0' ..\
    \ base .. 'd', t[1])\nend", "    local result = \"\"\n    while x > 0 do\n   \
    \     result = string.format(\"%0\" .. base .. \"d\", x % base) .. result\n  \
    \      x = math.floor(x / base)\n    end\n    return result\nend", "    local\
    \ result = \"\"\n    for i = 1, x do\n        result = string.format(\"%0\" ..\
    \ base .. \"d\", i) .. result\n    end\n    return result\nend", "    local result\
    \ = \"\"\n    while x > 0 do\n        result = string.char(x % base) .. result\n\
    \        x = x / base\n    end\n    return result\nend", "    local t = {}\n \
    \   for i = 1, base do\n        t[i] = 0\n    end\n    for i = 2, x do\n     \
    \   t[i] = t[i / base] + i % base\n    end\n    return string.format('%0' .. base\
    \ .. 'd', t[1])\nend", "    local result = \"\"\n    for i = 1, x do\n       \
    \ result = string.char(base * i) .. result\n    end\n    return result\nend",
  "    local result = \"\"\n    while x > 0 do\n        result = string.format(\"\
    %0\" .. base .. \"d\", x % base) .. result\n        x = math.floor(x / base)\n\
    \    end\n    return result\nend", "    local result = \"\"\n    while x > 0:\n\
    \        result = string.format(\"%0\" .. base .. \"d\", x % base)\n        x\
    \ = x / base\n    return result\nend", "    local result = \"\"\n    for i = 1,\
    \ x do\n        result = string.char(base * i) .. result\n    end\n    return\
    \ result\nend", "    local result = \"\"\n    for i = 1, x do\n        result\
    \ = string.char(base * i) .. result\n    end\n    return result\nend", "    local\
    \ result = \"\"\n    for i = 1, x do\n        result = string.char(base * i) ..\
    \ result\n    end\n    return result\nend", "    local result = \"\"\n    for\
    \ i = 1, x do\n        result = string.char(base * i) .. result\n    end\n   \
    \ return result\nend", "    local result = \"\"\n    while x > 0 do\n        result\
    \ = string.format(\"%0\" .. base .. \"d\", x % base) .. result\n        x = x\
    \ / base\n    end\n    return result\nend", "    local result = \"\"\n    for\
    \ i = 1, x do\n        result = string.char(base * i) .. result\n    end\n   \
    \ return result\nend", "    local result = \"\"\n    while x > 0 do\n        result\
    \ = string.format(\"%0\" .. base .. \"d\", x % base) .. result\n        x = x\
    \ / base\n    end\n    return result\nend", "    local result = \"\"\n    while\
    \ x > 0 do\n        result = string.char(base * x % 10 + 48) .. result\n     \
    \   x = x / 10\n    end\n    return result\nend", "    local result = \"\"\n \
    \   while x > 0 do\n        result = string.byte(x % base) .. result\n       \
    \ x = x / base\n    end\n    return result\nend", "    local result = \"\"\n \
    \   while x > 0 do\n        result = string.format(\"%0\" .. base .. \"d\", x\
    \ % base) .. result\n        x = x / base\n    end\n    return result\nend", " \
    \   local result = \"\"\n    for i = 1, x do\n        result = string.format('%0*d',\
    \ base, i) .. result\n    end\n    return result\nend", "    local result = \"\
    \"\n    while x > 0 do\n        result = string.format(\"%0\" .. base .. \"d\"\
    , x % base) .. result\n        x = x / base\n    end\n    return result\nend",
  "    local result = \"\"\n    for i = 1, x do\n        result = string.format(\"\
    %0\"..#result..\"d\", base * i) .. result\n    end\n    return result\nend", " \
    \   local result = \"\"\n    for i = 1, x do\n        result = string.char(base\
    \ * i) .. result\n    end\n    return result\nend", "    local t = {}\n    for\
    \ i = 1, base do\n        t[i] = 0\n    end\n    for i = 1, x do\n        t[i]\
    \ = t[i] + 1\n        if t[i] >= base then\n            t[i] = t[i] - base\n \
    \       end\n    end\n    return string.gsub(t.table.table[1], \"%d\", \"\")\n\
    end", "    local result = \"\"\n    while x > 0 do\n        result = string.format(\"\
    %0\" .. base .. \"d\", x % base) .. result\n        x = x / base\n    end\n  \
    \  return result\nend", "    local result = \"\"\n    for i = 1, x do\n      \
    \  result = string.format(\"%0\" .. base .. \"d\", i) .. result\n    end\n   \
    \ return result\nend", "    local result = \"\"\n    while x > 0:\n        result\
    \ = string.format(\"%0\" .. base .. \"d\", x % base)\n        x = x / base\n \
    \   return result\nend", "    local str = \"\"\n    while x > 0 do\n        str\
    \ = string.char(x % base) .. str\n        x = x / base\n    end\n    return str\n\
    end", "    local result = \"\"\n    for i = 1, x do\n        result = string.format(\"\
    %0\" .. base .. \"d\", i) .. result\n    end\n    return result\nend", "    local\
    \ result = \"\"\n    while x > 0 do\n        result = string.byte(x % base) +\
    \ result\n        x = x / base\n    end\n    return result\nend", "    local result\
    \ = \"\"\n    while x > 0 do\n        result = string.format(\"%0\" .. base ..\
    \ \"d\", x % base) .. result\n        x = x / base\n    end\n    return result\n\
    end", "    local result = \"\"\n    while x > 0 do\n        result = string.byte(x\
    \ % base) + result\n        x = x / base\n    end\n    return result\nend", " \
    \   local result = \"\"\n    for i = 1, x do\n        result = string.char(base\
    \ * i) .. result\n    end\n    return result\nend", "    local result = \"\"\n\
    \    while x > 0 do\n        result = string.byte(x % base) + result\n       \
    \ x = x / base\n    end\n    return result\nend", "    local t = {}\n    for i\
    \ = 1, base do\n        t[i] = 0\n    end\n    for i = 1, x do\n        t[i] =\
    \ t[i] + 1\n        if t[i] >= base then\n            t[i] = t[i] - base\n   \
    \     end\n    end\n    for i = base, 1, -1 do\n        if t[i] > 0 then\n   \
    \         t[i] = t[i] * base\n        end\n    end\n    return string.format('%0'..math.floor(math.log(base,\
    \ 2))+1..'d', t[1])\nend", "    local result = \"\"\n    while x > 0 do\n    \
    \    result = string.char(base * x % 10 + 48) .. result\n        x = x / 10\n\
    \    end\n    return result\nend", "    local result = \"\"\n    for i = 1, x\
    \ do\n        result = string.char(base * i) .. result\n    end\n    return result\n\
    end", "    local result = \"\"\n    for i = 1, x do\n        result = string.char(base\
    \ * i) .. result\n    end\n    return result\nend", "    local result = \"\"\n\
    \    for i = 1, x do\n        result = string.format('%0*d', base, i) .. result\n\
    \    end\n    return result\nend", "    local result = \"\"\n    for i = 1, x\
    \ do\n        result = string.char(base * i) .. result\n    end\n    return result\n\
    end", "    local result = \"\"\n    while x > 0 do\n        result = string.byte(x\
    \ % base) + result\n        x = x / base\n    end\n    return result\nend", " \
    \   local result = \"\"\n    for i = 1, x do\n        result = string.char(base\
    \ * i) .. result\n    end\n    return result\nend", "    local result = \"\"\n\
    \    for i = 1, x do\n        result = string.char(base * i) .. result\n    end\n\
    \    return result\nend", "    local result = \"\"\n    for i = 1, x do\n    \
    \    result = string.char(base * i) .. result\n    end\n    return result\nend",
  "    local result = \"\"\n    for i = 1, x do\n        result = string.char(base\
    \ * i) .. result\n    end\n    return result\nend", "    local result = \"\"\n\
    \    while x > 0 do\n        result = string.byte(x % base) + result\n       \
    \ x = x / base\n    end\n    return result\nend", "    local result = \"\"\n \
    \   for i = 1, x do\n        result = string.char(base * i) .. result\n    end\n\
    \    return result\nend", "    local result = \"\"\n    for i = 1, x do\n    \
    \    result = string.format(\"%0\" .. base .. \"d\", i) .. result\n    end\n \
    \   return result\nend", "    local result = \"\"\n    for i = 1, x do\n     \
    \   result = string.format(\"%0\" .. base .. \"d\", i) .. result\n    end\n  \
    \  return result\nend", "    local result = \"\"\n    while x > 0 do\n       \
    \ result = string.format(\"%0\" .. base .. \"d\", x % base) .. result\n      \
    \  x = x / base\n    end\n    return result\nend", "    local result = \"\"\n\
    \    while x > 0 do\n        result = string.char(base * x % 10 + 48) .. result\n\
    \        x = x / 10\n    end\n    return result\nend", "    local result = \"\"\
    \n    for i = 1, x do\n        result = string.char(base * i) .. result\n    end\n\
    \    return result\nend", "    local result = \"\"\n    for i = 1, x do\n    \
    \    result = string.char(base * i) .. result\n    end\n    return result\nend",
  "    local str = \"\"\n    while x > 0 do\n        str = string.char(x % base) ..\
    \ str\n        x = math.floor(x / base)\n    end\n    return str\nend", "    local\
    \ result = \"\"\n    while x > 0 do\n        result = string.char(base * x % 10\
    \ + 48) .. result\n        x = x / 10\n    end\n    return result\nend", "   \
    \ local result = \"\"\n    for i = 1, x do\n        result = string.char(base\
    \ * i) .. result\n    end\n    return result\nend", "    local result = \"\"\n\
    \    while x > 0 do\n        result = string.byte(x % base) + result\n       \
    \ x = x / base\n    end\n    return result\nend", "    local result = \"\"\n \
    \   for i = 1, x do\n        result = string.char(base * i) .. result\n    end\n\
    \    return result\nend", "    local t = {}\n    for i = 1, base do\n        t[i]\
    \ = 0\n    end\n    for i = 1, x do\n        t[i] = t[i] + 1\n        if t[i]\
    \ >= base then\n            t[i] = t[i] - base\n        end\n    end\n    return\
    \ string.format('%0'..math.floor(math.log(base, 2))+1..'d', t[1])\nend", "   \
    \ local result = \"\"\n    while x > 0 do\n        result = string.char(base *\
    \ x % 10 + 48) .. result\n        x = x / 10\n    end\n    return result\nend",
  "    local result = \"\"\n    for i = 1, x do\n        result = string.char(base\
    \ * i) .. result\n    end\n    return result\nend", "    local result = \"\"\n\
    \    for i = 1, x do\n        result = string.format(\"%s%0\" .. base .. \"d\"\
    , result, i)\n    end\n    return result\nend", "    local result = \"\"\n   \
    \ for i = 1, x do\n        result = string.char(base * i) .. result\n    end\n\
    \    return result\nend", "    local result = \"\"\n    while x > 0 do\n     \
    \   result = string.char(x % base) .. result\n        x = x / base\n    end\n\
    \    return result\nend", "    local str = \"\"\n    while x > 0 do\n        str\
    \ = string.char(x % base) .. str\n        x = x / base\n    end\n    return str\n\
    end", "    local result = \"\"\n    for i = 1, x do\n        result = string.format(\"\
    %0\"..#result..\"d\", base * i) .. result\n    end\n    return result\nend", " \
    \   local result = \"\"\n    for i = 1, x do\n        result = string.format(\"\
    %0\" .. base .. \"d\", i) .. result\n    end\n    return result\nend", "    local\
    \ result = \"\"\n    while x > 0 do\n        result = string.format(\"%0\" ..\
    \ base .. \"d\", x % base) .. result\n        x = math.floor(x / base)\n    end\n\
    \    return result\nend", "    local result = \"\"\n    while x > 0 do\n     \
    \   result = string.format(\"%0\" .. base .. \"d\", x % base) .. result\n    \
    \    x = math.floor(x / base)\n    end\n    return result\nend", "    local str\
    \ = ''\n    for i = 1, x do\n        str = str .. string.rep('0', base)\n    end\n\
    \    return str\nend", "    local result = \"\"\n    for i = 1, x do\n       \
    \ result = string.char(base * i) .. result\n    end\n    return result\nend",
  "    local result = \"\"\n    for i = 1, x do\n        result = string.char(base\
    \ * i) .. result\n    end\n    return result\nend", "    local result = \"\"\n\
    \    for i = 1, x do\n        result = string.char(base * i) .. result\n    end\n\
    \    return result\nend", "    local result = \"\"\n    for i = 1, x do\n    \
    \    result = string.char(base * i) .. result\n    end\n    return result\nend",
  "    local result = \"\"\n    for i = 1, x do\n        result = string.char(base\
    \ * i) .. result\n    end\n    return result\nend", "    local result = \"\"\n\
    \    for i = 1, x do\n        result = string.format(\"%0\" .. base .. \"d\",\
    \ i) .. result\n    end\n    return result\nend", "    local result = \"\"\n \
    \   while x > 0 do\n        result = string.char(x % base) .. result\n       \
    \ x = x / base\n    end\n    return result\nend", "    local result = \"\"\n \
    \   for i = 1, x do\n        result = string.format(\"%0\"..base..\"d\", i) ..\
    \ result\n    end\n    return result\nend", "    local result = \"\"\n    for\
    \ i = 1, x do\n        result = string.char(base * i) .. result\n    end\n   \
    \ return result\nend", "    local result = \"\"\n    for i = 1, x do\n       \
    \ result = string.char(base * i) .. result\n    end\n    return result\nend",
  "    local result = \"\"\n    for i = 1, x do\n        result = string.char(base\
    \ * i) .. result\n    end\n    return result\nend", "    local t = {}\n    for\
    \ i = 1, base do\n        t[i] = 0\n    end\n    for i = 1, x do\n        t[i]\
    \ = t[i] + 1\n        if t[i] > base then\n            t[i] = t[i] - base\n  \
    \      end\n    end\n    return string.format('%0' .. base .. 'd', t[1])\nend",
  "    local result = \"\"\n    while x > 0 do\n        result = string.format(\"\
    %0*d\", base, x % base) .. result\n        x = x / base\n    end\n    return result\n\
    end", "    local result = \"\"\n    while x > 0 do\n        result = string.byte(x\
    \ % base) .. result\n        x = x / base\n    end\n    return result\nend", " \
    \   local result = \"\"\n    for i = 1, x do\n        result = string.char(base\
    \ * i) .. result\n    end\n    return result\nend", "    local result = \"\"\n\
    \    while x > 0 do\n        result = string.format(\"%0\" .. base .. \"d\", x\
    \ % base) .. result\n        x = x / base\n    end\n    return result\nend", " \
    \   local result = \"\"\n    for i = 1, x do\n        result = string.format(\"\
    %0\" .. base .. \"d\", i) .. result\n    end\n    return result\nend", "    local\
    \ result = \"\"\n    for i = 1, x do\n        result = string.char(base * i) ..\
    \ result\n    end\n    return result\nend", "    local result = \"\"\n    for\
    \ i = 1, x do\n        result = string.format(\"%0\" .. base .. \"d\", i) .. result\n\
    \    end\n    return result\nend", "    local result = \"\"\n    for i = 1, x\
    \ do\n        result = string.char(base * i) .. result\n    end\n    return result\n\
    end", "    local result = \"\"\n    for i = 1, x do\n        result = string.format(\"\
    %0\" .. base .. \"d\", i) .. result\n    end\n    return result\nend", "    local\
    \ result = \"\"\n    for i = 1, x do\n        result = string.char(base * i) ..\
    \ result\n    end\n    return result\nend", "    local result = \"\"\n    for\
    \ i = 1, x do\n        result = string.format(\"%0\"..#result..\"d\", base * i)\
    \ .. result\n    end\n    return result\nend", "    local t = {}\n    for i =\
    \ 1, base do\n        t[i] = 0\n    end\n    for i = 1, x do\n        t[i] = t[i]\
    \ + 1\n        if t[i] >= base then\n            t[i] = t[i] - base\n        end\n\
    \    end\n    return string.format('%0' .. base .. 'd', t[1])\nend", "    local\
    \ result = \"\"\n    for i = 1, x do\n        result = string.char(base * i) ..\
    \ result\n    end\n    return result\nend", "    local result = \"\"\n    for\
    \ i = 1, base do\n        result = string.char(x % base) .. result\n        x\
    \ = math.floor(x / base)\n    end\n    return result\nend", "    local result\
    \ = \"\"\n    for i = 1, x do\n        result = string.format(\"%0\" .. base ..\
    \ \"d\", i) .. result\n    end\n    return result\nend", "    local result = \"\
    \"\n    while x > 0 do\n        result = string.format(\"%0\" .. base .. \"d\"\
    , x % base) .. result\n        x = x / base\n    end\n    return result\nend",
  "    local result = \"\"\n    for i = 1, x do\n        result = string.char(base\
    \ * i) .. result\n    end\n    return result\nend", "    local t = {}\n    for\
    \ i = 1, base do\n        t[i] = 0\n    end\n    for i = 1, x do\n        t[i]\
    \ = t[i] + 1\n        if t[i] >= base then\n            t[i] = t[i] - base\n \
    \       end\n    end\n    return string.format('%0' .. base .. 'd', t[1])\nend",
  "    local t = {}\n    for i = 1, base do\n        t[i] = 0\n    end\n    for i\
    \ = 1, x do\n        t[i] = t[i] + 1\n        if t[i] >= base then\n         \
    \   t[i] = t[i] - base\n        end\n    end\n    return string.format('%0' ..\
    \ base .. 'd', t[1])\nend", "    local result = \"\"\n    while x > 0 do\n   \
    \     result = string.byte(x % base) + result\n        x = x / base\n    end\n\
    \    return result\nend", "    local t = {}\n    for i = 1, base do\n        t[i]\
    \ = 0\n    end\n    for i = 1, x do\n        t[i] = t[i] + 1\n        t[t[i]]\
    \ = i\n    end\n    return string.format('%0'..math.floor(math.log(base, 2))..'d',\
    \ t[1])\nend", "    local result = \"\"\n    for i = 1, x do\n        result =\
    \ string.format('%0*d', base, i) .. result\n    end\n    return result\nend",
  "    local result = \"\"\n    for i = 1, x do\n        result = string.char(base\
    \ * i) .. result\n    end\n    return result\nend", "    local result = \"\"\n\
    \    for i = 1, x do\n        result = string.char(base * i) .. result\n    end\n\
    \    return result\nend", "    local result = \"\"\n    for i = 1, x do\n    \
    \    result = string.char(base * i) .. result\n    end\n    return result\nend",
  "    local result = \"\"\n    for i = 1, x do\n        result = string.char(base\
    \ * i) .. result\n    end\n    return result\nend", "    local result = \"\"\n\
    \    while x > 0 do\n        result = string.format(\"%0\" .. base .. \"d\", x\
    \ % base) .. result\n        x = x / base\n    end\n    return result\nend", " \
    \   local result = \"\"\n    while x > 0 do\n        result = string.char(x %\
    \ base) .. result\n        x = x / base\n    end\n    return result\nend", " \
    \   local result = \"\"\n    for i = 1, x do\n        result = string.char(base\
    \ * i) .. result\n    end\n    return result\nend", "    local result = \"\"\n\
    \    for i = 1, x do\n        result = string.char(base * i) .. result\n    end\n\
    \    return result\nend", "    local t = {}\n    for i=1, base do\n        t[i]\
    \ = 0\n    end\n    for i=1,x do\n        t[i] = t[i] + 1\n        if t[i] >=\
    \ base then\n            t[i] = t[i] - base\n        end\n    end\n    for i=base,1,-1\
    \ do\n        if t[i] > 0 then\n            t[i] = t[i] * base\n        end\n\
    \    end\n    return string.gsub(t.table.table[1], \"%d\", \"\")\nend", "    local\
    \ result = \"\"\n    for i = 1, base do\n        result = string.format('%0*d',\
    \ base, x)\n        x = x * base\n    end\n    return result\nend", "    local\
    \ result = \"\"\n    for i = 1, base do\n        result = string.format(\"%0\"\
    ..i..\"d\", x) .. result\n    end\n    return result\nend", "    local result\
    \ = \"\"\n    for i = 1, x do\n        result = string.format(\"%s%0\" .. base\
    \ .. \"d\", result, i)\n    end\n    return result\nend", "    local result =\
    \ \"\"\n    for i = 1, x do\n        result = string.char(base * i) .. result\n\
    \    end\n    return result\nend", "    local result = \"\"\n    for i = 1, x\
    \ do\n        result = string.format(\"%0\" .. base .. \"d\", i) .. result\n \
    \   end\n    return result\nend", "    local result = \"\"\n    for i = 1, x do\n\
    \        result = string.char(base * i) .. result\n    end\n    return result\n\
    end", "    local result = \"\"\n    while x > 0 do\n        result = string.format(\"\
    %0\" .. base .. \"d\", x % base) .. result\n        x = x / base\n    end\n  \
    \  return result\nend", "    local result = \"\"\n    for i = 1, x do\n      \
    \  result = string.char(base * i) .. result\n    end\n    return result\nend",
  "    local result = \"\"\n    for i = 1, x do\n        result = string.char(base\
    \ * i) .. result\n    end\n    return result\nend", "    local result = \"\"\n\
    \    while x > 0 do\n        result = string.byte(x % base) + result\n       \
    \ x = x / base\n    end\n    return result\nend", "    local result = \"\"\n \
    \   for i = 1, x do\n        result = string.char(base * i) .. result\n    end\n\
    \    return result\nend", "    local result = \"\"\n    for i = 1, x do\n    \
    \    result = string.char(base * i) .. result\n    end\n    return result\nend",
  "    local t = {}\n    for i = 1, base do\n        t[i] = 0\n    end\n    for i\
    \ = 1, x do\n        t[i] = t[i] + 1\n        if t[i] >= base then\n         \
    \   t[i] = t[i] - base\n        end\n    end\n    return string.format('%0' ..\
    \ base .. 'd', t[1])\nend", "    local result = \"\"\n    while x > 0 do\n   \
    \     result = string.format(\"%0*d\", base, x % base) .. result\n        x =\
    \ x / base\n    end\n    return result\nend", "    local result = \"\"\n    for\
    \ i = 1, x do\n        result = string.char(base * i) .. result\n    end\n   \
    \ return result\nend", "    local result = \"\"\n    while x > 0 do\n        result\
    \ = string.byte(x % base) + result\n        x = x / base\n    end\n    return\
    \ result\nend", "    local result = \"\"\n    for i = 1, x do\n        result\
    \ = string.format(\"%0\" .. base .. \"d\", i) .. result\n    end\n    return result\n\
    end", "    local result = \"\"\n    for i = 1, x do\n        result = string.char(base\
    \ * i) .. result\n    end\n    return result\nend", "    local result = \"\"\n\
    \    while x > 0 do\n        result = string.byte(x % base) + result\n       \
    \ x = x / base\n    end\n    return result\nend", "    local result = \"\"\n \
    \   for i = 1, base do\n        result = string.format(\"%s%d\", result, x % base)\n\
    \        x = x / base\n    end\n    return result\nend", "    local result = \"\
    \"\n    for i = 1, x do\n        result = string.format(\"%0\" .. base .. \"d\"\
    , i) .. result\n    end\n    return result\nend", "    local result = \"\"\n \
    \   for i = 1, x do\n        result = string.format(\"%0\" .. base .. \"d\", i)\
    \ .. result\n    end\n    return result\nend", "    local result = \"\"\n    for\
    \ i = 1, x do\n        result = string.format(\"%0*d\", base, i) .. result\n \
    \   end\n    return result\nend", "    local t = {}\n    for i = 1, base do\n\
    \        t[i] = 0\n    end\n    for i = 1, x do\n        t[i] = t[i] + 1\n   \
    \     if t[i] >= base then\n            t[i] = t[i] - base\n        end\n    end\n\
    \    for i = base, 1, -1 do\n        if t[i] > 0 then\n            t[i] = t[i]\
    \ * base\n        end\n    end\n    return string.format('%0'..math.floor(math.log(base,\
    \ 2) + 1)..'d', t[1])\nend", "    local result = \"\"\n    for i = 1, x do\n \
    \       result = string.format(\"%0\" .. base .. \"d\", i) .. result\n    end\n\
    \    return result\nend", "    local result = \"\"\n    while x > 0 do\n     \
    \   result = string.format(\"%0\" .. base .. \"d\", x % base) .. result\n    \
    \    x = x / base\n    end\n    return result\nend", "    local t = {}\n    for\
    \ i = 1, base do\n        t[i] = 0\n    end\n    for i = 1, x do\n        t[i]\
    \ = t[i] + 1\n        if t[i] >= base then\n            t[i] = t[i] - base\n \
    \       end\n    end\n    return string.format('%0' .. base .. 'b', t)\nend",
  "    local result = \"\"\n    for i = 1, x do\n        result = string.char(base\
    \ * i) .. result\n    end\n    return result\nend", "    local result = \"\"\n\
    \    for i = 1, base do\n        result = string.format(\"%0\"..i..\"d\", x) ..\
    \ result\n    end\n    return result\nend", "    local result = \"\"\n    while\
    \ x > 0 do\n        result = string.format(\"%0\" .. base .. \"d\", x % base)\
    \ .. result\n        x = x / base\n    end\n    return result\nend", "    local\
    \ str = \"\"\n    while x > 0 do\n        str = string.char(x % base) .. str\n\
    \        x = math.floor(x / base)\n    end\n    return str\nend", "    local result\
    \ = \"\"\n    for i = 1, x do\n        result = string.char(base * i) .. result\n\
    \    end\n    return result\nend", "    local result = \"\"\n    while x > 0 do\n\
    \        result = string.format(\"%0\" .. base .. \"d\", x % base) .. result\n\
    \        x = x / base\n    end\n    return result\nend", "    local result = \"\
    \"\n    for i = 1, x do\n        result = string.char(base * i) .. result\n  \
    \  end\n    return result\nend", "    local t = {}\n    for i = 1, base do\n \
    \       t[i] = 0\n    end\n    for i = 1, x do\n        t[x % base] = t[x % base]\
    \ + 1\n    end\n    for i = base, 1, -1 do\n        t[i] = t[i] - 1\n    end\n\
    \    return string.format('%0' .. base .. 'd', t[1])\nend", "    local result\
    \ = \"\"\n    while x > 0 do\n        result = string.format(\"%0\" .. base ..\
    \ \"d\", x % base) .. result\n        x = x / base\n    end\n    return result\n\
    end", "    local t = {}\n    for i = 1, base do\n        t[i] = 0\n    end\n \
    \   for i = 1, x do\n        t[i] = t[i] + 1\n        t[t[i]] = i\n    end\n \
    \   return string.gsub(t.table.table[1], \"%d\", \"\")\nend", "    local result\
    \ = \"\"\n    for i = 1, x do\n        result = string.char(base * i) .. result\n\
    \    end\n    return result\nend", "    local result = \"\"\n    while x > 0 do\n\
    \        result = string.char(x % base) .. result\n        x = x / base\n    end\n\
    \    return result\nend", "    local result = \"\"\n    for i = 1, x do\n    \
    \    result = string.char(base * i) .. result\n    end\n    return result\nend",
  "    local result = \"\"\n    for i = 1, x do\n        result = string.format(\"\
    %0\" .. base .. \"d\", i) .. result\n    end\n    return result\nend", "    local\
    \ result = \"\"\n    for i = 1, x do\n        result = string.format(\"%0\"..#result..\"\
    d\", base * i) .. result\n    end\n    return result\nend", "    local result\
    \ = \"\"\n    for i = 1, x do\n        result = string.format(\"%0\" .. base ..\
    \ \"d\", i) .. result\n    end\n    return result\nend", "    local result = \"\
    \"\n    while x > 0 do\n        result = string.char(x % base) .. result\n   \
    \     x = math.floor(x / base)\n    end\n    return result\nend", "    local result\
    \ = \"\"\n    for i = 1, x do\n        result = string.char(base * i) .. result\n\
    \    end\n    return result\nend", "    local result = \"\"\n    while x > 0 do\n\
    \        result = string.char(base * x % 10 + 48) .. result\n        x = x / 10\n\
    \    end\n    return result\nend", "    local result = \"\"\n    while x > 0 do\n\
    \        result = string.format(\"%0\" .. base .. \"d\", x % base) .. result\n\
    \        x = x / base\n    end\n    return result\nend", "    local result = \"\
    \"\n    for i = 1, x do\n        result = string.format(\"%0\" .. base .. \"d\"\
    , i) .. result\n    end\n    return result\nend", "    local result = \"\"\n \
    \   for i = 1, x do\n        result = string.char(base * i) .. result\n    end\n\
    \    return result\nend", "    local result = \"\"\n    for i = 1, x do\n    \
    \    result = string.char(base * i) .. result\n    end\n    return result\nend",
  "    local t = {}\n    for i = 1, base do\n        t[i] = 0\n    end\n    for i\
    \ = 1, x do\n        t[i] = t[i] + 1\n        if t[i] >= base then\n         \
    \   t[i] = t[i] - base\n        end\n    end\n    return string.gsub(\"\", t)\n\
    end", "    local result = \"\"\n    for i = 1, x do\n        result = string.char(base\
    \ * i) .. result\n    end\n    return result\nend", "    local result = \"\"\n\
    \    for i = 1, x do\n        result = string.char(base * i) .. result\n    end\n\
    \    return result\nend", "    local t = {}\n    for i = 1, base do\n        t[i]\
    \ = 0\n    end\n    for i = 1, x do\n        t[i] = t[i] + 1\n        if t[i]\
    \ >= base then\n            t[i] = t[i] - base\n        end\n    end\n    for\
    \ i = base, 1, -1 do\n        if t[i] > 0 then\n            t[i] = t[i] * base\n\
    \        end\n    end\n    return string.gsub(t.table.table[1], \"%d\", \"\")\n\
    end", "    local result = \"\"\n    for i = 1, x do\n        result = string.format(\"\
    %0\" .. base .. \"d\", i) .. result\n    end\n    return result\nend", "    local\
    \ result = \"\"\n    for i = 1, x do\n        result = string.char(base * i) ..\
    \ result\n    end\n    return result\nend", "    local t = {}\n    for i = 1,\
    \ base do\n        t[i] = 0\n    end\n    for i = 1, x do\n        t[i] = t[i]\
    \ + 1\n        if t[i] >= base then\n            t[i] = t[i] - base\n        end\n\
    \    end\n    return string.format('%0'..math.floor(math.log(base, 2))..'d', t[1])\n\
    end", "    local result = \"\"\n    for i = 1, x do\n        result = string.format(\"\
    %0\" .. base .. \"d\", i) .. result\n    end\n    return result\nend", "    local\
    \ result = \"\"\n    while x > 0:\n        result = string.format(\"%0\" .. base\
    \ .. \"d\", x % base)\n        x = x / base\n    return result\nend", "    local\
    \ t = {}\n    for i = 1, base do\n        t[i] = 0\n    end\n    for i = 1, x\
    \ do\n        t[i] = t[i] + 1\n        if t[i] >= base then\n            t[i]\
    \ = t[i] - base\n        end\n    end\n    return string.format('%0' .. base ..\
    \ 'd', t[1])\nend", "    local result = \"\"\n    for i = 1, x do\n        result\
    \ = string.format(\"%0\"..#result..\"d\", base * i) .. result\n    end\n    return\
    \ result\nend", "    local result = \"\"\n    while x > 0:\n        result = string.format(\"\
    %0\" .. base .. \"d\", x % base)\n        x = x / base\n    return result\nend",
  "    local result = \"\"\n    for i = 1, x do\n        result = string.format(\"\
    %0\" .. base .. \"d\", i) .. result\n    end\n    return result\nend", "    local\
    \ result = \"\"\n    for i = 1, x do\n        result = string.char(base * i) ..\
    \ result\n    end\n    return result\nend", "    local result = \"\"\n    for\
    \ i = 1, base do\n        result = string.format(\"%s%d\", result, x % base)\n\
    \        x = x / base\n    end\n    return result\nend", "    local result = \"\
    \"\n    for i = 1, x do\n        result = string.char(base * i) .. result\n  \
    \  end\n    return result\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

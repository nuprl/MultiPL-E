name: HumanEval_68_pluck
language: lua
prompt: "-- \"Given a table representing a branch of a tree that has non-negative\
  \ integer nodes\n-- your task is to pluck one of the nodes and return it.\n-- The\
  \ plucked node should be the node with the smallest even value.\n-- If multiple\
  \ nodes with the same smallest even value are found return the node that has smallest\
  \ index.\n-- The plucked node should be returned in a table, [ smalest_value, its\
  \ index ],\n-- If there are no even values or the given table is empty, return [].\n\
  -- Example 1:\n-- >>> pluck([4,2,3])\n-- [2, 1]\n-- Explanation: 2 has the smallest\
  \ even value, and 2 has the smallest index.\n-- Example 2:\n-- >>> pluck([1,2,3])\n\
  -- [2, 1]\n-- Explanation: 2 has the smallest even value, and 2 has the smallest\
  \ index.\n-- Example 3:\n-- >>> pluck([])\n-- []\n-- Example 4:\n-- >>> pluck([5,\
  \ 0, 3, 0, 4, 2])\n-- [0, 1]\n-- Explanation: 0 is the smallest value, but  there\
  \ are two zeros,\n-- so we will choose the first zero, which has the smallest index.\n\
  -- Constraints:\n-- * 1 <= nodes.length <= 10000\n-- * 0 <= node.value\nlocal function\
  \ pluck(arr)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = pluck\n\
  \    lu.assertEquals(candidate({4, 2, 3}), {2, 1})\n    lu.assertEquals(candidate({1,\
  \ 2, 3}), {2, 1})\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({5,\
  \ 0, 3, 0, 4, 2}), {0, 1})\n    lu.assertEquals(candidate({1, 2, 3, 0, 5, 3}), {0,\
  \ 3})\n    lu.assertEquals(candidate({5, 4, 8, 4, 8}), {4, 1})\n    lu.assertEquals(candidate({7,\
  \ 6, 7, 1}), {6, 1})\n    lu.assertEquals(candidate({7, 9, 7, 1}), {})\nend\n\n\
  os.exit(lu.LuaUnit.run())"
completions: ["    local result = {}\n    for i = 1, #arr, 2 do\n        if arr[i]\
    \ ~= arr[i-1] then\n            result[arr[i]] = i\n        end\n    end\n   \
    \ return result[1]\nend\n\"\"\"", "    local result = {}\n    for i = 1, #arr,\
    \ 2 do\n        if arr[i] ~= arr[i-1] then\n            result[arr[i]] = i\n \
    \       end\n    end\n    return result\nend", "    local ans = {}\n    for i\
    \ = 1, #arr, 2 do\n        if arr[i] ~= arr[i-1] then\n            if arr[i] ~=\
    \ 0 then\n                ans[arr[i]] = i\n            end\n        end\n    end\n\
    \    return ans\nend", "    local i, j, min_index, min_value, min_index_value\n\
    \    for i = 1, #arr, 1 do\n        if arr[i] % 2 == 0 then\n            if min_index\
    \ == nil or arr[i] < min_value then\n                min_index = i\n         \
    \       min_value = arr[i]\n            end\n        end\n    end\n    if min_index\
    \ == nil then\n        return []\n    end\n    for j = 1, #arr, 1 do\n       \
    \ if arr[j] == min_value then\n            if min_index_value == nil or j < min_index_value\
    \ then\n                min_index_value = j\n            end\n        end\n  \
    \  end\n    return [min_value, min_index]\nend\n\"\"\"\n<|endoftext|><|python|>#",
  "    local result = {}\n    for i = 1, #arr, 2 do\n        if arr[i] % 2 == 0 then\n\
    \            if result[arr[i]] == nil then\n                result[arr[i]] = i\n\
    \            else\n                result[arr[i]] = min(result[arr[i]], i)\n \
    \       end\n    end\n    return result[1]\nend\n\"\"\"\n<|endoftext|><|python|>#\
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                              ", "    local res\
    \ = {}\n    for i = 1, #arr, 2 do\n        if arr[i] ~= arr[i-1] then\n      \
    \      res[arr[i]] = i\n        end\n    end\n    return res[min(res)]\nend\n\"\
    \"\"", "    local res = {}\n    for i = 1, #arr, 2 do\n        if arr[i] ~= arr[i-1]\
    \ then\n            res[arr[i]] = i\n        end\n    end\n    return res[min(res)]\n\
    end\n\"\"\"", "    local result = {}\n    for i = 1, #arr, 2 do\n        if arr[i]\
    \ ~= arr[i-1] then\n            if arr[i] ~= 0 then\n                result[#\
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                    ", "    local\
    \ i, res = 1, {}\n    for i = 1, #arr, 2 do\n        if arr[i] ~= arr[i - 1] then\n\
    \            res[#                                                           \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                       ", "    local res = {}\n    for i = 1, #arr, 2 do\n  \
    \      if arr[i] ~= arr[i-1] then\n            if res[arr[i]] == nil then\n  \
    \              res[arr[i]] = i\n            else\n                res[arr[i]]\
    \ = res[arr[i]]\n            end\n        end\n    end\n    return res[arr[1]]\n\
    end\n\"\"\"\n<|endoftext|><|python|>#", "    local res = {}\n    for i = 1, #arr,\
    \ 2 do\n        if arr[i] ~= arr[i-1] then\n            res[arr[i]] = i\n    \
    \    end\n    end\n    return res[min(res)]\nend", "    local res = {}\n    for\
    \ i = 1, #arr, 2 do\n        if arr[i] ~= arr[i-1] then\n            res[arr[i]]\
    \ = i\n        end\n    end\n    return res[min(res)]\nend", "    local t = {}\n\
    \    for i = 1, #arr, 2 do\n        if arr[i] % 2 == 0 then\n            if t[arr[i]]\
    \ == nil then\n                t[arr[i]] = i\n            else\n             \
    \   t[arr[i]] = t[arr[i]]\n            end\n        end\n    end\n    for i =\
    \ 1, #t, 2 do\n        if t[i] == nil then\n            return nil\n        end\n\
    \    end\n    return t[1]\nend\n\"\"\"\n<|endoftext|><|python|>#", "    local\
    \ result = {}\n    for i = 1, #arr, 2 do\n        if arr[i] ~= arr[i-1] then\n\
    \            result[arr[i]] = i\n        end\n    end\n    return result[arr[1]]\n\
    end", "    local result = {}\n    for i = 1, #arr, 2 do\n        if arr[i] % 2\
    \ == 0 then\n            if result[arr[i]] == nil then\n                result[arr[i]]\
    \ = i\n            else\n                result[arr[i]] = result[arr[i]]\n   \
    \         end\n        end\n    end\n    return result[1]\nend", "    local ans\
    \ = {}\n    for i = 1, #arr, 1 do\n        if arr[i] % 2 == 0 then\n         \
    \   if ans[arr[i]] == nil then\n                ans[arr[i]] = i\n            else\n\
    \                ans[arr[i]] = ans[arr[i]]\n            end\n        end\n   \
    \ end\n    return ans[1]\nend\n\"\"\"\n<|endoftext|><|python|>#              \
    \                                                                            \
    \                                                            ", "    local result\
    \ = {}\n    for i = 1, #arr, 2 do\n        if arr[i] % 2 == 0 then\n         \
    \   if result[#                                                              \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                              ", "    local res\
    \ = {}\n    for i = 1, #arr, 2 do\n        if arr[i] ~= arr[i+1] then\n      \
    \      res[arr[i]] = i\n            break\n        end\n    end\n    return res\n\
    end", "    local t = {}\n    for i = 1, #arr, 2 do\n        if arr[i] ~= arr[i\
    \ - 1] then\n            t[arr[i]] = i\n        end\n    end\n    for i = 1, #t,\
    \ 2 do\n        if t[i] ~= t[i - 1] then\n            return t[i]\n        end\n\
    \    end\nend\n\"\"\"", "    local res = {}\n    for i = 1, #arr, 2 do\n     \
    \   if arr[i] % 2 == 0 then\n            if res[arr[i]] == nil then\n        \
    \        res[arr[i]] = i\n            else\n                res[arr[i]] = res[arr[i]]\n\
    \            end\n        end\n    end\n    return res[1]\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

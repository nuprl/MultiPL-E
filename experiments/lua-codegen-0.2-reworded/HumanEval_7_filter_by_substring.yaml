name: HumanEval_7_filter_by_substring
language: lua
prompt: "-- Filter an input table of strings only for ones that contain given substring\n\
  -- >>> filter_by_substring([], 'a')\n-- []\n-- >>> filter_by_substring(['abc', 'bacd',\
  \ 'cde', 'array'], 'a')\n-- ['abc', 'bacd', 'array']\nlocal function filter_by_substring(strings,\
  \ substring)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = filter_by_substring\n\
  \    lu.assertEquals(candidate({}, 'john'), {})\n    lu.assertEquals(candidate({'xxx',\
  \ 'asd', 'xxy', 'john doe', 'xxxAAA', 'xxx'}, 'xxx'), {'xxx', 'xxxAAA', 'xxx'})\n\
  \    lu.assertEquals(candidate({'xxx', 'asd', 'aaaxxy', 'john doe', 'xxxAAA', 'xxx'},\
  \ 'xx'), {'xxx', 'aaaxxy', 'xxxAAA', 'xxx'})\n    lu.assertEquals(candidate({'grunt',\
  \ 'trumpet', 'prune', 'gruesome'}, 'run'), {'grunt', 'prune'})\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local result = {}\n    for _, string in ipairs(strings) do\n  \
    \      if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local result =\
    \ {}\n    for _, string in pairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local result =\
    \ {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local filtered\
    \ = {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(filtered, string)\n        end\n    end\n\
    \    return filtered\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local filtered\
    \ = {}\n    for _, string in pairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(filtered, string)\n        end\n    end\n\
    \    return filtered\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local result =\
    \ {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for _, string in pairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local result =\
    \ {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local result =\
    \ {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local result =\
    \ {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local result =\
    \ {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local filtered = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(filtered,\
    \ string)\n        end\n    end\n    return filtered\nend", "    local result\
    \ = {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local result =\
    \ {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local result =\
    \ {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local filtered = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(filtered,\
    \ string)\n        end\n    end\n    return filtered\nend", "    local result\
    \ = {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local result =\
    \ {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local filtered_strings = {}\n    for _, string\
    \ in pairs(strings) do\n        if string:find(substring) ~= nil then\n      \
    \      table.insert(filtered_strings, string)\n        end\n    end\n    return\
    \ filtered_strings\nend", "    local filtered = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(filtered,\
    \ string)\n        end\n    end\n    return filtered\nend", "    local result\
    \ = {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local result =\
    \ {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local filtered\
    \ = {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(filtered, string)\n        end\n    end\n\
    \    return filtered\nend", "    local filtered = {}\n    for _, string in pairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(filtered,\
    \ string)\n        end\n    end\n    return filtered\nend", "    local result\
    \ = {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local filtered_strings = {}\n    for _, string\
    \ in ipairs(strings) do\n        if string:find(substring) ~= nil then\n     \
    \       table.insert(filtered_strings, string)\n        end\n    end\n    return\
    \ filtered_strings\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local result =\
    \ {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local filtered = {}\n    for _, string in pairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(filtered,\
    \ string)\n        end\n    end\n    return filtered\nend", "    local result\
    \ = {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local result =\
    \ {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local filtered = {}\n    for _, string in pairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(filtered,\
    \ string)\n        end\n    end\n    return filtered\nend", "    local result\
    \ = {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local result =\
    \ {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local result =\
    \ {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local filtered = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(filtered,\
    \ string)\n        end\n    end\n    return filtered\nend", "    local result\
    \ = {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local filtered = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(filtered,\
    \ string)\n        end\n    end\n    return filtered\nend", "    local result\
    \ = {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local filtered = {}\n    for _, string in pairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(filtered,\
    \ string)\n        end\n    end\n    return filtered\nend", "    local result\
    \ = {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local result =\
    \ {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local filtered = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(filtered,\
    \ string)\n        end\n    end\n    return filtered\nend", "    local filtered\
    \ = {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(filtered, string)\n        end\n    end\n\
    \    return filtered\nend", "    local filtered = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(filtered,\
    \ string)\n        end\n    end\n    return filtered\nend", "    local result\
    \ = {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local result =\
    \ {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local result =\
    \ {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local filtered = {}\n    for _, string in pairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(filtered,\
    \ string)\n        end\n    end\n    return filtered\nend", "    local result\
    \ = {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local result =\
    \ {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local filtered = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(filtered,\
    \ string)\n        end\n    end\n    return filtered\nend", "    local result\
    \ = {}\n    for _, string in pairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local filtered = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(filtered,\
    \ string)\n        end\n    end\n    return filtered\nend", "    local result\
    \ = {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for _, string in pairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local result =\
    \ {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local result =\
    \ {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local filtered\
    \ = {}\n    for _, string in pairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(filtered, string)\n        end\n    end\n\
    \    return filtered\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local filtered_strings\
    \ = {}\n    for _, string in pairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(filtered_strings, string)\n        end\n\
    \    end\n    return filtered_strings\nend", "    local result = {}\n    for _,\
    \ string in ipairs(strings) do\n        if string:find(substring) ~= nil then\n\
    \            table.insert(result, string)\n        end\n    end\n    return result\n\
    end", "    local filtered = {}\n    for _, string in ipairs(strings) do\n    \
    \    if string:find(substring) ~= nil then\n            table.insert(filtered,\
    \ string)\n        end\n    end\n    return filtered\nend", "    local result\
    \ = {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local filtered\
    \ = {}\n    for _, string in pairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(filtered, string)\n        end\n    end\n\
    \    return filtered\nend", "    local filtered = {}\n    for _, string in pairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(filtered,\
    \ string)\n        end\n    end\n    return filtered\nend", "    local result\
    \ = {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local filtered = {}\n    for _, string in pairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(filtered,\
    \ string)\n        end\n    end\n    return filtered\nend", "    local filtered\
    \ = {}\n    for _, string in pairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(filtered, string)\n        end\n    end\n\
    \    return filtered\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local filtered\
    \ = {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(filtered, string)\n        end\n    end\n\
    \    return filtered\nend", "    local filtered_strings = {}\n    for _, string\
    \ in pairs(strings) do\n        if string:find(substring) ~= nil then\n      \
    \      table.insert(filtered_strings, string)\n        end\n    end\n    return\
    \ filtered_strings\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local result =\
    \ {}\n    for _, string in pairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local filtered = {}\n    for _, string in pairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(filtered,\
    \ string)\n        end\n    end\n    return filtered\nend", "    local result\
    \ = {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local result =\
    \ {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local filtered = {}\n    for _, string in pairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(filtered,\
    \ string)\n        end\n    end\n    return filtered\nend", "    local result\
    \ = {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local result =\
    \ {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local result =\
    \ {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local result =\
    \ {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local result =\
    \ {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local filtered = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(filtered,\
    \ string)\n        end\n    end\n    return filtered\nend", "    local result\
    \ = {}\n    for _, string in pairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local result =\
    \ {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local result =\
    \ {}\n    for _, string in pairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local result =\
    \ {}\n    for _, string in pairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local result =\
    \ {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local filtered = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(filtered,\
    \ string)\n        end\n    end\n    return filtered\nend", "    local result\
    \ = {}\n    for _, string in pairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local result =\
    \ {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local result =\
    \ {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local result =\
    \ {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local result =\
    \ {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local result =\
    \ {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local filtered_strings\
    \ = {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(filtered_strings, string)\n        end\n\
    \    end\n    return filtered_strings\nend", "    local result = {}\n    for _,\
    \ string in ipairs(strings) do\n        if string:find(substring) ~= nil then\n\
    \            table.insert(result, string)\n        end\n    end\n    return result\n\
    end", "    local result = {}\n    for _, string in ipairs(strings) do\n      \
    \  if string:find(substring) ~= nil then\n            table.insert(result, string)\n\
    \        end\n    end\n    return result\nend", "    local filtered = {}\n   \
    \ for _, string in ipairs(strings) do\n        if string:find(substring) ~= nil\
    \ then\n            table.insert(filtered, string)\n        end\n    end\n   \
    \ return filtered\nend", "    local filtered = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(filtered,\
    \ string)\n        end\n    end\n    return filtered\nend", "    local result\
    \ = {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local result =\
    \ {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local result =\
    \ {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local filtered_strings = {}\n    for _, string\
    \ in ipairs(strings) do\n        if string:find(substring) ~= nil then\n     \
    \       table.insert(filtered_strings, string)\n        end\n    end\n    return\
    \ filtered_strings\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local filtered\
    \ = {}\n    for _, string in pairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(filtered, string)\n        end\n    end\n\
    \    return filtered\nend", "    local result = {}\n    for _, string in pairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local filtered_strings\
    \ = {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(filtered_strings, string)\n        end\n\
    \    end\n    return filtered_strings\nend", "    local result = {}\n    for _,\
    \ string in ipairs(strings) do\n        if string:find(substring) ~= nil then\n\
    \            table.insert(result, string)\n        end\n    end\n    return result\n\
    end", "    local result = {}\n    for _, string in ipairs(strings) do\n      \
    \  if string:find(substring) ~= nil then\n            table.insert(result, string)\n\
    \        end\n    end\n    return result\nend", "    local filtered = {}\n   \
    \ for _, string in pairs(strings) do\n        if string:find(substring) ~= nil\
    \ then\n            table.insert(filtered, string)\n        end\n    end\n   \
    \ return filtered\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local result =\
    \ {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local result =\
    \ {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local result =\
    \ {}\n    for _, string in pairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local filtered_strings = {}\n    for _, string\
    \ in ipairs(strings) do\n        if string:find(substring) ~= nil then\n     \
    \       table.insert(filtered_strings, string)\n        end\n    end\n    return\
    \ filtered_strings\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local result =\
    \ {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local filtered = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(filtered,\
    \ string)\n        end\n    end\n    return filtered\nend", "    local filtered\
    \ = {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(filtered, string)\n        end\n    end\n\
    \    return filtered\nend", "    local filtered = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(filtered,\
    \ string)\n        end\n    end\n    return filtered\nend", "    local filtered\
    \ = {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(filtered, string)\n        end\n    end\n\
    \    return filtered\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local result =\
    \ {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local filtered_strings\
    \ = {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(filtered_strings, string)\n        end\n\
    \    end\n    return filtered_strings\nend", "    local result = {}\n    for _,\
    \ string in ipairs(strings) do\n        if string:find(substring) ~= nil then\n\
    \            table.insert(result, string)\n        end\n    end\n    return result\n\
    end", "    local result = {}\n    for _, string in ipairs(strings) do\n      \
    \  if string:find(substring) ~= nil then\n            table.insert(result, string)\n\
    \        end\n    end\n    return result\nend", "    local result = {}\n    for\
    \ _, string in ipairs(strings) do\n        if string:find(substring) ~= nil then\n\
    \            table.insert(result, string)\n        end\n    end\n    return result\n\
    end", "    local result = {}\n    for _, string in ipairs(strings) do\n      \
    \  if string:find(substring) ~= nil then\n            table.insert(result, string)\n\
    \        end\n    end\n    return result\nend", "    local result = {}\n    for\
    \ _, string in ipairs(strings) do\n        if string:find(substring) ~= nil then\n\
    \            table.insert(result, string)\n        end\n    end\n    return result\n\
    end", "    local result = {}\n    for _, string in ipairs(strings) do\n      \
    \  if string:find(substring) ~= nil then\n            table.insert(result, string)\n\
    \        end\n    end\n    return result\nend", "    local result = {}\n    for\
    \ _, string in ipairs(strings) do\n        if string:find(substring) ~= nil then\n\
    \            table.insert(result, string)\n        end\n    end\n    return result\n\
    end", "    local result = {}\n    for _, string in ipairs(strings) do\n      \
    \  if string:find(substring) ~= nil then\n            table.insert(result, string)\n\
    \        end\n    end\n    return result\nend", "    local filtered = {}\n   \
    \ for _, string in pairs(strings) do\n        if string:find(substring) ~= nil\
    \ then\n            table.insert(filtered, string)\n        end\n    end\n   \
    \ return filtered\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local result =\
    \ {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local result =\
    \ {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local filtered = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(filtered,\
    \ string)\n        end\n    end\n    return filtered\nend", "    local result\
    \ = {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for _, string in pairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local result =\
    \ {}\n    for _, string in pairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local result =\
    \ {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local filtered\
    \ = {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(filtered, string)\n        end\n    end\n\
    \    return filtered\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local filtered\
    \ = {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(filtered, string)\n        end\n    end\n\
    \    return filtered\nend", "    local filtered = {}\n    for _, string in pairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(filtered,\
    \ string)\n        end\n    end\n    return filtered\nend", "    local filtered_strings\
    \ = {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(filtered_strings, string)\n        end\n\
    \    end\n    return filtered_strings\nend", "    local filtered = {}\n    for\
    \ _, string in ipairs(strings) do\n        if string:find(substring) ~= nil then\n\
    \            table.insert(filtered, string)\n        end\n    end\n    return\
    \ filtered\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local result =\
    \ {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local result =\
    \ {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(result, string)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) ~= nil then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local filtered_strings\
    \ = {}\n    for _, string in ipairs(strings) do\n        if string:find(substring)\
    \ ~= nil then\n            table.insert(filtered_strings, string)\n        end\n\
    \    end\n    return filtered_strings\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

{
  "language": "lua",
  "name": "HumanEval_74_total_match",
  "results": [
    {
      "exit_code": 1,
      "program": "-- Write a function that accepts two tables of strings and returns the table that has \n-- total number of chars in the all strings of the table less than the other table.\n-- if the two tables have the same number of chars, return the first table.\n-- Examples\n-- >>> total_match([], [])\n-- []\n-- >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n-- ['hI', 'Hi']\n-- >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n-- ['hi', 'admin']\n-- >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n-- ['hI', 'hi', 'hi']\n-- >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n-- ['4']\nlocal function total_match(lst1, lst2)\n    local t1 = {}\n    local t2 = {}\n    for i = 1, #lst1, 1 do\n        t1[i] = #lst1[i]\n    end\n    for i = 1, #lst2, 1 do\n        t2[i] = #lst2[i]\n    end\n    local result = {}\n    for i = 1, #lst1, 1 do\n        if t1[i] < t2[i] then\n            result[i] = lst1[i]\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = total_match\n    lu.assertEquals(candidate({}, {}), {})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hi', 'hi'}), {'hi', 'hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hi', 'hi', 'admin', 'project'}), {'hi', 'admin'})\n    lu.assertEquals(candidate({'4'}, {'1', '2', '3', '4', '5'}), {'4'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'Hi'}), {'hI', 'Hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'hi', 'hi'}), {'hI', 'hi', 'hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'hi', 'hii'}), {'hi', 'admin'})\n    lu.assertEquals(candidate({}, {'this'}), {})\n    lu.assertEquals(candidate({'this'}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpty35i0l3.lua:37: expected: {\"hi\", \"hi\"}\nactual: {}\nstack traceback:\n\t/tmp/tmpty35i0l3.lua:37: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907483
    },
    {
      "exit_code": 1,
      "program": "-- Write a function that accepts two tables of strings and returns the table that has \n-- total number of chars in the all strings of the table less than the other table.\n-- if the two tables have the same number of chars, return the first table.\n-- Examples\n-- >>> total_match([], [])\n-- []\n-- >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n-- ['hI', 'Hi']\n-- >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n-- ['hi', 'admin']\n-- >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n-- ['hI', 'hi', 'hi']\n-- >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n-- ['4']\nlocal function total_match(lst1, lst2)\n    local result = {}\n    for inlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = total_match\n    lu.assertEquals(candidate({}, {}), {})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hi', 'hi'}), {'hi', 'hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hi', 'hi', 'admin', 'project'}), {'hi', 'admin'})\n    lu.assertEquals(candidate({'4'}, {'1', '2', '3', '4', '5'}), {'4'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'Hi'}), {'hI', 'Hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'hi', 'hi'}), {'hI', 'hi', 'hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'hi', 'hii'}), {'hi', 'admin'})\n    lu.assertEquals(candidate({}, {'this'}), {})\n    lu.assertEquals(candidate({'this'}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmp906v8qyf.lua:18: 'do' expected near '='\n",
      "stdout": "",
      "timestamp": 1661907483
    },
    {
      "exit_code": 1,
      "program": "-- Write a function that accepts two tables of strings and returns the table that has \n-- total number of chars in the all strings of the table less than the other table.\n-- if the two tables have the same number of chars, return the first table.\n-- Examples\n-- >>> total_match([], [])\n-- []\n-- >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n-- ['hI', 'Hi']\n-- >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n-- ['hi', 'admin']\n-- >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n-- ['hI', 'hi', 'hi']\n-- >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n-- ['4']\nlocal function total_match(lst1, lst2)\n    local result = {}\n    for i=1,#\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = total_match\n    lu.assertEquals(candidate({}, {}), {})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hi', 'hi'}), {'hi', 'hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hi', 'hi', 'admin', 'project'}), {'hi', 'admin'})\n    lu.assertEquals(candidate({'4'}, {'1', '2', '3', '4', '5'}), {'4'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'Hi'}), {'hI', 'Hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'hi', 'hi'}), {'hI', 'hi', 'hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'hi', 'hii'}), {'hi', 'admin'})\n    lu.assertEquals(candidate({}, {'this'}), {})\n    lu.assertEquals(candidate({'this'}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmp54x9s96k.lua:18: 'do' expected near '='\n",
      "stdout": "",
      "timestamp": 1661907483
    },
    {
      "exit_code": 1,
      "program": "-- Write a function that accepts two tables of strings and returns the table that has \n-- total number of chars in the all strings of the table less than the other table.\n-- if the two tables have the same number of chars, return the first table.\n-- Examples\n-- >>> total_match([], [])\n-- []\n-- >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n-- ['hI', 'Hi']\n-- >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n-- ['hi', 'admin']\n-- >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n-- ['hI', 'hi', 'hi']\n-- >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n-- ['4']\nlocal function total_match(lst1, lst2)\n    local result = {}\n    for i=1,#\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = total_match\n    lu.assertEquals(candidate({}, {}), {})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hi', 'hi'}), {'hi', 'hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hi', 'hi', 'admin', 'project'}), {'hi', 'admin'})\n    lu.assertEquals(candidate({'4'}, {'1', '2', '3', '4', '5'}), {'4'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'Hi'}), {'hI', 'Hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'hi', 'hi'}), {'hI', 'hi', 'hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'hi', 'hii'}), {'hi', 'admin'})\n    lu.assertEquals(candidate({}, {'this'}), {})\n    lu.assertEquals(candidate({'this'}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmp54x9s96k.lua:18: 'do' expected near '='\n",
      "stdout": "",
      "timestamp": 1661907483
    },
    {
      "exit_code": 1,
      "program": "-- Write a function that accepts two tables of strings and returns the table that has \n-- total number of chars in the all strings of the table less than the other table.\n-- if the two tables have the same number of chars, return the first table.\n-- Examples\n-- >>> total_match([], [])\n-- []\n-- >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n-- ['hI', 'Hi']\n-- >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n-- ['hi', 'admin']\n-- >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n-- ['hI', 'hi', 'hi']\n-- >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n-- ['4']\nlocal function total_match(lst1, lst2)\n    local result = {}\n    for i = 1, #lst1, 1 do\n        for j = 1, #lst2, 1 do\n            if lst1[i] == lst2[j] then\n                table.insert(result, lst1[i])\n                break\n            end\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = total_match\n    lu.assertEquals(candidate({}, {}), {})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hi', 'hi'}), {'hi', 'hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hi', 'hi', 'admin', 'project'}), {'hi', 'admin'})\n    lu.assertEquals(candidate({'4'}, {'1', '2', '3', '4', '5'}), {'4'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'Hi'}), {'hI', 'Hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'hi', 'hi'}), {'hI', 'hi', 'hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'hi', 'hii'}), {'hi', 'admin'})\n    lu.assertEquals(candidate({}, {'this'}), {})\n    lu.assertEquals(candidate({'this'}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpe4jmix1y.lua:32: expected: {\"hi\", \"hi\"}\nactual: {\"hi\"}\nstack traceback:\n\t/tmp/tmpe4jmix1y.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661938067
    },
    {
      "exit_code": 1,
      "program": "-- Write a function that accepts two tables of strings and returns the table that has \n-- total number of chars in the all strings of the table less than the other table.\n-- if the two tables have the same number of chars, return the first table.\n-- Examples\n-- >>> total_match([], [])\n-- []\n-- >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n-- ['hI', 'Hi']\n-- >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n-- ['hi', 'admin']\n-- >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n-- ['hI', 'hi', 'hi']\n-- >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n-- ['4']\nlocal function total_match(lst1, lst2)\n    local result = {}\n    for i = 1, #lst1, 1 do\n        for j = 1, #lst2, 1 do\n            if lst1[i] == lst2[j] then\n                table.insert(result, lst1[i])\n                break\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = total_match\n    lu.assertEquals(candidate({}, {}), {})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hi', 'hi'}), {'hi', 'hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hi', 'hi', 'admin', 'project'}), {'hi', 'admin'})\n    lu.assertEquals(candidate({'4'}, {'1', '2', '3', '4', '5'}), {'4'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'Hi'}), {'hI', 'Hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'hi', 'hi'}), {'hI', 'hi', 'hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'hi', 'hii'}), {'hi', 'admin'})\n    lu.assertEquals(candidate({}, {'this'}), {})\n    lu.assertEquals(candidate({'this'}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmp3o51b8lz.lua:41: 'end' expected (to close 'function' at line 15) near <eof>\n",
      "stdout": "",
      "timestamp": 1661938067
    },
    {
      "exit_code": 1,
      "program": "-- Write a function that accepts two tables of strings and returns the table that has \n-- total number of chars in the all strings of the table less than the other table.\n-- if the two tables have the same number of chars, return the first table.\n-- Examples\n-- >>> total_match([], [])\n-- []\n-- >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n-- ['hI', 'Hi']\n-- >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n-- ['hi', 'admin']\n-- >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n-- ['hI', 'hi', 'hi']\n-- >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n-- ['4']\nlocal function total_match(lst1, lst2)\n    local result = {}\n    for i = 1, #lst1, 1 do\n        for j = 1, #lst2, 1 do\n            if lst1[i] == lst2[j] then\n                table.insert(result, lst1[i])\n                break\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = total_match\n    lu.assertEquals(candidate({}, {}), {})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hi', 'hi'}), {'hi', 'hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hi', 'hi', 'admin', 'project'}), {'hi', 'admin'})\n    lu.assertEquals(candidate({'4'}, {'1', '2', '3', '4', '5'}), {'4'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'Hi'}), {'hI', 'Hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'hi', 'hi'}), {'hI', 'hi', 'hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'hi', 'hii'}), {'hi', 'admin'})\n    lu.assertEquals(candidate({}, {'this'}), {})\n    lu.assertEquals(candidate({'this'}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmp3o51b8lz.lua:41: 'end' expected (to close 'function' at line 15) near <eof>\n",
      "stdout": "",
      "timestamp": 1661938067
    },
    {
      "exit_code": 1,
      "program": "-- Write a function that accepts two tables of strings and returns the table that has \n-- total number of chars in the all strings of the table less than the other table.\n-- if the two tables have the same number of chars, return the first table.\n-- Examples\n-- >>> total_match([], [])\n-- []\n-- >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n-- ['hI', 'Hi']\n-- >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n-- ['hi', 'admin']\n-- >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n-- ['hI', 'hi', 'hi']\n-- >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n-- ['4']\nlocal function total_match(lst1, lst2)\n    local result = {}\n    for i = 1, #lst1, 1 do\n        for j = 1, #lst2, 1 do\n            if lst1[i] == lst2[j] then\n                table.insert(result, lst1[i])\n                break\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = total_match\n    lu.assertEquals(candidate({}, {}), {})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hi', 'hi'}), {'hi', 'hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hi', 'hi', 'admin', 'project'}), {'hi', 'admin'})\n    lu.assertEquals(candidate({'4'}, {'1', '2', '3', '4', '5'}), {'4'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'Hi'}), {'hI', 'Hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'hi', 'hi'}), {'hI', 'hi', 'hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'hi', 'hii'}), {'hi', 'admin'})\n    lu.assertEquals(candidate({}, {'this'}), {})\n    lu.assertEquals(candidate({'this'}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmp3o51b8lz.lua:41: 'end' expected (to close 'function' at line 15) near <eof>\n",
      "stdout": "",
      "timestamp": 1661938067
    },
    {
      "exit_code": 1,
      "program": "-- Write a function that accepts two tables of strings and returns the table that has \n-- total number of chars in the all strings of the table less than the other table.\n-- if the two tables have the same number of chars, return the first table.\n-- Examples\n-- >>> total_match([], [])\n-- []\n-- >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n-- ['hI', 'Hi']\n-- >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n-- ['hi', 'admin']\n-- >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n-- ['hI', 'hi', 'hi']\n-- >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n-- ['4']\nlocal function total_match(lst1, lst2)\n    local result = {}\n    for i = 1, #lst1, 1 do\n        for j = 1, #lst2, 1 do\n            if lst1[i] == lst2[j] then\n                table.insert(result, lst1[i])\n                break\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = total_match\n    lu.assertEquals(candidate({}, {}), {})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hi', 'hi'}), {'hi', 'hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hi', 'hi', 'admin', 'project'}), {'hi', 'admin'})\n    lu.assertEquals(candidate({'4'}, {'1', '2', '3', '4', '5'}), {'4'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'Hi'}), {'hI', 'Hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'hi', 'hi'}), {'hI', 'hi', 'hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'hi', 'hii'}), {'hi', 'admin'})\n    lu.assertEquals(candidate({}, {'this'}), {})\n    lu.assertEquals(candidate({'this'}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmp3o51b8lz.lua:41: 'end' expected (to close 'function' at line 15) near <eof>\n",
      "stdout": "",
      "timestamp": 1661938067
    },
    {
      "exit_code": 1,
      "program": "-- Write a function that accepts two tables of strings and returns the table that has \n-- total number of chars in the all strings of the table less than the other table.\n-- if the two tables have the same number of chars, return the first table.\n-- Examples\n-- >>> total_match([], [])\n-- []\n-- >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n-- ['hI', 'Hi']\n-- >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n-- ['hi', 'admin']\n-- >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n-- ['hI', 'hi', 'hi']\n-- >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n-- ['4']\nlocal function total_match(lst1, lst2)\n    local result = {}\n    for i = 1, #lst1, 1 do\n        for j = 1, #lst2, 1 do\n            if lst1[i] == lst2[j] then\n                result[i] = result[i] or lst2[j]\n            end\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = total_match\n    lu.assertEquals(candidate({}, {}), {})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hi', 'hi'}), {'hi', 'hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hi', 'hi', 'admin', 'project'}), {'hi', 'admin'})\n    lu.assertEquals(candidate({'4'}, {'1', '2', '3', '4', '5'}), {'4'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'Hi'}), {'hI', 'Hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'hi', 'hi'}), {'hI', 'hi', 'hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'hi', 'hii'}), {'hi', 'admin'})\n    lu.assertEquals(candidate({}, {'this'}), {})\n    lu.assertEquals(candidate({'this'}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp19rhb94i.lua:31: expected: {\"hi\", \"hi\"}\nactual: {\"hi\"}\nstack traceback:\n\t/tmp/tmp19rhb94i.lua:31: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661938067
    },
    {
      "exit_code": 1,
      "program": "-- Write a function that accepts two tables of strings and returns the table that has \n-- total number of chars in the all strings of the table less than the other table.\n-- if the two tables have the same number of chars, return the first table.\n-- Examples\n-- >>> total_match([], [])\n-- []\n-- >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n-- ['hI', 'Hi']\n-- >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n-- ['hi', 'admin']\n-- >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n-- ['hI', 'hi', 'hi']\n-- >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n-- ['4']\nlocal function total_match(lst1, lst2)\n    local result = {}\n    for i = 1, #lst1, 1 do\n        for j = 1, #lst2, 1 do\n            if lst1[i] == lst2[j] then\n                result[#\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = total_match\n    lu.assertEquals(candidate({}, {}), {})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hi', 'hi'}), {'hi', 'hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hi', 'hi', 'admin', 'project'}), {'hi', 'admin'})\n    lu.assertEquals(candidate({'4'}, {'1', '2', '3', '4', '5'}), {'4'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'Hi'}), {'hI', 'Hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'hi', 'hi'}), {'hI', 'hi', 'hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'hi', 'hii'}), {'hi', 'admin'})\n    lu.assertEquals(candidate({}, {'this'}), {})\n    lu.assertEquals(candidate({'this'}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpueygkvck.lua:21: ']' expected near '='\n",
      "stdout": "",
      "timestamp": 1661938067
    },
    {
      "exit_code": 1,
      "program": "-- Write a function that accepts two tables of strings and returns the table that has \n-- total number of chars in the all strings of the table less than the other table.\n-- if the two tables have the same number of chars, return the first table.\n-- Examples\n-- >>> total_match([], [])\n-- []\n-- >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n-- ['hI', 'Hi']\n-- >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n-- ['hi', 'admin']\n-- >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n-- ['hI', 'hi', 'hi']\n-- >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n-- ['4']\nlocal function total_match(lst1, lst2)\n    local result = {}\n    for inlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = total_match\n    lu.assertEquals(candidate({}, {}), {})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hi', 'hi'}), {'hi', 'hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hi', 'hi', 'admin', 'project'}), {'hi', 'admin'})\n    lu.assertEquals(candidate({'4'}, {'1', '2', '3', '4', '5'}), {'4'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'Hi'}), {'hI', 'Hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'hi', 'hi'}), {'hI', 'hi', 'hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'hi', 'hii'}), {'hi', 'admin'})\n    lu.assertEquals(candidate({}, {'this'}), {})\n    lu.assertEquals(candidate({'this'}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpawfx_ryt.lua:18: 'do' expected near '='\n",
      "stdout": "",
      "timestamp": 1661938067
    },
    {
      "exit_code": 1,
      "program": "-- Write a function that accepts two tables of strings and returns the table that has \n-- total number of chars in the all strings of the table less than the other table.\n-- if the two tables have the same number of chars, return the first table.\n-- Examples\n-- >>> total_match([], [])\n-- []\n-- >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n-- ['hI', 'Hi']\n-- >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n-- ['hi', 'admin']\n-- >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n-- ['hI', 'hi', 'hi']\n-- >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n-- ['4']\nlocal function total_match(lst1, lst2)\n    local result = {}\n    for i = 1, #lst1, 1 do\n        for j = 1, #lst2, 1 do\n            if lst1[i] == lst2[j] then\n                table.insert(result, lst1[i])\n                break\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = total_match\n    lu.assertEquals(candidate({}, {}), {})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hi', 'hi'}), {'hi', 'hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hi', 'hi', 'admin', 'project'}), {'hi', 'admin'})\n    lu.assertEquals(candidate({'4'}, {'1', '2', '3', '4', '5'}), {'4'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'Hi'}), {'hI', 'Hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'hi', 'hi'}), {'hI', 'hi', 'hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'hi', 'hii'}), {'hi', 'admin'})\n    lu.assertEquals(candidate({}, {'this'}), {})\n    lu.assertEquals(candidate({'this'}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmp3o51b8lz.lua:41: 'end' expected (to close 'function' at line 15) near <eof>\n",
      "stdout": "",
      "timestamp": 1661938067
    },
    {
      "exit_code": 1,
      "program": "-- Write a function that accepts two tables of strings and returns the table that has \n-- total number of chars in the all strings of the table less than the other table.\n-- if the two tables have the same number of chars, return the first table.\n-- Examples\n-- >>> total_match([], [])\n-- []\n-- >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n-- ['hI', 'Hi']\n-- >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n-- ['hi', 'admin']\n-- >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n-- ['hI', 'hi', 'hi']\n-- >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n-- ['4']\nlocal function total_match(lst1, lst2)\n    local t1 = {}\n    local t2 = {}\n    for i = 1, #lst1, 1 do\n        tnlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = total_match\n    lu.assertEquals(candidate({}, {}), {})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hi', 'hi'}), {'hi', 'hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hi', 'hi', 'admin', 'project'}), {'hi', 'admin'})\n    lu.assertEquals(candidate({'4'}, {'1', '2', '3', '4', '5'}), {'4'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'Hi'}), {'hI', 'Hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'hi', 'hi'}), {'hI', 'hi', 'hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'hi', 'hii'}), {'hi', 'admin'})\n    lu.assertEquals(candidate({}, {'this'}), {})\n    lu.assertEquals(candidate({'this'}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpwn6p4s56.lua:20: ']' expected near '='\n",
      "stdout": "",
      "timestamp": 1661938067
    },
    {
      "exit_code": 1,
      "program": "-- Write a function that accepts two tables of strings and returns the table that has \n-- total number of chars in the all strings of the table less than the other table.\n-- if the two tables have the same number of chars, return the first table.\n-- Examples\n-- >>> total_match([], [])\n-- []\n-- >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n-- ['hI', 'Hi']\n-- >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n-- ['hi', 'admin']\n-- >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n-- ['hI', 'hi', 'hi']\n-- >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n-- ['4']\nlocal function total_match(lst1, lst2)\n    local result = {}\n    for i = 1, #lst1, 1 do\n        for j = 1, #lst2, 1 do\n            if lst1[i] == lst2[j] then\n                table.insert(result, lst1[i])\n                break\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = total_match\n    lu.assertEquals(candidate({}, {}), {})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hi', 'hi'}), {'hi', 'hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hi', 'hi', 'admin', 'project'}), {'hi', 'admin'})\n    lu.assertEquals(candidate({'4'}, {'1', '2', '3', '4', '5'}), {'4'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'Hi'}), {'hI', 'Hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'hi', 'hi'}), {'hI', 'hi', 'hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'hi', 'hii'}), {'hi', 'admin'})\n    lu.assertEquals(candidate({}, {'this'}), {})\n    lu.assertEquals(candidate({'this'}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmp3o51b8lz.lua:41: 'end' expected (to close 'function' at line 15) near <eof>\n",
      "stdout": "",
      "timestamp": 1661938067
    },
    {
      "exit_code": 1,
      "program": "-- Write a function that accepts two tables of strings and returns the table that has \n-- total number of chars in the all strings of the table less than the other table.\n-- if the two tables have the same number of chars, return the first table.\n-- Examples\n-- >>> total_match([], [])\n-- []\n-- >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n-- ['hI', 'Hi']\n-- >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n-- ['hi', 'admin']\n-- >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n-- ['hI', 'hi', 'hi']\n-- >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n-- ['4']\nlocal function total_match(lst1, lst2)\n    local t1 = {}\n    local t2 = {}\n    for inlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = total_match\n    lu.assertEquals(candidate({}, {}), {})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hi', 'hi'}), {'hi', 'hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hi', 'hi', 'admin', 'project'}), {'hi', 'admin'})\n    lu.assertEquals(candidate({'4'}, {'1', '2', '3', '4', '5'}), {'4'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'Hi'}), {'hI', 'Hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'hi', 'hi'}), {'hI', 'hi', 'hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'hi', 'hii'}), {'hi', 'admin'})\n    lu.assertEquals(candidate({}, {'this'}), {})\n    lu.assertEquals(candidate({'this'}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpz8xjmgw8.lua:19: 'do' expected near '='\n",
      "stdout": "",
      "timestamp": 1661938067
    },
    {
      "exit_code": 1,
      "program": "-- Write a function that accepts two tables of strings and returns the table that has \n-- total number of chars in the all strings of the table less than the other table.\n-- if the two tables have the same number of chars, return the first table.\n-- Examples\n-- >>> total_match([], [])\n-- []\n-- >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n-- ['hI', 'Hi']\n-- >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n-- ['hi', 'admin']\n-- >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n-- ['hI', 'hi', 'hi']\n-- >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n-- ['4']\nlocal function total_match(lst1, lst2)\n    local result = {}\n    for i = 1, #lst1, 1 do\n        for j = 1, #lst2, 1 do\n            if lst1[i] == lst2[j] then\n                table.insert(result, lst1[i])\n                break\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = total_match\n    lu.assertEquals(candidate({}, {}), {})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hi', 'hi'}), {'hi', 'hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hi', 'hi', 'admin', 'project'}), {'hi', 'admin'})\n    lu.assertEquals(candidate({'4'}, {'1', '2', '3', '4', '5'}), {'4'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'Hi'}), {'hI', 'Hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'hi', 'hi'}), {'hI', 'hi', 'hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'hi', 'hii'}), {'hi', 'admin'})\n    lu.assertEquals(candidate({}, {'this'}), {})\n    lu.assertEquals(candidate({'this'}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmp3o51b8lz.lua:41: 'end' expected (to close 'function' at line 15) near <eof>\n",
      "stdout": "",
      "timestamp": 1661938067
    },
    {
      "exit_code": 1,
      "program": "-- Write a function that accepts two tables of strings and returns the table that has \n-- total number of chars in the all strings of the table less than the other table.\n-- if the two tables have the same number of chars, return the first table.\n-- Examples\n-- >>> total_match([], [])\n-- []\n-- >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n-- ['hI', 'Hi']\n-- >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n-- ['hi', 'admin']\n-- >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n-- ['hI', 'hi', 'hi']\n-- >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n-- ['4']\nlocal function total_match(lst1, lst2)\n    local result = {}\n    for i, v in ipairs(lst1) do\n        if v < lst2[i] then\n            result[i] = v\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = total_match\n    lu.assertEquals(candidate({}, {}), {})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hi', 'hi'}), {'hi', 'hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hi', 'hi', 'admin', 'project'}), {'hi', 'admin'})\n    lu.assertEquals(candidate({'4'}, {'1', '2', '3', '4', '5'}), {'4'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'Hi'}), {'hI', 'Hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'hi', 'hi'}), {'hI', 'hi', 'hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'hi', 'hii'}), {'hi', 'admin'})\n    lu.assertEquals(candidate({}, {'this'}), {})\n    lu.assertEquals(candidate({'this'}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiheywdfn.lua:29: expected: {\"hi\", \"hi\"}\nactual: {2=\"admin\"}\nstack traceback:\n\t/tmp/tmpiheywdfn.lua:29: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661938067
    },
    {
      "exit_code": 1,
      "program": "-- Write a function that accepts two tables of strings and returns the table that has \n-- total number of chars in the all strings of the table less than the other table.\n-- if the two tables have the same number of chars, return the first table.\n-- Examples\n-- >>> total_match([], [])\n-- []\n-- >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n-- ['hI', 'Hi']\n-- >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n-- ['hi', 'admin']\n-- >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n-- ['hI', 'hi', 'hi']\n-- >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n-- ['4']\nlocal function total_match(lst1, lst2)\n    local result = {}\n    for inlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = total_match\n    lu.assertEquals(candidate({}, {}), {})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hi', 'hi'}), {'hi', 'hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hi', 'hi', 'admin', 'project'}), {'hi', 'admin'})\n    lu.assertEquals(candidate({'4'}, {'1', '2', '3', '4', '5'}), {'4'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'Hi'}), {'hI', 'Hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'hi', 'hi'}), {'hI', 'hi', 'hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'hi', 'hii'}), {'hi', 'admin'})\n    lu.assertEquals(candidate({}, {'this'}), {})\n    lu.assertEquals(candidate({'this'}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmp906v8qyf.lua:18: 'do' expected near '='\n",
      "stdout": "",
      "timestamp": 1661907483
    },
    {
      "exit_code": 1,
      "program": "-- Write a function that accepts two tables of strings and returns the table that has \n-- total number of chars in the all strings of the table less than the other table.\n-- if the two tables have the same number of chars, return the first table.\n-- Examples\n-- >>> total_match([], [])\n-- []\n-- >>> total_match(['hi', 'admin'], ['hI', 'Hi'])\n-- ['hI', 'Hi']\n-- >>> total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n-- ['hi', 'admin']\n-- >>> total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n-- ['hI', 'hi', 'hi']\n-- >>> total_match(['4'], ['1', '2', '3', '4', '5'])\n-- ['4']\nlocal function total_match(lst1, lst2)\n    local result = {}\n    for i = 1, #lst1, 1 do\n        for j = 1, #lst2, 1 do\n            if lst1[i] == lst2[j] then\n                table.insert(result, lst1[i])\n                break\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = total_match\n    lu.assertEquals(candidate({}, {}), {})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hi', 'hi'}), {'hi', 'hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hi', 'hi', 'admin', 'project'}), {'hi', 'admin'})\n    lu.assertEquals(candidate({'4'}, {'1', '2', '3', '4', '5'}), {'4'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'Hi'}), {'hI', 'Hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'hi', 'hi'}), {'hI', 'hi', 'hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'hi', 'hii'}), {'hi', 'admin'})\n    lu.assertEquals(candidate({}, {'this'}), {})\n    lu.assertEquals(candidate({'this'}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmp3o51b8lz.lua:41: 'end' expected (to close 'function' at line 15) near <eof>\n",
      "stdout": "",
      "timestamp": 1661938067
    }
  ]
}
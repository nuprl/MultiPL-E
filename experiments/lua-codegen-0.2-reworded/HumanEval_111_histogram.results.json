{
  "language": "lua",
  "name": "HumanEval_111_histogram",
  "results": [
    {
      "exit_code": 1,
      "program": "-- Given a string representing a space separated lowercase letters, return a table\n-- of the letter with the most repetition and containing the corresponding count.\n-- If several letters have the same occurrence, return all of them.\n-- Example:\n-- >>> histogram('a b c')\n-- {'a': 1, 'b': 1, 'c': 1}\n-- >>> histogram('a b b a')\n-- {'a': 2, 'b': 2}\n-- >>> histogram('a b c a b')\n-- {'a': 2, 'b': 2}\n-- >>> histogram('b b b b a')\n-- {'b': 4}\n-- >>> histogram('')\n-- {}\nlocal function histogram(test)\n    local table = {}\n    for i = 1, #test do\n        if test[i] == ' ' then\n            table[test[i]] = table[test[i]] or 1\n        else\n            table[test[i]] = table[test[i]] or 1\n            table[test[i]] = table[test[i]] + 1\n    end\n    return table\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = histogram\n    lu.assertEquals(candidate('a b b a'), {['a'] = 2, ['b'] = 2})\n    lu.assertEquals(candidate('a b c a b'), {['a'] = 2, ['b'] = 2})\n    lu.assertEquals(candidate('a b c d g'), {['a'] = 1, ['b'] = 1, ['c'] = 1, ['d'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate('r t g'), {['r'] = 1, ['t'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate('b b b b a'), {['b'] = 4})\n    lu.assertEquals(candidate('r t g'), {['r'] = 1, ['t'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate(''), {})\n    lu.assertEquals(candidate('a'), {['a'] = 1})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmp1_fc51ff.lua:40: 'end' expected (to close 'function' at line 15) near <eof>\n",
      "stdout": "",
      "timestamp": 1661907516
    },
    {
      "exit_code": 1,
      "program": "-- Given a string representing a space separated lowercase letters, return a table\n-- of the letter with the most repetition and containing the corresponding count.\n-- If several letters have the same occurrence, return all of them.\n-- Example:\n-- >>> histogram('a b c')\n-- {'a': 1, 'b': 1, 'c': 1}\n-- >>> histogram('a b b a')\n-- {'a': 2, 'b': 2}\n-- >>> histogram('a b c a b')\n-- {'a': 2, 'b': 2}\n-- >>> histogram('b b b b a')\n-- {'b': 4}\n-- >>> histogram('')\n-- {}\nlocal function histogram(test)\n    local table = {}\n    for _, v in ipairs(test) do\n        table[v] = table[v] + 1\n    end\n    return table\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = histogram\n    lu.assertEquals(candidate('a b b a'), {['a'] = 2, ['b'] = 2})\n    lu.assertEquals(candidate('a b c a b'), {['a'] = 2, ['b'] = 2})\n    lu.assertEquals(candidate('a b c d g'), {['a'] = 1, ['b'] = 1, ['c'] = 1, ['d'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate('r t g'), {['r'] = 1, ['t'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate('b b b b a'), {['b'] = 4})\n    lu.assertEquals(candidate('r t g'), {['r'] = 1, ['t'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate(''), {})\n    lu.assertEquals(candidate('a'), {['a'] = 1})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpo3b8udx7.lua:17: bad argument #1 to 'ipairs' (table expected, got string)\nstack traceback:\n\t/tmp/tmpo3b8udx7.lua:17: in local 'candidate'\n\t/tmp/tmpo3b8udx7.lua:26: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "timestamp": 1661907516
    },
    {
      "exit_code": 1,
      "program": "-- Given a string representing a space separated lowercase letters, return a table\n-- of the letter with the most repetition and containing the corresponding count.\n-- If several letters have the same occurrence, return all of them.\n-- Example:\n-- >>> histogram('a b c')\n-- {'a': 1, 'b': 1, 'c': 1}\n-- >>> histogram('a b b a')\n-- {'a': 2, 'b': 2}\n-- >>> histogram('a b c a b')\n-- {'a': 2, 'b': 2}\n-- >>> histogram('b b b b a')\n-- {'b': 4}\n-- >>> histogram('')\n-- {}\nlocal function histogram(test)\n    local table = {}\n    for _, v in ipairs(test) do\n        table[v] = table[v] + 1\n    end\n    return table\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = histogram\n    lu.assertEquals(candidate('a b b a'), {['a'] = 2, ['b'] = 2})\n    lu.assertEquals(candidate('a b c a b'), {['a'] = 2, ['b'] = 2})\n    lu.assertEquals(candidate('a b c d g'), {['a'] = 1, ['b'] = 1, ['c'] = 1, ['d'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate('r t g'), {['r'] = 1, ['t'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate('b b b b a'), {['b'] = 4})\n    lu.assertEquals(candidate('r t g'), {['r'] = 1, ['t'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate(''), {})\n    lu.assertEquals(candidate('a'), {['a'] = 1})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpo3b8udx7.lua:17: bad argument #1 to 'ipairs' (table expected, got string)\nstack traceback:\n\t/tmp/tmpo3b8udx7.lua:17: in local 'candidate'\n\t/tmp/tmpo3b8udx7.lua:26: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "timestamp": 1661907516
    },
    {
      "exit_code": 1,
      "program": "-- Given a string representing a space separated lowercase letters, return a table\n-- of the letter with the most repetition and containing the corresponding count.\n-- If several letters have the same occurrence, return all of them.\n-- Example:\n-- >>> histogram('a b c')\n-- {'a': 1, 'b': 1, 'c': 1}\n-- >>> histogram('a b b a')\n-- {'a': 2, 'b': 2}\n-- >>> histogram('a b c a b')\n-- {'a': 2, 'b': 2}\n-- >>> histogram('b b b b a')\n-- {'b': 4}\n-- >>> histogram('')\n-- {}\nlocal function histogram(test)\n    local result = {}\n    for i = 1, #test, 2 do\n        if test[i] == test[i+1] then\n            if result[test[i]] == nil then\n                result[test[i]] = 1\n            else\n                result[test[i]] = result[test[i]] + 1\n            end\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = histogram\n    lu.assertEquals(candidate('a b b a'), {['a'] = 2, ['b'] = 2})\n    lu.assertEquals(candidate('a b c a b'), {['a'] = 2, ['b'] = 2})\n    lu.assertEquals(candidate('a b c d g'), {['a'] = 1, ['b'] = 1, ['c'] = 1, ['d'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate('r t g'), {['r'] = 1, ['t'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate('b b b b a'), {['b'] = 4})\n    lu.assertEquals(candidate('r t g'), {['r'] = 1, ['t'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate(''), {})\n    lu.assertEquals(candidate('a'), {['a'] = 1})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpfcqufk34.lua:20: table index is nil\nstack traceback:\n\t/tmp/tmpfcqufk34.lua:20: in local 'candidate'\n\t/tmp/tmpfcqufk34.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "timestamp": 1661907516
    },
    {
      "exit_code": 1,
      "program": "-- Given a string representing a space separated lowercase letters, return a table\n-- of the letter with the most repetition and containing the corresponding count.\n-- If several letters have the same occurrence, return all of them.\n-- Example:\n-- >>> histogram('a b c')\n-- {'a': 1, 'b': 1, 'c': 1}\n-- >>> histogram('a b b a')\n-- {'a': 2, 'b': 2}\n-- >>> histogram('a b c a b')\n-- {'a': 2, 'b': 2}\n-- >>> histogram('b b b b a')\n-- {'b': 4}\n-- >>> histogram('')\n-- {}\nlocal function histogram(test)\n    local table = {}\n    for i = 1, #test do\n        table[test[i]] = table[test[i]] or 0\n        table[test[i]] = table[test[i]] + 1\n    end\n    return table\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = histogram\n    lu.assertEquals(candidate('a b b a'), {['a'] = 2, ['b'] = 2})\n    lu.assertEquals(candidate('a b c a b'), {['a'] = 2, ['b'] = 2})\n    lu.assertEquals(candidate('a b c d g'), {['a'] = 1, ['b'] = 1, ['c'] = 1, ['d'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate('r t g'), {['r'] = 1, ['t'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate('b b b b a'), {['b'] = 4})\n    lu.assertEquals(candidate('r t g'), {['r'] = 1, ['t'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate(''), {})\n    lu.assertEquals(candidate('a'), {['a'] = 1})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc26zq7kz.lua:18: table index is nil\nstack traceback:\n\t/tmp/tmpc26zq7kz.lua:18: in local 'candidate'\n\t/tmp/tmpc26zq7kz.lua:27: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "timestamp": 1661907516
    },
    {
      "exit_code": 1,
      "program": "-- Given a string representing a space separated lowercase letters, return a table\n-- of the letter with the most repetition and containing the corresponding count.\n-- If several letters have the same occurrence, return all of them.\n-- Example:\n-- >>> histogram('a b c')\n-- {'a': 1, 'b': 1, 'c': 1}\n-- >>> histogram('a b b a')\n-- {'a': 2, 'b': 2}\n-- >>> histogram('a b c a b')\n-- {'a': 2, 'b': 2}\n-- >>> histogram('b b b b a')\n-- {'b': 4}\n-- >>> histogram('')\n-- {}\nlocal function histogram(test)\n  local t = {}\n  for inlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = histogram\n    lu.assertEquals(candidate('a b b a'), {['a'] = 2, ['b'] = 2})\n    lu.assertEquals(candidate('a b c a b'), {['a'] = 2, ['b'] = 2})\n    lu.assertEquals(candidate('a b c d g'), {['a'] = 1, ['b'] = 1, ['c'] = 1, ['d'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate('r t g'), {['r'] = 1, ['t'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate('b b b b a'), {['b'] = 4})\n    lu.assertEquals(candidate('r t g'), {['r'] = 1, ['t'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate(''), {})\n    lu.assertEquals(candidate('a'), {['a'] = 1})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpztk904va.lua:18: 'do' expected near '='\n",
      "stdout": "",
      "timestamp": 1661907516
    },
    {
      "exit_code": 1,
      "program": "-- Given a string representing a space separated lowercase letters, return a table\n-- of the letter with the most repetition and containing the corresponding count.\n-- If several letters have the same occurrence, return all of them.\n-- Example:\n-- >>> histogram('a b c')\n-- {'a': 1, 'b': 1, 'c': 1}\n-- >>> histogram('a b b a')\n-- {'a': 2, 'b': 2}\n-- >>> histogram('a b c a b')\n-- {'a': 2, 'b': 2}\n-- >>> histogram('b b b b a')\n-- {'b': 4}\n-- >>> histogram('')\n-- {}\nlocal function histogram(test)\n    local table = {}\n    for inlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = histogram\n    lu.assertEquals(candidate('a b b a'), {['a'] = 2, ['b'] = 2})\n    lu.assertEquals(candidate('a b c a b'), {['a'] = 2, ['b'] = 2})\n    lu.assertEquals(candidate('a b c d g'), {['a'] = 1, ['b'] = 1, ['c'] = 1, ['d'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate('r t g'), {['r'] = 1, ['t'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate('b b b b a'), {['b'] = 4})\n    lu.assertEquals(candidate('r t g'), {['r'] = 1, ['t'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate(''), {})\n    lu.assertEquals(candidate('a'), {['a'] = 1})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpm5651m6k.lua:18: 'do' expected near '='\n",
      "stdout": "",
      "timestamp": 1661907516
    },
    {
      "exit_code": 1,
      "program": "-- Given a string representing a space separated lowercase letters, return a table\n-- of the letter with the most repetition and containing the corresponding count.\n-- If several letters have the same occurrence, return all of them.\n-- Example:\n-- >>> histogram('a b c')\n-- {'a': 1, 'b': 1, 'c': 1}\n-- >>> histogram('a b b a')\n-- {'a': 2, 'b': 2}\n-- >>> histogram('a b c a b')\n-- {'a': 2, 'b': 2}\n-- >>> histogram('b b b b a')\n-- {'b': 4}\n-- >>> histogram('')\n-- {}\nlocal function histogram(test)\n    local t = {}\n    for i = 1, #test do\n        if test[i] == ' ' then\n            t[test[i]] = t[test[i]] or 1\n        else\n            t[test[i]] = t[test[i]] or 1\n            t[test[i]] = t[test[i]] + 1\n        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = histogram\n    lu.assertEquals(candidate('a b b a'), {['a'] = 2, ['b'] = 2})\n    lu.assertEquals(candidate('a b c a b'), {['a'] = 2, ['b'] = 2})\n    lu.assertEquals(candidate('a b c d g'), {['a'] = 1, ['b'] = 1, ['c'] = 1, ['d'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate('r t g'), {['r'] = 1, ['t'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate('b b b b a'), {['b'] = 4})\n    lu.assertEquals(candidate('r t g'), {['r'] = 1, ['t'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate(''), {})\n    lu.assertEquals(candidate('a'), {['a'] = 1})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpf8wkyh2t.lua:21: table index is nil\nstack traceback:\n\t/tmp/tmpf8wkyh2t.lua:21: in local 'candidate'\n\t/tmp/tmpf8wkyh2t.lua:31: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "timestamp": 1661907516
    },
    {
      "exit_code": 1,
      "program": "-- Given a string representing a space separated lowercase letters, return a table\n-- of the letter with the most repetition and containing the corresponding count.\n-- If several letters have the same occurrence, return all of them.\n-- Example:\n-- >>> histogram('a b c')\n-- {'a': 1, 'b': 1, 'c': 1}\n-- >>> histogram('a b b a')\n-- {'a': 2, 'b': 2}\n-- >>> histogram('a b c a b')\n-- {'a': 2, 'b': 2}\n-- >>> histogram('b b b b a')\n-- {'b': 4}\n-- >>> histogram('')\n-- {}\nlocal function histogram(test)\n    local table = {}\n    for i = 1, #test do\n        table[test[i]] = table[test[i]] or 0\n        table[test[i]] = table[test[i]] + 1\n    end\n    return table\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = histogram\n    lu.assertEquals(candidate('a b b a'), {['a'] = 2, ['b'] = 2})\n    lu.assertEquals(candidate('a b c a b'), {['a'] = 2, ['b'] = 2})\n    lu.assertEquals(candidate('a b c d g'), {['a'] = 1, ['b'] = 1, ['c'] = 1, ['d'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate('r t g'), {['r'] = 1, ['t'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate('b b b b a'), {['b'] = 4})\n    lu.assertEquals(candidate('r t g'), {['r'] = 1, ['t'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate(''), {})\n    lu.assertEquals(candidate('a'), {['a'] = 1})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc26zq7kz.lua:18: table index is nil\nstack traceback:\n\t/tmp/tmpc26zq7kz.lua:18: in local 'candidate'\n\t/tmp/tmpc26zq7kz.lua:27: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "timestamp": 1661907516
    },
    {
      "exit_code": 1,
      "program": "-- Given a string representing a space separated lowercase letters, return a table\n-- of the letter with the most repetition and containing the corresponding count.\n-- If several letters have the same occurrence, return all of them.\n-- Example:\n-- >>> histogram('a b c')\n-- {'a': 1, 'b': 1, 'c': 1}\n-- >>> histogram('a b b a')\n-- {'a': 2, 'b': 2}\n-- >>> histogram('a b c a b')\n-- {'a': 2, 'b': 2}\n-- >>> histogram('b b b b a')\n-- {'b': 4}\n-- >>> histogram('')\n-- {}\nlocal function histogram(test)\n    local t = {}\n    for i = 1, #test do\n        if test[i] ~= ' ' then\n            t[test[i]] = t[test[i]] or 1\n        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = histogram\n    lu.assertEquals(candidate('a b b a'), {['a'] = 2, ['b'] = 2})\n    lu.assertEquals(candidate('a b c a b'), {['a'] = 2, ['b'] = 2})\n    lu.assertEquals(candidate('a b c d g'), {['a'] = 1, ['b'] = 1, ['c'] = 1, ['d'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate('r t g'), {['r'] = 1, ['t'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate('b b b b a'), {['b'] = 4})\n    lu.assertEquals(candidate('r t g'), {['r'] = 1, ['t'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate(''), {})\n    lu.assertEquals(candidate('a'), {['a'] = 1})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmprpusdkt3.lua:19: table index is nil\nstack traceback:\n\t/tmp/tmprpusdkt3.lua:19: in local 'candidate'\n\t/tmp/tmprpusdkt3.lua:28: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "timestamp": 1661907516
    },
    {
      "exit_code": 1,
      "program": "-- Given a string representing a space separated lowercase letters, return a table\n-- of the letter with the most repetition and containing the corresponding count.\n-- If several letters have the same occurrence, return all of them.\n-- Example:\n-- >>> histogram('a b c')\n-- {'a': 1, 'b': 1, 'c': 1}\n-- >>> histogram('a b b a')\n-- {'a': 2, 'b': 2}\n-- >>> histogram('a b c a b')\n-- {'a': 2, 'b': 2}\n-- >>> histogram('b b b b a')\n-- {'b': 4}\n-- >>> histogram('')\n-- {}\nlocal function histogram(test)\n    local table = {}\n    for _,c in ipairs(test) do\n        table[c] = table[c] + 1\n    end\n    return table\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = histogram\n    lu.assertEquals(candidate('a b b a'), {['a'] = 2, ['b'] = 2})\n    lu.assertEquals(candidate('a b c a b'), {['a'] = 2, ['b'] = 2})\n    lu.assertEquals(candidate('a b c d g'), {['a'] = 1, ['b'] = 1, ['c'] = 1, ['d'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate('r t g'), {['r'] = 1, ['t'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate('b b b b a'), {['b'] = 4})\n    lu.assertEquals(candidate('r t g'), {['r'] = 1, ['t'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate(''), {})\n    lu.assertEquals(candidate('a'), {['a'] = 1})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpyb5ogiv6.lua:17: bad argument #1 to 'ipairs' (table expected, got string)\nstack traceback:\n\t/tmp/tmpyb5ogiv6.lua:17: in local 'candidate'\n\t/tmp/tmpyb5ogiv6.lua:26: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "timestamp": 1661907516
    },
    {
      "exit_code": 1,
      "program": "-- Given a string representing a space separated lowercase letters, return a table\n-- of the letter with the most repetition and containing the corresponding count.\n-- If several letters have the same occurrence, return all of them.\n-- Example:\n-- >>> histogram('a b c')\n-- {'a': 1, 'b': 1, 'c': 1}\n-- >>> histogram('a b b a')\n-- {'a': 2, 'b': 2}\n-- >>> histogram('a b c a b')\n-- {'a': 2, 'b': 2}\n-- >>> histogram('b b b b a')\n-- {'b': 4}\n-- >>> histogram('')\n-- {}\nlocal function histogram(test)\n    local table = {}\n    for _, v in ipairs(test) do\n        table[v] = table[v] + 1\n    end\n    return table\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = histogram\n    lu.assertEquals(candidate('a b b a'), {['a'] = 2, ['b'] = 2})\n    lu.assertEquals(candidate('a b c a b'), {['a'] = 2, ['b'] = 2})\n    lu.assertEquals(candidate('a b c d g'), {['a'] = 1, ['b'] = 1, ['c'] = 1, ['d'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate('r t g'), {['r'] = 1, ['t'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate('b b b b a'), {['b'] = 4})\n    lu.assertEquals(candidate('r t g'), {['r'] = 1, ['t'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate(''), {})\n    lu.assertEquals(candidate('a'), {['a'] = 1})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpo3b8udx7.lua:17: bad argument #1 to 'ipairs' (table expected, got string)\nstack traceback:\n\t/tmp/tmpo3b8udx7.lua:17: in local 'candidate'\n\t/tmp/tmpo3b8udx7.lua:26: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "timestamp": 1661907516
    },
    {
      "exit_code": 1,
      "program": "-- Given a string representing a space separated lowercase letters, return a table\n-- of the letter with the most repetition and containing the corresponding count.\n-- If several letters have the same occurrence, return all of them.\n-- Example:\n-- >>> histogram('a b c')\n-- {'a': 1, 'b': 1, 'c': 1}\n-- >>> histogram('a b b a')\n-- {'a': 2, 'b': 2}\n-- >>> histogram('a b c a b')\n-- {'a': 2, 'b': 2}\n-- >>> histogram('b b b b a')\n-- {'b': 4}\n-- >>> histogram('')\n-- {}\nlocal function histogram(test)\n    local table = {}\n    for i = 1, #test do\n        table[test[i]] = table[test[i]] or 0\n        table[test[i]] = table[test[i]] + 1\n    end\n    return table\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = histogram\n    lu.assertEquals(candidate('a b b a'), {['a'] = 2, ['b'] = 2})\n    lu.assertEquals(candidate('a b c a b'), {['a'] = 2, ['b'] = 2})\n    lu.assertEquals(candidate('a b c d g'), {['a'] = 1, ['b'] = 1, ['c'] = 1, ['d'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate('r t g'), {['r'] = 1, ['t'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate('b b b b a'), {['b'] = 4})\n    lu.assertEquals(candidate('r t g'), {['r'] = 1, ['t'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate(''), {})\n    lu.assertEquals(candidate('a'), {['a'] = 1})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc26zq7kz.lua:18: table index is nil\nstack traceback:\n\t/tmp/tmpc26zq7kz.lua:18: in local 'candidate'\n\t/tmp/tmpc26zq7kz.lua:27: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "timestamp": 1661907516
    },
    {
      "exit_code": 1,
      "program": "-- Given a string representing a space separated lowercase letters, return a table\n-- of the letter with the most repetition and containing the corresponding count.\n-- If several letters have the same occurrence, return all of them.\n-- Example:\n-- >>> histogram('a b c')\n-- {'a': 1, 'b': 1, 'c': 1}\n-- >>> histogram('a b b a')\n-- {'a': 2, 'b': 2}\n-- >>> histogram('a b c a b')\n-- {'a': 2, 'b': 2}\n-- >>> histogram('b b b b a')\n-- {'b': 4}\n-- >>> histogram('')\n-- {}\nlocal function histogram(test)\n    local table = {}\n    for inlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = histogram\n    lu.assertEquals(candidate('a b b a'), {['a'] = 2, ['b'] = 2})\n    lu.assertEquals(candidate('a b c a b'), {['a'] = 2, ['b'] = 2})\n    lu.assertEquals(candidate('a b c d g'), {['a'] = 1, ['b'] = 1, ['c'] = 1, ['d'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate('r t g'), {['r'] = 1, ['t'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate('b b b b a'), {['b'] = 4})\n    lu.assertEquals(candidate('r t g'), {['r'] = 1, ['t'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate(''), {})\n    lu.assertEquals(candidate('a'), {['a'] = 1})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpm5651m6k.lua:18: 'do' expected near '='\n",
      "stdout": "",
      "timestamp": 1661907516
    },
    {
      "exit_code": 1,
      "program": "-- Given a string representing a space separated lowercase letters, return a table\n-- of the letter with the most repetition and containing the corresponding count.\n-- If several letters have the same occurrence, return all of them.\n-- Example:\n-- >>> histogram('a b c')\n-- {'a': 1, 'b': 1, 'c': 1}\n-- >>> histogram('a b b a')\n-- {'a': 2, 'b': 2}\n-- >>> histogram('a b c a b')\n-- {'a': 2, 'b': 2}\n-- >>> histogram('b b b b a')\n-- {'b': 4}\n-- >>> histogram('')\n-- {}\nlocal function histogram(test)\n    local table = {}\n    for _, v in ipairs(test) do\n        table[v] = table[v] + 1\n    end\n    return table\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = histogram\n    lu.assertEquals(candidate('a b b a'), {['a'] = 2, ['b'] = 2})\n    lu.assertEquals(candidate('a b c a b'), {['a'] = 2, ['b'] = 2})\n    lu.assertEquals(candidate('a b c d g'), {['a'] = 1, ['b'] = 1, ['c'] = 1, ['d'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate('r t g'), {['r'] = 1, ['t'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate('b b b b a'), {['b'] = 4})\n    lu.assertEquals(candidate('r t g'), {['r'] = 1, ['t'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate(''), {})\n    lu.assertEquals(candidate('a'), {['a'] = 1})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpo3b8udx7.lua:17: bad argument #1 to 'ipairs' (table expected, got string)\nstack traceback:\n\t/tmp/tmpo3b8udx7.lua:17: in local 'candidate'\n\t/tmp/tmpo3b8udx7.lua:26: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "timestamp": 1661907516
    },
    {
      "exit_code": 1,
      "program": "-- Given a string representing a space separated lowercase letters, return a table\n-- of the letter with the most repetition and containing the corresponding count.\n-- If several letters have the same occurrence, return all of them.\n-- Example:\n-- >>> histogram('a b c')\n-- {'a': 1, 'b': 1, 'c': 1}\n-- >>> histogram('a b b a')\n-- {'a': 2, 'b': 2}\n-- >>> histogram('a b c a b')\n-- {'a': 2, 'b': 2}\n-- >>> histogram('b b b b a')\n-- {'b': 4}\n-- >>> histogram('')\n-- {}\nlocal function histogram(test)\n    local table = {}\n    for _, v in ipairs(test) do\n        table[v] = table[v] + 1\n    end\n    return table\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = histogram\n    lu.assertEquals(candidate('a b b a'), {['a'] = 2, ['b'] = 2})\n    lu.assertEquals(candidate('a b c a b'), {['a'] = 2, ['b'] = 2})\n    lu.assertEquals(candidate('a b c d g'), {['a'] = 1, ['b'] = 1, ['c'] = 1, ['d'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate('r t g'), {['r'] = 1, ['t'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate('b b b b a'), {['b'] = 4})\n    lu.assertEquals(candidate('r t g'), {['r'] = 1, ['t'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate(''), {})\n    lu.assertEquals(candidate('a'), {['a'] = 1})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpo3b8udx7.lua:17: bad argument #1 to 'ipairs' (table expected, got string)\nstack traceback:\n\t/tmp/tmpo3b8udx7.lua:17: in local 'candidate'\n\t/tmp/tmpo3b8udx7.lua:26: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "timestamp": 1661907516
    },
    {
      "exit_code": 1,
      "program": "-- Given a string representing a space separated lowercase letters, return a table\n-- of the letter with the most repetition and containing the corresponding count.\n-- If several letters have the same occurrence, return all of them.\n-- Example:\n-- >>> histogram('a b c')\n-- {'a': 1, 'b': 1, 'c': 1}\n-- >>> histogram('a b b a')\n-- {'a': 2, 'b': 2}\n-- >>> histogram('a b c a b')\n-- {'a': 2, 'b': 2}\n-- >>> histogram('b b b b a')\n-- {'b': 4}\n-- >>> histogram('')\n-- {}\nlocal function histogram(test)\n    local table = {}\n    for i=1,#                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = histogram\n    lu.assertEquals(candidate('a b b a'), {['a'] = 2, ['b'] = 2})\n    lu.assertEquals(candidate('a b c a b'), {['a'] = 2, ['b'] = 2})\n    lu.assertEquals(candidate('a b c d g'), {['a'] = 1, ['b'] = 1, ['c'] = 1, ['d'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate('r t g'), {['r'] = 1, ['t'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate('b b b b a'), {['b'] = 4})\n    lu.assertEquals(candidate('r t g'), {['r'] = 1, ['t'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate(''), {})\n    lu.assertEquals(candidate('a'), {['a'] = 1})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpm5651m6k.lua:18: 'do' expected near '='\n",
      "stdout": "",
      "timestamp": 1661907516
    },
    {
      "exit_code": 1,
      "program": "-- Given a string representing a space separated lowercase letters, return a table\n-- of the letter with the most repetition and containing the corresponding count.\n-- If several letters have the same occurrence, return all of them.\n-- Example:\n-- >>> histogram('a b c')\n-- {'a': 1, 'b': 1, 'c': 1}\n-- >>> histogram('a b b a')\n-- {'a': 2, 'b': 2}\n-- >>> histogram('a b c a b')\n-- {'a': 2, 'b': 2}\n-- >>> histogram('b b b b a')\n-- {'b': 4}\n-- >>> histogram('')\n-- {}\nlocal function histogram(test)\n    local table = {}\n    for _, v in ipairs(test) do\n        table[v] = table[v] + 1\n    end\n    return table\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = histogram\n    lu.assertEquals(candidate('a b b a'), {['a'] = 2, ['b'] = 2})\n    lu.assertEquals(candidate('a b c a b'), {['a'] = 2, ['b'] = 2})\n    lu.assertEquals(candidate('a b c d g'), {['a'] = 1, ['b'] = 1, ['c'] = 1, ['d'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate('r t g'), {['r'] = 1, ['t'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate('b b b b a'), {['b'] = 4})\n    lu.assertEquals(candidate('r t g'), {['r'] = 1, ['t'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate(''), {})\n    lu.assertEquals(candidate('a'), {['a'] = 1})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpo3b8udx7.lua:17: bad argument #1 to 'ipairs' (table expected, got string)\nstack traceback:\n\t/tmp/tmpo3b8udx7.lua:17: in local 'candidate'\n\t/tmp/tmpo3b8udx7.lua:26: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "timestamp": 1661907516
    },
    {
      "exit_code": 1,
      "program": "-- Given a string representing a space separated lowercase letters, return a table\n-- of the letter with the most repetition and containing the corresponding count.\n-- If several letters have the same occurrence, return all of them.\n-- Example:\n-- >>> histogram('a b c')\n-- {'a': 1, 'b': 1, 'c': 1}\n-- >>> histogram('a b b a')\n-- {'a': 2, 'b': 2}\n-- >>> histogram('a b c a b')\n-- {'a': 2, 'b': 2}\n-- >>> histogram('b b b b a')\n-- {'b': 4}\n-- >>> histogram('')\n-- {}\nlocal function histogram(test)\n    local t = {}\n    for inlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = histogram\n    lu.assertEquals(candidate('a b b a'), {['a'] = 2, ['b'] = 2})\n    lu.assertEquals(candidate('a b c a b'), {['a'] = 2, ['b'] = 2})\n    lu.assertEquals(candidate('a b c d g'), {['a'] = 1, ['b'] = 1, ['c'] = 1, ['d'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate('r t g'), {['r'] = 1, ['t'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate('b b b b a'), {['b'] = 4})\n    lu.assertEquals(candidate('r t g'), {['r'] = 1, ['t'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate(''), {})\n    lu.assertEquals(candidate('a'), {['a'] = 1})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpl797df9i.lua:18: 'do' expected near '='\n",
      "stdout": "",
      "timestamp": 1661907516
    },
    {
      "exit_code": 1,
      "program": "-- Given a string representing a space separated lowercase letters, return a table\n-- of the letter with the most repetition and containing the corresponding count.\n-- If several letters have the same occurrence, return all of them.\n-- Example:\n-- >>> histogram('a b c')\n-- {'a': 1, 'b': 1, 'c': 1}\n-- >>> histogram('a b b a')\n-- {'a': 2, 'b': 2}\n-- >>> histogram('a b c a b')\n-- {'a': 2, 'b': 2}\n-- >>> histogram('b b b b a')\n-- {'b': 4}\n-- >>> histogram('')\n-- {}\nlocal function histogram(test)\n    local t = {}\n    for i = 1, #test do\n        if test[i] ~= ' ' then\n            t[test[i]] = t[test[i]] or 1\n        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = histogram\n    lu.assertEquals(candidate('a b b a'), {['a'] = 2, ['b'] = 2})\n    lu.assertEquals(candidate('a b c a b'), {['a'] = 2, ['b'] = 2})\n    lu.assertEquals(candidate('a b c d g'), {['a'] = 1, ['b'] = 1, ['c'] = 1, ['d'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate('r t g'), {['r'] = 1, ['t'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate('b b b b a'), {['b'] = 4})\n    lu.assertEquals(candidate('r t g'), {['r'] = 1, ['t'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate(''), {})\n    lu.assertEquals(candidate('a'), {['a'] = 1})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmprpusdkt3.lua:19: table index is nil\nstack traceback:\n\t/tmp/tmprpusdkt3.lua:19: in local 'candidate'\n\t/tmp/tmprpusdkt3.lua:28: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "timestamp": 1661907516
    }
  ]
}
name: HumanEval_110_exchange
language: lua
prompt: "-- In this problem, you will implement a function that takes two tables of\
  \ numbers,\n-- and determines whether it is possible to perform an exchange of elements\n\
  -- between them to make lst1 a table of only even numbers.\n-- There is no limit\
  \ on the number of exchanged elements between lst1 and lst2.\n-- If it is possible\
  \ to exchange elements between the lst1 and lst2 to make\n-- all the elements of\
  \ lst1 to be even, return \"YES\".\n-- Otherwise, return \"NO\".\n-- For example:\n\
  -- >>> exchange([1, 2, 3, 4], [1, 2, 3, 4])\n-- \"YES\"\n-- >>> exchange([1, 2,\
  \ 3, 4], [1, 5, 3, 4])\n-- \"NO\"\n-- It is assumed that the input tables will be\
  \ non-empty.\nlocal function exchange(lst1, lst2)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = exchange\n\
  \    lu.assertEquals(candidate({1, 2, 3, 4}, {1, 2, 3, 4}), 'YES')\n    lu.assertEquals(candidate({1,\
  \ 2, 3, 4}, {1, 5, 3, 4}), 'NO')\n    lu.assertEquals(candidate({1, 2, 3, 4}, {2,\
  \ 1, 4, 3}), 'YES')\n    lu.assertEquals(candidate({5, 7, 3}, {2, 6, 4}), 'YES')\n\
  \    lu.assertEquals(candidate({5, 7, 3}, {2, 6, 3}), 'NO')\n    lu.assertEquals(candidate({3,\
  \ 2, 6, 1, 8, 9}, {3, 5, 5, 1, 1, 1}), 'NO')\n    lu.assertEquals(candidate({100,\
  \ 200}, {200, 200}), 'YES')\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local even = {}\n    for i = 1, #lst1, 2 do\n        if lst1[i]\
    \ % 2 == 0 then\n            even[i] = true\n        end\n    end\n    for i =\
    \ 1, #lst2, 2 do\n        if lst2[i] % 2 == 0 then\n            even[i] = true\n\
    \        end\n    end\n    for i = 1, #lst1, 2 do\n        if not even[i] then\n\
    \            return \"NO\"\n        end\n    end\n    return \"YES\"\nend", " \
    \   local even = true\n    for i = 1, #lst1 do\n        if lst1[i] % 2 == 0 then\n\
    \            even = false\n            break\n        end\n    end\n    for i\
    \ = 1, #lst2 do\n        if lst2[i] % 2 == 0 then\n            even = false\n\
    \            break\n        end\n    end\n    if even then\n        return \"\
    YES\"\n    else\n        return \"NO\"\n    end\nend", "    local even = function(n)\n\
    \        return (n % 2 == 0)\n    end\n    local even_lst1 = lst1:map(even)\n\
    \    local even_lst2 = lst2:map(even)\n    return (even_lst1 == even_lst2)\nend",
  "    local i, j\n    for i = 1, #lst1, 2 do\n        for j = 1, #lst2, 2 do\n  \
    \          if lst1[i] ~= lst2[j] then\n                return \"NO\"\n       \
    \     end\n        end\n    end\n    return \"YES\"\nend", "    local even = {}\n\
    \    for i = 1, #lst1, 2 do\n        if lst1[i] % 2 == 0 then\n            even[i]\
    \ = true\n        end\n    end\n    for i = 1, #lst2, 2 do\n        if lst2[i]\
    \ % 2 == 0 then\n            even[i] = true\n        end\n    end\n    for i =\
    \ 1, #lst1, 2 do\n        if not even[i] then\n            return \"NO\"\n   \
    \     end\n    end\n    return \"YES\"\nend", "    local even = true\n    for\
    \ i = 1, #lst1 do\n        if lst1[i] % 2 == 0 then\n            even = false\n\
    \            break\n        end\n    end\n    for i = 1, #lst2 do\n        if\
    \ lst2[i] % 2 == 0 then\n            even = false\n            break\n       \
    \ end\n    end\n    if even then\n        return \"YES\"\n    else\n        return\
    \ \"NO\"\nend", "    local even = false\n    for i = 1, #lst1, 2 do\n        if\
    \ lst1[i] % 2 == 0 and lst2[i] % 2 == 0 then\n            even = true\n      \
    \      break\n        end\n    end\n    return even\nend", "    local even = function(n)\n\
    \        return n % 2 == 0\n    end\n    local odd = function(n)\n        return\
    \ n % 2 == 1\n    end\n    local even_index = function(n)\n        return n /\
    \ 2\n    end\n    local odd_index = function(n)\n        return n / 2 + 1\n  \
    \  end\n    local even_value = function(n)\n        return lst1[even_index(n)]\n\
    \    end\n    local odd_value = function(n)\n        return lst2[odd_index(n)]\n\
    \    end\n    local even_value_index = function(n)\n        return even_index(n)\n\
    \    end\n    local odd_value_index = function(n)\n        return odd_index(n)\n\
    \    end\n    local even_value_index_index = function(n)\n        return even_index(n)\n\
    \    end\n    local odd_value_index_index = function(n)\n        return odd_index(n)\n\
    \    end\n    local even_value_index_value = function(n)\n        return lst1[even_index(n)]\n\
    \    end\n    local odd_value_index_value = function(n)\n        return lst2[odd_index(n)]\n\
    \    end\n    local even_value_index_value_index = function(n)\n        return\
    \ even_index(n)\n    end\n    local odd_value_index_value_index = function(n)\n\
    \        return odd_index(n)\n    end\n    local even_value_index_value_index_index\
    \ = function(n)\n        return even_index(n)\n    end\n    local odd_value_index_value_index_index\
    \ = function(n)\n        return odd_index(n)\n    end\n    local even_value_index_value_index_value\
    \ = function(n)\n        return lst1[even_index(n)]\n    end\n    local odd_value_index_value_index_value\
    \ = function(n)\n        return lst2[odd_index(n)]\n    end\n    local even_value_index_value_index_value_index\
    \ = function(n)", "    local even = {}\n    for i = 1, #lst1, 2 do\n        if\
    \ lst1[i] % 2 == 0 then\n            even[i] = true\n        end\n    end\n  \
    \  for i = 1, #lst2, 2 do\n        if lst2[i] % 2 == 0 then\n            even[i]\
    \ = true\n        end\n    end\n    for i = 1, #lst1, 2 do\n        if not even[i]\
    \ then\n            return \"NO\"\n        end\n    end\n    return \"YES\"\n\
    end", "    local even = {}\n    for i = 1, #lst1, 2 do\n        if lst1[i] % 2\
    \ == 0 then\n            even[i] = lst2[i]\n        end\n    end\n    for i =\
    \ 1, #lst2, 2 do\n        if lst2[i] % 2 == 0 then\n            even[i] = lst1[i]\n\
    \        end\n    end\n    return #even > 0 and even or \"NO\"\nend", "    local\
    \ even = function(n)\n        return n % 2 == 0\n    end\n    local odd = function(n)\n\
    \        return n % 2 == 1\n    end\n    local even_index = function(n)\n    \
    \    return n / 2\n    end\n    local odd_index = function(n)\n        return\
    \ n / 2 + 1\n    end\n    local even_value = function(n)\n        return lst1[even_index(n)]\n\
    \    end\n    local odd_value = function(n)\n        return lst2[odd_index(n)]\n\
    \    end\n    local even_index_value = function(n)\n        return lst2[even_index(n)]\n\
    \    end\n    local odd_index_value = function(n)\n        return lst1[odd_index(n)]\n\
    \    end\n    local even_index_value_value = function(n)\n        return lst1[even_index(n)]\n\
    \    end\n    local odd_index_value_value = function(n)\n        return lst2[odd_index(n)]\n\
    \    end\n    local even_index_value_value_value = function(n)\n        return\
    \ lst1[even_index(n)]\n    end\n    local odd_index_value_value_value = function(n)\n\
    \        return lst2[odd_index(n)]\n    end\n    local even_index_value_value_value_value\
    \ = function(n)\n        return lst1[even_index(n)]\n    end\n    local odd_index_value_value_value_value\
    \ = function(n)\n        return lst2[odd_index(n)]\n    end\n    local even_index_value_value_value_value_value\
    \ = function(n)\n        return lst1[even_index(n)]\n    end\n    local odd_index_value_value_value_value_value\
    \ = function(n)\n        return lst2[odd_index(n)]\n    end\n    local even_index_value_value_value_value_value_value\
    \ = function(n)\n        return lst1[even_index(n)]\n    end\n    local odd_index_value",
  "    local even = {}\n    for i = 1, #lst1, 2 do\n        if lst1[i] % 2 == 0 then\n\
    \            even[i] = true\n        end\n    end\n    for i = 1, #lst2, 2 do\n\
    \        if lst2[i] % 2 == 0 then\n            even[i] = true\n        end\n \
    \   end\n    for i = 1, #lst1, 2 do\n        if not even[i] then\n           \
    \ return \"NO\"\n        end\n    end\n    return \"YES\"\nend", "    local even\
    \ = {}\n    for i = 1, #lst1, 2 do\n        if lst1[i] % 2 == 0 then\n       \
    \     even[i] = true\n        end\n    end\n    for i = 1, #lst2, 2 do\n     \
    \   if lst2[i] % 2 == 0 then\n            even[i] = true\n        end\n    end\n\
    \    for i = 1, #lst1, 2 do\n        if not even[i] then\n            return \"\
    NO\"\n        end\n    end\n    return \"YES\"\nend", "    local even = {}\n \
    \   for i = 1, #lst1, 2 do\n        if lst1[i] % 2 == 0 then\n            even[i]\
    \ = true\n        end\n    end\n    for i = 1, #lst2, 2 do\n        if lst2[i]\
    \ % 2 == 0 then\n            even[i] = true\n        end\n    end\n    for i =\
    \ 1, #lst1, 2 do\n        if not even[i] then\n            return \"NO\"\n   \
    \     end\n    end\n    return \"YES\"\nend", "    local even = function(n)\n\
    \        return n % 2 == 0\n    end\n    local odd = function(n)\n        return\
    \ n % 2 == 1\n    end\n    local even_index = function(n)\n        return n /\
    \ 2\n    end\n    local odd_index = function(n)\n        return n / 2 + 1\n  \
    \  end\n    local even_value = function(n)\n        return lst1[even_index(n)]\n\
    \    end\n    local odd_value = function(n)\n        return lst2[odd_index(n)]\n\
    \    end\n    local even_index_value = function(n)\n        return lst1[even_index(n)]\n\
    \    end\n    local odd_index_value = function(n)\n        return lst2[odd_index(n)]\n\
    \    end\n    local even_value_value = function(n)\n        return lst1[even_index(n)]\n\
    \    end\n    local odd_value_value = function(n)\n        return lst2[odd_index(n)]\n\
    \    end\n    local even_index_value_value = function(n)\n        return lst1[even_index(n)]\n\
    \    end\n    local odd_index_value_value = function(n)\n        return lst2[odd_index(n)]\n\
    \    end\n    local even_value_value_value = function(n)\n        return lst1[even_index(n)]\n\
    \    end\n    local odd_value_value_value = function(n)\n        return lst2[odd_index(n)]\n\
    \    end\n    local even_index_value_value_value = function(n)\n        return\
    \ lst1[even_index(n)]\n    end\n    local odd_index_value_value_value = function(n)\n\
    \        return lst2[odd_index(n)]\n    end\n    local even_value_value_value_value\
    \ = function(n)\n        return lst1[even_index(n)]\n    end\n    local odd_value_value_value_value\
    \ = function(n)\n        return lst2[odd_index(n)]\n    end\n    local even_",
  "  local even = {}\n  for i = 1, #lst1, 2 do\n    if lst1[i] % 2 == 0 then\n   \
    \   even[i] = lst2[i]\n    end\n  end\n  for i = 1, #lst2, 2 do\n    if lst2[i]\
    \ % 2 == 0 then\n      even[i] = lst1[i]\n    end\n  end\n  return even\nend",
  "    local even = function(n)\n        return n % 2 == 0\n    end\n    local odd\
    \ = function(n)\n        return n % 2 == 1\n    end\n    local even_index = function(n)\n\
    \        return n / 2\n    end\n    local odd_index = function(n)\n        return\
    \ n / 2 + 1\n    end\n    local even_value = function(n)\n        return lst1[even_index(n)]\n\
    \    end\n    local odd_value = function(n)\n        return lst2[odd_index(n)]\n\
    \    end\n    local even_value_index = function(n)\n        return even_index(n)\n\
    \    end\n    local odd_value_index = function(n)\n        return odd_index(n)\n\
    \    end\n    local even_value_index_value = function(n)\n        return lst1[even_value_index(n)]\n\
    \    end\n    local odd_value_index_value = function(n)\n        return lst2[odd_value_index(n)]\n\
    \    end\n    local even_value_index_value_value = function(n)\n        return\
    \ lst1[even_value_index(n)]\n    end\n    local odd_value_index_value_value =\
    \ function(n)\n        return lst2[odd_value_index(n)]\n    end\n    local even_value_index_value_value_value\
    \ = function(n)\n        return lst1[even_value_index(n)]\n    end\n    local\
    \ odd_value_index_value_value_value = function(n)\n        return lst2[odd_value_index(n)]\n\
    \    end\n    local even_value_index_value_value_value_value = function(n)\n \
    \       return lst1[even_value_index(n)]\n    end\n    local odd_value_index_value_value_value_value\
    \ = function(n)\n        return lst2[odd_value_index(n)]\n    end\n    local even_value_index_value_value_value_value_value\
    \ = function(n)\n        return lst1[even_value_index(n)]\n", "    local even\
    \ = {}\n    for i = 1, #lst1, 2 do\n        if lst1[i] % 2 == 0 then\n       \
    \     even[i] = true\n        end\n    end\n    for i = 1, #lst2, 2 do\n     \
    \   if lst2[i] % 2 == 0 then\n            even[i] = true\n        end\n    end\n\
    \    for i = 1, #lst1, 2 do\n        if not even[i] then\n            return \"\
    NO\"\n        end\n    end\n    return \"YES\"\nend", "    local even = {}\n \
    \   for i = 1, #lst1, 2 do\n        if lst1[i] % 2 == 0 then\n            even[i]\
    \ = true\n        end\n    end\n    for i = 1, #lst2, 2 do\n        if lst2[i]\
    \ % 2 == 0 then\n            even[i] = true\n        end\n    end\n    for i =\
    \ 1, #lst1, 2 do\n        if not even[i] then\n            return \"NO\"\n   \
    \     end\n    end\n    return \"YES\"\nend", "  local even = {}\n  for i = 1,\
    \ #lst1, 2 do\n    if lst1[i] % 2 == 0 then\n      even[i] = true\n    end\n \
    \ end\n  for i = 1, #lst2, 2 do\n    if lst2[i] % 2 == 0 then\n      even[i] =\
    \ true\n    end\n  end\n  for i = 1, #lst1, 2 do\n    if not even[i] then\n  \
    \    return \"NO\"\n    end\n  end\n  return \"YES\"\nend", "    local even =\
    \ function(n)\n        return n % 2 == 0\n    end\n    local odd = function(n)\n\
    \        return n % 2 == 1\n    end\n    local even_index = function(n)\n    \
    \    return n / 2\n    end\n    local odd_index = function(n)\n        return\
    \ n / 2 + 1\n    end\n    local even_value = function(n)\n        return lst1[even_index(n)]\n\
    \    end\n    local odd_value = function(n)\n        return lst2[odd_index(n)]\n\
    \    end\n    for i = 1, #lst1 do\n        if even(lst1[i]) and odd(lst2[i]) then\n\
    \            lst1[i], lst2[i] = lst2[i], lst1[i]\n            return \"YES\"\n\
    \        end\n    end\n    return \"NO\"\nend", "    local even = function(n)\n\
    \        return n % 2 == 0\n    end\n    local odd = function(n)\n        return\
    \ n % 2 == 1\n    end\n    local even_index = function(n)\n        return n /\
    \ 2\n    end\n    local odd_index = function(n)\n        return n / 2 + 1\n  \
    \  end\n    local even_value = function(n)\n        return lst1[even_index(n)]\n\
    \    end\n    local odd_value = function(n)\n        return lst2[odd_index(n)]\n\
    \    end\n    for i = 1, #lst1 do\n        if not even(lst1[i]) then\n       \
    \     if not even(lst2[i]) then\n                return \"NO\"\n            end\n\
    \        else\n            if not odd(lst2[i]) then\n                return \"\
    NO\"\n            end\n        end\n    end\n    for i = 1, #lst2 do\n       \
    \ if not even(lst2[i]) then\n            if not odd(lst1[i]) then\n          \
    \      return \"NO\"\n            end\n        else\n            if not odd(lst1[i])\
    \ then\n                return \"NO\"\n            end\n        end\n    end\n\
    \    return \"YES\"\nend", "    local even = {}\n    for i = 1, #lst1, 2 do\n\
    \        if lst1[i] % 2 == 0 then\n            even[i] = lst1[i]\n        end\n\
    \    end\n    for i = 1, #lst2, 2 do\n        if lst2[i] % 2 == 0 then\n     \
    \       even[i] = lst2[i]\n        end\n    end\n    for i = 1, #lst1, 2 do\n\
    \        if even[i] != lst1[i] then\n            return \"NO\"\n        end\n\
    \    end\n    return \"YES\"\nend", "    local even = true\n    for i = 1, #lst1\
    \ do\n        if lst1[i] % 2 == 0 then\n            even = false\n           \
    \ break\n        end\n    end\n    for i = 1, #lst2 do\n        if lst2[i] % 2\
    \ == 0 then\n            even = false\n            break\n        end\n    end\n\
    \    if even then\n        return \"YES\"\n    else\n        return \"NO\"\n \
    \   end\nend", "    local even = function(n)\n        return n % 2 == 0\n    end\n\
    \    local odd = function(n)\n        return n % 2 == 1\n    end\n    local even_index\
    \ = function(n)\n        return n / 2\n    end\n    local odd_index = function(n)\n\
    \        return n / 2 + 1\n    end\n    local even_value = function(n)\n     \
    \   return lst1[even_index(n)]\n    end\n    local odd_value = function(n)\n \
    \       return lst2[odd_index(n)]\n    end\n    local even_indexes = function(n)\n\
    \        return lst1.map(even_index)\n    end\n    local odd_indexes = function(n)\n\
    \        return lst2.map(odd_index)\n    end\n    local even_values = function(n)\n\
    \        return lst1.map(even_value)\n    end\n    local odd_values = function(n)\n\
    \        return lst2.map(odd_value)\n    end\n    local even_indexes_equal = function(n)\n\
    \        return lst1.map(even_indexes) == lst2.map(even_indexes)\n    end\n  \
    \  local odd_indexes_equal = function(n)\n        return lst1.map(odd_indexes)\
    \ == lst2.map(odd_indexes)\n    end\n    local even_values_equal = function(n)\n\
    \        return lst1.map(even_values) == lst2.map(even_values)\n    end\n    local\
    \ odd_values_equal = function(n)\n        return lst1.map(odd_values) == lst2.map(odd_values)\n\
    \    end\n    local even_indexes_equal_and_odd_values_equal = function(n)\n  \
    \      return even_indexes_equal(n) and odd_values_equal(n)\n    end\n    local\
    \ odd_indexes_equal_and_even_values_equal = function(n)\n        return odd_indexes_equal(n)\
    \ and even_values_equal(n)\n    end\n    local even_indexes_equal", "    local\
    \ even = function(x)\n        return x % 2 == 0\n    end\n    local odd = function(x)\n\
    \        return x % 2 == 1\n    end\n    local even_index = function(x)\n    \
    \    return x[1]\n    end\n    local odd_index = function(x)\n        return x[2]\n\
    \    end\n    local even_value = function(x)\n        return x[2]\n    end\n \
    \   local odd_value = function(x)\n        return x[1]\n    end\n    local even_index_value\
    \ = function(x)\n        return x[2]\n    end\n    local odd_index_value = function(x)\n\
    \        return x[1]\n    end\n    local even_index_odd_value = function(x)\n\
    \        return x[2]\n    end\n    local odd_index_even_value = function(x)\n\
    \        return x[1]\n    end\n    local even_odd_index = function(x)\n      \
    \  return x[2]\n    end\n    local odd_even_index = function(x)\n        return\
    \ x[1]\n    end\n    local even_odd_value = function(x)\n        return x[2]\n\
    \    end\n    local odd_even_value = function(x)\n        return x[1]\n    end\n\
    \    local even_odd_index_value = function(x)\n        return x[2]\n    end\n\
    \    local odd_even_index_value = function(x)\n        return x[1]\n    end\n\
    \    local even_odd_index_even_value = function(x)\n        return x[2]\n    end\n\
    \    local odd_even_index_odd_value = function(x)\n        return x[1]\n    end\n\
    \    local even_odd_value_value = function(x)\n        return x[2]\n    end\n\
    \    local odd_even_value_value = function(x)\n        return x[1]\n    end\n\
    \    local even_odd_index_value_value = function(x)\n        return x[2]\n   \
    \ end\n    local odd_even_index_value_value = function(x)\n        return", " \
    \ local evens = {}\n  for i = 1, #lst1, 2 do\n    if lst1[i] % 2 == 0 then\n \
    \     evens[i] = true\n    end\n  end\n  for i = 1, #lst2, 2 do\n    if lst2[i]\
    \ % 2 == 0 then\n      evens[i] = true\n    end\n  end\n  for i = 1, #lst1, 2\
    \ do\n    if not evens[i] then\n      return \"NO\"\n    end\n  end\n  return\
    \ \"YES\"\nend", "    local even = {}\n    for i = 1, #lst1, 2 do\n        if\
    \ lst1[i] % 2 == 0 then\n            even[i] = true\n        end\n    end\n  \
    \  for i = 1, #lst2, 2 do\n        if lst2[i] % 2 == 0 then\n            even[i]\
    \ = true\n        end\n    end\n    for i = 1, #lst1, 2 do\n        if not even[i]\
    \ then\n            return \"NO\"\n        end\n    end\n    return \"YES\"\n\
    end", "    local even = {}\n    for i = 1, #lst1, 2 do\n        if lst1[i] % 2\
    \ == 0 then\n            even[i] = lst2[i]\n        end\n    end\n    for i =\
    \ 1, #lst2, 2 do\n        if lst2[i] % 2 == 0 then\n            even[i] = lst1[i]\n\
    \        end\n    end\n    return #even == #lst1 and #even == #lst2 and even ==\
    \ lst1 and even == lst2\nend", "    local even = {}\n    for i = 1, #lst1, 2 do\n\
    \        if lst1[i] % 2 == 0 then\n            even[i] = lst2[i]\n        end\n\
    \    end\n    for i = 1, #lst2, 2 do\n        if lst2[i] % 2 == 0 then\n     \
    \       even[i] = lst1[i]\n        end\n    end\n    return #even == #lst1 and\
    \ #even == #lst2 and even == lst1\nend", "    local even = function(n)\n     \
    \   return n % 2 == 0\n    end\n    local odd = function(n)\n        return n\
    \ % 2 == 1\n    end\n    local even_index = function(n)\n        return n / 2\n\
    \    end\n    local odd_index = function(n)\n        return n / 2 + 1\n    end\n\
    \    local even_value = function(n)\n        return lst1[even_index(n)]\n    end\n\
    \    local odd_value = function(n)\n        return lst2[odd_index(n)]\n    end\n\
    \    local even_value_index = function(n)\n        return even_index(n)\n    end\n\
    \    local odd_value_index = function(n)\n        return odd_index(n)\n    end\n\
    \    local even_value_index_value = function(n)\n        return lst1[even_value_index(n)]\n\
    \    end\n    local odd_value_index_value = function(n)\n        return lst2[odd_value_index(n)]\n\
    \    end\n    local even_value_index_value_index = function(n)\n        return\
    \ even_value_index(n)\n    end\n    local odd_value_index_value_index = function(n)\n\
    \        return odd_value_index(n)\n    end\n    local even_value_index_value_index_value\
    \ = function(n)\n        return lst1[even_value_index_value(n)]\n    end\n   \
    \ local odd_value_index_value_index_value = function(n)\n        return lst2[odd_value_index_value(n)]\n\
    \    end\n    local even_value_index_value_index_value_index = function(n)\n \
    \       return even_value_index_value(n)\n    end\n    local odd_value_index_value_index_value_index\
    \ = function(n)\n        return odd_value_index_value(n)\n    end\n    local even_value_index_value_index_value_index_value\
    \ = function(n)\n        return lst1[even_value_index_value_index(n)]\n    end\n\
    \    ", "    local even = false\n    for i = 1, #lst1, 2 do\n        if lst1[i]\
    \ % 2 == 0 and lst2[i] % 2 == 0 then\n            even = true\n            break\n\
    \        end\n    end\n    if even then\n        return \"YES\"\n    else\n  \
    \      return \"NO\"\n    end\nend", "    local even = function(n)\n        return\
    \ n % 2 == 0\n    end\n    local odd = function(n)\n        return n % 2 == 1\n\
    \    end\n    local even_index = function(n)\n        return n / 2\n    end\n\
    \    local odd_index = function(n)\n        return n / 2 + 1\n    end\n    local\
    \ even_index_lst1 = function(n)\n        return lst1[even_index(n)]\n    end\n\
    \    local odd_index_lst1 = function(n)\n        return lst1[odd_index(n)]\n \
    \   end\n    local even_index_lst2 = function(n)\n        return lst2[even_index(n)]\n\
    \    end\n    local odd_index_lst2 = function(n)\n        return lst2[odd_index(n)]\n\
    \    end\n    local even_lst1 = function(n)\n        return lst1[even_index(n)]\n\
    \    end\n    local odd_lst1 = function(n)\n        return lst1[odd_index(n)]\n\
    \    end\n    local even_lst2 = function(n)\n        return lst2[even_index(n)]\n\
    \    end\n    local odd_lst2 = function(n)\n        return lst2[odd_index(n)]\n\
    \    end\n    local even_lst1_lst2 = function(n)\n        return lst1[even_index(n)]\
    \ < lst2[even_index(n)]\n    end\n    local odd_lst1_lst2 = function(n)\n    \
    \    return lst1[odd_index(n)] < lst2[odd_index(n)]\n    end\n    local even_lst2_lst1\
    \ = function(n)\n        return lst2[even_index(n)] < lst1[even_index(n)]\n  \
    \  end\n    local odd_lst2_lst1 = function(n)\n        return lst2[odd_index(n)]\
    \ < lst1[odd_index(n)]\n    end\n    local even_lst1_lst2_even =", "    local\
    \ even = true\n    for i = 1, #lst1 do\n        if lst1[i] % 2 == 0 then\n   \
    \         even = false\n            break\n        end\n    end\n    for i = 1,\
    \ #lst2 do\n        if lst2[i] % 2 == 0 then\n            even = false\n     \
    \       break\n        end\n    end\n    if even then\n        return \"YES\"\n\
    \    else\n        return \"NO\"\n    end\nend", "    local i, j\n    for i =\
    \ 1, #lst1, 2 do\n        for j = 1, #lst2, 2 do\n            if lst1[i] ~= lst2[j]\
    \ then\n                return \"NO\"\n            end\n        end\n    end\n\
    \    return \"YES\"\nend", "    local even = true\n    for i = 1, #lst1 do\n \
    \       if lst1[i] % 2 == 0 and lst2[i] % 2 == 0 then\n            even = false\n\
    \            break\n        end\n    end\n    if even then\n        return \"\
    YES\"\n    else\n        return \"NO\"\n    end\nend", "    local i, j\n    for\
    \ i = 1, #lst1, 2 do\n        for j = 1, #lst2, 2 do\n            if lst1[i] <\
    \ lst2[j] then\n                lst1[i + 1] = lst2[j]\n                lst2[j\
    \ + 1] = lst1[i]\n            end\n        end\n    end\n    return lst1\nend",
  "    local even = {}\n    for i = 1, #lst1, 2 do\n        if lst1[i] % 2 == 0 then\n\
    \            even[i] = lst2[i]\n        end\n    end\n    for i = 1, #lst2, 2\
    \ do\n        if lst2[i] % 2 == 0 then\n            even[i] = lst1[i]\n      \
    \  end\n    end\n    return #even == #lst1 and #even == #lst2 and even == lst1\
    \ and even == lst2\nend", "    local even = {}\n    for i = 1, #lst1, 2 do\n \
    \       if lst1[i] % 2 == 0 then\n            even[i] = true\n        end\n  \
    \  end\n    for i = 1, #lst2, 2 do\n        if lst2[i] % 2 == 0 then\n       \
    \     even[i] = true\n        end\n    end\n    for i = 1, #lst1, 2 do\n     \
    \   if not even[i] then\n            return \"NO\"\n        end\n    end\n   \
    \ return \"YES\"\nend", "    local even = {}\n    for i = 1, #lst1, 2 do\n   \
    \     if lst1[i] % 2 == 0 then\n            even[i] = true\n        end\n    end\n\
    \    for i = 1, #lst2, 2 do\n        if lst2[i] % 2 == 0 then\n            even[i]\
    \ = true\n        end\n    end\n    for i = 1, #lst1, 2 do\n        if not even[i]\
    \ then\n            return \"NO\"\n        end\n    end\n    return \"YES\"\n\
    end", "    local even = {}\n    for i = 1, #lst1, 2 do\n        if lst1[i] % 2\
    \ == 0 then\n            even[i] = true\n        end\n    end\n    for i = 1,\
    \ #lst2, 2 do\n        if lst2[i] % 2 == 0 then\n            even[i] = true\n\
    \        end\n    end\n    for i = 1, #lst1, 2 do\n        if not even[i] then\n\
    \            return \"NO\"\n        end\n    end\n    return \"YES\"\nend", " \
    \   local even = function(x)\n        return x % 2 == 0\n    end\n    local odd\
    \ = function(x)\n        return x % 2 == 1\n    end\n    local even_index = function(x)\n\
    \        return x[1]\n    end\n    local odd_index = function(x)\n        return\
    \ x[2]\n    end\n    local even_value = function(x)\n        return x[2]\n   \
    \ end\n    local odd_value = function(x)\n        return x[1]\n    end\n    local\
    \ even_table = function(x)\n        return x[2]\n    end\n    local odd_table\
    \ = function(x)\n        return x[1]\n    end\n    local even_table_index = function(x)\n\
    \        return x[3]\n    end\n    local odd_table_index = function(x)\n     \
    \   return x[4]\n    end\n    local even_table_value = function(x)\n        return\
    \ x[4]\n    end\n    local odd_table_value = function(x)\n        return x[3]\n\
    \    end\n    local even_table_value_index = function(x)\n        return x[5]\n\
    \    end\n    local odd_table_value_index = function(x)\n        return x[6]\n\
    \    end\n    local even_table_value_index_value = function(x)\n        return\
    \ x[6]\n    end\n    local odd_table_value_index_value = function(x)\n       \
    \ return x[5]\n    end\n    local even_table_value_index_value_index = function(x)\n\
    \        return x[7]\n    end\n    local odd_table_value_index_value_index = function(x)\n\
    \        return x[8]\n    end\n    local even_table_value_index_value_index_value\
    \ = function(x)\n        return x[8]\n    end\n    local odd_table_value_index_value_index_value\
    \ = function(x)\n        return x[7]\n    end\n    local even_table_value_index_value_index_value_index\
    \ = function(x)\n        return x[9]\n", "    local even = {}\n    for i = 1,\
    \ #lst1, 2 do\n        if lst1[i] % 2 == 0 then\n            even[i] = true\n\
    \        end\n    end\n    for i = 1, #lst2, 2 do\n        if lst2[i] % 2 == 0\
    \ then\n            even[i] = true\n        end\n    end\n    for i = 1, #lst1,\
    \ 2 do\n        if not even[i] then\n            return \"NO\"\n        end\n\
    \    end\n    return \"YES\"\nend", "    local even = {}\n    for i = 1, #lst1,\
    \ 2 do\n        if lst1[i] % 2 == 0 then\n            even[i] = lst1[i]\n    \
    \    end\n    end\n    for i = 1, #lst2, 2 do\n        if lst2[i] % 2 == 0 then\n\
    \            even[i] = lst2[i]\n        end\n    end\n    for i = 1, #lst1, 2\
    \ do\n        if lst1[i] % 2 == 0 and even[i] == lst1[i] then\n            return\
    \ \"YES\"\n        end\n    end\n    return \"NO\"\nend", "    local even = {}\n\
    \    for i = 1, #lst1, 2 do\n        if lst1[i] % 2 == 0 then\n            even[i]\
    \ = lst1[i]\n        end\n    end\n    for i = 1, #lst2, 2 do\n        if lst2[i]\
    \ % 2 == 0 then\n            even[i] = lst2[i]\n        end\n    end\n    for\
    \ i = 1, #lst1, 2 do\n        if lst1[i] % 2 == 0 then\n            lst1[i] =\
    \ even[i]\n        end\n    end\n    for i = 1, #lst2, 2 do\n        if lst2[i]\
    \ % 2 == 0 then\n            lst2[i] = even[i]\n        end\n    end\n    return\
    \ #lst1 == #lst2 and lst1 == even\nend", "    local even = true\n    for i = 1,\
    \ #lst1, 2 do\n        if lst1[i] % 2 == 0 and lst2[i] % 2 == 0 then\n       \
    \     even = false\n            break\n        end\n    end\n    if even then\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend", "   \
    \ local even = {}\n    for i = 1, #lst1, 2 do\n        if lst1[i] % 2 == 0 then\n\
    \            even[i] = true\n        end\n    end\n    for i = 1, #lst2, 2 do\n\
    \        if lst2[i] % 2 == 0 then\n            even[i] = true\n        end\n \
    \   end\n    for i = 1, #lst1, 2 do\n        if not even[i] then\n           \
    \ return \"NO\"\n        end\n    end\n    return \"YES\"\nend", "    local even\
    \ = true\n    for i = 1, #lst1, 2 do\n        if lst1[i] % 2 == 0 and lst2[i]\
    \ % 2 == 0 then\n            even = false\n            break\n        end\n  \
    \  end\n    if even then\n        return \"YES\"\n    else\n        return \"\
    NO\"\n    end\nend", "    local i, j\n    for i = 1, #lst1, 2 do\n        for\
    \ j = 1, #lst2, 2 do\n            if lst1[i] ~= lst2[j] then\n               \
    \ return \"NO\"\n            end\n        end\n    end\n    return \"YES\"\nend",
  "    local i, j\n    for i = 1, #lst1, 2 do\n        for j = 1, #lst2, 2 do\n  \
    \          if lst1[i] ~= lst2[j] then\n                return \"NO\"\n       \
    \     end\n        end\n    end\n    return \"YES\"\nend", "    local even = function(n)\n\
    \        return n % 2 == 0\n    end\n    local odd = function(n)\n        return\
    \ n % 2 == 1\n    end\n    local even_index = function(n)\n        return n -\
    \ 1\n    end\n    local odd_index = function(n)\n        return n\n    end\n \
    \   local even_value = function(n)\n        return lst2[even_index(n)]\n    end\n\
    \    local odd_value = function(n)\n        return lst2[odd_index(n)]\n    end\n\
    \    local even_index_value = function(n)\n        return lst1[even_index(n)]\n\
    \    end\n    local odd_index_value = function(n)\n        return lst1[odd_index(n)]\n\
    \    end\n    local even_value_value = function(n)\n        return lst1[even_index(n)]\n\
    \    end\n    local odd_value_value = function(n)\n        return lst1[odd_index(n)]\n\
    \    end\n    local even_value_index = function(n)\n        return lst2[even_index(n)]\n\
    \    end\n    local odd_value_index = function(n)\n        return lst2[odd_index(n)]\n\
    \    end\n    local even_value_index_value = function(n)\n        return lst1[even_index(n)]\n\
    \    end\n    local odd_value_index_value = function(n)\n        return lst1[odd_index(n)]\n\
    \    end\n    local even_value_index_value_value = function(n)\n        return\
    \ lst1[even_index(n)]\n    end\n    local odd_value_index_value_value = function(n)\n\
    \        return lst1[odd_index(n)]\n    end\n    local even_value_index_value_index\
    \ = function(n)\n        return lst2[even_index(n)]\n    end\n    local odd_value_index_value_index\
    \ = function(n)\n        return lst2[odd_index(n)]\n    end\n    local even_value_index_value_index_",
  "    local even = {}\n    for i = 1, #lst1, 2 do\n        if lst1[i] % 2 == 0 then\n\
    \            even[i] = true\n        end\n    end\n    for i = 1, #lst2, 2 do\n\
    \        if lst2[i] % 2 == 0 then\n            even[i] = true\n        end\n \
    \   end\n    for i = 1, #lst1, 2 do\n        if not even[i] then\n           \
    \ return \"NO\"\n        end\n    end\n    return \"YES\"\nend", "    local even\
    \ = false\n    for i = 1, #lst1, 2 do\n        if lst1[i] % 2 == 0 and lst2[i]\
    \ % 2 == 0 then\n            even = true\n            break\n        end\n   \
    \ end\n    if even then\n        return \"YES\"\n    else\n        return \"NO\"\
    \n    end\nend", "    local even = {}\n    for i = 1, #lst1, 2 do\n        if\
    \ lst1[i] % 2 == 0 then\n            even[i] = true\n        end\n    end\n  \
    \  for i = 1, #lst2, 2 do\n        if lst2[i] % 2 == 0 then\n            even[i]\
    \ = true\n        end\n    end\n    for i = 1, #lst1, 2 do\n        if not even[i]\
    \ then\n            return \"NO\"\n        end\n    end\n    return \"YES\"\n\
    end", "  local evens = {}\n  for i = 1, #lst1, 2 do\n    if lst1[i] % 2 == 0 then\n\
    \      evens[#                                                               \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                     ", "    local even = {}\n    for i = 1,\
    \ #lst1, 2 do\n        if lst1[i] % 2 == 0 then\n            even[i] = true\n\
    \        end\n    end\n    for i = 1, #lst2, 2 do\n        if lst2[i] % 2 == 0\
    \ then\n            even[i] = true\n        end\n    end\n    for i = 1, #lst1,\
    \ 2 do\n        if not even[i] then\n            return \"NO\"\n        end\n\
    \    end\n    return \"YES\"\nend", "    local even = true\n    for i = 1, #lst1,\
    \ 2 do\n        if lst1[i] % 2 == 0 and lst2[i] % 2 == 0 then\n            even\
    \ = false\n            break\n        end\n    end\n    return even and \"YES\"\
    \ or \"NO\"\nend", "  local even = true\n  for i = 1, #lst1, 2 do\n    if lst1[i]\
    \ % 2 == 0 and lst2[i] % 2 == 0 then\n      even = false\n      break\n    end\n\
    \  end\n  if even then\n    return \"YES\"\n  else\n    return \"NO\"\n  end\n\
    end", "    local even = true\n    for i = 1, #lst1, 2 do\n        if lst1[i] %\
    \ 2 == 0 and lst2[i] % 2 == 0 then\n            even = false\n            break\n\
    \        end\n    end\n    return even\nend", "    local even = function(n)\n\
    \        return n % 2 == 0\n    end\n    local odd = function(n)\n        return\
    \ n % 2 == 1\n    end\n    local even_index = function(n)\n        return n /\
    \ 2\n    end\n    local odd_index = function(n)\n        return n / 2 + 1\n  \
    \  end\n    local even_value = function(n)\n        return lst1[even_index(n)]\n\
    \    end\n    local odd_value = function(n)\n        return lst2[odd_index(n)]\n\
    \    end\n    local even_value_index = function(n)\n        return even_index(n)\n\
    \    end\n    local odd_value_index = function(n)\n        return odd_index(n)\n\
    \    end\n    local even_value_index_value = function(n)\n        return lst1[even_value_index(n)]\n\
    \    end\n    local odd_value_index_value = function(n)\n        return lst2[odd_value_index(n)]\n\
    \    end\n    local even_value_index_value_index = function(n)\n        return\
    \ even_value_index(n)\n    end\n    local odd_value_index_value_index = function(n)\n\
    \        return odd_value_index(n)\n    end\n    local even_value_index_value_index_value\
    \ = function(n)\n        return lst1[even_value_index_value(n)]\n    end\n   \
    \ local odd_value_index_value_index_value = function(n)\n        return lst2[odd_value_index_value(n)]\n\
    \    end\n    local even_value_index_value_index_value_index = function(n)\n \
    \       return even_value_index_value(n)\n    end\n    local odd_value_index_value_index_value_index\
    \ = function(n)\n        return odd_value_index_value(n)\n    end\n    local even_value_index_value_index_value_index_value\
    \ = function(n)\n        return lst1[even_value_index_value_index(n)]\n    end\n\
    \    ", "  local even = function(n)\n    return n % 2 == 0\n  end\n  local odd\
    \ = function(n)\n    return n % 2 == 1\n  end\n  local even_index = function(n)\n\
    \    return 2 * n\n  end\n  local odd_index = function(n)\n    return 2 * n +\
    \ 1\n  end\n  local even_value = function(n)\n    return lst1[even_index(n)]\n\
    \  end\n  local odd_value = function(n)\n    return lst2[odd_index(n)]\n  end\n\
    \  local even_value_index = function(n)\n    return even_index(n)\n  end\n  local\
    \ odd_value_index = function(n)\n    return odd_index(n)\n  end\n  local even_value_index_value\
    \ = function(n)\n    return lst1[even_value_index(n)]\n  end\n  local odd_value_index_value\
    \ = function(n)\n    return lst2[odd_value_index(n)]\n  end\n  local even_value_index_value_value\
    \ = function(n)\n    return lst1[even_value_index(n)]\n  end\n  local odd_value_index_value_value\
    \ = function(n)\n    return lst2[odd_value_index(n)]\n  end\n  local even_value_index_value_value_value\
    \ = function(n)\n    return lst1[even_value_index(n)]\n  end\n  local odd_value_index_value_value_value\
    \ = function(n)\n    return lst2[odd_value_index(n)]\n  end\n  local even_value_index_value_value_value_value\
    \ = function(n)\n    return lst1[even_value_index(n)]\n  end\n  local odd_value_index_value_value_value_value\
    \ = function(n)\n    return lst2[odd_value_index(n)]\n  end\n  local even_value_index_value_value_value_value_value\
    \ = function(n)\n    return lst1[even_value_index(n)]\n", "    local even = function(n)\n\
    \        return n % 2 == 0\n    end\n    local odd = function(n)\n        return\
    \ n % 2 == 1\n    end\n    local even_index = 0\n    local odd_index = 0\n   \
    \ local even_count = 0\n    local odd_count = 0\n    for i = 1, #lst1, 1 do\n\
    \        if even(lst1[i]) then\n            even_count = even_count + 1\n    \
    \        even_index = i\n        else\n            odd_count = odd_count + 1\n\
    \            odd_index = i\n        end\n    end\n    for i = 1, #lst2, 1 do\n\
    \        if even(lst2[i]) then\n            even_count = even_count - 1\n    \
    \        even_index = i\n        else\n            odd_count = odd_count - 1\n\
    \            odd_index = i\n        end\n    end\n    if even_count < 0 or odd_count\
    \ < 0 then\n        return \"NO\"\n    end\n    if even_count == 0 or odd_count\
    \ == 0 then\n        return \"YES\"\n    end\n    if even_count > 0 and odd_count\
    \ > 0 then\n        return \"NO\"\n    end\n    if even_count > 0 then\n     \
    \   lst1[even_index] = lst2[odd_index]\n        lst2[odd_index] = lst1[even_index]\n\
    \    end\n    return \"YES\"\nend", "    local even = {}\n    for i = 1, #lst1,\
    \ 2 do\n        if lst1[i] % 2 == 0 then\n            even[i] = true\n       \
    \ end\n    end\n    for i = 1, #lst2, 2 do\n        if lst2[i] % 2 == 0 then\n\
    \            even[i] = true\n        end\n    end\n    for i = 1, #lst1, 2 do\n\
    \        if not even[i] then\n            return \"NO\"\n        end\n    end\n\
    \    return \"YES\"\nend", "    local even = function(x)\n        return x % 2\
    \ == 0\n    end\n    local odd = function(x)\n        return x % 2 == 1\n    end\n\
    \    local even_index = function(x)\n        return x / 2\n    end\n    local\
    \ odd_index = function(x)\n        return x / 2 + 1\n    end\n    local even_index_of_odd\
    \ = function(x)\n        return x - 1\n    end\n    local odd_index_of_even =\
    \ function(x)\n        return x + 1\n    end\n    local even_index_of_odd_index\
    \ = function(x)\n        return x - 2\n    end\n    local odd_index_of_even_index\
    \ = function(x)\n        return x + 2\n    end\n    local even_index_of_odd_index\
    \ = function(x)\n        return x - 3\n    end\n    local odd_index_of_even_index\
    \ = function(x)\n        return x + 3\n    end\n    local even_index_of_odd_index\
    \ = function(x)\n        return x - 4\n    end\n    local odd_index_of_even_index\
    \ = function(x)\n        return x + 4\n    end\n    local even_index_of_odd_index\
    \ = function(x)\n        return x - 5\n    end\n    local odd_index_of_even_index\
    \ = function(x)\n        return x + 5\n    end\n    local even_index_of_odd_index\
    \ = function(x)\n        return x - 6\n    end\n    local odd_index_of_even_index\
    \ = function(x)\n        return x + 6\n    end\n    local even_index_of_odd_index\
    \ = function(x)\n        return x - 7\n    end\n    local odd_index_of_even_index\
    \ = function(x)\n        return x + 7\n    end\n    local even_index_of_odd_index\
    \ = function(x)\n        return x - 8\n    end\n    local odd_index_of_even_index\
    \ = function(x)\n        return x + 8\n    end\n    local even_index_of_odd_index\
    \ = function(x)\n        ", "    local even = true\n    for i = 1, #lst1, 2 do\n\
    \        if lst1[i] % 2 == 0 and lst2[i] % 2 == 0 then\n            even = false\n\
    \            break\n        end\n    end\n    return even\nend", "    local even\
    \ = false\n    for i = 1, #lst1 do\n        if lst1[i] % 2 == 0 then\n       \
    \     even = true\n            break\n        end\n    end\n    for i = 1, #lst2\
    \ do\n        if lst2[i] % 2 == 0 then\n            even = true\n            break\n\
    \        end\n    end\n    if even then\n        return \"YES\"\n    else\n  \
    \      return \"NO\"\n    end\nend", "    local i, j\n    for i = 1, #lst1, 2\
    \ do\n        for j = 1, #lst2, 2 do\n            if lst1[i] ~= lst2[j] then\n\
    \                return \"NO\"\n            end\n        end\n    end\n    return\
    \ \"YES\"\nend", "    local even = function(n)\n        return n % 2 == 0\n  \
    \  end\n    local odd = function(n)\n        return n % 2 == 1\n    end\n    local\
    \ even_index = function(n)\n        return n / 2\n    end\n    local odd_index\
    \ = function(n)\n        return n / 2 + 1\n    end\n    local even_value = function(n)\n\
    \        return lst1[even_index(n)]\n    end\n    local odd_value = function(n)\n\
    \        return lst2[odd_index(n)]\n    end\n    local even_index_value = function(n)\n\
    \        return lst1[even_index(n)]\n    end\n    local odd_index_value = function(n)\n\
    \        return lst2[odd_index(n)]\n    end\n    local even_value_value = function(n)\n\
    \        return lst1[even_index(n)]\n    end\n    local odd_value_value = function(n)\n\
    \        return lst2[odd_index(n)]\n    end\n    local even_index_value_value\
    \ = function(n)\n        return lst1[even_index(n)]\n    end\n    local odd_index_value_value\
    \ = function(n)\n        return lst2[odd_index(n)]\n    end\n    local even_value_value_value\
    \ = function(n)\n        return lst1[even_index(n)]\n    end\n    local odd_value_value_value\
    \ = function(n)\n        return lst2[odd_index(n)]\n    end\n    local even_index_value_value_value\
    \ = function(n)\n        return lst1[even_index(n)]\n    end\n    local odd_index_value_value_value\
    \ = function(n)\n        return lst2[odd_index(n)]\n    end\n    local even_value_value_value_value\
    \ = function(n)\n        return lst1[even_index(n)]\n    end\n    local odd_value_value_value_value\
    \ = function(n)\n        return lst2[odd_index(n)]\n    end\n    local even_",
  "    local i, j\n    for i = 1, #lst1, 2 do\n        for j = 1, #lst2, 2 do\n  \
    \          if lst1[i] ~= lst2[j] then\n                return \"NO\"\n       \
    \     end\n        end\n    end\n    return \"YES\"\nend", "    local even = true\n\
    \    for i = 1, #lst1 do\n        if lst1[i] % 2 == 0 then\n            even =\
    \ false\n            break\n        end\n    end\n    for i = 1, #lst2 do\n  \
    \      if lst2[i] % 2 == 0 then\n            even = false\n            break\n\
    \        end\n    end\n    if even then\n        return \"YES\"\n    else\n  \
    \      return \"NO\"\n    end\nend", "    local even = {}\n    for i = 1, #lst1,\
    \ 2 do\n        if lst1[i] % 2 == 0 then\n            even[i] = lst2[i]\n    \
    \    end\n    end\n    for i = 1, #lst2, 2 do\n        if lst2[i] % 2 == 0 then\n\
    \            even[i] = lst1[i]\n        end\n    end\n    return even\nend", " \
    \   local even = {}\n    for i = 1, #lst1, 2 do\n        if lst1[i] % 2 == 0 then\n\
    \            even[i] = true\n        end\n    end\n    for i = 1, #lst2, 2 do\n\
    \        if lst2[i] % 2 == 0 then\n            even[i] = true\n        end\n \
    \   end\n    for i = 1, #lst1, 2 do\n        if not even[i] then\n           \
    \ return \"NO\"\n        end\n    end\n    return \"YES\"\nend", "    local even\
    \ = true\n    for i = 1, #lst1 do\n        if lst1[i] % 2 == 0 and lst2[i] % 2\
    \ == 1 then\n            even = false\n            break\n        end\n    end\n\
    \    return even\nend", "    local even = function(x)\n        return x % 2 ==\
    \ 0\n    end\n    local odd = function(x)\n        return x % 2 == 1\n    end\n\
    \    local even_index = function(x)\n        return x[1]\n    end\n    local odd_index\
    \ = function(x)\n        return x[2]\n    end\n    local even_value = function(x)\n\
    \        return x[2]\n    end\n    local odd_value = function(x)\n        return\
    \ x[1]\n    end\n    local even_index_value = function(x)\n        return x[2]\n\
    \    end\n    local odd_index_value = function(x)\n        return x[1]\n    end\n\
    \    local even_index_odd_value = function(x)\n        return x[2]\n    end\n\
    \    local odd_index_even_value = function(x)\n        return x[1]\n    end\n\
    \    local even_odd_index = function(x)\n        return x[2]\n    end\n    local\
    \ odd_even_index = function(x)\n        return x[1]\n    end\n    local even_odd_value\
    \ = function(x)\n        return x[2]\n    end\n    local odd_even_value = function(x)\n\
    \        return x[1]\n    end\n    local even_odd_index_value = function(x)\n\
    \        return x[2]\n    end\n    local odd_even_index_value = function(x)\n\
    \        return x[1]\n    end\n    local even_odd_index_odd_value = function(x)\n\
    \        return x[2]\n    end\n    local odd_even_index_odd_value = function(x)\n\
    \        return x[1]\n    end\n    local even_odd_index_even_value = function(x)\n\
    \        return x[2]\n    end\n    local odd_even_index_even_value = function(x)\n\
    \        return x[1]\n    end\n    local even_odd_value_value = function(x)\n\
    \        return x[2]\n    end\n    local odd_even_value_value = function(x)\n\
    \        return", "    local even = {}\n    for i = 1, #lst1, 2 do\n        if\
    \ lst1[i] % 2 == 0 then\n            even[i] = true\n        end\n    end\n  \
    \  for i = 1, #lst2, 2 do\n        if lst2[i] % 2 == 0 then\n            even[i]\
    \ = true\n        end\n    end\n    for i = 1, #lst1, 2 do\n        if not even[i]\
    \ then\n            return \"NO\"\n        end\n    end\n    return \"YES\"\n\
    end", "    local even = function(n)\n        return n % 2 == 0\n    end\n    local\
    \ odd = function(n)\n        return n % 2 == 1\n    end\n    local even_index\
    \ = function(n)\n        return n / 2\n    end\n    local odd_index = function(n)\n\
    \        return n / 2 + 1\n    end\n    local even_value = function(n)\n     \
    \   return lst1[even_index(n)]\n    end\n    local odd_value = function(n)\n \
    \       return lst2[odd_index(n)]\n    end\n    local even_value = function(n)\n\
    \        return lst2[even_index(n)]\n    end\n    local odd_value = function(n)\n\
    \        return lst1[odd_index(n)]\n    end\n    local even_value = function(n)\n\
    \        return lst1[even_index(n)]\n    end\n    local odd_value = function(n)\n\
    \        return lst2[odd_index(n)]\n    end\n    local even_value = function(n)\n\
    \        return lst2[even_index(n)]\n    end\n    local odd_value = function(n)\n\
    \        return lst1[odd_index(n)]\n    end\n    local even_value = function(n)\n\
    \        return lst1[even_index(n)]\n    end\n    local odd_value = function(n)\n\
    \        return lst2[odd_index(n)]\n    end\n    local even_value = function(n)\n\
    \        return lst2[even_index(n)]\n    end\n    local odd_value = function(n)\n\
    \        return lst1[odd_index(n)]\n    end\n    local even_value = function(n)\n\
    \        return lst1[even_index(n)]\n    end\n    local odd_value = function(n)\n\
    \        return lst2[odd_index(n)]\n    end\n    local even_value = function(n)\n\
    \        return lst2[even_index(n)]\n    end\n    local odd_value = function(n)\n\
    \        return lst1[odd_index(n)]\n    ", "    local even = {}\n    for i = 1,\
    \ #lst1, 2 do\n        if lst1[i] % 2 == 0 then\n            even[i] = true\n\
    \        end\n    end\n    for i = 1, #lst2, 2 do\n        if lst2[i] % 2 == 0\
    \ then\n            even[i] = true\n        end\n    end\n    for i = 1, #lst1,\
    \ 2 do\n        if not even[i] then\n            return \"NO\"\n        end\n\
    \    end\n    return \"YES\"\nend", "  local even = {}\n  for i = 1, #lst1, 2\
    \ do\n    if lst1[i] % 2 == 0 then\n      even[i] = true\n    end\n  end\n  for\
    \ i = 1, #lst2, 2 do\n    if lst2[i] % 2 == 0 then\n      even[i] = true\n   \
    \ end\n  end\n  for i = 1, #lst1, 2 do\n    if not even[i] then\n      return\
    \ \"NO\"\n    end\n  end\n  return \"YES\"\nend", "    local even = true\n   \
    \ for i = 1, #lst1, 2 do\n        if lst1[i] % 2 == 0 and lst2[i] % 2 == 1 then\n\
    \            even = false\n            break\n        end\n    end\n    if even\
    \ then\n        return \"YES\"\n    end\n    return \"NO\"\nend", "    local even\
    \ = {}\n    for i = 1, #lst1, 2 do\n        if lst1[i] % 2 == 0 then\n       \
    \     even[i] = true\n        end\n    end\n    for i = 1, #lst2, 2 do\n     \
    \   if lst2[i] % 2 == 0 then\n            even[i] = true\n        end\n    end\n\
    \    for i = 1, #lst1, 2 do\n        if not even[i] then\n            return \"\
    NO\"\n        end\n    end\n    return \"YES\"\nend", "    local even = {}\n \
    \   for i = 1, #lst1, 2 do\n        if lst1[i] % 2 == 0 then\n            even[i]\
    \ = lst1[i]\n        end\n    end\n    for i = 1, #lst2, 2 do\n        if lst2[i]\
    \ % 2 == 0 then\n            even[i] = lst2[i]\n        end\n    end\n    for\
    \ i = 1, #lst1, 2 do\n        if even[i] ~= lst1[i] then\n            return \"\
    NO\"\n        end\n    end\n    return \"YES\"\nend", "    local even = {}\n \
    \   for i = 1, #lst1, 2 do\n        if lst1[i] % 2 == 0 then\n            even[i]\
    \ = lst2[i]\n        end\n    end\n    for i = 1, #lst2, 2 do\n        if lst2[i]\
    \ % 2 == 0 then\n            even[i] = lst1[i]\n        end\n    end\n    return\
    \ #even == #lst1 and #even == #lst2 and even == lst1 and even == lst2\nend", " \
    \   local even = {}\n    for i = 1, #lst1, 2 do\n        if lst1[i] % 2 == 0 then\n\
    \            even[i] = true\n        end\n    end\n    for i = 1, #lst2, 2 do\n\
    \        if lst2[i] % 2 == 0 then\n            even[i] = true\n        end\n \
    \   end\n    for i = 1, #lst1, 2 do\n        if not even[i] then\n           \
    \ return \"NO\"\n        end\n    end\n    return \"YES\"\nend", "    local even\
    \ = true\n    for i = 1, #lst1 do\n        if lst1[i] % 2 == 0 then\n        \
    \    even = false\n            break\n        end\n    end\n    for i = 1, #lst2\
    \ do\n        if lst2[i] % 2 == 0 then\n            even = false\n           \
    \ break\n        end\n    end\n    if even then\n        return \"YES\"\n    else\n\
    \        return \"NO\"\n    end\nend", "    local even = {}\n    for i = 1, #lst1,\
    \ 2 do\n        if lst1[i] % 2 == 0 then\n            even[i] = lst2[i]\n    \
    \    end\n    end\n    for i = 1, #lst2, 2 do\n        if lst2[i] % 2 == 0 then\n\
    \            even[i] = lst1[i]\n        end\n    end\n    return #even == #lst1\
    \ and #even == #lst2 and even == lst1 and even == lst2\nend", "    local even\
    \ = true\n    for i = 1, #lst1 do\n        if lst1[i] % 2 == 0 then\n        \
    \    even = false\n            break\n        end\n    end\n    for i = 1, #lst2\
    \ do\n        if lst2[i] % 2 == 0 then\n            even = false\n           \
    \ break\n        end\n    end\n    if even then\n        return \"YES\"\n    else\n\
    \        return \"NO\"\n    end\nend", "    local even = {}\n    for i = 1, #lst1,\
    \ 2 do\n        if lst1[i] % 2 == 0 then\n            even[i] = lst2[i]\n    \
    \    end\n    end\n    for i = 1, #lst2, 2 do\n        if lst2[i] % 2 == 0 then\n\
    \            even[i] = lst1[i]\n        end\n    end\n    return even\nend", " \
    \   local even = true\n    for i = 1, #lst1, 2 do\n        if lst1[i] % 2 == 0\
    \ and lst2[i] % 2 == 0 then\n            even = false\n            break\n   \
    \     end\n    end\n    if even then\n        return \"YES\"\n    else\n     \
    \   return \"NO\"\n    end\nend", "    local even = {}\n    for i = 1, #lst1,\
    \ 2 do\n        if lst1[i] % 2 == 0 then\n            even[i] = true\n       \
    \ end\n    end\n    for i = 1, #lst2, 2 do\n        if lst2[i] % 2 == 0 then\n\
    \            even[i] = true\n        end\n    end\n    for i = 1, #lst1, 2 do\n\
    \        if not even[i] then\n            return \"NO\"\n        end\n    end\n\
    \    return \"YES\"\nend", "    local even = {}\n    for i = 1, #lst1, 2 do\n\
    \        if lst1[i] % 2 == 0 then\n            even[i] = true\n        end\n \
    \   end\n    for i = 1, #lst2, 2 do\n        if lst2[i] % 2 == 0 then\n      \
    \      even[i] = true\n        end\n    end\n    for i = 1, #lst1, 2 do\n    \
    \    if not even[i] then\n            return \"NO\"\n        end\n    end\n  \
    \  return \"YES\"\nend", "    local even = {}\n    for i = 1, #lst1, 2 do\n  \
    \      if lst1[i] % 2 == 0 then\n            even[i] = true\n        end\n   \
    \ end\n    for i = 1, #lst2, 2 do\n        if lst2[i] % 2 == 0 then\n        \
    \    even[i] = true\n        end\n    end\n    for i = 1, #lst1, 2 do\n      \
    \  if not even[i] then\n            return \"NO\"\n        end\n    end\n    return\
    \ \"YES\"\nend", "  local evens = {}\n  for i = 1, #lst1, 2 do\n    if lst1[i]\
    \ % 2 == 0 then\n      evens[i] = lst1[i]\n    end\n  end\n  for i = 1, #lst2,\
    \ 2 do\n    if lst2[i] % 2 == 0 then\n      evens[i] = lst2[i]\n    end\n  end\n\
    \  return #evens > 0 and #evens == #lst1 and #evens == #lst2\nend", "    local\
    \ even = true\n    for i = 1, #lst1 do\n        if lst1[i] % 2 == 0 then\n   \
    \         even = false\n            break\n        end\n    end\n    for i = 1,\
    \ #lst2 do\n        if lst2[i] % 2 == 0 then\n            even = false\n     \
    \       break\n        end\n    end\n    if even then\n        return \"YES\"\n\
    \    else\n        return \"NO\"\n    end\nend", "    local even = function(n)\n\
    \        return n % 2 == 0\n    end\n    local odd = function(n)\n        return\
    \ n % 2 == 1\n    end\n    local even_index = function(n)\n        return n -\
    \ 1\n    end\n    local odd_index = function(n)\n        return n\n    end\n \
    \   local even_value = function(n)\n        return lst1[even_index(n)]\n    end\n\
    \    local odd_value = function(n)\n        return lst2[odd_index(n)]\n    end\n\
    \    local even_value_index = function(n)\n        return even_index(n)\n    end\n\
    \    local odd_value_index = function(n)\n        return odd_index(n)\n    end\n\
    \    local even_value_value = function(n)\n        return lst1[even_value_index(n)]\n\
    \    end\n    local odd_value_value = function(n)\n        return lst2[odd_value_index(n)]\n\
    \    end\n    local even_value_value_index = function(n)\n        return even_value_index(n)\n\
    \    end\n    local odd_value_value_index = function(n)\n        return odd_value_index(n)\n\
    \    end\n    local even_value_value_value = function(n)\n        return lst1[even_value_value_index(n)]\n\
    \    end\n    local odd_value_value_value = function(n)\n        return lst2[odd_value_value_index(n)]\n\
    \    end\n    local even_value_value_value_index = function(n)\n        return\
    \ even_value_value_index(n)\n    end\n    local odd_value_value_value_index =\
    \ function(n)\n        return odd_value_value_index(n)\n    end\n    local even_value_value_value_value\
    \ = function(n)\n        return lst1[even_value_value_value_index(n)]\n    end\n\
    \    local odd_value_value_value_value = function(n)\n        return lst2[odd_value_value_value_index(n)]",
  "    local even = {}\n    for i = 1, #lst1, 2 do\n        if lst1[i] % 2 == 0 then\n\
    \            even[i] = lst1[i]\n        end\n    end\n    for i = 1, #lst2, 2\
    \ do\n        if lst2[i] % 2 == 0 then\n            even[i] = lst2[i]\n      \
    \  end\n    end\n    for i = 1, #lst1, 2 do\n        if even[i] ~= lst1[i] then\n\
    \            return \"NO\"\n        end\n    end\n    return \"YES\"\nend", " \
    \   local even = {}\n    for i = 1, #lst1, 2 do\n        if lst1[i] % 2 == 0 then\n\
    \            even[i] = lst2[i]\n        end\n    end\n    for i = 1, #lst2, 2\
    \ do\n        if lst2[i] % 2 == 0 then\n            even[i] = lst1[i]\n      \
    \  end\n    end\n    for i = 1, #lst1, 2 do\n        if lst1[i] % 2 == 0 then\n\
    \            lst1[i] = even[i]\n        end\n    end\n    for i = 1, #lst2, 2\
    \ do\n        if lst2[i] % 2 == 0 then\n            lst2[i] = even[i]\n      \
    \  end\n    end\n    return lst1 == lst2\nend", "    local even = {}\n    for\
    \ i = 1, #lst1, 2 do\n        if lst1[i] % 2 == 0 then\n            even[i] =\
    \ true\n        end\n    end\n    for i = 1, #lst2, 2 do\n        if lst2[i] %\
    \ 2 == 0 then\n            even[i] = true\n        end\n    end\n    for i = 1,\
    \ #lst1, 2 do\n        if not even[i] then\n            return \"NO\"\n      \
    \  end\n    end\n    return \"YES\"\nend", "    local even = function(x)\n   \
    \     return x % 2 == 0\n    end\n    local odd = function(x)\n        return\
    \ x % 2 == 1\n    end\n    local even_index = 0\n    local odd_index = 0\n   \
    \ local even_count = 0\n    local odd_count = 0\n    for i = 1, #lst1, 2 do\n\
    \        if even(lst1[i]) then\n            even_count = even_count + 1\n    \
    \        even_index = i\n        else\n            odd_count = odd_count + 1\n\
    \            odd_index = i\n        end\n    end\n    for i = 1, #lst2, 2 do\n\
    \        if even(lst2[i]) then\n            even_count = even_count - 1\n    \
    \        even_index = i\n        else\n            odd_count = odd_count - 1\n\
    \            odd_index = i\n        end\n    end\n    if even_count < 0 or odd_count\
    \ < 0 then\n        return \"NO\"\n    end\n    if even_count == 0 or odd_count\
    \ == 0 then\n        return \"YES\"\n    end\n    if even_count > 0 and odd_count\
    \ > 0 then\n        return \"NO\"\n    end\n    if even_count > 0 then\n     \
    \   lst2[even_index] = lst1[odd_index]\n        lst1[odd_index] = lst2[even_index]\n\
    \        return \"YES\"\n    end\n    return \"NO\"\nend", "    local even = {}\n\
    \    for i = 1, #lst1, 2 do\n        if lst1[i] % 2 == 0 then\n            even[i]\
    \ = true\n        end\n    end\n    for i = 1, #lst2, 2 do\n        if lst2[i]\
    \ % 2 == 0 then\n            even[i] = true\n        end\n    end\n    for i =\
    \ 1, #lst1, 2 do\n        if not even[i] then\n            return \"NO\"\n   \
    \     end\n    end\n    return \"YES\"\nend", "    local even = function(x)\n\
    \        return x % 2 == 0\n    end\n    local odd = function(x)\n        return\
    \ x % 2 == 1\n    end\n    local even_index = function(x)\n        return x /\
    \ 2\n    end\n    local odd_index = function(x)\n        return x / 2 + 1\n  \
    \  end\n    local even_value = function(x)\n        return lst1[even_index(x)]\n\
    \    end\n    local odd_value = function(x)\n        return lst2[odd_index(x)]\n\
    \    end\n    local even_value_index = function(x)\n        return lst1[even_index(x)]\n\
    \    end\n    local odd_value_index = function(x)\n        return lst2[odd_index(x)]\n\
    \    end\n    local even_value_index_value = function(x)\n        return lst1[even_index(x)]\n\
    \    end\n    local odd_value_index_value = function(x)\n        return lst2[odd_index(x)]\n\
    \    end\n    local even_value_index_value_index = function(x)\n        return\
    \ lst1[even_index(x)]\n    end\n    local odd_value_index_value_index = function(x)\n\
    \        return lst2[odd_index(x)]\n    end\n    local even_value_index_value_index_value\
    \ = function(x)\n        return lst1[even_index(x)]\n    end\n    local odd_value_index_value_index_value\
    \ = function(x)\n        return lst2[odd_index(x)]\n    end\n    local even_value_index_value_index_value_index\
    \ = function(x)\n        return lst1[even_index(x)]\n    end\n    local odd_value_index_value_index_value_index\
    \ = function(x)\n        return lst2[odd_index(x)]\n    end\n    local even_value_index_value_index_value_index_value\
    \ = function(x)\n        return lst1[even_index(x)]\n    end\n    local odd_value_index",
  "    local even = {}\n    for i = 1, #lst1, 2 do\n        if lst1[i] % 2 == 0 then\n\
    \            even[i] = true\n        end\n    end\n    for i = 1, #lst2, 2 do\n\
    \        if lst2[i] % 2 == 0 then\n            even[i] = true\n        end\n \
    \   end\n    for i = 1, #lst1, 2 do\n        if not even[i] then\n           \
    \ return \"NO\"\n        end\n    end\n    return \"YES\"\nend", "    local even\
    \ = false\n    for i = 1, #lst1, 2 do\n        if lst1[i] % 2 == 0 and lst2[i]\
    \ % 2 == 0 then\n            even = true\n            break\n        end\n   \
    \ end\n    if even then\n        return \"YES\"\n    end\n    return \"NO\"\n\
    end", "    local even = {}\n    for i = 1, #lst1, 2 do\n        if lst1[i] % 2\
    \ == 0 then\n            even[i] = lst2[i]\n        end\n    end\n    for i =\
    \ 1, #lst2, 2 do\n        if lst2[i] % 2 == 0 then\n            even[i] = lst1[i]\n\
    \        end\n    end\n    for i = 1, #lst1, 2 do\n        if lst1[i] % 2 == 0\
    \ then\n            lst1[i] = even[i]\n        end\n    end\n    for i = 1, #lst2,\
    \ 2 do\n        if lst2[i] % 2 == 0 then\n            lst2[i] = even[i]\n    \
    \    end\n    end\n    return #lst1 == #lst2 and lst1 == even\nend", "  local\
    \ even = {}\n  for i = 1, #lst1, 2 do\n    if lst1[i] % 2 == 0 then\n      even[i]\
    \ = lst1[i]\n    end\n  end\n  for i = 1, #lst2, 2 do\n    if lst2[i] % 2 == 0\
    \ then\n      even[i] = lst2[i]\n    end\n  end\n  for i = 1, #lst1, 2 do\n  \
    \  if lst1[i] % 2 == 0 then\n      lst1[i] = even[i]\n    end\n  end\n  for i\
    \ = 1, #lst2, 2 do\n    if lst2[i] % 2 == 0 then\n      lst2[i] = even[i]\n  \
    \  end\n  end\n  return #lst1 == #lst2 and lst1 == even\nend", "    local even\
    \ = {}\n    for i = 1, #lst1, 2 do\n        if lst1[i] % 2 == 0 then\n       \
    \     even[i] = true\n        end\n    end\n    for i = 1, #lst2, 2 do\n     \
    \   if lst2[i] % 2 == 0 then\n            even[i] = true\n        end\n    end\n\
    \    for i = 1, #lst1, 2 do\n        if not even[i] then\n            return \"\
    NO\"\n        end\n    end\n    return \"YES\"\nend", "    local even = {}\n \
    \   for i = 1, #lst1, 2 do\n        if lst1[i] % 2 == 0 then\n            even[i]\
    \ = true\n        end\n    end\n    for i = 1, #lst2, 2 do\n        if lst2[i]\
    \ % 2 == 0 then\n            even[i] = true\n        end\n    end\n    for i =\
    \ 1, #lst1, 2 do\n        if not even[i] then\n            return \"NO\"\n   \
    \     end\n    end\n    return \"YES\"\nend", "    local even = function(x)\n\
    \        return x % 2 == 0\n    end\n    local odd = function(x)\n        return\
    \ x % 2 == 1\n    end\n    local even_index = 0\n    local odd_index = 0\n   \
    \ local even_count = 0\n    local odd_count = 0\n    for i = 1, #lst1 do\n   \
    \     if even(lst1[i]) then\n            even_index = i\n            even_count\
    \ = even_count + 1\n        else\n            odd_index = i\n            odd_count\
    \ = odd_count + 1\n        end\n    end\n    for i = 1, #lst2 do\n        if even(lst2[i])\
    \ then\n            even_index = i\n            even_count = even_count + 1\n\
    \        else\n            odd_index = i\n            odd_count = odd_count +\
    \ 1\n        end\n    end\n    if even_count > odd_count then\n        return\
    \ \"YES\"\n    elseif even_count < odd_count then\n        return \"NO\"\n   \
    \ else\n        local even_index_2 = even_index\n        local odd_index_2 = odd_index\n\
    \        for i = 1, #lst1 do\n            if even(lst1[i]) then\n            \
    \    even_index_2 = i\n                even_count = even_count + 1\n         \
    \   else\n                odd_index_2 = i\n                odd_count = odd_count\
    \ + 1\n            end\n        end\n        for i = 1, #lst2 do\n           \
    \ if even(lst2[i]) then\n                even_index_2 = i\n                even_count\
    \ = even_count + 1\n            else\n                odd_index_2 = i\n      \
    \          odd_count = odd_count + 1\n            end\n        end\n        if\
    \ even_count > odd_count then\n            return \"YES\"\n        elseif even_count\
    \ < odd_count then\n            return \"NO\"\n        else\n            return\
    \ \"YES\"\n        end\n    end\nend", "    local even = function(n)\n       \
    \ return n % 2 == 0\n    end\n    local odd = function(n)\n        return n %\
    \ 2 == 1\n    end\n    local even_index = function(n)\n        return n / 2\n\
    \    end\n    local odd_index = function(n)\n        return n / 2 + 1\n    end\n\
    \    local even_value = function(n)\n        return lst1[even_index(n)]\n    end\n\
    \    local odd_value = function(n)\n        return lst2[odd_index(n)]\n    end\n\
    \    local even_indexes = function(n)\n        return lst1.map(even_index)\n \
    \   end\n    local odd_indexes = function(n)\n        return lst2.map(odd_index)\n\
    \    end\n    local even_values = function(n)\n        return lst1.map(even_value)\n\
    \    end\n    local odd_values = function(n)\n        return lst2.map(odd_value)\n\
    \    end\n    local even_indexes_set = function(n)\n        return set.union(even_indexes(n),\
    \ even_indexes(n))\n    end\n    local odd_indexes_set = function(n)\n       \
    \ return set.union(odd_indexes(n), odd_indexes(n))\n    end\n    local even_values_set\
    \ = function(n)\n        return set.union(even_values(n), even_values(n))\n  \
    \  end\n    local odd_values_set = function(n)\n        return set.union(odd_values(n),\
    \ odd_values(n))\n    end\n    local even_indexes_set_intersection = function(n)\n\
    \        return set.intersection(even_indexes_set(n), odd_indexes_set(n))\n  \
    \  end\n    local odd_indexes_set_intersection = function(n)\n        return set.intersection(odd_indexes_set(n),\
    \ even_indexes_set(n))\n    end\n    local even_values_set_intersection = function(n)\n\
    \        return set.intersection(even_values_set", "    local i, j\n    for i\
    \ = 1, #lst1, 2 do\n        for j = 1, #lst2, 2 do\n            if lst1[i] ~=\
    \ lst2[j] then\n                return \"NO\"\n            end\n        end\n\
    \    end\n    return \"YES\"\nend", "    local even = {}\n    for i = 1, #lst1,\
    \ 2 do\n        if lst1[i] % 2 == 0 then\n            even[i] = true\n       \
    \ end\n    end\n    for i = 1, #lst2, 2 do\n        if lst2[i] % 2 == 0 then\n\
    \            even[i] = true\n        end\n    end\n    for i = 1, #lst1, 2 do\n\
    \        if not even[i] then\n            return \"NO\"\n        end\n    end\n\
    \    return \"YES\"\nend", "    local even = true\n    for i = 1, #lst1, 2 do\n\
    \        if lst1[i] % 2 == 0 and lst2[i] % 2 == 0 then\n            even = false\n\
    \            break\n        end\n    end\n    return even\nend", "  local even\
    \ = function(n)\n    return n % 2 == 0\n  end\n  for i = 1, #lst1 do\n    for\
    \ j = 1, #lst2 do\n      if even(lst1[i]) and even(lst2[j]) then\n        return\
    \ \"YES\"\n      end\n    end\n  end\n  return \"NO\"\nend", "    local even =\
    \ {}\n    for i = 1, #lst1, 2 do\n        if lst1[i] % 2 == 0 then\n         \
    \   even[i] = true\n        end\n    end\n    for i = 1, #lst2, 2 do\n       \
    \ if lst2[i] % 2 == 0 then\n            even[i] = true\n        end\n    end\n\
    \    for i = 1, #lst1, 2 do\n        if not even[i] then\n            return \"\
    NO\"\n        end\n    end\n    return \"YES\"\nend", "  local even = {}\n  for\
    \ i = 1, #lst1, 2 do\n    if lst1[i] % 2 == 0 then\n      even[i] = true\n   \
    \ end\n  end\n  for i = 1, #lst2, 2 do\n    if lst2[i] % 2 == 0 then\n      even[i]\
    \ = true\n    end\n  end\n  for i = 1, #lst1, 2 do\n    if not even[i] then\n\
    \      return \"NO\"\n    end\n  end\n  return \"YES\"\nend", "    local even\
    \ = true\n    for i = 1, #lst1 do\n        if lst1[i] % 2 == 0 then\n        \
    \    even = false\n            break\n        end\n    end\n    for i = 1, #lst2\
    \ do\n        if lst2[i] % 2 == 0 then\n            even = false\n           \
    \ break\n        end\n    end\n    if even then\n        return \"YES\"\n    else\n\
    \        return \"NO\"\n    end\nend", "    local even = false\n    for i = 1,\
    \ #lst1, 2 do\n        if lst1[i] % 2 == 0 and lst2[i] % 2 == 0 then\n       \
    \     even = true\n            break\n        end\n    end\n    return even and\
    \ \"YES\" or \"NO\"\nend", "    local even = false\n    for i = 1, #lst1, 2 do\n\
    \        if lst1[i] % 2 == 0 and lst2[i] % 2 == 0 then\n            even = true\n\
    \            break\n        end\n    end\n    return even\nend", "    local even\
    \ = {}\n    for i = 1, #lst1, 2 do\n        if lst1[i] % 2 == 0 then\n       \
    \     even[i] = true\n        end\n    end\n    for i = 1, #lst2, 2 do\n     \
    \   if lst2[i] % 2 == 0 then\n            even[i] = true\n        end\n    end\n\
    \    for i = 1, #lst1, 2 do\n        if not even[i] then\n            return \"\
    NO\"\n        end\n    end\n    return \"YES\"\nend", "    local even = function(x)\n\
    \        return x % 2 == 0\n    end\n    local odd = function(x)\n        return\
    \ x % 2 == 1\n    end\n    local even_index = 0\n    local odd_index = 0\n   \
    \ local even_count = 0\n    local odd_count = 0\n    for i = 1, #lst1 do\n   \
    \     if even(lst1[i]) then\n            if even_count == 0 then\n           \
    \     even_index = i\n                even_count = 1\n            else\n     \
    \           even_count = even_count + 1\n            end\n        else\n     \
    \       if odd_count == 0 then\n                odd_index = i\n              \
    \  odd_count = 1\n            else\n                odd_count = odd_count + 1\n\
    \            end\n        end\n    end\n    for i = 1, #lst2 do\n        if even(lst2[i])\
    \ then\n            if even_count == 0 then\n                even_index = i\n\
    \                even_count = 1\n            else\n                even_count\
    \ = even_count + 1\n            end\n        else\n            if odd_count ==\
    \ 0 then\n                odd_index = i\n                odd_count = 1\n     \
    \       else\n                odd_count = odd_count + 1\n            end\n   \
    \     end\n    end\n    if even_count > 0 and odd_count > 0 then\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\nend", "    local even = {}\n    for\
    \ i = 1, #lst1, 2 do\n        if lst1[i] % 2 == 0 then\n            even[i] =\
    \ true\n        end\n    end\n    for i = 1, #lst2, 2 do\n        if lst2[i] %\
    \ 2 == 0 then\n            even[i] = true\n        end\n    end\n    for i = 1,\
    \ #lst1, 2 do\n        if not even[i] then\n            return \"NO\"\n      \
    \  end\n    end\n    return \"YES\"\nend", "  local even = function(n)\n    return\
    \ n % 2 == 0\n  end\n  local odd = function(n)\n    return n % 2 == 1\n  end\n\
    \  local even_index = function(n)\n    return n / 2\n  end\n  local odd_index\
    \ = function(n)\n    return n / 2 + 1\n  end\n  local even_value = function(n)\n\
    \    return lst1[even_index(n)]\n  end\n  local odd_value = function(n)\n    return\
    \ lst2[odd_index(n)]\n  end\n  local even_value = function(n)\n    return lst2[even_index(n)]\n\
    \  end\n  local odd_value = function(n)\n    return lst1[odd_index(n)]\n  end\n\
    \  local even_value = function(n)\n    return lst1[even_index(n)]\n  end\n  local\
    \ odd_value = function(n)\n    return lst2[odd_index(n)]\n  end\n  local even_value\
    \ = function(n)\n    return lst2[even_index(n)]\n  end\n  local odd_value = function(n)\n\
    \    return lst1[odd_index(n)]\n  end\n  local even_value = function(n)\n    return\
    \ lst1[even_index(n)]\n  end\n  local odd_value = function(n)\n    return lst2[odd_index(n)]\n\
    \  end\n  local even_value = function(n)\n    return lst2[even_index(n)]\n  end\n\
    \  local odd_value = function(n)\n    return lst1[odd_index(n)]\n  end\n  local\
    \ even_value = function(n)\n    return lst1[even_index(n)]\n  end\n  local odd_value\
    \ = function(n)\n    return lst2[odd_index(n)]\n  end\n  local even_value = function(n)\n\
    \    return lst2[even_index(n)]\n  end\n  local odd_value = function(n)\n    return\
    \ lst1[odd_index(n)]\n  ", "    local even = true\n    for i = 1, #lst1, 2 do\n\
    \        if lst1[i] % 2 == 0 and lst2[i] % 2 == 0 then\n            even = false\n\
    \            break\n        end\n    end\n    if even then\n        return \"\
    YES\"\n    end\n    return \"NO\"\nend", "    local even = {}\n    for i = 1,\
    \ #lst1, 2 do\n        if lst1[i] % 2 == 0 then\n            even[i] = true\n\
    \        end\n    end\n    for i = 1, #lst2, 2 do\n        if lst2[i] % 2 == 0\
    \ then\n            even[i] = true\n        end\n    end\n    for i = 1, #lst1,\
    \ 2 do\n        if not even[i] then\n            return \"NO\"\n        end\n\
    \    end\n    return \"YES\"\nend", "    local even = {}\n    for i = 1, #lst1,\
    \ 2 do\n        if lst1[i] % 2 == 0 then\n            even[i] = lst2[i]\n    \
    \    end\n    end\n    for i = 1, #lst2, 2 do\n        if lst2[i] % 2 == 0 then\n\
    \            even[i] = lst1[i]\n        end\n    end\n    for i = 1, #lst1, 2\
    \ do\n        if lst1[i] % 2 == 0 then\n            lst1[i] = even[i]\n      \
    \  end\n    end\n    for i = 1, #lst2, 2 do\n        if lst2[i] % 2 == 0 then\n\
    \            lst2[i] = even[i]\n        end\n    end\n    return #lst1 == #lst2\
    \ and lst1 == even\nend", "    local even = {}\n    for i = 1, #lst1, 2 do\n \
    \       if lst1[i] % 2 == 0 then\n            even[i] = true\n        end\n  \
    \  end\n    for i = 1, #lst2, 2 do\n        if lst2[i] % 2 == 0 then\n       \
    \     even[i] = true\n        end\n    end\n    for i = 1, #lst1, 2 do\n     \
    \   if not even[i] then\n            return \"NO\"\n        end\n    end\n   \
    \ return \"YES\"\nend", "    local even = true\n    for i = 1, #lst1 do\n    \
    \    if lst1[i] % 2 == 0 then\n            even = false\n            break\n \
    \       end\n    end\n    for i = 1, #lst2 do\n        if lst2[i] % 2 == 0 then\n\
    \            even = false\n            break\n        end\n    end\n    if even\
    \ then\n        return \"YES\"\n    end\n    return \"NO\"\nend", "    local i,\
    \ j\n    for i = 1, #lst1, 2 do\n        for j = 1, #lst2, 2 do\n            if\
    \ lst1[i] ~= lst2[j] then\n                return \"NO\"\n            end\n  \
    \      end\n    end\n    return \"YES\"\nend", "    local even = {}\n    for i\
    \ = 1, #lst1, 2 do\n        if lst1[i] % 2 == 0 then\n            even[i] = true\n\
    \        end\n    end\n    for i = 1, #lst2, 2 do\n        if lst2[i] % 2 == 0\
    \ then\n            even[i] = true\n        end\n    end\n    for i = 1, #lst1,\
    \ 2 do\n        if not even[i] then\n            return \"NO\"\n        end\n\
    \    end\n    return \"YES\"\nend", "  local even = {}\n  for i = 1, #lst1, 2\
    \ do\n    if lst1[i] % 2 == 0 then\n      even[i] = true\n    end\n  end\n  for\
    \ i = 1, #lst2, 2 do\n    if lst2[i] % 2 == 0 then\n      even[i] = true\n   \
    \ end\n  end\n  for i = 1, #lst1, 2 do\n    if not even[i] then\n      return\
    \ \"NO\"\n    end\n  end\n  return \"YES\"\nend", "    local even = true\n   \
    \ for i = 1, #lst1 do\n        if lst1[i] % 2 == 0 then\n            even = false\n\
    \            break\n        end\n    end\n    for i = 1, #lst2 do\n        if\
    \ lst2[i] % 2 == 0 then\n            even = false\n            break\n       \
    \ end\n    end\n    if even then\n        return \"YES\"\n    else\n        return\
    \ \"NO\"\n    end\nend", "    local even = true\n    for i = 1, #lst1 do\n   \
    \     if lst1[i] % 2 == 0 then\n            even = false\n            break\n\
    \        end\n    end\n    for i = 1, #lst2 do\n        if lst2[i] % 2 == 0 then\n\
    \            even = false\n            break\n        end\n    end\n    if even\
    \ then\n        return \"YES\"\n    else\n        return \"NO\"\n    end\nend",
  "    local even = {}\n    for i = 1, #lst1, 2 do\n        if lst1[i] % 2 == 0 then\n\
    \            even[i] = true\n        end\n    end\n    for i = 1, #lst2, 2 do\n\
    \        if lst2[i] % 2 == 0 then\n            even[i] = true\n        end\n \
    \   end\n    for i = 1, #lst1, 2 do\n        if not even[i] then\n           \
    \ return \"NO\"\n        end\n    end\n    return \"YES\"\nend", "    local even\
    \ = function(n)\n        return n % 2 == 0\n    end\n    local odd = function(n)\n\
    \        return n % 2 == 1\n    end\n    local even_index = function(n)\n    \
    \    return n / 2\n    end\n    local odd_index = function(n)\n        return\
    \ n / 2 + 1\n    end\n    local even_value = function(n)\n        return lst1[even_index(n)]\n\
    \    end\n    local odd_value = function(n)\n        return lst2[odd_index(n)]\n\
    \    end\n    for i = 1, #lst1 do\n        if even(lst1[i]) and odd(lst2[i]) then\n\
    \            return \"YES\"\n        end\n    end\n    for i = 1, #lst2 do\n \
    \       if even(lst2[i]) and odd(lst1[i]) then\n            return \"YES\"\n \
    \       end\n    end\n    return \"NO\"\nend", "    local even = {}\n    for i\
    \ = 1, #lst1, 2 do\n        if lst1[i] % 2 == 0 then\n            even[i] = lst2[i]\n\
    \        end\n    end\n    for i = 1, #lst2, 2 do\n        if lst2[i] % 2 == 0\
    \ then\n            even[i] = lst1[i]\n        end\n    end\n    return even\n\
    end", "  local even = true\n  for i = 1, #lst1, 2 do\n    if lst1[i] % 2 == 0\
    \ and lst2[i] % 2 == 0 then\n      even = false\n      break\n    end\n  end\n\
    \  if even then\n    return \"YES\"\n  else\n    return \"NO\"\n  end\nend", " \
    \   local i, j, k\n    for i = 1, #lst1, 2 do\n        for j = 1, #lst2, 2 do\n\
    \            if lst1[i] < lst2[j] then\n                k = lst1[i]\n        \
    \        lst1[i] = lst2[j]\n                lst2[j] = k\n            end\n   \
    \     end\n    end\n    return lst1\nend", "  local even = function(n)\n    return\
    \ n % 2 == 0\n  end\n  local odd = function(n)\n    return n % 2 == 1\n  end\n\
    \  local evens = filter(even, lst1)\n  local odds = filter(odd, lst2)\n  if evens\
    \ == odds then\n    return \"YES\"\n  else\n    return \"NO\"\n  end\nend", " \
    \ local even = {}\n  for i = 1, #lst1, 2 do\n    if lst1[i] % 2 == 0 then\n  \
    \    even[i] = lst1[i]\n    end\n  end\n  for i = 1, #lst2, 2 do\n    if lst2[i]\
    \ % 2 == 0 then\n      even[i] = lst2[i]\n    end\n  end\n  for i = 1, #lst1,\
    \ 2 do\n    if lst1[i] != even[i] then\n      return \"NO\"\n    end\n  end\n\
    \  return \"YES\"\nend", "    local i, j, k\n    for i = 1, #lst1, 2 do\n    \
    \    for j = 1, #lst2, 2 do\n            if lst1[i] ~= lst2[j] then\n        \
    \        for k = 1, #lst1, 2 do\n                    if lst1[k] ~= lst2[j] then\n\
    \                        return \"NO\"\n                    end\n            \
    \    end\n                return \"YES\"\n            end\n        end\n    end\n\
    end", "  local even = function(n)\n    return n % 2 == 0\n  end\n  local odd =\
    \ function(n)\n    return n % 2 == 1\n  end\n  local even_index = function(n)\n\
    \    return n / 2\n  end\n  local odd_index = function(n)\n    return n / 2 +\
    \ 1\n  end\n  local even_value = function(n)\n    return lst1[even_index(n)]\n\
    \  end\n  local odd_value = function(n)\n    return lst2[odd_index(n)]\n  end\n\
    \  local even_value = function(n)\n    return lst2[even_index(n)]\n  end\n  local\
    \ odd_value = function(n)\n    return lst1[odd_index(n)]\n  end\n  local even_value\
    \ = function(n)\n    return lst1[even_index(n)]\n  end\n  local odd_value = function(n)\n\
    \    return lst2[odd_index(n)]\n  end\n  local even_value = function(n)\n    return\
    \ lst2[even_index(n)]\n  end\n  local odd_value = function(n)\n    return lst1[odd_index(n)]\n\
    \  end\n  local even_value = function(n)\n    return lst1[even_index(n)]\n  end\n\
    \  local odd_value = function(n)\n    return lst2[odd_index(n)]\n  end\n  local\
    \ even_value = function(n)\n    return lst2[even_index(n)]\n  end\n  local odd_value\
    \ = function(n)\n    return lst1[odd_index(n)]\n  end\n  local even_value = function(n)\n\
    \    return lst1[even_index(n)]\n  end\n  local odd_value = function(n)\n    return\
    \ lst2[odd_index(n)]\n  end\n  local even_value = function(n)\n    return lst2[even_index(n)]\n\
    \  end\n  local odd_value = function(n)\n    return lst1[odd_index(n)]\n  ", " \
    \   local even = {}\n    for i = 1, #lst1, 2 do\n        if lst1[i] % 2 == 0 then\n\
    \            even[i] = true\n        end\n    end\n    for i = 1, #lst2, 2 do\n\
    \        if lst2[i] % 2 == 0 then\n            even[i] = true\n        end\n \
    \   end\n    for i = 1, #lst1, 2 do\n        if not even[i] then\n           \
    \ return \"NO\"\n        end\n    end\n    return \"YES\"\nend", "    local even\
    \ = {}\n    for i = 1, #lst1, 2 do\n        if lst1[i] % 2 == 0 then\n       \
    \     even[i] = true\n        end\n    end\n    for i = 1, #lst2, 2 do\n     \
    \   if lst2[i] % 2 == 0 then\n            even[i] = true\n        end\n    end\n\
    \    for i = 1, #lst1, 2 do\n        if not even[i] then\n            return \"\
    NO\"\n        end\n    end\n    return \"YES\"\nend", "    local even = {}\n \
    \   for i = 1, #lst1, 2 do\n        if lst1[i] % 2 == 0 then\n            even[i]\
    \ = lst2[i]\n        end\n    end\n    for i = 1, #lst2, 2 do\n        if lst2[i]\
    \ % 2 == 0 then\n            even[i] = lst1[i]\n        end\n    end\n    return\
    \ even\nend", "    local even = false\n    for i = 1, #lst1, 2 do\n        if\
    \ lst1[i] % 2 == 0 and lst2[i] % 2 == 0 then\n            even = true\n      \
    \      break\n        end\n    end\n    return even and \"YES\" or \"NO\"\nend",
  "  local even = function(n)\n    return n % 2 == 0\n  end\n  local odd = function(n)\n\
    \    return n % 2 == 1\n  end\n  local evens = filter(even, lst1)\n  local odds\
    \ = filter(odd, lst2)\n  return (evens == odds) and \"YES\" or \"NO\"\nend", " \
    \   local even = {}\n    for i = 1, #lst1, 2 do\n        if lst1[i] % 2 == 0 then\n\
    \            even[i] = true\n        end\n    end\n    for i = 1, #lst2, 2 do\n\
    \        if lst2[i] % 2 == 0 then\n            even[i] = true\n        end\n \
    \   end\n    for i = 1, #lst1, 2 do\n        if not even[i] then\n           \
    \ return \"NO\"\n        end\n    end\n    return \"YES\"\nend", "    local even\
    \ = true\n    for i = 1, #lst1, 2 do\n        if lst1[i] % 2 == 0 and lst2[i]\
    \ % 2 == 0 then\n            even = false\n            break\n        end\n  \
    \  end\n    if even then\n        return \"YES\"\n    else\n        return \"\
    NO\"\n    end\nend", "    local even = {}\n    for i = 1, #lst1, 2 do\n      \
    \  if lst1[i] % 2 == 0 then\n            even[i] = true\n        end\n    end\n\
    \    for i = 1, #lst2, 2 do\n        if lst2[i] % 2 == 0 then\n            even[i]\
    \ = true\n        end\n    end\n    for i = 1, #lst1, 2 do\n        if not even[i]\
    \ then\n            return \"NO\"\n        end\n    end\n    return \"YES\"\n\
    end", "    local even = function(n)\n        return n % 2 == 0\n    end\n    local\
    \ odd = function(n)\n        return n % 2 == 1\n    end\n    local even_index\
    \ = function(n)\n        return n / 2\n    end\n    local odd_index = function(n)\n\
    \        return n / 2 + 1\n    end\n    local even_index = function(n)\n     \
    \   return n / 2\n    end\n    local odd_index = function(n)\n        return n\
    \ / 2 + 1\n    end\n    local even_index = function(n)\n        return n / 2\n\
    \    end\n    local odd_index = function(n)\n        return n / 2 + 1\n    end\n\
    \    local even_index = function(n)\n        return n / 2\n    end\n    local\
    \ odd_index = function(n)\n        return n / 2 + 1\n    end\n    local even_index\
    \ = function(n)\n        return n / 2\n    end\n    local odd_index = function(n)\n\
    \        return n / 2 + 1\n    end\n    local even_index = function(n)\n     \
    \   return n / 2\n    end\n    local odd_index = function(n)\n        return n\
    \ / 2 + 1\n    end\n    local even_index = function(n)\n        return n / 2\n\
    \    end\n    local odd_index = function(n)\n        return n / 2 + 1\n    end\n\
    \    local even_index = function(n)\n        return n / 2\n    end\n    local\
    \ odd_index = function(n)\n        return n / 2 + 1\n    end\n    local even_index\
    \ = function(n)\n        return n / 2\n    end\n    local odd_index = function(n)\n\
    \        return n / 2 + 1\n    end\n    local even_index = function(n)\n     \
    \   return n / 2\n    end\n    local odd_index = function(n)\n        return n\
    \ / 2 + 1\n    end\n    local even_index = function(n)\n        return n / 2\n\
    \    end\n    local odd_index = function(n)\n        return n / 2 + 1\n    end\n\
    \    local even_index = function(n)", "    local even = true\n    for i = 1, #lst1\
    \ do\n        if lst1[i] % 2 == 0 then\n            even = false\n           \
    \ break\n        end\n    end\n    for i = 1, #lst2 do\n        if lst2[i] % 2\
    \ == 0 then\n            even = false\n            break\n        end\n    end\n\
    \    if even then\n        return \"YES\"\n    else\n        return \"NO\"\n \
    \   end\nend", "    local i, j\n    for i = 1, #lst1, 2 do\n        for j = 1,\
    \ #lst2, 2 do\n            if lst1[i] ~= lst2[j] then\n                return\
    \ \"NO\"\n            end\n        end\n    end\n    return \"YES\"\nend", " \
    \   local i, j\n    for i = 1, #lst1, 2 do\n        for j = 1, #lst2, 2 do\n \
    \           if lst1[i] ~= lst2[j] then\n                return \"NO\"\n      \
    \      end\n        end\n    end\n    return \"YES\"\nend", "    local even =\
    \ {}\n    for i = 1, #lst1, 2 do\n        if lst1[i] % 2 == 0 then\n         \
    \   even[i] = true\n        end\n    end\n    for i = 1, #lst2, 2 do\n       \
    \ if lst2[i] % 2 == 0 then\n            even[i] = true\n        end\n    end\n\
    \    for i = 1, #lst1, 2 do\n        if not even[i] then\n            return \"\
    NO\"\n        end\n    end\n    return \"YES\"\nend", "    local even = {}\n \
    \   for i = 1, #lst1, 2 do\n        if lst1[i] % 2 == 0 then\n            even[i]\
    \ = lst2[i]\n        end\n    end\n    for i = 1, #lst2, 2 do\n        if lst2[i]\
    \ % 2 == 0 then\n            even[i] = lst1[i]\n        end\n    end\n    return\
    \ even\nend", "    local even = false\n    for i = 1, #lst1 do\n        if lst1[i]\
    \ % 2 == 0 then\n            even = true\n            break\n        end\n   \
    \ end\n    for i = 1, #lst2 do\n        if lst2[i] % 2 == 0 then\n           \
    \ even = true\n            break\n        end\n    end\n    if even then\n   \
    \     return \"YES\"\n    else\n        return \"NO\"\n    end\nend", "    local\
    \ even = false\n    for i = 1, #lst1, 2 do\n        if lst1[i] % 2 == 0 and lst2[i]\
    \ % 2 == 0 then\n            even = true\n            break\n        end\n   \
    \ end\n    if even then\n        return \"YES\"\n    end\n    return \"NO\"\n\
    end", "  local even = function(x)\n    return x % 2 == 0\n  end\n  local odd =\
    \ function(x)\n    return x % 2 == 1\n  end\n  local even_index = function(x)\n\
    \    return x[1]\n  end\n  local odd_index = function(x)\n    return x[2]\n  end\n\
    \  local even_value = function(x)\n    return x[2]\n  end\n  local odd_value =\
    \ function(x)\n    return x[1]\n  end\n  local even_index_value = function(x)\n\
    \    return x[3]\n  end\n  local odd_index_value = function(x)\n    return x[4]\n\
    \  end\n  local even_index_value_value = function(x)\n    return x[5]\n  end\n\
    \  local odd_index_value_value = function(x)\n    return x[6]\n  end\n  local\
    \ even_index_value_value_value = function(x)\n    return x[7]\n  end\n  local\
    \ odd_index_value_value_value = function(x)\n    return x[8]\n  end\n  local even_index_value_value_value_value\
    \ = function(x)\n    return x[9]\n  end\n  local odd_index_value_value_value_value\
    \ = function(x)\n    return x[10]\n  end\n  local even_index_value_value_value_value_value\
    \ = function(x)\n    return x[11]\n  end\n  local odd_index_value_value_value_value_value\
    \ = function(x)\n    return x[12]\n  end\n  local even_index_value_value_value_value_value_value\
    \ = function(x)\n    return x[13]\n  end\n  local odd_index_value_value_value_value_value_value\
    \ = function(x)\n    return x[14]\n  end\n  local even_index_value_value_value_value_value_value_value\
    \ = function(x)\n    return x[15]\n  end\n  local odd_index_value_value_value_value_value_value",
  "    local even = {}\n    for i = 1, #lst1, 2 do\n        if lst1[i] % 2 == 0 then\n\
    \            even[i] = true\n        end\n    end\n    for i = 1, #lst2, 2 do\n\
    \        if lst2[i] % 2 == 0 then\n            even[i] = true\n        end\n \
    \   end\n    for i = 1, #lst1, 2 do\n        if not even[i] then\n           \
    \ return \"NO\"\n        end\n    end\n    return \"YES\"\nend", "    local even\
    \ = {}\n    for i = 1, #lst1, 2 do\n        if lst1[i] % 2 == 0 then\n       \
    \     even[i] = true\n        end\n    end\n    for i = 1, #lst2, 2 do\n     \
    \   if lst2[i] % 2 == 0 then\n            even[i] = true\n        end\n    end\n\
    \    for i = 1, #lst1, 2 do\n        if not even[i] then\n            return \"\
    NO\"\n        end\n    end\n    return \"YES\"\nend", "    local even = function(n)\n\
    \        return n % 2 == 0\n    end\n    local odd = function(n)\n        return\
    \ n % 2 == 1\n    end\n    local even_index = function(n)\n        return n /\
    \ 2\n    end\n    local odd_index = function(n)\n        return n / 2 + 1\n  \
    \  end\n    local even_value = function(n)\n        return lst1[even_index(n)]\n\
    \    end\n    local odd_value = function(n)\n        return lst2[odd_index(n)]\n\
    \    end\n    local even_indexes = function(n)\n        return lst1.map(even_index)\n\
    \    end\n    local odd_indexes = function(n)\n        return lst2.map(odd_index)\n\
    \    end\n    local even_values = function(n)\n        return lst1.map(even_value)\n\
    \    end\n    local odd_values = function(n)\n        return lst2.map(odd_value)\n\
    \    end\n    local even_indexes_set = set.union(even_indexes(lst1), even_indexes(lst2))\n\
    \    local odd_indexes_set = set.union(odd_indexes(lst1), odd_indexes(lst2))\n\
    \    local even_values_set = set.union(even_values(lst1), even_values(lst2))\n\
    \    local odd_values_set = set.union(odd_values(lst1), odd_values(lst2))\n  \
    \  local even_indexes_set_size = set.size(even_indexes_set)\n    local odd_indexes_set_size\
    \ = set.size(odd_indexes_set)\n    local even_values_set_size = set.size(even_values_set)\n\
    \    local odd_values_set_size = set.size(odd_values_set)\n    if even_indexes_set_size\
    \ == odd_indexes_set_size and\n        even_values_set_size == odd_values_set_size\
    \ then\n        return \"YES\"\n    else\n        return \"NO\"\n    end", " \
    \   local even = true\n    for i = 1, #lst1, 2 do\n        if lst1[i] % 2 == 0\
    \ and lst2[i] % 2 == 1 then\n            even = false\n            break\n   \
    \     end\n    end\n    if even then\n        return \"YES\"\n    else\n     \
    \   return \"NO\"\n    end\nend", "    local even = false\n    for i = 1, #lst1,\
    \ 2 do\n        if lst1[i] % 2 == 0 and lst2[i] % 2 == 0 then\n            even\
    \ = true\n            break\n        end\n    end\n    return even and \"YES\"\
    \ or \"NO\"\nend", "  local even = false\n  for i = 1, #lst1, 2 do\n    if lst1[i]\
    \ % 2 == 0 and lst2[i] % 2 == 0 then\n      even = true\n      break\n    end\n\
    \  end\n  if even then\n    return \"YES\"\n  end\n  return \"NO\"\nend", "  \
    \  local even = true\n    for i = 1, #lst1, 2 do\n        if lst1[i] % 2 == 0\
    \ and lst2[i] % 2 == 0 then\n            even = false\n            break\n   \
    \     end\n    end\n    return even\nend", "    local even = {}\n    for i = 1,\
    \ #lst1, 2 do\n        if lst1[i] % 2 == 0 then\n            even[i] = true\n\
    \        end\n    end\n    for i = 1, #lst2, 2 do\n        if lst2[i] % 2 == 0\
    \ then\n            even[i] = true\n        end\n    end\n    for i = 1, #lst1,\
    \ 2 do\n        if not even[i] then\n            return \"NO\"\n        end\n\
    \    end\n    return \"YES\"\nend", "    local even = true\n    for i = 1, #lst1\
    \ do\n        if lst1[i] % 2 == 0 and lst2[i] % 2 == 1 then\n            even\
    \ = false\n            break\n        end\n    end\n    return even and \"YES\"\
    \ or \"NO\"\nend", "    local even = function(n)\n        return n % 2 == 0\n\
    \    end\n    local odd = function(n)\n        return n % 2 == 1\n    end\n  \
    \  local even_index = function(n)\n        return n / 2\n    end\n    local odd_index\
    \ = function(n)\n        return n / 2 + 1\n    end\n    local even_value = function(n)\n\
    \        return lst1[even_index(n)]\n    end\n    local odd_value = function(n)\n\
    \        return lst2[odd_index(n)]\n    end\n    local even_value_index = function(n)\n\
    \        return even_index(n)\n    end\n    local odd_value_index = function(n)\n\
    \        return odd_index(n)\n    end\n    local even_value_index_value = function(n)\n\
    \        return lst1[even_value_index(n)]\n    end\n    local odd_value_index_value\
    \ = function(n)\n        return lst2[odd_value_index(n)]\n    end\n    local even_value_index_value_index\
    \ = function(n)\n        return even_value_index(n)\n    end\n    local odd_value_index_value_index\
    \ = function(n)\n        return odd_value_index(n)\n    end\n    local even_value_index_value_index_value\
    \ = function(n)\n        return lst1[even_value_index_value(n)]\n    end\n   \
    \ local odd_value_index_value_index_value = function(n)\n        return lst2[odd_value_index_value(n)]\n\
    \    end\n    local even_value_index_value_index_value_index = function(n)\n \
    \       return even_value_index_value(n)\n    end\n    local odd_value_index_value_index_value_index\
    \ = function(n)\n        return odd_value_index_value(n)\n    end\n    local even_value_index_value_index_value_index_value\
    \ = function(n)\n        return lst1[even_value_index_value_index_value(n)]\n\
    \    end", "    local even = function(n)\n        return n % 2 == 0\n    end\n\
    \    local odd = function(n)\n        return n % 2 == 1\n    end\n    local even_index\
    \ = function(n)\n        return n / 2\n    end\n    local odd_index = function(n)\n\
    \        return n / 2 + 1\n    end\n    local even_value = function(n)\n     \
    \   return lst1[even_index(n)]\n    end\n    local odd_value = function(n)\n \
    \       return lst2[odd_index(n)]\n    end\n    local even_indexes = function(n)\n\
    \        return lst1[even_index(n):even_index(n):2]\n    end\n    local odd_indexes\
    \ = function(n)\n        return lst2[odd_index(n):odd_index(n):2]\n    end\n \
    \   local even_values = function(n)\n        return lst1[even_indexes(n):2]\n\
    \    end\n    local odd_values = function(n)\n        return lst2[odd_indexes(n):2]\n\
    \    end\n    local even_indexes_set = function(n)\n        return set.union(set.difference(set.union(even_indexes(n),\
    \ odd_indexes(n)), even_indexes(n)), odd_indexes(n))\n    end\n    local odd_indexes_set\
    \ = function(n)\n        return set.union(set.difference(set.union(even_indexes(n),\
    \ odd_indexes(n)), even_indexes(n)), odd_indexes(n))\n    end\n    local even_values_set\
    \ = function(n)\n        return set.union(set.difference(set.union(even_values(n),\
    \ odd_values(n)), even_values(n)), odd_values(n))\n    end\n    local odd_values_set\
    \ = function(n)\n        return set.union(set.difference(set.union(even_values(n),\
    \ odd_values(n)), even_values(n)), odd_values(n))\n    end\n    local even_indexes_set_set",
  "    local even = true\n    for i = 1, #lst1 do\n        if lst1[i] % 2 == 0 then\n\
    \            even = false\n            break\n        end\n    end\n    for i\
    \ = 1, #lst2 do\n        if lst2[i] % 2 == 0 then\n            even = false\n\
    \            break\n        end\n    end\n    if even then\n        return \"\
    YES\"\n    else\n        return \"NO\"\n    end\nend", "    local even = {}\n\
    \    for i = 1, #lst1, 2 do\n        if lst1[i] % 2 == 0 then\n            even[i]\
    \ = true\n        end\n    end\n    for i = 1, #lst2, 2 do\n        if lst2[i]\
    \ % 2 == 0 then\n            even[i] = true\n        end\n    end\n    for i =\
    \ 1, #lst1, 2 do\n        if not even[i] then\n            return \"NO\"\n   \
    \     end\n    end\n    return \"YES\"\nend", "    local even = {}\n    for i\
    \ = 1, #lst1, 2 do\n        if lst1[i] % 2 == 0 then\n            even[i] = true\n\
    \        end\n    end\n    for i = 1, #lst2, 2 do\n        if lst2[i] % 2 == 0\
    \ then\n            even[i] = true\n        end\n    end\n    for i = 1, #lst1,\
    \ 2 do\n        if not even[i] then\n            return \"NO\"\n        end\n\
    \    end\n    return \"YES\"\nend", "    local even = {}\n    for i = 1, #lst1,\
    \ 2 do\n        if lst1[i] % 2 == 0 then\n            even[i] = true\n       \
    \ end\n    end\n    for i = 1, #lst2, 2 do\n        if lst2[i] % 2 == 0 then\n\
    \            even[i] = true\n        end\n    end\n    for i = 1, #lst1, 2 do\n\
    \        if not even[i] then\n            return \"NO\"\n        end\n    end\n\
    \    return \"YES\"\nend", "    local even = {}\n    for i = 1, #lst1, 2 do\n\
    \        if lst1[i] % 2 == 0 then\n            even[i] = true\n        end\n \
    \   end\n    for i = 1, #lst2, 2 do\n        if lst2[i] % 2 == 0 then\n      \
    \      even[i] = true\n        end\n    end\n    for i = 1, #lst1, 2 do\n    \
    \    if not even[i] then\n            return \"NO\"\n        end\n    end\n  \
    \  return \"YES\"\nend", "    local even = {}\n    for i = 1, #lst1, 2 do\n  \
    \      if lst1[i] % 2 == 0 then\n            even[i] = true\n        end\n   \
    \ end\n    for i = 1, #lst2, 2 do\n        if lst2[i] % 2 == 0 then\n        \
    \    even[i] = true\n        end\n    end\n    for i = 1, #lst1, 2 do\n      \
    \  if not even[i] then\n            return \"NO\"\n        end\n    end\n    return\
    \ \"YES\"\nend", "    local i, j\n    for i = 1, #lst1, 2 do\n        for j =\
    \ 1, #lst2, 2 do\n            if lst1[i] ~= lst2[j] then\n                return\
    \ \"NO\"\n            end\n        end\n    end\n    return \"YES\"\nend", " \
    \   local even = {}\n    for i = 1, #lst1, 2 do\n        if lst1[i] % 2 == 0 then\n\
    \            even[i] = true\n        end\n    end\n    for i = 1, #lst2, 2 do\n\
    \        if lst2[i] % 2 == 0 then\n            even[i] = true\n        end\n \
    \   end\n    for i = 1, #lst1, 2 do\n        if not even[i] then\n           \
    \ return \"NO\"\n        end\n    end\n    return \"YES\"\nend", "  local even\
    \ = function(n)\n    return n % 2 == 0\n  end\n  local odd = function(n)\n   \
    \ return n % 2 == 1\n  end\n  local even_index = function(n)\n    return 2 * n\n\
    \  end\n  local odd_index = function(n)\n    return 2 * n + 1\n  end\n  local\
    \ even_value = function(n)\n    return lst1[even_index(n)]\n  end\n  local odd_value\
    \ = function(n)\n    return lst2[odd_index(n)]\n  end\n  for i = 1, #lst1 do\n\
    \    if not even(lst1[i]) then\n      if even(lst2[i]) then\n        return \"\
    YES\"\n      end\n      return \"NO\"\n    end\n  end\n  for i = 1, #lst2 do\n\
    \    if not even(lst2[i]) then\n      if even(lst1[i]) then\n        return \"\
    YES\"\n      end\n      return \"NO\"\n    end\n  end\n  return \"NO\"\nend",
  "  local even = {}\n  for i = 1, #lst1, 2 do\n    if lst1[i] % 2 == 0 then\n   \
    \   even[i] = true\n    end\n  end\n  for i = 1, #lst2, 2 do\n    if lst2[i] %\
    \ 2 == 0 then\n      even[i] = true\n    end\n  end\n  for i = 1, #lst1, 2 do\n\
    \    if not even[i] then\n      return \"NO\"\n    end\n  end\n  return \"YES\"\
    \nend", "  local even = {}\n  for i = 1, #lst1, 2 do\n    if lst1[i] % 2 == 0\
    \ then\n      even[i] = true\n    end\n  end\n  for i = 1, #lst2, 2 do\n    if\
    \ lst2[i] % 2 == 0 then\n      even[i] = true\n    end\n  end\n  for i = 1, #lst1,\
    \ 2 do\n    if not even[i] then\n      return \"NO\"\n    end\n  end\n  return\
    \ \"YES\"\nend", "    local even = {}\n    for i = 1, #lst1, 2 do\n        if\
    \ lst1[i] % 2 == 0 then\n            even[i] = true\n        end\n    end\n  \
    \  for i = 1, #lst2, 2 do\n        if lst2[i] % 2 == 0 then\n            even[i]\
    \ = true\n        end\n    end\n    for i = 1, #lst1, 2 do\n        if not even[i]\
    \ then\n            return \"NO\"\n        end\n    end\n    return \"YES\"\n\
    end", "    local even = function(n)\n        return n % 2 == 0\n    end\n    local\
    \ odd = function(n)\n        return n % 2 == 1\n    end\n    local even_index\
    \ = function(n)\n        return n / 2\n    end\n    local odd_index = function(n)\n\
    \        return n / 2 + 1\n    end\n    local even_value = function(n)\n     \
    \   return lst1[even_index(n)]\n    end\n    local odd_value = function(n)\n \
    \       return lst2[odd_index(n)]\n    end\n    local even_index_value = function(n)\n\
    \        return lst2[even_index(n)]\n    end\n    local odd_index_value = function(n)\n\
    \        return lst1[odd_index(n)]\n    end\n    local even_value_index = function(n)\n\
    \        return lst1[even_index(n)]\n    end\n    local odd_value_index = function(n)\n\
    \        return lst2[odd_index(n)]\n    end\n    local even_index_value_index\
    \ = function(n)\n        return lst2[even_index(n)]\n    end\n    local odd_index_value_index\
    \ = function(n)\n        return lst1[odd_index(n)]\n    end\n    local even_index_value_index_value\
    \ = function(n)\n        return lst2[even_index(n)]\n    end\n    local odd_index_value_index_value\
    \ = function(n)\n        return lst1[odd_index(n)]\n    end\n    local even_index_value_index_value_index\
    \ = function(n)\n        return lst2[even_index(n)]\n    end\n    local odd_index_value_index_value_index\
    \ = function(n)\n        return lst1[odd_index(n)]\n    end\n    local even_index_value_index_value_index_value\
    \ = function(n)\n        return lst2[even_index(n)]\n    end\n    local odd_index_value_index_value_index_value\
    \ = function(n)\n        return lst", "    local even = function(n)\n        return\
    \ (n % 2 == 0)\n    end\n    local odd = function(n)\n        return (n % 2 ==\
    \ 1)\n    end\n    local even_index = function(n)\n        return (n / 2)\n  \
    \  end\n    local odd_index = function(n)\n        return (n / 2) + 1\n    end\n\
    \    local even_index = function(n)\n        return (n / 2)\n    end\n    local\
    \ odd_index = function(n)\n        return (n / 2) + 1\n    end\n    local even_index\
    \ = function(n)\n        return (n / 2)\n    end\n    local odd_index = function(n)\n\
    \        return (n / 2) + 1\n    end\n    local even_index = function(n)\n   \
    \     return (n / 2)\n    end\n    local odd_index = function(n)\n        return\
    \ (n / 2) + 1\n    end\n    local even_index = function(n)\n        return (n\
    \ / 2)\n    end\n    local odd_index = function(n)\n        return (n / 2) + 1\n\
    \    end\n    local even_index = function(n)\n        return (n / 2)\n    end\n\
    \    local odd_index = function(n)\n        return (n / 2) + 1\n    end\n    local\
    \ even_index = function(n)\n        return (n / 2)\n    end\n    local odd_index\
    \ = function(n)\n        return (n / 2) + 1\n    end\n    local even_index = function(n)\n\
    \        return (n / 2)\n    end\n    local odd_index = function(n)\n        return\
    \ (n / 2) + 1\n    end\n    local even_index = function(n)\n        return (n\
    \ / 2)\n    end\n    local odd_index = function(n)\n        return (n / 2) + 1\n\
    \    end\n    local even_index = function(n)\n        return (n / 2)\n    end\n\
    \    local odd_index = function(n)\n        return (n / 2) + 1\n    end\n    local\
    \ even_index = function(", "    local even = false\n    for i = 1, #lst1, 2 do\n\
    \        if lst1[i] % 2 == 0 and lst2[i] % 2 == 0 then\n            even = true\n\
    \            break\n        end\n    end\n    if even then\n        return \"\
    YES\"\n    end\n    return \"NO\"\nend", "    local even = {}\n    for i = 1,\
    \ #lst1, 2 do\n        if lst1[i] % 2 == 0 then\n            even[i] = true\n\
    \        end\n    end\n    for i = 1, #lst2, 2 do\n        if lst2[i] % 2 == 0\
    \ then\n            even[i] = true\n        end\n    end\n    for i = 1, #lst1,\
    \ 2 do\n        if not even[i] then\n            return \"NO\"\n        end\n\
    \    end\n    return \"YES\"\nend", "    local even = true\n    for i = 1, #lst1\
    \ do\n        if lst1[i] % 2 == 0 then\n            even = false\n           \
    \ break\n        end\n    end\n    for i = 1, #lst2 do\n        if lst2[i] % 2\
    \ == 0 then\n            even = false\n            break\n        end\n    end\n\
    \    if even then\n        return \"YES\"\n    end\n    return \"NO\"\nend", " \
    \ local even = {}\n  for i = 1, #lst1, 2 do\n    if lst1[i] % 2 == 0 then\n  \
    \    even[i] = true\n    end\n  end\n  for i = 1, #lst2, 2 do\n    if lst2[i]\
    \ % 2 == 0 then\n      even[i] = true\n    end\n  end\n  for i = 1, #lst1, 2 do\n\
    \    if not even[i] then\n      return \"NO\"\n    end\n  end\n  return \"YES\"\
    \nend", "    local even = {}\n    for i = 1, #lst1, 2 do\n        if lst1[i] %\
    \ 2 == 0 then\n            even[i] = lst2[i]\n        end\n    end\n    for i\
    \ = 1, #lst2, 2 do\n        if lst2[i] % 2 == 0 then\n            even[i] = lst1[i]\n\
    \        end\n    end\n    return even\nend", "  local even = true\n  for i =\
    \ 1, #lst1, 2 do\n    if lst1[i] % 2 == 0 and lst2[i] % 2 == 0 then\n      even\
    \ = true\n      break\n    end\n  end\n  if even then\n    return \"YES\"\n  end\n\
    \  return \"NO\"\nend", "  local even = function(n)\n    return n % 2 == 0\n \
    \ end\n  local odd = function(n)\n    return n % 2 == 1\n  end\n  local even_index\
    \ = function(n)\n    return n / 2\n  end\n  local odd_index = function(n)\n  \
    \  return n / 2 + 1\n  end\n  local even_index_lst1 = function(n)\n    return\
    \ lst1[even_index(n)]\n  end\n  local odd_index_lst1 = function(n)\n    return\
    \ lst1[odd_index(n)]\n  end\n  local even_index_lst2 = function(n)\n    return\
    \ lst2[even_index(n)]\n  end\n  local odd_index_lst2 = function(n)\n    return\
    \ lst2[odd_index(n)]\n  end\n  local even_lst1 = function(n)\n    return lst1[even_index(n)]\n\
    \  end\n  local odd_lst1 = function(n)\n    return lst1[odd_index(n)]\n  end\n\
    \  local even_lst2 = function(n)\n    return lst2[even_index(n)]\n  end\n  local\
    \ odd_lst2 = function(n)\n    return lst2[odd_index(n)]\n  end\n  local even_lst1_index\
    \ = function(n)\n    return lst1[even_index_lst1(n)]\n  end\n  local odd_lst1_index\
    \ = function(n)\n    return lst1[odd_index_lst1(n)]\n  end\n  local even_lst2_index\
    \ = function(n)\n    return lst2[even_index_lst2(n)]\n  end\n  local odd_lst2_index\
    \ = function(n)\n    return lst2[odd_index_lst2(n)]\n  end\n  local even_lst1_index_lst2\
    \ = function(n)\n    return lst2[even_index_lst1(n)]\n  end\n  local odd_lst1_index_l",
  "    local even = {}\n    for i = 1, #lst1, 2 do\n        if lst1[i] % 2 == 0 then\n\
    \            even[i] = true\n        end\n    end\n    for i = 1, #lst2, 2 do\n\
    \        if lst2[i] % 2 == 0 then\n            even[i] = true\n        end\n \
    \   end\n    for i = 1, #lst1, 2 do\n        if not even[i] then\n           \
    \ return \"NO\"\n        end\n    end\n    return \"YES\"\nend", "    local even\
    \ = function(n)\n        return n % 2 == 0\n    end\n    local odd = function(n)\n\
    \        return n % 2 == 1\n    end\n    local even_index = function(n)\n    \
    \    return n - 1\n    end\n    local odd_index = function(n)\n        return\
    \ n\n    end\n    local even_value = function(n)\n        return lst1[even_index(n)]\n\
    \    end\n    local odd_value = function(n)\n        return lst2[odd_index(n)]\n\
    \    end\n    local even_index_value = function(n)\n        return lst2[even_index(n)]\n\
    \    end\n    local odd_index_value = function(n)\n        return lst1[odd_index(n)]\n\
    \    end\n    local even_value_index = function(n)\n        return lst1[even_index(n)]\n\
    \    end\n    local odd_value_index = function(n)\n        return lst2[odd_index(n)]\n\
    \    end\n    local even_value_index_value = function(n)\n        return lst1[even_index(n)]\n\
    \    end\n    local odd_value_index_value = function(n)\n        return lst2[odd_index(n)]\n\
    \    end\n    local even_value_index_value_value = function(n)\n        return\
    \ lst1[even_index(n)]\n    end\n    local odd_value_index_value_value = function(n)\n\
    \        return lst2[odd_index(n)]\n    end\n    local even_value_index_value_value_value\
    \ = function(n)\n        return lst1[even_index(n)]\n    end\n    local odd_value_index_value_value_value\
    \ = function(n)\n        return lst2[odd_index(n)]\n    end\n    local even_value_index_value_value_value_value\
    \ = function(n)\n        return lst1[even_index(n)]\n    end\n    local odd_value_index_value_value_value_value\
    \ = function(n)\n        return lst2[odd_", "    local even = {}\n    for i =\
    \ 1, #lst1, 2 do\n        if lst1[i] % 2 == 0 then\n            even[i] = true\n\
    \        end\n    end\n    for i = 1, #lst2, 2 do\n        if lst2[i] % 2 == 0\
    \ then\n            even[i] = true\n        end\n    end\n    for i = 1, #lst1,\
    \ 2 do\n        if not even[i] then\n            return \"NO\"\n        end\n\
    \    end\n    return \"YES\"\nend", "    local even = {}\n    for i = 1, #lst1,\
    \ 2 do\n        if lst1[i] % 2 == 0 then\n            even[i] = true\n       \
    \ end\n    end\n    for i = 1, #lst2, 2 do\n        if lst2[i] % 2 == 0 then\n\
    \            even[i] = true\n        end\n    end\n    for i = 1, #lst1, 2 do\n\
    \        if not even[i] then\n            return \"NO\"\n        end\n    end\n\
    \    return \"YES\"\nend", "    local even = function(n)\n        return n % 2\
    \ == 0\n    end\n    local odd = function(n)\n        return n % 2 == 1\n    end\n\
    \    local even_index = function(n)\n        return n - 1\n    end\n    local\
    \ odd_index = function(n)\n        return n\n    end\n    local even_value = function(n)\n\
    \        return lst1[even_index(n)]\n    end\n    local odd_value = function(n)\n\
    \        return lst2[odd_index(n)]\n    end\n    local even_value_index = function(n)\n\
    \        return even_index(n)\n    end\n    local odd_value_index = function(n)\n\
    \        return odd_index(n)\n    end\n    local even_value_index_value = function(n)\n\
    \        return lst1[even_value_index(n)]\n    end\n    local odd_value_index_value\
    \ = function(n)\n        return lst2[odd_value_index(n)]\n    end\n    local even_value_index_value_index\
    \ = function(n)\n        return even_value_index(n)\n    end\n    local odd_value_index_value_index\
    \ = function(n)\n        return odd_value_index(n)\n    end\n    local even_value_index_value_index_value\
    \ = function(n)\n        return lst1[even_value_index_value(n)]\n    end\n   \
    \ local odd_value_index_value_index_value = function(n)\n        return lst2[odd_value_index_value(n)]\n\
    \    end\n    local even_value_index_value_index_value_index = function(n)\n \
    \       return even_value_index_value(n)\n    end\n    local odd_value_index_value_index_value_index\
    \ = function(n)\n        return odd_value_index_value(n)\n    end\n    local even_value_index_value_index_value_index_value\
    \ = function(n)\n        return lst1[even_value_index_value_index_value(n)]\n\
    \    end\n    local odd", "  local evens = {}\n  for i = 1, #lst1, 2 do\n    if\
    \ lst1[i] % 2 == 0 then\n      evens[i] = lst1[i]\n    end\n  end\n  for i = 1,\
    \ #lst2, 2 do\n    if lst2[i] % 2 == 0 then\n      evens[i] = lst2[i]\n    end\n\
    \  end\n  return #evens == #lst1 and #evens == #lst2\nend", "    local even =\
    \ {}\n    for i = 1, #lst1, 2 do\n        if lst1[i] % 2 == 0 then\n         \
    \   even[i] = true\n        end\n    end\n    for i = 1, #lst2, 2 do\n       \
    \ if lst2[i] % 2 == 0 then\n            even[i] = true\n        end\n    end\n\
    \    for i = 1, #lst1, 2 do\n        if not even[i] then\n            return \"\
    NO\"\n        end\n    end\n    return \"YES\"\nend", "    local even = {}\n \
    \   for i = 1, #lst1, 2 do\n        if lst1[i] % 2 == 0 then\n            even[i]\
    \ = true\n        end\n    end\n    for i = 1, #lst2, 2 do\n        if lst2[i]\
    \ % 2 == 0 then\n            even[i] = true\n        end\n    end\n    for i =\
    \ 1, #lst1, 2 do\n        if not even[i] then\n            return \"NO\"\n   \
    \     end\n    end\n    return \"YES\"\nend", "    local even = {}\n    for i\
    \ = 1, #lst1, 2 do\n        if lst1[i] % 2 == 0 then\n            even[i] = true\n\
    \        end\n    end\n    for i = 1, #lst2, 2 do\n        if lst2[i] % 2 == 0\
    \ then\n            even[i] = true\n        end\n    end\n    for i = 1, #lst1,\
    \ 2 do\n        if not even[i] then\n            return \"NO\"\n        end\n\
    \    end\n    return \"YES\"\nend", "    local even = true\n    for i = 1, #lst1\
    \ do\n        if lst1[i] % 2 == 0 then\n            even = false\n           \
    \ break\n        end\n    end\n    for i = 1, #lst2 do\n        if lst2[i] % 2\
    \ == 0 then\n            even = false\n            break\n        end\n    end\n\
    \    if even then\n        return \"YES\"\n    else\n        return \"NO\"\nend",
  "    local even = false\n    for i = 1, #lst1 do\n        if lst1[i] % 2 == 0 then\n\
    \            even = true\n            break\n        end\n    end\n    for i =\
    \ 1, #lst2 do\n        if lst2[i] % 2 == 0 then\n            even = true\n   \
    \         break\n        end\n    end\n    if even then\n        return \"YES\"\
    \n    else\n        return \"NO\"\n    end\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

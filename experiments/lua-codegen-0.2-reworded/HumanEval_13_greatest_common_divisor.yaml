name: HumanEval_13_greatest_common_divisor
language: lua
prompt: "-- Return a greatest common divisor of two integers a and b\n-- >>> greatest_common_divisor(3,\
  \ 5)\n-- 1\n-- >>> greatest_common_divisor(25, 15)\n-- 5\nlocal function greatest_common_divisor(a,\
  \ b)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n\
  \    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10, 15),\
  \ 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
  \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    if a < b then\n        return greatest_common_divisor(b, a)\n \
    \   end\n    return math.floor(a / b)\nend", "    local gcd = math.gcd(a, b)\n\
    \    return gcd\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    return math.floor(a / b)\nend", "    if a == 0 then return\
    \ b\n    if b == 0 then return a\n    return greatest_common_divisor(b, a % b)\n\
    end", "    local gcd = math.gcd(a, b)\n    return gcd\nend", "    if a == 0 then\
    \ return b\n    elseif b == 0 then return a\n    else return greatest_common_divisor(b,\
    \ a % b)\nend\n\"\"\"", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then return greatest_common_divisor(b, a)\n    if\
    \ b == 0 then return a\n    return greatest_common_divisor(b, a % b)\nend", " \
    \   if a < b then\n        return greatest_common_divisor(b, a)\n    end\n   \
    \ return math.floor(math.sqrt(a * a - b * b))\nend", "    if a < b then\n    \
    \    return greatest_common_divisor(b, a)\n    end\n    if b == 0 then\n     \
    \   return a\n    end\n    return greatest_common_divisor(b, a % b)\nend", " \
    \   if a < b then\n        return greatest_common_divisor(b, a)\n    end\n   \
    \ if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then return greatest_common_divisor(b, a)\n    if\
    \ b == 0 then return a\n    return greatest_common_divisor(b, a % b)\nend", " \
    \   if a < b then\n        return greatest_common_divisor(b, a)\n    end\n   \
    \ if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then return greatest_common_divisor(b, a)\n    if\
    \ b == 0 then return a\n    return greatest_common_divisor(b, a % b)\nend", " \
    \   if a < b then\n        return greatest_common_divisor(b, a)\n    end\n   \
    \ if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then return greatest_common_divisor(b, a)\n    if\
    \ b == 0 then return a\n    return greatest_common_divisor(b, a % b)\nend\n\"\"\
    \"", "    if a == 0 then return b\n    if b == 0 then return a\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a == 0 then return b\n    if b == 0 then return a\n  \
    \  return greatest_common_divisor(b, a % b)\nend", "    if a < b then\n      \
    \  return greatest_common_divisor(b, a)\n    end\n    if b == 0 then\n       \
    \ return a\n    end\n    return greatest_common_divisor(b, a % b)\nend", "   \
    \ if a < b then\n        return greatest_common_divisor(b, a)\n    end\n    if\
    \ b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    return math.floor(math.sqrt(a * a + b * b))\nend", "    if\
    \ a == 0 or b == 0 then\n        return math.max(a, b)\n    else\n        return\
    \ greatest_common_divisor(b, a % b)\n    end\nend", "    if a < b then\n     \
    \   return greatest_common_divisor(b, a)\n    end\n    if b == 0 then\n      \
    \  return a\n    end\n    return greatest_common_divisor(b, a % b)\nend", "  \
    \  if a == 0 then return b\n    elseif b == 0 then return a\n    else return greatest_common_divisor(b,\
    \ a % b)\nend", "    local gcd = math.gcd(a, b)\n    return gcd\nend", "    if\
    \ a < b then\n        return greatest_common_divisor(b, a)\n    end\n    if b\
    \ == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    local a_mod_b = a % b\n    local b_mod_a = b % a\n    if\
    \ a_mod_b == 0 and b_mod_a == 0 then\n        return a\n    else\n        return\
    \ greatest_common_divisor(b_mod_a, a_mod_b)\n    end\nend", "    local gcd = math.gcd(a,\
    \ b)\n    return gcd\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    return math.floor(math.sqrt(a * a + b * b))\nend", "    if\
    \ a < b then\n        return greatest_common_divisor(b, a)\n    end\n    if b\
    \ == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    return math.floor(math.sqrt(a * a - b * b))\nend", "    if\
    \ a < b then\n        return greatest_common_divisor(b, a)\n    end\n    if b\
    \ == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then return greatest_common_divisor(b, a)\n    if\
    \ b == 0 then return a\n    return greatest_common_divisor(b, a % b)\nend", " \
    \   if a < b then\n        return greatest_common_divisor(b, a)\n    end\n   \
    \ if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then return greatest_common_divisor(b, a)\n    if\
    \ b == 0 then return a\n    return greatest_common_divisor(b, a % b)\nend", " \
    \   if a < b then\n        return greatest_common_divisor(b, a)\n    end\n   \
    \ if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then return greatest_common_divisor(b, a)\n    if\
    \ b == 0 then return a\n    return greatest_common_divisor(b, a % b)\nend", " \
    \   if a < b then\n        return greatest_common_divisor(b, a)\n    end\n   \
    \ if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    return math.floor(a / b)\nend", "    if a < b then return greatest_common_divisor(b,\
    \ a)\n    if b == 0 then return a\n    return greatest_common_divisor(b, a % b)\n\
    end\n\"\"\"", "    if a < b then\n        return greatest_common_divisor(b, a)\n\
    \    end\n    if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then return greatest_common_divisor(b, a)\n    if\
    \ b == 0 then return a\n    return greatest_common_divisor(b, a % b)\nend", " \
    \   local gcd = math.gcd(a, b)\n    if gcd == 1 then\n        return a\n    else\n\
    \        return gcd\n    end\nend", "    if a < b then return greatest_common_divisor(b,\
    \ a)\n    if b == 0 then return a\n    return greatest_common_divisor(b, a % b)\n\
    end", "    if a == 0 and b == 0 then return 0 end\n    return math.floor(math.sqrt(a\
    \ * b))\nend", "    if a < b then\n        return greatest_common_divisor(b, a)\n\
    \    end\n    return math.floor(math.sqrt(a * a - b * b))\nend", "    if a < b\
    \ then\n        return greatest_common_divisor(b, a)\n    end\n    return math.gcd(a,\
    \ b)\nend", "    local gcd = math.gcd(a, b)\n    return gcd\nend", "    if a <\
    \ b then\n        return greatest_common_divisor(b, a)\n    end\n    return math.floor(math.sqrt(a\
    \ * a + b * b))\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then return greatest_common_divisor(b, a)\n    if\
    \ b == 0 then return a\n    return greatest_common_divisor(b, a % b)\nend", " \
    \   if a < b then\n        return greatest_common_divisor(b, a)\n    end\n   \
    \ if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a == 0 or b == 0 then return a or b end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    local gcd = math.gcd(a, b)\n    return gcd\nend", "    if\
    \ a < b then\n        return greatest_common_divisor(b, a)\n    end\n    if b\
    \ == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then return greatest_common_divisor(b, a)\n    if\
    \ b == 0 then return a\n    return greatest_common_divisor(b, a % b)\nend", " \
    \   if a < b then\n        return greatest_common_divisor(b, a)\n    end\n   \
    \ if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then return greatest_common_divisor(b, a)\n    if\
    \ b == 0 then return a\n    return greatest_common_divisor(b, a % b)\nend", " \
    \   if a < b then\n        return greatest_common_divisor(b, a)\n    end\n   \
    \ return math.floor(math.sqrt(a * a - b * b))\nend", "    local gcd = math.gcd(a,\
    \ b)\n    return gcd\nend", "    local gcd = math.gcd(a, b)\n    return gcd\n\
    end", "    if a == 0 then return b\n    elseif b == 0 then return a\n    else\
    \ return greatest_common_divisor(b, a % b)\nend", "    if a < b then\n       \
    \ return greatest_common_divisor(b, a)\n    end\n    if b == 0 then\n        return\
    \ a\n    end\n    return greatest_common_divisor(b, a % b)\nend", "    if a <\
    \ b then\n        return greatest_common_divisor(b, a)\n    end\n    if b == 0\
    \ then\n        return a\n    end\n    return greatest_common_divisor(b, a % b)\n\
    end", "    if a < b then\n        return greatest_common_divisor(b, a)\n    end\n\
    \    if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    local gcd = math.gcd(a, b)\n    return gcd\nend", "    if\
    \ a < b then\n        return greatest_common_divisor(b, a)\n    end\n    if b\
    \ == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then return greatest_common_divisor(b, a)\n    if\
    \ b == 0 then return a\n    return greatest_common_divisor(b, a % b)\nend", " \
    \   local gcd = 1\n    while a > 0 and b > 0 do\n        gcd = math.mod(a, b)\n\
    \        a = a / b\n        b = b / gcd\n    end\n    return gcd\nend", "    if\
    \ a < b then\n        return greatest_common_divisor(b, a)\n    end\n    if b\
    \ == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    return math.floor(math.sqrt(a * a - b * b))\nend", "    if\
    \ a == 0 then return b\n    elseif b == 0 then return a\n    else return greatest_common_divisor(b,\
    \ a % b)\nend\n\"\"\"", "    if a < b then return greatest_common_divisor(b, a)\n\
    \    if b == 0 then return a\n    return greatest_common_divisor(b, a % b)\nend",
  "    if a < b then\n        return greatest_common_divisor(b, a)\n    end\n    return\
    \ math.floor(math.sqrt(a * a - b * b))\nend", "    if a == 0 or b == 0 then return\
    \ a or b end\n    return greatest_common_divisor(b, a % b)\nend", "    if a <\
    \ b then return greatest_common_divisor(b, a)\n    if b == 0 then return a\n \
    \   return greatest_common_divisor(b, a % b)\nend", "    if a < b then\n     \
    \   return greatest_common_divisor(b, a)\n    end\n    if b == 0 then\n      \
    \  return a\n    end\n    return greatest_common_divisor(b, a % b)\nend", "  \
    \  if a == 0 then return b\n    elseif b == 0 then return a\n    else return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then return greatest_common_divisor(b, a)\n    if\
    \ b == 0 then return a\n    return greatest_common_divisor(b, a % b)\nend", " \
    \   if a < b then\n        return greatest_common_divisor(b, a)\n    end\n   \
    \ return math.floor(math.sqrt(a * a - b * b))\nend", "    if a < b then\n    \
    \    return greatest_common_divisor(b, a)\n    end\n    if b == 0 then\n     \
    \   return a\n    end\n    return greatest_common_divisor(b, a % b)\nend", " \
    \   if a < b then\n        return greatest_common_divisor(b, a)\n    end\n   \
    \ if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then return greatest_common_divisor(b, a)\n    if\
    \ b == 0 then return a\n    return greatest_common_divisor(b, a % b)\nend", " \
    \   if a < b then\n        return greatest_common_divisor(b, a)\n    end\n   \
    \ if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then return greatest_common_divisor(b, a)\n    if\
    \ b == 0 then return a\n    return greatest_common_divisor(b, a % b)\nend", " \
    \   if a < b then\n        return greatest_common_divisor(b, a)\n    end\n   \
    \ return math.floor(math.sqrt(a * a - b * b))\nend", "    if a < b then\n    \
    \    return greatest_common_divisor(b, a)\n    end\n    if b == 0 then\n     \
    \   return a\n    end\n    return greatest_common_divisor(b, a % b)\nend", " \
    \   if a < b then\n        return greatest_common_divisor(b, a)\n    end\n   \
    \ if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    return math.floor(math.sqrt(a * a - b * b))\nend", "    if\
    \ a < b then\n        return greatest_common_divisor(b, a)\n    end\n    if b\
    \ == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    return math.floor(math.sqrt(a * a + b * b))\nend", "    if\
    \ a < b then\n        return greatest_common_divisor(b, a)\n    end\n    if b\
    \ == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then return greatest_common_divisor(b, a)\n    if\
    \ b == 0 then return a\n    return greatest_common_divisor(b, a % b)\nend\n\"\"\
    \"", "    if a == 0 then return b\n    if b == 0 then return a\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    return math.floor(math.sqrt(a * a - b * b))\nend", "    if\
    \ a == 0 then return b\n    if b == 0 then return a\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a == 0 then return b\n    elseif b == 0 then return a\n\
    \    else return greatest_common_divisor(b, a % b)\nend", "    if a < b then return\
    \ greatest_common_divisor(b, a)\n    if b == 0 then return a\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then return greatest_common_divisor(b, a)\n    if\
    \ b == 0 then return a\n    return greatest_common_divisor(b, a % b)\nend", " \
    \   if a < b then\n        return greatest_common_divisor(b, a)\n    end\n   \
    \ if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a == 0 then return b\n    elseif b == 0 then return a\n\
    \    else return greatest_common_divisor(b, a % b)\nend", "    if a < b then\n\
    \        return greatest_common_divisor(b, a)\n    end\n    return math.floor(a\
    \ / b)\nend", "    local gcd = math.gcd(a, b)\n    return gcd\nend", "    if a\
    \ < b then\n        return greatest_common_divisor(b, a)\n    end\n    if b ==\
    \ 0 then\n        return a\n    end\n    return greatest_common_divisor(b, a %\
    \ b)\nend", "    if a < b then return greatest_common_divisor(b, a)\n    if b\
    \ == 0 then return a\n    return greatest_common_divisor(b, a % b)\nend\n\"\"\"",
  "    if a < b then\n        return greatest_common_divisor(b, a)\n    end\n    if\
    \ b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    local gcd = math.gcd(a, b)\n    return gcd\nend", "    if\
    \ a < b then\n        return greatest_common_divisor(b, a)\n    end\n    return\
    \ math.floor(math.sqrt(a * a - b * b))\nend", "    if a < b then\n        return\
    \ greatest_common_divisor(b, a)\n    end\n    if b == 0 then\n        return a\n\
    \    end\n    return greatest_common_divisor(b, a % b)\nend", "    if a < b then\n\
    \        return greatest_common_divisor(b, a)\n    end\n    if b == 0 then\n \
    \       return a\n    end\n    return greatest_common_divisor(b, a % b)\nend",
  "    if a < b then\n        return greatest_common_divisor(b, a)\n    end\n    if\
    \ b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a == 0 or b == 0 then\n        return a or b\n    end\n\
    \    return greatest_common_divisor(b, a % b)\nend", "    if a < b then\n    \
    \    return greatest_common_divisor(b, a)\n    end\n    if b == 0 then\n     \
    \   return a\n    end\n    return greatest_common_divisor(b, a % b)\nend", " \
    \   if a < b then\n        return greatest_common_divisor(b, a)\n    end\n   \
    \ if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    local gcd = math.gcd(a, b)\n    return gcd\nend", "    if\
    \ a < b then\n        return greatest_common_divisor(b, a)\n    end\n    if b\
    \ == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    local gcd = math.gcd(a, b)\n    return gcd\nend", "    if\
    \ a < b then\n        return greatest_common_divisor(b, a)\n    end\n    if b\
    \ == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then return greatest_common_divisor(b, a)\n    if\
    \ b == 0 then return a\n    return greatest_common_divisor(b, a % b)\nend", " \
    \   local gcd = math.min(a, b)\n    while a >= b do\n        a = a - b\n     \
    \   gcd = math.max(gcd, a)\n    end\n    return gcd\nend", "    local gcd = math.gcd(a,\
    \ b)\n    return gcd\nend", "    local gcd = math.gcd(a, b)\n    return gcd\n\
    end", "    if a == 0 then return b\n    if b == 0 then return a\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then return greatest_common_divisor(b, a)\n    if\
    \ b == 0 then return a\n    return greatest_common_divisor(b, a % b)\nend", " \
    \   local gcd = 1\n    while a > 0 and b > 0 do\n        if a > b then\n     \
    \       a = a - b\n        else\n            b = b - a\n        end\n        gcd\
    \ = gcd * a\n    end\n    return gcd\nend", "    if a < b then\n        return\
    \ greatest_common_divisor(b, a)\n    end\n    return math.floor(math.sqrt(a *\
    \ a - b * b))\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    return math.floor(math.sqrt(a * a - b * b))\nend", "    if\
    \ a < b then\n        return greatest_common_divisor(b, a)\n    end\n    if b\
    \ == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    return math.floor(a / b)\nend", "    if a < b then\n      \
    \  return greatest_common_divisor(b, a)\n    end\n    if b == 0 then\n       \
    \ return a\n    end\n    return greatest_common_divisor(b, a % b)\nend", "   \
    \ if a < b then\n        return greatest_common_divisor(b, a)\n    end\n    if\
    \ b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a == 0 then return b\n    if b == 0 then return a\n  \
    \  return greatest_common_divisor(b, a % b)\nend", "    if a < b then\n      \
    \  return greatest_common_divisor(b, a)\n    end\n    if b == 0 then\n       \
    \ return a\n    end\n    return greatest_common_divisor(b, a % b)\nend", "   \
    \ if a < b then\n        return greatest_common_divisor(b, a)\n    end\n    if\
    \ b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    local gcd = math.gcd(a, b)\n    return gcd\nend", "    if\
    \ a < b then\n        return greatest_common_divisor(b, a)\n    end\n    if b\
    \ == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a == 0 then return b\n    if b == 0 then return a\n  \
    \  return greatest_common_divisor(b, a % b)\nend", "    if a == 0 then return\
    \ b\n    elseif b == 0 then return a\n    else return greatest_common_divisor(b,\
    \ a % b)\nend\n\"\"\"", "    if a < b then return greatest_common_divisor(b, a)\n\
    \    if b == 0 then return a\n    return greatest_common_divisor(b, a % b)\nend",
  "    if a < b then\n        return greatest_common_divisor(b, a)\n    end\n    if\
    \ b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    return math.floor(math.sqrt(a * a - b * b))\nend", "    if\
    \ a < b then return greatest_common_divisor(b, a)\n    if b == 0 then return a\n\
    \    return greatest_common_divisor(b, a % b)\nend", "    if a < b then return\
    \ greatest_common_divisor(b, a)\n    if b == 0 then return a\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then return greatest_common_divisor(b, a)\n    if\
    \ b == 0 then return a\n    return greatest_common_divisor(b, a % b)\nend", " \
    \   if a < b then\n        return greatest_common_divisor(b, a)\n    end\n   \
    \ if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a == 0 or b == 0 then\n        return 0\n    end\n   \
    \ return math.floor(math.sqrt(a * b))\nend", "    if a == 0 and b == 0 then return\
    \ 0\n    if a == 0 then return b\n    if b == 0 then return a\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    return math.floor(math.sqrt(a * a + b * b))\nend", "    if\
    \ a < b then\n        return greatest_common_divisor(b, a)\n    end\n    return\
    \ math.floor(a / b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    return math.floor(math.sqrt(a * a - b * b))\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

{
  "language": "lua",
  "name": "HumanEval_91_is_bored",
  "results": [
    {
      "exit_code": 1,
      "program": "-- You'll be given a string of words, and your task is to count the number\n-- of boredoms. A boredom is a sentence that starts with the word \"I\".\n-- Sentences are delimited by '.', '?' or '!'.\n-- For example:\n-- >>> is_bored(\"Hello world\")\n-- 0\n-- >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n-- 1\nlocal function is_bored(S)\n    local words = string.gsub(S, \"^[^a-zA-Z]*\", \"\")\n    local count = 0\n    for i = 1, #words, 2 do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_bored\n    lu.assertEquals(candidate('Hello world'), 0)\n    lu.assertEquals(candidate('Is the sky blue?'), 0)\n    lu.assertEquals(candidate('I love It !'), 1)\n    lu.assertEquals(candidate('bIt'), 0)\n    lu.assertEquals(candidate('I feel good today. I will be productive. will kill It'), 2)\n    lu.assertEquals(candidate('You and I are going for a walk'), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxja0t1mn.lua:25: expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpxja0t1mn.lua:25: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661938055
    },
    {
      "exit_code": 1,
      "program": "-- You'll be given a string of words, and your task is to count the number\n-- of boredoms. A boredom is a sentence that starts with the word \"I\".\n-- Sentences are delimited by '.', '?' or '!'.\n-- For example:\n-- >>> is_bored(\"Hello world\")\n-- 0\n-- >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n-- 1\nlocal function is_bored(S)\n    local words = string.split(S, \" \")\n    local count = 0\n    for i = 1, #words, 1 do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_bored\n    lu.assertEquals(candidate('Hello world'), 0)\n    lu.assertEquals(candidate('Is the sky blue?'), 0)\n    lu.assertEquals(candidate('I love It !'), 1)\n    lu.assertEquals(candidate('bIt'), 0)\n    lu.assertEquals(candidate('I feel good today. I will be productive. will kill It'), 2)\n    lu.assertEquals(candidate('You and I are going for a walk'), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpr2it6tzq.lua:10: attempt to call a nil value (field 'split')\nstack traceback:\n\t/tmp/tmpr2it6tzq.lua:10: in local 'candidate'\n\t/tmp/tmpr2it6tzq.lua:23: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "timestamp": 1661938055
    },
    {
      "exit_code": 1,
      "program": "-- You'll be given a string of words, and your task is to count the number\n-- of boredoms. A boredom is a sentence that starts with the word \"I\".\n-- Sentences are delimited by '.', '?' or '!'.\n-- For example:\n-- >>> is_bored(\"Hello world\")\n-- 0\n-- >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n-- 1\nlocal function is_bored(S)\n    local words = string.gsub(S, '[^a-zA-Z0-9]', '')\n    local i = 1\n    for i = 1, #words, 2 do\n        if words[i] == 'I' then\n            return i\n        end\n    end\n    return 0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_bored\n    lu.assertEquals(candidate('Hello world'), 0)\n    lu.assertEquals(candidate('Is the sky blue?'), 0)\n    lu.assertEquals(candidate('I love It !'), 1)\n    lu.assertEquals(candidate('bIt'), 0)\n    lu.assertEquals(candidate('I feel good today. I will be productive. will kill It'), 2)\n    lu.assertEquals(candidate('You and I are going for a walk'), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp81ah0dda.lua:25: expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmp81ah0dda.lua:25: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661938055
    },
    {
      "exit_code": 1,
      "program": "-- You'll be given a string of words, and your task is to count the number\n-- of boredoms. A boredom is a sentence that starts with the word \"I\".\n-- Sentences are delimited by '.', '?' or '!'.\n-- For example:\n-- >>> is_bored(\"Hello world\")\n-- 0\n-- >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n-- 1\nlocal function is_bored(S)\n    local i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m,\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_bored\n    lu.assertEquals(candidate('Hello world'), 0)\n    lu.assertEquals(candidate('Is the sky blue?'), 0)\n    lu.assertEquals(candidate('I love It !'), 1)\n    lu.assertEquals(candidate('bIt'), 0)\n    lu.assertEquals(candidate('I feel good today. I will be productive. will kill It'), 2)\n    lu.assertEquals(candidate('You and I are going for a walk'), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpfvd4rdcs.lua:10: too many local variables (limit is 200) in function at line 9 near ','\n",
      "stdout": "",
      "timestamp": 1661938055
    },
    {
      "exit_code": 1,
      "program": "-- You'll be given a string of words, and your task is to count the number\n-- of boredoms. A boredom is a sentence that starts with the word \"I\".\n-- Sentences are delimited by '.', '?' or '!'.\n-- For example:\n-- >>> is_bored(\"Hello world\")\n-- 0\n-- >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n-- 1\nlocal function is_bored(S)\n    local words = string.split(S, \" \")\n    local count = 0\n    for i = 1, #words, 1 do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_bored\n    lu.assertEquals(candidate('Hello world'), 0)\n    lu.assertEquals(candidate('Is the sky blue?'), 0)\n    lu.assertEquals(candidate('I love It !'), 1)\n    lu.assertEquals(candidate('bIt'), 0)\n    lu.assertEquals(candidate('I feel good today. I will be productive. will kill It'), 2)\n    lu.assertEquals(candidate('You and I are going for a walk'), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpr2it6tzq.lua:10: attempt to call a nil value (field 'split')\nstack traceback:\n\t/tmp/tmpr2it6tzq.lua:10: in local 'candidate'\n\t/tmp/tmpr2it6tzq.lua:23: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "timestamp": 1661938055
    },
    {
      "exit_code": 1,
      "program": "-- You'll be given a string of words, and your task is to count the number\n-- of boredoms. A boredom is a sentence that starts with the word \"I\".\n-- Sentences are delimited by '.', '?' or '!'.\n-- For example:\n-- >>> is_bored(\"Hello world\")\n-- 0\n-- >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n-- 1\nlocal function is_bored(S)\n    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local i = 1\n    for _, word in pairs(words) do\n        if word == \"I\" then\n            return i\n        end\n        i = i + 1\n    end\n    return 0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_bored\n    lu.assertEquals(candidate('Hello world'), 0)\n    lu.assertEquals(candidate('Is the sky blue?'), 0)\n    lu.assertEquals(candidate('I love It !'), 1)\n    lu.assertEquals(candidate('bIt'), 0)\n    lu.assertEquals(candidate('I feel good today. I will be productive. will kill It'), 2)\n    lu.assertEquals(candidate('You and I are going for a walk'), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp1dwuwdud.lua:12: bad argument #1 to 'pairs' (table expected, got string)\nstack traceback:\n\t/tmp/tmp1dwuwdud.lua:12: in local 'candidate'\n\t/tmp/tmp1dwuwdud.lua:24: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "timestamp": 1661938055
    },
    {
      "exit_code": 1,
      "program": "-- You'll be given a string of words, and your task is to count the number\n-- of boredoms. A boredom is a sentence that starts with the word \"I\".\n-- Sentences are delimited by '.', '?' or '!'.\n-- For example:\n-- >>> is_bored(\"Hello world\")\n-- 0\n-- >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n-- 1\nlocal function is_bored(S)\n    local words = string.split(S, \".\")\n    local count = 0\n    for i = 1, #words, 2 do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_bored\n    lu.assertEquals(candidate('Hello world'), 0)\n    lu.assertEquals(candidate('Is the sky blue?'), 0)\n    lu.assertEquals(candidate('I love It !'), 1)\n    lu.assertEquals(candidate('bIt'), 0)\n    lu.assertEquals(candidate('I feel good today. I will be productive. will kill It'), 2)\n    lu.assertEquals(candidate('You and I are going for a walk'), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpuxlgmtab.lua:10: attempt to call a nil value (field 'split')\nstack traceback:\n\t/tmp/tmpuxlgmtab.lua:10: in local 'candidate'\n\t/tmp/tmpuxlgmtab.lua:23: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "timestamp": 1661938055
    },
    {
      "exit_code": 1,
      "program": "-- You'll be given a string of words, and your task is to count the number\n-- of boredoms. A boredom is a sentence that starts with the word \"I\".\n-- Sentences are delimited by '.', '?' or '!'.\n-- For example:\n-- >>> is_bored(\"Hello world\")\n-- 0\n-- >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n-- 1\nlocal function is_bored(S)\n    local i = 1\n    for inlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_bored\n    lu.assertEquals(candidate('Hello world'), 0)\n    lu.assertEquals(candidate('Is the sky blue?'), 0)\n    lu.assertEquals(candidate('I love It !'), 1)\n    lu.assertEquals(candidate('bIt'), 0)\n    lu.assertEquals(candidate('I feel good today. I will be productive. will kill It'), 2)\n    lu.assertEquals(candidate('You and I are going for a walk'), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmplx_t64og.lua:12: 'do' expected near '='\n",
      "stdout": "",
      "timestamp": 1661938055
    },
    {
      "exit_code": 1,
      "program": "-- You'll be given a string of words, and your task is to count the number\n-- of boredoms. A boredom is a sentence that starts with the word \"I\".\n-- Sentences are delimited by '.', '?' or '!'.\n-- For example:\n-- >>> is_bored(\"Hello world\")\n-- 0\n-- >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n-- 1\nlocal function is_bored(S)\n    local i, j, count = 1, 1, 0\n    for i = 1, #S, 2 do\n        if S[i] == '.' or S[i] == '?' or S[i] == '!' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_bored\n    lu.assertEquals(candidate('Hello world'), 0)\n    lu.assertEquals(candidate('Is the sky blue?'), 0)\n    lu.assertEquals(candidate('I love It !'), 1)\n    lu.assertEquals(candidate('bIt'), 0)\n    lu.assertEquals(candidate('I feel good today. I will be productive. will kill It'), 2)\n    lu.assertEquals(candidate('You and I are going for a walk'), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5atppdju.lua:24: expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmp5atppdju.lua:24: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661938055
    },
    {
      "exit_code": 1,
      "program": "-- You'll be given a string of words, and your task is to count the number\n-- of boredoms. A boredom is a sentence that starts with the word \"I\".\n-- Sentences are delimited by '.', '?' or '!'.\n-- For example:\n-- >>> is_bored(\"Hello world\")\n-- 0\n-- >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n-- 1\nlocal function is_bored(S)\n    local words = string.gsub(S, \"\\\\W+\", \"\")\n    local count = 0\n    for inlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_bored\n    lu.assertEquals(candidate('Hello world'), 0)\n    lu.assertEquals(candidate('Is the sky blue?'), 0)\n    lu.assertEquals(candidate('I love It !'), 1)\n    lu.assertEquals(candidate('bIt'), 0)\n    lu.assertEquals(candidate('I feel good today. I will be productive. will kill It'), 2)\n    lu.assertEquals(candidate('You and I are going for a walk'), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpn0h01k7k.lua:13: 'do' expected near '='\n",
      "stdout": "",
      "timestamp": 1661938055
    },
    {
      "exit_code": 1,
      "program": "-- You'll be given a string of words, and your task is to count the number\n-- of boredoms. A boredom is a sentence that starts with the word \"I\".\n-- Sentences are delimited by '.', '?' or '!'.\n-- For example:\n-- >>> is_bored(\"Hello world\")\n-- 0\n-- >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n-- 1\nlocal function is_bored(S)\n    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local i = 1\n    for k, v in pairs(words) do\n        if string.sub(v, 1, 1) == \"I\" then\n            i = i + 1\n        end\n    end\n    return i\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_bored\n    lu.assertEquals(candidate('Hello world'), 0)\n    lu.assertEquals(candidate('Is the sky blue?'), 0)\n    lu.assertEquals(candidate('I love It !'), 1)\n    lu.assertEquals(candidate('bIt'), 0)\n    lu.assertEquals(candidate('I feel good today. I will be productive. will kill It'), 2)\n    lu.assertEquals(candidate('You and I are going for a walk'), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpksd62f1l.lua:12: bad argument #1 to 'pairs' (table expected, got string)\nstack traceback:\n\t/tmp/tmpksd62f1l.lua:12: in local 'candidate'\n\t/tmp/tmpksd62f1l.lua:23: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "timestamp": 1661938055
    },
    {
      "exit_code": 1,
      "program": "-- You'll be given a string of words, and your task is to count the number\n-- of boredoms. A boredom is a sentence that starts with the word \"I\".\n-- Sentences are delimited by '.', '?' or '!'.\n-- For example:\n-- >>> is_bored(\"Hello world\")\n-- 0\n-- >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n-- 1\nlocal function is_bored(S)\n    local words = string.split(S, ' ')\n    local count = 0\n    for i, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'I' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_bored\n    lu.assertEquals(candidate('Hello world'), 0)\n    lu.assertEquals(candidate('Is the sky blue?'), 0)\n    lu.assertEquals(candidate('I love It !'), 1)\n    lu.assertEquals(candidate('bIt'), 0)\n    lu.assertEquals(candidate('I feel good today. I will be productive. will kill It'), 2)\n    lu.assertEquals(candidate('You and I are going for a walk'), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_6q8hz6d.lua:10: attempt to call a nil value (field 'split')\nstack traceback:\n\t/tmp/tmp_6q8hz6d.lua:10: in local 'candidate'\n\t/tmp/tmp_6q8hz6d.lua:23: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "timestamp": 1661938055
    },
    {
      "exit_code": 1,
      "program": "-- You'll be given a string of words, and your task is to count the number\n-- of boredoms. A boredom is a sentence that starts with the word \"I\".\n-- Sentences are delimited by '.', '?' or '!'.\n-- For example:\n-- >>> is_bored(\"Hello world\")\n-- 0\n-- >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n-- 1\nlocal function is_bored(S)\n    local words = string.gsub(S, '.', ' ')\n    local i = 1\n    for k, v in pairs(words) do\n        if v == 'I' then\n            i = i + 1\n        end\n    end\n    return i\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_bored\n    lu.assertEquals(candidate('Hello world'), 0)\n    lu.assertEquals(candidate('Is the sky blue?'), 0)\n    lu.assertEquals(candidate('I love It !'), 1)\n    lu.assertEquals(candidate('bIt'), 0)\n    lu.assertEquals(candidate('I feel good today. I will be productive. will kill It'), 2)\n    lu.assertEquals(candidate('You and I are going for a walk'), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpa1j82h2l.lua:12: bad argument #1 to 'pairs' (table expected, got string)\nstack traceback:\n\t/tmp/tmpa1j82h2l.lua:12: in local 'candidate'\n\t/tmp/tmpa1j82h2l.lua:23: in function 'test_humaneval'\n\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\n",
      "timestamp": 1661938055
    },
    {
      "exit_code": 1,
      "program": "-- You'll be given a string of words, and your task is to count the number\n-- of boredoms. A boredom is a sentence that starts with the word \"I\".\n-- Sentences are delimited by '.', '?' or '!'.\n-- For example:\n-- >>> is_bored(\"Hello world\")\n-- 0\n-- >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n-- 1\nlocal function is_bored(S)\n    local words = string.gmatch(S, '[^\\.]*')\n    return #words - #string.find(words, 'I')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_bored\n    lu.assertEquals(candidate('Hello world'), 0)\n    lu.assertEquals(candidate('Is the sky blue?'), 0)\n    lu.assertEquals(candidate('I love It !'), 1)\n    lu.assertEquals(candidate('bIt'), 0)\n    lu.assertEquals(candidate('I feel good today. I will be productive. will kill It'), 2)\n    lu.assertEquals(candidate('You and I are going for a walk'), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpldgev2sv.lua:10: invalid escape sequence near ''[^\\.'\n",
      "stdout": "",
      "timestamp": 1661938055
    },
    {
      "exit_code": 1,
      "program": "-- You'll be given a string of words, and your task is to count the number\n-- of boredoms. A boredom is a sentence that starts with the word \"I\".\n-- Sentences are delimited by '.', '?' or '!'.\n-- For example:\n-- >>> is_bored(\"Hello world\")\n-- 0\n-- >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n-- 1\nlocal function is_bored(S)\n    local i, j, count = 1, 1, 0\n    for i = 1, #S, 2 do\n        if S[i] == 'I' and S[i+1] == ' ' then\n            count = count + 1\n        end\n        if S[i] == '.' or S[i] == '?' or S[i] == '!' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_bored\n    lu.assertEquals(candidate('Hello world'), 0)\n    lu.assertEquals(candidate('Is the sky blue?'), 0)\n    lu.assertEquals(candidate('I love It !'), 1)\n    lu.assertEquals(candidate('bIt'), 0)\n    lu.assertEquals(candidate('I feel good today. I will be productive. will kill It'), 2)\n    lu.assertEquals(candidate('You and I are going for a walk'), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsxy60c8t.lua:27: expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpsxy60c8t.lua:27: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661938055
    },
    {
      "exit_code": 1,
      "program": "-- You'll be given a string of words, and your task is to count the number\n-- of boredoms. A boredom is a sentence that starts with the word \"I\".\n-- Sentences are delimited by '.', '?' or '!'.\n-- For example:\n-- >>> is_bored(\"Hello world\")\n-- 0\n-- >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n-- 1\nlocal function is_bored(S)\n    local words = string.gsub(S, '[^a-zA-Z0-9]', '')\n    local count = 0\n    for i = 1, #words, 2 do\n        if words[i] == 'I' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_bored\n    lu.assertEquals(candidate('Hello world'), 0)\n    lu.assertEquals(candidate('Is the sky blue?'), 0)\n    lu.assertEquals(candidate('I love It !'), 1)\n    lu.assertEquals(candidate('bIt'), 0)\n    lu.assertEquals(candidate('I feel good today. I will be productive. will kill It'), 2)\n    lu.assertEquals(candidate('You and I are going for a walk'), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphb0gc3ej.lua:25: expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmphb0gc3ej.lua:25: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661938055
    },
    {
      "exit_code": 1,
      "program": "-- You'll be given a string of words, and your task is to count the number\n-- of boredoms. A boredom is a sentence that starts with the word \"I\".\n-- Sentences are delimited by '.', '?' or '!'.\n-- For example:\n-- >>> is_bored(\"Hello world\")\n-- 0\n-- >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n-- 1\nlocal function is_bored(S)\n    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local i = 1\n    for w in words:\n        if w == \"I\":\n            i = i + 1\n    return i\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_bored\n    lu.assertEquals(candidate('Hello world'), 0)\n    lu.assertEquals(candidate('Is the sky blue?'), 0)\n    lu.assertEquals(candidate('I love It !'), 1)\n    lu.assertEquals(candidate('bIt'), 0)\n    lu.assertEquals(candidate('I feel good today. I will be productive. will kill It'), 2)\n    lu.assertEquals(candidate('You and I are going for a walk'), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmp5zjj4o83.lua:13: <name> expected near 'if'\n",
      "stdout": "",
      "timestamp": 1661938055
    },
    {
      "exit_code": 1,
      "program": "-- You'll be given a string of words, and your task is to count the number\n-- of boredoms. A boredom is a sentence that starts with the word \"I\".\n-- Sentences are delimited by '.', '?' or '!'.\n-- For example:\n-- >>> is_bored(\"Hello world\")\n-- 0\n-- >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n-- 1\nlocal function is_bored(S)\n    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_bored\n    lu.assertEquals(candidate('Hello world'), 0)\n    lu.assertEquals(candidate('Is the sky blue?'), 0)\n    lu.assertEquals(candidate('I love It !'), 1)\n    lu.assertEquals(candidate('bIt'), 0)\n    lu.assertEquals(candidate('I feel good today. I will be productive. will kill It'), 2)\n    lu.assertEquals(candidate('You and I are going for a walk'), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpg93xqp5t.lua:35: ')' expected (to close '(' at line 34) near '='\n",
      "stdout": "",
      "timestamp": 1661938055
    },
    {
      "exit_code": 1,
      "program": "-- You'll be given a string of words, and your task is to count the number\n-- of boredoms. A boredom is a sentence that starts with the word \"I\".\n-- Sentences are delimited by '.', '?' or '!'.\n-- For example:\n-- >>> is_bored(\"Hello world\")\n-- 0\n-- >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n-- 1\nlocal function is_bored(S)\n    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\.|\\\\?|!|\\\\s\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    return string.count(words, \" \")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_bored\n    lu.assertEquals(candidate('Hello world'), 0)\n    lu.assertEquals(candidate('Is the sky blue?'), 0)\n    lu.assertEquals(candidate('I love It !'), 1)\n    lu.assertEquals(candidate('bIt'), 0)\n    lu.assertEquals(candidate('I feel good today. I will be productive. will kill It'), 2)\n    lu.assertEquals(candidate('You and I are going for a walk'), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpwkm2bwnv.lua:13: attempt to call a nil value (field 'count')\nstack traceback:\n\t/tmp/tmpwkm2bwnv.lua:13: in local 'candidate'\n\t/tmp/tmpwkm2bwnv.lua:19: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "timestamp": 1661938055
    },
    {
      "exit_code": 1,
      "program": "-- You'll be given a string of words, and your task is to count the number\n-- of boredoms. A boredom is a sentence that starts with the word \"I\".\n-- Sentences are delimited by '.', '?' or '!'.\n-- For example:\n-- >>> is_bored(\"Hello world\")\n-- 0\n-- >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n-- 1\nlocal function is_bored(S)\n    local words = string.gsub(S, \"\\\\.|\\\\?|!\", \" \")\n    local count = 0\n    for inlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_bored\n    lu.assertEquals(candidate('Hello world'), 0)\n    lu.assertEquals(candidate('Is the sky blue?'), 0)\n    lu.assertEquals(candidate('I love It !'), 1)\n    lu.assertEquals(candidate('bIt'), 0)\n    lu.assertEquals(candidate('I feel good today. I will be productive. will kill It'), 2)\n    lu.assertEquals(candidate('You and I are going for a walk'), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmph_ejcvwa.lua:13: 'do' expected near '='\n",
      "stdout": "",
      "timestamp": 1661938055
    }
  ]
}
{
  "name": "HumanEval_141_file_name_check",
  "language": "lua",
  "prompt": "-- Create a function which takes a string representing a file's name, and returns\n-- 'Yes' if the the file's name is valid, and returns 'No' otherwise.\n-- A file's name is considered to be valid if and only if all the following conditions \n-- are met:\n-- - There should not be more than three digits ('0'-'9') in the file's name.\n-- - The file's name contains exactly one dot '.'\n-- - The substring before the dot should not be empty, and it starts with a letter from \n-- the latin alphapet ('a'-'z' and 'A'-'Z').\n-- - The substring after the dot should be one of these: ['txt', 'exe', 'dll']\n-- Examples:\n-- >>> file_name_check(\"example.txt\")\n-- 'Yes'\n-- >>> file_name_check(\"1example.dll\")\n-- 'No'\nlocal function file_name_check(file_name)\n",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = file_name_check\n    lu.assertEquals(candidate('example.txt'), 'Yes')\n    lu.assertEquals(candidate('1example.dll'), 'No')\n    lu.assertEquals(candidate('s1sdf3.asd'), 'No')\n    lu.assertEquals(candidate('K.dll'), 'Yes')\n    lu.assertEquals(candidate('MY16FILE3.exe'), 'Yes')\n    lu.assertEquals(candidate('His12FILE94.exe'), 'No')\n    lu.assertEquals(candidate('_Y.txt'), 'No')\n    lu.assertEquals(candidate('?aREYA.exe'), 'No')\n    lu.assertEquals(candidate('/this_is_valid.dll'), 'No')\n    lu.assertEquals(candidate('this_is_valid.wow'), 'No')\n    lu.assertEquals(candidate('this_is_valid.txt'), 'Yes')\n    lu.assertEquals(candidate('this_is_valid.txtexe'), 'No')\n    lu.assertEquals(candidate('#this2_i4s_5valid.ten'), 'No')\n    lu.assertEquals(candidate('@this1_is6_valid.exe'), 'No')\n    lu.assertEquals(candidate('this_is_12valid.6exe4.txt'), 'No')\n    lu.assertEquals(candidate('all.exe.txt'), 'No')\n    lu.assertEquals(candidate('I563_No.exe'), 'Yes')\n    lu.assertEquals(candidate('Is3youfault.txt'), 'Yes')\n    lu.assertEquals(candidate('no_one#knows.dll'), 'Yes')\n    lu.assertEquals(candidate('1I563_Yes3.exe'), 'No')\n    lu.assertEquals(candidate('I563_Yes3.txtt'), 'No')\n    lu.assertEquals(candidate('final..txt'), 'No')\n    lu.assertEquals(candidate('final132'), 'No')\n    lu.assertEquals(candidate('_f4indsartal132.'), 'No')\n    lu.assertEquals(candidate('.txt'), 'No')\n    lu.assertEquals(candidate('s.'), 'No')\nend\n\nos.exit(lu.LuaUnit.run())",
  "completions": [
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}[.]') then\n        return 'No'\n    end\n    local dot_index = string.find(file_name, '.')\n    if dot_index == nil then\n        return 'No'\n    end\n    local dot_substring = string.sub(file_name, 1, dot_index)\n    if not(dot_substring) then\n        return 'No'\n    end\n    local dot_substring_upper = string.upper(dot_substring)\n    if not(dot_substring_upper) then\n        return 'No'\n    end\n    if not(dot_substring_upper:match('[A-Z][A-Z][A-Z]$')) then\n        return 'No'\n    end\n    local extension = string.sub(file_name, dot_index + 1, #file_name)\n    if not(extension) then\n        return 'No'\n    end\n    if not(extension:match('^[tx][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x][e][x",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= string.gsub(file_name, '^[0-9]+', '') then\n        return 'No'\n    end\n    if not string.sub(file_name, 1, 1) ~= string.gsub(file_name, '^[a-zA-Z]', '') then\n        return 'No'\n    end\n    if string.sub(file_name, -3, -1) ~= 'txt' and string.sub(file_name, -3, -1) ~= 'exe' and string.sub(file_name, -3, -1) ~= 'dll' then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if string.len(file_name) > 3 then\n        return 'No'\n    end\n    if string.len(file_name) < 3 then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 2) == '0' then\n        return 'No'\n    end\n    if string.sub(file_name, 2, 3) == '.' then\n        return 'No'\n    end\n    if string.sub(file_name, string.len(file_name) - 2, string.len(file_name)) == '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 1) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, string.len(file_name) - 3, string.len(file_name)) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 1) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, string.len(file_name) - 3, string.len(file_name)) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 1) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, string.len(file_name) - 3, string.len(file_name)) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 1) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, string.len(file_name) - 3, string.len(file_name)) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 1) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, string.len(file_name) - 3, string.len(file_name)) ~= '.' then\n        return 'No'\n    end\n    ",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}[.]') then\n        return 'No'\n    end\n    local dot_index = string.find(file_name, '.')\n    if dot_index == nil then\n        return 'No'\n    end\n    local before_dot = string.sub(file_name, 1, dot_index)\n    if not string.sub(before_dot, 1, 1) ~= '[' then\n        return 'No'\n    end\n    local after_dot = string.sub(file_name, dot_index + 1)\n    if not string.sub(after_dot, 1, 1) ~= '[' then\n        return 'No'\n    end\n    if after_dot ~= 'txt' and after_dot ~= 'exe' and after_dot ~= 'dll' then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if string.len(file_name) > 3 then\n        return 'No'\n    end\n    if string.len(file_name) < 3 then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 2) == '0' or string.sub(file_name, 1, 2) == '1' or string.sub(file_name, 1, 2) == '2' or string.sub(file_name, 1, 2) == '3' or string.sub(file_name, 1, 2) == '4' or string.sub(file_name, 1, 2) == '5' or string.sub(file_name, 1, 2) == '6' or string.sub(file_name, 1, 2) == '7' or string.sub(file_name, 1, 2) == '8' or string.sub(file_name, 1, 2) == '9' then\n        return 'No'\n    end\n    if string.sub(file_name, string.len(file_name) - 1, 1) == '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 1) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 2, 1) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 3, 1) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 4, 1) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 5, 1) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 6, 1) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 7, 1) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 8, 1) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 9, 1) ~",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('[0-9]+') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*[.]') then\n        return 'No'\n    end\n    if file_name:match('[.](txt|exe|dll)$') then\n        return 'Yes'\n    end\n    return 'No'\nend",
    "    if #file_name > 3 then\n        return 'No'\n    end\n    if file_name ~= '.' then\n        return 'No'\n    end\n    local dot_index = string.find(file_name, '.')\n    if dot_index == nil then\n        return 'No'\n    end\n    local file_name_before_dot = string.sub(file_name, 1, dot_index)\n    if not file_name_before_dot then\n        return 'No'\n    end\n    local file_name_after_dot = string.sub(file_name, dot_index + 1)\n    if file_name_after_dot ~= 'txt' and file_name_after_dot ~= 'exe' and file_name_after_dot ~= 'dll' then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('[0-9]+') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9.]*$') then\n        return 'Yes'\n    end\n    return 'No'\nend",
    "    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end",
    "    local valid = true\n    local dot_index = string.find(file_name, '.')\n    local dot_index_2 = string.find(file_name, '..')\n    local dot_index_3 = string.find(file_name, '...')\n    local dot_index_4 = string.find(file_name, '....')\n    local dot_index_5 = string.find(file_name, '....')\n    local dot_index_6 = string.find(file_name, '.....')\n    local dot_index_7 = string.find(file_name, '.....')\n    local dot_index_8 = string.find(file_name, '......')\n    local dot_index_9 = string.find(file_name, '......')\n    local dot_index_10 = string.find(file_name, '.......')\n    local dot_index_11 = string.find(file_name, '.......')\n    local dot_index_12 = string.find(file_name, '........')\n    local dot_index_13 = string.find(file_name, '........')\n    local dot_index_14 = string.find(file_name, '.........')\n    local dot_index_15 = string.find(file_name, '.........')\n    local dot_index_16 = string.find(file_name, '..........')\n    local dot_index_17 = string.find(file_name, '..........')\n    local dot_index_18 = string.find(file_name, '...........')\n    local dot_index_19 = string.find(file_name, '...........')\n    local dot_index_20 = string.find(file_name, '............')\n    local dot_index_21 = string.find(file_name, '............')\n    local dot_index_22 = string.find(file_name, '.............')\n    local dot_index_23 = string.find(file_name, '.............')\n    local dot_index_24 = string.find(file_name, '..............')\n    local dot_index_25 = string.find",
    "    if string.len(file_name) > 3 then\n        return 'No'\n    end\n    if string.len(file_name) < 3 then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 2) == '0' or string.sub(file_name, 1, 2) == '1' or string.sub(file_name, 1, 2) == '2' or string.sub(file_name, 1, 2) == '3' or string.sub(file_name, 1, 2) == '4' or string.sub(file_name, 1, 2) == '5' or string.sub(file_name, 1, 2) == '6' or string.sub(file_name, 1, 2) == '7' or string.sub(file_name, 1, 2) == '8' or string.sub(file_name, 1, 2) == '9' then\n        return 'No'\n    end\n    if string.sub(file_name, string.len(file_name) - 2, string.len(file_name)) == 'txt' or string.sub(file_name, string.len(file_name) - 2, string.len(file_name)) == 'exe' or string.sub(file_name, string.len(file_name) - 2, string.len(file_name)) == 'dll' then\n        return 'Yes'\n    end\n    return 'No'\nend",
    "    local valid = true\n    local dot_index = string.find(file_name, '.')\n    if dot_index == nil then\n        valid = false\n    else\n        local before_dot = string.sub(file_name, 1, dot_index)\n        local after_dot = string.sub(file_name, dot_index + 1)\n        if string.len(before_dot) > 3 then\n            valid = false\n        elseif string.len(before_dot) == 0 then\n            valid = false\n        elseif string.sub(before_dot, 1, 1) ~= 'a' .. 'z' and string.sub(before_dot, 1, 1) ~= 'A' .. 'Z' then\n            valid = false\n        elseif string.len(after_dot) > 3 then\n            valid = false\n        elseif string.len(after_dot) == 0 then\n            valid = false\n        elseif string.sub(after_dot, 1, 1) ~= 'a' .. 'z' and string.sub(after_dot, 1, 1) ~= 'A' .. 'Z' then\n            valid = false\n        elseif string.sub(after_dot, 1, 1) ~= '0' .. '9' then\n            valid = false\n        elseif string.sub(after_dot, 1, 1) == '.' then\n            valid = false\n        elseif string.sub(after_dot, 1, 1) == '_' then\n            valid = false\n        elseif string.sub(after_dot, 1, 1) == '-' then\n            valid = false\n        elseif string.sub(after_dot, 1, 1) == '.' then\n            valid = false\n        elseif string.sub(after_dot, 1, 1) == '.' then\n            valid = false\n        elseif string.sub(after_dot, 1, 1) == '.' then\n            valid = false\n        elseif string.sub(after_dot, 1, 1) == '.' then\n            valid = false\n        elseif string.sub(after_dot, 1, 1) == '.' then\n            valid = false\n        elseif string.sub(after_dot, 1",
    "    if string.len(file_name) > 3 and string.sub(file_name, 1, 3) ~= \"0-9\" then\n        return \"No\"\n    end\n    if string.count(file_name, \".\") != 1 then\n        return \"No\"\n    end\n    if string.sub(file_name, string.index(file_name, \".\") + 1) ~= \"txt\" and\n        string.sub(file_name, string.index(file_name, \".\") + 1) ~= \"exe\" and\n        string.sub(file_name, string.index(file_name, \".\") + 1) ~= \"dll\" then\n        return \"No\"\n    end\n    return \"Yes\"\nend",
    "    local valid = true\n    local dot_index = string.find(file_name, '.')\n    local dot_substring = string.sub(file_name, 1, dot_index)\n    local dot_substring_length = #dot_substring\n    local dot_substring_upper = string.upper(dot_substring)\n    local dot_substring_lower = string.lower(dot_substring)\n    local dot_substring_upper_length = #dot_substring_upper\n    local dot_substring_lower_length = #dot_substring_lower\n    local is_valid_substring = (dot_substring_upper_length == 1 and dot_substring_upper == 'T' and dot_substring_lower_length == 1 and dot_substring_lower == 'X') or (dot_substring_upper_length == 1 and dot_substring_upper == 'E' and dot_substring_lower_length == 1 and dot_substring_lower == 'X') or (dot_substring_upper_length == 1 and dot_substring_upper == 'D' and dot_substring_lower_length == 1 and dot_substring_lower == 'L')\n    local is_valid_substring_length = #is_valid_substring\n    if dot_index == nil or dot_substring == nil or dot_substring_length == 0 or dot_substring_upper_length == 0 or dot_substring_lower_length == 0 or is_valid_substring_length == 0 or not is_valid_substring then\n        valid = false\n    end\n    return valid\nend",
    "    local valid = true\n    local dot_index = string.find(file_name, '.')\n    local dot_substring = string.sub(file_name, 1, dot_index)\n    local dot_substring_length = #dot_substring\n    local dot_substring_upper = string.upper(dot_substring)\n    local dot_substring_lower = string.lower(dot_substring)\n    local dot_substring_upper_length = #dot_substring_upper\n    local dot_substring_lower_length = #dot_substring_lower\n    local dot_substring_upper_start = string.find(dot_substring_upper, 'A')\n    local dot_substring_lower_start = string.find(dot_substring_lower, 'a')\n    local dot_substring_upper_end = string.find(dot_substring_upper, 'Z')\n    local dot_substring_lower_end = string.find(dot_substring_lower, 'z')\n    local dot_substring_upper_start_length = #dot_substring_upper_start\n    local dot_substring_lower_start_length = #dot_substring_lower_start\n    local dot_substring_upper_end_length = #dot_substring_upper_end\n    local dot_substring_lower_end_length = #dot_substring_lower_end\n    if dot_substring_length > 3 or dot_substring_upper_length != dot_substring_lower_length or dot_substring_upper_start > dot_substring_lower_start or dot_substring_upper_end > dot_substring_lower_end or dot_substring_upper_start_length != dot_substring_lower_start_length or dot_substring_upper_end_length != dot_substring_lower_end_length then\n        valid = false\n    end\n    return valid\nend",
    "    local valid = true\n    local dot_index = string.find(file_name, '.')\n    local dot_index_2 = string.find(file_name, '..')\n    local dot_index_3 = string.find(file_name, '...')\n    local dot_index_4 = string.find(file_name, '....')\n    local dot_index_5 = string.find(file_name, '.....')\n    local dot_index_6 = string.find(file_name, '......')\n    local dot_index_7 = string.find(file_name, '........')\n    local dot_index_8 = string.find(file_name, '..........')\n    local dot_index_9 = string.find(file_name, '...........')\n    local dot_index_10 = string.find(file_name, '............')\n    local dot_index_11 = string.find(file_name, '..............')\n    local dot_index_12 = string.find(file_name, '.............')\n    local dot_index_13 = string.find(file_name, '..............')\n    local dot_index_14 = string.find(file_name, '...............')\n    local dot_index_15 = string.find(file_name, '................')\n    local dot_index_16 = string.find(file_name, '.................')\n    local dot_index_17 = string.find(file_name, '..................')\n    local dot_index_18 = string.find(file_name, '...................')\n    local dot_index_19 = string.find(file_name, '....................')\n    local dot_index_20 = string.find(file_name, '.....................')\n    local dot_index_21 = string.find(file_name, '......................')\n    local dot_index_22 = string.find(file_name, '.......................')\n    local dot_index_23 = string.find(file_name, '........................')\n    local dot_index_24 =",
    "    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name ~= 1 then\n        return 'No'\n    end\n    if file_name:sub(1,1) ~= 'a' .. 'z' and file_name:sub(1,1) ~= 'A' .. 'Z' then\n        return 'No'\n    end\n    if file_name:sub(2,2) ~= '0' .. '9' then\n        return 'No'\n    end\n    if file_name:sub(3,3) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(4,4) ~= 'txt' and file_name:sub(4,4) ~= 'exe' and file_name:sub(4,4) ~= 'dll' then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= string.gsub(file_name, '^[0-9]*.', '') then\n        return 'No'\n    end\n    if not string.gsub(file_name, '^[a-zA-Z]*.', '') then\n        return 'No'\n    end\n    if string.gsub(file_name, '\\.txt$', '') then\n        return 'Yes'\n    end\n    if string.gsub(file_name, '\\.exe$', '') then\n        return 'Yes'\n    end\n    if string.gsub(file_name, '\\.dll$', '') then\n        return 'Yes'\n    end\n    return 'No'\nend",
    "    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name < 2 then\n        return 'No'\n    end\n    if file_name:sub(1,1) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(2,2) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(3,3) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(4,4) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(5,5) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(6,6) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(7,7) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(8,8) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(9,9) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(10,10) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(11,11) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(12,12) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(13,13) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(14,14) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(15,15) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(16,16) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(17,17) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(18,18) ~= '",
    "    if #file_name > 3 then\n        return 'No'\n    end\n    if file_name ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 1) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 2, 2) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 3, 3) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 4, 4) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 5, 5) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 6, 6) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 7, 7) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 8, 8) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 9, 9) ~= '.' then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= string.gsub(file_name, '^[0-9]*.', '') then\n        return 'No'\n    end\n    if not string.sub(file_name, 1, 1) ~= string.gsub(file_name, '^[a-zA-Z]*.', '') then\n        return 'No'\n    end\n    if string.sub(file_name, -3, -1) ~= 'txt' and string.sub(file_name, -3, -1) ~= 'exe' and string.sub(file_name, -3, -1) ~= 'dll' then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= string.gsub(file_name, '^[0-9]+.', '') then\n        return 'No'\n    end\n    if not string.gsub(file_name, '^[a-zA-Z]+.', '') then\n        return 'No'\n    end\n    if not string.gsub(file_name, '^[a-zA-Z]+\\\\.[txt|exe|dll]$', '') then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]*$') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\.txt$') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\.exe$') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\.dll$') then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    local valid = true\n    local dot_index = string.find(file_name, '.')\n    local dot_substring = string.sub(file_name, 1, dot_index)\n    local dot_substring_length = #dot_substring\n    local dot_substring_upper = string.upper(dot_substring)\n    local dot_substring_lower = string.lower(dot_substring)\n    local dot_substring_lower_length = #dot_substring_lower\n    local dot_substring_upper_length = #dot_substring_upper\n    local dot_substring_lower_index = string.find(dot_substring_lower, '.')\n    local dot_substring_upper_index = string.find(dot_substring_upper, '.')\n    local dot_substring_lower_index_length = #dot_substring_lower_index\n    local dot_substring_upper_index_length = #dot_substring_upper_index\n    local dot_substring_lower_index_upper = string.sub(dot_substring_lower_index, 1, dot_substring_lower_index_length)\n    local dot_substring_upper_index_lower = string.sub(dot_substring_upper_index, 1, dot_substring_upper_index_length)\n    local dot_substring_lower_index_upper_length = #dot_substring_lower_index_upper\n    local dot_substring_upper_index_lower_length = #dot_substring_upper_index_lower\n    local dot_substring_lower_index_upper_index = string.find(dot_substring_lower_index_upper, '.')\n    local dot_substring_upper_index_lower_index = string.find(dot_substring_upper_index_lower, '.')\n    local dot_substring_lower_index_upper_index_length = #dot_substring_lower_index_upper_index\n    local dot_substring_upper_index_lower_index_length = #dot_substring_upper_index_lower_index\n    local dot_substring_lower_index_upper_",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}[.]') then\n        return 'No'\n    end\n    if not file_name:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    if not file_name:match('[.](txt|exe|dll)$') then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]+[a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]') and file_name:match('[0-9]+[a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]') and file_name:match('[0-9]+[a-zA-Z]') and file_name:match('[a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]') and file_name:match('[0-9]+[a-zA-Z]') and file_name:match('[a-zA-Z]') and file_name:match('[0-9]+[a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]') and file_name:match('[0-9]+[a-zA-Z]') and file_name:match('[a-zA-Z]') and file_name:match('[0-9]+[a-zA-Z]') and file_name:match('[a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]') and file_name:match('[0-9]+[a-zA-Z]') and file_name:match('[a-zA-Z]') and file_name:match('[0-9]+[a-zA-Z]') and file_name:match('[a-zA-Z]') and file_name:match('[0-9]+[a-zA-Z]') then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= string.gsub(file_name, '^[0-9]', '') then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 1) ~= string.gsub(file_name, '^[a-zA-Z]', '') then\n        return 'No'\n    end\n    if string.sub(file_name, 2, 2) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 3, 3) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 4, 4) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 5, 5) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 6, 6) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 7, 7) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 8, 8) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 9, 9) ~= '.' then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    local valid = true\n    local dot_index = string.find(file_name, '.')\n    local dot_substring = string.sub(file_name, 1, dot_index)\n    local dot_substring_length = #dot_substring\n    local dot_substring_upper = string.upper(dot_substring)\n    local dot_substring_lower = string.lower(dot_substring)\n    local dot_substring_upper_length = #dot_substring_upper\n    local dot_substring_lower_length = #dot_substring_lower\n    local dot_substring_upper_index = string.find(dot_substring_upper, '.')\n    local dot_substring_lower_index = string.find(dot_substring_lower, '.')\n    local dot_substring_upper_index_length = #dot_substring_upper_index\n    local dot_substring_lower_index_length = #dot_substring_lower_index\n    local dot_substring_upper_index_index = string.find(dot_substring_upper, 'a')\n    local dot_substring_lower_index_index = string.find(dot_substring_lower, 'a')\n    local dot_substring_upper_index_index_length = #dot_substring_upper_index_index\n    local dot_substring_lower_index_index_length = #dot_substring_lower_index_index\n    local dot_substring_upper_index_index_index = string.find(dot_substring_upper, 'A')\n    local dot_substring_lower_index_index_index = string.find(dot_substring_lower, 'A')\n    local dot_substring_upper_index_index_index_length = #dot_substring_upper_index_index_index\n    local dot_substring_lower_index_index_index_length = #dot_substring_lower_index_index_index\n    local dot_substring_upper_index_index_index_index = string.find(dot_substring_upper, 'Z')\n    local dot_substring_lower_index_index_",
    "    local valid = true\n    local dot_index = string.find(file_name, '.')\n    local dot_before_index = string.find(file_name, '.', 1, dot_index)\n    local dot_after_index = string.find(file_name, '.', dot_index + 1)\n    local dot_before_length = dot_before_index + 1\n    local dot_after_length = dot_after_index - dot_before_length\n    local dot_before_char = string.char(file_name, dot_before_index)\n    local dot_after_char = string.char(file_name, dot_after_index)\n    local dot_before_char_upper = string.char(file_name, dot_before_index + 1)\n    local dot_after_char_upper = string.char(file_name, dot_after_index + 1)\n    local dot_before_char_lower = string.char(file_name, dot_before_index + 2)\n    local dot_after_char_lower = string.char(file_name, dot_after_index + 2)\n    local dot_before_char_digit = string.char(file_name, dot_before_index + 2)\n    local dot_after_char_digit = string.char(file_name, dot_after_index + 2)\n    local dot_before_char_letter = string.char(file_name, dot_before_index + 2)\n    local dot_after_char_letter = string.char(file_name, dot_after_index + 2)\n    local dot_before_char_letter_upper = string.char(file_name, dot_before_index + 3)\n    local dot_after_char_letter_upper = string.char(file_name, dot_after_index + 3)\n    local dot_before_char_letter_lower = string.char(file_name, dot_before_index + 3)\n    local dot_after_char_letter_lower = string.char(file_name, dot_after_index + 3)\n    local dot_before_char_letter_digit = string.char(file_name, dot_",
    "    if string.len(file_name) > 3 then\n        return 'No'\n    end\n    if string.len(file_name) < 3 then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 2) == '0' or string.sub(file_name, 1, 2) == '1' or string.sub(file_name, 1, 2) == '2' or string.sub(file_name, 1, 2) == '3' or string.sub(file_name, 1, 2) == '4' or string.sub(file_name, 1, 2) == '5' or string.sub(file_name, 1, 2) == '6' or string.sub(file_name, 1, 2) == '7' or string.sub(file_name, 1, 2) == '8' or string.sub(file_name, 1, 2) == '9' then\n        return 'No'\n    end\n    if string.sub(file_name, string.len(file_name) - 2, string.len(file_name)) == 'txt' then\n        return 'Yes'\n    elseif string.sub(file_name, string.len(file_name) - 2, string.len(file_name)) == 'exe' then\n        return 'Yes'\n    elseif string.sub(file_name, string.len(file_name) - 2, string.len(file_name)) == 'dll' then\n        return 'Yes'\n    else\n        return 'No'\n    end\nend",
    "    if string.len(file_name) > 3 then\n        return 'No'\n    end\n    if string.len(file_name) < 3 then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 2) == '0' or string.sub(file_name, 1, 2) == '1' or string.sub(file_name, 1, 2) == '2' or string.sub(file_name, 1, 2) == '3' or string.sub(file_name, 1, 2) == '4' or string.sub(file_name, 1, 2) == '5' or string.sub(file_name, 1, 2) == '6' or string.sub(file_name, 1, 2) == '7' or string.sub(file_name, 1, 2) == '8' or string.sub(file_name, 1, 2) == '9' then\n        return 'No'\n    end\n    if string.sub(file_name, string.len(file_name) - 2, string.len(file_name)) == 'txt' then\n        return 'Yes'\n    end\n    if string.sub(file_name, string.len(file_name) - 2, string.len(file_name)) == 'exe' then\n        return 'Yes'\n    end\n    if string.sub(file_name, string.len(file_name) - 2, string.len(file_name)) == 'dll' then\n        return 'Yes'\n    end\n    return 'No'\nend",
    "    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name < 1 then\n        return 'No'\n    end\n    if file_name:sub(1,1) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(2,2) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(3,3) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(4,4) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(5,5) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(6,6) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(7,7) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(8,8) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(9,9) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(10,10) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(11,11) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(12,12) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(13,13) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(14,14) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(15,15) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(16,16) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(17,17) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(18,18) ~= '",
    "    if string.len(file_name) > 3 then\n        return 'No'\n    end\n    if string.len(file_name) < 3 then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 2) == '0' or string.sub(file_name, 1, 2) == '1' or string.sub(file_name, 1, 2) == '2' or string.sub(file_name, 1, 2) == '3' or string.sub(file_name, 1, 2) == '4' or string.sub(file_name, 1, 2) == '5' or string.sub(file_name, 1, 2) == '6' or string.sub(file_name, 1, 2) == '7' or string.sub(file_name, 1, 2) == '8' or string.sub(file_name, 1, 2) == '9' then\n        return 'No'\n    end\n    if string.sub(file_name, string.len(file_name) - 2, string.len(file_name)) == 'txt' or string.sub(file_name, string.len(file_name) - 2, string.len(file_name)) == 'exe' or string.sub(file_name, string.len(file_name) - 2, string.len(file_name)) == 'dll' then\n        return 'Yes'\n    end\n    return 'No'\nend",
    "    if #file_name > 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\\\.[a-zA-Z0-9.]+$') then\n        return 'No'\n    end\n    if file_name:match('^[0-9]*\\\\.[a-zA-Z][a-zA-Z0-9]*\\\\.[a-zA-Z0-9.]+$') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\\\.[a-zA-Z0-9.]+$') then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}\\\\.[a-zA-Z]{1}[a-zA-Z0-9]{1}\\\\.[a-zA-Z]{1}$') then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}\\\\.[a-zA-Z]{1}[a-zA-Z0-9]{1}\\\\.[a-zA-Z]{1}\\\\.[a-zA-Z]{1}$') then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name == 3 then\n        if file_name:sub(1,3) == \"0-9\" then\n            return \"No\"\n        end\n    end\n    if #file_name == 2 then\n        if file_name:sub(1,1) ~= \".\" then\n            return \"No\"\n        end\n    end\n    if #file_name == 1 then\n        if file_name:sub(1,1) ~= \".\" then\n            return \"No\"\n        end\n        if file_name:sub(2,2) ~= \".\" then\n            return \"No\"\n        end\n        if file_name:sub(3,3) ~= \".\" then\n            return \"No\"\n        end\n        if file_name:sub(1,1) ~= \"a\" .. \"z\" or file_name:sub(1,1) ~= \"A\" .. \"Z\" then\n            return \"No\"\n        end\n        if file_name:sub(2,2) ~= \"txt\" or file_name:sub(2,2) ~= \"exe\" or file_name:sub(2,2) ~= \"dll\" then\n            return \"No\"\n        end\n    end\n    return \"Yes\"\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= string.gsub(file_name, '.', '') then\n        return 'No'\n    end\n    if not string.sub(file_name, 1, 1) ~= string.gsub(file_name, '.', '') then\n        return 'No'\n    end\n    if string.sub(file_name, -3, -1) ~= '0-9' then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}[.]') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('[.](txt|exe|dll)$') then\n        return 'Yes'\n    end\n    return 'No'\nend",
    "    if #file_name > 3 then\n        return 'No'\n    end\n    if file_name ~= '' and file_name ~= '.' and file_name ~= '..' then\n        local dot_index = string.find(file_name, '.')\n        if dot_index == nil then\n            return 'No'\n        end\n        local before_dot = string.sub(file_name, 1, dot_index)\n        if not string.sub(before_dot, 1, 1) ~= '.' then\n            return 'No'\n        end\n        local after_dot = string.sub(file_name, dot_index + 1)\n        if not string.sub(after_dot, 1, 1) in ['txt', 'exe', 'dll'] then\n            return 'No'\n        end\n        return 'Yes'\n    end\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= string.gsub(file_name, '.', '') then\n        return 'No'\n    end\n    if not string.sub(file_name, 1, 1) ~= string.gsub(file_name, '.', '') then\n        return 'No'\n    end\n    if string.sub(file_name, -3, -1) ~= '0' .. '9' then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name < 2 then\n        return 'No'\n    end\n    if file_name:sub(1,1) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(2,2) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(3,3) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(4,4) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(5,5) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(6,6) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(7,7) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(8,8) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(9,9) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(10,10) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(11,11) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(12,12) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(13,13) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(14,14) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(15,15) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(16,16) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(17,17) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(18,18) ~= '",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]*$') then\n        return 'No'\n    end\n    if not file_name:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    if not file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\.\\.[a-zA-Z0-9]*$') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\.\\.[a-zA-Z]*$') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\.\\.[a-zA-Z]*\\.\\.[a-zA-Z]*$') then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]+') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9.]+$') then\n        return 'Yes'\n    end\n    return 'No'\nend",
    "    if string.len(file_name) > 3 then\n        return 'No'\n    end\n    if string.len(file_name) < 3 then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 2) == '0' or string.sub(file_name, 1, 2) == '1' or string.sub(file_name, 1, 2) == '2' or string.sub(file_name, 1, 2) == '3' or string.sub(file_name, 1, 2) == '4' or string.sub(file_name, 1, 2) == '5' or string.sub(file_name, 1, 2) == '6' or string.sub(file_name, 1, 2) == '7' or string.sub(file_name, 1, 2) == '8' or string.sub(file_name, 1, 2) == '9' then\n        return 'No'\n    end\n    if string.sub(file_name, string.len(file_name) - 2, string.len(file_name)) == 'txt' or string.sub(file_name, string.len(file_name) - 2, string.len(file_name)) == 'exe' or string.sub(file_name, string.len(file_name) - 2, string.len(file_name)) == 'dll' then\n        return 'Yes'\n    end\n    return 'No'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}[.]') then\n        return 'No'\n    end\n    local dot_index = string.find(file_name, '.')\n    if dot_index == nil then\n        return 'No'\n    end\n    local before_dot = string.sub(file_name, 1, dot_index)\n    if not string.sub(before_dot, 1, 1) ~= '[' then\n        return 'No'\n    end\n    local after_dot = string.sub(file_name, dot_index + 1)\n    if not string.sub(after_dot, 1, 1) ~= '[' then\n        return 'No'\n    end\n    if after_dot ~= 'txt' and after_dot ~= 'exe' and after_dot ~= 'dll' then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name > 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[a-zA-Z][a-zA-Z0-9]{0,2}\\\\.[a-zA-Z]{1,3}$') then\n        return 'No'\n    end\n    if file_name:match('^[0-9]{3}$') then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]*$') then\n        return 'No'\n    end\n    if not file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\.$') then\n        return 'No'\n    end\n    if not file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\.\\.[a-zA-Z][a-zA-Z0-9]*$') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\.\\.[a-zA-Z][a-zA-Z0-9]*\\.\\.[a-zA-Z][a-zA-Z0-9]*$') then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('[0-9]+') then\n        return 'No'\n    end\n    if file_name:match('[0-9]+\\.[0-9]+') then\n        return 'No'\n    end\n    if not file_name:match('[a-zA-Z][a-zA-Z0-9]*\\.[txt|exe|dll]$') then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]*$') then\n        return 'No'\n    end\n    if not file_name:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    if not file_name:match('^[a-zA-Z]\\\\.[a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]\\\\.[a-zA-Z]\\\\.[a-zA-Z]$') then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name == 0 then\n        return 'No'\n    end\n    if file_name:sub(1,1) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(2,2) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(3,3) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(4,4) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(5,5) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(6,6) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(7,7) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(8,8) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(9,9) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(10,10) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(11,11) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(12,12) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(13,13) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(14,14) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(15,15) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(16,16) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(17,17) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(18,18) ~= '",
    "    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name < 1 then\n        return 'No'\n    end\n    if file_name:sub(1,1) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(2,2) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(3,3) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(4,4) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(5,5) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(6,6) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(7,7) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(8,8) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(9,9) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(10,10) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(11,11) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(12,12) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(13,13) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(14,14) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(15,15) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(16,16) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(17,17) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(18,18) ~= '",
    "    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 1 and file_name:sub(1,1) ~= '.' then\n        return 'No'\n    end\n    if #file_name > 1 and file_name:sub(2,2) ~= '.' then\n        return 'No'\n    end\n    if #file_name > 1 and file_name:sub(3,3) ~= '.' then\n        return 'No'\n    end\n    if #file_name > 1 and file_name:sub(4,4) ~= '.' then\n        return 'No'\n    end\n    if #file_name > 1 and file_name:sub(5,5) ~= '.' then\n        return 'No'\n    end\n    if #file_name > 1 and file_name:sub(6,6) ~= '.' then\n        return 'No'\n    end\n    if #file_name > 1 and file_name:sub(7,7) ~= '.' then\n        return 'No'\n    end\n    if #file_name > 1 and file_name:sub(8,8) ~= '.' then\n        return 'No'\n    end\n    if #file_name > 1 and file_name:sub(9,9) ~= '.' then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name < 1 then\n        return 'No'\n    end\n    if file_name:sub(1,1) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(2,2) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(3,3) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(4,4) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(5,5) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(6,6) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(7,7) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(8,8) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(9,9) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(10,10) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(11,11) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(12,12) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(13,13) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(14,14) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(15,15) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(16,16) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(17,17) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(18,18) ~= '",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]+') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9.]*$') == nil then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9.]*[.][txt|exe|dll]$') == nil then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name < 2 then\n        return 'No'\n    end\n    if file_name:sub(1,1) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(2,2) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(3,3) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(4,4) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(5,5) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(6,6) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(7,7) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(8,8) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(9,9) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(10,10) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(11,11) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(12,12) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(13,13) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(14,14) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(15,15) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(16,16) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(17,17) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(18,18) ~= '",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}[.]') then\n        return 'No'\n    end\n    local dot_index = string.find(file_name, '.')\n    if dot_index == nil then\n        return 'No'\n    end\n    local before_dot = string.sub(file_name, 1, dot_index)\n    if not string.sub(before_dot, 1, 1) ~= '[' then\n        return 'No'\n    end\n    local after_dot = string.sub(file_name, dot_index + 1)\n    if not string.sub(after_dot, 1, 1) ~= '[' then\n        return 'No'\n    end\n    if after_dot ~= 'txt' and after_dot ~= 'exe' and after_dot ~= 'dll' then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if string.len(file_name) > 3 then\n        return 'No'\n    end\n    if string.len(file_name) < 3 then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 2) == '0' then\n        return 'No'\n    end\n    if string.sub(file_name, 2, 3) == '.' then\n        return 'No'\n    end\n    if string.sub(file_name, string.len(file_name) - 2, string.len(file_name)) == '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 1) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, string.len(file_name) - 3, string.len(file_name)) ~= '.txt' then\n        return 'No'\n    end\n    if string.sub(file_name, string.len(file_name) - 3, string.len(file_name)) ~= '.exe' then\n        return 'No'\n    end\n    if string.sub(file_name, string.len(file_name) - 3, string.len(file_name)) ~= '.dll' then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    local valid = true\n    local dot_index = string.find(file_name, '.')\n    local dot_substring = string.sub(file_name, 1, dot_index)\n    local dot_substring_length = #dot_substring\n    local dot_substring_upper = string.upper(dot_substring)\n    local dot_substring_lower = string.lower(dot_substring)\n    local dot_substring_upper_length = #dot_substring_upper\n    local dot_substring_lower_length = #dot_substring_lower\n    local dot_substring_upper_first_letter = string.sub(dot_substring_upper, 1, 1)\n    local dot_substring_lower_first_letter = string.sub(dot_substring_lower, 1, 1)\n    local dot_substring_upper_last_letter = string.sub(dot_substring_upper, dot_substring_upper_length, 1)\n    local dot_substring_lower_last_letter = string.sub(dot_substring_lower, dot_substring_lower_length, 1)\n    local dot_substring_upper_length_is_three = dot_substring_upper_length == 3\n    local dot_substring_lower_length_is_three = dot_substring_lower_length == 3\n    local dot_substring_upper_starts_with_letter = dot_substring_upper_first_letter == dot_substring_upper_last_letter\n    local dot_substring_lower_starts_with_letter = dot_substring_lower_first_letter == dot_substring_lower_last_letter\n    local dot_substring_upper_ends_with_letter = dot_substring_upper_first_letter == dot_substring_upper_last_letter\n    local dot_substring_lower_ends_with_letter = dot_substring_lower_first_letter == dot_substring_lower_last_letter\n    local dot_substring_upper_is_not_empty = dot_substring_upper_length > 0\n    local dot_substring_lower_is_not_empty = dot_",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]*$') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\.txt$') then\n        return 'Yes'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\.exe$') then\n        return 'Yes'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\.dll$') then\n        return 'Yes'\n    end\n    return 'No'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}[a-zA-Z]{1}[a-zA-Z0-9]{1}[.][a-zA-Z0-9]{1,3}$') then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= string.gsub(file_name, '.', '') then\n        return 'No'\n    end\n    if not string.sub(file_name, 1, 1) ~= string.gsub(file_name, '.', '') then\n        return 'No'\n    end\n    if string.sub(file_name, -3, -1) ~= '0-9' then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    local file_name_check = {}\n    local dot_index = string.find(file_name, '.')\n    if dot_index == nil then\n        file_name_check.result = 'No'\n    else\n        local file_name_before_dot = string.sub(file_name, 1, dot_index)\n        if file_name_before_dot == '' then\n            file_name_check.result = 'No'\n        else\n            local file_name_after_dot = string.sub(file_name, dot_index + 1)\n            if file_name_after_dot == '' then\n                file_name_check.result = 'No'\n            else\n                if file_name_after_dot == 'txt' or file_name_after_dot == 'exe' or file_name_after_dot == 'dll' then\n                    file_name_check.result = 'Yes'\n                else\n                    file_name_check.result = 'No'\n            end\n        end\n    end\n    return file_name_check\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}[.]') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('[.](txt|exe|dll)$') then\n        return 'Yes'\n    end\n    return 'No'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}.[a-zA-Z]{1}[a-zA-Z0-9]{1}$') then\n        return 'No'\n    end\n    if file_name:match('^[0-9]{3}.[a-zA-Z]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}$') then\n        return 'No'\n    end\n    if file_name:match('^[0-9]{3}.[a-zA-Z]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}$') then\n        return 'No'\n    end\n    if file_name:match('^[0-9]{3}.[a-zA-Z]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}$') then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if #file_name ~= 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:sub(1,1) .. '.' .. file_name:sub(2,2) .. '.' .. file_name:sub(3,3) then\n        return 'No'\n    end\n    if file_name:sub(1,1) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(2,2) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(3,3) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(4,4) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(5,5) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(6,6) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(7,7) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(8,8) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(9,9) ~= '.' then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}.[a-zA-Z]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}$') then\n        return 'No'\n    end\n    if file_name:match('^[0-9]{3}.[a-zA-Z]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}$') then\n        return 'No'\n    end\n    if file_name:match('^[0-9]{3}.[a-zA-Z]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}$') then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name == 0 then\n        return 'No'\n    end\n    if file_name ~= '.' then\n        return 'No'\n    end\n    if file_name[1] ~= 'a' .. 'z' and file_name[1] ~= 'A' .. 'Z' then\n        return 'No'\n    end\n    if file_name[2] ~= 'a' .. 'z' and file_name[2] ~= 'A' .. 'Z' then\n        return 'No'\n    end\n    if file_name[3] ~= 'a' .. 'z' and file_name[3] ~= 'A' .. 'Z' then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name < 1 then\n        return 'No'\n    end\n    if file_name:sub(1,1) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(2,2) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(3,3) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(4,4) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(5,5) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(6,6) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(7,7) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(8,8) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(9,9) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(10,10) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(11,11) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(12,12) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(13,13) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(14,14) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(15,15) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(16,16) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(17,17) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(18,18) ~= '",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]+') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\.txt$') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\.exe$') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\.dll$') then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= string.gsub(file_name, '^[0-9]', '') then\n        return 'No'\n    end\n    if string.gsub(file_name, '.', '') ~= '' then\n        return 'No'\n    end\n    if string.gsub(file_name, '.', 1) ~= string.gsub(file_name, '.', 2) then\n        return 'No'\n    end\n    if string.gsub(file_name, '.', 2) ~= 'txt' and string.gsub(file_name, '.', 2) ~= 'exe' and string.gsub(file_name, '.', 2) ~= 'dll' then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]*$') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\.\\.[txt|exe|dll]$') then\n        return 'Yes'\n    end\n    return 'No'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}[.]') then\n        return 'No'\n    end\n    if not file_name:match('^[a-zA-Z][a-zA-Z0-9]*[.]') then\n        return 'No'\n    end\n    if not file_name:match('^[a-zA-Z][a-zA-Z0-9]*[.][txt|exe|dll]$') then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name > 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('^[0-9]') then\n        return 'No'\n    end\n    if file_name:match('^[.]') then\n        return 'No'\n    end\n    if file_name:match('[.]txt$') or file_name:match('[.]exe$') or file_name:match('[.]dll$') then\n        return 'Yes'\n    end\n    return 'No'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]*$') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\.\\.[txt|exe|dll]$') then\n        return 'Yes'\n    end\n    return 'No'\nend",
    "    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name < 1 then\n        return 'No'\n    end\n    if file_name:sub(1,1) ~= \".\" then\n        return 'No'\n    end\n    if file_name:sub(2,2) ~= \".\" then\n        return 'No'\n    end\n    if file_name:sub(3,3) ~= \".\" then\n        return 'No'\n    end\n    if file_name:sub(4,4) ~= \".\" then\n        return 'No'\n    end\n    if file_name:sub(5,5) ~= \".\" then\n        return 'No'\n    end\n    if file_name:sub(6,6) ~= \".\" then\n        return 'No'\n    end\n    if file_name:sub(7,7) ~= \".\" then\n        return 'No'\n    end\n    if file_name:sub(8,8) ~= \".\" then\n        return 'No'\n    end\n    if file_name:sub(9,9) ~= \".\" then\n        return 'No'\n    end\n    if file_name:sub(10,10) ~= \".\" then\n        return 'No'\n    end\n    if file_name:sub(11,11) ~= \".\" then\n        return 'No'\n    end\n    if file_name:sub(12,12) ~= \".\" then\n        return 'No'\n    end\n    if file_name:sub(13,13) ~= \".\" then\n        return 'No'\n    end\n    if file_name:sub(14,14) ~= \".\" then\n        return 'No'\n    end\n    if file_name:sub(15,15) ~= \".\" then\n        return 'No'\n    end\n    if file_name:sub(16,16) ~= \".\" then\n        return 'No'\n    end\n    if file_name:sub(17,17) ~= \".\" then\n        return 'No'\n    end\n    if file_name:sub(18,18) ~= \"",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]*$') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\.\\.[txt|exe|dll]$') then\n        return 'Yes'\n    end\n    return 'No'\nend",
    "    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name < 1 then\n        return 'No'\n    end\n    if file_name:sub(1,1) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(2,2) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(3,3) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(4,4) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(5,5) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(6,6) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(7,7) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(8,8) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(9,9) ~= '.' then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= string.gsub(file_name, '.', '') then\n        return 'No'\n    end\n    if not string.sub(file_name, 1, 1) ~= string.gsub(file_name, '.', '') then\n        return 'No'\n    end\n    if string.sub(file_name, -3, -1) ~= '0-9' then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]+') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*') == '' then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\.\\.[a-zA-Z][a-zA-Z0-9]*$') == '' then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\.\\.[a-zA-Z][a-zA-Z0-9]*\\.[a-zA-Z][a-zA-Z0-9]*$') == '' then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    local dot_index = string.find(file_name, '.')\n    local dot_substring = string.sub(file_name, 1, dot_index)\n    local dot_substring_length = #dot_substring\n    local dot_substring_upper = string.upper(dot_substring)\n    local dot_substring_lower = string.lower(dot_substring)\n    local dot_substring_upper_length = #dot_substring_upper\n    local dot_substring_lower_length = #dot_substring_lower\n    local dot_substring_upper_index = string.find(dot_substring_upper, '.')\n    local dot_substring_lower_index = string.find(dot_substring_lower, '.')\n    local dot_substring_upper_index_length = #dot_substring_upper_index\n    local dot_substring_lower_index_length = #dot_substring_lower_index\n    local dot_substring_upper_index_index = string.find(dot_substring_upper, 'a')\n    local dot_substring_lower_index_index = string.find(dot_substring_lower, 'a')\n    local dot_substring_upper_index_index_length = #dot_substring_upper_index_index\n    local dot_substring_lower_index_index_length = #dot_substring_lower_index_index\n    local dot_substring_upper_index_index_index = string.find(dot_substring_upper, 'A')\n    local dot_substring_lower_index_index_index = string.find(dot_substring_lower, 'A')\n    local dot_substring_upper_index_index_index_length = #dot_substring_upper_index_index_index\n    local dot_substring_lower_index_index_index_length = #dot_substring_lower_index_index_index\n    local dot_substring_upper_index_index_index_index = string.find(dot_substring_upper, '0')\n    local dot_substring_lower_index_index_index_index = string.",
    "    local dot_index = string.find(file_name, '.')\n    local dot_substring = string.sub(file_name, 1, dot_index)\n    local dot_substring_length = #dot_substring\n    local dot_substring_upper = string.upper(dot_substring)\n    local dot_substring_lower = string.lower(dot_substring)\n    local is_valid = (dot_substring_length == 3 and \n        dot_substring_upper == dot_substring_lower and \n        dot_substring_lower == 'txt' or \n        dot_substring_lower == 'exe' or \n        dot_substring_lower == 'dll')\n    return is_valid and 'Yes' or 'No'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}[.]') then\n        return 'No'\n    end\n    local dot_index = string.find(file_name, '.')\n    local before_dot = string.lower(file_name[1, dot_index])\n    local after_dot = string.lower(file_name[dot_index + 1, #file_name])\n    if before_dot ~= '.' and after_dot ~= 'txt' and after_dot ~= 'exe' and after_dot ~= 'dll' then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name > 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('^[0-9]') then\n        return 'No'\n    end\n    if file_name:match('^[0-9][0-9][0-9]') then\n        return 'No'\n    end\n    if file_name:match('^[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]*$') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\.\\.[txt|exe|dll]$') then\n        return 'Yes'\n    end\n    return 'No'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]*$') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\.\\.[txt|exe|dll]$') then\n        return 'Yes'\n    end\n    return 'No'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]*$') then\n        return 'No'\n    end\n    if not file_name:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    if not file_name:match('^[a-zA-Z][a-zA-Z0-9.]*$') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9.]*[0-9]*$') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9.]*[0-9]*[0-9]*$') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9.]*[0-9]*[0-9]*[0-9]*$') then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    local valid = true\n    local dot_index = string.find(file_name, '.')\n    local dot_before_index = string.find(file_name, '.', 1, dot_index)\n    local dot_after_index = string.find(file_name, '.', dot_index + 1)\n    local dot_before_length = dot_before_index + 1\n    local dot_after_length = dot_after_index - dot_before_length\n    local dot_before_char = string.char(file_name, dot_before_index)\n    local dot_after_char = string.char(file_name, dot_after_index)\n    local dot_before_char_is_letter = string.char(file_name, dot_before_index) ~= nil\n    local dot_after_char_is_letter = string.char(file_name, dot_after_index) ~= nil\n    local dot_before_char_is_letter_or_digit = string.char(file_name, dot_before_index) ~= nil and string.char(file_name, dot_before_index) ~= '0' and string.char(file_name, dot_before_index) ~= '1' and string.char(file_name, dot_before_index) ~= '2' and string.char(file_name, dot_before_index) ~= '3' and string.char(file_name, dot_before_index) ~= '4' and string.char(file_name, dot_before_index) ~= '5' and string.char(file_name, dot_before_index) ~= '6' and string.char(file_name, dot_before_index) ~= '7' and string.char(file_name, dot_before_index) ~= '8' and string.char(file_name, dot_before_index) ~= '9'\n    local dot_after_char_is_letter_or_digit = string.char(file_name, dot_after_index) ~= nil and string.char(file_name, dot_after_index) ~= '0' and string.char(file_",
    "    local file_name_parts = string.split(file_name, '.')\n    if #file_name_parts > 2 then\n        return 'No'\n    end\n    if #file_name_parts < 2 then\n        return 'No'\n    end\n    if file_name_parts[1] ~= '.' then\n        return 'No'\n    end\n    if not string.sub(file_name_parts[1], 1, 1) ~= '[' then\n        return 'No'\n    end\n    if not string.sub(file_name_parts[1], 2, 2) ~= ']' then\n        return 'No'\n    end\n    if not string.sub(file_name_parts[1], 3, 3) ~= '0' then\n        return 'No'\n    end\n    if not string.sub(file_name_parts[1], 4, 4) ~= '1' then\n        return 'No'\n    end\n    if not string.sub(file_name_parts[1], 5, 5) ~= '2' then\n        return 'No'\n    end\n    if not string.sub(file_name_parts[1], 6, 6) ~= '3' then\n        return 'No'\n    end\n    if not string.sub(file_name_parts[1], 7, 7) ~= '4' then\n        return 'No'\n    end\n    if not string.sub(file_name_parts[1], 8, 8) ~= '5' then\n        return 'No'\n    end\n    if not string.sub(file_name_parts[1], 9, 9) ~= '6' then\n        return 'No'\n    end\n    if not string.sub(file_name_parts[1], 10, 10) ~= '7' then\n        return 'No'\n    end\n    if not string.sub(file_name_parts[1], 11, 11) ~= '8' then\n        return 'No'\n    end\n    if not string.sub(file_name_parts[1], 12, 12) ~= '9' then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]+') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9.]+$') then\n        return 'Yes'\n    end\n    return 'No'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}\\\\.[a-zA-Z]{1}[a-zA-Z0-9]{1}\\\\.[a-zA-Z]{1}$') then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}\\\\.[a-zA-Z]{1}[a-zA-Z0-9]{1}\\\\.[a-zA-Z]{1}[a-zA-Z0-9]{1}$') then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if file_name ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 1) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 2, 2) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 3, 3) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 4, 4) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 5, 5) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 6, 6) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 7, 7) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 8, 8) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 9, 9) ~= '.' then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}[.]') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('[.](txt|exe|dll)$') then\n        return 'Yes'\n    end\n    return 'No'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}[.]') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('[.](txt|exe|dll)$') then\n        return 'Yes'\n    end\n    return 'No'\nend",
    "    local result = 'No'\n    if #file_name == 3 then\n        if file_name ~= '.0' and file_name ~= '.1' and file_name ~= '.2' then\n            if file_name[1] ~= '0' and file_name[1] ~= '1' and file_name[1] ~= '2' then\n                if file_name[2] ~= '0' and file_name[2] ~= '1' and file_name[2] ~= '2' then\n                    if file_name[3] ~= '0' and file_name[3] ~= '1' and file_name[3] ~= '2' then\n                        result = 'Yes'\n                    end\n                end\n            end\n        end\n    end\n    return result\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]+') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][0-9]{2}[a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][0-9]{2}[a-zA-Z][0-9]{2}[a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][0-9]{2}[a-zA-Z][0-9]{2}[a-zA-Z][0-9]{2}[a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][0-9]{2}[a-zA-Z][0-9]{2}[a-zA-Z][0-9]{2}[a-zA-Z][0-9]{2}[a-zA-Z]') then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    local file_name_check = {}\n    if file_name ~= \"\" then\n        if string.len(file_name) > 3 then\n            file_name_check.result = \"No\"\n        elseif string.len(file_name) == 3 then\n            file_name_check.result = \"No\"\n        elseif string.sub(file_name, 1, 2) == \".\" then\n            file_name_check.result = \"No\"\n        elseif string.sub(file_name, string.len(file_name) - 2, string.len(file_name)) ~= \".txt\" and string.sub(file_name, string.len(file_name) - 2, string.len(file_name)) ~= \".exe\" and string.sub(file_name, string.len(file_name) - 2, string.len(file_name)) ~= \".dll\" then\n            file_name_check.result = \"No\"\n        else\n            file_name_check.result = \"Yes\"\n        end\n    end\n    return file_name_check\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]+') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\.\\.[txt|exe|dll]$') then\n        return 'Yes'\n    end\n    return 'No'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if #file_name ~= 3 then\n        return 'No'\n    end\n    if file_name ~= string.sub(file_name, 1, 2) .. '.' .. string.sub(file_name, 2, 3) then\n        return 'No'\n    end\n    if not string.sub(file_name, 1, 1) ~= '.' then\n        return 'No'\n    end\n    if not string.sub(file_name, string.length(file_name) - 3, string.length(file_name)) ~= '.txt' then\n        return 'No'\n    end\n    if not string.sub(file_name, string.length(file_name) - 3, string.length(file_name)) ~= '.exe' then\n        return 'No'\n    end\n    if not string.sub(file_name, string.length(file_name) - 3, string.length(file_name)) ~= '.dll' then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    local valid = true\n    local dot_index = string.find(file_name, '.')\n    local dot_substring = string.sub(file_name, 1, dot_index)\n    local dot_substring_length = #dot_substring\n    local dot_substring_upper = string.upper(dot_substring)\n    local dot_substring_lower = string.lower(dot_substring)\n    local dot_substring_upper_length = #dot_substring_upper\n    local dot_substring_lower_length = #dot_substring_lower\n    local dot_substring_upper_index = string.find(dot_substring_upper, '.')\n    local dot_substring_lower_index = string.find(dot_substring_lower, '.')\n    local dot_substring_upper_index_length = #dot_substring_upper_index\n    local dot_substring_lower_index_length = #dot_substring_lower_index\n    local dot_substring_upper_index_index = string.find(dot_substring_upper, 'a')\n    local dot_substring_lower_index_index = string.find(dot_substring_lower, 'a')\n    local dot_substring_upper_index_index_length = #dot_substring_upper_index_index\n    local dot_substring_lower_index_index_length = #dot_substring_lower_index_index\n    local dot_substring_upper_index_index_index = string.find(dot_substring_upper, 'A')\n    local dot_substring_lower_index_index_index = string.find(dot_substring_lower, 'A')\n    local dot_substring_upper_index_index_index_length = #dot_substring_upper_index_index_index\n    local dot_substring_lower_index_index_index_length = #dot_substring_lower_index_index_index\n    local dot_substring_upper_index_index_index_index = string.find(dot_substring_upper, '0')\n    local dot_substring_lower_index_index_",
    "    local valid = true\n    local dot_index = string.find(file_name, '.')\n    local dot_substring = string.sub(file_name, 1, dot_index)\n    local dot_substring_length = #dot_substring\n    local dot_substring_upper = string.upper(dot_substring)\n    local dot_substring_lower = string.lower(dot_substring)\n    local dot_substring_lower_length = #dot_substring_lower\n    local dot_substring_lower_upper = string.upper(dot_substring_lower)\n    local dot_substring_lower_upper_length = #dot_substring_lower_upper\n    local dot_substring_lower_upper_valid = (dot_substring_lower_upper == 'exe' or dot_substring_lower_upper == 'dll')\n    local dot_substring_lower_valid = (dot_substring_lower == 'exe' or dot_substring_lower == 'dll')\n    local dot_substring_upper_valid = (dot_substring_upper == 'exe' or dot_substring_upper == 'dll')\n    local dot_substring_valid = (dot_substring_length == 3 or dot_substring_length == 4)\n    local dot_substring_valid_length = #dot_substring_valid\n    local dot_substring_valid_upper = string.upper(dot_substring_valid)\n    local dot_substring_valid_lower = string.lower(dot_substring_valid)\n    local dot_substring_valid_lower_length = #dot_substring_valid_lower\n    local dot_substring_valid_lower_upper = string.upper(dot_substring_valid_lower)\n    local dot_substring_valid_lower_upper_length = #dot_substring_valid_lower_upper\n    local dot_substring_valid_lower_upper_valid = (dot_substring_valid_lower_upper == 'exe' or dot_substring_valid_lower_upper == 'dll')\n    local dot_substring_valid_lower_valid = (dot_substring_valid_lower ==",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if file_name ~= '.' then\n        return 'No'\n    end\n    local dot_index = string.find(file_name, '.')\n    local before_dot = string.sub(file_name, 1, dot_index)\n    if not string.len(before_dot) > 0 then\n        return 'No'\n    end\n    local after_dot = string.sub(file_name, dot_index + 1)\n    if not string.len(after_dot) > 0 then\n        return 'No'\n    end\n    if string.sub(after_dot, 1, 1) ~= '.' then\n        return 'No'\n    end\n    if string.sub(after_dot, 2, 2) ~= '.' then\n        return 'No'\n    end\n    if string.sub(after_dot, 3, 3) ~= '.' then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]*$') then\n        return 'No'\n    end\n    local dot_index = string.find(file_name, '.')\n    if dot_index == nil then\n        return 'No'\n    end\n    local dot_substring = string.sub(file_name, 1, dot_index)\n    if not dot_substring:match('^[a-zA-Z]*$') then\n        return 'No'\n    end\n    local extension = string.sub(file_name, dot_index + 1, #file_name)\n    if not extension:match('^[txt|exe|dll]*$') then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name < 1 then\n        return 'No'\n    end\n    if file_name:sub(1,1) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(2,2) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(3,3) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(4,4) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(5,5) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(6,6) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(7,7) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(8,8) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(9,9) ~= '.' then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    local valid = true\n    local dot_index = string.find(file_name, \".\")\n    local dot_substring = string.sub(file_name, 1, dot_index)\n    local dot_substring_length = #dot_substring\n    local dot_substring_upper = string.upper(dot_substring)\n    local dot_substring_lower = string.lower(dot_substring)\n    local dot_substring_upper_length = #dot_substring_upper\n    local dot_substring_lower_length = #dot_substring_lower\n    local dot_substring_upper_index = string.find(dot_substring_upper, \"A\")\n    local dot_substring_lower_index = string.find(dot_substring_lower, \"a\")\n    local dot_substring_upper_index_length = #dot_substring_upper_index\n    local dot_substring_lower_index_length = #dot_substring_lower_index\n    if dot_substring_length > 3 or dot_substring_upper_length > 3 or dot_substring_lower_length > 3 then\n        valid = false\n    elseif dot_substring_upper_index == 0 or dot_substring_lower_index == 0 then\n        valid = false\n    elseif dot_substring_upper_index_length != dot_substring_lower_index_length then\n        valid = false\n    elseif dot_substring_upper_index > dot_substring_lower_index then\n        valid = false\n    elseif string.sub(dot_substring_upper, 1, 1) != string.sub(dot_substring_lower, 1, 1) then\n        valid = false\n    elseif string.sub(dot_substring_upper, 2, 2) != string.sub(dot_substring_lower, 2, 2) then\n        valid = false\n    elseif string.sub(dot_substring_upper, 3, 3) != string.sub(dot_substring_lower, 3, 3) then\n        valid = false\n    end\n    return valid\nend",
    "    local valid = true\n    local dot_index = string.find(file_name, '.')\n    local dot_substring = string.sub(file_name, 1, dot_index)\n    local dot_substring_length = #dot_substring\n    local dot_substring_upper = string.upper(dot_substring)\n    local dot_substring_lower = string.lower(dot_substring)\n    local dot_substring_upper_length = #dot_substring_upper\n    local dot_substring_lower_length = #dot_substring_lower\n    local dot_substring_upper_first_letter = string.sub(dot_substring_upper, 1, 1)\n    local dot_substring_lower_first_letter = string.sub(dot_substring_lower, 1, 1)\n    local dot_substring_upper_last_letter = string.sub(dot_substring_upper, dot_substring_upper_length, 1)\n    local dot_substring_lower_last_letter = string.sub(dot_substring_lower, dot_substring_lower_length, 1)\n    local dot_substring_upper_first_letter_length = #dot_substring_upper_first_letter\n    local dot_substring_lower_first_letter_length = #dot_substring_lower_first_letter\n    local dot_substring_upper_last_letter_length = #dot_substring_upper_last_letter\n    local dot_substring_lower_last_letter_length = #dot_substring_lower_last_letter\n    local dot_substring_upper_first_letter_is_letter = (dot_substring_upper_first_letter == string.upper(dot_substring_upper_first_letter))\n    local dot_substring_lower_first_letter_is_letter = (dot_substring_lower_first_letter == string.lower(dot_substring_lower_first_letter))\n    local dot_substring_upper_last_letter_is_letter = (dot_substring_upper_last_letter == string.upper(dot_substring_upper_last_letter))\n    local",
    "    if #file_name > 3 then\n        return 'No'\n    end\n    if file_name ~= '' and file_name ~= '.' then\n        if string.find(file_name, '.') ~= nil then\n            return 'No'\n        end\n        if string.find(file_name, '.') == nil then\n            return 'No'\n        end\n        if string.find(file_name, '.') == 1 then\n            if string.find(file_name, '.', 2) ~= nil then\n                return 'No'\n            end\n            if string.find(file_name, '.', 2) == nil then\n                return 'No'\n            end\n            if string.find(file_name, '.', 2) == 1 then\n                if string.find(file_name, '.', 3) ~= nil then\n                    return 'No'\n                end\n                if string.find(file_name, '.', 3) == nil then\n                    return 'No'\n                end\n                if string.find(file_name, '.', 3) == 1 then\n                    return 'Yes'\n                end\n            end\n        end\n    end\n    return 'Yes'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('[0-9]{3}') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]{1,2}\\\\.[txt|exe|dll]$') then\n        return 'Yes'\n    end\n    return 'No'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]+[0-9][0-9][0-9]$') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*$') == nil then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\.\\.[a-zA-Z][a-zA-Z0-9]*$') == nil then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\.\\.[a-zA-Z][a-zA-Z0-9]*\\.[a-zA-Z][a-zA-Z0-9]*$') == nil then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name > 3 then\n        return 'No'\n    end\n    if file_name ~= '' then\n        if string.sub(file_name, 1, 3) ~= '0-9' then\n            return 'No'\n        end\n        if string.sub(file_name, 4, 4) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name, 5, 5) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name, 6, 6) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name, 7, 7) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name, 8, 8) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name, 9, 9) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name, 10, 10) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name, 11, 11) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name, 12, 12) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name, 13, 13) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name, 14, 14) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name, 15, 15) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name, 16, 16) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name, 17, 17) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name, 18, 18) ~= '.' then\n            return 'No'\n        end\n        if string.sub(file_name, 19, 19) ~=",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}[.]') then\n        return 'No'\n    end\n    local dot_index = string.find(file_name, '.')\n    local before_dot = string.lower(file_name:sub(1, dot_index))\n    local after_dot = string.lower(file_name:sub(dot_index+1))\n    if before_dot ~= '' and not before_dot:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    if after_dot ~= 'txt' and after_dot ~= 'exe' and after_dot ~= 'dll' then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name > 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('^[0-9]') then\n        return 'No'\n    end\n    if file_name:match('^[0-9][0-9][0-9]') then\n        return 'No'\n    end\n    if file_name:match('^[0-9][0-9][0-9][0-9][0-9][0-9][0-9]') then\n        return 'No'\n    end\n    if file_name:match('^[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]+') then\n        return 'No'\n    end\n    local dot_index = string.find(file_name, '.')\n    if dot_index == nil then\n        return 'No'\n    end\n    local before_dot = string.sub(file_name, 1, dot_index)\n    if not string.sub(before_dot, 1, 1) ~= '[' then\n        return 'No'\n    end\n    local after_dot = string.sub(file_name, dot_index + 1)\n    if not string.sub(after_dot, 1, 1) ~= ']' then\n        return 'No'\n    end\n    if not string.sub(after_dot, 2, 2) ~= 'txt' and not string.sub(after_dot, 2, 2) ~= 'exe' and not string.sub(after_dot, 2, 2) ~= 'dll' then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name < 1 then\n        return 'No'\n    end\n    if file_name:sub(1,1) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(2,2) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(3,3) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(4,4) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(5,5) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(6,6) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(7,7) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(8,8) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(9,9) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(10,10) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(11,11) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(12,12) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(13,13) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(14,14) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(15,15) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(16,16) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(17,17) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(18,18) ~= '",
    "    if #file_name == 0 then\n        return 'No'\n    end\n    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name:sub(1,1) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(2,2) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(3,3) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(4,4) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(5,5) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(6,6) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(7,7) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(8,8) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(9,9) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(10,10) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(11,11) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(12,12) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(13,13) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(14,14) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(15,15) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(16,16) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(17,17) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(18,18) ~= '",
    "    if string.len(file_name) > 3 then\n        return 'No'\n    end\n    if string.len(file_name) < 3 then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 2) == '0' or string.sub(file_name, 1, 2) == '1' or string.sub(file_name, 1, 2) == '2' or string.sub(file_name, 1, 2) == '3' or string.sub(file_name, 1, 2) == '4' or string.sub(file_name, 1, 2) == '5' or string.sub(file_name, 1, 2) == '6' or string.sub(file_name, 1, 2) == '7' or string.sub(file_name, 1, 2) == '8' or string.sub(file_name, 1, 2) == '9' then\n        return 'No'\n    end\n    if string.sub(file_name, string.len(file_name) - 2, string.len(file_name)) == 'txt' then\n        return 'Yes'\n    end\n    if string.sub(file_name, string.len(file_name) - 2, string.len(file_name)) == 'exe' then\n        return 'Yes'\n    end\n    if string.sub(file_name, string.len(file_name) - 2, string.len(file_name)) == 'dll' then\n        return 'Yes'\n    end\n    return 'No'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}[.]') then\n        return 'No'\n    end\n    local dot_index = string.find(file_name, '.')\n    if dot_index == nil then\n        return 'No'\n    end\n    local file_name_before_dot = string.sub(file_name, 1, dot_index)\n    if not file_name_before_dot:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    local file_name_after_dot = string.sub(file_name, dot_index + 1)\n    if not file_name_after_dot:match('^[txeExDl]') then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name == 3 then\n        return 'No'\n    end\n    if not file_name:return 'No'\n    if not file_name[1]:return 'No'\n    if not file_name[2]:return 'No'\n    if not file_name[3]:return 'No'\n    if not file_name[4]:return 'No'\n    if not file_name[5]:return 'No'\n    if not file_name[6]:return 'No'\n    if not file_name[7]:return 'No'\n    if not file_name[8]:return 'No'\n    if not file_name[9]:return 'No'\n    if not file_name[10]:return 'No'\n    if not file_name[11]:return 'No'\n    if not file_name[12]:return 'No'\n    if not file_name[13]:return 'No'\n    if not file_name[14]:return 'No'\n    if not file_name[15]:return 'No'\n    if not file_name[16]:return 'No'\n    if not file_name[17]:return 'No'\n    if not file_name[18]:return 'No'\n    if not file_name[19]:return 'No'\n    if not file_name[20]:return 'No'\n    if not file_name[21]:return 'No'\n    if not file_name[22]:return 'No'\n    if not file_name[23]:return 'No'\n    if not file_name[24]:return 'No'\n    if not file_name[25]:return 'No'\n    if not file_name[26]:return 'No'\n    if not file_name[27]:return 'No'\n    if not file_name[28]:return 'No'\n    if not file_name[29]:return 'No'\n    if not file_name[30]:return 'No'\n    if not file_name[31]:return 'No'\n    if not file_name[32]:return 'No'\n    if not file_name[33]:return 'No'\n",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if file_name ~= '.' then\n        return 'No'\n    end\n    if file_name[1] ~= 'a' .. 'z' and file_name[1] ~= 'A' .. 'Z' then\n        return 'No'\n    end\n    if file_name[2] ~= 'a' .. 'z' and file_name[2] ~= 'A' .. 'Z' then\n        return 'No'\n    end\n    if file_name[3] ~= 'a' .. 'z' and file_name[3] ~= 'A' .. 'Z' then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 1 and file_name:sub(1,1) ~= \".\" then\n        return 'No'\n    end\n    if file_name:sub(2,3) ~= \"0-9\" then\n        return 'No'\n    end\n    if file_name:sub(file_name:find(\".\")) ~= \".\" then\n        return 'No'\n    end\n    if file_name:sub(file_name:find(\".\")+1) ~= \"txt\" and file_name:sub(file_name:find(\".\")+1) ~= \"exe\" and file_name:sub(file_name:find(\".\")+1) ~= \"dll\" then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name > 3 then\n        return 'No'\n    end\n    if file_name ~= '' and file_name ~= '.' and file_name ~= '..' then\n        local dot_index = string.find(file_name, '.')\n        local dot_before_index = string.find(file_name, '.', 1, dot_index)\n        local dot_after_index = string.find(file_name, '.', dot_index + 1)\n        if dot_before_index ~= 1 and dot_after_index ~= 1 then\n            local file_name_substring = string.sub(file_name, 1, dot_before_index - 1)\n            if file_name_substring ~= '' and string.sub(file_name_substring, 1, 1) ~= '.' then\n                local file_name_substring_2 = string.sub(file_name_substring, 2, dot_after_index)\n                if file_name_substring_2 ~= 'txt' and file_name_substring_2 ~= 'exe' and file_name_substring_2 ~= 'dll' then\n                    return 'Yes'\n                end\n            end\n        end\n    end\n    return 'No'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}\\\\.[a-zA-Z]{1}[a-zA-Z0-9]{1}\\\\.[a-zA-Z]{1}$') then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}[.]') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('[.](txt|exe|dll)$') then\n        return 'Yes'\n    end\n    return 'No'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}\\\\.[a-zA-Z]{1}[a-zA-Z0-9]{1}\\\\.[a-zA-Z]{1}$') then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]*$') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\.\\.[a-zA-Z]*$') then\n        return 'Yes'\n    end\n    return 'No'\nend",
    "    if string.len(file_name) > 3 then\n        return 'No'\n    end\n    if string.len(file_name) < 3 then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 2) == '0' then\n        return 'No'\n    end\n    if string.sub(file_name, 2, 3) == '.' then\n        return 'No'\n    end\n    if string.sub(file_name, string.len(file_name) - 2, string.len(file_name)) == '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 1) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, string.len(file_name) - 3, string.len(file_name)) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 1) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, string.len(file_name) - 3, string.len(file_name)) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 1) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, string.len(file_name) - 3, string.len(file_name)) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 1) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, string.len(file_name) - 3, string.len(file_name)) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 1) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, string.len(file_name) - 3, string.len(file_name)) ~= '.' then\n        return 'No'\n    end\n    ",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}[.]') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('[.](exe|dll)$') then\n        return 'Yes'\n    end\n    return 'No'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]*$') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]\\\\.[a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]\\\\.[a-zA-Z]\\\\.[a-zA-Z]') then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}.[a-zA-Z]{1}[a-zA-Z0-9]{1}$') then\n        return 'No'\n    end\n    if file_name:match('^[0-9]{3}.[a-zA-Z]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}$') then\n        return 'No'\n    end\n    if file_name:match('^[0-9]{3}.[a-zA-Z]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}$') then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if string.len(file_name) > 3 then\n        return 'No'\n    end\n    if string.len(file_name) < 3 then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 2) == '0' or string.sub(file_name, 1, 2) == '1' or string.sub(file_name, 1, 2) == '2' or string.sub(file_name, 1, 2) == '3' or string.sub(file_name, 1, 2) == '4' or string.sub(file_name, 1, 2) == '5' or string.sub(file_name, 1, 2) == '6' or string.sub(file_name, 1, 2) == '7' or string.sub(file_name, 1, 2) == '8' or string.sub(file_name, 1, 2) == '9' then\n        return 'No'\n    end\n    if string.sub(file_name, string.len(file_name) - 2, string.len(file_name)) == '.txt' or string.sub(file_name, string.len(file_name) - 2, string.len(file_name)) == '.exe' or string.sub(file_name, string.len(file_name) - 2, string.len(file_name)) == '.dll' then\n        return 'Yes'\n    end\n    return 'No'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]*$') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\.\\.[a-zA-Z]*$') then\n        return 'Yes'\n    end\n    return 'No'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}[.]') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][.]') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][.][0-9]{3}[.]') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][.][0-9]{3}[.][0-9]{3}[.]') then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    local valid = true\n    local dot_index = string.find(file_name, '.')\n    local dot_substring = string.sub(file_name, 1, dot_index)\n    local dot_substring_length = #dot_substring\n    local dot_substring_upper = string.upper(dot_substring)\n    local dot_substring_lower = string.lower(dot_substring)\n    local dot_substring_upper_length = #dot_substring_upper\n    local dot_substring_lower_length = #dot_substring_lower\n    local dot_substring_upper_index = string.find(dot_substring_upper, '.')\n    local dot_substring_lower_index = string.find(dot_substring_lower, '.')\n    local dot_substring_upper_index_length = #dot_substring_upper_index\n    local dot_substring_lower_index_length = #dot_substring_lower_index\n    local dot_substring_upper_index_index = string.find(dot_substring_upper, 'a')\n    local dot_substring_lower_index_index = string.find(dot_substring_lower, 'a')\n    local dot_substring_upper_index_index_length = #dot_substring_upper_index_index\n    local dot_substring_lower_index_index_length = #dot_substring_lower_index_index\n    local dot_substring_upper_index_index_index = string.find(dot_substring_upper, 'A')\n    local dot_substring_lower_index_index_index = string.find(dot_substring_lower, 'A')\n    local dot_substring_upper_index_index_index_length = #dot_substring_upper_index_index_index\n    local dot_substring_lower_index_index_index_length = #dot_substring_lower_index_index_index\n    local dot_substring_upper_index_index_index_index = string.find(dot_substring_upper, '0')\n    local dot_substring_lower_index_index_",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if file_name ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 1) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 2, 2) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 3, 3) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 4, 4) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 5, 5) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 6, 6) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 7, 7) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 8, 8) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 9, 9) ~= '.' then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    local valid = true\n    local dot_index = string.find(file_name, '.')\n    local dot_substring = string.sub(file_name, 1, dot_index)\n    local dot_substring_length = #dot_substring\n    local dot_substring_upper = string.upper(dot_substring)\n    local dot_substring_lower = string.lower(dot_substring)\n    local dot_substring_upper_length = #dot_substring_upper\n    local dot_substring_lower_length = #dot_substring_lower\n    local is_valid_substring = (dot_substring_length == dot_substring_upper_length) and (dot_substring_length == dot_substring_lower_length) and (dot_substring_upper_length == dot_substring_lower_length) and (dot_substring_upper == 'txt' or dot_substring_upper == 'exe' or dot_substring_upper == 'dll')\n    if not is_valid_substring then\n        valid = false\n    end\n    return valid\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]*$') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\.\\.[a-zA-Z]*$') then\n        return 'Yes'\n    end\n    return 'No'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= string.gsub(file_name, '^[0-9]', '') then\n        return 'No'\n    end\n    if not string.sub(file_name, 1, 1) ~= string.gsub(file_name, '^[a-zA-Z]', '') then\n        return 'No'\n    end\n    if string.sub(file_name, string.find(file_name, '.')+1, string.len(file_name)) ~= 'txt' and string.sub(file_name, string.find(file_name, '.')+1, string.len(file_name)) ~= 'exe' and string.sub(file_name, string.find(file_name, '.')+1, string.len(file_name)) ~= 'dll' then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name == 0 then\n        return 'No'\n    end\n    if file_name ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 1) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 2, 2) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 3, 3) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 4, 4) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 5, 5) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 6, 6) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 7, 7) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 8, 8) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 9, 9) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 10, 10) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 11, 11) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 12, 12) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 13, 13) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 14, 14) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 15, 15) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 16, 16) ~= '.' then",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if file_name:sub(1,1) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(2,2) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(3,3) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(4,4) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(5,5) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(6,6) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(7,7) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(8,8) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(9,9) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(10,10) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(11,11) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(12,12) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(13,13) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(14,14) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(15,15) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(16,16) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(17,17) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(18,18) ~= '",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]+\\\\.[0-9]+\\\\.[0-9]+$') then\n        return 'No'\n    end\n    local dot_index = string.find(file_name, '.')\n    local before_dot = string.lower(file_name:sub(1, dot_index))\n    if not before_dot:match('^[a-zA-Z]$') then\n        return 'No'\n    end\n    local after_dot = string.lower(file_name:sub(dot_index + 1, #file_name))\n    if not after_dot:match('^[txt|exe|dll]$') then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name < 2 then\n        return 'No'\n    end\n    if file_name:sub(1,1) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(2,2) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(3,3) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(4,4) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(5,5) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(6,6) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(7,7) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(8,8) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(9,9) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(10,10) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(11,11) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(12,12) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(13,13) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(14,14) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(15,15) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(16,16) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(17,17) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(18,18) ~= '",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if file_name ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 1) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 2, 2) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 3, 3) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 4, 4) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 5, 5) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 6, 6) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 7, 7) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 8, 8) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 9, 9) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 10, 10) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 11, 11) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 12, 12) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 13, 13) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 14, 14) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 15, 15) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 16, 16) ~= '.' then",
    "    if string.len(file_name) > 3 then\n        return 'No'\n    end\n    if string.len(file_name) < 3 then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 2) == '0' then\n        return 'No'\n    end\n    if string.sub(file_name, 3, 4) == '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 4, 5) == 'txt' then\n        return 'Yes'\n    end\n    if string.sub(file_name, 4, 5) == 'exe' then\n        return 'Yes'\n    end\n    if string.sub(file_name, 4, 5) == 'dll' then\n        return 'Yes'\n    end\n    return 'No'\nend",
    "    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if file_name ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 1) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 2, 2) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 3, 3) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 4, 4) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 5, 5) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 6, 6) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 7, 7) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 8, 8) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 9, 9) ~= '.' then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}\\\\.[a-zA-Z]{1}[a-zA-Z0-9]{1}\\\\.[a-zA-Z]{1}$') then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    local valid = true\n    local dot_index = string.find(file_name, '.')\n    local dot_substring = string.sub(file_name, 1, dot_index)\n    local dot_substring_length = #dot_substring\n    local dot_substring_upper = string.upper(dot_substring)\n    local dot_substring_lower = string.lower(dot_substring)\n    local dot_substring_upper_length = #dot_substring_upper\n    local dot_substring_lower_length = #dot_substring_lower\n    local dot_substring_upper_first_letter = string.sub(dot_substring_upper, 1, 1)\n    local dot_substring_lower_first_letter = string.sub(dot_substring_lower, 1, 1)\n    local dot_substring_upper_last_letter = string.sub(dot_substring_upper, dot_substring_upper_length, 1)\n    local dot_substring_lower_last_letter = string.sub(dot_substring_lower, dot_substring_lower_length, 1)\n    local dot_substring_upper_length_is_three = dot_substring_upper_length == 3\n    local dot_substring_lower_length_is_three = dot_substring_lower_length == 3\n    local dot_substring_upper_starts_with_letter = dot_substring_upper_first_letter == dot_substring_upper_last_letter\n    local dot_substring_lower_starts_with_letter = dot_substring_lower_first_letter == dot_substring_lower_last_letter\n    local dot_substring_upper_ends_with_letter = dot_substring_upper_last_letter == '.'\n    local dot_substring_lower_ends_with_letter = dot_substring_lower_last_letter == '.'\n    local dot_substring_upper_is_not_empty = dot_substring_upper_length > 0\n    local dot_substring_lower_is_not_empty = dot_substring_lower_length > 0\n    local dot_substring_",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}\\\\.[a-zA-Z]{1}[a-zA-Z0-9]{1}\\\\.[a-zA-Z]{1}$') then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name < 2 then\n        return 'No'\n    end\n    if file_name:sub(1,1) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(2,2) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(3,3) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(4,4) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(5,5) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(6,6) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(7,7) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(8,8) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(9,9) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(10,10) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(11,11) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(12,12) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(13,13) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(14,14) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(15,15) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(16,16) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(17,17) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(18,18) ~= '",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]+[0-9][0-9][0-9]$') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*$') == nil then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\.\\.[a-zA-Z][a-zA-Z0-9]*$') == nil then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\.\\.[a-zA-Z][a-zA-Z0-9]*\\.[a-zA-Z][a-zA-Z0-9]*$') == nil then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    local valid = true\n    local dot_index = string.find(file_name, '.')\n    local dot_before_index = string.find(file_name, '.', 1, dot_index)\n    local dot_after_index = string.find(file_name, '.', dot_index + 1)\n    local dot_before_length = dot_before_index + 1\n    local dot_after_length = dot_after_index + 1 - dot_before_length\n    local dot_before_char = string.sub(file_name, 1, dot_before_length)\n    local dot_after_char = string.sub(file_name, dot_after_length + 1)\n    if (dot_before_length > 3) or (dot_after_length > 3) or (not string.sub(dot_before_char, 1, 1) == 'a' .. 'z') or (not string.sub(dot_before_char, 1, 1) == 'A' .. 'Z') or (not string.sub(dot_after_char, 1, 1) == 'a' .. 'z') or (not string.sub(dot_after_char, 1, 1) == 'A' .. 'Z') or (not string.sub(dot_after_char, 1, 1) == '0' .. '9') then\n        valid = false\n    end\n    return valid\nend",
    "    local result = 'No'\n    if #file_name == 3 then\n        if file_name ~= '.0' and file_name ~= '.1' and file_name ~= '.2' then\n            result = 'Yes'\n        end\n    end\n    return result\nend",
    "    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name > 3 then\n        return 'No'\n    end",
    "    if #file_name > 3 then\n        return 'No'\n    end\n    if file_name ~= '.' then\n        return 'No'\n    end\n    local file_name_before_dot = string.sub(file_name, 1, #file_name - 2)\n    if not file_name_before_dot ~= '' then\n        return 'No'\n    end\n    local file_name_after_dot = string.sub(file_name, #file_name - 1)\n    if file_name_after_dot ~= 'txt' and file_name_after_dot ~= 'exe' and file_name_after_dot ~= 'dll' then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('[0-9]{3}') then\n        return 'No'\n    end\n    if file_name:match('[a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('[a-zA-Z][a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('[a-zA-Z][0-9][a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('[a-zA-Z][0-9][0-9][a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('[a-zA-Z][0-9][0-9][0-9][a-zA-Z]') then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    local valid = true\n    local dot_index = string.find(file_name, '.')\n    local dot_substring = string.sub(file_name, 1, dot_index)\n    local dot_substring_length = #dot_substring\n    local dot_substring_upper = string.upper(dot_substring)\n    local dot_substring_lower = string.lower(dot_substring)\n    local dot_substring_upper_length = #dot_substring_upper\n    local dot_substring_lower_length = #dot_substring_lower\n    local dot_substring_upper_index = string.find(dot_substring_upper, '.')\n    local dot_substring_lower_index = string.find(dot_substring_lower, '.')\n    local dot_substring_upper_index_length = #dot_substring_upper_index\n    local dot_substring_lower_index_length = #dot_substring_lower_index\n    local dot_substring_upper_index_upper = string.upper(dot_substring_upper_index)\n    local dot_substring_lower_index_lower = string.lower(dot_substring_lower_index)\n    local dot_substring_upper_index_upper_length = #dot_substring_upper_index_upper\n    local dot_substring_lower_index_lower_length = #dot_substring_lower_index_lower\n    local dot_substring_upper_index_lower_index = string.find(dot_substring_upper_index_lower, '.')\n    local dot_substring_lower_index_upper_index = string.find(dot_substring_lower_index_upper, '.')\n    local dot_substring_upper_index_lower_index_length = #dot_substring_upper_index_lower_index\n    local dot_substring_lower_index_upper_index_length = #dot_substring_lower_index_upper_index\n    local dot_substring_upper_index_lower_index_upper = string.upper(dot_substring_upper_index_lower_index)\n    local dot_",
    "    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name < 1 then\n        return 'No'\n    end\n    if file_name:sub(1,1) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(2,2) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(3,3) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(4,4) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(5,5) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(6,6) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(7,7) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(8,8) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(9,9) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(10,10) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(11,11) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(12,12) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(13,13) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(14,14) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(15,15) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(16,16) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(17,17) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(18,18) ~= '",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}\\\\.[a-zA-Z]{1}[a-zA-Z0-9]{1}\\\\.[a-zA-Z]{1}$') then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}[.]') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('[.](txt|exe|dll)$') then\n        return 'Yes'\n    end\n    return 'No'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}\\\\.[a-zA-Z]{1}[a-zA-Z0-9]{1}\\\\.[a-zA-Z]{1}$') then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}\\\\.[a-zA-Z]{1}[a-zA-Z0-9]{1}\\\\.[a-zA-Z]{1}\\\\.[a-zA-Z]{1}$') then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}\\\\.[a-zA-Z]{1}[a-zA-Z0-9]{1}\\\\.[a-zA-Z]{1}$') then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name > 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('^[0-9]') then\n        return 'No'\n    end\n    if file_name:match('^[0-9][0-9][0-9]') then\n        return 'No'\n    end\n    if file_name:match('^[0-9][0-9][0-9][0-9][0-9][0-9]') then\n        return 'No'\n    end\n    if file_name:match('^[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]+') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\.\\.[a-zA-Z][a-zA-Z0-9]*$') then\n        return 'Yes'\n    end\n    return 'No'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]*$') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\.\\.[a-zA-Z]*$') then\n        return 'Yes'\n    end\n    return 'No'\nend",
    "    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name < 2 then\n        return 'No'\n    end\n    if file_name:sub(1,1) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(2,2) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(3,3) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(4,4) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(5,5) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(6,6) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(7,7) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(8,8) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(9,9) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(10,10) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(11,11) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(12,12) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(13,13) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(14,14) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(15,15) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(16,16) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(17,17) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(18,18) ~= '",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]*$') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\.txt$') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\.exe$') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\.dll$') then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= string.gsub(file_name, '^[0-9]', '') then\n        return 'No'\n    end\n    if not string.gsub(file_name, '^[a-zA-Z]', '') then\n        return 'No'\n    end\n    if not string.gsub(file_name, '^[a-zA-Z][a-zA-Z0-9]*\\\\.[a-zA-Z0-9]*$', '') then\n        return 'No'\n    end\n    if string.gsub(file_name, '^[a-zA-Z][a-zA-Z0-9]*\\\\.[a-zA-Z0-9]*$', '') ~= file_name then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name < 1 then\n        return 'No'\n    end\n    if file_name ~= '.' then\n        return 'No'\n    end\n    if file_name[1] ~= 'a' .. 'z' and file_name[1] ~= 'A' .. 'Z' then\n        return 'No'\n    end\n    if file_name[2] ~= 'a' .. 'z' and file_name[2] ~= 'A' .. 'Z' then\n        return 'No'\n    end\n    if file_name[3] ~= 'a' .. 'z' and file_name[3] ~= 'A' .. 'Z' then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}[.]') then\n        return 'No'\n    end\n    if not file_name:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('[.](txt|exe|dll)$') then\n        return 'Yes'\n    end\n    return 'No'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}[.]') then\n        return 'No'\n    end\n    if not file_name:match('^[a-zA-Z][a-zA-Z0-9]*[.]') then\n        return 'No'\n    end\n    if file_name:match('[.](txt|exe|dll)$') then\n        return 'Yes'\n    end\n    return 'No'\nend",
    "    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name == 3 then\n        return 'No'\n    end\n    if file_name ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 1) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 2, 2) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 3, 3) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 4, 4) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 5, 5) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 6, 6) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 7, 7) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 8, 8) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 9, 9) ~= '.' then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    local valid = true\n    local dot_index = string.find(file_name, '.')\n    local dot_substring = string.sub(file_name, 1, dot_index)\n    local dot_substring_length = string.len(dot_substring)\n    local dot_substring_upper = string.upper(dot_substring)\n    local dot_substring_lower = string.lower(dot_substring)\n    local dot_substring_first_letter = string.sub(dot_substring, 1, 1)\n    local dot_substring_last_letter = string.sub(dot_substring, dot_substring_length, dot_substring_length)\n    local dot_substring_first_letter_upper = string.upper(dot_substring_first_letter)\n    local dot_substring_first_letter_lower = string.lower(dot_substring_first_letter)\n    local dot_substring_last_letter_upper = string.upper(dot_substring_last_letter)\n    local dot_substring_last_letter_lower = string.lower(dot_substring_last_letter)\n    local dot_substring_first_letter_is_letter = (dot_substring_first_letter_upper >= 'A' and dot_substring_first_letter_upper <= 'Z')\n    local dot_substring_last_letter_is_letter = (dot_substring_last_letter_upper >= 'A' and dot_substring_last_letter_upper <= 'Z')\n    local dot_substring_first_letter_is_not_digit = (dot_substring_first_letter_upper < '0' or dot_substring_first_letter_upper > '9')\n    local dot_substring_last_letter_is_not_digit = (dot_substring_last_letter_upper < '0' or dot_substring_last_letter_upper > '9')\n    local dot_substring_first_letter_is_not_dot = (dot_substring_first_letter != '.')\n    local dot_substring_last_letter_is_not_dot = (dot_substring",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}[.]') then\n        return 'No'\n    end\n    if not file_name:match('^[a-zA-Z]{1}[.]') then\n        return 'No'\n    end\n    if not file_name:match('[.](txt|exe|dll)$') then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    local valid = true\n    local dot_index = string.find(file_name, '.')\n    local dot_before_index = string.find(file_name, '.', 1, dot_index)\n    local dot_after_index = string.find(file_name, '.', dot_index + 1)\n    local dot_before_length = dot_before_index + 1\n    local dot_after_length = dot_after_index + 1 - dot_before_length\n    local dot_before_letter = string.sub(file_name, 1, dot_before_length)\n    local dot_after_letter = string.sub(file_name, dot_after_length + 1)\n    if (dot_before_letter == '') or (not string.isalpha(dot_before_letter)) or (dot_after_letter not in ['txt', 'exe', 'dll']) then\n        valid = false\n    end\n    return valid\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= string.gsub(file_name, '.', '') then\n        return 'No'\n    end\n    if not string.sub(file_name, 1, 1) ~= string.gsub(file_name, '.', '') then\n        return 'No'\n    end\n    if string.sub(file_name, -3, -1) ~= 'txt' and string.sub(file_name, -3, -1) ~= 'exe' and string.sub(file_name, -3, -1) ~= 'dll' then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}\\\\.[a-zA-Z]{1}[a-zA-Z0-9]{1}\\\\.[a-zA-Z]{1}$') then\n        return 'No'\n    end\n    if file_name:match('^[0-9]{3}\\\\.[a-zA-Z]{1}[a-zA-Z0-9]{1}\\\\.[a-zA-Z]{1}$') then\n        return 'No'\n    end\n    if file_name:match('^[0-9]{3}\\\\.[a-zA-Z]{1}[a-zA-Z0-9]{1}\\\\.[a-zA-Z]{1}$') then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}[.]') then\n        return 'No'\n    end\n    if not file_name:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    if not file_name:match('[.](txt|exe|dll)$') then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    local result = 'No'\n    if #file_name == 3 then\n        if file_name ~= '0' and file_name ~= '1' and file_name ~= '2' then\n            result = 'Yes'\n        end\n    end\n    return result\nend",
    "    if string.len(file_name) > 3 then\n        return 'No'\n    end\n    if string.len(file_name) < 3 then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 2) == '0' then\n        return 'No'\n    end\n    if string.sub(file_name, 2, 3) == '.' then\n        return 'No'\n    end\n    if string.sub(file_name, string.len(file_name) - 2, string.len(file_name)) == '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 1) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, string.len(file_name) - 3, string.len(file_name)) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 1) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, string.len(file_name) - 3, string.len(file_name)) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 1) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, string.len(file_name) - 3, string.len(file_name)) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 1) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, string.len(file_name) - 3, string.len(file_name)) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 1) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, string.len(file_name) - 3, string.len(file_name)) ~= '.' then\n        return 'No'\n    end\n    ",
    "    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name == 0 then\n        return 'No'\n    end\n    if #file_name ~= 1 then\n        return 'No'\n    end\n    if file_name:sub(1,1) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(2,2) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(3,3) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(4,4) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(5,5) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(6,6) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(7,7) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(8,8) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(9,9) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(10,10) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(11,11) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(12,12) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(13,13) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(14,14) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(15,15) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(16,16) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(17,17) ~= '.' then\n        return 'No",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]+\\\\.[a-zA-Z]{1}[a-zA-Z0-9]{1,2}\\\\.[a-zA-Z]{1}$') then\n        return 'No'\n    end\n    if file_name:match('^[0-9]+\\\\.[a-zA-Z]{1}[a-zA-Z0-9]{1,2}\\\\.[a-zA-Z]{1}$') then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= string.gsub(file_name, '.', '') then\n        return 'No'\n    end\n    if not string.sub(file_name, 1, 1) ~= string.sub(file_name, 1, 1) then\n        return 'No'\n    end\n    if file_name ~= string.gsub(file_name, '.', '') then\n        return 'No'\n    end\n    if file_name ~= string.gsub(file_name, '.', '') then\n        return 'No'\n    end\n    if file_name ~= string.gsub(file_name, '.', '') then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= string.gsub(file_name, '^[0-9]', '') then\n        return 'No'\n    end\n    if string.gsub(file_name, '^[a-zA-Z]') ~= '' then\n        return 'No'\n    end\n    if string.gsub(file_name, '^[a-zA-Z][0-9]{2}') ~= '' then\n        return 'No'\n    end\n    if string.gsub(file_name, '^[a-zA-Z][0-9]{2}.') ~= '' then\n        return 'No'\n    end\n    if string.gsub(file_name, '^[a-zA-Z][0-9]{2}.[a-zA-Z]{2}') ~= '' then\n        return 'No'\n    end\n    if string.gsub(file_name, '^[a-zA-Z][0-9]{2}.[a-zA-Z]{2}.[a-zA-Z]{2}') ~= '' then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}[.]') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('[.](txt|exe|dll)$') then\n        return 'Yes'\n    end\n    return 'No'\nend",
    "    local valid = true\n    local dot_index = string.find(file_name, '.')\n    local dot_substring = string.sub(file_name, 1, dot_index)\n    local dot_substring_length = #dot_substring\n    local dot_substring_upper = string.upper(dot_substring)\n    local dot_substring_lower = string.lower(dot_substring)\n    local dot_substring_upper_length = #dot_substring_upper\n    local dot_substring_lower_length = #dot_substring_lower\n    local dot_substring_upper_first_letter = string.sub(dot_substring_upper, 1, 1)\n    local dot_substring_lower_first_letter = string.sub(dot_substring_lower, 1, 1)\n    local dot_substring_upper_last_letter = string.sub(dot_substring_upper, dot_substring_upper_length, 1)\n    local dot_substring_lower_last_letter = string.sub(dot_substring_lower, dot_substring_lower_length, 1)\n    local is_valid_substring = (dot_substring_length == dot_substring_upper_length and dot_substring_length == dot_substring_lower_length and dot_substring_upper_length == dot_substring_lower_length and dot_substring_upper_first_letter == dot_substring_lower_first_letter and dot_substring_upper_last_letter == dot_substring_lower_last_letter)\n    local is_valid_substring_length = (dot_substring_length >= 3 and dot_substring_length <= 3)\n    local is_valid_substring_first_letter = (dot_substring_upper_first_letter >= 'A' and dot_substring_upper_first_letter <= 'Z') or (dot_substring_lower_first_letter >= 'a' and dot_substring_lower_first_letter <= 'z')\n    local is_valid_substring_last_letter = (dot_substring_upper_last_letter >= 'A' and dot_substring_",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}[.]') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('[.](txt|exe|dll)$') then\n        return 'Yes'\n    end\n    return 'No'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}[.]') then\n        return 'No'\n    end\n    local dot_index = string.find(file_name, '.')\n    local file_name_before_dot = string.sub(file_name, 1, dot_index)\n    local file_name_after_dot = string.sub(file_name, dot_index + 1)\n    if file_name_before_dot == '' or not string.isalpha(file_name_before_dot) then\n        return 'No'\n    end\n    if file_name_after_dot ~= 'txt' and file_name_after_dot ~= 'exe' and file_name_after_dot ~= 'dll' then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}[.]') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('[.](txt|exe|dll)$') then\n        return 'Yes'\n    end\n    return 'No'\nend",
    "    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name == 0 then\n        return 'No'\n    end\n    if file_name:sub(1,3) ~= \"0-9\" then\n        return 'No'\n    end\n    if file_name:sub(1,1) ~= \"a-z\" or file_name:sub(1,1) ~= \"A-Z\" then\n        return 'No'\n    end\n    if file_name:sub(file_name:find(\".\")) ~= \"txt\" or file_name:sub(file_name:find(\".\")) ~= \"exe\" or file_name:sub(file_name:find(\".\")) ~= \"dll\" then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= string.gsub(file_name, '.', '') then\n        return 'No'\n    end\n    if not string.sub(file_name, 1, 1) ~= string.gsub(file_name, '.', '') then\n        return 'No'\n    end\n    if file_name ~= string.gsub(file_name, '.', '') then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name < 2 then\n        return 'No'\n    end\n    if file_name:sub(1,1) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(2,2) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(3,3) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(4,4) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(5,5) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(6,6) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(7,7) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(8,8) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(9,9) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(10,10) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(11,11) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(12,12) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(13,13) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(14,14) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(15,15) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(16,16) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(17,17) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(18,18) ~= '",
    "    if string.len(file_name) > 3 then\n        return 'No'\n    end\n    if string.len(file_name) < 3 then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 2) == '0' or string.sub(file_name, 1, 2) == '1' or string.sub(file_name, 1, 2) == '2' or string.sub(file_name, 1, 2) == '3' or string.sub(file_name, 1, 2) == '4' or string.sub(file_name, 1, 2) == '5' or string.sub(file_name, 1, 2) == '6' or string.sub(file_name, 1, 2) == '7' or string.sub(file_name, 1, 2) == '8' or string.sub(file_name, 1, 2) == '9' then\n        return 'No'\n    end\n    if string.sub(file_name, string.len(file_name) - 2, string.len(file_name)) == 'txt' then\n        return 'Yes'\n    end\n    if string.sub(file_name, string.len(file_name) - 2, string.len(file_name)) == 'exe' then\n        return 'Yes'\n    end\n    if string.sub(file_name, string.len(file_name) - 2, string.len(file_name)) == 'dll' then\n        return 'Yes'\n    end\n    return 'No'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}[.]') then\n        return 'No'\n    end\n    local dot_index = string.find(file_name, '.')\n    if dot_index == nil then\n        return 'No'\n    end\n    local file_name_before_dot = string.sub(file_name, 1, dot_index)\n    if file_name_before_dot == '' then\n        return 'No'\n    end\n    local file_name_after_dot = string.sub(file_name, dot_index + 1)\n    if file_name_after_dot ~= 'txt' and file_name_after_dot ~= 'exe' and file_name_after_dot ~= 'dll' then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]+') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\.\\.') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\.\\.[a-zA-Z][a-zA-Z0-9]*$') then\n        return 'Yes'\n    end\n    return 'No'\nend",
    "    if #file_name > 3 then\n        return 'No'\n    end\n    if #file_name < 1 then\n        return 'No'\n    end\n    if file_name:sub(1,1) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(2,2) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(3,3) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(4,4) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(5,5) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(6,6) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(7,7) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(8,8) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(9,9) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(10,10) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(11,11) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(12,12) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(13,13) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(14,14) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(15,15) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(16,16) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(17,17) ~= '.' then\n        return 'No'\n    end\n    if file_name:sub(18,18) ~= '",
    "    local result = 'No'\n    if #file_name == 3 then\n        if file_name ~= '.txt' and file_name ~= '.exe' and file_name ~= '.dll' then\n            result = 'No'\n        else\n            result = 'Yes'\n        end\n    else\n        result = 'No'\n    end\n    return result\nend",
    "    local result = 'No'\n    if #file_name == 0 then\n        result = 'Yes'\n    elseif #file_name == 1 then\n        result = 'No'\n    elseif #file_name == 2 then\n        result = 'No'\n    elseif #file_name == 3 then\n        result = 'No'\n    elseif #file_name == 4 then\n        result = 'No'\n    elseif #file_name == 5 then\n        result = 'No'\n    elseif #file_name == 6 then\n        result = 'No'\n    elseif #file_name == 7 then\n        result = 'No'\n    elseif #file_name == 8 then\n        result = 'No'\n    elseif #file_name == 9 then\n        result = 'No'\n    elseif #file_name == 10 then\n        result = 'No'\n    elseif #file_name == 11 then\n        result = 'No'\n    elseif #file_name == 12 then\n        result = 'No'\n    elseif #file_name == 13 then\n        result = 'No'\n    elseif #file_name == 14 then\n        result = 'No'\n    elseif #file_name == 15 then\n        result = 'No'\n    elseif #file_name == 16 then\n        result = 'No'\n    elseif #file_name == 17 then\n        result = 'No'\n    elseif #file_name == 18 then\n        result = 'No'\n    elseif #file_name == 19 then\n        result = 'No'\n    elseif #file_name == 20 then\n        result = 'No'\n    elseif #file_name == 21 then\n        result = 'No'\n    elseif #file_name == 22 then\n        result = 'No'\n    elseif #file_name == 23 then\n        result = 'No'\n    elseif #file_name == 24 then\n        result = 'No'\n    elseif #file_name == 25 then\n        result = 'No'\n    elseif #file_name == 26 then\n        result = 'No'\n    elseif #file_name == 27 then\n        result = 'No'\n    ",
    "    if #file_name > 3 then\n        return 'No'\n    end\n    if file_name ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 1, 1) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 2, 2) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 3, 3) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 4, 4) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 5, 5) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 6, 6) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 7, 7) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 8, 8) ~= '.' then\n        return 'No'\n    end\n    if string.sub(file_name, 9, 9) ~= '.' then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]*$') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z][a-zA-Z0-9]*\\.\\.[txt|exe|dll]$') then\n        return 'Yes'\n    end\n    return 'No'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('[0-9]{3}') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]\\\\.[a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]\\\\.[a-zA-Z]\\\\.[a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]\\\\.[a-zA-Z]\\\\.[a-zA-Z]\\\\.[a-zA-Z]') then\n        return 'No'\n    end\n    return 'Yes'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= file_name:match('^[0-9]{3}[.]') then\n        return 'No'\n    end\n    if file_name:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    if file_name:match('[.](txt|exe|dll)$') then\n        return 'Yes'\n    end\n    return 'No'\nend",
    "    if #file_name < 3 then\n        return 'No'\n    end\n    if file_name ~= string.gsub(file_name, '.', '') then\n        return 'No'\n    end\n    if not string.sub(file_name, 1, 1) ~= string.gsub(file_name, '.', '') then\n        return 'No'\n    end\n    if string.sub(file_name, -3, -1) ~= '0-9' then\n        return 'No'\n    end\n    return 'Yes'\nend"
  ],
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ]
}
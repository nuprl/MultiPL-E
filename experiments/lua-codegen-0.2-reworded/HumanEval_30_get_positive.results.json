{
  "language": "lua",
  "name": "HumanEval_30_get_positive",
  "results": [
    {
      "exit_code": 1,
      "program": "-- Return only positive numbers in the table.\n-- >>> get_positive([-1, 2, -4, 5, 6])\n-- [2, 5, 6]\n-- >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n-- [5, 3, 2, 3, 9, 123, 1]\nlocal function get_positive(l)\n    return l:filter(function(x) return x > 0)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_positive\n    lu.assertEquals(candidate({-1, -2, 4, 5, 6}), {4, 5, 6})\n    lu.assertEquals(candidate({5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10}), {5, 3, 2, 3, 3, 9, 123, 1})\n    lu.assertEquals(candidate({-1, -2}), {})\n    lu.assertEquals(candidate({}), {})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpxk1rb0u_.lua:7: 'end' expected near ')'\n",
      "stdout": "",
      "timestamp": 1661907429
    },
    {
      "exit_code": 0,
      "program": "-- Return only positive numbers in the table.\n-- >>> get_positive([-1, 2, -4, 5, 6])\n-- [2, 5, 6]\n-- >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n-- [5, 3, 2, 3, 9, 123, 1]\nlocal function get_positive(l)\n    local t = {}\n    for i = 1, #l do\n        if l[i] > 0 then\n            table.insert(t, l[i])\n        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_positive\n    lu.assertEquals(candidate({-1, -2, 4, 5, 6}), {4, 5, 6})\n    lu.assertEquals(candidate({5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10}), {5, 3, 2, 3, 3, 9, 123, 1})\n    lu.assertEquals(candidate({-1, -2}), {})\n    lu.assertEquals(candidate({}), {})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "OK",
      "stderr": "",
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "timestamp": 1661907429
    },
    {
      "exit_code": 1,
      "program": "-- Return only positive numbers in the table.\n-- >>> get_positive([-1, 2, -4, 5, 6])\n-- [2, 5, 6]\n-- >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n-- [5, 3, 2, 3, 9, 123, 1]\nlocal function get_positive(l)\n    local t = {}\n    for i, v in ipairs(l) do\n        if v > 0 then t[v] = true end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_positive\n    lu.assertEquals(candidate({-1, -2, 4, 5, 6}), {4, 5, 6})\n    lu.assertEquals(candidate({5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10}), {5, 3, 2, 3, 3, 9, 123, 1})\n    lu.assertEquals(candidate({-1, -2}), {})\n    lu.assertEquals(candidate({}), {})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmfdjjwgl.lua:17: expected: {4, 5, 6}\nactual: {4=true, 5=true, 6=true}\nstack traceback:\n\t/tmp/tmpmfdjjwgl.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907429
    },
    {
      "exit_code": 0,
      "program": "-- Return only positive numbers in the table.\n-- >>> get_positive([-1, 2, -4, 5, 6])\n-- [2, 5, 6]\n-- >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n-- [5, 3, 2, 3, 9, 123, 1]\nlocal function get_positive(l)\n    local pos = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n            table.insert(pos, v)\n        end\n    end\n    return pos\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_positive\n    lu.assertEquals(candidate({-1, -2, 4, 5, 6}), {4, 5, 6})\n    lu.assertEquals(candidate({5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10}), {5, 3, 2, 3, 3, 9, 123, 1})\n    lu.assertEquals(candidate({-1, -2}), {})\n    lu.assertEquals(candidate({}), {})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "OK",
      "stderr": "",
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "timestamp": 1661907429
    },
    {
      "exit_code": 1,
      "program": "-- Return only positive numbers in the table.\n-- >>> get_positive([-1, 2, -4, 5, 6])\n-- [2, 5, 6]\n-- >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n-- [5, 3, 2, 3, 9, 123, 1]\nlocal function get_positive(l)\n    local t = {}\n    for inlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_positive\n    lu.assertEquals(candidate({-1, -2, 4, 5, 6}), {4, 5, 6})\n    lu.assertEquals(candidate({5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10}), {5, 3, 2, 3, 3, 9, 123, 1})\n    lu.assertEquals(candidate({-1, -2}), {})\n    lu.assertEquals(candidate({}), {})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmparry3lqj.lua:9: 'do' expected near '='\n",
      "stdout": "",
      "timestamp": 1661907429
    },
    {
      "exit_code": 1,
      "program": "-- Return only positive numbers in the table.\n-- >>> get_positive([-1, 2, -4, 5, 6])\n-- [2, 5, 6]\n-- >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n-- [5, 3, 2, 3, 9, 123, 1]\nlocal function get_positive(l)\n    return l:filter(function(v) return v > 0)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_positive\n    lu.assertEquals(candidate({-1, -2, 4, 5, 6}), {4, 5, 6})\n    lu.assertEquals(candidate({5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10}), {5, 3, 2, 3, 3, 9, 123, 1})\n    lu.assertEquals(candidate({-1, -2}), {})\n    lu.assertEquals(candidate({}), {})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpa79f58gu.lua:7: 'end' expected near ')'\n",
      "stdout": "",
      "timestamp": 1661907429
    },
    {
      "exit_code": 1,
      "program": "-- Return only positive numbers in the table.\n-- >>> get_positive([-1, 2, -4, 5, 6])\n-- [2, 5, 6]\n-- >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n-- [5, 3, 2, 3, 9, 123, 1]\nlocal function get_positive(l)\n    local t = {}\n    for _, v in ipairs(l) do\n        if v > 0 then t[v] = true end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_positive\n    lu.assertEquals(candidate({-1, -2, 4, 5, 6}), {4, 5, 6})\n    lu.assertEquals(candidate({5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10}), {5, 3, 2, 3, 3, 9, 123, 1})\n    lu.assertEquals(candidate({-1, -2}), {})\n    lu.assertEquals(candidate({}), {})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmp9ww10dg2.lua:22: 'end' expected (to close 'function' at line 6) near <eof>\n",
      "stdout": "",
      "timestamp": 1661907429
    },
    {
      "exit_code": 1,
      "program": "-- Return only positive numbers in the table.\n-- >>> get_positive([-1, 2, -4, 5, 6])\n-- [2, 5, 6]\n-- >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n-- [5, 3, 2, 3, 9, 123, 1]\nlocal function get_positive(l)\n    local pos = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n            pos[v] = true\n        end\n    end\n    return unpack(pos)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_positive\n    lu.assertEquals(candidate({-1, -2, 4, 5, 6}), {4, 5, 6})\n    lu.assertEquals(candidate({5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10}), {5, 3, 2, 3, 3, 9, 123, 1})\n    lu.assertEquals(candidate({-1, -2}), {})\n    lu.assertEquals(candidate({}), {})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgav8tvs0.lua:13: attempt to call a nil value (global 'unpack')\nstack traceback:\n\t/tmp/tmpgav8tvs0.lua:13: in local 'candidate'\n\t/tmp/tmpgav8tvs0.lua:19: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "timestamp": 1661907429
    },
    {
      "exit_code": 0,
      "program": "-- Return only positive numbers in the table.\n-- >>> get_positive([-1, 2, -4, 5, 6])\n-- [2, 5, 6]\n-- >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n-- [5, 3, 2, 3, 9, 123, 1]\nlocal function get_positive(l)\n    local t = {}\n    for i, v in ipairs(l) do\n        if v > 0 then\n            table.insert(t, v)\n        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_positive\n    lu.assertEquals(candidate({-1, -2, 4, 5, 6}), {4, 5, 6})\n    lu.assertEquals(candidate({5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10}), {5, 3, 2, 3, 3, 9, 123, 1})\n    lu.assertEquals(candidate({-1, -2}), {})\n    lu.assertEquals(candidate({}), {})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "OK",
      "stderr": "",
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "timestamp": 1661907429
    },
    {
      "exit_code": 1,
      "program": "-- Return only positive numbers in the table.\n-- >>> get_positive([-1, 2, -4, 5, 6])\n-- [2, 5, 6]\n-- >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n-- [5, 3, 2, 3, 9, 123, 1]\nlocal function get_positive(l)\n    local t = {}\n    for i = 1, #l, 2 do\n        if l[i] > 0 then\n            table.insert(t, l[i])\n        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_positive\n    lu.assertEquals(candidate({-1, -2, 4, 5, 6}), {4, 5, 6})\n    lu.assertEquals(candidate({5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10}), {5, 3, 2, 3, 3, 9, 123, 1})\n    lu.assertEquals(candidate({-1, -2}), {})\n    lu.assertEquals(candidate({}), {})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyhlrj0wi.lua:19: expected: {4, 5, 6}\nactual: {4, 6}\nstack traceback:\n\t/tmp/tmpyhlrj0wi.lua:19: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907429
    },
    {
      "exit_code": 1,
      "program": "-- Return only positive numbers in the table.\n-- >>> get_positive([-1, 2, -4, 5, 6])\n-- [2, 5, 6]\n-- >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n-- [5, 3, 2, 3, 9, 123, 1]\nlocal function get_positive(l)\n    local t = {}\n    for i=1,#\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_positive\n    lu.assertEquals(candidate({-1, -2, 4, 5, 6}), {4, 5, 6})\n    lu.assertEquals(candidate({5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10}), {5, 3, 2, 3, 3, 9, 123, 1})\n    lu.assertEquals(candidate({-1, -2}), {})\n    lu.assertEquals(candidate({}), {})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmppfboeo2n.lua:9: 'do' expected near '='\n",
      "stdout": "",
      "timestamp": 1661907429
    },
    {
      "exit_code": 1,
      "program": "-- Return only positive numbers in the table.\n-- >>> get_positive([-1, 2, -4, 5, 6])\n-- [2, 5, 6]\n-- >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n-- [5, 3, 2, 3, 9, 123, 1]\nlocal function get_positive(l)\n    local t = {}\n    for i=1,#\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_positive\n    lu.assertEquals(candidate({-1, -2, 4, 5, 6}), {4, 5, 6})\n    lu.assertEquals(candidate({5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10}), {5, 3, 2, 3, 3, 9, 123, 1})\n    lu.assertEquals(candidate({-1, -2}), {})\n    lu.assertEquals(candidate({}), {})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmppfboeo2n.lua:9: 'do' expected near '='\n",
      "stdout": "",
      "timestamp": 1661907429
    },
    {
      "exit_code": 1,
      "program": "-- Return only positive numbers in the table.\n-- >>> get_positive([-1, 2, -4, 5, 6])\n-- [2, 5, 6]\n-- >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n-- [5, 3, 2, 3, 9, 123, 1]\nlocal function get_positive(l)\n    local pos = {}\n    for inlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_positive\n    lu.assertEquals(candidate({-1, -2, 4, 5, 6}), {4, 5, 6})\n    lu.assertEquals(candidate({5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10}), {5, 3, 2, 3, 3, 9, 123, 1})\n    lu.assertEquals(candidate({-1, -2}), {})\n    lu.assertEquals(candidate({}), {})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpm0ecaatw.lua:9: 'do' expected near '='\n",
      "stdout": "",
      "timestamp": 1661907429
    },
    {
      "exit_code": 0,
      "program": "-- Return only positive numbers in the table.\n-- >>> get_positive([-1, 2, -4, 5, 6])\n-- [2, 5, 6]\n-- >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n-- [5, 3, 2, 3, 9, 123, 1]\nlocal function get_positive(l)\n    local t = {}\n    for _,v in ipairs(l) do\n        if v > 0 then\n            table.insert(t, v)\n        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_positive\n    lu.assertEquals(candidate({-1, -2, 4, 5, 6}), {4, 5, 6})\n    lu.assertEquals(candidate({5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10}), {5, 3, 2, 3, 3, 9, 123, 1})\n    lu.assertEquals(candidate({-1, -2}), {})\n    lu.assertEquals(candidate({}), {})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "OK",
      "stderr": "",
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "timestamp": 1661907429
    },
    {
      "exit_code": 0,
      "program": "-- Return only positive numbers in the table.\n-- >>> get_positive([-1, 2, -4, 5, 6])\n-- [2, 5, 6]\n-- >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n-- [5, 3, 2, 3, 9, 123, 1]\nlocal function get_positive(l)\n    local t = {}\n    for _,v in ipairs(l) do\n        if v > 0 then\n            table.insert(t, v)\n        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_positive\n    lu.assertEquals(candidate({-1, -2, 4, 5, 6}), {4, 5, 6})\n    lu.assertEquals(candidate({5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10}), {5, 3, 2, 3, 3, 9, 123, 1})\n    lu.assertEquals(candidate({-1, -2}), {})\n    lu.assertEquals(candidate({}), {})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "OK",
      "stderr": "",
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "timestamp": 1661907429
    },
    {
      "exit_code": 1,
      "program": "-- Return only positive numbers in the table.\n-- >>> get_positive([-1, 2, -4, 5, 6])\n-- [2, 5, 6]\n-- >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n-- [5, 3, 2, 3, 9, 123, 1]\nlocal function get_positive(l)\n    local pos = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n            pos[v] = true\n        end\n    end\n    return unpack(pos)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_positive\n    lu.assertEquals(candidate({-1, -2, 4, 5, 6}), {4, 5, 6})\n    lu.assertEquals(candidate({5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10}), {5, 3, 2, 3, 3, 9, 123, 1})\n    lu.assertEquals(candidate({-1, -2}), {})\n    lu.assertEquals(candidate({}), {})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgav8tvs0.lua:13: attempt to call a nil value (global 'unpack')\nstack traceback:\n\t/tmp/tmpgav8tvs0.lua:13: in local 'candidate'\n\t/tmp/tmpgav8tvs0.lua:19: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "timestamp": 1661907429
    },
    {
      "exit_code": 1,
      "program": "-- Return only positive numbers in the table.\n-- >>> get_positive([-1, 2, -4, 5, 6])\n-- [2, 5, 6]\n-- >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n-- [5, 3, 2, 3, 9, 123, 1]\nlocal function get_positive(l)\n    local t = {}\n    for _, v in ipairs(l) do\n        if v > 0 then t[v] = true end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_positive\n    lu.assertEquals(candidate({-1, -2, 4, 5, 6}), {4, 5, 6})\n    lu.assertEquals(candidate({5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10}), {5, 3, 2, 3, 3, 9, 123, 1})\n    lu.assertEquals(candidate({-1, -2}), {})\n    lu.assertEquals(candidate({}), {})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6ufc7o3f.lua:17: expected: {4, 5, 6}\nactual: {4=true, 5=true, 6=true}\nstack traceback:\n\t/tmp/tmp6ufc7o3f.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907429
    },
    {
      "exit_code": 1,
      "program": "-- Return only positive numbers in the table.\n-- >>> get_positive([-1, 2, -4, 5, 6])\n-- [2, 5, 6]\n-- >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n-- [5, 3, 2, 3, 9, 123, 1]\nlocal function get_positive(l)\n    return l:filter(function(v) v > 0)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_positive\n    lu.assertEquals(candidate({-1, -2, 4, 5, 6}), {4, 5, 6})\n    lu.assertEquals(candidate({5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10}), {5, 3, 2, 3, 3, 9, 123, 1})\n    lu.assertEquals(candidate({-1, -2}), {})\n    lu.assertEquals(candidate({}), {})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpt3vm0yyy.lua:7: syntax error near '>'\n",
      "stdout": "",
      "timestamp": 1661907429
    },
    {
      "exit_code": 0,
      "program": "-- Return only positive numbers in the table.\n-- >>> get_positive([-1, 2, -4, 5, 6])\n-- [2, 5, 6]\n-- >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n-- [5, 3, 2, 3, 9, 123, 1]\nlocal function get_positive(l)\n    local t = {}\n    for i = 1, #l, 1 do\n        if l[i] > 0 then\n            table.insert(t, l[i])\n        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_positive\n    lu.assertEquals(candidate({-1, -2, 4, 5, 6}), {4, 5, 6})\n    lu.assertEquals(candidate({5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10}), {5, 3, 2, 3, 3, 9, 123, 1})\n    lu.assertEquals(candidate({-1, -2}), {})\n    lu.assertEquals(candidate({}), {})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "OK",
      "stderr": "",
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "timestamp": 1661907429
    },
    {
      "exit_code": 0,
      "program": "-- Return only positive numbers in the table.\n-- >>> get_positive([-1, 2, -4, 5, 6])\n-- [2, 5, 6]\n-- >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n-- [5, 3, 2, 3, 9, 123, 1]\nlocal function get_positive(l)\n    local pos = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n            table.insert(pos, v)\n        end\n    end\n    return pos\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_positive\n    lu.assertEquals(candidate({-1, -2, 4, 5, 6}), {4, 5, 6})\n    lu.assertEquals(candidate({5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10}), {5, 3, 2, 3, 3, 9, 123, 1})\n    lu.assertEquals(candidate({-1, -2}), {})\n    lu.assertEquals(candidate({}), {})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "OK",
      "stderr": "",
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "timestamp": 1661907429
    }
  ]
}
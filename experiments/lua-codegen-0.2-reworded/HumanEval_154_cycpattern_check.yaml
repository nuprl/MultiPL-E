name: HumanEval_154_cycpattern_check
language: lua
prompt: "-- You are given 2 words. You need to return true if the second word or any\
  \ of its rotations is a substring in the first word\n-- >>> cycpattern_check(\"\
  abcd\",\"abd\") \n-- False\n-- >>> cycpattern_check(\"hello\",\"ell\") \n-- True\n\
  -- >>> cycpattern_check(\"whassup\",\"psus\") \n-- False\n-- >>> cycpattern_check(\"\
  abab\",\"baa\") \n-- True\n-- >>> cycpattern_check(\"efef\",\"eeff\") \n-- False\n\
  -- >>> cycpattern_check(\"himenss\",\"simen\") \n-- True\nlocal function cycpattern_check(a,\
  \ b)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cycpattern_check\n\
  \    lu.assertEquals(candidate('xyzw', 'xyw'), false)\n    lu.assertEquals(candidate('yello',\
  \ 'ell'), true)\n    lu.assertEquals(candidate('whattup', 'ptut'), false)\n    lu.assertEquals(candidate('efef',\
  \ 'fee'), true)\n    lu.assertEquals(candidate('abab', 'aabb'), false)\n    lu.assertEquals(candidate('winemtt',\
  \ 'tinem'), true)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local aa = string.lower(a)\n    local bb = string.lower(b)\n  \
    \  for i=1,#                                                                 \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                             ",
  "    local a_len = string.len(a)\n    local b_len = string.len(b)\n    local i =\
    \ 1\n    while i <= a_len and i <= b_len do\n        if a[a_len - i] == b[b_len\
    \ - i] then\n            return true\n        end\n        i = i + 1\n    end\n\
    \    return false\nend", "    local a = string.lower(a)\n    local b = string.lower(b)\n\
    \    local i = 1\n    while i <= #a do\n        if string.sub(a, i, i) == b then\n\
    \            return true\n        end\n        i = i + 1\n    end\n    return\
    \ false\nend", "    local a_len = #a\n    local b_len = #b\n    local i = 1\n\
    \    while i <= b_len do\n        if a:sub(1,a_len) == b:sub(1,b_len):gsub(1,a_len)\
    \ then\n            return true\n        end\n        i = i + 1\n    end\n   \
    \ return false\nend", "    local t = {}\n    for i = 1, #a, 2 do\n        if a:sub(1,\
    \ i) == b:sub(1, i) then\n            t[i] = true\n        end\n    end\n    return\
    \ #t > 0\nend", "    local a_len = #a\n    local b_len = #b\n    local i = 1\n\
    \    while i <= a_len do\n        if a:sub(i, i, b):match() then\n           \
    \ return true\n        end\n        i = i + 1\n    end\n    return false\nend",
  "    local a_len = #a\n    local b_len = #b\n    local i = 1\n    while i <= b_len\
    \ do\n        if a:sub(1,a_len) == b:sub(1,b_len):gsub(1,a_len) then\n       \
    \     return true\n        end\n        i = i + 1\n    end\n    return false\n\
    end", "    local a_len = #a\n    local b_len = #b\n    local i = 1\n    while\
    \ i <= b_len do\n        if a_len >= i and string.sub(a, 1, i) == string.sub(b,\
    \ 1, i) then\n            return true\n        end\n        i = i + 1\n    end\n\
    \    return false\nend", "    local a_len = #a\n    local b_len = #b\n    local\
    \ i = 1\n    while i <= b_len do\n        if a:sub(1,a_len) == b:sub(1,b_len):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):g",
  "    local a_len = string.len(a)\n    local b_len = string.len(b)\n    local b_pos\
    \ = 1\n    local a_pos = 1\n    while a_pos <= a_len and b_pos <= b_len do\n \
    \       if a[a_pos] == b[b_pos] then\n            a_pos = a_pos + 1\n        \
    \    b_pos = b_pos + 1\n        else\n            a_pos = a_pos + 1\n        end\n\
    \    end\n    return a_pos == a_len and b_pos == b_len\nend", "    local a = string.lower(a)\n\
    \    local b = string.lower(b)\n    local i = 1\n    while i <= #a do\n      \
    \  if a:sub(i, i) == b then\n            return true\n        end\n        i =\
    \ i + 1\n    end\n    return false\nend", "    local aa = string.gsub(a, \"%\"\
    , \"\")\n    local bb = string.gsub(b, \"%\", \"\")\n    for i=1,#           \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                           ", "    local a_len\
    \ = #a\n    local b_len = #b\n    local i = 1\n    while i <= a_len do\n     \
    \   if a:sub(i, i, b) == b then\n            return true\n        end\n      \
    \  i = i + 1\n    end\n    return false\nend", "    local a = string.lower(a)\n\
    \    local b = string.lower(b)\n    local i = 1\n    while i <= #a do\n      \
    \  if a:sub(i, i) == b then\n            return true\n        end\n        i =\
    \ i + 1\n    end\n    return false\nend", "    local a_len = #a\n    local b_len\
    \ = #b\n    local i = 1\n    while i <= b_len do\n        if a:sub(1,a_len) ==\
    \ b:sub(1,b_len) then\n            return true\n        end\n        i = i + 1\n\
    \    end\n    return false\nend", "    local a = string.lower(a)\n    local b\
    \ = string.lower(b)\n    for i=1,#                                           \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \       ", "    local a_len = string.len(a)\n    local b_len = string.len(b)\n\
    \    local i = 1\n    while i <= a_len do\n        if string.sub(a, i, b_len)\
    \ == b then\n            return true\n        end\n        i = i + 1\n    end\n\
    \    return false\nend", "    local a = string.lower(a)\n    local b = string.lower(b)\n\
    \    local i = 1\n    while i <= #a do\n        if a:sub(i, i) == b then\n   \
    \         return true\n        end\n        i = i + 1\n    end\n    return false\n\
    end", "    local t = {}\n    for i = 1, #a, 2 do\n        if a:sub(1,i) == b:sub(1,i)\
    \ then\n            t[i] = true\n        end\n    end\n    return #t > 0\nend",
  "    local a_len = string.len(a)\n    local b_len = string.len(b)\n    local i =\
    \ 1\n    while i <= a_len do\n        if a:sub(i, i) == b then\n            return\
    \ true\n        end\n        i = i + 1\n    end\n    return false\nend", "   \
    \ local a = string.lower(a)\n    local b = string.lower(b)\n    local i = 1\n\
    \    while i <= #a do\n        if a:sub(i,i) == b then\n            return true\n\
    \        end\n        i = i + 1\n    end\n    return false\nend", "    local a_len\
    \ = string.len(a)\n    local b_len = string.len(b)\n    local a_set = {}\n   \
    \ for i = 1, a_len do\n        a_set[a[i]] = true\n    end\n    local b_set =\
    \ {}\n    for i = 1, b_len do\n        b_set[b[i]] = true\n    end\n    for k,\
    \ v in pairs(a_set) do\n        if b_set[k] then\n            return true\n  \
    \      end\n    end\n    return false\nend", "    local a_len = string.len(a)\n\
    \    local b_len = string.len(b)\n    local i = 1\n    while i <= b_len do\n \
    \       if a_len > i and string.sub(a, 1, i) == string.sub(b, 1, i) then\n   \
    \         return true\n        end\n        i = i + 1\n    end\n    return false\n\
    end", "    local a_len = string.len(a)\n    local b_len = string.len(b)\n    local\
    \ i = 1\n    while i <= a_len and i <= b_len do\n        if a[a_len - i] == b[b_len\
    \ - i] then\n            return true\n        end\n        i = i + 1\n    end\n\
    \    return false\nend", "    local a_len = string.len(a)\n    local b_len = string.len(b)\n\
    \    local i = 1\n    while i <= b_len do\n        if string.sub(a, i, i) == b\
    \ then\n            return true\n        end\n        i = i + 1\n    end\n   \
    \ return false\nend", "    local a_len = string.len(a)\n    local b_len = string.len(b)\n\
    \    local i = 1\n    while i <= a_len do\n        if a[i] == b[1] then\n    \
    \        if i + b_len - 1 > a_len then\n                return true\n        \
    \    else\n                i = i + b_len - 1\n            end\n        else\n\
    \            i = i + 1\n        end\n    end\n    return false\nend", "    local\
    \ a = string.lower(a)\n    local b = string.lower(b)\n    for i = 1, #a, 2 do\n\
    \        if a:sub(i, i) == b then\n            return true\n        end\n    end\n\
    \    return false\nend", "    local a_len = string.len(a)\n    local b_len = string.len(b)\n\
    \    local i = 1\n    while i <= b_len do\n        if a_len > i and string.sub(a,\
    \ 1, i) == string.sub(b, 1, i) then\n            return true\n        end\n  \
    \      i = i + 1\n    end\n    return false\nend", "    local a_len = string.len(a)\n\
    \    local b_len = string.len(b)\n    local i = 1\n    while i <= a_len and i\
    \ <= b_len do\n        if a[a_len - i] == b[b_len - i] then\n            return\
    \ true\n        end\n        i = i + 1\n    end\n    return false\nend", "   \
    \ local a_len = #a\n    local b_len = #b\n    local i = 1\n    while i <= b_len\
    \ do\n        if a:sub(1,a_len) == b:sub(1,b_len):gsub(1,a_len) then\n       \
    \     return true\n        end\n        i = i + 1\n    end\n    return false\n\
    end", "    local a_len = string.len(a)\n    local b_len = string.len(b)\n    local\
    \ a_index = 1\n    local b_index = 1\n    while a_index <= a_len and b_index <=\
    \ b_len do\n        if a[a_index] == b[b_index] then\n            a_index = a_index\
    \ + 1\n            b_index = b_index + 1\n        else\n            a_index =\
    \ a_index + 1\n        end\n    end\n    return a_index == a_len and b_index ==\
    \ b_len\nend", "    local a_len = string.len(a)\n    local b_len = string.len(b)\n\
    \    local i = 1\n    while i <= a_len do\n        if a:sub(i, i, b) == b then\n\
    \            return true\n        end\n        i = i + 1\n    end\n    return\
    \ false\nend", "    local a_len = string.len(a)\n    local b_len = string.len(b)\n\
    \    local i = 1\n    while i <= a_len and i <= b_len do\n        if a[a_len -\
    \ i] == b[b_len - i] then\n            return true\n        end\n        i = i\
    \ + 1\n    end\n    return false\nend", "    local a_len = string.len(a)\n   \
    \ local b_len = string.len(b)\n    local i = 1\n    while i <= a_len and i <=\
    \ b_len do\n        if a[a_len - i] == b[b_len - i] then\n            return true\n\
    \        end\n        i = i + 1\n    end\n    return false\nend", "    local a_len\
    \ = string.len(a)\n    local b_len = string.len(b)\n    local i = 1\n    while\
    \ i <= a_len and i <= b_len do\n        if a[a_len - i] == b[b_len - i] then\n\
    \            return true\n        end\n        i = i + 1\n    end\n    return\
    \ false\nend", "    local a_len = string.len(a)\n    local b_len = string.len(b)\n\
    \    local i = 1\n    while i <= a_len and i <= b_len do\n        if a:sub(i,\
    \ i) == b:sub(1, b_len) then\n            return true\n        end\n        i\
    \ = i + 1\n    end\n    return false\nend", "    local a_len = string.len(a)\n\
    \    local b_len = string.len(b)\n    local i = 1\n    while i <= b_len do\n \
    \       if a_len >= i and string.sub(a, 1, i) == string.sub(b, 1, i) then\n  \
    \          return true\n        end\n        i = i + 1\n    end\n    return false\n\
    end", "    local aa = string.lower(a)\n    local bb = string.lower(b)\n    for\
    \ i = 1, #aa do\n        if aa:sub(1,i) == bb then return true end\n    end\n\
    \    return false\nend", "    local a_len = string.len(a)\n    local b_len = string.len(b)\n\
    \    local i = 1\n    while i <= a_len and i <= b_len and a[(a_len - i) + 1] ==\
    \ b[1] do\n        if a[a_len - i + 1] == b[2] then\n            return true\n\
    \        end\n        i = i + 1\n    end\n    return false\nend", "    local a_len\
    \ = string.len(a)\n    local b_len = string.len(b)\n    local i = 1\n    while\
    \ i <= a_len and i <= b_len do\n        if a[a_len - i] == b[b_len - i] then\n\
    \            return true\n        end\n        i = i + 1\n    end\n    return\
    \ false\nend", "    local a_len = string.len(a)\n    local b_len = string.len(b)\n\
    \    local i = 1\n    while i <= a_len and i <= b_len do\n        if a[a_len -\
    \ i] == b[b_len - i] then\n            return true\n        end\n        i = i\
    \ + 1\n    end\n    return false\nend", "    local a = string.lower(a)\n    local\
    \ b = string.lower(b)\n    local i = 1\n    while i <= #a do\n        if a:sub(i,i)\
    \ == b then\n            return true\n        end\n        i = i + 1\n    end\n\
    \    return false\nend", "    local aa = string.lower(a)\n    local bb = string.lower(b)\n\
    \    for i = 1, #aa do\n        if aa:sub(1,i) == bb then\n            return\
    \ true\n        end\n    end\n    return false\nend", "    local a_len = string.len(a)\n\
    \    local b_len = string.len(b)\n    local i = 1\n    while i <= a_len and i\
    \ <= b_len do\n        if a[a_len - i] == b[b_len - i] then\n            return\
    \ true\n        end\n        i = i + 1\n    end\n    return false\nend", "   \
    \ local a_len = #a\n    local b_len = #b\n    local i = 1\n    while i <= a_len\
    \ do\n        if a:sub(i, i, b) == b then\n            return true\n        end\n\
    \        i = i + 1\n    end\n    return false\nend", "    local a_len = string.len(a)\n\
    \    local b_len = string.len(b)\n    local i = 1\n    while i <= b_len do\n \
    \       if a_len >= i and string.sub(a, 1, i) == b then\n            return true\n\
    \        end\n        i = i + 1\n    end\n    return false\nend", "    local a_len\
    \ = string.len(a)\n    local b_len = string.len(b)\n    local i = 1\n    while\
    \ i <= a_len and i <= b_len do\n        if a[a_len - i] == b[b_len - i] then\n\
    \            return true\n        end\n        i = i + 1\n    end\n    return\
    \ false\nend", "    local a_len = string.len(a)\n    local b_len = string.len(b)\n\
    \    local i = 1\n    while i <= a_len do\n        if a:sub(i, i) == b:sub(1,\
    \ b_len) then\n            return true\n        end\n        i = i + 1\n    end\n\
    \    return false\nend", "    local a_len = string.len(a)\n    local b_len = string.len(b)\n\
    \    local i = 1\n    while i <= a_len do\n        if string.sub(a, i, b_len)\
    \ == b then\n            return true\n        end\n        i = i + 1\n    end\n\
    \    return false\nend", "    local a_len = string.len(a)\n    local b_len = string.len(b)\n\
    \    local i = 1\n    while i <= a_len and i <= b_len do\n        if a:sub(i,\
    \ i) == b:sub(1, b_len) then\n            return true\n        end\n        i\
    \ = i + 1\n    end\n    return false\nend", "    local a_len = string.len(a)\n\
    \    local b_len = string.len(b)\n    local i = 1\n    while i <= a_len do\n \
    \       if a[i] == b[1] then\n            if b_len == 2 then\n               \
    \ return true\n            elseif b_len > 2 and string.sub(a, i, b_len) == b then\n\
    \                return true\n            end\n        end\n        i = i + 1\n\
    \    end\n    return false\nend", "    local a_len = #a\n    local b_len = #b\n\
    \    local i = 1\n    while i <= b_len do\n        if a:sub(i, i, b:sub(1, i))\
    \ == b then\n            return true\n        end\n        i = i + 1\n    end\n\
    \    return false\nend", "    local a_len = string.len(a)\n    local b_len = string.len(b)\n\
    \    local i = 1\n    while i <= a_len and i <= b_len do\n        if a[a_len -\
    \ i] == b[b_len - i] then\n            return true\n        end\n        i = i\
    \ + 1\n    end\n    return false\nend", "    local a_len = string.len(a)\n   \
    \ local b_len = string.len(b)\n    local i = 1\n    while i <= b_len do\n    \
    \    if string.sub(a, i, i) == b then\n            return true\n        end\n\
    \        i = i + 1\n    end\n    return false\nend", "    local a_len = string.len(a)\n\
    \    local b_len = string.len(b)\n    local i = 1\n    while i <= b_len do\n \
    \       if a:sub(1,a_len) == b:sub(1,b_len):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):gsub(1,1):",
  "    local a_len = #a\n    local b_len = #b\n    local i = 1\n    while i <= a_len\
    \ do\n        if a:sub(i, i, b) == b then\n            return true\n        end\n\
    \        i = i + 1\n    end\n    return false\nend", "    local t = {}\n    for\
    \ i=1,#a do\n        for j=1,#b do\n            if a[i] == b[j] then\n       \
    \         if t[i+j] == nil then\n                    t[i+j] = 1\n            \
    \    else\n                    t[i+j] = t[i+j] + 1\n            end\n        end\n\
    \    end\n    return t[#a+#b] > 0\nend", "    local a_len = string.len(a)\n  \
    \  local b_len = string.len(b)\n    local i = 1\n    while i <= a_len do\n   \
    \     if string.sub(a, i, b_len) == b then\n            return true\n        end\n\
    \        i = i + 1\n    end\n    return false\nend", "    local aa = string.gsub(a,\
    \ \"%\", \"\")\n    local bb = string.gsub(b, \"%\", \"\")\n    for i = 1, #aa\
    \ do\n        if string.find(aa, string.lower(aa[i])) == nil then\n          \
    \  return false\n        end\n    end\n    for i = 1, #bb do\n        if string.find(bb,\
    \ string.lower(bb[i])) == nil then\n            return false\n        end\n  \
    \  end\n    return true\nend", "    local a = string.lower(a)\n    local b = string.lower(b)\n\
    \    for i = 1, #a, 2 do\n        if a:sub(i, i) == b then\n            return\
    \ true\n        end\n    end\n    return false\nend", "    local a_len = string.len(a)\n\
    \    local b_len = string.len(b)\n    local i = 1\n    while i <= b_len do\n \
    \       if a_len > 0 and a[a_len - 1] == b[i - 1] then\n            return true\n\
    \        end\n        i = i + 1\n    end\n    return false\nend", "    local a_len\
    \ = #a\n    local b_len = #b\n    local i = 1\n    while i <= a_len do\n     \
    \   if a:sub(i, i, b) == b then\n            return true\n        end\n      \
    \  i = i + 1\n    end\n    return false\nend", "    local a_len = string.len(a)\n\
    \    local b_len = string.len(b)\n    local i = 1\n    while i <= a_len and i\
    \ <= b_len do\n        if a[a_len - i] == b[b_len - i] then\n            return\
    \ true\n        end\n        i = i + 1\n    end\n    return false\nend", "   \
    \ local a = string.lower(a)\n    local b = string.lower(b)\n    local i = 1\n\
    \    while i <= #a do\n        if a:sub(i,i) == b then\n            return true\n\
    \        end\n        i = i + 1\n    end\n    return false\nend", "    local a_len\
    \ = string.len(a)\n    local b_len = string.len(b)\n    local i = 1\n    while\
    \ i <= b_len do\n        if a_len >= i and string.sub(a, 1, i) == string.sub(b,\
    \ 1, i) then\n            return true\n        end\n        i = i + 1\n    end\n\
    \    return false\nend", "    local a_len = string.len(a)\n    local b_len = string.len(b)\n\
    \    local a_pattern = string.rep(\"^\", a_len)\n    local b_pattern = string.rep(\"\
    ^\", b_len)\n    local a_pattern_len = string.len(a_pattern)\n    local b_pattern_len\
    \ = string.len(b_pattern)\n    local a_pattern_index = 1\n    local b_pattern_index\
    \ = 1\n    while a_pattern_index <= a_pattern_len and b_pattern_index <= b_pattern_len\
    \ do\n        if a_pattern[a_pattern_index] == b_pattern[b_pattern_index] then\n\
    \            return true\n        end\n        a_pattern_index = a_pattern_index\
    \ + 1\n        b_pattern_index = b_pattern_index + 1\n    end\n    return false\n\
    end", "    local t = {}\n    for i=1,#a do\n        if a:sub(1,#b)==b then\n \
    \           t[#t+1] = a:sub(i,#b)\n        end\n    end\n    return #t > 0\nend",
  "    local a_len = #a\n    local b_len = #b\n    local i = 1\n    while i <= a_len\
    \ do\n        if a:sub(i, i, b) == b then\n            return true\n        end\n\
    \        i = i + 1\n    end\n    return false\nend", "    local a_len = string.len(a)\n\
    \    local b_len = string.len(b)\n    local i = 1\n    while i <= a_len and i\
    \ <= b_len and a[i-1] == b[i-1] do\n        i = i + 1\n    end\n    return i -\
    \ 1 == b_len\nend", "    local a_len = string.len(a)\n    local b_len = string.len(b)\n\
    \    local i = 1\n    while i <= a_len and i <= b_len do\n        if a[a_len -\
    \ i] == b[b_len - i] then\n            return true\n        end\n        i = i\
    \ + 1\n    end\n    return false\nend", "    local t = {}\n    for i=1,#a do\n\
    \        for j=1,#b do\n            if a[i] == b[j] then\n                if t[i-1]\
    \ == nil then\n                    t[i-1] = j\n                else\n        \
    \            t[i-1] = t[i-1] or j\n            end\n        end\n    end\n   \
    \ return t[#a] == #b\nend", "    local a = string.lower(a)\n    local b = string.lower(b)\n\
    \    local i = 1\n    while i <= #a do\n        if b == a: return true\n     \
    \   if a[i] == b[1]: return true\n        i = i + 1\n    end\n    return false\n\
    end", "    local aa = string.gsub(a, \"%\", \"\")\n    local bb = string.gsub(b,\
    \ \"%\", \"\")\n    for i = 1, #aa do\n        if string.find(aa, bb, i) == i\
    \ then\n            return true\n        end\n    end\n    return false\nend",
  "    local a_len = string.len(a)\n    local b_len = string.len(b)\n    local i =\
    \ 1\n    while i <= a_len and i <= b_len do\n        if a[a_len - i] == b[b_len\
    \ - i] then\n            return true\n        end\n        i = i + 1\n    end\n\
    \    return false\nend", "    local a_len = string.len(a)\n    local b_len = string.len(b)\n\
    \    local i = 1\n    while i <= a_len and i <= b_len do\n        if a[a_len -\
    \ i] == b[b_len - i] then\n            return true\n        end\n        i = i\
    \ + 1\n    end\n    return false\nend", "    local a_len = string.len(a)\n   \
    \ local b_len = string.len(b)\n    local i = 1\n    while i <= a_len do\n    \
    \    if a:sub(i,i) == b then\n            return true\n        end\n        i\
    \ = i + 1\n    end\n    return false\nend", "    local aa = string.lower(a)\n\
    \    local bb = string.lower(b)\n    local i = 1\n    while i <= #aa do\n    \
    \    if aa:sub(i,i) == bb then\n            return true\n        end\n       \
    \ i = i + 1\n    end\n    return false\nend", "    local a_len = #a\n    local\
    \ b_len = #b\n    local i = 1\n    while i <= a_len do\n        if a:sub(i, i,\
    \ b) == b then\n            return true\n        end\n        i = i + 1\n    end\n\
    \    return false\nend", "    local a_len = string.len(a)\n    local b_len = string.len(b)\n\
    \    local i = 1\n    while i <= a_len and i <= b_len do\n        if a[a_len -\
    \ i] == b[b_len - i] then\n            return true\n        end\n        i = i\
    \ + 1\n    end\n    return false\nend", "    local a = string.lower(a)\n    local\
    \ b = string.lower(b)\n    local i = 1\n    while i <= #a do\n        if a:sub(i,i)\
    \ == b then return true end\n        i = i + 1\n    end\n    return false\nend",
  "    local a = string.lower(a)\n    local b = string.lower(b)\n    local i = 1\n\
    \    while i <= #a do\n        if a:sub(i, i) == b then\n            return true\n\
    \        end\n        i = i + 1\n    end\n    return false\nend", "    local t\
    \ = {}\n    for i=1,#a do\n        if a[i] == b[1] then\n            if t[b[2]]\
    \ then\n                return true\n            else\n                t[b[2]]\
    \ = true\n            end\n        end\n    end\n    return false\nend", "   \
    \ local t = {}\n    for i=1,#a do\n        if a:sub(1,i)==b then\n           \
    \ t[i] = true\n        end\n    end\n    return #t\nend", "    local a = string.lower(a)\n\
    \    local b = string.lower(b)\n    local i = 1\n    while i <= #a do\n      \
    \  if a:sub(i,i) == b then\n            return true\n        end\n        i =\
    \ i + 1\n    end\n    return false\nend", "    local a_len = string.len(a)\n \
    \   local b_len = string.len(b)\n    local i = 1\n    while i <= b_len do\n  \
    \      if a_len > i and string.sub(a, 1, i) == string.sub(b, 1, i) then\n    \
    \        return true\n        end\n        i = i + 1\n    end\n    return false\n\
    end", "    local t = {}\n    for i = 1, #a do\n        for j = 1, #b do\n    \
    \        if a[i] == b[j] then\n                if t[i] == nil then\n         \
    \           t[i] = j\n                else\n                    t[i] = t[i]\n\
    \                end\n            end\n        end\n    end\n    return t[#a]\
    \ == #b\nend", "    local t = {}\n    for i = 1, #a do\n        for j = 1, #b\
    \ do\n            if a[i] == b[j] then\n                if t[b[j-1]] == nil then\n\
    \                    t[b[j-1]] = 1\n                else\n                   \
    \ t[b[j-1]] = t[b[j-1]] + 1\n                end\n            end\n        end\n\
    \    end\n    return t[1] > 0\nend", "    local a_len = string.len(a)\n    local\
    \ b_len = string.len(b)\n    local i = 1\n    while i <= a_len and i <= b_len\
    \ do\n        if a[a_len - i] == b[b_len - i] then\n            return true\n\
    \        end\n        i = i + 1\n    end\n    return false\nend", "    local a\
    \ = string.lower(a)\n    local b = string.lower(b)\n    local i = 1\n    while\
    \ i <= #a do\n        if a:sub(i,i) == b then\n            return true\n     \
    \   end\n        i = i + 1\n    end\n    return false\nend", "    local a_len\
    \ = string.len(a)\n    local b_len = string.len(b)\n    local i = 1\n    while\
    \ i <= a_len and i <= b_len do\n        if a[a_len - i] == b[b_len - i] then\n\
    \            return true\n        end\n        i = i + 1\n    end\n    return\
    \ false\nend", "    local a = string.lower(a)\n    local b = string.lower(b)\n\
    \    local i = 1\n    while i <= #a do\n        if a:sub(i,i) == b then\n    \
    \        return true\n        end\n        i = i + 1\n    end\n    return false\n\
    end", "    local a_len = string.len(a)\n    local b_len = string.len(b)\n    local\
    \ i = 1\n    while i <= a_len and i <= b_len do\n        if a[a_len - i] == b[b_len\
    \ - i] then\n            return true\n        end\n        i = i + 1\n    end\n\
    \    return false\nend", "    local a_len = string.len(a)\n    local b_len = string.len(b)\n\
    \    local i = 1\n    while i <= a_len do\n        if a:sub(i, i) == b then\n\
    \            return true\n        end\n        i = i + 1\n    end\n    return\
    \ false\nend", "    local a_len = string.len(a)\n    local b_len = string.len(b)\n\
    \    local b_pos = 1\n    while b_pos <= b_len do\n        if a_len - b_pos +\
    \ 1 >= 0 then\n            if a[a_len - b_pos + 1] == b[b_pos] then\n        \
    \        return true\n            end\n        end\n        b_pos = b_pos + 1\n\
    \    end\n    return false\nend", "    local a_len = string.len(a)\n    local\
    \ b_len = string.len(b)\n    local i = 1\n    while i <= a_len do\n        if\
    \ a[i] == b[1] then\n            if b_len == 2 then\n                return true\n\
    \            else\n                return cycpattern_check(a, b[2:])\n       \
    \     end\n        end\n        i = i + 1\n    end\n    return false\nend", " \
    \   local a = string.lower(a)\n    local b = string.lower(b)\n    local i = 1\n\
    \    while i <= #a do\n        if a:sub(i,i) == b then\n            return true\n\
    \        end\n        i = i + 1\n    end\n    return false\nend", "    local a\
    \ = string.lower(a)\n    local b = string.lower(b)\n    local i = 1\n    while\
    \ i <= #a do\n        if a:sub(i, i) == b then\n            return true\n    \
    \    end\n        i = i + 1\n    end\n    return false\nend", "    local t = {}\n\
    \    for i=1,#a do\n        for j=1,#b do\n            if a[i] == b[j] then\n\
    \                if t[i] == nil then\n                    t[i] = 1\n         \
    \       else\n                    t[i] = t[i] + 1\n                end\n     \
    \       end\n        end\n    end\n    return t[#b] > 0\nend", "    local aa =\
    \ string.gsub(a, \"%\", \"\")\n    local bb = string.gsub(b, \"%\", \"\")\n  \
    \  for i=1,#aa do\n        if string.find(aa, bb) ~= nil then\n            return\
    \ true\n        end\n        aa = string.gsub(aa, aa[i], \"\")\n    end\n    return\
    \ false\nend", "    local t = {}\n    for i=1,#a do\n        if a:sub(1,i)==b\
    \ then t[i] = true end\n    end\n    return t[1] or t[2] or t[3] or t[4] or t[5]\
    \ or t[6] or t[7] or t[8] or t[9] or t[10] or t[11] or t[12] or t[13] or t[14]\
    \ or t[15] or t[16] or t[17] or t[18] or t[19] or t[20] or t[21] or t[22] or t[23]\
    \ or t[24] or t[25] or t[26] or t[27] or t[28] or t[29] or t[30] or t[31] or t[32]\
    \ or t[33] or t[34] or t[35] or t[36] or t[37] or t[38] or t[39] or t[40] or t[41]\
    \ or t[42] or t[43] or t[44] or t[45] or t[46] or t[47] or t[48] or t[49] or t[50]\
    \ or t[51] or t[52] or t[53] or t[54] or t[55] or t[56] or t[57] or t[58] or t[59]\
    \ or t[60] or t[61] or t[62] or t[63] or t[64] or t[65] or t[66] or t[67] or t[68]\
    \ or t[69] or t[70] or t[71] or t[72] or t[73] or t[74] or t[75] or t[76] or t[77]\
    \ or t[78] or t[79] or t[80] or t[81] or t[82] or t[83] or t[84] or t[85] or t[86]\
    \ or t[87] or t[88] or t[89] or t[90] or t[91] or t[92] or t[93] or t[94] or",
  "    local a_len = string.len(a)\n    local b_len = string.len(b)\n    local i =\
    \ 1\n    while i <= b_len do\n        if a_len >= i and string.sub(a, 1, i) ==\
    \ b then\n            return true\n        end\n        i = i + 1\n    end\n \
    \   return false\nend", "    local a_len = string.len(a)\n    local b_len = string.len(b)\n\
    \    local i = 1\n    while i <= b_len do\n        if a_len >= i and string.sub(a,\
    \ 1, i) == b then\n            return true\n        end\n        i = i + 1\n \
    \   end\n    return false\nend", "    local a_len = string.len(a)\n    local b_len\
    \ = string.len(b)\n    local i = 1\n    while i <= a_len and i <= b_len do\n \
    \       if a[a_len - i] == b[b_len - i] then\n            return true\n      \
    \  end\n        i = i + 1\n    end\n    return false\nend", "    local t = {}\n\
    \    for i = 1, #a, 2 do\n        if a:sub(1, i) == b:sub(1, i) then\n       \
    \     t[i] = true\n        end\n    end\n    return #t > 0\nend", "    local t\
    \ = {}\n    for i=1,#a do\n        if a[i] == b[1] then\n            if t[b] ==\
    \ nil then\n                t[b] = 1\n            else\n                return\
    \ true\n            end\n        end\n    end\n    return false\nend", "    local\
    \ a_len = string.len(a)\n    local b_len = string.len(b)\n    local i = 1\n  \
    \  while i <= a_len and i <= b_len do\n        if a[a_len - i] == b[b_len - i]\
    \ then\n            return true\n        end\n        i = i + 1\n    end\n   \
    \ return false\nend", "    local a_len = string.len(a)\n    local b_len = string.len(b)\n\
    \    local a_index = 1\n    local b_index = 1\n    while a_index <= a_len and\
    \ b_index <= b_len do\n        if a[a_index] == b[b_index] then\n            return\
    \ true\n        end\n        a_index = a_index + 1\n        b_index = b_index\
    \ + 1\n    end\n    return false\nend", "    local t = {}\n    for i=1,#a do\n\
    \        t[a:i] = true\n        if t[b:i] then return true end\n    end\n    return\
    \ false\nend", "    local a = string.lower(a)\n    local b = string.lower(b)\n\
    \    local i = 1\n    while i <= #a do\n        if a:sub(i,i) == b then\n    \
    \        return true\n        end\n        i = i + 1\n    end\n    return false\n\
    end", "    local t = {}\n    for i=1,#a do\n        t[a:i] = true\n        if\
    \ a:sub(1,i) == b then return true end\n    end\n    return false\nend", "   \
    \ local a_len = #a\n    local b_len = #b\n    local i = 1\n    while i <= a_len\
    \ do\n        if a:sub(i, i, b) == b then\n            return true\n        end\n\
    \        i = i + 1\n    end\n    return false\nend", "    local a_len = string.len(a)\n\
    \    local b_len = string.len(b)\n    local i = 1\n    while i <= a_len and i\
    \ <= b_len do\n        if a:sub(i, i) == b:sub(1, 1) then\n            return\
    \ true\n        end\n        i = i + 1\n    end\n    return false\nend", "   \
    \ local aa = string.lower(a)\n    local bb = string.lower(b)\n    for i = 1, #aa\
    \ do\n        if aa:sub(1, i) == bb then\n            return true\n        end\n\
    \    end\n    return false\nend", "    local a_len = string.len(a)\n    local\
    \ b_len = string.len(b)\n    local a_pattern = string.rep(\"^\", a_len)\n    local\
    \ b_pattern = string.rep(\"^\", b_len)\n    local a_pattern_len = string.len(a_pattern)\n\
    \    local b_pattern_len = string.len(b_pattern)\n    local a_pattern_pos = 1\n\
    \    local b_pattern_pos = 1\n    while a_pattern_pos <= a_len and b_pattern_pos\
    \ <= b_len do\n        if a_pattern[a_pattern_pos] == b_pattern[b_pattern_pos]\
    \ then\n            a_pattern_pos = a_pattern_pos + 1\n            b_pattern_pos\
    \ = b_pattern_pos + 1\n        else\n            a_pattern_pos = a_pattern_pos\
    \ + 1\n            b_pattern_pos = b_pattern_pos + 1\n        end\n    end\n \
    \   return a_pattern_pos == a_len and b_pattern_pos == b_len\nend", "    local\
    \ a_len = string.len(a)\n    local b_len = string.len(b)\n    local i = 1\n  \
    \  while i <= a_len and i <= b_len do\n        if a[a_len - i] == b[b_len - i]\
    \ then\n            return true\n        end\n        i = i + 1\n    end\n   \
    \ return false\nend", "    local a_len = string.len(a)\n    local b_len = string.len(b)\n\
    \    local i = 1\n    while i <= b_len do\n        if a_len > i and string.sub(a,\
    \ 1, i) == string.sub(b, 1, i) then\n            return true\n        end\n  \
    \      i = i + 1\n    end\n    return false\nend", "    local a_len = string.len(a)\n\
    \    local b_len = string.len(b)\n    local i = 1\n    while i <= a_len and i\
    \ <= b_len do\n        if a[a_len - i] == b[b_len - i] then\n            return\
    \ true\n        end\n        i = i + 1\n    end\n    return false\nend", "   \
    \ local a_len = string.len(a)\n    local b_len = string.len(b)\n    local i =\
    \ 1\n    while i <= a_len and i <= b_len do\n        if a[a_len - i] == b[b_len\
    \ - i] then\n            return true\n        end\n        i = i + 1\n    end\n\
    \    return false\nend", "    local a_len = string.len(a)\n    local b_len = string.len(b)\n\
    \    local i = 1\n    while i <= a_len do\n        if a:sub(i, i) == b then\n\
    \            return true\n        end\n        i = i + 1\n    end\n    return\
    \ false\nend", "    local a_len = string.len(a)\n    local b_len = string.len(b)\n\
    \    local i = 1\n    while i <= a_len and i <= b_len do\n        if a[a_len -\
    \ i] == b[b_len - i] then\n            return true\n        end\n        i = i\
    \ + 1\n    end\n    return false\nend", "    local t = {}\n    for i=1,#a do\n\
    \        for j=1,#b do\n            if a[i] == b[j] then\n                if t[i-1]\
    \ == nil then\n                    t[i-1] = j\n                else\n        \
    \            t[i-1] = t[i-1]\n                end\n            end\n        end\n\
    \    end\n    return t[#a] ~= nil\nend", "    local t = {}\n    for i=1,#a do\n\
    \        for j=1,#b do\n            if a:sub(i,j)==b then t[i] = true end\n  \
    \      end\n    end\n    return t\nend", "    local aa = string.lower(a)\n   \
    \ local bb = string.lower(b)\n    local i = 1\n    while i <= #aa do\n       \
    \ if aa:sub(i, i) == bb then\n            return true\n        end\n        i\
    \ = i + 1\n    end\n    return false\nend", "    local a_len = #a\n    local b_len\
    \ = #b\n    local i = 1\n    while i <= a_len do\n        if a:sub(i, i, b) ==\
    \ b then\n            return true\n        end\n        i = i + 1\n    end\n \
    \   return false\nend", "    local a_len = string.len(a)\n    local b_len = string.len(b)\n\
    \    local i = 1\n    while i <= a_len do\n        if a:sub(i, i, b) == b then\n\
    \            return true\n        end\n        i = i + 1\n    end\n    return\
    \ false\nend", "    local a_len = string.len(a)\n    local b_len = string.len(b)\n\
    \    local i = 1\n    while i <= a_len and i <= b_len do\n        if a[a_len -\
    \ i] == b[b_len - i] then\n            return true\n        end\n        i = i\
    \ + 1\n    end\n    return false\nend", "    local t = {}\n    for i=1,#a do\n\
    \        t[a:i] = true\n        if a:sub(1,i) == b then return true end\n    end\n\
    \    return false\nend", "    local a_len = string.len(a)\n    local b_len = string.len(b)\n\
    \    local i = 1\n    while i <= b_len do\n        if a_len > i and string.sub(a,\
    \ 1, i) == string.sub(b, 1, i) then\n            return true\n        end\n  \
    \      i = i + 1\n    end\n    return false\nend", "    local a = string.lower(a)\n\
    \    local b = string.lower(b)\n    local i = 1\n    while i <= #a do\n      \
    \  if a:sub(i, i) == b then\n            return true\n        end\n        i =\
    \ i + 1\n    end\n    return false\nend", "    local a_len = string.len(a)\n \
    \   local b_len = string.len(b)\n    local i = 1\n    while i <= a_len do\n  \
    \      if a:sub(i,i) == b then\n            return true\n        end\n       \
    \ i = i + 1\n    end\n    return false\nend", "    local a_len = string.len(a)\n\
    \    local b_len = string.len(b)\n    local i = 1\n    while i <= b_len do\n \
    \       if a_len >= i and string.sub(a, 1, i) == string.sub(b, 1, i) then\n  \
    \          return true\n        end\n        i = i + 1\n    end\n    return false\n\
    end", "    local aa = string.lower(a)\n    local bb = string.lower(b)\n    local\
    \ i = 1\n    while i <= #aa do\n        if aa:sub(i,i) == bb then\n          \
    \  return true\n        end\n        i = i + 1\n    end\n    return false\nend",
  "    local a_len = string.len(a)\n    local b_len = string.len(b)\n    local i =\
    \ 1\n    while i <= a_len and i <= b_len do\n        if a[a_len - i] == b[b_len\
    \ - i] then\n            return true\n        end\n        i = i + 1\n    end\n\
    \    return false\nend", "    local a = string.lower(a)\n    local b = string.lower(b)\n\
    \    local i = 1\n    while i <= #a do\n        if a:sub(i,i) == b then return\
    \ true end\n        i = i + 1\n    end\n    return false\nend", "    local t =\
    \ {}\n    for i = 1, #a do\n        for j = 1, #b do\n            if a[i] == b[j]\
    \ then\n                t[i] = j\n                break\n        end\n    end\n\
    \    return #t > 0\nend", "    local a_len = string.len(a)\n    local b_len =\
    \ string.len(b)\n    local i = 1\n    while i <= a_len and i <= b_len do\n   \
    \     if a[a_len - i] == b[b_len - i] then\n            return true\n        end\n\
    \        i = i + 1\n    end\n    return false\nend", "    local t = {}\n    for\
    \ i=1,#a do\n        if a:sub(1,i) == b then\n            t[i] = true\n      \
    \  end\n    end\n    return #t > 0\nend", "    local a_len = string.len(a)\n \
    \   local b_len = string.len(b)\n    local i = 1\n    while i <= a_len and i <=\
    \ b_len do\n        if a:sub(i,i) == b:sub(1,b_len) then\n            return true\n\
    \        end\n        i = i + 1\n    end\n    return false\nend", "    local a_len\
    \ = string.len(a)\n    local b_len = string.len(b)\n    local i = 1\n    while\
    \ i <= a_len and i <= b_len and a[i-1] == b[i-1] do\n        i = i + 1\n    end\n\
    \    return i - 1 == b_len\nend", "    local a_len = #a\n    local b_len = #b\n\
    \    local i = 1\n    while i <= b_len do\n        if a:sub(i, i, b:sub(1, i))\
    \ == b then\n            return true\n        end\n        i = i + 1\n    end\n\
    \    return false\nend", "    local a_len = #a\n    local b_len = #b\n    local\
    \ i = 1\n    while i <= a_len do\n        if a:sub(i, i) == b:sub(1, b_len) then\n\
    \            return true\n        end\n        i = i + 1\n    end\n    return\
    \ false\nend", "    local a_len = string.len(a)\n    local b_len = string.len(b)\n\
    \    local i = 1\n    while i <= b_len do\n        if a_len >= i and string.sub(a,\
    \ 1, i) == string.sub(b, 1, i) then\n            return true\n        end\n  \
    \      i = i + 1\n    end\n    return false\nend", "    local t = {}\n    for\
    \ i=1,#a do\n        if a:sub(1,i)==b then\n            t[i] = true\n        \
    \    return true\n        end\n    end\n    return false\nend", "    local aa\
    \ = string.lower(a)\n    local bb = string.lower(b)\n    for i = 1,#aa do\n  \
    \      if aa:sub(1,#bb) == bb then\n            return true\n        end\n   \
    \     aa:rot(1)\n    end\n    return false\nend", "    local t = {}\n    for i=1,#a\
    \ do\n        if a:sub(1,i)==b then t[i] = true end\n    end\n    return #t >\
    \ 0\nend", "    local t = {}\n    for i=1,#a do\n        for j=1,#b do\n     \
    \       if a[i] == b[j] then\n                t[i+j] = true\n            end\n\
    \        end\n    end\n    return #t == #b\nend", "    local a_len = string.len(a)\n\
    \    local b_len = string.len(b)\n    local i = 1\n    while i <= b_len do\n \
    \       if string.sub(a, i, i) == b then\n            return true\n        end\n\
    \        i = i + 1\n    end\n    return false\nend", "    local a_len = string.len(a)\n\
    \    local b_len = string.len(b)\n    local i = 1\n    while i <= b_len do\n \
    \       if string.sub(a, 1, a_len - i + 1) == b then\n            return true\n\
    \        end\n        i = i + 1\n    end\n    return false\nend", "    local a_len\
    \ = string.len(a)\n    local b_len = string.len(b)\n    local i = 1\n    while\
    \ i <= b_len do\n        if string.sub(a, 1, a_len - i + 1) == b then\n      \
    \      return true\n        end\n        i = i + 1\n    end\n    return false\n\
    end", "    local a_len = string.len(a)\n    local b_len = string.len(b)\n    local\
    \ i = 1\n    while i <= a_len and i <= b_len do\n        if a[a_len - i] == b[b_len\
    \ - i] then\n            return true\n        end\n        i = i + 1\n    end\n\
    \    return false\nend", "    local t = {}\n    for i=1,#a do\n        if a:sub(1,i)==b\
    \ then t[i] = true end\n    end\n    return #t\nend", "    local t = {}\n    for\
    \ i=1,#a do\n        for j=1,#b do\n            if a[i] == b[j] then\n       \
    \         if t[i-1] == nil then\n                    t[i-1] = j\n            \
    \    else\n                    t[i-1] = t[i-1]\n                end\n        \
    \    end\n        end\n    end\n    return t[#a]\nend", "    local a_len = string.len(a)\n\
    \    local b_len = string.len(b)\n    local a_set = {}\n    for i=1,a_len do\n\
    \        a_set[a[i]] = true\n    end\n    for i=1,b_len do\n        if a_set[b[i]]\
    \ then\n            return true\n        end\n    end\n    return false\nend",
  "    local a_len = string.len(a)\n    local b_len = string.len(b)\n    local i =\
    \ 1\n    while i <= a_len do\n        if a:sub(i,i) == b then\n            return\
    \ true\n        end\n        i = i + 1\n    end\n    return false\nend", "   \
    \ local t = {}\n    for i=1,#a do\n        for j=1,#b do\n            if a[i]\
    \ == b[j] then\n                if t[i-1] == j-1 then\n                    return\
    \ true\n                else\n                    t[i-1] = j-1\n             \
    \   end\n            end\n        end\n    end\n    return false\nend", "    local\
    \ a = string.lower(a)\n    local b = string.lower(b)\n    local i = 1\n    while\
    \ i <= #a do\n        if a:sub(i,i) == b then\n            return true\n     \
    \   end\n        i = i + 1\n    end\n    return false\nend", "    local a_len\
    \ = string.len(a)\n    local b_len = string.len(b)\n    local i = 1\n    while\
    \ i <= b_len do\n        if string.sub(a, 1, a_len - i + 1) == b then\n      \
    \      return true\n        end\n        i = i + 1\n    end\n    return false\n\
    end", "    local a_len = string.len(a)\n    local b_len = string.len(b)\n    local\
    \ i = 1\n    while i <= b_len do\n        if string.sub(a, 1, a_len - i + 1) ==\
    \ b then\n            return true\n        end\n        i = i + 1\n    end\n \
    \   return false\nend", "    local a_len = #a\n    local b_len = #b\n    local\
    \ i = 1\n    while i <= b_len do\n        if a:sub(i, i, b:sub(1, i)) == b then\n\
    \            return true\n        end\n        i = i + 1\n    end\n    return\
    \ false\nend", "    local a_len = string.len(a)\n    local b_len = string.len(b)\n\
    \    local i = 1\n    while i <= a_len do\n        if a:sub(i, i) == b then\n\
    \            return true\n        end\n        i = i + 1\n    end\n    return\
    \ false\nend", "    local t = {}\n    for i=1,#a do\n        for j=1,#b do\n \
    \           if a[i] == b[j] then\n                if t[i] == nil then\n      \
    \              t[i] = 1\n                else\n                    t[i] = t[i]\
    \ + 1\n                end\n            end\n        end\n    end\n    for i=1,#t\
    \ do\n        if t[i] == 1 then\n            return true\n        end\n    end\n\
    \    return false\nend", "    local a_len = string.len(a)\n    local b_len = string.len(b)\n\
    \    local a_word = string.sub(a, 1, a_len)\n    local b_word = string.sub(b,\
    \ 1, b_len)\n    local a_word_len = string.len(a_word)\n    local b_word_len =\
    \ string.len(b_word)\n    local a_word_pos = 0\n    local b_word_pos = 0\n   \
    \ while a_word_pos < a_word_len and b_word_pos < b_word_len do\n        if a_word[a_word_pos]\
    \ == b_word[b_word_pos] then\n            a_word_pos = a_word_pos + 1\n      \
    \      b_word_pos = b_word_pos + 1\n        else\n            a_word_pos = a_word_pos\
    \ + 1\n        end\n    end\n    return a_word_pos == a_word_len and b_word_pos\
    \ == b_word_len\nend", "    local a_len = string.len(a)\n    local b_len = string.len(b)\n\
    \    local i = 1\n    while i <= a_len do\n        if a:sub(i,i) == b:sub(1,b_len)\
    \ then\n            return true\n        end\n        i = i + 1\n    end\n   \
    \ return false\nend", "    local a_len = #a\n    local b_len = #b\n    local i\
    \ = 1\n    while i <= b_len do\n        if a:sub(i,i,b:sub(1,i)) == b then\n \
    \           return true\n        end\n        i = i + 1\n    end\n    return false\n\
    end", "    local a_len = string.len(a)\n    local b_len = string.len(b)\n    local\
    \ a_set = {}\n    local b_set = {}\n    for i = 1, a_len do\n        a_set[a[i]]\
    \ = true\n    end\n    for i = 1, b_len do\n        b_set[b[i]] = true\n    end\n\
    \    for k, v in pairs(a_set) do\n        if v == true then\n            for i\
    \ = 1, b_len do\n                if b_set[b[i]] == true then\n               \
    \     return true\n                end\n            end\n        end\n    end\n\
    \    return false\nend", "    local t = {}\n    for i=1,#a do\n        if a:sub(1,i)==b\
    \ then\n            t[i] = true\n        end\n    end\n    return #t\nend", " \
    \   local a_len = string.len(a)\n    local b_len = string.len(b)\n    local i\
    \ = 1\n    while i <= b_len do\n        if a_len > i and string.sub(a, 1, i) ==\
    \ string.sub(b, 1, i) then\n            return true\n        end\n        i =\
    \ i + 1\n    end\n    return false\nend", "    local a_len = string.len(a)\n \
    \   local b_len = string.len(b)\n    local i = 1\n    while i <= a_len do\n  \
    \      if string.sub(a, i, b_len) == b then\n            return true\n       \
    \ end\n        i = i + 1\n    end\n    return false\nend", "    local a_len =\
    \ string.len(a)\n    local b_len = string.len(b)\n    local i = 1\n    while i\
    \ <= a_len and i <= b_len do\n        if a[a_len - i] == b[b_len - i] then\n \
    \           return true\n        end\n        i = i + 1\n    end\n    return false\n\
    end", "    local a_len = string.len(a)\n    local b_len = string.len(b)\n    local\
    \ i = 1\n    while i <= a_len do\n        if a[i] == b[1] then\n            if\
    \ b_len == 2 then\n                return true\n            elseif a_len - i +\
    \ 1 >= b_len then\n                return true\n            end\n        end\n\
    \        i = i + 1\n    end\n    return false\nend", "    local t = {}\n    for\
    \ i=1,#a do\n        if a:sub(1,i)==b then\n            t[i] = true\n        \
    \    break\n        end\n    end\n    return t\nend", "    local a_len = string.len(a)\n\
    \    local b_len = string.len(b)\n    local i = 1\n    while i <= b_len do\n \
    \       if a_len >= i and string.sub(a, 1, i) == string.sub(b, 1, i) then\n  \
    \          return true\n        end\n        i = i + 1\n    end\n    return false\n\
    end", "    local a = string.lower(a)\n    local b = string.lower(b)\n    for i\
    \ = 1, #a, 2 do\n        if a:sub(i, i) == b then\n            return true\n \
    \       end\n    end\n    return false\nend", "    local a_len = string.len(a)\n\
    \    local b_len = string.len(b)\n    local a_sub = string.sub(a, 1, a_len)\n\
    \    local b_sub = string.sub(b, 1, b_len)\n    for i = 1, a_len, 1 do\n     \
    \   if a_sub == b_sub then\n            return true\n        end\n        a_sub\
    \ = string.sub(a, i, a_len)\n        b_sub = string.sub(b, i, b_len)\n    end\n\
    \    return false\nend", "    local a = string.lower(a)\n    local b = string.lower(b)\n\
    \    local i = 1\n    while i <= #a do\n        if a:sub(i,i) == b then\n    \
    \        return true\n        end\n        i = i + 1\n    end\n    return false\n\
    end", "    local t = {}\n    for i = 1, #a do\n        for j = 1, #b do\n    \
    \        if a[i] == b[j] then\n                t[i] = j\n                break\n\
    \        end\n    end\n    return #t > 0\nend", "    local a_len = string.len(a)\n\
    \    local b_len = string.len(b)\n    local i = 1\n    while i <= a_len and i\
    \ <= b_len do\n        if a[a_len - i] == b[b_len - i] then\n            return\
    \ true\n        end\n        i = i + 1\n    end\n    return false\nend", "   \
    \ local a_len = string.len(a)\n    local b_len = string.len(b)\n    local a_pattern\
    \ = string.rep(\"^\", a_len)\n    local b_pattern = string.rep(\"^\", b_len)\n\
    \    local a_pattern_len = string.len(a_pattern)\n    local b_pattern_len = string.len(b_pattern)\n\
    \    local a_pattern_index = 1\n    local b_pattern_index = 1\n    while a_pattern_index\
    \ <= a_len and b_pattern_index <= b_len do\n        if a_pattern[a_pattern_index]\
    \ == b_pattern[b_pattern_index] then\n            a_pattern_index = a_pattern_index\
    \ + 1\n            b_pattern_index = b_pattern_index + 1\n        else\n     \
    \       a_pattern_index = a_pattern_index + 1\n            b_pattern_index = b_pattern_index\
    \ + 1\n        end\n    end\n    return a_pattern_index == a_pattern_len and b_pattern_index\
    \ == b_pattern_len\nend", "    local t = {}\n    for i = 1, #a do\n        for\
    \ j = 1, #b do\n            if a[i] == b[j] then\n                t[i] = j\n \
    \               break\n        end\n    end\n    return #t > 0\nend", "    local\
    \ t = {}\n    for i=1,#a do\n        if a:sub(1,i)==b then t[i] = true end\n \
    \   end\n    return #t > 0\nend", "    local a = string.lower(a)\n    local b\
    \ = string.lower(b)\n    local i = 1\n    while i <= #a do\n        if a:sub(i,i)\
    \ == b then\n            return true\n        end\n        i = i + 1\n    end\n\
    \    return false\nend", "    local a_len = string.len(a)\n    local b_len = string.len(b)\n\
    \    local a_word = string.sub(a, 1, a_len)\n    local b_word = string.sub(b,\
    \ 1, b_len)\n    local a_word_len = string.len(a_word)\n    local b_word_len =\
    \ string.len(b_word)\n    local a_word_len_minus_1 = a_word_len - 1\n    local\
    \ b_word_len_minus_1 = b_word_len - 1\n    local a_word_len_minus_2 = a_word_len\
    \ - 2\n    local b_word_len_minus_2 = b_word_len - 2\n    local a_word_len_minus_3\
    \ = a_word_len - 3\n    local b_word_len_minus_3 = b_word_len - 3\n    local a_word_len_minus_4\
    \ = a_word_len - 4\n    local b_word_len_minus_4 = b_word_len - 4\n    local a_word_len_minus_5\
    \ = a_word_len - 5\n    local b_word_len_minus_5 = b_word_len - 5\n    local a_word_len_minus_6\
    \ = a_word_len - 6\n    local b_word_len_minus_6 = b_word_len - 6\n    local a_word_len_minus_7\
    \ = a_word_len - 7\n    local b_word_len_minus_7 = b_word_len - 7\n    local a_word_len_minus_8\
    \ = a_word_len - 8\n    local b_word_len_minus_8 = b_word_len - 8\n    local a_word_len_minus_9\
    \ = a_word_len - 9\n    local b_word_len_minus_9 = b_word_len - 9\n    local a_word_len_minus_10\
    \ = a_word_len - 10\n    local b_word_len_minus_10 = b_word_len - 10\n    local\
    \ a_word_len_minus_11 = a_", "    local a_len = string.len(a)\n    local b_len\
    \ = string.len(b)\n    local i = 1\n    while i <= a_len and i <= b_len do\n \
    \       if a[a_len - i] == b[b_len - i] then\n            return true\n      \
    \  end\n        i = i + 1\n    end\n    return false\nend", "    local t = {}\n\
    \    for i=1,#a do\n        for j=1,#b do\n            if a[i] == b[j] then\n\
    \                if t[i+j] == nil then\n                    t[i+j] = 1\n     \
    \           else\n                    t[i+j] = t[i+j] + 1\n            end\n \
    \       end\n    end\n    return t[#b] > 0\nend", "    local aa = string.lower(a)\n\
    \    local bb = string.lower(b)\n    for i = 1, #aa do\n        if bb == aa:\n\
    \            return true\n        if aa[i] == bb[i]:\n            return true\n\
    \        if aa[i] == bb[-i]:\n            return true\n    end\n    return false\n\
    end", "    local a_len = string.len(a)\n    local b_len = string.len(b)\n    local\
    \ i = 1\n    while i <= a_len do\n        if a:sub(i,i) == b then\n          \
    \  return true\n        end\n        i = i + 1\n    end\n    return false\nend",
  "    local a_len = string.len(a)\n    local b_len = string.len(b)\n    local i =\
    \ 1\n    while i <= a_len and i <= b_len do\n        if a[a_len - i] == b[b_len\
    \ - i] then\n            return true\n        end\n        i = i + 1\n    end\n\
    \    return false\nend", "    local a_len = string.len(a)\n    local b_len = string.len(b)\n\
    \    local i = 1\n    while i <= a_len and i <= b_len do\n        if a[a_len -\
    \ i] == b[b_len - i] then\n            return true\n        end\n        i = i\
    \ + 1\n    end\n    return false\nend", "    local a = string.lower(a)\n    local\
    \ b = string.lower(b)\n    for i = 1, #a, 2 do\n        if a:sub(i, i) == b then\n\
    \            return true\n        end\n    end\n    return false\nend", "    local\
    \ a_len = string.len(a)\n    local b_len = string.len(b)\n    local i = 1\n  \
    \  while i <= a_len and i <= b_len do\n        if a[a_len - i] == b[b_len - i]\
    \ then\n            return true\n        end\n        i = i + 1\n    end\n   \
    \ return false\nend", "    local a = string.lower(a)\n    local b = string.lower(b)\n\
    \    local i = 1\n    while i <= #a do\n        if a:sub(i,i) == b then\n    \
    \        return true\n        end\n        i = i + 1\n    end\n    return false\n\
    end", "    local a_len = string.len(a)\n    local b_len = string.len(b)\n    local\
    \ i = 1\n    while i <= a_len do\n        if a:sub(i, i) == b then\n         \
    \   return true\n        end\n        i = i + 1\n    end\n    return false\nend",
  "    local a_len = string.len(a)\n    local b_len = string.len(b)\n    local a_index\
    \ = 1\n    local b_index = 1\n    while a_index <= a_len and b_index <= b_len\
    \ do\n        if a[a_index] == b[b_index] then\n            a_index = a_index\
    \ + 1\n            b_index = b_index + 1\n        else\n            a_index =\
    \ a_index + 1\n        end\n    end\n    return a_index == a_len and b_index ==\
    \ b_len\nend", "    local a_len = string.len(a)\n    local b_len = string.len(b)\n\
    \    local i = 1\n    while i <= a_len do\n        if a[i] == b[1] then\n    \
    \        if b_len == 2 then\n                return true\n            else\n \
    \               i = i + 1\n                while i <= a_len and a[i] == b[2] do\n\
    \                    i = i + 1\n                if i > a_len then\n          \
    \          return true\n                end\n            end\n        else\n \
    \           i = i + 1\n        end\n    end\n    return false\nend", "    local\
    \ a_len = string.len(a)\n    local b_len = string.len(b)\n    local i = 1\n  \
    \  while i <= b_len do\n        if a:sub(1, a_len) == b:sub(1, b_len):gsub(1,\
    \ 1) == b:sub(1, b_len):gsub(1, 1) then\n            return true\n        end\n\
    \        i = i + 1\n    end\n    return false\nend", "    local t = {}\n    for\
    \ i = 1, #a do\n        t[a[i]] = true\n    end\n    for i = 1, #b do\n      \
    \  if t[b[i]] then return true end\n    end\n    return false\nend", "    local\
    \ a = string.lower(a)\n    local b = string.lower(b)\n    local i = 1\n    while\
    \ i <= #a do\n        if a:sub(i,i) == b then\n            return true\n     \
    \   end\n        i = i + 1\n    end\n    return false\nend", "    local a_len\
    \ = string.len(a)\n    local b_len = string.len(b)\n    local i = 1\n    while\
    \ i <= a_len and i <= b_len do\n        if a[a_len - i] == b[b_len - i] then\n\
    \            return true\n        end\n        i = i + 1\n    end\n    return\
    \ false\nend", "    local a_len = string.len(a)\n    local b_len = string.len(b)\n\
    \    local i = 1\n    while i <= b_len do\n        if a_len > i and string.sub(a,\
    \ i, i) == b then\n            return true\n        end\n        i = i + 1\n \
    \   end\n    return false\nend", "    local aa = string.gsub(a, \"%\", \"\")\n\
    \    local bb = string.gsub(b, \"%\", \"\")\n    for i = 1, #aa do\n        if\
    \ string.find(aa, string.lower(aa[i])) == nil then\n            return false\n\
    \        end\n    end\n    for i = 1, #bb do\n        if string.find(bb, string.lower(bb[i]))\
    \ == nil then\n            return false\n        end\n    end\n    return true\n\
    end"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

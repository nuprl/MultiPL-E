{
  "name": "HumanEval_91_is_bored",
  "language": "lua",
  "prompt": "-- You'll be given a string of words, and your task is to count the number\n-- of boredoms. A boredom is a sentence that starts with the word \"I\".\n-- Sentences are delimited by '.', '?' or '!'.\n-- For example:\n-- >>> is_bored(\"Hello world\")\n-- 0\n-- >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n-- 1\nlocal function is_bored(S)\n",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_bored\n    lu.assertEquals(candidate('Hello world'), 0)\n    lu.assertEquals(candidate('Is the sky blue?'), 0)\n    lu.assertEquals(candidate('I love It !'), 1)\n    lu.assertEquals(candidate('bIt'), 0)\n    lu.assertEquals(candidate('I feel good today. I will be productive. will kill It'), 2)\n    lu.assertEquals(candidate('You and I are going for a walk'), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
  "completions": [
    "    local words = string.gsub(S, \"^[^a-zA-Z]*\", \"\")\n    local count = 0\n    for i = 1, #words, 2 do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.split(S, \" \")\n    local count = 0\n    for i = 1, #words, 1 do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, '[^a-zA-Z0-9]', '')\n    local i = 1\n    for i = 1, #words, 2 do\n        if words[i] == 'I' then\n            return i\n        end\n    end\n    return 0\nend",
    "    local i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m,",
    "    local words = string.split(S, \" \")\n    local count = 0\n    for i = 1, #words, 1 do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local i = 1\n    for _, word in pairs(words) do\n        if word == \"I\" then\n            return i\n        end\n        i = i + 1\n    end\n    return 0\nend",
    "    local words = string.split(S, \".\")\n    local count = 0\n    for i = 1, #words, 2 do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local i = 1\n    for i
    "    local i, j, count = 1, 1, 0\n    for i = 1, #S, 2 do\n        if S[i] == '.' or S[i] == '?' or S[i] == '!' then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, \"\\\\W+\", \"\")\n    local count = 0\n    for i=1,#                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local i = 1\n    for k, v in pairs(words) do\n        if string.sub(v, 1, 1) == \"I\" then\n            i = i + 1\n        end\n    end\n    return i\nend",
    "    local words = string.split(S, ' ')\n    local count = 0\n    for i, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'I' then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, '.', ' ')\n    local i = 1\n    for k, v in pairs(words) do\n        if v == 'I' then\n            i = i + 1\n        end\n    end\n    return i\nend",
    "    local words = string.gmatch(S, '[^\\.]*')\n    return #words - #string.find(words, 'I')\nend",
    "    local i, j, count = 1, 1, 0\n    for i = 1, #S, 2 do\n        if S[i] == 'I' and S[i+1] == ' ' then\n            count = count + 1\n        end\n        if S[i] == '.' or S[i] == '?' or S[i] == '!' then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, '[^a-zA-Z0-9]', '')\n    local count = 0\n    for i = 1, #words, 2 do\n        if words[i] == 'I' then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local i = 1\n    for w in words:\n        if w == \"I\":\n            i = i + 1\n    return i\nend",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\.|\\\\?|!|\\\\s\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    return string.count(words, \" \")\nend",
    "    local words = string.gsub(S, \"\\\\.|\\\\?|!\", \" \")\n    local count = 0\n    for i
    "    local words = string.gsub(S, \"^[^a-zA-Z]*\", \"\")\n    local count = 0\n    for i = 1, #words, 2 do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, '[^a-zA-Z0-9]', '')\n    local count = 0\n    for i = 1, #words, 2 do\n        if words[i] == 'I' and words[i+1] == ' ' then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, '\\.', '')\n    local i = 1\n    while i <= #words do\n        if words[i] == 'I' then\n            return i\n        end\n        i = i + 1\n    end\n    return 0\nend",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local i = 1\n    for _, word in pairs(words) do\n        if string.sub(word, 1, 1) == \"I\" then\n            i = i + 1\n        end\n    end\n    return i\nend",
    "    local words = string.gsub(S, \"^[^a-zA-Z0-9]*\", \"\")\n    local count = 0\n    for i = 1, #words, 2 do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, \"^[a-zA-Z]*\", \"\")\n    local count = 0\n    for i=1,#words,2 do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\.\\\\s+\", \".\")\n    local words = string.gsub(words, \"\\\\?\\\\s+\", \"?\")\n    local words = string.gsub(words, \"!\\\\s+\", \"!\")\n    local words = string.gsub(words, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\s+\", \" \")\n    local words = string.gsub",
    "    local words = string.gsub(S, \"^[^a-zA-Z0-9]*\", \"\")\n    local count = 0\n    for i = 1, #words, 2 do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, '[^a-zA-Z0-9]', '')\n    local count = 0\n    for i=1,#words do\n        if words[i] == 'I' then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, '^[^a-zA-Z]*', '')\n    local count = 0\n    for i=1,#words do\n        if words[i] == 'I' then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.split(S, \" \")\n    local count = 0\n    for i = 1, #words do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, '.', ' ')\n    local i = 1\n    while i <= #words do\n        if words[i] == 'I' then\n            return i\n        end\n        i = i + 1\n    end\n    return 0\nend",
    "    local words = string.gsub(S, '[^a-zA-Z0-9]', '')\n    local count = 0\n    for i = 1, #words, 2 do\n        if words[i] == 'I' then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\.\\\\s+\", \".\")\n    local words = string.gsub(words, \"\\\\?\\\\s+\", \"?\")\n    local words = string.gsub(words, \"!\\\\s+\", \"!\")\n    local words = string.gsub(words, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\s+\", \" \")\n    local words = string.gsub",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(",
    "    local i, j, count = 0, 1, 0\n    for i = 1, #S, 2 do\n        if S[i] == 'I' and S[i+1] == ' ' then\n            count = count + 1\n        end\n        if S[i] == '?' or S[i] == '!' or S[i] == '.' then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, \"\\\\.|\\\\?|!\", \" \")\n    local count = 0\n    for i=1,#words,2 do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, '[^a-zA-Z0-9]', '')\n    local count = 0\n    for i = 1, #words, 2 do\n        if words[i] == 'I' then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local i = 1\n    for word in words:\n        if word == \"I\" and i == 1:\n            i = i + 1\n        else:\n            i = 1\n    return i\nend",
    "    local words = string.gsub(S, '.', '')\n    local i = 1\n    while i <= #words do\n        if words[i] == 'I' then\n            return i\n        end\n        i = i + 1\n    end\n    return 0\nend",
    "    local words = string.gsub(S, '.', ' ')\n    local i = 1\n    for word in words:\n        if word == 'I' and i == 1:\n            i = i + 1\n        else:\n            i = 1\n    return i\nend",
    "    local words = string.gsub(S, \"\\\\.|\\\\?|!\", \" \")\n    local count = 0\n    for i = 1, #words, 2 do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, \"\\\\.|\\\\?|!\", \" \")\n    local words = string.gsub(words, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\s+$\", \"\")\n    local words = string.gsub(words, \"^\\\\s+\", \"\")\n    local words = string.gsub(words, \"^\\\\s+$\", \"\")\n    local words = string.gsub(words, \"^\\\\s+\", \"\")\n    local words = string.gsub(words, \"^\\\\s+$\", \"\")\n    local words = string.gsub(words, \"^\\\\s+\", \"\")\n    local words = string.gsub(words, \"^\\\\s+$\", \"\")\n    local words = string.gsub(words, \"^\\\\s+\", \"\")\n    local words = string.gsub(words, \"^\\\\s+$\", \"\")\n    local words = string.gsub(words, \"^\\\\s+\", \"\")\n    local words = string.gsub(words, \"^\\\\s+$\", \"\")\n    local words = string.gsub(words, \"^\\\\s+\", \"\")\n    local words = string.gsub(words, \"^\\\\s+$\", \"\")\n    local words = string.gsub(words, \"^\\\\s+\", \"\")\n    local words = string.gsub(words, \"^\\\\s+$\", \"\")\n    local words = string.gsub(words, \"^\\\\s+\", \"\")\n    local words = string.gsub(words, \"^\\\\s+$\", \"\")\n    local words = string.gsub(words, \"^\\\\s+\", \"\")\n    local words = string.gsub(words, \"^\\\\s+$\", \"\")\n    local words = string.gsub(words, \"^\\\\s+\", \"\")\n    local words = string.gsub(words, \"^\\\\s+$\", \"\")\n    local words = string.gsub(words, \"^\\\\s+\", \"\")\n    local words = string.gsub(words, \"^\\\\s+$\", \"",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\s\", \" \")\n    local words = string.gsub(words, \"\\\\.\", \"\")\n    local words = string.gsub(words, \"\\\\?\", \"\")\n    local words = string.gsub(words, \"\\\\!\", \"\")\n    local words = string.gsub(words, \"I\", \"\")\n    return string.count(words, \" \")\nend",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local i = 1\n    for k, v in pairs(words) do\n        if v == \"I\" then\n            i = i + 1\n        end\n    end\n    return i\nend",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local i = 1\n    for _, word in pairs(words) do\n        if string.sub(word, 1, 1) == \"I\" then\n            i = i + 1\n        end\n    end\n    return i\nend",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\.|\\\\?|!|\\\\s\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words =",
    "    local words = string.gsub(S, '[^a-zA-Z0-9]', '')\n    local count = 0\n    for i = 1, #words, 2 do\n        if words[i] == 'I' and words[i+1] == ' ' then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local count = 0\n    for i=1,#words,1 do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, '.', ' ')\n    local i = 1\n    while i <= #words do\n        if words[i] == 'I' then\n            return i\n        end\n        i = i + 1\n    end\n    return 0\nend",
    "    local words = string.gsub(S, '[^a-zA-Z0-9]', '')\n    local count = 0\n    for i = 1, #words, 2 do\n        if words[i] == 'I' and words[i+1] == ' ' then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, '.', ' ')\n    local i = 1\n    for word in words:\n        if word == 'I' and i == 1:\n            i = i + 1\n        else:\n            i = 1\n    return i\nend",
    "    local i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m,",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(",
    "    local words = string.gsub(S, \"([^a-zA-Z0-9])\", \" \")\n    local count = 0\n    for i=1,#words do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, '.', ' ')\n    local i = 1\n    while i <= #words do\n        if words[i] == 'I' then\n            return i\n        end\n        i = i + 1\n    end\n    return 0\nend",
    "    local words = string.gsub(S, \"\\\\.|\\\\?|!\", \"\")\n    local count = 0\n    for i=1,#words do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local i = 1\n    for word in words:\n        if word == \"I\" and i == 1:\n            i = i + 1\n        else:\n            i = 1\n    return i\nend",
    "    local words = split(S, '.')\n    local count = 0\n    for i, word in ipairs(words) do\n        if word == 'I' then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = split(S, \" \")\n    local count = 0\n    for i, word in ipairs(words) do\n        if word == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, \"\\\\.|\\\\?|!\", \" \")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.",
    "    local words = string.split(S, \" \")\n    local count = 0\n    for i = 1, #words, 1 do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local count = 0\n    for i = 1, #words, 2 do\n        if words[i] == \"I\" and words[i+1] == \" \" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.split(S, \" \")\n    local count = 0\n    for i = 1, #words, 1 do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, \"\\\\.|\\\\?|!\", \" \")\n    local count = 0\n    for i = 1, #words, 2 do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local i, j, count = 1, 1, 0\n    for i = 1, #S, 2 do\n        if S[i] == '.' or S[i] == '?' or S[i] == '!' then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.split(S, \" \")\n    local count = 0\n    for i = 1, #words do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, '[^a-zA-Z0-9]', '')\n    local count = 0\n    for i = 1, #words, 2 do\n        if words[i] == 'I' then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, '^[^a-zA-Z0-9]+', '')\n    local count = 0\n    for i = 1, #words, 2 do\n        if words[i] == 'I' then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, '.', ' ')\n    local i = 1\n    for _, word in pairs(words) do\n        if string.sub(word, 1, 1) == 'I' then\n            i = i + 1\n        end\n    end\n    return i\nend",
    "    local words = string.gsub(S, \"\\\\W+\", \" \")\n    local i = 1\n    for _, word in pairs(words) do\n        if word == \"I\" then\n            i = i + 1\n        end\n    end\n    return i\nend",
    "    local words = string.gsub(S, '.', ' ')\n    local i = 1\n    for word in words:\n        if word == 'I' and i == 1:\n            i = i + 1\n        else:\n            i = 1\n    return i - 1\nend",
    "    local words = string.split(S, \" \")\n    local count = 0\n    for i = 1, #words do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local i = 1\n    for _, word in pairs(words) do\n        if word == \"I\" then\n            return i\n        end\n        i = i + 1\n    end\n    return 0\nend",
    "    local words = string.split(S, \" \")\n    local count = 0\n    for i = 1, #words, 1 do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, \"^[^a-zA-Z]*\", \"\")\n    local count = 0\n    for i=1,#words do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.split(S, \" \")\n    local count = 0\n    for i = 1, #words, 1 do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, '.', ' ')\n    local i = 1\n    for word in words:\n        if word == 'I' and i == 1:\n            i = i + 1\n        else:\n            i = 1\n    return i\nend",
    "    local words = string.gsub(S, '[^a-zA-Z0-9]', '')\n    local count = 0\n    for i = 1, #words, 2 do\n        if words[i] == 'I' and words[i+1] == ' ' then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.split(S, \" \")\n    local count = 0\n    for i = 1, #words, 1 do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(",
    "    local words = string.gsub(S, \"([^a-zA-Z0-9])\", \" \")\n    local count = 0\n    for i=1,#words,2 do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, '[^a-zA-Z0-9]', '')\n    local count = 0\n    for i = 1, #words, 2 do\n        if words[i] == 'I' and words[i+1] == ' ' then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = split(S, \" \")\n    local count = 0\n    for i, word in ipairs(words) do\n        if word == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.split(S, \" \")\n    local count = 0\n    for i = 1, #words, 2 do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local i = 1\n    for k, v in pairs(words) do\n        if v == \"I\" then\n            i = i + 1\n        end\n    end\n    return i\nend",
    "    local i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, a, b, c, d,",
    "    local words = split(S, \" \")\n    local count = 0\n    for i = 1, #words do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, '.', ' ')\n    local i = 1\n    for word in words:\n        if word == 'I' and i == 1:\n            i = i + 1\n        else:\n            i = 1\n    return i\nend",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local i = 1\n    for _, word in pairs(words) do\n        if string.sub(word, 1, 1) == \"I\" then\n            i = i + 1\n        end\n    end\n    return i\nend",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(",
    "    local words = string.gsub(S, '.', ' ')\n    local i = 1\n    while i <= #words do\n        if words[i] == 'I' then\n            return i\n        end\n        i = i + 1\n    end\n    return 0\nend",
    "    local words = string.gsub(S, \"^[^a-zA-Z]*\", \"\")\n    local count = 0\n    for i = 1,#words,2 do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, '.', ' ')\n    local i = 1\n    for word in words:\n        if word == 'I' and i == 1:\n            i = i + 1\n        else:\n            i = 1\n    return i\nend",
    "    local words = string.gsub(S, '.', ' ')\n    local i = 1\n    for word in words:\n        if word == 'I' and i == 1:\n            i = i + 1\n        else:\n            i = 1\n    return i\nend",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local i = 1\n    for i = 1,#words,1 do\n        if words[i] == \"I\" then\n            return i\n        end\n    end\n    return 0\nend",
    "    local words = string.split(S, \" \")\n    local count = 0\n    for i = 1, #words, 1 do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.split(S, \" \")\n    local count = 0\n    for i = 1, #words, 1 do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, \"^[^a-zA-Z]*\", \"\")\n    local count = 0\n    for i=1,#words,2 do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.split(S, ' ')\n    local count = 0\n    for i = 1, #words, 1 do\n        if words[i] == 'I' then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local i = 1\n    for word in words:\n        if word == \"I\" and i == 1:\n            i = i + 1\n        else:\n            i = 1\n    return i - 1\nend",
    "    local words = string.split(S, ' ')\n    local count = 0\n    for i = 1, #words, 1 do\n        if words[i] == 'I' then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, '[^a-zA-Z0-9]', '')\n    local count = 0\n    for i = 1, #words, 2 do\n        if words[i] == 'I' then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, '^[^a-zA-Z]*', '')\n    local count = 0\n    for i = 1, #words, 2 do\n        if words[i] == 'I' then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, '.', ' ')\n    local i = 1\n    for word in words:\n        if string.sub(word, 1, 1) == 'I' and i == 1:\n            i = i + 1\n        else:\n            i = 1\n    return i\nend",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local count = 0\n    for i = 1, #words, 2 do\n        if words[i] == \"I\" and words[i+1] == \" \" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local count = 0\n    for i=1,#words,1 do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, '^[^a-zA-Z]*', '')\n    local count = 0\n    for i = 1, #words, 2 do\n        if words[i] == 'I' then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, '.', ' ')\n    local i = 1\n    for word in words:\n        if word == 'I' and i == 1:\n            i = i + 1\n        else:\n            i = 1\n    return i\nend",
    "    local words = string.gsub(S, \"\\\\W+\", \" \")\n    local i = 1\n    for i, w in ipairs(words) do\n        if string.sub(w, 1, 1) == \"I\" then\n            return i\n        end\n    end\n    return 0\nend",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(",
    "    local words = string.gsub(S, \"\\\\.|\\\\?|!\", \" \")\n    local count = 0\n    for i=1,#words do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, '.', ' ')\n    local i = 1\n    for word in words:\n        if string.sub(word, 1, 1) == 'I' and i == 1:\n            i = i + 1\n        else:\n            i = 1\n    return i\nend",
    "    local words = string.split(S, \" \")\n    local count = 0\n    for i = 1, #words, 1 do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, '.', ' ')\n    local i = 1\n    for word in words:\n        if word == 'I' then\n            i = i + 1\n        end\n    end\n    return i\nend",
    "    local i, j, count = 1, 1, 0\n    for i = 1, #S, 2 do\n        if S[i] == '.' or S[i] == '?' or S[i] == '!' then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\.|\\\\?|!|\\\\s\", \" \")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words",
    "    local words = string.gsub(S, \"\\\\.|\\\\?|!\", \"\")\n    local count = 0\n    for i = 1, #words, 2 do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, \"^[^a-zA-Z]*\", \"\")\n    local count = 0\n    for i=1,#words do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local count = 0\n    for i = 1, #words, 2 do\n        if words[i] == \"I\" and words[i+1] == \" \" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, '.', ' ')\n    local i = 1\n    for word in words:\n        if word == 'I' and i == 1:\n            i = i + 1\n        else:\n            i = 1\n    return i\nend",
    "    local words = string.gsub(S, '.', ' ')\n    local i = 1\n    for word in words:\n        if word == 'I' and i == 1:\n            i = i + 1\n        else:\n            i = 1\n    return i\nend",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local count = 0\n    for i = 1,#words,2 do\n        if words[i] == \"I\" and words[i+1] == \" \" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, \"\\\\W+\", \" \")\n    local count = 0\n    for i=1,#words,1 do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local count = 0\n    for i = 1, #words, 2 do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\s\", \" \")\n    local words = string.gsub(words, \"\\\\n\", \" \")\n    local words = string.gsub(words, \"\\\\r\", \" \")\n    local words = string.gsub(words, \"\\\\t\", \" \")\n    local words = string.gsub(words, \"\\\\v\", \" \")\n    local words = string.gsub(words, \"\\\\f\", \" \")\n    local words = string.gsub(words, \"\\\\a\", \" \")\n    local words = string.gsub(words, \"\\\\b\", \" \")\n    local words = string.gsub(words, \"\\\\c\", \" \")\n    local words = string.gsub(words, \"\\\\d\", \" \")\n    local words = string.gsub(words, \"\\\\e\", \" \")\n    local words = string.gsub(words, \"\\\\f\", \" \")\n    local words = string.gsub(words, \"\\\\g\", \" \")\n    local words = string.gsub(words, \"\\\\h\", \" \")\n    local words = string.gsub(words, \"\\\\i\", \" \")\n    local words = string.gsub(words, \"\\\\j\", \" \")\n    local words = string.gsub(words, \"\\\\k\", \" \")\n    local words = string.gsub(words, \"\\\\l\", \" \")\n    local words = string.gsub(words, \"\\\\m\", \" \")\n    local words = string.gsub(words, \"\\\\n\", \" \")\n    local words = string.gsub(words, \"\\\\o\", \" \")\n    local words = string.gsub(words, \"\\\\p\", \" \")\n    local words = string.gsub(words, \"\\\\q\", \" \")\n    local words = string.gsub(words, \"\\\\r\", \" \")\n    local words = string.gsub(words, \"\\\\s\", \" \")\n    local words = string.gsub(words, \"\\\\t\", \" \"",
    "    local words = string.gsub(S, '.', ' ')\n    local i = 1\n    for word in words:\n        if word == 'I' then\n            i = i + 1\n        end\n    end\n    return i\nend",
    "    local words = string.gsub(S, \"^[^a-zA-Z]*\", \"\")\n    local count = 0\n    for i=1,#words do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = split(S, \" \")\n    local count = 0\n    for i = 1, #words do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local i = 1\n    for word in words:\n        if string.sub(word, 1, 1) == \"I\":\n            i = i + 1\n    return i\nend",
    "    local words = string.gsub(S, '[^a-zA-Z0-9]', '')\n    local count = 0\n    for i=1,#words do\n        if words[i] == 'I' then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, \"\\\\W+\", \" \")\n    local words = string.gsub(words, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\s+$\", \"\")\n    local words = string.gsub(words, \"^\\\\s+\", \"\")\n    local words = string.gsub(words, \"^\\\\s+$\", \"\")\n    local words = string.gsub(words, \"^\\\\s+\", \"\")\n    local words = string.gsub(words, \"^\\\\s+$\", \"\")\n    local words = string.gsub(words, \"^\\\\s+\", \"\")\n    local words = string.gsub(words, \"^\\\\s+$\", \"\")\n    local words = string.gsub(words, \"^\\\\s+\", \"\")\n    local words = string.gsub(words, \"^\\\\s+$\", \"\")\n    local words = string.gsub(words, \"^\\\\s+\", \"\")\n    local words = string.gsub(words, \"^\\\\s+$\", \"\")\n    local words = string.gsub(words, \"^\\\\s+\", \"\")\n    local words = string.gsub(words, \"^\\\\s+$\", \"\")\n    local words = string.gsub(words, \"^\\\\s+\", \"\")\n    local words = string.gsub(words, \"^\\\\s+$\", \"\")\n    local words = string.gsub(words, \"^\\\\s+\", \"\")\n    local words = string.gsub(words, \"^\\\\s+$\", \"\")\n    local words = string.gsub(words, \"^\\\\s+\", \"\")\n    local words = string.gsub(words, \"^\\\\s+$\", \"\")\n    local words = string.gsub(words, \"^\\\\s+\", \"\")\n    local words = string.gsub(words, \"^\\\\s+$\", \"\")\n    local words = string.gsub(words, \"^\\\\s+\", \"\")\n    local words = string.gsub(words, \"^\\\\s+$\", \"\")\n    ",
    "    local words = string.gsub(S, \"^[^a-zA-Z0-9]*\", \"\")\n    local count = 0\n    for i = 1, #words, 2 do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, \"\\\\.|\\\\?|!\", \" \")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    return string.count(words, \" \")\nend",
    "    local words = string.split(S, \" \")\n    local count = 0\n    for i = 1, #words, 1 do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, '.', ' ')\n    local i = 1\n    for word in words:\n        if string.sub(word, 1, 1) == 'I' then\n            i = i + 1\n        end\n    end\n    return i\nend",
    "    local words = string.gsub(S, \"^[^a-zA-Z]\", \"\")\n    local count = 0\n    for i=1,#words do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = split(S, \" \")\n    local count = 0\n    for i = 1, #words, 1 do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local i = 1\n    for i = 1,#words,2 do\n        if words[i] == \"I\" and words[i+1] == \" \" then\n            return i\n        end\n    end\n    return 0\nend",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local i = 1\n    for i = 1,#words,2 do\n        if words[i] == \"I\" then\n            return i\n        end\n    end\n    return 0\nend",
    "    local words = string.split(S, \" \")\n    local count = 0\n    for i = 1, #words, 1 do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local count = 0\n    for i=1,#words,1 do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.split(S, \" \")\n    local count = 0\n    for i = 1, #words, 1 do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local i = 1\n    for k, v in pairs(words) do\n        if v == \"I\" then\n            i = i + 1\n        end\n    end\n    return i\nend",
    "    local words = string.gsub(S, '\\.', ' ')\n    local i = 1\n    for word in words:\n        if word == 'I' and i == 1:\n            i = i + 1\n        else:\n            i = 1\n    return i\nend",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local count = 0\n    for i = 1, #words, 2 do\n        if words[i] == \"I\" and words[i+1] == \" \" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local i, j, count = 0, 1, 0\n    for i = 1, #S, 2 do\n        if S[i] == '.' or S[i] == '?' or S[i] == '!' then\n            count = count + 1\n        end\n        if S[i] == 'I' then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\.|\\\\?|!|\\\\s\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    return #words\nend",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local i = 1\n    for _, w in pairs(words) do\n        if w == \"I\" then\n            i = i + 1\n        end\n    end\n    return i\nend",
    "    local words = string.gsub(S, '.', ' ')\n    local i = 1\n    for word in words:\n        if string.sub(word, 1, 1) == 'I' then\n            i = i + 1\n        end\n    end\n    return i\nend",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local i = 1\n    for i = 1, #words, 2 do\n        if words[i] == \"I\" then\n            return i\n        end\n    end\n    return 0\nend",
    "    local words = string.gsub(S, '.', ' ')\n    local i = 1\n    for word in words:\n        if word == 'I' and i == 1:\n            i = i + 1\n        else:\n            i = 1\n    return i\nend",
    "    local words = string.gsub(S, '\\.', ' ')\n    local i = 1\n    for word in words:\n        if word == 'I' and i == 1:\n            i = i + 1\n        else:\n            i = 1\n    return i\nend",
    "    local words = split(S, ' ')\n    local count = 0\n    for i = 1, #words, 2 do\n        if words[i] == 'I' then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(",
    "    local words = string.gsub(S, '.', '')\n    local i = 1\n    for k,v in pairs(words) do\n        if v == 'I' then\n            i = i + 1\n        end\n    end\n    return i\nend",
    "    local words = split(S, \" \")\n    local count = 0\n    for i = 1, #words, 1 do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, \"^[^a-zA-Z0-9]\", \"\")\n    local count = 0\n    for i=1,#words do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local i = 1\n    for i = 1,#words,1 do\n        if words[i] == \"I\" then\n            return i\n        end\n    end\n    return 0\nend",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local count = 0\n    for i = 1, #words, 2 do\n        if words[i] == \"I\" and words[i+1] == \" \" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local count = 0\n    for i = 1, #words, 2 do\n        if words[i] == \"I\" and words[i+1] == \" \" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, \"\\\\.|\\\\?|!\", \" \")\n    local count = 0\n    for i = 1, #words, 2 do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\.\\\\s+\", \".\")\n    local words = string.gsub(words, \"\\\\?\\\\s+\", \"?\")\n    local words = string.gsub(words, \"!\\\\s+\", \"!\")\n    local words = string.gsub(words, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\s+$\", \"\")\n    local words = string.gsub(words, \"^\\\\s+\", \"\")\n    local words = string.gsub(words, \"\\\\s+$\", \"\")\n    local words = string.gsub(words, \"^\\\\s+\", \"\")\n    local words = string.gsub(words, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"^\\\\s+\", \"\")\n    local words = string.gsub(words, \"\\\\s+$\", \"\")\n    local words = string.gsub(words, \"^\\\\s+\", \"\")\n    local words = string.gsub(words, \"\\\\s+$\", \"\")\n    local words = string.gsub(words, \"^\\\\s+\", \"\")\n    local words = string.gsub(words, \"\\\\s+$\", \"\")\n    local words = string.gsub(words, \"^\\\\s+\", \"\")\n    local words = string.gsub(words, \"\\\\s+$\", \"\")\n    local words = string.gsub(words, \"^\\\\s+\", \"\")\n    local words = string.gsub(words, \"\\\\s+$\", \"\")\n    local words = string.gsub(words, \"^\\\\s+\", \"\")\n    local words = string.gsub(words, \"\\\\s+$\", \"\")\n    local words = string.gsub(words, \"^\\\\s+\", \"\")\n    local words = string.gsub(words, \"\\\\s+$\", \"\")\n    local words = string.gsub(words, \"^\\\\s+\", \"\")\n    local words = string.gsub",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local count = 0\n    for i=1,#words,1 do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local i = 1\n    for _, word in pairs(words) do\n        if string.sub(word, 1, 1) == \"I\" then\n            i = i + 1\n        end\n    end\n    return i\nend",
    "    local words = string.gsub(S, \"\\\\.|\\\\?|!\", \" \")\n    local count = 0\n    for i = 1, #words, 2 do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, \"\\\\.|\\\\?|!\", \"\")\n    local count = 0\n    for i = 1, #words, 2 do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, '\\.', '')\n    local i = 1\n    while i <= #words do\n        if words[i] == 'I' then\n            return i\n        end\n        i = i + 1\n    end\n    return 0\nend",
    "    local words = string.gsub(S, \"^[a-zA-Z]+\", \"\")\n    local count = 0\n    for i=1,#words,2 do\n        if words[i] == \"I\" and words[i+1] == \" \" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, \"\\\\.|\\\\?|!\", \" \")\n    local words = string.gsub(words, \"I\", \"\")\n    return string.count(words, \" \")\nend",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(",
    "    local words = string.gsub(S, \"([^a-zA-Z0-9])\", \" \")\n    local count = 0\n    for i=1,#words,2 do\n        if words[i] == \"I\" and words[i+1] == \" \" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.split(S, '.')\n    local count = 0\n    for i = 1, #words, 1 do\n        if words[i] == 'I' then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, \"^[^a-zA-Z]*\", \"\")\n    local count = 0\n    for i = 1, #words, 2 do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = split(S, ' ')\n    local count = 0\n    for i, word in ipairs(words) do\n        if word == 'I' then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.split(S, \" \")\n    local count = 0\n    for i = 1, #words, 1 do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local count = 0\n    for i = 1,#words,2 do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c,",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local count = 0\n    for i=1,#words,1 do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, '.', ' ')\n    local i = 1\n    for word in words:\n        if word == 'I' then\n            i = i + 1\n        end\n    end\n    return i\nend",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(words, \"\\\\bI\\\\b\", \"\")\n    local words = string.gsub(",
    "    local i, j, count = 1, 1, 0\n    for i = 1, #S, 2 do\n        if S[i] == '.' or S[i] == '?' or S[i] == '!' then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.split(S, ' ')\n    local count = 0\n    for i, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'I' then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local i, j, count = 1, 1, 0\n    for i = 1, #S, 2 do\n        if S[i] == 'I' and S[i+1] == ' ' then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local i = 1\n    for word in words:\n        if word == \"I\" and i == 1:\n            i = i + 1\n        else:\n            i = 1\n    return i\nend",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local i = 1\n    for i, w in ipairs(words) do\n        if string.sub(w, 1, 1) == \"I\" then\n            return i\n        end\n    end\n    return 0\nend",
    "    local words = string.split(S, \" \")\n    local count = 0\n    for i = 1, #words, 1 do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local i, j, count = 1, 1, 0\n    for i = 1, #S, 2 do\n        if S[i] == '.' or S[i] == '?' or S[i] == '!' then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local i = 1\n    for _, word in pairs(words) do\n        if string.sub(word, 1, 1) == \"I\" then\n            i = i + 1\n        end\n    end\n    return i\nend",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local i = 1\n    for i, w in ipairs(words) do\n        if string.sub(w, 1, 1) == \"I\" then\n            return i\n        end\n    end\n    return 0\nend",
    "    local words = string.gsub(S, '[^a-zA-Z0-9]', '')\n    local count = 0\n    for i = 1, #words, 2 do\n        if words[i] == 'I' then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local i = 1\n    for word in words:\n        if word == \"I\" and i == 1:\n            i = i + 1\n        else:\n            i = 1\n    return i\nend",
    "    local words = string.gsub(S, \"\\\\.|\\\\?|!\", \" \")\n    local words = string.gsub(words, \"I\", \"\")\n    local words = string.gsub(words, \"\\\\s+\", \" \")\n    return string.count(words, \" \") - 1\nend",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local count = 0\n    for i=1,#words,1 do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, \"\\\\s+\", \" \")\n    local i = 1\n    for word in words:\n        if word == \"I\":\n            i = i + 1\n    return i\nend",
    "    local i, j, count = 0, 1, 0\n    for i = 1, #S, 2 do\n        if S[i] == '.' or S[i] == '?' or S[i] == '!' then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local i, j, count = 0, 1, 0\n    for i = 1, #S, 2 do\n        if S[i] == '.' or S[i] == '?' or S[i] == '!' then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = split(S, ' ')\n    local count = 0\n    for i = 1, #words, 2 do\n        if words[i] == 'I' then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local words = string.gsub(S, \"\\\\.|\\\\?|!\", \"\")\n    local count = 0\n    for i = 1, #words, 2 do\n        if words[i] == \"I\" then\n            count = count + 1\n        end\n    end\n    return count\nend"
  ],
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ]
}
language: lua
name: HumanEval_122_add_elements
results:
- exit_code: 1
  program: "-- Given a non-empty table of integers arr and an integer k, return\n\
    -- the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n-- Example:\n-- >>> add_elements([111,21,3,4000,5,6,7,8,9], 4)\n-- 24\n\
    -- Constraints:\n-- 1. 1 <= len(arr) <= 100\n-- 2. 1 <= k <= len(arr)\nlocal function\
    \ add_elements(arr, k)\n    local sum = 0\n    for i = 1, k, 1 do\n        sum\
    \ = sum + arr[i]\n        if arr[i] >= 10 then\n            sum = sum + arr[i]\n\
    \        end\n    end\n    return sum\nend\n\"\"\"\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = add_elements\n    lu.assertEquals(candidate({1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99}, 3), -4)\n    lu.assertEquals(candidate({111,\
    \ 121, 3, 4000, 5, 6}, 2), 0)\n    lu.assertEquals(candidate({11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9}, 4), 125)\n    lu.assertEquals(candidate({111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9}, 4), 24)\n    lu.assertEquals(candidate({1}, 1), 1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmphd58lp8p.lua:19: unexpected symbol near ''""''

    '
  stdout: ''
  timestamp: 1661907498
- exit_code: 1
  program: "-- Given a non-empty table of integers arr and an integer k, return\n\
    -- the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n-- Example:\n-- >>> add_elements([111,21,3,4000,5,6,7,8,9], 4)\n-- 24\n\
    -- Constraints:\n-- 1. 1 <= len(arr) <= 100\n-- 2. 1 <= k <= len(arr)\nlocal function\
    \ add_elements(arr, k)\n    local sum = 0\n    for i = 1, k, 1 do\n        sum\
    \ = sum + arr[i]\n        if arr[i] >= 10 then\n            sum = sum + arr[i]\n\
    \        end\n    end\n    return sum\nend\n\"\"\"\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = add_elements\n    lu.assertEquals(candidate({1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99}, 3), -4)\n    lu.assertEquals(candidate({111,\
    \ 121, 3, 4000, 5, 6}, 2), 0)\n    lu.assertEquals(candidate({11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9}, 4), 125)\n    lu.assertEquals(candidate({111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9}, 4), 24)\n    lu.assertEquals(candidate({1}, 1), 1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmphd58lp8p.lua:19: unexpected symbol near ''""''

    '
  stdout: ''
  timestamp: 1661907498
- exit_code: 1
  program: "-- Given a non-empty table of integers arr and an integer k, return\n\
    -- the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n-- Example:\n-- >>> add_elements([111,21,3,4000,5,6,7,8,9], 4)\n-- 24\n\
    -- Constraints:\n-- 1. 1 <= len(arr) <= 100\n-- 2. 1 <= k <= len(arr)\nlocal function\
    \ add_elements(arr, k)\n    local sum = 0\n    for i = 1, k, 1 do\n        sum\
    \ = sum + arr[i]\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = add_elements\n    lu.assertEquals(candidate({1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99}, 3), -4)\n    lu.assertEquals(candidate({111,\
    \ 121, 3, 4000, 5, 6}, 2), 0)\n    lu.assertEquals(candidate({11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9}, 4), 125)\n    lu.assertEquals(candidate({111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9}, 4), 24)\n    lu.assertEquals(candidate({1}, 1), 1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4g_onbvs.lua:21:\
    \ expected: 0, actual: 232\nstack traceback:\n\t/tmp/tmp4g_onbvs.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1661907498
- exit_code: 1
  program: "-- Given a non-empty table of integers arr and an integer k, return\n\
    -- the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n-- Example:\n-- >>> add_elements([111,21,3,4000,5,6,7,8,9], 4)\n-- 24\n\
    -- Constraints:\n-- 1. 1 <= len(arr) <= 100\n-- 2. 1 <= k <= len(arr)\nlocal function\
    \ add_elements(arr, k)\n    local sum = 0\n    for i = 1, k, 1 do\n        sum\
    \ = sum + arr[i]\n        if arr[i] >= 10 then\n            sum = sum + arr[i]\n\
    \        end\n    end\n    return sum\nend\n\"\"\"\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = add_elements\n    lu.assertEquals(candidate({1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99}, 3), -4)\n    lu.assertEquals(candidate({111,\
    \ 121, 3, 4000, 5, 6}, 2), 0)\n    lu.assertEquals(candidate({11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9}, 4), 125)\n    lu.assertEquals(candidate({111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9}, 4), 24)\n    lu.assertEquals(candidate({1}, 1), 1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmphd58lp8p.lua:19: unexpected symbol near ''""''

    '
  stdout: ''
  timestamp: 1661907498
- exit_code: 1
  program: "-- Given a non-empty table of integers arr and an integer k, return\n\
    -- the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n-- Example:\n-- >>> add_elements([111,21,3,4000,5,6,7,8,9], 4)\n-- 24\n\
    -- Constraints:\n-- 1. 1 <= len(arr) <= 100\n-- 2. 1 <= k <= len(arr)\nlocal function\
    \ add_elements(arr, k)\n    local sum = 0\n    for i = 1, k, 1 do\n        sum\
    \ = sum + arr[i]\n        if arr[i] >= 10 then\n            sum = sum + arr[i]\n\
    \        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = add_elements\n    lu.assertEquals(candidate({1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99}, 3), -4)\n    lu.assertEquals(candidate({111,\
    \ 121, 3, 4000, 5, 6}, 2), 0)\n    lu.assertEquals(candidate({11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9}, 4), 125)\n    lu.assertEquals(candidate({111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9}, 4), 24)\n    lu.assertEquals(candidate({1}, 1), 1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiaw92j21.lua:24:\
    \ expected: 0, actual: 464\nstack traceback:\n\t/tmp/tmpiaw92j21.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1661907498
- exit_code: 1
  program: "-- Given a non-empty table of integers arr and an integer k, return\n\
    -- the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n-- Example:\n-- >>> add_elements([111,21,3,4000,5,6,7,8,9], 4)\n-- 24\n\
    -- Constraints:\n-- 1. 1 <= len(arr) <= 100\n-- 2. 1 <= k <= len(arr)\nlocal function\
    \ add_elements(arr, k)\n    local sum = 0\n    for i = 1, k, 1 do\n        sum\
    \ = sum + arr[i]\n        if arr[i] >= 10 then\n            sum = sum + arr[i]\n\
    \        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = add_elements\n    lu.assertEquals(candidate({1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99}, 3), -4)\n    lu.assertEquals(candidate({111,\
    \ 121, 3, 4000, 5, 6}, 2), 0)\n    lu.assertEquals(candidate({11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9}, 4), 125)\n    lu.assertEquals(candidate({111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9}, 4), 24)\n    lu.assertEquals(candidate({1}, 1), 1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiaw92j21.lua:24:\
    \ expected: 0, actual: 464\nstack traceback:\n\t/tmp/tmpiaw92j21.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1661907498
- exit_code: 1
  program: "-- Given a non-empty table of integers arr and an integer k, return\n\
    -- the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n-- Example:\n-- >>> add_elements([111,21,3,4000,5,6,7,8,9], 4)\n-- 24\n\
    -- Constraints:\n-- 1. 1 <= len(arr) <= 100\n-- 2. 1 <= k <= len(arr)\nlocal function\
    \ add_elements(arr, k)\n    local sum = 0\n    for i = 1, k, 1 do\n        sum\
    \ = sum + arr[i]\n    end\n    return sum\nend\n\"\"\"\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = add_elements\n    lu.assertEquals(candidate({1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99}, 3), -4)\n    lu.assertEquals(candidate({111,\
    \ 121, 3, 4000, 5, 6}, 2), 0)\n    lu.assertEquals(candidate({11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9}, 4), 125)\n    lu.assertEquals(candidate({111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9}, 4), 24)\n    lu.assertEquals(candidate({1}, 1), 1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpbve3sd87.lua:16: unexpected symbol near ''""''

    '
  stdout: ''
  timestamp: 1661907498
- exit_code: 1
  program: "-- Given a non-empty table of integers arr and an integer k, return\n\
    -- the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n-- Example:\n-- >>> add_elements([111,21,3,4000,5,6,7,8,9], 4)\n-- 24\n\
    -- Constraints:\n-- 1. 1 <= len(arr) <= 100\n-- 2. 1 <= k <= len(arr)\nlocal function\
    \ add_elements(arr, k)\n    local sum = 0\n    for i = 1, k, 1 do\n        sum\
    \ = sum + arr[i]\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = add_elements\n    lu.assertEquals(candidate({1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99}, 3), -4)\n    lu.assertEquals(candidate({111,\
    \ 121, 3, 4000, 5, 6}, 2), 0)\n    lu.assertEquals(candidate({11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9}, 4), 125)\n    lu.assertEquals(candidate({111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9}, 4), 24)\n    lu.assertEquals(candidate({1}, 1), 1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4g_onbvs.lua:21:\
    \ expected: 0, actual: 232\nstack traceback:\n\t/tmp/tmp4g_onbvs.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1661907498
- exit_code: 1
  program: "-- Given a non-empty table of integers arr and an integer k, return\n\
    -- the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n-- Example:\n-- >>> add_elements([111,21,3,4000,5,6,7,8,9], 4)\n-- 24\n\
    -- Constraints:\n-- 1. 1 <= len(arr) <= 100\n-- 2. 1 <= k <= len(arr)\nlocal function\
    \ add_elements(arr, k)\n    local sum = 0\n    for i = 1, k, 1 do\n        sum\
    \ = sum + arr[i]\n        if arr[i] >= 10 then\n            sum = sum + arr[i]\n\
    \        end\n    end\n    return sum\nend\n\"\"\"\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = add_elements\n    lu.assertEquals(candidate({1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99}, 3), -4)\n    lu.assertEquals(candidate({111,\
    \ 121, 3, 4000, 5, 6}, 2), 0)\n    lu.assertEquals(candidate({11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9}, 4), 125)\n    lu.assertEquals(candidate({111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9}, 4), 24)\n    lu.assertEquals(candidate({1}, 1), 1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmphd58lp8p.lua:19: unexpected symbol near ''""''

    '
  stdout: ''
  timestamp: 1661907498
- exit_code: 1
  program: "-- Given a non-empty table of integers arr and an integer k, return\n\
    -- the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n-- Example:\n-- >>> add_elements([111,21,3,4000,5,6,7,8,9], 4)\n-- 24\n\
    -- Constraints:\n-- 1. 1 <= len(arr) <= 100\n-- 2. 1 <= k <= len(arr)\nlocal function\
    \ add_elements(arr, k)\n    local sum = 0\n    for i = 1, k, 1 do\n        sum\
    \ = sum + arr[i]\n    end\n    return sum\nend\n\"\"\"\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = add_elements\n    lu.assertEquals(candidate({1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99}, 3), -4)\n    lu.assertEquals(candidate({111,\
    \ 121, 3, 4000, 5, 6}, 2), 0)\n    lu.assertEquals(candidate({11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9}, 4), 125)\n    lu.assertEquals(candidate({111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9}, 4), 24)\n    lu.assertEquals(candidate({1}, 1), 1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpbve3sd87.lua:16: unexpected symbol near ''""''

    '
  stdout: ''
  timestamp: 1661907498
- exit_code: 1
  program: "-- Given a non-empty table of integers arr and an integer k, return\n\
    -- the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n-- Example:\n-- >>> add_elements([111,21,3,4000,5,6,7,8,9], 4)\n-- 24\n\
    -- Constraints:\n-- 1. 1 <= len(arr) <= 100\n-- 2. 1 <= k <= len(arr)\nlocal function\
    \ add_elements(arr, k)\n    local sum = 0\n    for i = 1, k, 1 do\n        sum\
    \ = sum + arr[i]\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = add_elements\n    lu.assertEquals(candidate({1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99}, 3), -4)\n    lu.assertEquals(candidate({111,\
    \ 121, 3, 4000, 5, 6}, 2), 0)\n    lu.assertEquals(candidate({11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9}, 4), 125)\n    lu.assertEquals(candidate({111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9}, 4), 24)\n    lu.assertEquals(candidate({1}, 1), 1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4g_onbvs.lua:21:\
    \ expected: 0, actual: 232\nstack traceback:\n\t/tmp/tmp4g_onbvs.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1661907498
- exit_code: 1
  program: "-- Given a non-empty table of integers arr and an integer k, return\n\
    -- the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n-- Example:\n-- >>> add_elements([111,21,3,4000,5,6,7,8,9], 4)\n-- 24\n\
    -- Constraints:\n-- 1. 1 <= len(arr) <= 100\n-- 2. 1 <= k <= len(arr)\nlocal function\
    \ add_elements(arr, k)\n    local sum = 0\n    for i = 1, k, 1 do\n        sum\
    \ = sum + arr[i]\n        if arr[i] >= 10 then\n            sum = sum + arr[i]\n\
    \        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = add_elements\n    lu.assertEquals(candidate({1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99}, 3), -4)\n    lu.assertEquals(candidate({111,\
    \ 121, 3, 4000, 5, 6}, 2), 0)\n    lu.assertEquals(candidate({11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9}, 4), 125)\n    lu.assertEquals(candidate({111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9}, 4), 24)\n    lu.assertEquals(candidate({1}, 1), 1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiaw92j21.lua:24:\
    \ expected: 0, actual: 464\nstack traceback:\n\t/tmp/tmpiaw92j21.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1661907498
- exit_code: 1
  program: "-- Given a non-empty table of integers arr and an integer k, return\n\
    -- the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n-- Example:\n-- >>> add_elements([111,21,3,4000,5,6,7,8,9], 4)\n-- 24\n\
    -- Constraints:\n-- 1. 1 <= len(arr) <= 100\n-- 2. 1 <= k <= len(arr)\nlocal function\
    \ add_elements(arr, k)\n    local sum = 0\n    for i = 1, k, 1 do\n        sum\
    \ = sum + arr[i]\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = add_elements\n    lu.assertEquals(candidate({1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99}, 3), -4)\n    lu.assertEquals(candidate({111,\
    \ 121, 3, 4000, 5, 6}, 2), 0)\n    lu.assertEquals(candidate({11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9}, 4), 125)\n    lu.assertEquals(candidate({111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9}, 4), 24)\n    lu.assertEquals(candidate({1}, 1), 1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4g_onbvs.lua:21:\
    \ expected: 0, actual: 232\nstack traceback:\n\t/tmp/tmp4g_onbvs.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1661907498
- exit_code: 1
  program: "-- Given a non-empty table of integers arr and an integer k, return\n\
    -- the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n-- Example:\n-- >>> add_elements([111,21,3,4000,5,6,7,8,9], 4)\n-- 24\n\
    -- Constraints:\n-- 1. 1 <= len(arr) <= 100\n-- 2. 1 <= k <= len(arr)\nlocal function\
    \ add_elements(arr, k)\n    local sum = 0\n    for i = 1, k, 1 do\n        sum\
    \ = sum + arr[i]\n    end\n    return sum\nend\n\"\"\"\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = add_elements\n    lu.assertEquals(candidate({1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99}, 3), -4)\n    lu.assertEquals(candidate({111,\
    \ 121, 3, 4000, 5, 6}, 2), 0)\n    lu.assertEquals(candidate({11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9}, 4), 125)\n    lu.assertEquals(candidate({111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9}, 4), 24)\n    lu.assertEquals(candidate({1}, 1), 1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpbve3sd87.lua:16: unexpected symbol near ''""''

    '
  stdout: ''
  timestamp: 1661907498
- exit_code: 1
  program: "-- Given a non-empty table of integers arr and an integer k, return\n\
    -- the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n-- Example:\n-- >>> add_elements([111,21,3,4000,5,6,7,8,9], 4)\n-- 24\n\
    -- Constraints:\n-- 1. 1 <= len(arr) <= 100\n-- 2. 1 <= k <= len(arr)\nlocal function\
    \ add_elements(arr, k)\n    local sum = 0\n    for i = 1, k, 1 do\n        sum\
    \ = sum + arr[i]\n        if arr[i] >= 10 then\n            sum = sum + arr[i]\n\
    \        end\n    end\n    return sum\nend\n\"\"\"\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = add_elements\n    lu.assertEquals(candidate({1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99}, 3), -4)\n    lu.assertEquals(candidate({111,\
    \ 121, 3, 4000, 5, 6}, 2), 0)\n    lu.assertEquals(candidate({11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9}, 4), 125)\n    lu.assertEquals(candidate({111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9}, 4), 24)\n    lu.assertEquals(candidate({1}, 1), 1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmphd58lp8p.lua:19: unexpected symbol near ''""''

    '
  stdout: ''
  timestamp: 1661907498
- exit_code: 1
  program: "-- Given a non-empty table of integers arr and an integer k, return\n\
    -- the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n-- Example:\n-- >>> add_elements([111,21,3,4000,5,6,7,8,9], 4)\n-- 24\n\
    -- Constraints:\n-- 1. 1 <= len(arr) <= 100\n-- 2. 1 <= k <= len(arr)\nlocal function\
    \ add_elements(arr, k)\n    local sum = 0\n    for i = 1, k, 1 do\n        sum\
    \ = sum + arr[i]\n        if arr[i] >= 10 then\n            sum = sum + arr[i]\n\
    \        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = add_elements\n    lu.assertEquals(candidate({1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99}, 3), -4)\n    lu.assertEquals(candidate({111,\
    \ 121, 3, 4000, 5, 6}, 2), 0)\n    lu.assertEquals(candidate({11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9}, 4), 125)\n    lu.assertEquals(candidate({111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9}, 4), 24)\n    lu.assertEquals(candidate({1}, 1), 1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiaw92j21.lua:24:\
    \ expected: 0, actual: 464\nstack traceback:\n\t/tmp/tmpiaw92j21.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1661907498
- exit_code: 1
  program: "-- Given a non-empty table of integers arr and an integer k, return\n\
    -- the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n-- Example:\n-- >>> add_elements([111,21,3,4000,5,6,7,8,9], 4)\n-- 24\n\
    -- Constraints:\n-- 1. 1 <= len(arr) <= 100\n-- 2. 1 <= k <= len(arr)\nlocal function\
    \ add_elements(arr, k)\n    local sum = 0\n    for i = 1, k, 1 do\n        sum\
    \ = sum + arr[i]\n    end\n    return sum\nend\n\"\"\"\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = add_elements\n    lu.assertEquals(candidate({1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99}, 3), -4)\n    lu.assertEquals(candidate({111,\
    \ 121, 3, 4000, 5, 6}, 2), 0)\n    lu.assertEquals(candidate({11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9}, 4), 125)\n    lu.assertEquals(candidate({111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9}, 4), 24)\n    lu.assertEquals(candidate({1}, 1), 1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpbve3sd87.lua:16: unexpected symbol near ''""''

    '
  stdout: ''
  timestamp: 1661907498
- exit_code: 1
  program: "-- Given a non-empty table of integers arr and an integer k, return\n\
    -- the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n-- Example:\n-- >>> add_elements([111,21,3,4000,5,6,7,8,9], 4)\n-- 24\n\
    -- Constraints:\n-- 1. 1 <= len(arr) <= 100\n-- 2. 1 <= k <= len(arr)\nlocal function\
    \ add_elements(arr, k)\n    local sum = 0\n    for i = 1, k, 1 do\n        sum\
    \ = sum + arr[i]\n    end\n    return sum\nend\n\"\"\"\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = add_elements\n    lu.assertEquals(candidate({1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99}, 3), -4)\n    lu.assertEquals(candidate({111,\
    \ 121, 3, 4000, 5, 6}, 2), 0)\n    lu.assertEquals(candidate({11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9}, 4), 125)\n    lu.assertEquals(candidate({111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9}, 4), 24)\n    lu.assertEquals(candidate({1}, 1), 1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpbve3sd87.lua:16: unexpected symbol near ''""''

    '
  stdout: ''
  timestamp: 1661907498
- exit_code: 1
  program: "-- Given a non-empty table of integers arr and an integer k, return\n\
    -- the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n-- Example:\n-- >>> add_elements([111,21,3,4000,5,6,7,8,9], 4)\n-- 24\n\
    -- Constraints:\n-- 1. 1 <= len(arr) <= 100\n-- 2. 1 <= k <= len(arr)\nlocal function\
    \ add_elements(arr, k)\n    local sum = 0\n    for i = 1, k, 1 do\n        sum\
    \ = sum + arr[i]\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = add_elements\n    lu.assertEquals(candidate({1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99}, 3), -4)\n    lu.assertEquals(candidate({111,\
    \ 121, 3, 4000, 5, 6}, 2), 0)\n    lu.assertEquals(candidate({11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9}, 4), 125)\n    lu.assertEquals(candidate({111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9}, 4), 24)\n    lu.assertEquals(candidate({1}, 1), 1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4g_onbvs.lua:21:\
    \ expected: 0, actual: 232\nstack traceback:\n\t/tmp/tmp4g_onbvs.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1661907498
- exit_code: 1
  program: "-- Given a non-empty table of integers arr and an integer k, return\n\
    -- the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n-- Example:\n-- >>> add_elements([111,21,3,4000,5,6,7,8,9], 4)\n-- 24\n\
    -- Constraints:\n-- 1. 1 <= len(arr) <= 100\n-- 2. 1 <= k <= len(arr)\nlocal function\
    \ add_elements(arr, k)\n    local sum = 0\n    for i = 1, k, 1 do\n        sum\
    \ = sum + arr[i]\n    end\n    return sum\nend\n\"\"\"\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = add_elements\n    lu.assertEquals(candidate({1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99}, 3), -4)\n    lu.assertEquals(candidate({111,\
    \ 121, 3, 4000, 5, 6}, 2), 0)\n    lu.assertEquals(candidate({11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9}, 4), 125)\n    lu.assertEquals(candidate({111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9}, 4), 24)\n    lu.assertEquals(candidate({1}, 1), 1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpbve3sd87.lua:16: unexpected symbol near ''""''

    '
  stdout: ''
  timestamp: 1661907498

name: HumanEval_77_iscube
language: lua
prompt: "-- Write a function that takes an integer a and returns true \n-- if this\
  \ ingeger is a cube of some integer number.\n-- Note: you may assume the input is\
  \ always valid.\n-- Examples:\n-- >>> iscube(1)\n-- True\n-- >>> iscube(2)\n-- False\n\
  -- >>> iscube(-1)\n-- True\n-- >>> iscube(64)\n-- True\n-- >>> iscube(0)\n-- True\n\
  -- >>> iscube(180)\n-- False\nlocal function iscube(a)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
  \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
  \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64), true)\n\
  \    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
  \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
  \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    if a == 0 or a == 1 then\n        return true\n    else\n     \
    \   return false\n    end\nend", "    if a == 0 or a == 1 then\n        return\
    \ true\n    else\n        return false\n    end\nend", "    if a < 0 then\n  \
    \      return true\n    end\n    if a == 0 then\n        return true\n    end\n\
    \    return a % a == 0\nend", "    return a % 1 == 0 and a % 4 == 0\nend", " \
    \   return a % a == 0 and a % (a * a) == 0\nend", "    if a < 0 then\n       \
    \ return true\n    elseif a == 0 then\n        return true\n    else\n       \
    \ return a % 2 == 0 and iscube(a / 2)\n    end\nend", "    return a % 1 == 0 and\
    \ a % 4 == 0\nend", "    return a % 1 == 0 and a % 4 == 0\nend", "    if a < 0\
    \ then\n        return true\n    else\n        return a % a == 0\n    end\nend",
  "    if a < 0 then\n        return true\n    end\n    if a == 0 then\n        return\
    \ true\n    end\n    if a % 3 == 0 then\n        return iscube(a / 3)\n    end\n\
    \    return false\nend", "    if a == 0 or a == 1 then\n        return true\n\
    \    end\n    return false\nend", "    if a == 0 then return true end\n    if\
    \ a < 0 then return true end\n    if a % 3 == 0 then return true end\n    return\
    \ false\nend", "    if a < 0 then\n        return true\n    end\n    if a == 0\
    \ then\n        return true\n    end\n    if a % 3 == 0 then\n        return iscube(a\
    \ / 3)\n    end\n    return false\nend", "    if a < 0 then\n        return true\n\
    \    elseif a == 0 then\n        return true\n    elseif a % 3 == 0 then\n   \
    \     return true\n    else\n        return false\n    end\nend", "    if a ==\
    \ 0 then return true end\n    if a < 0 then return true end\n    if a % 3 == 0\
    \ then return true end\n    if a % 4 == 0 then return true end\n    return false\n\
    end", "    if a < 0 then\n        return true\n    end\n    return a % a == 0\n\
    end", "    if a == 0 then\n        return true\n    end\n    if a < 0 then\n \
    \       return iscube(-a)\n    end\n    return a % a == 0\nend", "    return a\
    \ % a == 0 and a >= 0\nend", "    if a == 0 or a == 1 then\n        return true\n\
    \    else\n        return false\n    end\nend", "    if a == 0 then return true\
    \ end\n    if a < 0 then a = -a end\n    if a % 3 == 0 then return true end\n\
    \    if a % 2 == 0 then return true end\n    return false\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

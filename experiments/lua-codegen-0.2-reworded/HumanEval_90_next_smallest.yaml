name: HumanEval_90_next_smallest
language: lua
prompt: "-- You are given a table of integers.\n-- Write a function next_smallest()\
  \ that returns the 2nd smallest element of the table.\n-- Return None if there is\
  \ no such element.\n-- >>> next_smallest([1, 2, 3, 4, 5])\n-- 2\n-- >>> next_smallest([5,\
  \ 1, 4, 3, 2])\n-- 2\n-- >>> next_smallest([])\n-- None\n-- >>> next_smallest([1,\
  \ 1])\n-- None\nlocal function next_smallest(lst)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = next_smallest\n\
  \    lu.assertEquals(candidate({1, 2, 3, 4, 5}), 2)\n    lu.assertEquals(candidate({5,\
  \ 1, 4, 3, 2}), 2)\n    lu.assertEquals(candidate({}), None)\n    lu.assertEquals(candidate({1,\
  \ 1}), None)\n    lu.assertEquals(candidate({1, 1, 1, 1, 0}), 1)\n    lu.assertEquals(candidate({1,\
  \ 1}), None)\n    lu.assertEquals(candidate({-35, 34, 12, -45}), -35)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local i = 1\n    local j = 2\n    local k = 3\n    local m = 4\n\
    \    local n = 5\n    while i < #lst do\n        if lst[i] < lst[j] and lst[i]\
    \ < lst[k] and lst[i] < lst[m] and lst[i] < lst[n] then\n            return lst[i]\n\
    \        elseif lst[j] < lst[k] and lst[j] < lst[m] and lst[j] < lst[n] then\n\
    \            return lst[j]\n        elseif lst[k] < lst[m] and lst[k] < lst[n]\
    \ then\n            return lst[k]\n        elseif lst[m] < lst[n] then\n     \
    \       return lst[m]\n        else\n            i = i + 1\n            j = j\
    \ + 1\n            k = k + 1\n            m = m + 1\n            n = n + 1\n \
    \   end\n    return nil\nend", "    local i = 1\n    local j = 2\n    local k\
    \ = 3\n    local n = len(lst)\n    while i < n and lst[i] > lst[j] and lst[i]\
    \ > lst[k] do\n        if lst[i] < lst[j] and lst[i] < lst[k] then\n         \
    \   return lst[i]\n            return lst[j]\n            return lst[k]\n    \
    \    else\n            i = i + 1\n            j = j + 1\n            k = k + 1\n\
    \        end\n    end\n    return nil\nend", "    local i, j, k, m, n, t\n   \
    \ i = 1\n    j = 1\n    k = 1\n    m = 1\n    n = 1\n    t = 1\n    while i <=\
    \ #lst do\n        if lst[i] < lst[j] then\n            j = j + 1\n          \
    \  t = t + 1\n        else\n            if lst[i] < lst[k] then\n            \
    \    k = k + 1\n                t = t + 1\n            else\n                if\
    \ lst[i] < lst[m] then\n                    m = m + 1\n                    t =\
    \ t + 1\n                else\n                    if lst[i] < lst[n] then\n \
    \                       n = n + 1\n                        t = t + 1\n       \
    \             else\n                        return lst[i]\n                  \
    \      return\n                end\n            end\n        end\n        i =\
    \ i + 1\n    end\n    return\nend", "    local result = nil\n    for i = 1, #lst\
    \ do\n        if lst[i] < lst[result] then\n            result = i\n        end\n\
    \    end\n    return result\nend", "    local i = 1\n    local j = 1\n    local\
    \ min = lst[1]\n    for i = 2, #lst do\n        if lst[i] < min then\n       \
    \     min = lst[i]\n            j = i\n        end\n    end\n    if j == 1 then\n\
    \        return nil\n    end\n    return min\nend", "    local i, min = 1, lst[1]\n\
    \    for i = 2, #lst do\n        if lst[i] < min then\n            min = lst[i]\n\
    \            i = i + 1\n        end\n    end\n    return i - 1\nend", "    local\
    \ t = {}\n    for i = 1, #lst do\n        t[lst[i]] = i\n    end\n    for i =\
    \ 1, #lst do\n        if lst[i] < lst[t[lst[i]]] then\n            return lst[t[lst[i]]]\n\
    \        end\n    end\n    return nil\nend", "    local i, min = 1, lst[1]\n \
    \   for i = 2, #lst, 1 do\n        if lst[i] < min then\n            min = lst[i]\n\
    \            i = i\n        end\n    end\n    return i\nend", "    local i = 1\n\
    \    local j = 1\n    local k = 1\n    local result = nil\n    while i <= #lst\
    \ do\n        if lst[i] < lst[j] then\n            j = i\n            k = i\n\
    \        else\n            k = j\n        end\n        i = i + 1\n    end\n  \
    \  if k == 1 then\n        return nil\n    else\n        return lst[k]\n    end\n\
    end", "    local t = {}\n    for i=1,#                                       \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                               ", "    local i = 1\n    local\
    \ j = 2\n    local k = 3\n    while i < #lst do\n        if lst[i] < lst[j] and\
    \ lst[i] < lst[k] then\n            return lst[i]\n            k = j\n       \
    \ elseif lst[j] < lst[k] then\n            j = k\n            k = i\n        else\n\
    \            k = i\n        end\n        i = i + 1\n    end\n    return nil\n\
    end", "    local t = {}\n    for i=1,#                                       \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                             ", "    local i, j, min = 1, 1,\
    \ math.inf\n    for i = 1, #lst do\n        if lst[i] < lst[j] then\n        \
    \    min = lst[i]\n            j = i\n        end\n    end\n    if min == math.inf\
    \ then\n        return nil\n    else\n        return lst[j]\n    end\nend", " \
    \   local t = {}\n    for i = 1, #lst do\n        t[lst[i]] = i\n    end\n   \
    \ for i = 1, #lst do\n        if t[lst[i]] < t[lst[t[lst[i]]]] then\n        \
    \    return lst[t[lst[i]]]\n        end\n    end\n    return nil\nend", "    local\
    \ t = {}\n    for i = 1, #lst do\n        t[lst[i]] = i\n    end\n    for i =\
    \ 1, #lst do\n        if t[lst[i]] < t[lst[t[lst[i]]]] then\n            return\
    \ lst[t[lst[i]]]\n        end\n    end\n    return nil\nend", "    local i, min,\
    \ min_index\n    for i = 1, #lst, 2 do\n        if lst[i] < lst[i+1] then\n  \
    \          min = lst[i]\n            min_index = i\n        end\n    end\n   \
    \ if min_index == 1 then\n        return lst[2]\n    elseif min_index == 2 then\n\
    \        return lst[3]\n    else\n        return None\n    end\nend", "    local\
    \ t = {}\n    for i = 1, #lst, 2 do\n        t[lst[i]] = lst[i + 1]\n    end\n\
    \    for i = 1, #t, 2 do\n        if t[i] ~= nil then\n            return t[i]\n\
    \        end\n    end\n    return nil\nend", "    local t = {}\n    for i = 1,\
    \ #lst do\n        t[lst[i]] = i\n    end\n    for i = 1, #lst do\n        if\
    \ t[lst[i]] < t[lst[i - 1]] then\n            return lst[i]\n        end\n   \
    \ end\n    return nil\nend", "    local i = 1\n    local j = 2\n    local k =\
    \ 3\n    local m = 4\n    local n = 5\n    while i < #lst do\n        if lst[i]\
    \ < lst[j] and lst[i] < lst[k] and lst[i] < lst[m] and lst[i] < lst[n] then\n\
    \            return lst[i]\n        elseif lst[j] < lst[k] and lst[j] < lst[m]\
    \ and lst[j] < lst[n] then\n            return lst[j]\n        elseif lst[k] <\
    \ lst[m] and lst[k] < lst[n] then\n            return lst[k]\n        elseif lst[m]\
    \ < lst[n] then\n            return lst[m]\n        else\n            j = i\n\
    \            k = i\n            m = i\n            n = i\n            i = i +\
    \ 1\n    end\n    return nil\nend", "    local i, j, k\n    for i = 1, #lst, 2\
    \ do\n        for j = i + 1, #lst, 2 do\n            for k = j + 1, #lst, 2 do\n\
    \                if lst[k] < lst[j] and lst[k] < lst[i] then\n               \
    \     return lst[k]\n                end\n            end\n        end\n    end\n\
    \    return nil\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

language: lua
name: HumanEval_71_triangle_area
results:
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.00\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n    if a + b > c or a + c > b or b + c\
    \ > a then\n        return -1\n    end\n    return math.sqrt(a * b * c / 2)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpt0nnffpc.lua:21:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpt0nnffpc.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1661907412
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.00\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n    if a + b > c or a + c > b or b + c\
    \ > a then\n        return -1\n    end\n    return math.sqrt(a * b * c) / 2\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjlg_ojf7.lua:21:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpjlg_ojf7.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1661907412
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.00\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n    if a + b > c then\n        return -1\n\
    \    elseif a + c > b then\n        return -1\n    elseif b + c > a then\n   \
    \     return -1\n    else\n        return math.sqrt(a * b * c) / 2\n    end\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpf568w9k5.lua:26:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpf568w9k5.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1661907412
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.00\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n    if a + b > c then\n        return c\
    \ / 2\n    else\n        return -1\n    end\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpch4_udg3.lua:22:\
    \ expected: 6, actual: 2.5\nstack traceback:\n\t/tmp/tmpch4_udg3.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1661907412
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.00\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n    if a + b > c then\n        return -1\n\
    \    elseif a + c > b then\n        return -1\n    elseif b + c > a then\n   \
    \     return -1\n    else\n        return math.sqrt(a * b * c) / 2\n    end\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpf568w9k5.lua:26:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpf568w9k5.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1661907412
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.00\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n    if a + b > c or a + c > b or b + c\
    \ > a then\n        return -1\n    end\n    return math.sqrt(a * b * c) / 2\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjlg_ojf7.lua:21:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpjlg_ojf7.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1661907412
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.00\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n    if a + b > c or a + c > b or b + c\
    \ > a then\n        return -1\n    end\n    return math.sqrt(a * b * c) / 2\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjlg_ojf7.lua:21:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpjlg_ojf7.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1661907412
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.00\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n    if a + b > c then\n        return -1\n\
    \    elseif a + c > b then\n        return -1\n    elseif b + c > a then\n   \
    \     return -1\n    else\n        return math.floor(a * b / 2)\n    end\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3y5qh0x6.lua:26:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmp3y5qh0x6.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1661907412
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.00\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n    if a + b > c or a + c > b or b + c\
    \ > a then\n        return -1\n    end\n    return math.sqrt(a * b * c) / 2\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjlg_ojf7.lua:21:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpjlg_ojf7.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1661907412
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.00\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n    if a + b > c or a + c > b or b + c\
    \ > a then\n        return -1\n    else\n        return math.sqrt(a * b * c) /\
    \ 2\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n  \
    \  lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp57jk0hbi.lua:22:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmp57jk0hbi.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1661907412
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.00\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n    if a + b > c then\n        return -1\n\
    \    elseif a + c > b then\n        return -1\n    elseif b + c > a then\n   \
    \     return -1\n    else\n        return math.sqrt(a * b * c) / 2\n    end\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpf568w9k5.lua:26:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpf568w9k5.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1661907412
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.00\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n    if a + b > c or a + c > b or b + c\
    \ > a then\n        return -1\n    end\n    return math.sqrt(a * b * c) / 2\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjlg_ojf7.lua:21:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpjlg_ojf7.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1661907412
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.00\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n    if a + b > c or a + c > b or b + c\
    \ > a then\n        return -1\n    else\n        return math.floor(0.5 * (a +\
    \ b + c) * math.sqrt(a * b * c / (a + b + c)))\n    end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp3j7uqav.lua:22:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpp3j7uqav.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1661907412
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.00\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n    if a + b > c then\n        return c\
    \ / 2\n    else\n        return -1\n    end\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpch4_udg3.lua:22:\
    \ expected: 6, actual: 2.5\nstack traceback:\n\t/tmp/tmpch4_udg3.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1661907412
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.00\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n    if a + b > c or a + c > b or b + c\
    \ > a then\n        return -1\n    end\n    return math.sqrt(a * b * c) / 2\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjlg_ojf7.lua:21:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpjlg_ojf7.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1661907412
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.00\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n    local a = a or 0\n    local b = b or\
    \ 0\n    local c = c or 0\n    if a + b > c or b + c > a or a + c > b or c + a\
    \ > b then\n        return -1\n    end\n    return math.sqrt(a * b * c) / 2\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphe8n8ijb.lua:24:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmphe8n8ijb.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1661907412
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.00\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n    if a + b > c or a + c > b or b + c\
    \ > a then\n        return -1\n    end\n    return math.sqrt(a * b * c) / 2\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjlg_ojf7.lua:21:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpjlg_ojf7.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1661907412
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.00\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n    if a + b > c then\n        return -1\n\
    \    elseif a + c > b then\n        return -1\n    elseif b + c > a then\n   \
    \     return -1\n    else\n        return math.sqrt(a * b * c) / 2\n    end\n\
    end\n\"\"\"\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpxbv3bb0l.lua:22: unexpected symbol near ''""''

    '
  stdout: ''
  timestamp: 1661907412
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.00\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n    if a + b > c then\n        return -1\n\
    \    elseif a + c > b then\n        return -1\n    elseif b + c > a then\n   \
    \     return -1\n    else\n        return math.sqrt(a * b * c)\n    end\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpwlvhqnhh.lua:26:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpwlvhqnhh.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1661907412
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.00\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n    if a + b > c or a + c > b or b + c\
    \ > a then\n        return -1\n    else\n        return math.sqrt(a * b * c) /\
    \ 2\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n  \
    \  lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp57jk0hbi.lua:22:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmp57jk0hbi.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1661907412

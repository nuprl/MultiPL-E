name: HumanEval_161_solve
language: lua
prompt: "-- You are given a string s.\n-- if s[i] is a letter, reverse its case from\
  \ lower to upper or vise versa, \n-- otherwise keep it as it is.\n-- If the string\
  \ contains no letters, reverse the string.\n-- The function should return the resulted\
  \ string.\n-- Examples\n-- >>> solve(\"1234\") \n-- \"4321\"\n-- >>> solve(\"ab\"\
  ) \n-- \"AB\"\n-- >>> solve(\"#a@C\") \n-- \"#A@c\"\nlocal function solve(s)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = solve\n\
  \    lu.assertEquals(candidate('AsDf'), 'aSdF')\n    lu.assertEquals(candidate('1234'),\
  \ '4321')\n    lu.assertEquals(candidate('ab'), 'AB')\n    lu.assertEquals(candidate('#a@C'),\
  \ '#A@c')\n    lu.assertEquals(candidate('#AsdfW^45'), '#aSDFw^45')\n    lu.assertEquals(candidate('#6@2'),\
  \ '2@6#')\n    lu.assertEquals(candidate('#$a^D'), '#$A^d')\n    lu.assertEquals(candidate('#ccc'),\
  \ '#CCC')\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    if s == \"\" then return \"\" end\n    local i = 1\n    local result\
    \ = \"\"\n    while i <= #s do\n        if s[i] ~= nil then\n            if s[i]\
    \ ~= \" \" then\n                result = result .. string.upper(s[i])\n     \
    \       else\n                result = result .. s[i]\n            end\n     \
    \   else\n            result = result .. s[i]\n        end\n        i = i + 1\n\
    \    end\n    return result\nend\n<|endoftext|><|python|>#                   \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                   ", "    if s == \"\" then return \"\" end\n\
    \    local i, j = 1, 1\n    local result = \"\"\n    while i <= #s do\n      \
    \  if s[i] ~= nil then\n            if s[i] >= 'a' and s[i] <= 'z' then\n    \
    \            result = result .. string.upper(s[i])\n            else\n       \
    \         result = result .. string.lower(s[i])\n            end\n        else\n\
    \            result = result .. s[i]\n        end\n        i = i + 1\n    end\n\
    \    return result\nend\n<|endoftext|><|python|>#", "    local t = {}\n    for\
    \ i = 1, #s, 2 do\n        if s[i] ~= s[i+1] then\n            t[s[i]] = s[i+1]\n\
    \        end\n    end\n    if #t == 0 then\n        return s\n    end\n    for\
    \ i = 1, #t, 2 do\n        s[i] = t[i]\n    end\n    return s\nend\n*/", "   \
    \ if s:match(\"^[a-zA-Z]*$\") then\n        return string.gsub(s, \"([a-z])([A-Z])\"\
    , \"$2$1\")\n    else\n        return string.gsub(s, \"([a-z])([A-Z])\", \"$2$1\"\
    )\n    end\nend\n*/", "    if s == \"\" then return \"\" end\n    local i, j =\
    \ 1, 1\n    local res = \"\"\n    while i <= #s do\n        if s[i] ~= \"\" then\n\
    \            if s[i] >= \"a\" and s[i] <= \"z\" then\n                res = res\
    \ .. string.upper(s[i])\n            else\n                res = res .. string.lower(s[i])\n\
    \            end\n        else\n            res = res .. s[i]\n        end\n \
    \       i = i + 1\n    end\n    return res\nend\n<|endoftext|><|python|>#", " \
    \   if s == \"\" then return \"\" end\n    local i = 1\n    local result = \"\"\
    \n    while i <= #s do\n        if s[i] ~= nil then\n            result = string.gsub(result,\
    \ s[i], string.upper(s[i]))\n        else\n            result = string.gsub(result,\
    \ s[i], s[i])\n        end\n        i = i + 1\n    end\n    return result\nend\n\
    <|endoftext|><|python|>#                                                     \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                           ", "    local t = {}\n    for i=1,#",
  "    local i,j\n    for i=1,#", "    local i, j, k, c, l, r\n    i = 1\n    j =\
    \ 1\n    k = 1\n    c = \"\"\n    l = 0\n    r = 0\n    while i <= #s do\n   \
    \     if s[i] ~= nil then\n            if s[i] ~= \" \" then\n               \
    \ if s[i] ~= \"#\" then\n                    c = c .. string.upper(s[i])\n   \
    \             else\n                    c = c .. string.lower(s[i])\n        \
    \        end\n            else\n                c = c .. s[i]\n            end\n\
    \        else\n            c = c .. s[i]\n        end\n        i = i + 1\n   \
    \ end\n    while j <= #c do\n        if c[j] ~= nil then\n            if c[j]\
    \ ~= \" \" then\n                if c[j] ~= \"#\" then\n                    c\
    \ = c .. string.lower(c[j])\n                else\n                    c = c ..\
    \ string.upper(c[j])\n                end\n            else\n                c\
    \ = c .. c[j]\n            end\n        else\n            c = c .. c[j]\n    \
    \    end\n        j = j + 1\n    end\n    while k <= #c do\n        if c[k] ~=\
    \ nil then\n            if c[k] ~= \" \" then\n                if c[k] ~= \"#\"\
    \ then\n                    c = c .. string.upper(c[k])\n                else\n\
    \                    c = c .. string.lower(c[k])\n                end\n      \
    \      else\n                c = c .. c[k]\n            end\n        else\n  \
    \          c = c .. c[k]\n        end\n        k = k + 1\n    end\n    if l ==\
    \ 0 and r == 0 then\n        return c\n    else\n        return \"\"\n    end\n\
    end\n<|endoftext|><|python|>#", "    local t = {}\n    for i=1,#             \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                               ", "    local i, j, k, c\n    for i = 1, #s, 2\
    \ do\n        if s[i] ~= s[i+1] then\n            c = s[i+1]\n            s[i+1]\
    \ = c\n            s[i] = c\n        end\n    end\n    return s\nend\n*/", " \
    \   local i, j\n    for i = 1, #s, 2 do\n        if s[i] ~= s[i+1] then\n    \
    \        s = string.gsub(s, s[i], string.upper(s[i]))\n            s = string.gsub(s,\
    \ s[i], string.lower(s[i]))\n        end\n    end\n    return s\nend\n<|endoftext|><|python|>#",
  "    if s:match(\"[a-zA-Z]\") then\n        return string.gsub(s, \"[a-z]\", \"\
    A\") .. string.gsub(s, \"[A-Z]\", \"a\")\n    else\n        return string.gsub(s,\
    \ \"[a-z]\", \"A\") .. string.gsub(s, \"[A-Z]\", \"a\")\n    end\nend\n*/", " \
    \   local i, j, k\n    for i = 1, #s, 2 do\n        if s[i] ~= s[i+1] then\n \
    \           if s[i] ~= \" \" then\n                s = string.gsub(s, s[i], string.upper(s[i]))\n\
    \            else\n                s = string.gsub(s, s[i], s[i])\n          \
    \  end\n        end\n    end\n    return s\nend\n<|endoftext|><|python|>#", " \
    \   local t = {}\n    for i=1,#                                              \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \      ", "    if s == \"\" then return \"\" end\n    local i, l = 1, #s\n   \
    \ local result = \"\"\n    while i <= l do\n        if s[i] ~= nil then\n    \
    \        result = result .. string.char(toupper(s[i]) .. tolower(s[i]))\n    \
    \    else\n            result = result .. s[i]\n        end\n        i = i + 1\n\
    \    end\n    return result\nend\n<|endoftext|><|python|>#", "    local t = {}\n\
    \    for i = 1, #s, 2 do\n        if s[i] ~= s[i+1] then\n            t[s[i]]\
    \ = s[i+1]\n        end\n    end\n    if #t == 0 then\n        return s\n    end\n\
    \    for k, v in pairs(t) do\n        s = string.gsub(s, k, v)\n    end\n    return\
    \ s\nend\n<|endoftext|><|python|>#", "    if s:match(\"^[a-zA-Z]*$\") then\n \
    \       return string.gsub(s, \"[a-z]\", \"A\") .. \"Z\" .. string.gsub(s, \"\
    [A-Z]\", \"a\") .. \"z\"\n    else\n        return string.gsub(s, \"[^a-zA-Z]\"\
    , \"\")\n    end\nend\n*/", "    if s == \"\" then return \"\" end\n    local\
    \ i = 1\n    local j = 1\n    local result = \"\"\n    while i <= #s do\n    \
    \    if s[i] ~= nil then\n            if s[i] >= \"a\" and s[i] <= \"z\" then\n\
    \                result = result .. string.upper(s[i])\n            else\n   \
    \             result = result .. string.lower(s[i])\n            end\n       \
    \ else\n            result = result .. s[i]\n        end\n        i = i + 1\n\
    \    end\n    return result\nend\n<|endoftext|><|python|>#", "    if s == \"\"\
    \ then return \"\" end\n    local i = 1\n    local result = \"\"\n    while i\
    \ <= #s do\n        if s[i] ~= nil then\n            if s[i] ~= \" \" then\n \
    \               result = result .. string.upper(s[i])\n            else\n    \
    \            result = result .. string.lower(s[i])\n            end\n        else\n\
    \            result = result .. s[i]\n        end\n        i = i + 1\n    end\n\
    \    return result\nend\n<|endoftext|><|python|>#                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                          ", "    local t = {}\n    for i = 1,\
    \ #s, 2 do\n        if s[i] ~= s[i+1] then\n            t[s[i]] = s[i+1]\n   \
    \     end\n    end\n    if #t == 0 then\n        return s\n    end\n    for k,\
    \ v in pairs(t) do\n        s = s:gsub(k, v)\n    end\n    return s\nend\n", " \
    \   if s == \"\" then return \"\" end\n    local i = 1\n    local result = \"\"\
    \n    while i <= #s do\n        if s[i] ~= nil then\n            result = string.gsub(result,\
    \ s[i], string.upper(s[i]))\n        else\n            result = string.gsub(result,\
    \ s[i], s[i])\n        end\n        i = i + 1\n    end\n    return result\nend\n",
  "    if s == \"\" then return s end\n    local i = 1\n    local j = 1\n    local\
    \ result = \"\"\n    while i <= #s do\n        if s[i] ~= nil then\n         \
    \   result = result .. string.char(toupper(s[i]))\n        else\n            result\
    \ = result .. s[i]\n        end\n        i = i + 1\n    end\n    return result\n\
    end\n", "    if s:match(\"[a-zA-Z]\") then\n        return string.gsub(s, \"[a-z]\"\
    , \"A\") .. string.gsub(s, \"[A-Z]\", \"a\")\n    else\n        return string.gsub(s,\
    \ \"[a-z]\", \"A\") .. string.gsub(s, \"[A-Z]\", \"a\")\n    end\nend\n*/", " \
    \   if s:match(\"^[a-zA-Z]*$\") then\n        return string.gsub(s, \"[a-z]\"\
    , \"A\") .. \"Z\" .. string.gsub(s, \"[A-Z]\", \"a\") .. \"z\"\n    else\n   \
    \     return string.gsub(s, \"[a-z]\", \"A\") .. \"z\" .. string.gsub(s, \"[A-Z]\"\
    , \"a\") .. \"Z\"\n    end\nend\n*/", "    if s == \"\" then return \"\" end\n\
    \    local i = 1\n    local j = 1\n    local result = \"\"\n    while i <= #s\
    \ do\n        if s[i] ~= nil then\n            if s[i] ~= \" \" then\n       \
    \         result = result .. string.upper(s[i])\n            else\n          \
    \      result = result .. s[i]\n            end\n        else\n            result\
    \ = result .. s[i]\n        end\n        i = i + 1\n    end\n    return result\n\
    end\n", "    if s == \"\" then return \"\" end\n    local i = 1\n    local res\
    \ = \"\"\n    while i <= #s do\n        if s[i] ~= nil then\n            if s[i]\
    \ ~= \" \" then\n                res = res .. string.upper(s[i])\n           \
    \ else\n                res = res .. string.lower(s[i])\n            end\n   \
    \     else\n            res = res .. s[i]\n        end\n        i = i + 1\n  \
    \  end\n    return res\nend", "    if s == \"\" then return \"\" end\n    local\
    \ i = 1\n    local j = 1\n    local result = \"\"\n    while i <= #s do\n    \
    \    if s[i] ~= nil then\n            if s[i] ~= \" \" then\n                result\
    \ = result .. string.upper(s[i])\n            else\n                result = result\
    \ .. string.lower(s[i])\n            end\n        else\n            result = result\
    \ .. s[i]\n        end\n        i = i + 1\n    end\n    return result\nend\n",
  "    if s == \"\" then return s end\n    local i = 1\n    local j = 1\n    local\
    \ result = \"\"\n    while i <= #s do\n        if s[i] ~= nil then\n         \
    \   if s[i] >= 'a' and s[i] <= 'z' then\n                result = result .. string.upper(s[i])\n\
    \            else\n                result = result .. string.lower(s[i])\n   \
    \         end\n        else\n            result = result .. s[i]\n        end\n\
    \        i = i + 1\n    end\n    return result\nend\nprint(solve(\"1234\"))\n\
    print(solve(\"ab\"))\nprint(solve(\"#a@C\"))\n", "    if s == \"\" then return\
    \ \"\" end\n    local i = 1\n    local j = 1\n    local result = \"\"\n    while\
    \ i <= #s do\n        if s[i] ~= nil then\n            if s[i] ~= \" \" then\n\
    \                result = result .. string.upper(s[i])\n            else\n   \
    \             result = result .. s[i]\n            end\n        else\n       \
    \     result = result .. s[i]\n        end\n        i = i + 1\n    end\n    return\
    \ result\nend\n", "    if s == \"\" then return \"\" end\n    local i = 1\n  \
    \  local res = \"\"\n    while i <= #s do\n        if s[i] ~= nil then\n     \
    \       if s[i] >= 'a' and s[i] <= 'z' then\n                res = res .. string.upper(s[i])\n\
    \            elseif s[i] >= 'A' and s[i] <= 'Z' then\n                res = res\
    \ .. string.lower(s[i])\n            else\n                res = res .. s[i]\n\
    \            end\n        else\n            res = res .. s[i]\n        end\n \
    \       i = i + 1\n    end\n    return res\nend\n", "    local i, j\n    for i\
    \ = 1, #s, 2 do\n        if s[i] ~= s[i+1] then\n            s = string.gsub(s,\
    \ s[i], string.upper(s[i]))\n            s = string.gsub(s, s[i], string.lower(s[i]))\n\
    \        end\n    end\n    return s\nend", "    if s == \"\" then return \"\"\
    \ end\n    local i = 1\n    local j = 1\n    local result = \"\"\n    while i\
    \ <= #s do\n        if s[i] ~= nil then\n            if s[i] ~= \" \" then\n \
    \               result = result .. string.upper(s[i])\n            else\n    \
    \            result = result .. s[i]\n            end\n        else\n        \
    \    result = result .. s[i]\n        end\n        i = i + 1\n    end\n    return\
    \ result\nend\n", "    if s == \"\" then return \"\" end\n    local i = 1\n  \
    \  local result = \"\"\n    while i <= #s do\n        if s[i] ~= nil then\n  \
    \          result = string.gsub(result, s[i], string.upper(s[i]))\n        else\n\
    \            result = string.gsub(result, s[i], s[i])\n        end\n        i\
    \ = i + 1\n    end\n    return result\nend\n", "    if s == \"\" then return \"\
    \" end\n    local i = 1\n    local result = \"\"\n    while i <= #s do\n     \
    \   if s[i] ~= nil then\n            if s[i] ~= \" \" then\n                result\
    \ = result .. string.upper(s[i])\n            else\n                result = result\
    \ .. string.lower(s[i])\n            end\n        else\n            result = result\
    \ .. s[i]\n        end\n        i = i + 1\n    end\n    return result\nend\n",
  "    if s == \"\" then return \"\" end\n    local i = 1\n    local result = \"\"\
    \n    while i <= #s do\n        if s[i] ~= nil then\n            result = string.gsub(result,\
    \ s[i], string.upper(s[i]))\n        else\n            result = string.gsub(result,\
    \ s[i], string.lower(s[i]))\n        end\n        i = i + 1\n    end\n    return\
    \ result\nend\n", "    local i, j, k\n    for i = 1, #s, 2 do\n        if s[i]\
    \ ~= s[i+1] then\n            s = string.gsub(s, s[i], string.upper(s[i]))\n \
    \           s = string.gsub(s, s[i], string.lower(s[i]))\n        end\n    end\n\
    \    return s\nend", "    local t = {}\n    for i = 1, #s, 2 do\n        if s[i]\
    \ ~= s[i+1] then\n            t[s[i]] = s[i+1]\n        end\n    end\n    if #t\
    \ == 0 then\n        return s\n    end\n    for i = 1, #t, 2 do\n        s[i]\
    \ = t[i]\n    end\n    return s\nend\n*/", "    local i, j, k, l, r, c\n    for\
    \ i = 1, #s, 2 do\n        if s[i] ~= s[i+1] then\n            r = s[i] .. s[i+1]\n\
    \            for j = i+2, #s, 2 do\n                if s[j] ~= s[j+1] then\n \
    \                   c = s[j] .. s[j+1]\n                    break\n          \
    \      end\n            end\n            if c ~= \"\" then\n                for\
    \ k = i+2, #s, 2 do\n                    if s[k] ~= s[k+1] then\n            \
    \            l = s[k] .. s[k+1]\n                        break\n             \
    \       end\n                end\n            end\n            if l ~= \"\" then\n\
    \                s = r .. l .. c\n                i = i + 2\n            else\n\
    \                s = r .. c\n                i = i + 2\n            end\n    \
    \    else\n            s = s[i] .. s[i+1]\n            i = i + 2\n        end\n\
    \    end\n    return s\nend\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"\
    #a@C\"))\n", "    local t = {}\n    for i = 1, #s, 2 do\n        if s[i] ~= s[i+1]\
    \ then\n            t[s[i]] = s[i+1]\n        end\n    end\n    if #t == 0 then\n\
    \        return s\n    end\n    for i = 1, #t, 2 do\n        s[i] = t[i]\n   \
    \ end\n    return s\nend\n*/", "    if s == \"\" then return \"\" end\n    local\
    \ i = 1\n    local result = \"\"\n    while i <= #s do\n        if s[i] ~= nil\
    \ then\n            if s[i] >= 'a' and s[i] <= 'z' then\n                result\
    \ = string.gsub(result, s[i], string.upper(s[i]))\n            elseif s[i] >=\
    \ 'A' and s[i] <= 'Z' then\n                result = string.gsub(result, s[i],\
    \ string.lower(s[i]))\n            else\n                result = string.gsub(result,\
    \ s[i], s[i])\n            end\n        else\n            result = string.gsub(result,\
    \ s[i], s[i])\n        end\n        i = i + 1\n    end\n    return result\nend\n",
  "    local t = {}\n    for i=1,#s,2 do\n        if s[i] ~= s[i+1] then\n       \
    \     t[s[i]] = s[i+1]\n        end\n    end\n    if #t == 0 then\n        return\
    \ s\n    end\n    for i=1,#t,2 do\n        s[i] = t[i]\n    end\n    return s\n\
    end\n*/", "    if s == \"\" then return \"\" end\n    local i = 1\n    local result\
    \ = \"\"\n    while i <= #s do\n        if s[i] ~= nil then\n            if s[i]\
    \ ~= \" \" then\n                result = result .. string.upper(s[i])\n     \
    \       else\n                result = result .. s[i]\n            end\n     \
    \   else\n            result = result .. s[i]\n        end\n        i = i + 1\n\
    \    end\n    return result\nend\n", "    local i, j\n    for i = 1, #s, 2 do\n\
    \        if s[i] ~= s[i+1] then\n            j = i\n            break\n      \
    \  end\n    end\n    if j == #s then\n        return s\n    end\n    for i = j,\
    \ 1, -1 do\n        if s[i] ~= s[j] then\n            s = string.gsub(s, s[i],\
    \ string.upper(s[i]))\n            s = string.gsub(s, s[j], string.lower(s[j]))\n\
    \            break\n        end\n    end\n    return s\nend\n", "    if s == \"\
    \" then return s end\n    local i = 1\n    local j = 1\n    local result = \"\"\
    \n    while i <= #s do\n        if s[i] ~= nil then\n            if s[i] ~= \"\
    \ \" then\n                result = result .. string.upper(s[i])\n           \
    \ else\n                result = result .. s[i]\n            end\n        else\n\
    \            result = result .. s[i]\n        end\n        i = i + 1\n    end\n\
    \    return result\nend\n", "    if s == \"\" then return \"\" end\n    local\
    \ i = 1\n    local result = \"\"\n    while i <= #s do\n        if s[i] ~= nil\
    \ then\n            if s[i] >= 'a' and s[i] <= 'z' then\n                result\
    \ = string.gsub(result, s[i], string.upper(s[i]))\n            elseif s[i] >=\
    \ 'A' and s[i] <= 'Z' then\n                result = string.gsub(result, s[i],\
    \ string.lower(s[i]))\n            else\n                result = string.gsub(result,\
    \ s[i], s[i])\n            end\n        else\n            result = string.gsub(result,\
    \ s[i], s[i])\n        end\n        i = i + 1\n    end\n    return result\nend\n",
  "    local t = {}\n    for i=1,#s do\n        if s[i] ~= nil then\n            t[s[i]]\
    \ = t[s[i]] or \"\"\n            t[s[i]] = t[s[i]] .. s[i]\n        else\n   \
    \         t[s[i]] = s[i]\n        end\n    end\n    return t[1] .. t[#t]\nend\n\
    */\n", "    if s == \"\" then return \"\" end\n    local i = 1\n    local result\
    \ = \"\"\n    while i <= #s do\n        if s[i] ~= nil then\n            if s[i]\
    \ ~= \" \" then\n                result = result .. string.upper(s[i])\n     \
    \       else\n                result = result .. string.lower(s[i])\n        \
    \    end\n        else\n            result = result .. s[i]\n        end\n   \
    \     i = i + 1\n    end\n    return result\nend\nprint(solve(\"1234\"))\nprint(solve(\"\
    ab\"))\nprint(solve(\"#a@C\"))\n", "    if s:match('[a-zA-Z]') then\n        return\
    \ string.gsub(s, '[a-z]', 'A') .. string.gsub(s, '[A-Z]', 'a')\n    else\n   \
    \     return string.gsub(s, '[a-z]', 'A') .. string.gsub(s, '[A-Z]', 'a')\n  \
    \  end\nend", "    if s == \"\" then return \"\" end\n    local i = 1\n    local\
    \ res = \"\"\n    while i <= #s do\n        if s[i] ~= nil then\n            if\
    \ s[i] ~= \" \" then\n                res = res .. string.upper(s[i])\n      \
    \      else\n                res = res .. string.lower(s[i])\n            end\n\
    \        else\n            res = res .. s[i]\n        end\n        i = i + 1\n\
    \    end\n    return res\nend\n", "    if s == \"\" then return \"\" end\n   \
    \ local i = 1\n    local res = \"\"\n    while i <= #s do\n        if s[i] ~=\
    \ nil then\n            if s[i] ~= \" \" then\n                res = res .. string.upper(s[i])\n\
    \            else\n                res = res .. string.lower(s[i])\n         \
    \   end\n        else\n            res = res .. s[i]\n        end\n        i =\
    \ i + 1\n    end\n    return res\nend\nprint(solve(\"1234\"))\nprint(solve(\"\
    ab\"))\nprint(solve(\"#a@C\"))\n", "    if s == \"\" then return \"\" end\n  \
    \  local i = 1\n    local j = 1\n    local result = \"\"\n    while i <= #s do\n\
    \        if s[i] ~= nil then\n            if s[i] ~= \" \" then\n            \
    \    result = result .. string.upper(s[i])\n            else\n               \
    \ result = result .. s[i]\n            end\n        else\n            result =\
    \ result .. s[i]\n        end\n        i = i + 1\n    end\n    return result\n\
    end\n", "    if s == \"\" then return \"\" end\n    local i = 1\n    local result\
    \ = \"\"\n    while i <= #s do\n        if s[i] ~= nil then\n            if s[i]\
    \ ~= \" \" then\n                result = result .. string.upper(s[i])\n     \
    \       else\n                result = result .. string.lower(s[i])\n        \
    \    end\n        else\n            result = result .. s[i]\n        end\n   \
    \     i = i + 1\n    end\n    return result\nend\n", "    local i, j, k\n    for\
    \ i = 1, #s, 2 do\n        if s[i] ~= s[i+1] then\n            if s[i] ~= '#'\
    \ then\n                s[i+1] = string.upper(s[i+1])\n            else\n    \
    \            s[i+1] = string.lower(s[i+1])\n            end\n        end\n   \
    \ end\n    return s\nend\n*/", "    local i, j, k, c\n    for i = 1, #s, 2 do\n\
    \        if s[i] ~= s[i+1] then\n            if s[i] ~= '#' then\n           \
    \     s = string.gsub(s, s[i], string.upper(s[i]))\n            else\n       \
    \         s = string.gsub(s, s[i], string.lower(s[i]))\n            end\n    \
    \    end\n    end\n    return s\nend\nprint solve(\"1234\")\nprint solve(\"ab\"\
    )\nprint solve(\"#a@C\")\n", "    if s == \"\" then return s end\n    local i\
    \ = 1\n    local j = 1\n    local result = \"\"\n    while i <= #s do\n      \
    \  if s[i] ~= nil then\n            if s[i] ~= \" \" then\n                result\
    \ = result .. string.upper(s[i])\n            else\n                result = result\
    \ .. s[i]\n            end\n        else\n            result = result .. s[i]\n\
    \        end\n        i = i + 1\n    end\n    return result\nend\n", "    if s\
    \ == \"\" then return \"\" end\n    local i = 1\n    local result = \"\"\n   \
    \ while i <= #s do\n        if s[i] ~= nil then\n            if s[i] >= \"a\"\
    \ and s[i] <= \"z\" then\n                result = string.gsub(result, s[i], string.upper(s[i]))\n\
    \            else\n                result = string.gsub(result, s[i], string.lower(s[i]))\n\
    \            end\n        else\n            result = string.gsub(result, s[i],\
    \ s[i])\n        end\n        i = i + 1\n    end\n    return result\nend", " \
    \   local t = {}\n    for i=1,#s,2 do\n        if s[i] ~= s[i+1] then\n      \
    \      t[s[i]] = s[i+1]\n        end\n    end\n    if #t == 0 then\n        return\
    \ s\n    end\n    for k,v in pairs(t) do\n        s = string.gsub(s,k,v)\n   \
    \ end\n    return s\nend\n*/", "    local i, j, k, l\n    i = 1\n    j = 1\n \
    \   k = 1\n    l = 1\n    while i <= #s do\n        if s[i] ~= nil then\n    \
    \        if s[i] >= 'a' and s[i] <= 'z' then\n                s[i] = string.char(s[i]\
    \ - 32)\n            else\n                s[i] = string.char(s[i] + 32)\n   \
    \         end\n        else\n            s[i] = string.char(s[i])\n        end\n\
    \        i = i + 1\n    end\n    while j <= #s do\n        if s[j] ~= nil then\n\
    \            if s[j] >= 'a' and s[j] <= 'z' then\n                s[j] = string.char(s[j]\
    \ - 32)\n            else\n                s[j] = string.char(s[j] + 32)\n   \
    \         end\n        else\n            s[j] = string.char(s[j])\n        end\n\
    \        j = j + 1\n    end\n    while k <= #s do\n        if s[k] ~= nil then\n\
    \            if s[k] >= 'a' and s[k] <= 'z' then\n                s[k] = string.char(s[k]\
    \ - 32)\n            else\n                s[k] = string.char(s[k] + 32)\n   \
    \         end\n        else\n            s[k] = string.char(s[k])\n        end\n\
    \        k = k + 1\n    end\n    while l <= #s do\n        if s[l] ~= nil then\n\
    \            if s[l] >= 'a' and s[l] <= 'z' then\n                s[l] = string.char(s[l]\
    \ - 32)\n            else\n                s[l] = string.char(s[l] + 32)\n   \
    \         end\n        else\n            s[l] = string.char(s[l])\n        end\n\
    \        l = l + 1\n    end\n    return s\nend\n", "    local t = {}\n    for\
    \ i = 1, #s, 2 do\n        if s[i] ~= s[i+1] then\n            t[s[i]] = s[i+1]\n\
    \        end\n    end\n    if #t == 0 then\n        return s\n    end\n    for\
    \ k, v in pairs(t) do\n        s = string.gsub(s, k, v)\n    end\n    return s\n\
    end", "    if s == \"\" then return \"\" end\n    local i = 1\n    local j = 1\n\
    \    local result = \"\"\n    while i <= #s do\n        if s[i] ~= nil then\n\
    \            if s[i] ~= \" \" then\n                result = result .. string.upper(s[i])\n\
    \            else\n                result = result .. s[i]\n            end\n\
    \        else\n            result = result .. s[i]\n        end\n        i = i\
    \ + 1\n    end\n    return result\nend\n", "    if s == \"\" then return \"\"\
    \ end\n    local i = 1\n    local j = 1\n    local result = \"\"\n    while i\
    \ <= #s do\n        if s[i] ~= nil then\n            result = result .. string.char(toupper(s[i]))\n\
    \        else\n            result = result .. string.char(tolower(s[i]))\n   \
    \     end\n        i = i + 1\n    end\n    return result\nend\n", "    local i,\
    \ j, k\n    for i = 1, #s, 2 do\n        if s[i] ~= s[i+1] then\n            if\
    \ s[i] ~= \" \" then\n                s = string.gsub(s, s[i], string.upper(s[i]))\n\
    \            else\n                s = string.gsub(s, s[i], string.lower(s[i]))\n\
    \            end\n        end\n    end\n    return s\nend\nprint(solve(\"1234\"\
    ))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))\nprint(solve(\"\"))\nprint(solve(\"\
    \ \"))\nprint(solve(\"#\"))\nprint(solve(\"#a\"))\nprint(solve(\"#a#\"))\nprint(solve(\"\
    #a#b\"))\nprint(solve(\"#a#b#\"))\nprint(solve(\"#a#b#c\"))\nprint(solve(\"#a#b#c#\"\
    ))\nprint(solve(\"#a#b#c#d\"))\nprint(solve(\"#a#b#c#d#\"))\nprint(solve(\"#a#b#c#d#e\"\
    ))\nprint(solve(\"#a#b#c#d#e#\"))\nprint(solve(\"#a#b#c#d#e#f\"))\nprint(solve(\"\
    #a#b#c#d#e#f#\"))\nprint(solve(\"#a#b#c#d#e#f#g\"))\nprint(solve(\"#a#b#c#d#e#f#g#\"\
    ))\nprint(solve(\"#a#b#c#d#e#f#g#h\"))\nprint(solve(\"#a#b#c#d#e#f#g#h#\"))\n\
    print(solve(\"#a#b#c#d#e#f#g#h#i\"))\nprint(solve(\"#a#b#c#d#e#f#g#h#i#\"))\n\
    print(solve(\"#a#b#c#d#e#f#g#h#i#j\"))\nprint(solve(\"", "    if s == \"\" then\
    \ return \"\" end\n    local i, j, k\n    i = 1\n    j = 1\n    k = 1\n    while\
    \ i <= #s do\n        if s[i] ~= nil then\n            if s[i] ~= \" \" then\n\
    \                if s[i] ~= \"a\" then\n                    s[j] = string.upper(s[i])\n\
    \                else\n                    s[j] = string.lower(s[i])\n       \
    \         end\n                j = j + 1\n            else\n                s[k]\
    \ = s[i]\n                k = k + 1\n            end\n        else\n         \
    \   s[k] = s[i]\n            k = k + 1\n        end\n        i = i + 1\n    end\n\
    \    return s\nend\n", "    if s == \"\" then return s\n    local i, j = 1, #s\n\
    \    local result = \"\"\n    while i < j do\n        if s[i] ~= \"^@\" and s[i]\
    \ ~= \"^#\" then\n            result = result .. string.upper(s[i])\n        else\n\
    \            result = result .. string.lower(s[i])\n        i = i + 1\n    end\n\
    \    return result\nend\n*/", "    if s == \"\" then return \"\" end\n    local\
    \ i = 1\n    local j = 1\n    local result = \"\"\n    while i <= #s do\n    \
    \    if s[i] ~= nil then\n            if s[i] ~= \" \" then\n                result\
    \ = result .. string.upper(s[i])\n            else\n                result = result\
    \ .. s[i]\n            end\n        else\n            result = result .. s[i]\n\
    \        end\n        i = i + 1\n    end\n    return result\nend\n", "    if s\
    \ == \"\" then return \"\" end\n    local i = 1\n    local result = \"\"\n   \
    \ while i <= #s do\n        if s[i] ~= nil then\n            if s[i] ~= \" \"\
    \ then\n                result = result .. string.upper(s[i])\n            else\n\
    \                result = result .. string.lower(s[i])\n            end\n    \
    \    else\n            result = result .. s[i]\n        end\n        i = i + 1\n\
    \    end\n    return result\nend\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\n\
    print(solve(\"#a@C\"))\nprint(solve(\"\"))\nprint(solve(\"\"))\nprint(solve(\"\
    \"))\nprint(solve(\"\"))\nprint(solve(\"\"))\nprint(solve(\"\"))\nprint(solve(\"\
    \"))\nprint(solve(\"\"))\nprint(solve(\"\"))\nprint(solve(\"\"))\nprint(solve(\"\
    \"))\nprint(solve(\"\"))\nprint(solve(\"\"))\nprint(solve(\"\"))\nprint(solve(\"\
    \"))\nprint(solve(\"\"))\nprint(solve(\"\"))\nprint(solve(\"\"))\nprint(solve(\"\
    \"))\nprint(solve(\"\"))\nprint(solve(\"\"))\nprint(solve(\"\"))\nprint(solve(\"\
    \"))\nprint(solve(\"\"))\nprint(solve(\"\"))\nprint(solve(\"\"))\nprint(solve(\"\
    \"))\nprint(solve(\"\"))\nprint(solve(\"\"))\nprint(solve(\"\"))\nprint(solve(\"\
    \"))\nprint(solve(\"\"))\nprint(solve(\"\"))\nprint(solve(\"\"))\nprint(solve(\"\
    \"))\nprint(solve(\"\"))\nprint(solve(\"\"))\nprint(solve(\"\"))\nprint(solve(\"\
    \"))\nprint(solve(\"\"))\nprint(solve(\"\"))\nprint(solve(\"\"))\nprint(solve(\"\
    \"))\nprint(solve(\"\"))\nprint(solve(\"\"))\nprint(solve(\"\"))\nprint(solve(\"\
    \"))\nprint(solve(\"\"))\nprint(solve(\"\"))\nprint(solve(\"\"))\nprint(solve(\"\
    \"))\nprint(solve(\"\"))\nprint", "    local i, j, k\n    for i = 1, #s, 2 do\n\
    \        if s[i] ~= s[i+1] then\n            if s[i] ~= '#' then\n           \
    \     s = string.gsub(s, s[i], string.upper(s[i]))\n            else\n       \
    \         s = string.gsub(s, s[i], string.lower(s[i]))\n            end\n    \
    \    end\n    end\n    return s\nend\nprint(solve(\"1234\"))\nprint(solve(\"ab\"\
    ))\nprint(solve(\"#a@C\"))\nprint(solve(\"#\"))\nprint(solve(\"\"))\nprint(solve(\"\
    #a@C\"))\nprint(solve(\"#a@C\"))\nprint(solve(\"#a@C\"))\nprint(solve(\"#a@C\"\
    ))\nprint(solve(\"#a@C\"))\nprint(solve(\"#a@C\"))\nprint(solve(\"#a@C\"))\nprint(solve(\"\
    #a@C\"))\nprint(solve(\"#a@C\"))\nprint(solve(\"#a@C\"))\nprint(solve(\"#a@C\"\
    ))\nprint(solve(\"#a@C\"))\nprint(solve(\"#a@C\"))\nprint(solve(\"#a@C\"))\nprint(solve(\"\
    #a@C\"))\nprint(solve(\"#a@C\"))\nprint(solve(\"#a@C\"))\nprint(solve(\"#a@C\"\
    ))\nprint(solve(\"#a@C\"))\nprint(solve(\"#a@C\"))\nprint(solve(\"#a@C\"))\nprint(solve(\"\
    #a@C\"))\nprint(solve(\"#a@C\"))\nprint(solve(\"#a@C\"))\nprint(solve(\"#a@C\"\
    ))\nprint(solve(\"#a@C\"))\nprint(solve(\"#a@C\"))\nprint(solve(\"#a@C\"))\nprint(solve(\"\
    #a@C\"))\nprint(solve(\"#a@C\"))\nprint(solve(\"#a@C\"))\nprint(solve(\"#a@C\"\
    ))\nprint(", "    local t = {}\n    for i = 1, #s, 2 do\n        if s[i] ~= s[i+1]\
    \ then\n            t[s[i]] = s[i+1]\n        end\n    end\n    if #t == 0 then\n\
    \        return s\n    end\n    for k, v in pairs(t) do\n        s = string.gsub(s,\
    \ k, v)\n    end\n    return s\nend\n", "    local t = {}\n    for i = 1, #s,\
    \ 2 do\n        if s[i] ~= s[i+1] then\n            t[s[i]] = s[i+1]\n       \
    \ end\n    end\n    if #t == 0 then\n        return s\n    end\n    for k, v in\
    \ pairs(t) do\n        s = s:gsub(k, v)\n    end\n    return s\nend\n", "    if\
    \ s == \"\" then return \"\" end\n    local i, j = 1, 1\n    local result = \"\
    \"\n    while i <= #s do\n        if s[i] ~= nil then\n            if s[i] ~=\
    \ \" \" then\n                result = result .. string.upper(s[i])\n        \
    \    else\n                result = result .. s[i]\n            end\n        else\n\
    \            result = result .. s[i]\n        end\n        i = i + 1\n    end\n\
    \    return result\nend\n", "    if s == \"\" then return \"\" end\n    local\
    \ i, j = 1, 1\n    local result = \"\"\n    while i <= #s do\n        if s[i]\
    \ ~= nil then\n            if s[i] >= 'a' and s[i] <= 'z' then\n             \
    \   result = result .. string.upper(s[i])\n            else\n                result\
    \ = result .. string.lower(s[i])\n            end\n        else\n            result\
    \ = result .. s[i]\n        end\n        i = i + 1\n    end\n    return result\n\
    end\n", "    if s == \"\" then return \"\" end\n    local i = 1\n    local res\
    \ = \"\"\n    while i <= #s do\n        if s[i] ~= nil then\n            if s[i]\
    \ ~= \"a\" and s[i] ~= \"A\" then\n                res = res .. string.upper(s[i])\n\
    \            else\n                res = res .. string.lower(s[i])\n         \
    \   end\n        else\n            res = res .. s[i]\n        end\n        i =\
    \ i + 1\n    end\n    return res\nend\n", "    local t = {}\n    for i = 1, #s,\
    \ 2 do\n        if s[i] ~= s[i+1] then\n            t[s[i]] = s[i+1]\n       \
    \ end\n    end\n    if #t == 0 then\n        return s\n    end\n    for k, v in\
    \ pairs(t) do\n        s = s:gsub(k, v)\n    end\n    return s\nend", "    if\
    \ s == \"\" then return \"\" end\n    local i = 1\n    local j = 1\n    local\
    \ result = \"\"\n    while i <= #s do\n        if s[i] ~= nil then\n         \
    \   if s[i] ~= \" \" then\n                result = result .. string.upper(s[i])\n\
    \            else\n                result = result .. string.lower(s[i])\n   \
    \         end\n        else\n            result = result .. s[i]\n        end\n\
    \        i = i + 1\n    end\n    return result\nend\n", "    if s == \"\" then\
    \ return \"\" end\n    local i = 1\n    local result = \"\"\n    while i <= #s\
    \ do\n        if s[i] ~= nil then\n            if s[i] ~= \" \" then\n       \
    \         result = result .. string.upper(s[i])\n            else\n          \
    \      result = result .. string.lower(s[i])\n            end\n        else\n\
    \            result = result .. s[i]\n        end\n        i = i + 1\n    end\n\
    \    return result\nend\n", "    if s == \"\" then return \"\" end\n    local\
    \ i = 1\n    local j = 1\n    local result = \"\"\n    while i <= #s do\n    \
    \    if s[i] ~= nil then\n            if s[i] ~= \" \" then\n                result\
    \ = result .. string.upper(s[i])\n            else\n                result = result\
    \ .. s[i]\n            end\n        else\n            result = result .. s[i]\n\
    \        end\n        i = i + 1\n    end\n    return result\nend\n", "    if s\
    \ == \"\" then return \"\" end\n    local i = 1\n    local result = \"\"\n   \
    \ while i <= #s do\n        if s[i] ~= nil then\n            if s[i] >= 'a' and\
    \ s[i] <= 'z' then\n                result = string.gsub(result, s[i], string.upper(s[i]))\n\
    \            elseif s[i] >= 'A' and s[i] <= 'Z' then\n                result =\
    \ string.gsub(result, s[i], string.lower(s[i]))\n            else\n          \
    \      result = string.gsub(result, s[i], s[i])\n            end\n        else\n\
    \            result = string.gsub(result, s[i], s[i])\n        end\n        i\
    \ = i + 1\n    end\n    return result\nend\n", "    local i, j, k\n    for i =\
    \ 1, #s, 2 do\n        if s[i] ~= s[i+1] then\n            k = i\n           \
    \ for j = i + 2, #s, 2 do\n                if s[j] ~= s[j+1] then\n          \
    \          break\n            end\n            if j ~= #s then\n             \
    \   s = string.gsub(s, s[k], string.upper(s[k]))\n                s = string.gsub(s,\
    \ s[k], string.lower(s[k]))\n            end\n        end\n    end\n    return\
    \ s\nend\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))\n",
  "    local t = {}\n    for i = 1, #s, 2 do\n        if s[i] ~= s[i+1] then\n   \
    \         t[s[i]] = s[i+1]\n        end\n    end\n    return t[s[1]] .. t[s[#s]]\n\
    end\n*/", "    local i, j, k, c\n    for i = 1, #s, 2 do\n        if s[i] ~= s[i+1]\
    \ then\n            if s[i] ~= '#' then\n                s = string.gsub(s, s[i],\
    \ string.upper(s[i]))\n            else\n                s = string.gsub(s, s[i],\
    \ string.lower(s[i]))\n            end\n        end\n    end\n    return s\nend\n\
    print(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))\nprint(solve(\"\
    #\"))\nprint(solve(\"#a\"))\nprint(solve(\"#a#\"))\nprint(solve(\"#a#b\"))\nprint(solve(\"\
    #a#b#\"))\nprint(solve(\"#a#b#c\"))\nprint(solve(\"#a#b#c#\"))\nprint(solve(\"\
    #a#b#c#d\"))\nprint(solve(\"#a#b#c#d#\"))\nprint(solve(\"#a#b#c#d#e\"))\nprint(solve(\"\
    #a#b#c#d#e#\"))\nprint(solve(\"#a#b#c#d#e#f\"))\nprint(solve(\"#a#b#c#d#e#f#\"\
    ))\nprint(solve(\"#a#b#c#d#e#f#g\"))\nprint(solve(\"#a#b#c#d#e#f#g#\"))\nprint(solve(\"\
    #a#b#c#d#e#f#g#h\"))\nprint(solve(\"#a#b#c#d#e#f#g#h#\"))\nprint(solve(\"#a#b#c#d#e#f#g#h#i\"\
    ))\nprint(solve(\"#a#b#c#d#e#f#g#h#i#\"))\nprint(solve(\"#a#b#c#d#e#f#g#h#i#j\"\
    ))\nprint(solve(\"#a#b#c#d#e#f", "    if s:match(\"^[a-zA-Z]*$\") then\n     \
    \   return string.gsub(s, \"([a-z])([A-Z])\", \"$2$1\")\n    else\n        return\
    \ string.gsub(s, \"([a-z])([A-Z])\", \"$2$1\")\n    end\nend\n*/", "    if s:match(\"\
    ^[a-zA-Z]*$\") then\n        return string.gsub(s, \"([a-z])([A-Z])\", \"$2$1\"\
    )\n    else\n        return string.gsub(s, \"([a-z])([A-Z])\", \"$2$1\")\n   \
    \ end\nend\n", "    local t = {}\n    for i = 1, #s, 2 do\n        if s[i] ~=\
    \ s[i+1] then\n            t[s[i]] = s[i+1]\n        end\n    end\n    if #t ==\
    \ 0 then\n        return s\n    end\n    for k, v in pairs(t) do\n        s =\
    \ string.gsub(s, k, v)\n    end\n    return s\nend\n", "    local t = {}\n   \
    \ for i=1,#s,2 do\n        if s[i] ~= s[i+1] then\n            t[s[i]] = s[i+1]\n\
    \        end\n    end\n    if #t == 0 then\n        return s\n    end\n    for\
    \ i=1,#t,2 do\n        s[i] = t[i]\n    end\n    return s\nend\n", "    local\
    \ i, j, k\n    for i = 1, #s, 2 do\n        if s[i] ~= s[i+1] then\n         \
    \   if s[i] ~= \" \" then\n                s = string.gsub(s, s[i], string.upper(s[i]))\n\
    \            else\n                s = string.gsub(s, s[i], string.lower(s[i]))\n\
    \            end\n        end\n    end\n    return s\nend\nprint(solve(\"1234\"\
    ))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))\n", "    local t = {}\n    for\
    \ i = 1, #s, 2 do\n        if s[i] ~= s[i+1] then\n            t[s[i]] = s[i+1]\n\
    \        end\n    end\n    if #t == 0 then\n        return s\n    end\n    for\
    \ k, v in pairs(t) do\n        s = s:gsub(k, v)\n    end\n    return s\nend\n",
  "    local i, j, k\n    for i = 1, #s, 2 do\n        if s[i] ~= s[i+1] then\n  \
    \          if s[i] ~= '#' then\n                s = string.gsub(s, s[i], string.upper(s[i]))\n\
    \            else\n                s = string.gsub(s, s[i], string.lower(s[i]))\n\
    \            end\n        end\n    end\n    return s\nend", "    if s:match(\"\
    ^[a-zA-Z]*$\") then\n        return string.gsub(s, \"([a-z])([A-Z])\", \"$2$1\"\
    )\n    else\n        return string.gsub(s, \"([a-z])([A-Z])\", \"$2$1\")\n   \
    \ end\nend\n*/", "    if s == \"\" then return \"\" end\n    local i = 1\n   \
    \ local j = 1\n    local result = \"\"\n    while i <= #s do\n        if s[i]\
    \ ~= nil then\n            if s[i] ~= \" \" then\n                result = result\
    \ .. string.upper(s[i])\n            else\n                result = result ..\
    \ s[i]\n            end\n        else\n            result = result .. s[i]\n \
    \       end\n        i = i + 1\n    end\n    return result\nend\n", "    if s\
    \ == \"\" then return \"\" end\n    local i, l = 1, #s\n    local res = \"\"\n\
    \    while i <= l do\n        if s[i] ~= nil then\n            if s[i] >= 'a'\
    \ and s[i] <= 'z' then\n                res = res .. string.upper(s[i])\n    \
    \        else\n                res = res .. string.lower(s[i])\n            end\n\
    \        else\n            res = res .. s[i]\n        end\n        i = i + 1\n\
    \    end\n    return res\nend\n", "    local t = {}\n    for i = 1, #s, 2 do\n\
    \        if s[i] ~= s[i+1] then\n            t[s[i]] = s[i+1]\n        end\n \
    \   end\n    if #t == 0 then\n        return s\n    end\n    return string.gsub(s,\
    \ t)\nend\n", "    local t = {}\n    for i=1,#s,2 do\n        if s[i] ~= s[i+1]\
    \ then\n            t[s[i]] = s[i+1]\n        end\n    end\n    if #t == 0 then\n\
    \        return s\n    end\n    for k,v in pairs(t) do\n        s = string.gsub(s,k,v)\n\
    \    end\n    return s\nend\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"\
    #a@C\"))\n", "    local t = {}\n    for i=1,#s do\n        if s[i] ~= nil then\n\
    \            t[s[i]] = t[s[i]] or \"\"\n            t[s[i]] = string.upper(t[s[i]])\n\
    \        else\n            t[s[i]] = string.upper(s[i])\n        end\n    end\n\
    \    return t[1] .. \" \" .. t[2] .. \" \" .. t[3] .. \" \" .. t[4]\nend\n*/",
  "    if s == \"\" then return \"\" end\n    local i = 1\n    local res = \"\"\n\
    \    while i <= #s do\n        if s[i] ~= nil then\n            if s[i] ~= \"\
    \ \" then\n                res = res .. string.upper(s[i])\n            else\n\
    \                res = res .. string.lower(s[i])\n            end\n        else\n\
    \            res = res .. s[i]\n        end\n        i = i + 1\n    end\n    return\
    \ res\nend\n", "    if s:match(\"^[a-zA-Z]*$\") then\n        return string.gsub(s,\
    \ \"([a-z])([A-Z])\", \"$2$1\")\n    else\n        return string.gsub(s, \"([a-z])([A-Z])\"\
    , \"$2$1\")\n    end\nend\n*/", "    if s == \"\" then return \"\" end\n    local\
    \ i = 1\n    local j = 1\n    local result = \"\"\n    while i <= #s do\n    \
    \    if s[i] ~= nil then\n            if s[i] ~= \" \" then\n                result\
    \ = result .. string.upper(s[i])\n            else\n                result = result\
    \ .. s[i]\n            end\n        else\n            result = result .. s[i]\n\
    \        end\n        i = i + 1\n    end\n    return result\nend\n", "    local\
    \ t = {}\n    for i=1,#s,2 do\n        if s[i] ~= s[i+1] then\n            t[s[i]]\
    \ = s[i+1]\n        end\n    end\n    return t[s[1]] .. t[s[#s]]\nend\n*/", " \
    \   if s == \"\" then return \"\" end\n    local i = 1\n    local result = \"\"\
    \n    while i <= #s do\n        if s[i] ~= nil then\n            if s[i] ~= \"\
    \ \" then\n                result = result .. string.upper(s[i])\n           \
    \ else\n                result = result .. string.lower(s[i])\n            end\n\
    \        else\n            result = result .. s[i]\n        end\n        i = i\
    \ + 1\n    end\n    return result\nend\n", "    local t = {}\n    for i = 1, #s,\
    \ 2 do\n        if s[i] ~= s[i+1] then\n            t[s[i]] = s[i+1]\n       \
    \ end\n    end\n    if #t == 0 then\n        return s\n    end\n    for k, v in\
    \ pairs(t) do\n        s = s:gsub(k, v)\n    end\n    return s\nend", "    local\
    \ i, j, k\n    for i = 1, #s, 2 do\n        if s[i] ~= s[i+1] then\n         \
    \   if s[i] ~= \" \" then\n                s = string.gsub(s, s[i], string.upper(s[i]))\n\
    \            else\n                s = string.gsub(s, s[i], string.lower(s[i]))\n\
    \            end\n        end\n    end\n    return s\nend\nprint(solve(\"1234\"\
    ))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))\n", "    local t = {}\n    for\
    \ i = 1, #s, 2 do\n        if s[i] ~= s[i+1] then\n            t[s[i]] = s[i+1]\n\
    \        end\n    end\n    return t[s[1]]\nend\n*/", "    local i,j,k\n    for\
    \ i=1,#s,2 do\n        if s[i] ~= s[i+1] then\n            if s[i] ~= '#' then\n\
    \                s:sub(i,i) .. s[i] .. s:sub(i+1)\n            else\n        \
    \        s:sub(i+1,i+1) .. s[i] .. s:sub(i,i)\n            end\n        end\n\
    \    end\n    return s\nend\n*/", "    if s == \"\" then return \"\" end\n   \
    \ local i = 1\n    local result = \"\"\n    while i <= #s do\n        if s[i]\
    \ ~= nil then\n            if s[i] >= 'a' and s[i] <= 'z' then\n             \
    \   result = string.gsub(result, s[i], string.upper(s[i]))\n            elseif\
    \ s[i] >= 'A' and s[i] <= 'Z' then\n                result = string.gsub(result,\
    \ s[i], string.lower(s[i]))\n            else\n                result = string.gsub(result,\
    \ s[i], s[i])\n            end\n        else\n            result = string.gsub(result,\
    \ s[i], s[i])\n        end\n        i = i + 1\n    end\n    return result\nend\n",
  "    if s == \"\" then return \"\" end\n    local i = 1\n    local result = \"\"\
    \n    while i <= #s do\n        if s[i] ~= nil then\n            if s[i] ~= \"\
    \ \" then\n                result = result .. string.upper(s[i])\n           \
    \ else\n                result = result .. string.lower(s[i])\n            end\n\
    \        else\n            result = result .. s[i]\n        end\n        i = i\
    \ + 1\n    end\n    return result\nend\n", "    if s == \"\" then return \"\"\
    \ end\n    local i = 1\n    local result = \"\"\n    while i <= #s do\n      \
    \  if s[i] ~= nil then\n            if s[i] >= \"a\" and s[i] <= \"z\" then\n\
    \                result = string.gsub(result, s[i], string.upper(s[i]))\n    \
    \        else\n                result = string.gsub(result, s[i], string.lower(s[i]))\n\
    \            end\n        else\n            result = string.gsub(result, s[i],\
    \ s[i])\n        end\n        i = i + 1\n    end\n    return result\nend\n", " \
    \   local t = {}\n    for i = 1, #s, 2 do\n        if s[i] ~= s[i+1] then\n  \
    \          t[s[i]] = s[i+1]\n        end\n    end\n    if #t == 0 then\n     \
    \   return s\n    end\n    for i = 1, #t, 2 do\n        s[i] = t[i]\n    end\n\
    \    return s\nend\n*/", "    if s == \"\" then return \"\" end\n    local i =\
    \ 1\n    local result = \"\"\n    while i <= #s do\n        if s[i] ~= nil then\n\
    \            if s[i] >= \"a\" and s[i] <= \"z\" then\n                result =\
    \ string.gsub(result, s[i], string.upper(s[i]))\n            elseif s[i] >= \"\
    A\" and s[i] <= \"Z\" then\n                result = string.gsub(result, s[i],\
    \ string.lower(s[i]))\n            end\n        else\n            result = string.gsub(result,\
    \ s[i], s[i])\n        end\n        i = i + 1\n    end\n    return result\nend\n",
  "    if s == \"\" then return \"\" end\n    local i = 1\n    local result = \"\"\
    \n    while i <= #s do\n        if s[i] ~= nil then\n            if s[i] ~= \"\
    \ \" then\n                result = result .. string.upper(s[i])\n           \
    \ else\n                result = result .. string.lower(s[i])\n            end\n\
    \        else\n            result = result .. s[i]\n        end\n        i = i\
    \ + 1\n    end\n    return result\nend\n", "    if s == \"\" then return \"\"\
    \ end\n    local i = 1\n    local result = \"\"\n    while i <= #s do\n      \
    \  if s[i] ~= nil then\n            if s[i] >= \"a\" and s[i] <= \"z\" then\n\
    \                result = string.gsub(result, s[i], string.upper(s[i]))\n    \
    \        elseif s[i] >= \"A\" and s[i] <= \"Z\" then\n                result =\
    \ string.gsub(result, s[i], string.lower(s[i]))\n            else\n          \
    \      result = string.gsub(result, s[i], s[i])\n            end\n        else\n\
    \            result = string.gsub(result, s[i], s[i])\n        end\n        i\
    \ = i + 1\n    end\n    return result\nend\nprint(solve(\"1234\"))\nprint(solve(\"\
    ab\"))\nprint(solve(\"#a@C\"))\n", "    local t = {}\n    for i = 1, #s, 2 do\n\
    \        if s[i] ~= s[i+1] then\n            t[s[i]] = s[i+1]\n        end\n \
    \   end\n    if #t == 0 then\n        return s\n    end\n    for i = 1, #t, 2\
    \ do\n        s[i] = t[i]\n    end\n    return s\nend\n", "    local t = {}\n\
    \    for i=1,#s,2 do\n        if s[i] ~= s[i+1] then\n            t[s[i]] = s[i+1]\n\
    \        end\n    end\n    if #t == 0 then\n        return s\n    end\n    for\
    \ i=1,#t,2 do\n        s[i] = t[i]\n    end\n    return s\nend\n*/", "    local\
    \ t = {}\n    for i=1,#s do\n        if s[i] ~= nil then\n            t[s[i]]\
    \ = t[s[i]] or \"\"\n            t[s[i]] = t[s[i]] .. s[i]\n        else\n   \
    \         t[s[i]] = s[i]\n        end\n    end\n    return t[1] .. t[#t]\nend\n",
  "    local t = {}\n    for i = 1, #s, 2 do\n        if s[i] ~= s[i+1] then\n   \
    \         t[s[i]] = s[i+1]\n        end\n    end\n    if #t == 0 then\n      \
    \  return s\n    end\n    for k, v in pairs(t) do\n        s = string.gsub(s,\
    \ k, v)\n    end\n    return s\nend\n", "    if s == \"\" then return \"\" end\n\
    \    local i = 1\n    local result = \"\"\n    while i <= #s do\n        if s[i]\
    \ ~= nil then\n            if s[i] >= 'a' and s[i] <= 'z' then\n             \
    \   result = string.gsub(result, s[i], string.upper(s[i]))\n            elseif\
    \ s[i] >= 'A' and s[i] <= 'Z' then\n                result = string.gsub(result,\
    \ s[i], string.lower(s[i]))\n            else\n                result = string.gsub(result,\
    \ s[i], s[i])\n            end\n        else\n            result = string.gsub(result,\
    \ s[i], s[i])\n        end\n        i = i + 1\n    end\n    return result\nend\n",
  "    if s == \"\" then return \"\" end\n    local i = 1\n    local j = 1\n    local\
    \ result = \"\"\n    while i <= #s do\n        if s[i] ~= nil then\n         \
    \   if s[i] ~= \" \" then\n                result = result .. string.upper(s[i])\n\
    \            else\n                result = result .. s[i]\n            end\n\
    \        else\n            result = result .. s[i]\n        end\n        i = i\
    \ + 1\n    end\n    return result\nend\n", "    if s == \"\" then return \"\"\
    \ end\n    local i = 1\n    local j = 1\n    local result = \"\"\n    while i\
    \ <= #s do\n        if s[i] ~= nil then\n            if s[i] ~= \" \" then\n \
    \               result = result .. string.upper(s[i])\n            else\n    \
    \            result = result .. s[i]\n            end\n        else\n        \
    \    result = result .. s[i]\n        end\n        i = i + 1\n    end\n    return\
    \ result\nend\n", "    if s == \"\" then return \"\" end\n    local i = 1\n  \
    \  local res = \"\"\n    while i <= #s do\n        if s[i] ~= nil then\n     \
    \       if s[i] ~= \" \" then\n                res = res .. string.upper(s[i])\n\
    \            else\n                res = res .. string.lower(s[i])\n         \
    \   end\n        else\n            res = res .. s[i]\n        end\n        i =\
    \ i + 1\n    end\n    return res\nend\n", "    local t = {}\n    for i = 1, #s,\
    \ 2 do\n        if s[i] ~= s[i+1] then\n            t[s[i]] = s[i+1]\n       \
    \ end\n    end\n    if #t == 0 then\n        return s\n    end\n    for k, v in\
    \ pairs(t) do\n        s = string.gsub(s, k, v)\n    end\n    return s\nend\n\
    */", "    if s == \"\" then return \"\" end\n    local i = 1\n    local result\
    \ = \"\"\n    while i <= #s do\n        if s[i] ~= nil then\n            if s[i]\
    \ ~= \" \" then\n                result = result .. string.upper(s[i])\n     \
    \       else\n                result = result .. string.lower(s[i])\n        \
    \    end\n        else\n            result = result .. s[i]\n        end\n   \
    \     i = i + 1\n    end\n    return result\nend\nprint(solve(\"1234\"))\nprint(solve(\"\
    ab\"))\nprint(solve(\"#a@C\"))\n", "    if s == \"\" then return \"\" end\n  \
    \  local i = 1\n    local result = \"\"\n    while i <= #s do\n        if s[i]\
    \ ~= nil then\n            result = result .. string.char(toupper(s[i])) .. string.char(tolower(s[i]))\n\
    \        else\n            result = result .. string.char(s[i])\n        end\n\
    \        i = i + 1\n    end\n    return result\nend\n", "    local i, j, k, l,\
    \ r, c\n    for i = 1, #s, 2 do\n        if s[i] ~= s[i+1] then\n            if\
    \ s[i] ~= '#' then\n                s = string.gsub(s, s[i], string.upper(s[i]))\n\
    \            else\n                s = string.gsub(s, s[i], string.lower(s[i]))\n\
    \            end\n        end\n    end\n    return s\nend\n", "    local t = {}\n\
    \    for i = 1,#s,2 do\n        if s[i] ~= s[i+1] then\n            t[s[i]] =\
    \ s[i+1]\n        end\n    end\n    if #t == 0 then\n        return s\n    end\n\
    \    return string.gsub(s, t)\nend\n*/", "    if s:match(\"^[a-zA-Z]*$\") then\n\
    \        return string.gsub(s, \"([a-z])([A-Z])\", \"$2$1\")\n    else\n     \
    \   return string.gsub(s, \"([a-z])([A-Z])\", \"$1$2\")\n    end\nend\n*/", " \
    \   local i, j, k, l\n    i = 1\n    j = 1\n    k = 1\n    l = 1\n    while i\
    \ <= #s do\n        if s[i] ~= nil then\n            if s[i] >= 'a' and s[i] <=\
    \ 'z' then\n                s[i] = s[i] - 32\n            else\n             \
    \   s[i] = s[i] + 32\n            end\n        else\n            s[i] = s[i]\n\
    \        end\n        i = i + 1\n    end\n    while j <= #s do\n        if s[j]\
    \ ~= nil then\n            if s[j] >= 'A' and s[j] <= 'Z' then\n             \
    \   s[j] = s[j] + 32\n            else\n                s[j] = s[j] - 32\n   \
    \         end\n        else\n            s[j] = s[j]\n        end\n        j =\
    \ j + 1\n    end\n    while k <= #s do\n        if s[k] ~= nil then\n        \
    \    if s[k] >= 'a' and s[k] <= 'z' then\n                s[k] = s[k] + 32\n \
    \           else\n                s[k] = s[k] - 32\n            end\n        else\n\
    \            s[k] = s[k]\n        end\n        k = k + 1\n    end\n    while l\
    \ <= #s do\n        if s[l] ~= nil then\n            if s[l] >= 'A' and s[l] <=\
    \ 'Z' then\n                s[l] = s[l] - 32\n            else\n             \
    \   s[l] = s[l] + 32\n            end\n        else\n            s[l] = s[l]\n\
    \        end\n        l = l + 1\n    end\n    return s\nend\n", "    if s:match(\"\
    ^[a-zA-Z]*$\") then\n        return string.gsub(s, \"([a-z])([A-Z])\", \"$2$1\"\
    )\n    else\n        return string.gsub(s, \"([a-z])([A-Z])\", \"$2$1\")\n   \
    \ end\nend\n*/", "    local t = {}\n    for i=1,#s,2 do\n        if s[i] ~= s[i+1]\
    \ then\n            t[s[i]] = s[i+1]\n        end\n    end\n    return t.values()\n\
    end\n*/", "    local t = {}\n    for i = 1, #s, 2 do\n        if s[i] ~= s[i+1]\
    \ then\n            t[s[i]] = s[i+1]\n        end\n    end\n    if #t == 0 then\n\
    \        return s\n    end\n    for i = 1, #t, 2 do\n        s[i] = t[i]\n   \
    \ end\n    return s\nend\n", "    if s:match(\"^[a-zA-Z]*$\") then\n        return\
    \ string.gsub(s, \"([a-z])([A-Z])\", \"$2$1\")\n    else\n        return string.gsub(s,\
    \ \"([a-z])([A-Z])\", \"$2$1\")\n    end\nend\n*/", "    if s == \"\" then return\
    \ \"\" end\n    local i = 1\n    local result = \"\"\n    while i <= #s do\n \
    \       if s[i] ~= nil then\n            if s[i] ~= \" \" then\n             \
    \   result = result .. string.upper(s[i])\n            else\n                result\
    \ = result .. string.lower(s[i])\n            end\n        else\n            result\
    \ = result .. s[i]\n        end\n        i = i + 1\n    end\n    return result\n\
    end\n", "    local t = {}\n    for i = 1, #s, 2 do\n        if s[i] ~= s[i+1]\
    \ then\n            t[s[i]] = s[i+1]\n        end\n    end\n    return t[s[1]]\n\
    end\n*/", "    if s:match(\"^[a-zA-Z]*$\") then\n        return string.gsub(s,\
    \ \"([a-z])([A-Z])\", \"$2$1\")\n    else\n        return string.gsub(s, \"([a-z])([A-Z])\"\
    , \"$2$1\")\n    end\nend\n*/", "    local i, j, k, c, l, r\n    l = 0\n    r\
    \ = len(s) - 1\n    for i = 1, r do\n        if s[i] ~= nil then\n           \
    \ c = s[i]\n            if c ~= \"A\" and c ~= \"a\" and c ~= \"B\" and c ~= \"\
    b\" and c ~= \"C\" and c ~= \"c\" and c ~= \"D\" and c ~= \"d\" and c ~= \"E\"\
    \ and c ~= \"e\" and c ~= \"F\" and c ~= \"f\" and c ~= \"G\" and c ~= \"g\" and\
    \ c ~= \"H\" and c ~= \"h\" and c ~= \"I\" and c ~= \"i\" and c ~= \"J\" and c\
    \ ~= \"j\" and c ~= \"K\" and c ~= \"k\" and c ~= \"L\" and c ~= \"l\" and c ~=\
    \ \"M\" and c ~= \"m\" and c ~= \"N\" and c ~= \"n\" and c ~= \"O\" and c ~= \"\
    o\" and c ~= \"P\" and c ~= \"p\" and c ~= \"Q\" and c ~= \"q\" and c ~= \"R\"\
    \ and c ~= \"r\" and c ~= \"S\" and c ~= \"s\" and c ~= \"T\" and c ~= \"t\" and\
    \ c ~= \"U\" and c ~= \"u\" and c ~= \"V\" and c ~= \"v\" and c ~= \"W\" and c\
    \ ~= \"w\" and c ~= \"X\" and c ~= \"x\" and c ~= \"Y\" and c ~= \"y\" and c ~=\
    \ \"Z\" and c ~= \"z\" then\n                k = i\n                for j = i\
    \ + 1, r do\n                    if s[j] ~= nil and s[j] ~= c then\n         \
    \               k = j\n                        break\n                if k ~=\
    \ i then\n                    s[k] = c\n                    s[i] = c\n       \
    \             s[k + 1] = c\n                    s[i + 1] = c\n                ",
  "    if s == \"\" then return \"\" end\n    local i = 1\n    local j = 1\n    local\
    \ result = \"\"\n    while i <= #s do\n        if s[i] ~= \"\" then\n        \
    \    if s[i] >= \"a\" and s[i] <= \"z\" then\n                result = result\
    \ .. string.upper(s[i])\n            else\n                result = result ..\
    \ string.lower(s[i])\n            end\n        else\n            result = result\
    \ .. s[i]\n        end\n        i = i + 1\n    end\n    return result\nend\n",
  "    if s == \"\" then return \"\" end\n    local i = 1\n    local j = 1\n    local\
    \ result = \"\"\n    while i <= #s do\n        if s[i] ~= nil then\n         \
    \   if s[i] ~= \" \" then\n                result = result .. string.upper(s[i])\n\
    \            else\n                result = result .. s[i]\n            end\n\
    \        else\n            result = result .. s[i]\n        end\n        i = i\
    \ + 1\n    end\n    return result\nend\n", "    if s == \"\" then return \"\"\
    \ end\n    local i = 1\n    local res = \"\"\n    while i <= #s do\n        if\
    \ s[i] ~= nil then\n            if s[i] ~= \" \" then\n                res = res\
    \ .. string.char(toupper(s[i])) .. \" \"\n            else\n                res\
    \ = res .. \" \" .. string.char(toupper(s[i]))\n            end\n        else\n\
    \            res = res .. s[i]\n        end\n        i = i + 1\n    end\n    return\
    \ res\nend\n", "    if s == \"\" then return \"\" end\n    local i = 1\n    local\
    \ result = \"\"\n    while i <= #s do\n        if s[i] ~= nil then\n         \
    \   if s[i] ~= \" \" then\n                result = result .. string.upper(s[i])\n\
    \            else\n                result = result .. s[i]\n            end\n\
    \        else\n            result = result .. s[i]\n        end\n        i = i\
    \ + 1\n    end\n    return result\nend\n", "    local t = {}\n    for i = 1, #s,\
    \ 2 do\n        if s[i] ~= s[i+1] then\n            t[s[i]] = s[i+1]\n       \
    \ end\n    end\n    if #t == 0 then\n        return s\n    end\n    for i = 1,\
    \ #t, 2 do\n        s[i] = t[i]\n    end\n    return s\nend\n*/", "    local i,\
    \ j, k\n    for i = 1, #s, 2 do\n        if s[i] ~= s[i+1] then\n            if\
    \ s[i] ~= \" \" then\n                s = string.gsub(s, s[i], string.upper(s[i]))\n\
    \            else\n                s = string.gsub(s, s[i], string.lower(s[i]))\n\
    \            end\n        end\n    end\n    return s\nend\nprint(solve(\"1234\"\
    ))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))\nprint(solve(\"\"))\nprint(solve(\"\
    #\"))\nprint(solve(\"#a\"))\nprint(solve(\"#a#\"))\nprint(solve(\"#a#b\"))\nprint(solve(\"\
    #a#b#\"))\nprint(solve(\"#a#b#c\"))\nprint(solve(\"#a#b#c#\"))\nprint(solve(\"\
    #a#b#c#d\"))\nprint(solve(\"#a#b#c#d#\"))\nprint(solve(\"#a#b#c#d#e\"))\nprint(solve(\"\
    #a#b#c#d#e#\"))\nprint(solve(\"#a#b#c#d#e#f\"))\nprint(solve(\"#a#b#c#d#e#f#\"\
    ))\nprint(solve(\"#a#b#c#d#e#f#g\"))\nprint(solve(\"#a#b#c#d#e#f#g#\"))\nprint(solve(\"\
    #a#b#c#d#e#f#g#h\"))\nprint(solve(\"#a#b#c#d#e#f#g#h#\"))\nprint(solve(\"#a#b#c#d#e#f#g#h#i\"\
    ))\nprint(solve(\"#a#b#c#d#e#f#g#h#i#\"))\nprint(solve(\"#a#b#c#d#e#f#g#h#i#j\"\
    ))\nprint(solve(\"#a#b#c#d", "    if s == \"\" then return \"\" end\n    local\
    \ i, j, c\n    for i = 1, #s, 2 do\n        if s[i] ~= s[i+1] then\n         \
    \   c = s[i]\n            s = string.gsub(s, s[i], string.upper(s[i]))\n     \
    \       s = string.gsub(s, s[i], string.lower(s[i]))\n            s = string.gsub(s,\
    \ s[i], c)\n        end\n    end\n    return s\nend\n", "    local t = {}\n  \
    \  for i=1,#s do\n        if s[i] ~= nil then\n            t[s[i]] = t[s[i]] or\
    \ \"\"\n            t[s[i]] = t[s[i]] .. s[i]\n        else\n            t[s[i]]\
    \ = s[i]\n        end\n    end\n    return t[1] .. \" \" .. t[2] .. \" \" .. t[3]\
    \ .. \" \" .. t[4] .. \" \" .. t[5] .. \" \" .. t[6] .. \" \" .. t[7] .. \" \"\
    \ .. t[8] .. \" \" .. t[9] .. \" \" .. t[10] .. \" \" .. t[11] .. \" \" .. t[12]\
    \ .. \" \" .. t[13] .. \" \" .. t[14] .. \" \" .. t[15] .. \" \" .. t[16] .. \"\
    \ \" .. t[17] .. \" \" .. t[18] .. \" \" .. t[19] .. \" \" .. t[20] .. \" \" ..\
    \ t[21] .. \" \" .. t[22] .. \" \" .. t[23] .. \" \" .. t[24] .. \" \" .. t[25]\
    \ .. \" \" .. t[26] .. \" \" .. t[27] .. \" \" .. t[28] .. \" \" .. t[29] .. \"\
    \ \" .. t[30] .. \" \" .. t[31] .. \" \" .. t[32] .. \" \" .. t[33] .. \" \" ..\
    \ t[34] .. \" \" .. t[35] .. \" \" .. t[36] .. \" \" .. t[37] .. \" \" .. t[38]\
    \ .. \" \" .. t[39] .. \" \" .. t[40] .. \" \" .. t[41] .. \" \" .. t[42] .. \"\
    \ \" .. t[43] .. \" \" .. t[44] .. \" \" .. t[45] .. \" \" .. t[46] .. \" \" ..\
    \ t[47] .. \" \" .. t[48] .. \" \" .. t[49] .. \" \" .. t[50] .. \" \" .. t[51]\
    \ .. \" \" .. t[52] .. \" \" .. t[53] .. \" \" ..", "    local i, j, k\n    for\
    \ i = 1, #s, 2 do\n        if s[i] ~= s[i+1] then\n            if s[i] ~= '#'\
    \ then\n                s = string.gsub(s, s[i], string.upper(s[i]))\n       \
    \     else\n                s = string.gsub(s, s[i], string.lower(s[i]))\n   \
    \         end\n        end\n    end\n    return s\nend\nprint(solve(\"1234\"))\n\
    print(solve(\"ab\"))\nprint(solve(\"#a@C\"))\n", "    local t = {}\n    for i\
    \ = 1, #s, 2 do\n        if s[i] ~= s[i+1] then\n            t[s[i]] = s[i+1]\n\
    \        end\n    end\n    if #t == 0 then\n        return s\n    end\n    for\
    \ k, v in pairs(t) do\n        s = string.gsub(s, k, v)\n    end\n    return s\n\
    end", "    local i, j, k\n    for i = 1, #s, 2 do\n        if s[i] ~= s[i+1] then\n\
    \            if s[i] ~= '#' then\n                s[i+1] = string.upper(s[i+1])\n\
    \            else\n                s[i+1] = string.lower(s[i+1])\n           \
    \ end\n        end\n    end\n    return s\nend\nprint(solve(\"1234\"))\nprint(solve(\"\
    ab\"))\nprint(solve(\"#a@C\"))\n", "    if s == \"\" then return \"\" end\n  \
    \  local i = 1\n    local j = 1\n    local result = \"\"\n    while i <= #s do\n\
    \        if s[i] ~= nil then\n            if s[i] ~= \" \" then\n            \
    \    result = result .. string.upper(s[i])\n            else\n               \
    \ result = result .. s[i]\n            end\n        else\n            result =\
    \ result .. s[i]\n        end\n        i = i + 1\n    end\n    return result\n\
    end\n", "    local i, j, k\n    for i = 1, #s, 2 do\n        if s[i] ~= s[i+1]\
    \ then\n            k = s[i+1]\n            s = s[1..i-1]..k..s[i+2..#s]\n   \
    \     end\n    end\n    return s\nend\n*/", "    if s:match(\"^[a-zA-Z]*$\") then\n\
    \        return string.gsub(s, \"([a-z])([A-Z])\", \"$2$1\")\n    else\n     \
    \   return string.gsub(s, \"([a-z])([A-Z])\", \"$2$1\")\n    end\nend\n*/", " \
    \   if s == \"\" then return \"\" end\n    local i = 1\n    local res = \"\"\n\
    \    while i <= #s do\n        if s[i] ~= nil then\n            if s[i] >= \"\
    a\" and s[i] <= \"z\" then\n                res = res .. string.upper(s[i])\n\
    \            elseif s[i] >= \"A\" and s[i] <= \"Z\" then\n                res\
    \ = res .. string.lower(s[i])\n            else\n                res = res ..\
    \ s[i]\n            end\n        else\n            res = res .. s[i]\n       \
    \ end\n        i = i + 1\n    end\n    return res\nend\n", "    local t = {}\n\
    \    for i=1,#s do\n        if s[i] ~= nil then\n            t[s[i]] = s[i]\n\
    \        end\n    end\n    if #t == 0 then\n        return s\n    end\n    for\
    \ k,v in pairs(t) do\n        s = string.gsub(s,k,v)\n    end\n    return s\n\
    end\n", "    if s == \"\" then return s\n    local i = 1\n    local j = 1\n  \
    \  local result = \"\"\n    while i <= #s do\n        if s[i] ~= nil then\n  \
    \          if s[i] ~= \" \" then\n                result = result .. string.upper(s[i])\n\
    \            else\n                result = result .. s[i]\n            end\n\
    \        else\n            result = result .. s[i]\n        end\n        i = i\
    \ + 1\n    end\n    return result\nend\n", "    local t = {}\n    for i = 1, #s,\
    \ 2 do\n        if s[i] ~= s[i+1] then\n            t[s[i]] = s[i+1]\n       \
    \ end\n    end\n    if #t == 0 then\n        return s\n    end\n    for k, v in\
    \ pairs(t) do\n        s = string.gsub(s, k, v)\n    end\n    return s\nend\n",
  "    local t = {}\n    for i=1,#s,2 do\n        if s[i] ~= s[i+1] then\n       \
    \     t[s[i]] = s[i+1]\n        end\n    end\n    if #t == 0 then\n        return\
    \ s\n    end\n    return t.values()\nend\n*/", "    if s:match(\"^[a-zA-Z]*$\"\
    ) then\n        return string.gsub(s, \"([a-z])([A-Z])\", \"$2$1\")\n    else\n\
    \        return string.gsub(s, \"([a-z])([A-Z])\", \"$2$1\")\n    end\nend", " \
    \   if s == \"\" then return s end\n    local i = 1\n    local j = 1\n    local\
    \ result = \"\"\n    while i <= #s do\n        if s[i] ~= nil then\n         \
    \   if s[i] >= \"a\" and s[i] <= \"z\" then\n                result = result ..\
    \ string.upper(s[i])\n            else\n                result = result .. string.lower(s[i])\n\
    \            end\n        else\n            result = result .. s[i]\n        end\n\
    \        i = i + 1\n    end\n    return result\nend\n", "    if s == \"\" then\
    \ return \"\" end\n    local i = 1\n    local j = 1\n    local result = \"\"\n\
    \    while i <= #s do\n        if s[i] ~= nil then\n            if s[i] ~= \"\
    \ \" then\n                result = result .. string.upper(s[i])\n           \
    \ else\n                result = result .. s[i]\n            end\n        else\n\
    \            result = result .. s[i]\n        end\n        i = i + 1\n    end\n\
    \    return result\nend\n\"\"\"", "    if s == \"\" then return \"\" end\n   \
    \ local i = 1\n    local j = 1\n    local result = \"\"\n    while i <= #s do\n\
    \        if s[i] ~= nil then\n            if s[i] ~= \" \" then\n            \
    \    result = result .. string.upper(s[i])\n            else\n               \
    \ result = result .. s[i]\n            end\n        else\n            result =\
    \ result .. s[i]\n        end\n        i = i + 1\n    end\n    return result\n\
    end\n", "    if s:match('[a-zA-Z]') then\n        return string.gsub(s, '[a-z]',\
    \ function(c) return string.upper(c) end)\n    else\n        return string.gsub(s,\
    \ '[A-Z]', function(c) return string.lower(c) end)\n    end\nend", "    local\
    \ t = {}\n    for i=1,#s,2 do\n        if s[i] ~= s[i+1] then\n            t[s[i]]\
    \ = s[i+1]\n        end\n    end\n    if #t == 0 then\n        return s\n    end\n\
    \    for i=1,#t,2 do\n        s[i] = t[i]\n    end\n    return s\nend\n", "  \
    \  if s == \"\" then return \"\" end\n    local i = 1\n    local result = \"\"\
    \n    while i <= #s do\n        if s[i] ~= nil then\n            if s[i] >= 'a'\
    \ and s[i] <= 'z' then\n                result = result .. string.upper(s[i])\n\
    \            elseif s[i] >= 'A' and s[i] <= 'Z' then\n                result =\
    \ result .. string.lower(s[i])\n            else\n                result = result\
    \ .. s[i]\n            end\n        else\n            result = result .. s[i]\n\
    \        end\n        i = i + 1\n    end\n    return result\nend\n", "    if s\
    \ == \"\" then return \"\" end\n    local i, c, r = 1, \"\", \"\"\n    while i\
    \ <= #s do\n        if s[i] ~= nil then\n            c = s[i]\n            if\
    \ c ~= \"A\" and c ~= \"a\" and c ~= \"B\" and c ~= \"b\" and c ~= \"C\" and c\
    \ ~= \"c\" and c ~= \"D\" and c ~= \"d\" and c ~= \"E\" and c ~= \"e\" and c ~=\
    \ \"F\" and c ~= \"f\" and c ~= \"G\" and c ~= \"g\" and c ~= \"H\" and c ~= \"\
    h\" and c ~= \"I\" and c ~= \"i\" and c ~= \"J\" and c ~= \"j\" and c ~= \"K\"\
    \ and c ~= \"k\" and c ~= \"L\" and c ~= \"l\" and c ~= \"M\" and c ~= \"m\" and\
    \ c ~= \"N\" and c ~= \"n\" and c ~= \"O\" and c ~= \"o\" and c ~= \"P\" and c\
    \ ~= \"p\" and c ~= \"Q\" and c ~= \"q\" and c ~= \"R\" and c ~= \"r\" and c ~=\
    \ \"S\" and c ~= \"s\" and c ~= \"T\" and c ~= \"t\" and c ~= \"U\" and c ~= \"\
    u\" and c ~= \"V\" and c ~= \"v\" and c ~= \"W\" and c ~= \"w\" and c ~= \"X\"\
    \ and c ~= \"x\" and c ~= \"Y\" and c ~= \"y\" and c ~= \"Z\" and c ~= \"z\" then\n\
    \                r = string.gsub(r, c, string.upper(c))\n            else\n  \
    \              r = string.gsub(r, c, string.lower(c))\n            end\n     \
    \   else\n            r = string.gsub(r, c, c)\n        end\n        i = i + 1\n\
    \    end\n    return r\nend\n", "    if s:match(\"^[a-zA-Z]*$\") then\n      \
    \  return string.gsub(s, \"([a-z])([A-Z])\", \"$2$1\")\n    else\n        return\
    \ string.gsub(s, \"([a-z])([A-Z])\", \"$2$1\")\n    end\nend\n*/", "    if s:match(\"\
    [a-zA-Z]\") then\n        return string.gsub(s, \"[a-z]\", \"A\") .. string.gsub(s,\
    \ \"[A-Z]\", \"a\")\n    else\n        return string.gsub(s, \"[a-z]\", \"A\"\
    ) .. string.gsub(s, \"[A-Z]\", \"a\")\n    end\nend\n*/", "    if s == \"\" then\
    \ return \"\" end\n    local i = 1\n    local j = 1\n    local result = \"\"\n\
    \    while i <= #s do\n        if s[i] ~= nil then\n            if s[i] ~= \"\
    \ \" then\n                result = result .. string.upper(s[i])\n           \
    \ else\n                result = result .. s[i]\n            end\n        else\n\
    \            result = result .. s[i]\n        end\n        i = i + 1\n    end\n\
    \    return result\nend", "    if s:match(\"^[a-zA-Z]*$\") then\n        return\
    \ string.gsub(s, \"([a-z])([A-Z])\", \"$2$1\")\n    else\n        return string.gsub(s,\
    \ \"([a-z])([A-Z])\", \"$2$1\")\n    end\nend\n*/", "    if s == \"\" then return\
    \ s\n    local i = 1\n    local j = 1\n    local c = \"\"\n    while i <= #s do\n\
    \        if s[i] ~= nil then\n            c = c .. string.upper(s[i])\n      \
    \  else\n            c = c .. string.lower(s[i])\n        end\n        i = i +\
    \ 1\n    end\n    return c\nend", "    local t = {}\n    for i=1,#s do\n     \
    \   if s[i] ~= nil then\n            t[s[i]] = s[i]\n        end\n    end\n  \
    \  if #t == 0 then\n        return s\n    end\n    for k,v in pairs(t) do\n  \
    \      s = string.gsub(s,k,v)\n    end\n    return s\nend\n", "    local i,j,k\n\
    \    for i=1,#s,2 do\n        if s[i] ~= s[i+1] then\n            if s[i] ~= '#'\
    \ then\n                s[i+1] = string.upper(s[i+1])\n            else\n    \
    \            s[i+1] = string.lower(s[i+1])\n            end\n        end\n   \
    \ end\n    return s\nend\n*/", "    if s == \"\" then return \"\" end\n    local\
    \ i, j = 1, 1\n    local result = \"\"\n    while i <= #s do\n        if s[i]\
    \ ~= nil then\n            if s[i] ~= \" \" then\n                result = result\
    \ .. string.upper(s[i])\n            else\n                result = result ..\
    \ s[i]\n            end\n        else\n            result = result .. s[i]\n \
    \       end\n        i = i + 1\n    end\n    return result\nend\n", "    if s\
    \ == \"\" then return \"\" end\n    local i = 1\n    local j = 1\n    local result\
    \ = \"\"\n    while i <= #s do\n        if s[i] ~= nil then\n            if s[i]\
    \ ~= \" \" then\n                result = result .. string.upper(s[i])\n     \
    \       else\n                result = result .. s[i]\n            end\n     \
    \   else\n            result = result .. s[i]\n        end\n        i = i + 1\n\
    \    end\n    return result\nend\n", "    if s == \"\" then return \"\" end\n\
    \    local i = 1\n    local res = \"\"\n    while i <= #s do\n        if s[i]\
    \ ~= nil then\n            if s[i] ~= \" \" then\n                res = res ..\
    \ string.upper(s[i])\n            else\n                res = res .. string.lower(s[i])\n\
    \            end\n        else\n            res = res .. s[i]\n        end\n \
    \       i = i + 1\n    end\n    return res\nend\n", "    if s:match(\"[a-zA-Z]\"\
    ) then\n        return string.gsub(s, \"[a-z]\", \"A\") .. string.gsub(s, \"[A-Z]\"\
    , \"a\")\n    else\n        return string.gsub(s, \"[a-z]\", \"A\") .. string.gsub(s,\
    \ \"[A-Z]\", \"a\")\n    end\nend\n*/", "    if s == \"\" then return \"\" end\n\
    \    local i = 1\n    local j = 1\n    local result = \"\"\n    while i <= #s\
    \ do\n        if s[i] ~= nil then\n            if s[i] ~= \" \" then\n       \
    \         result = result .. string.upper(s[i])\n            else\n          \
    \      result = result .. s[i]\n            end\n        else\n            result\
    \ = result .. s[i]\n        end\n        i = i + 1\n    end\n    return result\n\
    end\n", "    local t = {}\n    for i = 1, #s, 2 do\n        if s[i] ~= s[i+1]\
    \ then\n            t[s[i]] = s[i+1]\n        end\n    end\n    if #t == 0 then\n\
    \        return s\n    end\n    for k, v in pairs(t) do\n        s = s:gsub(k,\
    \ v)\n    end\n    return s\nend\n", "    if s == \"\" then return \"\" end\n\
    \    local i = 1\n    local j = 1\n    local result = \"\"\n    while i <= #s\
    \ do\n        if s[i] ~= nil then\n            if s[i] >= \"a\" and s[i] <= \"\
    z\" then\n                result = result .. string.upper(s[i])\n            else\n\
    \                result = result .. string.lower(s[i])\n            end\n    \
    \    else\n            result = result .. s[i]\n        end\n        i = i + 1\n\
    \    end\n    return result\nend\n", "    if s == \"\" then return s\n    local\
    \ i = 1\n    local j = 1\n    local c = \"\"\n    while i <= #s do\n        if\
    \ s[i] ~= nil then\n            if s[i] ~= \" \" then\n                c = c ..\
    \ string.upper(s[i])\n            else\n                c = c .. s[i]\n      \
    \      end\n        else\n            c = c .. s[i]\n        end\n        i =\
    \ i + 1\n    end\n    return c\nend\n*/", "    if s:match(\"^[a-zA-Z]*$\") then\n\
    \        return string.gsub(s, \"([a-z])([A-Z])\", \"$2$1\")\n    else\n     \
    \   return string.gsub(s, \"([a-z])([A-Z])\", \"$2$1\")\n    end\nend\n*/", " \
    \   if s == \"\" then return s end\n    local i = 1\n    local j = 1\n    local\
    \ result = \"\"\n    while i <= #s do\n        if s[i] ~= nil then\n         \
    \   if s[i] ~= \" \" then\n                result = result .. string.upper(s[i])\n\
    \            else\n                result = result .. s[i]\n            end\n\
    \        else\n            result = result .. s[i]\n        end\n        i = i\
    \ + 1\n    end\n    return result\nend\n", "    local i, j\n    for i = 1, #s,\
    \ 2 do\n        if s[i] ~= s[i+1] then\n            j = i\n            break\n\
    \        end\n    end\n    if j == #s then\n        return s\n    else\n     \
    \   return string.gsub(s, \"%..\", \"%\" .. string.upper(s[j]))\n    end\nend\n\
    */", "    if s:match(\"^[a-zA-Z]*$\") then\n        return string.gsub(s, \"([a-z])([A-Z])\"\
    , \"$2$1\")\n    else\n        return string.gsub(s, \"([a-z])([A-Z])\", \"$2$1\"\
    )\n    end\nend\n*/", "    local i, j, k, l\n    i = 1\n    j = 1\n    k = 1\n\
    \    l = 1\n    while i <= #s do\n        if s[i] ~= nil then\n            if\
    \ s[i] ~= \" \" then\n                if s[i] ~= \"a\" then\n                \
    \    s[j] = string.upper(s[i])\n                else\n                    s[j]\
    \ = string.lower(s[i])\n                end\n                j = j + 1\n     \
    \       else\n                s[j] = s[i]\n                j = j + 1\n       \
    \     end\n        else\n            s[j] = s[i]\n            j = j + 1\n    \
    \    end\n        i = i + 1\n    end\n    return s[1] .. \" \" .. s[j] .. \" \"\
    \ .. s[k] .. \" \" .. s[l]\nend\n", "    local t = {}\n    for i = 1, #s, 2 do\n\
    \        if s[i] ~= s[i+1] then\n            t[s[i]] = s[i+1]\n        end\n \
    \   end\n    if #t == 0 then\n        return s\n    end\n    for k, v in pairs(t)\
    \ do\n        s = string.gsub(s, k, v)\n    end\n    return s\nend\n", "    local\
    \ i, j, k\n    for i = 1, #s, 2 do\n        if s[i] ~= s[i+1] then\n         \
    \   s = s[i+1] .. s[i] .. s[i+1] .. s[i+2] .. s[i+2] .. s[i+2] .. s[i+2] .. s[i+2]\
    \ .. s[i+2] .. s[i+2] .. s[i+2] .. s[i+2] .. s[i+2] .. s[i+2] .. s[i+2] .. s[i+2]\
    \ .. s[i+2] .. s[i+2] .. s[i+2] .. s[i+2] .. s[i+2] .. s[i+2] .. s[i+2] .. s[i+2]\
    \ .. s[i+2] .. s[i+2] .. s[i+2] .. s[i+2] .. s[i+2] .. s[i+2] .. s[i+2] .. s[i+2]\
    \ .. s[i+2] .. s[i+2] .. s[i+2] .. s[i+2] .. s[i+2] .. s[i+2] .. s[i+2] .. s[i+2]\
    \ .. s[i+2] .. s[i+2] .. s[i+2] .. s[i+2] .. s[i+2] .. s[i+2] .. s[i+2] .. s[i+2]\
    \ .. s[i+2] .. s[i+2] .. s[i+2] .. s[i+2] .. s[i+2] .. s[i+2] .. s[i+2] .. s[i+2]\
    \ .. s[i+2] .. s[i+2] .. s[i+2] .. s[i+2] .. s[i+2] .. s[i+2] .. s[i+2] .. s[i+2]\
    \ .. s[i+2] .. s[i+2] .. s[i+2] .. s[i+2]", "    if s == \"\" then return \"\"\
    \ end\n    local i = 1\n    local result = \"\"\n    while i <= #s do\n      \
    \  if s[i] ~= nil then\n            if s[i] >= \"a\" and s[i] <= \"z\" then\n\
    \                result = string.gsub(result, s[i], string.upper(s[i]))\n    \
    \        else\n                result = string.gsub(result, s[i], string.lower(s[i]))\n\
    \            end\n        else\n            result = string.gsub(result, s[i],\
    \ s[i])\n        end\n        i = i + 1\n    end\n    return result\nend\n", " \
    \   if s == \"\" then return \"\" end\n    local i = 1\n    local j = 1\n    local\
    \ result = \"\"\n    while i <= #s do\n        if s[i] ~= nil then\n         \
    \   if s[i] ~= \" \" then\n                result = result .. string.upper(s[i])\n\
    \            else\n                result = result .. s[i]\n            end\n\
    \        else\n            result = result .. s[i]\n        end\n        i = i\
    \ + 1\n    end\n    return result\nend\n", "    if s:match(\"[a-zA-Z]\") then\n\
    \        return string.gsub(s, \"[a-z]\", \"A\") .. string.gsub(s, \"[A-Z]\",\
    \ \"a\")\n    else\n        return string.gsub(s, \"[a-z]\", \"A\") .. string.gsub(s,\
    \ \"[A-Z]\", \"a\")\n    end\nend\n*/", "    if s == \"\" then return \"\" end\n\
    \    local i = 1\n    local j = 1\n    local result = \"\"\n    while i <= #s\
    \ do\n        if s[i] ~= nil then\n            if s[i] ~= \" \" then\n       \
    \         result = result .. string.upper(s[i])\n            else\n          \
    \      result = result .. s[i]\n            end\n        else\n            result\
    \ = result .. s[i]\n        end\n        i = i + 1\n    end\n    return result\n\
    end\n", "    if s:match(\"^[a-zA-Z]*$\") then\n        return string.gsub(s, \"\
    ([a-z])([A-Z])\", \"$2$1\")\n    else\n        return string.gsub(s, \"([a-z])([A-Z])\"\
    , \"$1$2\")\n    end\nend\n*/", "    if s == \"\" then return \"\" end\n    local\
    \ i, j = 1, 1\n    local res = \"\"\n    while i <= #s do\n        if s[i] ~=\
    \ nil then\n            if s[i] >= 'a' and s[i] <= 'z' then\n                res\
    \ = res .. string.upper(s[i])\n            else\n                res = res ..\
    \ string.lower(s[i])\n            end\n        else\n            res = res ..\
    \ s[i]\n        end\n        i = i + 1\n    end\n    return res\nend\n", "   \
    \ if s == \"\" then return \"\" end\n    local i = 1\n    local j = 1\n    local\
    \ result = \"\"\n    while i <= #s do\n        if s[i] ~= nil then\n         \
    \   result = result .. string.upper(s[i])\n        else\n            result =\
    \ result .. s[i]\n        end\n        i = i + 1\n    end\n    return result\n\
    end\n", "    local t = {}\n    for i=1,#s,2 do\n        if s[i] ~= s[i+1] then\n\
    \            t[s[i]] = s[i+1]\n        end\n    end\n    if #t == 0 then\n   \
    \     return s\n    end\n    for i=1,#t,2 do\n        s[i] = t[i]\n    end\n \
    \   return s\nend\n*/", "    local t = {}\n    for i=1,#s,2 do\n        if s[i]\
    \ ~= s[i+1] then\n            t[s[i]] = s[i+1]\n        end\n    end\n    if #t\
    \ == 0 then\n        return s\n    end\n    for i=1,#t,2 do\n        s[i] = t[i]\n\
    \    end\n    return s\nend\n", "    local i, j\n    for i = 1, #s, 2 do\n   \
    \     if s[i] ~= s[i+1] then\n            s = string.gsub(s, s[i], string.upper(s[i]))\n\
    \            s = string.gsub(s, s[i], string.lower(s[i]))\n        end\n    end\n\
    \    return s\nend\n", "    local t = {}\n    for i=1,#s,2 do\n        if s[i]\
    \ ~= s[i+1] then\n            t[s[i]] = s[i+1]\n        end\n    end\n    if #t\
    \ == 0 then\n        return s\n    end\n    for i=1,#t,2 do\n        s[i] = t[i]\n\
    \    end\n    return s\nend", "    if s:match(\"[a-zA-Z]\") then\n        return\
    \ string.gsub(s, \"[a-zA-Z]\", function(c) return string.upper(c) end)\n    else\n\
    \        return string.gsub(s, \"[a-zA-Z]\", function(c) return string.lower(c)\
    \ end)\n    end\nend\n\"\"\"", "    if s == \"\" then return \"\" end\n    local\
    \ i, j = 1, 1\n    local result = \"\"\n    while i <= #s do\n        if s[i]\
    \ ~= nil then\n            if s[i] ~= \" \" then\n                result = result\
    \ .. string.upper(s[i])\n            else\n                result = result ..\
    \ s[i]\n            end\n        else\n            result = result .. s[i]\n \
    \       end\n        i = i + 1\n    end\n    return result\nend\n", "    local\
    \ i, j, k, l\n    for i = 1, #s, 2 do\n        if s[i] ~= s[i+1] then\n      \
    \      s = string.gsub(s, s[i], string.upper(s[i]))\n            s = string.gsub(s,\
    \ s[i], string.lower(s[i]))\n        end\n    end\n    return s\nend\nprint(solve(\"\
    1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))\n", "    local t = {}\n\
    \    for i = 1, #s, 2 do\n        if s[i] ~= s[i+1] then\n            t[s[i]]\
    \ = s[i+1]\n        end\n    end\n    if #t == 0 then\n        return s\n    end\n\
    \    for i = 1, #t, 2 do\n        s[i] = t[i]\n    end\n    return s\nend\n*/",
  "    if s == \"\" then return \"\" end\n    local i, j = 1, 1\n    local result\
    \ = \"\"\n    while i <= #s do\n        if s[i] ~= nil then\n            if s[i]\
    \ ~= \" \" then\n                result = result .. string.upper(s[i])\n     \
    \       else\n                result = result .. s[i]\n            end\n     \
    \   else\n            result = result .. s[i]\n        end\n        i = i + 1\n\
    \    end\n    return result\nend\n", "    if s == \"\" then return \"\" end\n\
    \    local i = 1\n    local j = 1\n    local result = \"\"\n    while i <= #s\
    \ do\n        if s[i] ~= nil then\n            if s[i] ~= \" \" then\n       \
    \         result = result .. string.upper(s[i])\n            else\n          \
    \      result = result .. s[i]\n            end\n        else\n            result\
    \ = result .. s[i]\n        end\n        i = i + 1\n    end\n    return result\n\
    end\n", "    if s == \"\" then return s\n    local i = 1\n    local j = 1\n  \
    \  local c = \"\"\n    while i <= #s do\n        if s[i] ~= nil then\n       \
    \     c = string.char(toupper(s[i])) .. c\n        else\n            c = string.char(tolower(s[i]))\
    \ .. c\n        i = i + 1\n    end\n    return c\nend\n*/"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

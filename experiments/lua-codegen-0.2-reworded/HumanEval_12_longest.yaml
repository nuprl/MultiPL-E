name: HumanEval_12_longest
language: lua
prompt: "-- Out of table of strings, return the longest one. Return the first one\
  \ in case of multiple\n-- strings of the same length. Return None in case the input\
  \ table is empty.\n-- >>> longest([])\n-- None\n-- >>> longest(['a', 'b', 'c'])\n\
  -- 'a'\n-- >>> longest(['a', 'bb', 'ccc'])\n-- 'ccc'\nlocal function longest(strings)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = longest\n\
  \    lu.assertEquals(candidate({}), None)\n    lu.assertEquals(candidate({'x', 'y',\
  \ 'z'}), 'x')\n    lu.assertEquals(candidate({'x', 'yyy', 'zzzz', 'www', 'kkkk',\
  \ 'abc'}), 'zzzz')\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local max = nil\n    for _,s in ipairs(strings) do\n        if\
    \ max == nil or max:len() < s:len() then\n            max = s\n        end\n \
    \   end\n    return max\nend", "    local max = nil\n    for _, s in ipairs(strings)\
    \ do\n        if max == nil or max:len() < s:len() then\n            max = s\n\
    \        end\n    end\n    return max\nend", "    if not strings then return nil\
    \ end\n    local max = strings[1]\n    for _, s in ipairs(strings) do\n      \
    \  if s > max then max = s end\n    end\n    return max\nend", "    local maxlen\
    \ = 0\n    local maxstring = nil\n    for _, s in ipairs(strings) do\n       \
    \ if s:len() > maxlen then\n            maxlen = s:len()\n            maxstring\
    \ = s\n        end\n    end\n    return maxstring\nend", "    local max = nil\n\
    \    for _,s in ipairs(strings) do\n        if max == nil or s:len() > max:len()\
    \ then max = s:len() end\n    end\n    return max\nend", "    local max = nil\n\
    \    for _, s in ipairs(strings) do\n        if max == nil or max:len() < s:len()\
    \ then\n            max = s\n        end\n    end\n    return max\nend", "   \
    \ if not strings or #strings == 0 then return nil end\n    local max = strings[1]\n\
    \    for i = 2, #strings, 2 do\n        if strings[i] > max then max = strings[i]\
    \ end\n    end\n    return max\nend", "    local max = nil\n    for _, s in ipairs(strings)\
    \ do\n        if max == nil or max:len() < s:len() then\n            max = s\n\
    \        end\n    end\n    return max\nend", "    local maxlen = 0\n    local\
    \ maxstring = nil\n    for _, string in ipairs(strings) do\n        if string:len()\
    \ > maxlen then\n            maxlen = string:len()\n            maxstring = string\n\
    \        end\n    end\n    return maxstring\nend", "    local max = nil\n    for\
    \ _, s in ipairs(strings) do\n        if max == nil or max:len() < s:len() then\n\
    \            max = s\n        end\n    end\n    return max\nend", "    if #strings\
    \ == 0 then\n        return\n    end\n    local maxlen = 0\n    for _, s in ipairs(strings)\
    \ do\n        if #s > maxlen then\n            maxlen = #s\n        end\n    end\n\
    \    return strings[maxlen]\nend", "    local max = nil\n    for _,s in ipairs(strings)\
    \ do\n        if max == nil or max:len() < s:len() then max = s end\n    end\n\
    \    return max\nend", "    local max = nil\n    for _,s in ipairs(strings) do\n\
    \        if max == nil or max:len() < s:len() then\n            max = s\n    \
    \    end\n    end\n    return max\nend", "    local max = nil\n    for _, s in\
    \ ipairs(strings) do\n        if max == nil or max:len() < s:len() then max =\
    \ s end\n    end\n    return max\nend", "    local max = nil\n    for _,s in ipairs(strings)\
    \ do\n        if max == nil or max:len() < s:len() then\n            max = s\n\
    \        end\n    end\n    return max\nend", "    local max = nil\n    for _,s\
    \ in ipairs(strings) do\n        if max == nil or max:len() < s:len() then\n \
    \           max = s\n        end\n    end\n    return max\nend", "    local maxlen\
    \ = 0\n    for _, s in ipairs(strings) do\n        if s:len() > maxlen then maxlen\
    \ = s:len() end\n    end\n    if maxlen == 0 then return nil end\n    return strings[1]\n\
    end", "    local max = nil\n    for _, s in ipairs(strings) do\n        if max\
    \ == nil or max:len() < s:len() then max = s end\n    end\n    return max\nend",
  "    local maxlen = 0\n    for _, s in ipairs(strings) do\n        if s:len() >\
    \ maxlen then maxlen = s:len() end\n    end\n    return maxlen and strings[# \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                           ", "    local max = nil\n    for _,s in ipairs(strings)\
    \ do\n        if max == nil or max:len() < s:len() then\n            max = s\n\
    \        end\n    end\n    return max\nend", "    local max = nil\n    for _,\
    \ s in ipairs(strings) do\n        if max == nil or max:len() < s:len() then max\
    \ = s end\n    end\n    return max\nend", "    local max = nil\n    for _, s in\
    \ ipairs(strings) do\n        if max == nil or max:len() < s:len() then\n    \
    \        max = s\n        end\n    end\n    return max\nend", "    local max =\
    \ nil\n    for _, s in ipairs(strings) do\n        if max == nil or max:len()\
    \ < s:len() then\n            max = s\n        end\n    end\n    return max\n\
    end", "    local max = nil\n    for _,s in ipairs(strings) do\n        if max\
    \ == nil or max:len() < s:len() then max = s end\n    end\n    return max\nend",
  "    local max = nil\n    for _,s in ipairs(strings) do\n        if max == nil or\
    \ max:len() < s:len() then\n            max = s\n        end\n    end\n    return\
    \ max\nend", "    local max = nil\n    for _, s in ipairs(strings) do\n      \
    \  if max == nil or max:len() < s:len() then\n            max = s\n        end\n\
    \    end\n    return max\nend", "    local maxlen = 0\n    local maxstring = nil\n\
    \    for _,s in ipairs(strings) do\n        if s:len() > maxlen then\n       \
    \     maxlen = s:len()\n            maxstring = s\n        end\n    end\n    return\
    \ maxstring\nend", "    local max = nil\n    for _, s in ipairs(strings) do\n\
    \        if max == nil or max:len() < s:len() then max = s end\n    end\n    return\
    \ max\nend", "    local max = nil\n    for _,s in ipairs(strings) do\n       \
    \ if max == nil or max:len() < s:len() then\n            max = s\n        end\n\
    \    end\n    return max\nend", "    local max = nil\n    for _, s in ipairs(strings)\
    \ do\n        if max == nil or max:len() < s:len() then\n            max = s\n\
    \        end\n    end\n    return max\nend", "    local max = nil\n    for _,\
    \ s in ipairs(strings) do\n        if max == nil or max:len() < s:len() then max\
    \ = s end\n    end\n    return max\nend", "    local max = nil\n    for _, s in\
    \ ipairs(strings) do\n        if max == nil or max:len() < s:len() then\n    \
    \        max = s\n        end\n    end\n    return max\nend", "    local max =\
    \ nil\n    for _, s in ipairs(strings) do\n        if max == nil or max:len()\
    \ < s:len() then\n            max = s\n        end\n    end\n    return max\n\
    end", "    local max = nil\n    for _, s in ipairs(strings) do\n        if max\
    \ == nil or max:len() < s:len() then\n            max = s\n        end\n    end\n\
    \    return max\nend", "    local max = nil\n    for _, s in ipairs(strings) do\n\
    \        if max == nil or max:len() < s:len() then\n            max = s\n    \
    \    end\n    end\n    return max\nend", "    local max = nil\n    for _,s in\
    \ ipairs(strings) do\n        if max == nil or max:len() < s:len() then max =\
    \ s end\n    end\n    return max\nend", "    local maxlen = 0\n    local maxstring\
    \ = nil\n    for _, s in ipairs(strings) do\n        if s:len() > maxlen then\n\
    \            maxlen = s:len()\n            maxstring = s\n        end\n    end\n\
    \    return maxstring\nend", "    local max = nil\n    for _,s in ipairs(strings)\
    \ do\n        if max == nil or max:len() < s:len() then\n            max = s\n\
    \        end\n    end\n    return max\nend", "    local max = nil\n    for _,\
    \ s in ipairs(strings) do\n        if max == nil or max:len() < s:len() then\n\
    \            max = s\n        end\n    end\n    return max\nend", "    local max\
    \ = nil\n    for _, s in ipairs(strings) do\n        if max == nil or max:len()\
    \ < s:len() then\n            max = s\n        end\n    end\n    return max\n\
    end", "    local max = nil\n    for _, s in ipairs(strings) do\n        if max\
    \ == nil or max:len() < s:len() then\n            max = s\n        end\n    end\n\
    \    return max\nend", "    local max = nil\n    for _, s in ipairs(strings) do\n\
    \        if max == nil or max:len() < s:len() then\n            max = s\n    \
    \    end\n    end\n    return max\nend", "    local max = nil\n    for _,s in\
    \ ipairs(strings) do\n        if max == nil or max:len() < s:len() then\n    \
    \        max = s\n        end\n    end\n    return max\nend", "    local max =\
    \ nil\n    for _, s in ipairs(strings) do\n        if max == nil or max:len()\
    \ < s:len() then\n            max = s\n        end\n    end\n    return max\n\
    end", "    local max = nil\n    for _,s in ipairs(strings) do\n        if max\
    \ == nil or s:len() > max:len() then max = s end\n    end\n    return max\nend",
  "    local max = nil\n    for _,s in ipairs(strings) do\n        if max == nil or\
    \ max:len() < s:len() then\n            max = s\n        end\n    end\n    return\
    \ max\nend", "    local max = nil\n    for _, s in ipairs(strings) do\n      \
    \  if max == nil or max:len() < s:len() then\n            max = s\n        end\n\
    \    end\n    return max\nend", "    local max = nil\n    for _, s in ipairs(strings)\
    \ do\n        if max == nil or max:len() < s:len() then\n            max = s\n\
    \        end\n    end\n    return max\nend", "    local max = nil\n    for _,s\
    \ in ipairs(strings) do\n        if max == nil or max:len() < s:len() then\n \
    \           max = s\n        end\n    end\n    return max\nend", "    local max\
    \ = nil\n    for _,s in ipairs(strings) do\n        if max == nil or max:len()\
    \ < s:len() then\n            max = s\n        end\n    end\n    return max\n\
    end", "    local max = nil\n    for _, s in ipairs(strings) do\n        if max\
    \ == nil or max:len() < s:len() then\n            max = s\n        end\n    end\n\
    \    return max\nend", "    local max = nil\n    for _,s in ipairs(strings) do\n\
    \        if max == nil or max:len() < s:len() then\n            max = s\n    \
    \    end\n    end\n    return max\nend", "    local max = nil\n    for _, s in\
    \ ipairs(strings) do\n        if max == nil or max:len() < s:len() then\n    \
    \        max = s\n        end\n    end\n    return max\nend", "    local max =\
    \ nil\n    for _, s in ipairs(strings) do\n        if max == nil or max:len()\
    \ < s:len() then\n            max = s\n        end\n    end\n    return max\n\
    end", "    local maxlen = 0\n    local maxstring = nil\n    for _, string in ipairs(strings)\
    \ do\n        if string:len() > maxlen then\n            maxlen = string:len()\n\
    \            maxstring = string\n        end\n    end\n    return maxstring\n\
    end", "    if not strings or #strings == 0 then return nil end\n    local max\
    \ = strings[1]\n    for i = 2, #strings, 2 do\n        if strings[i] > max then\
    \ max = strings[i] end\n    end\n    return max\nend", "    local maxlen = 0\n\
    \    local maxstring = nil\n    for _, string in ipairs(strings) do\n        if\
    \ string:len() > maxlen then\n            maxlen = string:len()\n            maxstring\
    \ = string\n        end\n    end\n    return maxstring\nend", "    local max =\
    \ nil\n    for _,s in ipairs(strings) do\n        if max == nil or max:len() <\
    \ s:len() then max = s end\n    end\n    return max\nend", "    local max = nil\n\
    \    for _,s in ipairs(strings) do\n        if max == nil or max:len() < s:len()\
    \ then\n            max = s\n        end\n    end\n    return max\nend", "   \
    \ if not strings or #strings == 0 then return nil end\n    local max = strings[1]\n\
    \    for i = 2, #strings, 2 do\n        if strings[i] > max then max = strings[i]\
    \ end\n    end\n    return max\nend", "    local max = nil\n    for _, s in ipairs(strings)\
    \ do\n        if max == nil or max:len() < s:len() then\n            max = s\n\
    \        end\n    end\n    return max\nend", "    local max = nil\n    for _,\
    \ s in ipairs(strings) do\n        if max == nil or max:len() < s:len() then\n\
    \            max = s\n        end\n    end\n    return max\nend", "    local max\
    \ = nil\n    for _,s in ipairs(strings) do\n        if max == nil or max:len()\
    \ < s:len() then\n            max = s\n        end\n    end\n    return max\n\
    end", "    local max = nil\n    for _, s in ipairs(strings) do\n        if max\
    \ == nil or max:len() < s:len() then\n            max = s\n        end\n    end\n\
    \    return max\nend", "    local max = nil\n    for _,s in ipairs(strings) do\n\
    \        if max == nil or max:len() < s:len() then\n            max = s\n    \
    \    end\n    end\n    return max\nend", "    if not strings:\n        return\
    \ nil\n    local max = strings[1]\n    for _, s in ipairs(strings) do\n      \
    \  if s > max then max = s\n    end\n    return max\nend", "    local maxlen =\
    \ 0\n    local maxstring = nil\n    for _, string in ipairs(strings) do\n    \
    \    if string:len() > maxlen then\n            maxlen = string:len()\n      \
    \      maxstring = string\n        end\n    end\n    return maxstring\nend", " \
    \   local max = nil\n    for _,s in ipairs(strings) do\n        if max == nil\
    \ or max:len() < s:len() then\n            max = s\n        end\n    end\n   \
    \ return max\nend", "    local max = nil\n    for _, s in ipairs(strings) do\n\
    \        if max == nil or max:len() < s:len() then\n            max = s\n    \
    \    end\n    end\n    return max\nend", "    local max = nil\n    for _, s in\
    \ ipairs(strings) do\n        if max == nil or max:len() < s:len() then\n    \
    \        max = s\n        end\n    end\n    return max\nend", "    local max =\
    \ nil\n    for _,s in ipairs(strings) do\n        if max == nil or max:len() <\
    \ s:len() then\n            max = s\n        end\n    end\n    return max\nend",
  "    local max = nil\n    for _, s in ipairs(strings) do\n        if max == nil\
    \ or max:len() < s:len() then\n            max = s\n        end\n    end\n   \
    \ return max\nend", "    local max = nil\n    for _, s in ipairs(strings) do\n\
    \        if max == nil or max:len() < s:len() then\n            max = s\n    \
    \    end\n    end\n    return max\nend", "    local max = nil\n    for _,s in\
    \ ipairs(strings) do\n        if max == nil or max:len() < s:len() then\n    \
    \        max = s\n        end\n    end\n    return max\nend", "    local max =\
    \ nil\n    for _, s in ipairs(strings) do\n        if max == nil or max:len()\
    \ < s:len() then\n            max = s\n        end\n    end\n    return max\n\
    end", "    local max = nil\n    for _,s in ipairs(strings) do\n        if max\
    \ == nil or max:len() < s:len() then\n            max = s\n        end\n    end\n\
    \    return max\nend", "    local max = nil\n    for _,s in ipairs(strings) do\n\
    \        if max == nil or max:len() < s:len() then max = s end\n    end\n    return\
    \ max\nend", "    local max = nil\n    for _,s in ipairs(strings) do\n       \
    \ if max == nil or max:len() < s:len() then\n            max = s\n        end\n\
    \    end\n    return max\nend", "    local max = nil\n    for _,s in ipairs(strings)\
    \ do\n        if max == nil or max:len() < s:len() then\n            max = s\n\
    \        end\n    end\n    return max\nend", "    local maxlen = 0\n    for _,\
    \ s in ipairs(strings) do\n        if s:len() > maxlen then maxlen = s:len() end\n\
    \    end\n    if maxlen == 0 then return nil end\n    return strings[1]\nend",
  "    local max = nil\n    for _,s in ipairs(strings) do\n        if max == nil or\
    \ max:len() < s:len() then\n            max = s\n        end\n    end\n    return\
    \ max\nend", "    local max = nil\n    for _, s in ipairs(strings) do\n      \
    \  if max == nil or max:len() < s:len() then\n            max = s\n        end\n\
    \    end\n    return max\nend", "    local max = nil\n    for _,s in ipairs(strings)\
    \ do\n        if max == nil or max:len() < s:len() then max = s end\n    end\n\
    \    return max\nend", "    local maxlen = 0\n    local maxstring = nil\n    for\
    \ _, s in ipairs(strings) do\n        if s:len() > maxlen then\n            maxlen\
    \ = s:len()\n            maxstring = s\n        end\n    end\n    return maxstring\n\
    end", "    local max = nil\n    for _, s in ipairs(strings) do\n        if max\
    \ == nil or max:len() < s:len() then\n            max = s\n        end\n    end\n\
    \    return max\nend", "    local max = nil\n    for _, s in ipairs(strings) do\n\
    \        if max == nil or max:len() < s:len() then\n            max = s\n    \
    \    end\n    end\n    return max\nend", "    local max = nil\n    for _, s in\
    \ ipairs(strings) do\n        if max == nil or max:len() < s:len() then max =\
    \ s end\n    end\n    return max\nend", "    local max = nil\n    for _, s in\
    \ ipairs(strings) do\n        if max == nil or max:len() < s:len() then\n    \
    \        max = s\n        end\n    end\n    return max\nend", "    local max =\
    \ nil\n    for _,s in ipairs(strings) do\n        if max == nil or max:len() <\
    \ s:len() then\n            max = s\n        end\n    end\n    return max\nend",
  "    local max = nil\n    for _,s in ipairs(strings) do\n        if max == nil or\
    \ max:len() < s:len() then\n            max = s\n        end\n    end\n    return\
    \ max\nend", "    local maxlen = 0\n    local maxstring = nil\n    for _, string\
    \ in ipairs(strings) do\n        if string:len() > maxlen then\n            maxlen\
    \ = string:len()\n            maxstring = string\n        end\n    end\n    return\
    \ maxstring\nend", "    local max = nil\n    for _, s in ipairs(strings) do\n\
    \        if max == nil or max:len() < s:len() then\n            max = s\n    \
    \    end\n    end\n    return max\nend", "    local max = nil\n    for _, s in\
    \ ipairs(strings) do\n        if max == nil or max:len() < s:len() then\n    \
    \        max = s\n        end\n    end\n    return max\nend", "    local max =\
    \ nil\n    for _,s in ipairs(strings) do\n        if max == nil or max:len() <\
    \ s:len() then max = s end\n    end\n    return max\nend", "    local maxlen =\
    \ 0\n    local maxstring = nil\n    for _, string in ipairs(strings) do\n    \
    \    if string:len() > maxlen then\n            maxlen = string:len()\n      \
    \      maxstring = string\n        end\n    end\n    return maxstring\nend", " \
    \   local max = nil\n    for _, s in ipairs(strings) do\n        if max == nil\
    \ or max:len() < s:len() then\n            max = s\n        end\n    end\n   \
    \ return max\nend", "    local max = nil\n    for _,s in ipairs(strings) do\n\
    \        if max == nil or max:len() < s:len() then\n            max = s\n    \
    \    end\n    end\n    return max\nend", "    local max = nil\n    for _, s in\
    \ ipairs(strings) do\n        if max == nil or max:len() < s:len() then\n    \
    \        max = s\n        end\n    end\n    return max\nend", "    local max =\
    \ nil\n    for _, s in ipairs(strings) do\n        if max == nil or max:len()\
    \ < s:len() then\n            max = s\n        end\n    end\n    return max\n\
    end", "    local max = nil\n    for _, s in ipairs(strings) do\n        if max\
    \ == nil or max:len() < s:len() then\n            max = s\n        end\n    end\n\
    \    return max\nend", "    local maxlen = 0\n    local maxstring = nil\n    for\
    \ _, string in ipairs(strings) do\n        if string:len() > maxlen then\n   \
    \         maxlen = string:len()\n            maxstring = string\n        end\n\
    \    end\n    return maxstring\nend", "    local max = nil\n    for _, s in ipairs(strings)\
    \ do\n        if max == nil or max:len() < s:len() then\n            max = s\n\
    \        end\n    end\n    return max\nend", "    local maxlen = 0\n    for _,\
    \ s in ipairs(strings) do\n        if s:len() > maxlen then maxlen = s:len() end\n\
    \    end\n    if maxlen == 0 then return nil end\n    return strings[1]\nend",
  "    local max = nil\n    for _, s in ipairs(strings) do\n        if max == nil\
    \ or max:len() < s:len() then\n            max = s\n        end\n    end\n   \
    \ return max\nend", "    local max = nil\n    for _, s in ipairs(strings) do\n\
    \        if max == nil or max:len() < s:len() then\n            max = s\n    \
    \    end\n    end\n    return max\nend", "    local max = nil\n    for _, s in\
    \ ipairs(strings) do\n        if max == nil or max:len() < s:len() then max =\
    \ s end\n    end\n    return max\nend", "    local maxlen = 0\n    for _,s in\
    \ ipairs(strings) do\n        if s:len() > maxlen then maxlen = s:len() end\n\
    \    end\n    if maxlen > 0 then\n        return strings[#strings]\n    else\n\
    \        return nil\n    end\nend", "    local max = nil\n    for _, s in ipairs(strings)\
    \ do\n        if max == nil or max:len() < s:len() then\n            max = s\n\
    \        end\n    end\n    return max\nend", "    local max = nil\n    for _,\
    \ s in ipairs(strings) do\n        if max == nil or max:len() < s:len() then\n\
    \            max = s\n        end\n    end\n    return max\nend", "    local maxlen\
    \ = 0\n    local maxstring = nil\n    for _, string in ipairs(strings) do\n  \
    \      if string:len() > maxlen then\n            maxlen = string:len()\n    \
    \        maxstring = string\n        end\n    end\n    return maxstring\nend",
  "    local max = nil\n    for _,s in ipairs(strings) do\n        if max == nil or\
    \ max:len() < s:len() then\n            max = s\n        end\n    end\n    return\
    \ max\nend", "    local maxlen = 0\n    local maxstring = nil\n    for _, string\
    \ in ipairs(strings) do\n        if string:len() > maxlen then\n            maxlen\
    \ = string:len()\n            maxstring = string\n        end\n    end\n    return\
    \ maxstring\nend", "    local maxlen = 0\n    local maxstring = nil\n    for _,\
    \ string in ipairs(strings) do\n        if string:len() > maxlen then\n      \
    \      maxlen = string:len()\n            maxstring = string\n        end\n  \
    \  end\n    return maxstring\nend", "    local max = nil\n    for _,s in ipairs(strings)\
    \ do\n        if max == nil or max:len() < s:len() then\n            max = s\n\
    \        end\n    end\n    return max\nend", "    local max = nil\n    for _,s\
    \ in ipairs(strings) do\n        if max == nil or max:len() < s:len() then max\
    \ = s end\n    end\n    return max\nend", "    local max = nil\n    for _, s in\
    \ ipairs(strings) do\n        if max == nil or max:len() < s:len() then max =\
    \ s end\n    end\n    return max\nend", "    local max = nil\n    for _,s in ipairs(strings)\
    \ do\n        if max == nil or max:len() < s:len() then\n            max = s\n\
    \        end\n    end\n    return max\nend", "    local max = nil\n    for _,\
    \ s in ipairs(strings) do\n        if max == nil or max:len() < s:len() then\n\
    \            max = s\n        end\n    end\n    return max\nend", "    local max\
    \ = nil\n    for _,s in ipairs(strings) do\n        if max == nil or max:len()\
    \ < s:len() then\n            max = s\n        end\n    end\n    return max\n\
    end", "    local max = nil\n    for _,s in ipairs(strings) do\n        if max\
    \ == nil or max:len() < s:len() then\n            max = s\n        end\n    end\n\
    \    return max\nend", "    local max = nil\n    for _, s in ipairs(strings) do\n\
    \        if max == nil or max:len() < s:len() then\n            max = s\n    \
    \    end\n    end\n    return max\nend", "    local max = nil\n    for _,s in\
    \ ipairs(strings) do\n        if max == nil or max:len() < s:len() then\n    \
    \        max = s\n        end\n    end\n    return max\nend", "    local max =\
    \ nil\n    for _,s in ipairs(strings) do\n        if max == nil or max:len() <\
    \ s:len() then\n            max = s\n        end\n    end\n    return max\nend",
  "    local max = nil\n    for _, s in ipairs(strings) do\n        if max == nil\
    \ or max:len() < s:len() then max = s end\n    end\n    return max\nend", "  \
    \  if not strings then\n        return nil\n    end\n    local max = nil\n   \
    \ for _, v in ipairs(strings) do\n        if max == nil or v:len() > max:len()\
    \ then\n            max = v\n        end\n    end\n    return max\nend", "   \
    \ local max = nil\n    for _, s in ipairs(strings) do\n        if max == nil or\
    \ max:len() < s:len() then\n            max = s\n        end\n    end\n    return\
    \ max\nend", "    local max = nil\n    for _, s in ipairs(strings) do\n      \
    \  if max == nil or max:len() < s:len() then\n            max = s\n        end\n\
    \    end\n    return max\nend", "    local maxlen = 0\n    local maxstring = nil\n\
    \    for _, string in ipairs(strings) do\n        if string:len() > maxlen then\n\
    \            maxlen = string:len()\n            maxstring = string\n        end\n\
    \    end\n    return maxstring\nend", "    local max = nil\n    for _, s in ipairs(strings)\
    \ do\n        if max == nil or max:len() < s:len() then\n            max = s\n\
    \        end\n    end\n    return max\nend", "    local maxlen = 0\n    local\
    \ maxstring = nil\n    for _, string in ipairs(strings) do\n        if string:len()\
    \ > maxlen then\n            maxlen = string:len()\n            maxstring = string\n\
    \        end\n    end\n    return maxstring\nend", "    local max = nil\n    for\
    \ _, s in ipairs(strings) do\n        if max == nil or max:len() < s:len() then\n\
    \            max = s\n        end\n    end\n    return max\nend", "    if not\
    \ strings or #strings == 0 then return nil end\n    local max = strings[1]\n \
    \   for i = 2, #strings, 2 do\n        if strings[i] > max then max = strings[i]\
    \ end\n    end\n    return max\nend", "    local max = nil\n    for _, s in ipairs(strings)\
    \ do\n        if max == nil or max:len() < s:len() then\n            max = s\n\
    \        end\n    end\n    return max\nend", "    local maxlen = 0\n    local\
    \ maxstring = nil\n    for _,s in ipairs(strings) do\n        if s:len() > maxlen\
    \ then\n            maxlen = s:len()\n            maxstring = s\n        end\n\
    \    end\n    return maxstring\nend", "    local maxlen = 0\n    local maxstring\
    \ = nil\n    for _,s in ipairs(strings) do\n        if s:len() > maxlen then\n\
    \            maxlen = s:len()\n            maxstring = s\n        end\n    end\n\
    \    return maxstring\nend", "    local max = nil\n    for _,s in ipairs(strings)\
    \ do\n        if max == nil or max:len() < s:len() then\n            max = s\n\
    \        end\n    end\n    return max\nend", "    local maxlen = 0\n    local\
    \ maxstring = nil\n    for _, s in ipairs(strings) do\n        if s:len() > maxlen\
    \ then\n            maxlen = s:len()\n            maxstring = s\n        end\n\
    \    end\n    return maxstring\nend", "    local max = nil\n    for _,s in ipairs(strings)\
    \ do\n        if max == nil or max:len() < s:len() then\n            max = s\n\
    \        end\n    end\n    return max\nend", "    local max = nil\n    for _,\
    \ s in ipairs(strings) do\n        if max == nil or max:len() < s:len() then\n\
    \            max = s\n        end\n    end\n    return max\nend", "    local max\
    \ = nil\n    for _,s in ipairs(strings) do\n        if max == nil or max:len()\
    \ < s:len() then max = s end\n    end\n    return max\nend", "    local max =\
    \ nil\n    for _, s in ipairs(strings) do\n        if max == nil or max:len()\
    \ < s:len() then\n            max = s\n        end\n    end\n    return max\n\
    end", "    local max = nil\n    for _,s in ipairs(strings) do\n        if max\
    \ == nil or max:len() < s:len() then\n            max = s\n        end\n    end\n\
    \    return max\nend", "    local max = nil\n    for _,s in ipairs(strings) do\n\
    \        if max == nil or max:len() < s:len() then\n            max = s\n    \
    \    end\n    end\n    return max\nend", "    local max = nil\n    for _, s in\
    \ ipairs(strings) do\n        if max == nil or max:len() < s:len() then\n    \
    \        max = s\n        end\n    end\n    return max\nend", "    local maxlen\
    \ = 0\n    local maxstring = nil\n    for _, string in ipairs(strings) do\n  \
    \      if string:len() > maxlen then\n            maxlen = string:len()\n    \
    \        maxstring = string\n        end\n    end\n    return maxstring\nend",
  "    local max = nil\n    for _,s in ipairs(strings) do\n        if max == nil or\
    \ max:len() < s:len() then\n            max = s\n        end\n    end\n    return\
    \ max\nend", "    local max = nil\n    for _,s in ipairs(strings) do\n       \
    \ if max == nil or max:len() < s:len() then\n            max = s\n        end\n\
    \    end\n    return max\nend", "    local max = nil\n    for _,s in ipairs(strings)\
    \ do\n        if max == nil or max:len() < s:len() then\n            max = s\n\
    \        end\n    end\n    return max\nend", "    local max = nil\n    for _,\
    \ s in ipairs(strings) do\n        if max == nil or max:len() < s:len() then\n\
    \            max = s\n        end\n    end\n    return max\nend", "    local max\
    \ = nil\n    for _, s in ipairs(strings) do\n        if max == nil or max:len()\
    \ < s:len() then\n            max = s\n        end\n    end\n    return max\n\
    end", "    local max = nil\n    for _, s in ipairs(strings) do\n        if max\
    \ == nil or max:len() < s:len() then\n            max = s\n        end\n    end\n\
    \    return max\nend", "    local max = nil\n    for _, s in ipairs(strings) do\n\
    \        if max == nil or max:len() < s:len() then\n            max = s\n    \
    \    end\n    end\n    return max\nend", "    local max = nil\n    for _,s in\
    \ ipairs(strings) do\n        if max == nil or max:len() < s:len() then\n    \
    \        max = s\n        end\n    end\n    return max\nend", "    local max =\
    \ nil\n    for _, s in ipairs(strings) do\n        if max == nil or max:len()\
    \ < s:len() then\n            max = s\n        end\n    end\n    return max\n\
    end", "    local max = nil\n    for _, s in ipairs(strings) do\n        if max\
    \ == nil or max:len() < s:len() then max = s end\n    end\n    return max\nend",
  "    local max = nil\n    for _,s in ipairs(strings) do\n        if max == nil or\
    \ max:len() < s:len() then\n            max = s\n        end\n    end\n    return\
    \ max\nend", "    local max = nil\n    for _,s in ipairs(strings) do\n       \
    \ if max == nil or s:len() > max:len() then\n            max = s\n        end\n\
    \    end\n    return max\nend", "    local max = nil\n    for _, s in ipairs(strings)\
    \ do\n        if max == nil or max:len() < s:len() then max = s end\n    end\n\
    \    return max\nend", "    local max = nil\n    for _, s in ipairs(strings) do\n\
    \        if max == nil or max:len() < s:len() then\n            max = s\n    \
    \    end\n    end\n    return max\nend", "    local maxlen = 0\n    for _, s in\
    \ ipairs(strings) do\n        if s:len() > maxlen then maxlen = s:len() end\n\
    \    end\n    if maxlen == 0 then return nil end\n    return strings[1]\nend",
  "    local max = nil\n    for _, s in ipairs(strings) do\n        if max == nil\
    \ or max:len() < s:len() then\n            max = s\n        end\n    end\n   \
    \ return max\nend", "    local max = nil\n    for _, s in ipairs(strings) do\n\
    \        if max == nil or max:len() < s:len() then\n            max = s\n    \
    \    end\n    end\n    return max\nend", "    local maxlen = 0\n    local maxstring\
    \ = nil\n    for _, s in ipairs(strings) do\n        if s:len() > maxlen then\n\
    \            maxlen = s:len()\n            maxstring = s\n        end\n    end\n\
    \    return maxstring\nend", "    local max = nil\n    for _, s in ipairs(strings)\
    \ do\n        if max == nil or max:len() < s:len() then\n            max = s\n\
    \        end\n    end\n    return max\nend", "    local maxlen = 0\n    local\
    \ max = nil\n    for _,s in ipairs(strings) do\n        if s:len() > maxlen then\n\
    \            maxlen = s:len()\n            max = s\n        end\n    end\n   \
    \ return max\nend", "    local max = nil\n    for _, s in ipairs(strings) do\n\
    \        if max == nil or max:len() < s:len() then\n            max = s\n    \
    \    end\n    end\n    return max\nend", "    local max = nil\n    for _,s in\
    \ ipairs(strings) do\n        if max == nil or s:len() > max:len() then\n    \
    \        max = s\n        end\n    end\n    return max\nend", "    local max =\
    \ nil\n    for _, s in ipairs(strings) do\n        if max == nil or max:len()\
    \ < s:len() then\n            max = s\n        end\n    end\n    return max\n\
    end", "    local max = nil\n    for _, s in ipairs(strings) do\n        if max\
    \ == nil or max:len() < s:len() then\n            max = s\n        end\n    end\n\
    \    return max\nend", "    local maxlen = 0\n    for _,s in ipairs(strings) do\n\
    \        if s:len() > maxlen then maxlen = s:len() end\n    end\n    if maxlen\
    \ == 0 then return nil end\n    return strings[1]\nend", "    local max = nil\n\
    \    for _, s in ipairs(strings) do\n        if max == nil or max:len() < s:len()\
    \ then\n            max = s\n        end\n    end\n    return max\nend", "   \
    \ local maxlen = 0\n    local maxstring = nil\n    for _,s in ipairs(strings)\
    \ do\n        if s:len() > maxlen then\n            maxlen = s:len()\n       \
    \     maxstring = s\n        end\n    end\n    return maxstring\nend", "    local\
    \ max = nil\n    for _, s in ipairs(strings) do\n        if max == nil or max:len()\
    \ < s:len() then\n            max = s\n        end\n    end\n    return max\n\
    end", "    local max = nil\n    for _, s in ipairs(strings) do\n        if max\
    \ == nil or max:len() < s:len() then\n            max = s\n        end\n    end\n\
    \    return max\nend", "    local max = nil\n    for _, s in ipairs(strings) do\n\
    \        if max == nil or max:len() < s:len() then\n            max = s\n    \
    \    end\n    end\n    return max\nend", "    local max = nil\n    for _, s in\
    \ ipairs(strings) do\n        if max == nil or max:len() < s:len() then\n    \
    \        max = s\n        end\n    end\n    return max\nend", "    local max =\
    \ nil\n    for _, s in ipairs(strings) do\n        if max == nil or max:len()\
    \ < s:len() then\n            max = s\n        end\n    end\n    return max\n\
    end", "    local max = nil\n    for _, s in ipairs(strings) do\n        if max\
    \ == nil or max:len() < s:len() then max = s end\n    end\n    return max\nend",
  "    local max = nil\n    for _,s in ipairs(strings) do\n        if max == nil or\
    \ s:len() > max:len() then\n            max = s\n        end\n    end\n    return\
    \ max\nend", "    local max = nil\n    for _, s in ipairs(strings) do\n      \
    \  if max == nil or max:len() < s:len() then\n            max = s\n        end\n\
    \    end\n    return max\nend", "    local max = nil\n    for _,s in ipairs(strings)\
    \ do\n        if max == nil or max:len() < s:len() then\n            max = s\n\
    \        end\n    end\n    return max\nend", "    local maxlen = 0\n    local\
    \ maxstring = nil\n    for _,s in ipairs(strings) do\n        if s:len() > maxlen\
    \ then\n            maxlen = s:len()\n            maxstring = s\n        end\n\
    \    end\n    return maxstring\nend", "    local max = nil\n    for _, s in ipairs(strings)\
    \ do\n        if max == nil or max:len() < s:len() then\n            max = s\n\
    \        end\n    end\n    return max\nend", "    local max = nil\n    for _,\
    \ s in ipairs(strings) do\n        if max == nil or max:len() < s:len() then\n\
    \            max = s\n        end\n    end\n    return max\nend", "    local max\
    \ = nil\n    for _, s in ipairs(strings) do\n        if max == nil or max:len()\
    \ < s:len() then\n            max = s\n        end\n    end\n    return max\n\
    end", "    local max = nil\n    for _,s in ipairs(strings) do\n        if max\
    \ == nil or max:len() < s:len() then\n            max = s\n        end\n    end\n\
    \    return max\nend", "    local max = nil\n    for _, s in ipairs(strings) do\n\
    \        if max == nil or max:len() < s:len() then\n            max = s\n    \
    \    end\n    end\n    return max\nend", "    local max = nil\n    for _, s in\
    \ ipairs(strings) do\n        if max == nil or max:len() < s:len() then\n    \
    \        max = s\n        end\n    end\n    return max\nend", "    local max =\
    \ nil\n    for _,s in ipairs(strings) do\n        if max == nil or max:len() <\
    \ s:len() then max = s end\n    end\n    return max\nend", "    local maxlen =\
    \ 0\n    local maxstring = nil\n    for _,s in ipairs(strings) do\n        if\
    \ s:len() > maxlen then\n            maxlen = s:len()\n            maxstring =\
    \ s\n        end\n    end\n    return maxstring\nend", "    local max = nil\n\
    \    for _, s in ipairs(strings) do\n        if max == nil or max:len() < s:len()\
    \ then\n            max = s\n        end\n    end\n    return max\nend", "   \
    \ local max = nil\n    for _, s in ipairs(strings) do\n        if max == nil or\
    \ max:len() < s:len() then\n            max = s\n        end\n    end\n    return\
    \ max\nend", "    local max = nil\n    for _, s in ipairs(strings) do\n      \
    \  if max == nil or max:len() < s:len() then max = s end\n    end\n    return\
    \ max\nend", "    local max = nil\n    for _, s in ipairs(strings) do\n      \
    \  if max == nil or max:len() < s:len() then\n            max = s\n        end\n\
    \    end\n    return max\nend", "    local max = nil\n    for _, s in ipairs(strings)\
    \ do\n        if max == nil or max:len() < s:len() then\n            max = s\n\
    \        end\n    end\n    return max\nend", "    local max = nil\n    for _,\
    \ s in ipairs(strings) do\n        if max == nil or max:len() < s:len() then\n\
    \            max = s\n        end\n    end\n    return max\nend", "    local max\
    \ = nil\n    for _, s in ipairs(strings) do\n        if max == nil or max:len()\
    \ < s:len() then max = s end\n    end\n    return max\nend", "    local maxlen\
    \ = 0\n    local maxstring = nil\n    for _, string in ipairs(strings) do\n  \
    \      if string:len() > maxlen then\n            maxlen = string:len()\n    \
    \        maxstring = string\n        end\n    end\n    return maxstring\nend",
  "    local max = nil\n    for _,s in ipairs(strings) do\n        if max == nil or\
    \ s:len() > max:len() then\n            max = s\n        end\n    end\n    return\
    \ max\nend", "    local maxlen = 0\n    local maxstring = nil\n    for _, string\
    \ in ipairs(strings) do\n        if string:len() > maxlen then\n            maxlen\
    \ = string:len()\n            maxstring = string\n        end\n    end\n    return\
    \ maxstring\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

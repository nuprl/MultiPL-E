name: HumanEval_25_factorize
language: lua
prompt: "-- Return table of prime factors of given integer in the order from smallest\
  \ to largest.\n-- Each of the factors should be tableed number of times corresponding\
  \ to how many times it appeares in factorization.\n-- Input number should be equal\
  \ to the product of all factors\n-- >>> factorize(8)\n-- [2, 2, 2]\n-- >>> factorize(25)\n\
  -- [5, 5]\n-- >>> factorize(70)\n-- [2, 5, 7]\nlocal function factorize(n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = factorize\n\
  \    lu.assertEquals(candidate(2), {2})\n    lu.assertEquals(candidate(4), {2, 2})\n\
  \    lu.assertEquals(candidate(8), {2, 2, 2})\n    lu.assertEquals(candidate(57),\
  \ {3, 19})\n    lu.assertEquals(candidate(3249), {3, 3, 19, 19})\n    lu.assertEquals(candidate(185193),\
  \ {3, 3, 3, 19, 19, 19})\n    lu.assertEquals(candidate(20577), {3, 19, 19, 19})\n\
  \    lu.assertEquals(candidate(18), {2, 3, 3})\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local factors = {}\n    for i = 2, math.sqrt(n) do\n        if\
    \ n % i == 0 then\n            factors[i] = factors[i] or 0\n            factors[i]\
    \ = factors[i] + 1\n        end\n    end\n    return factors\nend", "    local\
    \ factors = {}\n    for i = 1, math.sqrt(n) do\n        if n % i == 0 then\n \
    \           factors[i] = factors[i] + 1\n            factors[n/i] = factors[n/i]\
    \ + 1\n        end\n    end\n    return factors\nend", "    local factors = {}\n\
    \    local i = 2\n    while i <= math.sqrt(n) do\n        if n % i == 0 then\n\
    \            factors[i] = factors[i] + 1\n            n = n / i\n        end\n\
    \        i = i + 1\n    end\n    factors[n] = 1\n    return factors\nend", " \
    \   local factors = {}\n    for i = 1, math.sqrt(n) do\n        if n % i == 0\
    \ then\n            factors[i] = factors[i] + 1\n            factors[n/i] = factors[n/i]\
    \ + 1\n        end\n    end\n    return factors\nend", "    local factors = {}\n\
    \    for i = 1, math.sqrt(n) do\n        if n % i == 0 then\n            factors[i]\
    \ = factors[i] or 0\n            factors[i] = factors[i] + 1\n        end\n  \
    \  end\n    return factors\nend", "    local factors = {}\n    for i = 2, math.sqrt(n)\
    \ do\n        if n % i == 0 then\n            factors[i] = factors[i] + 1\n  \
    \          n = n / i\n        end\n    end\n    factors[n] = 1\n    return factors\n\
    end", "    local factors = {}\n    local i = 2\n    while i <= math.sqrt(n) do\n\
    \        if n % i == 0 then\n            if not factors[i] then factors[i] = 1\
    \ else factors[i] = factors[i] + 1\n            n = n / i\n        end\n     \
    \   i = i + 1\n    end\n    if n > 1 then factors[n] = 1\n    return factors\n\
    end", "    local factors = {}\n    for i = 2, math.sqrt(n) do\n        if n %\
    \ i == 0 then\n            factors[i] = factors[i] + 1\n            factors[n/i]\
    \ = factors[n/i] + 1\n        end\n    end\n    return factors\nend", "    local\
    \ factors = {}\n    local i = 2\n    while i <= math.sqrt(n) do\n        if n\
    \ % i == 0 then\n            factors[i] = factors[i] + 1\n            n = n /\
    \ i\n        end\n        i = i + 1\n    end\n    if n > 1 then\n        factors[n]\
    \ = factors[n] + 1\n    end\n    return factors\nend", "    local factors = {}\n\
    \    for i = 1, math.sqrt(n) do\n        if n % i == 0 then\n            factors[i]\
    \ = factors[i] or 0\n            factors[i] = factors[i] + 1\n        end\n  \
    \  end\n    return factors\nend", "    local factors = {}\n    for i = 2, math.sqrt(n)\
    \ + 1 do\n        if n % i == 0 then\n            factors[i] = factors[i] or 0\n\
    \            factors[i] = factors[i] + 1\n        end\n    end\n    return factors\n\
    end", "    local factors = {}\n    for i = 2, math.sqrt(n) do\n        if n %\
    \ i == 0 then\n            factors[i] = factors[i] + 1\n            n = n / i\n\
    \        end\n    end\n    factors[n] = 1\n    return factors\nend", "    local\
    \ factors = {}\n    for i = 2, math.sqrt(n) do\n        if n % i == 0 then\n \
    \           factors[i] = factors[i] + 1\n            factors[n / i] = factors[n\
    \ / i] + 1\n        end\n    end\n    return factors\nend", "    local factors\
    \ = {}\n    for i = 1, math.sqrt(n) do\n        if n % i == 0 then\n         \
    \   factors[i] = factors[i] + 1\n            factors[n / i] = factors[n / i] +\
    \ 1\n        end\n    end\n    return factors\nend", "    local factors = {}\n\
    \    for i=1, math.sqrt(n) do\n        if n % i == 0 then\n            factors[i]\
    \ = factors[i] or 0\n            factors[i] = factors[i] + 1\n        end\n  \
    \  end\n    return factors\nend", "    local factors = {}\n    for i = 2, math.sqrt(n)\
    \ do\n        if n % i == 0 then\n            factors[i] = factors[i] or 0\n \
    \           factors[i] = factors[i] + 1\n        end\n    end\n    return factors\n\
    end", "    local factors = {}\n    local i = 2\n    while i <= math.sqrt(n) do\n\
    \        if n % i == 0 then\n            factors[i] = factors[i] + 1\n       \
    \     n = n / i\n        end\n        i = i + 1\n    end\n    factors[n] = 1\n\
    \    return factors\nend", "    local factors = {}\n    for i=1, math.sqrt(n),\
    \ 2 do\n        if n % i == 0 then\n            if factors[i] == nil then\n  \
    \              factors[i] = 1\n            else\n                factors[i] =\
    \ factors[i] + 1\n            end\n        end\n    end\n    return factors\n\
    end", "    local factors = {}\n    for i = 2, math.sqrt(n) do\n        if n %\
    \ i == 0 then\n            factors[i] = factors[i] + 1\n            n = n / i\n\
    \        end\n    end\n    factors[n] = 1\n    return factors\nend", "    local\
    \ factors = {}\n    local i = 2\n    while i <= math.sqrt(n) do\n        if n\
    \ % i == 0 then\n            factors[i] = factors[i] + 1\n            n = n /\
    \ i\n        end\n        i = i + 1\n    end\n    factors[n] = 1\n    return factors\n\
    end", "    local factors = {}\n    for i = 2, math.sqrt(n) do\n        if n %\
    \ i == 0 then\n            factors[i] = factors[i] or 0\n            factors[i]\
    \ = factors[i] + 1\n        end\n    end\n    return factors\nend", "    local\
    \ factors = {}\n    for i = 2, math.sqrt(n) do\n        if n % i == 0 then\n \
    \           factors[i] = factors[i] or 0\n            factors[i] = factors[i]\
    \ + 1\n        end\n    end\n    return factors\nend", "    local factors = {}\n\
    \    for i = 2, math.sqrt(n) do\n        if n % i == 0 then\n            factors[i]\
    \ = factors[i] + 1\n            factors[n / i] = factors[n / i] + 1\n        end\n\
    \    end\n    return factors\nend", "    local factors = {}\n    for i = 2, math.sqrt(n)\
    \ do\n        if n % i == 0 then\n            factors[i] = factors[i] or 0\n \
    \           factors[i] = factors[i] + 1\n        end\n    end\n    return factors\n\
    end", "    local factors = {}\n    for i = 2, math.sqrt(n) do\n        if n %\
    \ i == 0 then\n            factors[i] = factors[i] or 0\n            factors[i]\
    \ = factors[i] + 1\n        end\n    end\n    return factors\nend", "    local\
    \ factors = {}\n    local i = 2\n    while i <= math.sqrt(n) do\n        if n\
    \ % i == 0 then\n            factors[i] = factors[i] + 1\n            n = n /\
    \ i\n        end\n        i = i + 1\n    end\n    factors[n] = 1\n    return factors\n\
    end", "    local factors = {}\n    for i = 2, math.sqrt(n) do\n        if n %\
    \ i == 0 then\n            factors[i] = factors[i] + 1\n            n = n / i\n\
    \        end\n    end\n    factors[n] = 1\n    return factors\nend", "    local\
    \ factors = {}\n    for i = 2, math.sqrt(n) do\n        if n % i == 0 then\n \
    \           factors[i] = factors[i] + 1\n            n = n / i\n        end\n\
    \    end\n    factors[n] = 1\n    return factors\nend", "    local factors = {}\n\
    \    for i = 2, math.sqrt(n) do\n        if n % i == 0 then\n            factors[i]\
    \ = factors[i] + 1\n            n = n / i\n        end\n    end\n    factors[n]\
    \ = 1\n    return factors\nend", "    local factors = {}\n    for i = 2, math.sqrt(n)\
    \ do\n        if n % i == 0 then\n            factors[i] = factors[i] or 0\n \
    \           factors[i] = factors[i] + 1\n        end\n    end\n    return factors\n\
    end", "    local factors = {}\n    local i = 2\n    while i <= math.sqrt(n) do\n\
    \        if n % i == 0 then\n            factors[i] = factors[i] + 1\n       \
    \     n = n / i\n        end\n        i = i + 1\n    end\n    if n > 1 then\n\
    \        factors[n] = factors[n] + 1\n    end\n    return factors\nend", "   \
    \ local factors = {}\n    for i = 2, math.sqrt(n) do\n        if n % i == 0 then\n\
    \            factors[i] = factors[i] + 1\n            n = n / i\n        end\n\
    \    end\n    factors[n] = 1\n    return factors\nend", "    local factors = {}\n\
    \    for i = 2, math.sqrt(n) do\n        if n % i == 0 then\n            factors[i]\
    \ = factors[i] or 0\n            factors[i] = factors[i] + 1\n        end\n  \
    \  end\n    return factors\nend", "    local factors = {}\n    for i = 2, math.sqrt(n)\
    \ do\n        if n % i == 0 then\n            factors[i] = factors[i] or 0\n \
    \           factors[i] = factors[i] + 1\n        end\n    end\n    return factors\n\
    end", "    local factors = {}\n    for i = 1, math.sqrt(n) do\n        if n %\
    \ i == 0 then\n            factors[i] = factors[i] + 1\n            factors[n\
    \ / i] = factors[n / i] + 1\n        end\n    end\n    return factors\nend", " \
    \   local factors = {}\n    for i = 1, math.sqrt(n) do\n        if n % i == 0\
    \ then\n            factors[i] = factors[i] or 0\n            factors[i] = factors[i]\
    \ + 1\n        end\n    end\n    return factors\nend", "    local factors = {}\n\
    \    for i = 1, math.sqrt(n) do\n        if n % i == 0 then\n            factors[i]\
    \ = factors[i] or 0\n            factors[i] = factors[i] + 1\n        end\n  \
    \  end\n    return factors\nend", "    local factors = {}\n    local i = 2\n \
    \   while i <= math.sqrt(n) do\n        if n % i == 0 then\n            factors[i]\
    \ = factors[i] + 1\n            n = n / i\n        end\n        i = i + 1\n  \
    \  end\n    factors[n] = 1\n    return factors\nend", "    local factors = {}\n\
    \    for i = 2, math.sqrt(n) do\n        if n % i == 0 then\n            factors[i]\
    \ = factors[i] or 0\n            factors[i] = factors[i] + 1\n        end\n  \
    \  end\n    return factors\nend", "    local factors = {}\n    for i = 2, math.sqrt(n)\
    \ do\n        if n % i == 0 then\n            factors[i] = factors[i] + 1\n  \
    \          factors[n / i] = factors[n / i] + 1\n        end\n    end\n    return\
    \ factors\nend", "    local factors = {}\n    for i=1, math.sqrt(n), 2 do\n  \
    \      if n % i == 0 then\n            factors[i] = factors[i] or 0\n        \
    \    factors[i] = factors[i] + 1\n        end\n    end\n    return factors\nend",
  "    local factors = {}\n    for i = 1, math.sqrt(n) do\n        if n % i == 0 then\n\
    \            factors[i] = factors[i] or 0\n            factors[i] = factors[i]\
    \ + 1\n        end\n    end\n    return factors\nend", "    local factors = {}\n\
    \    for i = 1, math.sqrt(n) do\n        if n % i == 0 then\n            factors[i]\
    \ = factors[i] or 0\n            factors[i] = factors[i] + 1\n        end\n  \
    \  end\n    return factors\nend", "    local factors = {}\n    for i = 2, math.sqrt(n)\
    \ + 1 do\n        if n % i == 0 then\n            factors[i] = factors[i] + 1\n\
    \            n = n / i\n        end\n    end\n    factors[n] = 1\n    return factors\n\
    end", "    local factors = {}\n    for i = 2, math.sqrt(n) + 1 do\n        if\
    \ n % i == 0 then\n            factors[i] = factors[i] or 0\n            factors[i]\
    \ = factors[i] + 1\n        end\n    end\n    return factors\nend", "    local\
    \ factors = {}\n    for i = 2, math.sqrt(n) do\n        if n % i == 0 then\n \
    \           factors[i] = factors[i] or 0\n            factors[i] = factors[i]\
    \ + 1\n        end\n    end\n    return factors\nend", "    local factors = {}\n\
    \    for i = 1, math.sqrt(n) do\n        if n % i == 0 then\n            factors[i]\
    \ = factors[i] or 0\n            factors[i] = factors[i] + 1\n        end\n  \
    \  end\n    return factors\nend", "    local factors = {}\n    for i = 2, math.sqrt(n)\
    \ + 1 do\n        if n % i == 0 then\n            factors[i] = factors[i] + 1\n\
    \            n = n / i\n        end\n    end\n    factors[n] = 1\n    return factors\n\
    end", "    local factors = {}\n    local i = 2\n    while i <= math.sqrt(n) do\n\
    \        if n % i == 0 then\n            factors[i] = factors[i] + 1\n       \
    \     n = n / i\n        end\n        i = i + 1\n    end\n    factors[n] = 1\n\
    \    return factors\nend", "    local factors = {}\n    for i = 1, math.sqrt(n)\
    \ do\n        if n % i == 0 then\n            factors[i] = factors[i] or 0\n \
    \           factors[i] = factors[i] + 1\n        end\n    end\n    return factors\n\
    end", "    local factors = {}\n    for i = 2, math.sqrt(n) do\n        if n %\
    \ i == 0 then\n            factors[i] = factors[i] or 0\n            factors[i]\
    \ = factors[i] + 1\n        end\n    end\n    return factors\nend", "    local\
    \ factors = {}\n    for i = 2, math.sqrt(n) do\n        if n % i == 0 then\n \
    \           factors[i] = factors[i] or 0\n            factors[i] = factors[i]\
    \ + 1\n        end\n    end\n    return factors\nend", "    local factors = {}\n\
    \    local i = 2\n    while i <= math.sqrt(n) do\n        if n % i == 0 then\n\
    \            if factors[i] == nil then\n                factors[i] = 1\n     \
    \       else\n                factors[i] = factors[i] + 1\n            end\n \
    \       end\n        i = i + 1\n    end\n    return factors\nend", "    local\
    \ factors = {}\n    local i = 2\n    while i <= math.sqrt(n) do\n        if n\
    \ % i == 0 then\n            factors[i] = factors[i] + 1\n            n = n /\
    \ i\n        end\n        i = i + 1\n    end\n    factors[n] = 1\n    return factors\n\
    end", "    local factors = {}\n    for i = 1, math.sqrt(n) do\n        if n %\
    \ i == 0 then\n            factors[i] = factors[i] + 1\n            factors[n\
    \ / i] = factors[n / i] + 1\n        end\n    end\n    return factors\nend", " \
    \   local factors = {}\n    for i = 2, math.sqrt(n) do\n        if n % i == 0\
    \ then\n            factors[i] = factors[i] + 1\n            n = n / i\n     \
    \   end\n    end\n    factors[n] = 1\n    return factors\nend", "    local factors\
    \ = {}\n    for i = 2, math.sqrt(n) do\n        if n % i == 0 then\n         \
    \   factors[i] = factors[i] or 0\n            factors[i] = factors[i] + 1\n  \
    \      end\n    end\n    return factors\nend", "    local factors = {}\n    for\
    \ i = 2, math.sqrt(n) do\n        if n % i == 0 then\n            factors[i] =\
    \ factors[i] + 1\n            n = n / i\n        end\n    end\n    factors[n]\
    \ = 1\n    return factors\nend", "    local factors = {}\n    for i = 1, math.sqrt(n)\
    \ do\n        if n % i == 0 then\n            factors[i] = factors[i] or 0\n \
    \           factors[i] = factors[i] + 1\n        end\n    end\n    return factors\n\
    end", "    local factors = {}\n    local i = 2\n    while i <= math.sqrt(n) do\n\
    \        if n % i == 0 then\n            factors[i] = factors[i] + 1\n       \
    \     n = n / i\n        end\n        i = i + 1\n    end\n    factors[n] = 1\n\
    \    return factors\nend", "    local factors = {}\n    for i = 2, math.sqrt(n)\
    \ do\n        if n % i == 0 then\n            factors[i] = factors[i] + 1\n  \
    \          n = n / i\n        end\n    end\n    factors[n] = 1\n    return factors\n\
    end", "    local factors = {}\n    for i = 2, math.sqrt(n) do\n        if n %\
    \ i == 0 then\n            factors[i] = factors[i] + 1\n            factors[n\
    \ / i] = factors[n / i] + 1\n        end\n    end\n    return factors\nend", " \
    \   local factors = {}\n    for i = 2, math.sqrt(n) do\n        if n % i == 0\
    \ then\n            factors[i] = factors[i] + 1\n            n = n / i\n     \
    \   end\n    end\n    factors[n] = 1\n    return factors\nend", "    local factors\
    \ = {}\n    for i = 2, math.sqrt(n) + 1 do\n        if n % i == 0 then\n     \
    \       factors[i] = factors[i] or 0\n            factors[i] = factors[i] + 1\n\
    \        end\n    end\n    return factors\nend", "    local factors = {}\n   \
    \ for i = 2, math.sqrt(n) do\n        if n % i == 0 then\n            factors[i]\
    \ = factors[i] + 1\n            factors[n / i] = factors[n / i] + 1\n        end\n\
    \    end\n    return factors\nend", "    local factors = {}\n    for i = 1, math.sqrt(n)\
    \ do\n        if n % i == 0 then\n            factors[i] = factors[i] + 1\n  \
    \          factors[n / i] = factors[n / i] + 1\n        end\n    end\n    return\
    \ factors\nend", "    local factors = {}\n    for i = 2, math.sqrt(n) + 1 do\n\
    \        if n % i == 0 then\n            factors[i] = factors[i] + 1\n       \
    \     n = n / i\n        end\n    end\n    factors[n] = 1\n    return factors\n\
    end", "    local factors = {}\n    for i = 2, math.sqrt(n) do\n        if n %\
    \ i == 0 then\n            factors[i] = factors[i] or 0\n            factors[i]\
    \ = factors[i] + 1\n        end\n    end\n    return factors\nend", "    local\
    \ factors = {}\n    for i = 2, math.sqrt(n) + 1 do\n        if n % i == 0 then\n\
    \            factors[i] = factors[i] or 0\n            factors[i] = factors[i]\
    \ + 1\n        end\n    end\n    return factors\nend", "    local factors = {}\n\
    \    for i = 2, math.sqrt(n) + 1 do\n        if n % i == 0 then\n            factors[i]\
    \ = factors[i] + 1\n            n = n / i\n        end\n    end\n    factors[n]\
    \ = 1\n    return factors\nend", "    local factors = {}\n    for i = 1, math.sqrt(n)\
    \ do\n        if n % i == 0 then\n            factors[i] = factors[i] or 0\n \
    \           factors[i] = factors[i] + 1\n        end\n    end\n    return factors\n\
    end", "    local factors = {}\n    for i = 2, math.sqrt(n) + 1 do\n        if\
    \ n % i == 0 then\n            factors[i] = factors[i] or 0\n            factors[i]\
    \ = factors[i] + 1\n        end\n    end\n    return factors\nend", "    local\
    \ factors = {}\n    for i = 2, math.sqrt(n) do\n        if n % i == 0 then\n \
    \           factors[i] = factors[i] + 1\n            n = n / i\n        end\n\
    \    end\n    factors[n] = 1\n    return factors\nend", "    local factors = {}\n\
    \    for i = 2, math.sqrt(n) do\n        if n % i == 0 then\n            factors[i]\
    \ = factors[i] + 1\n            factors[n / i] = factors[n / i] + 1\n        end\n\
    \    end\n    return factors\nend", "    local factors = {}\n    for i = 2, math.sqrt(n)\
    \ do\n        if n % i == 0 then\n            factors[i] = factors[i] + 1\n  \
    \          n = n / i\n        end\n    end\n    factors[n] = 1\n    return factors\n\
    end", "    local factors = {}\n    for i = 1, math.sqrt(n) do\n        if n %\
    \ i == 0 then\n            factors[i] = factors[i] + 1\n            factors[n\
    \ / i] = factors[n / i] + 1\n        end\n    end\n    return factors\nend", " \
    \   local factors = {}\n    for i = 2, math.sqrt(n) do\n        if n % i == 0\
    \ then\n            factors[i] = factors[i] or 0\n            factors[i] = factors[i]\
    \ + 1\n        end\n    end\n    return factors\nend", "    local factors = {}\n\
    \    for i = 2, math.sqrt(n) do\n        if n % i == 0 then\n            factors[i]\
    \ = factors[i] + 1\n            factors[n / i] = factors[n / i] + 1\n        end\n\
    \    end\n    return factors\nend", "    local factors = {}\n    for i = 2, math.sqrt(n)\
    \ do\n        if n % i == 0 then\n            factors[i] = factors[i] + 1\n  \
    \          n = n / i\n        end\n    end\n    factors[n] = 1\n    return factors\n\
    end", "    local factors = {}\n    for i = 2, math.sqrt(n) + 1 do\n        if\
    \ n % i == 0 then\n            factors[i] = factors[i] + 1\n            n = n\
    \ / i\n        end\n    end\n    factors[n] = 1\n    return factors\nend", " \
    \   local factors = {}\n    for i = 2, math.sqrt(n) do\n        if n % i == 0\
    \ then\n            factors[i] = factors[i] + 1\n            factors[n / i] =\
    \ factors[n / i] + 1\n        end\n    end\n    return factors\nend", "    local\
    \ factors = {}\n    for i = 2, math.sqrt(n) do\n        if n % i == 0 then\n \
    \           factors[i] = factors[i] or 0\n            factors[i] = factors[i]\
    \ + 1\n        end\n    end\n    return factors\nend", "    local factors = {}\n\
    \    for i = 2, math.sqrt(n) do\n        if n % i == 0 then\n            factors[i]\
    \ = factors[i] or 0\n            factors[i] = factors[i] + 1\n        end\n  \
    \  end\n    return factors\nend", "    local factors = {}\n    local i = 2\n \
    \   while i <= math.sqrt(n) do\n        if n % i == 0 then\n            factors[i]\
    \ = factors[i] + 1\n            n = n / i\n        end\n        i = i + 1\n  \
    \  end\n    factors[n] = 1\n    return factors\nend", "    local factors = {}\n\
    \    for i=1, math.sqrt(n) do\n        if n % i == 0 then\n            factors[i]\
    \ = factors[i] + 1\n            n = n / i\n        end\n    end\n    factors[n]\
    \ = 1\n    return factors\nend", "    local factors = {}\n    for i = 1, math.sqrt(n)\
    \ do\n        if n % i == 0 then\n            factors[i] = factors[i] or 0\n \
    \           factors[i] = factors[i] + 1\n        end\n    end\n    return factors\n\
    end", "    local factors = {}\n    for i = 2, math.sqrt(n) do\n        if n %\
    \ i == 0 then\n            factors[i] = factors[i] or 0\n            factors[i]\
    \ = factors[i] + 1\n        end\n    end\n    return factors\nend", "    local\
    \ factors = {}\n    for i = 1, math.sqrt(n) do\n        if n % i == 0 then\n \
    \           factors[i] = factors[i] or 0\n            factors[i] = factors[i]\
    \ + 1\n        end\n    end\n    return factors\nend", "    local factors = {}\n\
    \    for i = 2, math.sqrt(n) + 1 do\n        if n % i == 0 then\n            factors[i]\
    \ = factors[i] + 1\n            n = n / i\n        end\n    end\n    factors[n]\
    \ = 1\n    return factors\nend", "    local factors = {}\n    local i = 2\n  \
    \  while i <= math.sqrt(n) do\n        if n % i == 0 then\n            factors[i]\
    \ = factors[i] + 1\n            n = n / i\n        end\n        i = i + 1\n  \
    \  end\n    factors[n] = 1\n    return factors\nend", "    local factors = {}\n\
    \    for i = 2, math.sqrt(n) + 1 do\n        if n % i == 0 then\n            factors[i]\
    \ = factors[i] + 1\n            n = n / i\n        end\n    end\n    factors[n]\
    \ = 1\n    return factors\nend", "    local factors = {}\n    local i = 2\n  \
    \  while i <= math.sqrt(n) do\n        if n % i == 0 then\n            factors[i]\
    \ = factors[i] + 1\n            n = n / i\n        end\n        i = i + 1\n  \
    \  end\n    factors[n] = 1\n    return factors\nend", "    local factors = {}\n\
    \    for i = 2, math.sqrt(n) do\n        if n % i == 0 then\n            factors[i]\
    \ = factors[i] or 0\n            factors[i] = factors[i] + 1\n        end\n  \
    \  end\n    return factors\nend", "    local factors = {}\n    local i = 2\n \
    \   while i <= math.sqrt(n) do\n        if n % i == 0 then\n            factors[i]\
    \ = factors[i] + 1\n            n = n / i\n        end\n        i = i + 1\n  \
    \  end\n    if n > 1 then\n        factors[n] = factors[n] + 1\n    end\n    return\
    \ factors\nend", "    local factors = {}\n    for i = 2, math.sqrt(n) do\n   \
    \     if n % i == 0 then\n            factors[i] = factors[i] + 1\n          \
    \  n = n / i\n        end\n    end\n    factors[n] = 1\n    return factors\nend",
  "    local factors = {}\n    for i = 2, math.sqrt(n) do\n        if n % i == 0 then\n\
    \            factors[i] = factors[i] + 1\n            factors[n / i] = factors[n\
    \ / i] + 1\n        end\n    end\n    return factors\nend", "    local factors\
    \ = {}\n    local i = 2\n    while i <= math.sqrt(n) do\n        if n % i == 0\
    \ then\n            factors[i] = factors[i] + 1\n            n = n / i\n     \
    \   end\n        i = i + 1\n    end\n    factors[n] = 1\n    return factors\n\
    end", "    local factors = {}\n    for i = 1, math.sqrt(n) do\n        if n %\
    \ i == 0 then\n            factors[i] = factors[i] or 0\n            factors[i]\
    \ = factors[i] + 1\n        end\n    end\n    return factors\nend", "    local\
    \ factors = {}\n    for i = 2, math.sqrt(n) do\n        if n % i == 0 then\n \
    \           factors[i] = factors[i] or 0\n            factors[i] = factors[i]\
    \ + 1\n        end\n    end\n    return factors\nend", "    local factors = {}\n\
    \    for i=1,math.sqrt(n) do\n        if n%i==0 then\n            factors[i] =\
    \ factors[i] or 0\n            factors[i] = factors[i] + 1\n        end\n    end\n\
    \    return factors\nend", "    local factors = {}\n    for i = 2, math.sqrt(n)\
    \ do\n        if n % i == 0 then\n            factors[i] = factors[i] + 1\n  \
    \          factors[n/i] = factors[n/i] + 1\n        end\n    end\n    return factors\n\
    end", "    local factors = {}\n    for i=1, math.sqrt(n) do\n        if n % i\
    \ == 0 then\n            factors[i] = factors[i] or 0\n            factors[i]\
    \ = factors[i] + 1\n        end\n    end\n    return factors\nend", "    local\
    \ factors = {}\n    for i = 2, math.sqrt(n) do\n        if n % i == 0 then\n \
    \           factors[i] = factors[i] + 1\n            factors[n/i] = factors[n/i]\
    \ + 1\n        end\n    end\n    return factors\nend", "    local factors = {}\n\
    \    for i=1, math.sqrt(n) do\n        if n % i == 0 then\n            factors[i]\
    \ = factors[i] + 1\n            factors[n/i] = factors[n/i] + 1\n        end\n\
    \    end\n    return factors\nend", "    local factors = {}\n    local i = 2\n\
    \    while i <= math.sqrt(n) do\n        if n % i == 0 then\n            factors[i]\
    \ = factors[i] + 1\n            n = n / i\n        end\n        i = i + 1\n  \
    \  end\n    factors[n] = 1\n    return factors\nend", "    local factors = {}\n\
    \    for i=1, math.sqrt(n) do\n        if n % i == 0 then\n            factors[i]\
    \ = factors[i] or 0\n            factors[i] = factors[i] + 1\n        end\n  \
    \  end\n    return factors\nend", "    local factors = {}\n    for i = 2, math.sqrt(n)\
    \ do\n        if n % i == 0 then\n            factors[i] = factors[i] or 0\n \
    \           factors[i] = factors[i] + 1\n        end\n    end\n    return factors\n\
    end", "    local factors = {}\n    local i = 2\n    while i <= math.sqrt(n) do\n\
    \        if n % i == 0 then\n            factors[i] = factors[i] + 1\n       \
    \     n = n / i\n        end\n        i = i + 1\n    end\n    if n > 1 then\n\
    \        factors[n] = factors[n] + 1\n    end\n    return factors\nend", "   \
    \ local factors = {}\n    for i = 2, math.sqrt(n) do\n        if n % i == 0 then\n\
    \            factors[i] = factors[i] + 1\n            n = n / i\n        end\n\
    \    end\n    factors[n] = 1\n    return factors\nend", "    local factors = {}\n\
    \    for i = 1, math.sqrt(n) do\n        if n % i == 0 then\n            factors[i]\
    \ = factors[i] or 0\n            factors[i] = factors[i] + 1\n        end\n  \
    \  end\n    return factors\nend", "    local factors = {}\n    for i = 2, math.sqrt(n)\
    \ do\n        if n % i == 0 then\n            factors[i] = factors[i] + 1\n  \
    \          factors[n / i] = factors[n / i] + 1\n        end\n    end\n    return\
    \ factors\nend", "    local factors = {}\n    for i = 2, math.sqrt(n) + 1 do\n\
    \        if n % i == 0 then\n            factors[i] = factors[i] or 0\n      \
    \      factors[i] = factors[i] + 1\n        end\n    end\n    return factors\n\
    end", "    local factors = {}\n    for i = 2, math.sqrt(n) do\n        if n %\
    \ i == 0 then\n            factors[i] = factors[i] or 0\n            factors[i]\
    \ = factors[i] + 1\n        end\n    end\n    return factors\nend", "    local\
    \ factors = {}\n    local i = 2\n    while i <= math.sqrt(n) do\n        if n\
    \ % i == 0 then\n            factors[i] = factors[i] + 1\n            n = n /\
    \ i\n        end\n        i = i + 1\n    end\n    if n > 1 then\n        factors[n]\
    \ = factors[n] + 1\n    end\n    return factors\nend", "    local factors = {}\n\
    \    for i=1, math.sqrt(n), 1 do\n        if n % i == 0 then\n            factors[i]\
    \ = factors[i] + 1\n            n = n / i\n        end\n    end\n    factors[n]\
    \ = 1\n    return factors\nend", "    local factors = {}\n    for i = 2, math.sqrt(n)\
    \ do\n        if n % i == 0 then\n            factors[i] = factors[i] + 1\n  \
    \          factors[n / i] = factors[n / i] + 1\n        end\n    end\n    return\
    \ factors\nend", "    local factors = {}\n    for i = 2, math.sqrt(n) + 1, 1 do\n\
    \        if n % i == 0 then\n            factors[i] = factors[i] + 1\n       \
    \     n = n / i\n        end\n    end\n    factors[n] = 1\n    return factors\n\
    end", "    local factors = {}\n    for i = 2, math.sqrt(n) do\n        if n %\
    \ i == 0 then\n            factors[i] = factors[i] + 1\n            factors[n\
    \ / i] = factors[n / i] + 1\n        end\n    end\n    return factors\nend", " \
    \   local factors = {}\n    for i = 2, math.sqrt(n) do\n        if n % i == 0\
    \ then\n            factors[i] = factors[i] + 1\n            factors[n / i] =\
    \ factors[n / i] + 1\n        end\n    end\n    return factors\nend", "    local\
    \ factors = {}\n    local i = 2\n    while i <= math.sqrt(n) do\n        if n\
    \ % i == 0 then\n            factors[i] = factors[i] + 1\n            n = n /\
    \ i\n        end\n        i = i + 1\n    end\n    factors[n] = 1\n    return factors\n\
    end", "    local factors = {}\n    for i = 2, math.sqrt(n) do\n        if n %\
    \ i == 0 then\n            factors[i] = factors[i] + 1\n            n = n / i\n\
    \        end\n    end\n    factors[n] = 1\n    return factors\nend", "    local\
    \ factors = {}\n    local i = 2\n    while i <= math.sqrt(n) do\n        if n\
    \ % i == 0 then\n            factors[i] = factors[i] + 1\n            n = n /\
    \ i\n        end\n        i = i + 1\n    end\n    if n > 1 then\n        factors[n]\
    \ = factors[n] + 1\n    end\n    return factors\nend", "    local factors = {}\n\
    \    for i = 2, math.sqrt(n) do\n        if n % i == 0 then\n            factors[i]\
    \ = factors[i] + 1\n            n = n / i\n        end\n    end\n    factors[n]\
    \ = 1\n    return factors\nend", "    local factors = {}\n    for i = 2, math.sqrt(n)\
    \ + 1 do\n        if n % i == 0 then\n            factors[i] = factors[i] + 1\n\
    \            n = n / i\n        end\n    end\n    factors[n] = 1\n    return factors\n\
    end", "    local factors = {}\n    for i = 2, math.sqrt(n) do\n        if n %\
    \ i == 0 then\n            factors[i] = factors[i] or 0\n            factors[i]\
    \ = factors[i] + 1\n        end\n    end\n    return factors\nend", "    local\
    \ factors = {}\n    for i = 2, math.sqrt(n) do\n        if n % i == 0 then\n \
    \           factors[i] = factors[i] or 0\n            factors[i] = factors[i]\
    \ + 1\n        end\n    end\n    return factors\nend", "    local factors = {}\n\
    \    local i = 2\n    while i <= math.sqrt(n) do\n        if n % i == 0 then\n\
    \            factors[i] = factors[i] + 1\n            n = n / i\n        end\n\
    \        i = i + 1\n    end\n    factors[n] = 1\n    return factors\nend", " \
    \   local factors = {}\n    for i=1, math.sqrt(n) do\n        if n % i == 0 then\n\
    \            factors[i] = factors[i] or 0\n            factors[i] = factors[i]\
    \ + 1\n        end\n    end\n    return factors\nend", "    local factors = {}\n\
    \    for i = 2, math.sqrt(n) do\n        if n % i == 0 then\n            factors[i]\
    \ = factors[i] or 0\n            factors[i] = factors[i] + 1\n        end\n  \
    \  end\n    return factors\nend", "    local factors = {}\n    for i = 2, math.sqrt(n)\
    \ do\n        if n % i == 0 then\n            factors[i] = factors[i] or 0\n \
    \           factors[i] = factors[i] + 1\n        end\n    end\n    return factors\n\
    end", "    local factors = {}\n    for i = 2, math.sqrt(n) do\n        if n %\
    \ i == 0 then\n            factors[i] = factors[i] or 0\n            factors[i]\
    \ = factors[i] + 1\n        end\n    end\n    return factors\nend", "    local\
    \ factors = {}\n    local i = 2\n    while i <= math.sqrt(n) do\n        if n\
    \ % i == 0 then\n            factors[i] = factors[i] + 1\n            n = n /\
    \ i\n        end\n        i = i + 1\n    end\n    if n > 1 then\n        factors[n]\
    \ = factors[n] + 1\n    end\n    return factors\nend", "    local factors = {}\n\
    \    local i = 2\n    while i <= math.sqrt(n) do\n        if n % i == 0 then\n\
    \            factors[i] = factors[i] + 1\n            n = n / i\n        end\n\
    \        i = i + 1\n    end\n    if n > 1 then\n        factors[n] = factors[n]\
    \ + 1\n    end\n    return factors\nend", "    local factors = {}\n    for i =\
    \ 2, math.sqrt(n) do\n        if n % i == 0 then\n            factors[i] = factors[i]\
    \ + 1\n            factors[n / i] = factors[n / i] + 1\n        end\n    end\n\
    \    return factors\nend", "    local factors = {}\n    for i = 2, math.sqrt(n)\
    \ do\n        if n % i == 0 then\n            factors[i] = factors[i] + 1\n  \
    \          n = n / i\n        end\n    end\n    factors[n] = 1\n    return factors\n\
    end", "    local factors = {}\n    local i = 2\n    while i <= math.sqrt(n) do\n\
    \        if n % i == 0 then\n            factors[i] = factors[i] + 1\n       \
    \     n = n / i\n        end\n        i = i + 1\n    end\n    factors[n] = 1\n\
    \    return factors\nend", "    local factors = {}\n    for i = 1, math.sqrt(n)\
    \ do\n        if n % i == 0 then\n            factors[i] = factors[i] or 0\n \
    \           factors[i] = factors[i] + 1\n        end\n    end\n    return factors\n\
    end", "    local factors = {}\n    for i = 2, math.sqrt(n) do\n        if n %\
    \ i == 0 then\n            factors[i] = factors[i] or 0\n            factors[i]\
    \ = factors[i] + 1\n        end\n    end\n    return factors\nend", "    local\
    \ factors = {}\n    for i = 2, math.sqrt(n) do\n        if n % i == 0 then\n \
    \           factors[i] = factors[i] or 0\n            factors[i] = factors[i]\
    \ + 1\n        end\n    end\n    return factors\nend", "    local factors = {}\n\
    \    for i = 2, math.sqrt(n) do\n        if n % i == 0 then\n            factors[i]\
    \ = factors[i] + 1\n            n = n / i\n        end\n    end\n    factors[n]\
    \ = 1\n    return factors\nend", "    local factors = {}\n    for i = 2, math.sqrt(n)\
    \ + 1 do\n        if n % i == 0 then\n            factors[i] = factors[i] or 0\n\
    \            factors[i] = factors[i] + 1\n        end\n    end\n    return factors\n\
    end", "    local factors = {}\n    for i = 2, math.sqrt(n) + 1 do\n        if\
    \ n % i == 0 then\n            factors[i] = factors[i] + 1\n            n = n\
    \ / i\n        end\n    end\n    factors[n] = 1\n    return factors\nend", " \
    \   local factors = {}\n    local i = 2\n    while i <= math.sqrt(n) do\n    \
    \    if n % i == 0 then\n            factors[i] = factors[i] + 1\n           \
    \ n = n / i\n        end\n        i = i + 1\n    end\n    factors[n] = 1\n   \
    \ return factors\nend", "    local factors = {}\n    local i = 2\n    while i\
    \ <= math.sqrt(n) do\n        if n % i == 0 then\n            factors[i] = factors[i]\
    \ + 1\n            n = n / i\n        end\n        i = i + 1\n    end\n    if\
    \ n > 1 then\n        factors[n] = factors[n] + 1\n    end\n    return factors\n\
    end", "    local factors = {}\n    for i = 2, math.sqrt(n) + 1, 1 do\n       \
    \ if n % i == 0 then\n            factors[i] = factors[i] + 1\n            n =\
    \ n / i\n        end\n    end\n    factors[n] = 1\n    return factors\nend", " \
    \   local factors = {}\n    for i=1, math.sqrt(n) do\n        if n % i == 0 then\n\
    \            factors[i] = factors[i] + 1\n            factors[n/i] = factors[n/i]\
    \ + 1\n        end\n    end\n    return factors\nend", "    local factors = {}\n\
    \    for i = 1, math.sqrt(n) do\n        if n % i == 0 then\n            factors[i]\
    \ = factors[i] + 1\n            n = n / i\n        end\n    end\n    factors[n]\
    \ = 1\n    return factors\nend", "    local factors = {}\n    local i = 2\n  \
    \  while i <= math.sqrt(n) do\n        if n % i == 0 then\n            factors[i]\
    \ = factors[i] + 1\n            n = n / i\n        end\n        i = i + 1\n  \
    \  end\n    factors[n] = 1\n    return factors\nend", "    local factors = {}\n\
    \    local i = 2\n    while i <= math.sqrt(n) do\n        if n % i == 0 then\n\
    \            factors[i] = factors[i] + 1\n            n = n / i\n        end\n\
    \        i = i + 1\n    end\n    if n > 1 then\n        factors[n] = factors[n]\
    \ + 1\n    end\n    return factors\nend", "    local factors = {}\n    local i\
    \ = 2\n    while i <= math.sqrt(n) do\n        if n % i == 0 then\n          \
    \  factors[i] = factors[i] + 1\n            n = n / i\n        end\n        i\
    \ = i + 1\n    end\n    factors[n] = 1\n    return factors\nend", "    local factors\
    \ = {}\n    for i = 2, math.sqrt(n) do\n        if n % i == 0 then\n         \
    \   factors[i] = factors[i] or 0\n            factors[i] = factors[i] + 1\n  \
    \      end\n    end\n    return factors\nend", "    local factors = {}\n    for\
    \ i = 2, math.sqrt(n) do\n        if n % i == 0 then\n            factors[i] =\
    \ factors[i] + 1\n            n = n / i\n        end\n    end\n    factors[n]\
    \ = 1\n    return factors\nend", "    local factors = {}\n    for i = 2, math.sqrt(n)\
    \ do\n        if n % i == 0 then\n            factors[i] = factors[i] + 1\n  \
    \          factors[n / i] = factors[n / i] + 1\n        end\n    end\n    return\
    \ factors\nend", "    local factors = {}\n    for i = 2, math.sqrt(n) + 1, 1 do\n\
    \        if n % i == 0 then\n            factors[i] = factors[i] + 1\n       \
    \     n = n / i\n        end\n    end\n    factors[n] = 1\n    return factors\n\
    end", "    local factors = {}\n    for i = 2, math.sqrt(n) do\n        if n %\
    \ i == 0 then\n            factors[i] = factors[i] or 0\n            factors[i]\
    \ = factors[i] + 1\n        end\n    end\n    return factors\nend", "    local\
    \ factors = {}\n    local i = 2\n    while i <= math.sqrt(n) do\n        if n\
    \ % i == 0 then\n            factors[i] = factors[i] + 1\n            n = n /\
    \ i\n        end\n        i = i + 1\n    end\n    factors[n] = 1\n    return factors\n\
    end", "    local factors = {}\n    for i = 2, math.sqrt(n) do\n        if n %\
    \ i == 0 then\n            factors[i] = factors[i] or 0\n            factors[i]\
    \ = factors[i] + 1\n        end\n    end\n    return factors\nend", "    local\
    \ factors = {}\n    for i = 2, math.sqrt(n) do\n        if n % i == 0 then\n \
    \           factors[i] = factors[i] + 1\n            n = n / i\n        end\n\
    \    end\n    factors[n] = 1\n    return factors\nend", "    local factors = {}\n\
    \    for i = 2, math.sqrt(n) do\n        if n % i == 0 then\n            factors[i]\
    \ = factors[i] + 1\n            n = n / i\n        end\n    end\n    factors[n]\
    \ = 1\n    return factors\nend", "    local factors = {}\n    for i = 2, math.sqrt(n)\
    \ do\n        if n % i == 0 then\n            factors[i] = factors[i] + 1\n  \
    \          n = n / i\n        end\n    end\n    factors[n] = 1\n    return factors\n\
    end", "    local factors = {}\n    for i=1, math.sqrt(n), 2 do\n        if n %\
    \ i == 0 then\n            factors[i] = factors[i] or 0\n            factors[i]\
    \ = factors[i] + 1\n        end\n    end\n    return factors\nend", "    local\
    \ factors = {}\n    for i=1, math.sqrt(n) do\n        if n % i == 0 then\n   \
    \         factors[i] = factors[i] or 0\n            factors[i] = factors[i] +\
    \ 1\n        end\n    end\n    return factors\nend", "    local factors = {}\n\
    \    for i=1, math.sqrt(n) do\n        if n % i == 0 then\n            factors[i]\
    \ = factors[i] or 0\n            factors[i] = factors[i] + 1\n        end\n  \
    \  end\n    return factors\nend", "    local factors = {}\n    for i = 2, math.sqrt(n)\
    \ do\n        if n % i == 0 then\n            factors[i] = factors[i] + 1\n  \
    \          n = n / i\n        end\n    end\n    factors[n] = 1\n    return factors\n\
    end", "    local factors = {}\n    for i=1,math.sqrt(n),1 do\n        if n%i ==\
    \ 0 then\n            factors[i] = factors[i] or 0\n            factors[i] = factors[i]\
    \ + 1\n        end\n    end\n    return factors\nend", "    local factors = {}\n\
    \    for i = 2, math.sqrt(n) + 1, 1 do\n        if n % i == 0 then\n         \
    \   factors[i] = factors[i] + 1\n            n = n / i\n        end\n    end\n\
    \    return factors\nend", "    local factors = {}\n    for i = 2, math.sqrt(n)\
    \ do\n        if n % i == 0 then\n            factors[i] = factors[i] or 0\n \
    \           factors[i] = factors[i] + 1\n        end\n    end\n    return factors\n\
    end", "    local factors = {}\n    for i = 2, math.sqrt(n) do\n        if n %\
    \ i == 0 then\n            factors[i] = factors[i] + 1\n            n = n / i\n\
    \        end\n    end\n    factors[n] = 1\n    return factors\nend", "    local\
    \ factors = {}\n    for i = 2, math.sqrt(n) do\n        if n % i == 0 then\n \
    \           factors[i] = factors[i] + 1\n            factors[n / i] = factors[n\
    \ / i] + 1\n        end\n    end\n    return factors\nend", "    local factors\
    \ = {}\n    for i = 2, math.sqrt(n) do\n        if n % i == 0 then\n         \
    \   factors[i] = factors[i] + 1\n            n = n / i\n        end\n    end\n\
    \    factors[n] = 1\n    return factors\nend", "    local factors = {}\n    for\
    \ i = 2, math.sqrt(n) do\n        if n % i == 0 then\n            factors[i] =\
    \ factors[i] or 0\n            factors[i] = factors[i] + 1\n        end\n    end\n\
    \    return factors\nend", "    local factors = {}\n    for i = 2, math.sqrt(n)\
    \ do\n        if n % i == 0 then\n            factors[i] = factors[i] + 1\n  \
    \          factors[n / i] = factors[n / i] + 1\n        end\n    end\n    return\
    \ factors\nend", "    local factors = {}\n    for i = 2, math.sqrt(n) do\n   \
    \     if n % i == 0 then\n            factors[i] = factors[i] + 1\n          \
    \  factors[n / i] = factors[n / i] + 1\n        end\n    end\n    return factors\n\
    end", "    local factors = {}\n    for i = 2, math.sqrt(n) do\n        if n %\
    \ i == 0 then\n            factors[i] = factors[i] or 0\n            factors[i]\
    \ = factors[i] + 1\n        end\n    end\n    return factors\nend", "    local\
    \ factors = {}\n    for i = 2, math.sqrt(n) do\n        if n % i == 0 then\n \
    \           factors[i] = factors[i] or 0\n            factors[i] = factors[i]\
    \ + 1\n        end\n    end\n    return factors\nend", "    local factors = {}\n\
    \    for i = 2, math.sqrt(n) do\n        if n % i == 0 then\n            factors[i]\
    \ = factors[i] or 0\n            factors[i] = factors[i] + 1\n        end\n  \
    \  end\n    return factors\nend", "    local factors = {}\n    for i = 2, math.sqrt(n)\
    \ do\n        if n % i == 0 then\n            factors[i] = factors[i] or 0\n \
    \           factors[i] = factors[i] + 1\n        end\n    end\n    return factors\n\
    end", "    local factors = {}\n    for i = 2, math.sqrt(n) do\n        if n %\
    \ i == 0 then\n            factors[i] = factors[i] + 1\n            n = n / i\n\
    \        end\n    end\n    factors[n] = 1\n    return factors\nend", "    local\
    \ factors = {}\n    for i = 2, math.sqrt(n) do\n        if n % i == 0 then\n \
    \           factors[i] = factors[i] + 1\n            n = n / i\n        end\n\
    \    end\n    factors[n] = 1\n    return factors\nend", "    local factors = {}\n\
    \    local i = 2\n    while i <= math.sqrt(n) do\n        if n % i == 0 then\n\
    \            factors[i] = factors[i] + 1\n            n = n / i\n        end\n\
    \        i = i + 1\n    end\n    factors[n] = 1\n    return factors\nend", " \
    \   local factors = {}\n    for i=1, math.sqrt(n), 2 do\n        if n % i == 0\
    \ then\n            factors[i] = factors[i] or 0\n            factors[i] = factors[i]\
    \ + 1\n        end\n    end\n    return factors\nend", "    local factors = {}\n\
    \    local i = 2\n    while i <= math.sqrt(n) do\n        if n % i == 0 then\n\
    \            factors[i] = factors[i] + 1\n            n = n / i\n        end\n\
    \        i = i + 1\n    end\n    factors[n] = 1\n    return factors\nend", " \
    \   local factors = {}\n    for i = 2, math.sqrt(n) do\n        if n % i == 0\
    \ then\n            factors[i] = factors[i] or 0\n            factors[i] = factors[i]\
    \ + 1\n        end\n    end\n    return factors\nend", "    local factors = {}\n\
    \    for i = 2, math.sqrt(n) do\n        if n % i == 0 then\n            factors[i]\
    \ = factors[i] or 0\n            factors[i] = factors[i] + 1\n        end\n  \
    \  end\n    return factors\nend", "    local factors = {}\n    for i = 2, math.sqrt(n)\
    \ do\n        if n % i == 0 then\n            factors[i] = factors[i] + 1\n  \
    \          factors[n / i] = factors[n / i] + 1\n        end\n    end\n    return\
    \ factors\nend", "    local factors = {}\n    for i = 2, math.sqrt(n) do\n   \
    \     if n % i == 0 then\n            factors[i] = factors[i] + 1\n          \
    \  factors[n/i] = factors[n/i] + 1\n        end\n    end\n    return factors\n\
    end", "    local factors = {}\n    for i = 2, math.sqrt(n) do\n        if n %\
    \ i == 0 then\n            factors[i] = factors[i] or 0\n            factors[i]\
    \ = factors[i] + 1\n        end\n    end\n    return factors\nend", "    local\
    \ factors = {}\n    for i = 2, math.sqrt(n) do\n        if n % i == 0 then\n \
    \           factors[i] = factors[i] + 1\n            factors[n / i] = factors[n\
    \ / i] + 1\n        end\n    end\n    return factors\nend", "    local factors\
    \ = {}\n    for i = 2, math.sqrt(n) do\n        if n % i == 0 then\n         \
    \   factors[i] = factors[i] or 0\n            factors[i] = factors[i] + 1\n  \
    \      end\n    end\n    return factors\nend", "    local factors = {}\n    for\
    \ i = 2, math.sqrt(n) do\n        if n % i == 0 then\n            factors[i] =\
    \ factors[i] + 1\n            n = n / i\n        end\n    end\n    factors[n]\
    \ = 1\n    return factors\nend", "    local factors = {}\n    for i = 2, math.sqrt(n)\
    \ do\n        if n % i == 0 then\n            factors[i] = factors[i] + 1\n  \
    \          factors[n / i] = factors[n / i] + 1\n        end\n    end\n    return\
    \ factors\nend", "    local factors = {}\n    for i = 1, math.sqrt(n) do\n   \
    \     if n % i == 0 then\n            factors[i] = factors[i] or 0\n         \
    \   factors[i] = factors[i] + 1\n        end\n    end\n    return factors\nend",
  "    local factors = {}\n    for i = 2, math.sqrt(n) do\n        if n % i == 0 then\n\
    \            factors[i] = factors[i] or 0\n            factors[i] = factors[i]\
    \ + 1\n        end\n    end\n    return factors\nend", "    local factors = {}\n\
    \    local i = 2\n    while i <= math.sqrt(n) do\n        if n % i == 0 then\n\
    \            factors[i] = factors[i] + 1\n            n = n / i\n        end\n\
    \        i = i + 1\n    end\n    factors[n] = 1\n    return factors\nend", " \
    \   local factors = {}\n    for i=1, math.sqrt(n) do\n        if n % i == 0 then\n\
    \            factors[i] = factors[i] + 1\n            factors[n/i] = factors[n/i]\
    \ + 1\n        end\n    end\n    return factors\nend", "    local factors = {}\n\
    \    for i = 2, math.sqrt(n) do\n        if n % i == 0 then\n            factors[i]\
    \ = factors[i] or 0\n            factors[i] = factors[i] + 1\n        end\n  \
    \  end\n    return factors\nend", "    local factors = {}\n    for i = 2, math.sqrt(n)\
    \ do\n        if n % i == 0 then\n            factors[i] = factors[i] or 0\n \
    \           factors[i] = factors[i] + 1\n        end\n    end\n    return factors\n\
    end", "    local factors = {}\n    for i = 2, math.sqrt(n) do\n        if n %\
    \ i == 0 then\n            factors[i] = factors[i] or 0\n            factors[i]\
    \ = factors[i] + 1\n        end\n    end\n    return factors\nend", "    local\
    \ factors = {}\n    for i = 2, math.sqrt(n) do\n        if n % i == 0 then\n \
    \           factors[i] = factors[i] or 0\n            factors[i] = factors[i]\
    \ + 1\n        end\n    end\n    return factors\nend", "    local factors = {}\n\
    \    for i = 2, math.sqrt(n) do\n        if n % i == 0 then\n            factors[i]\
    \ = factors[i] + 1\n            n = n / i\n        end\n    end\n    factors[n]\
    \ = 1\n    return factors\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_9_rolling_max
language: lua
prompt: "-- From a given table of integers, generate a table of rolling maximum element\
  \ found until given moment\n-- in the sequence.\n-- >>> rolling_max([1, 2, 3, 2,\
  \ 3, 4, 2])\n-- [1, 2, 3, 3, 3, 4, 4]\nlocal function rolling_max(numbers)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rolling_max\n\
  \    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({1, 2, 3,\
  \ 4}), {1, 2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 1}), {4, 4, 4, 4})\n\
  \    lu.assertEquals(candidate({3, 2, 3, 100, 3}), {3, 3, 3, 100, 100})\nend\n\n\
  os.exit(lu.LuaUnit.run())"
completions: ["    local max_index = 0\n    local max_value = numbers[1]\n    for\
    \ i = 2, #numbers, 1 do\n        if numbers[i] > max_value then\n            max_value\
    \ = numbers[i]\n            max_index = i\n        end\n    end\n    return max_index,\
    \ max_value\nend", "    local max = numbers[1]\n    for i = 2, #numbers, 1 do\n\
    \        if numbers[i] > max then max = numbers[i]\n    end\n    return max\n\
    end", "    local max_index = 1\n    local max_value = numbers[1]\n    for i =\
    \ 2, #numbers, 1 do\n        if numbers[i] > max_value then\n            max_value\
    \ = numbers[i]\n            max_index = i\n        end\n    end\n    return max_index,\
    \ max_value\nend", "    local max = numbers[1]\n    for i = 2, #numbers, 1 do\n\
    \        if numbers[i] > max then max = numbers[i]\n    end\n    return max\n\
    end", "    local max_index = 0\n    local max_value = numbers[1]\n    for i =\
    \ 2, #numbers, 1 do\n        if numbers[i] > max_value then\n            max_value\
    \ = numbers[i]\n            max_index = i\n        end\n    end\n    return {max_index,\
    \ max_value}\nend", "    local result = {}\n    for i=1,#                    \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                      ", "    local max_index\
    \ = 0\n    local max_value = numbers[1]\n    for i = 2, #numbers, 1 do\n     \
    \   if numbers[i] > max_value then\n            max_value = numbers[i]\n     \
    \       max_index = i\n        end\n    end\n    return max_index, max_value\n\
    end", "    local max = 0\n    local result = {}\n    for i=1,#               \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                               ", "    local max_table = {}\n    for i=1,#  \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \          ", "    local max_table = {}\n    local current_max = nil\n    for\
    \ i=1,#", "    local max_index = 0\n    local max_value = numbers[1]\n    for\
    \ i = 2, #numbers, 1 do\n        if numbers[i] > max_value then\n            max_value\
    \ = numbers[i]\n            max_index = i\n        end\n    end\n    return max_index,\
    \ max_value\nend", "    local max_index = 1\n    local max_value = numbers[1]\n\
    \    for i = 2, #numbers, 1 do\n        if numbers[i] > max_value then\n     \
    \       max_value = numbers[i]\n            max_index = i\n        end\n    end\n\
    \    return max_index, max_value\nend", "    local max = 0\n    local max_index\
    \ = 0\n    for i=1,#", "    local max = 0\n    local result = {}\n    for i=1,#\
    \                                                            ", "    local max\
    \ = 0\n    local result = {}\n    for i=1,#                                  \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \            ", "    local max_index = 1\n    local max_value = numbers[1]\n \
    \   for i = 2, #numbers, 1 do\n        if numbers[i] > max_value then\n      \
    \      max_value = numbers[i]\n            max_index = i\n        end\n    end\n\
    \    return max_index, max_value\nend", "    local max_index = 1\n    local max_value\
    \ = numbers[1]\n    for i = 2, #numbers, 1 do\n        if numbers[i] > max_value\
    \ then\n            max_value = numbers[i]\n            max_index = i\n      \
    \  end\n    end\n    return max_index, max_value\nend", "    local max_index =\
    \ 0\n    local max_value = numbers[1]\n    for i = 2, #numbers, 1 do\n       \
    \ if numbers[i] > max_value then\n            max_value = numbers[i]\n       \
    \     max_index = i\n        end\n    end\n    return max_index, max_value\nend",
  "    local max_index = 0\n    local max_value = numbers[1]\n    for i = 2, #numbers,\
    \ 1 do\n        if numbers[i] > max_value then\n            max_value = numbers[i]\n\
    \            max_index = i\n        end\n    end\n    return {max_index, max_value}\n\
    end", "    local max = numbers[1]\n    for i = 2, #numbers, 1 do\n        if numbers[i]\
    \ > max then max = numbers[i]\n    end\n    return max\nend", "    local max =\
    \ numbers[1]\n    for i = 2, #numbers, 1 do\n        if numbers[i] > max then\
    \ max = numbers[i]\n    end\n    return max\nend", "    local max_index = 1\n\
    \    local max_value = numbers[1]\n    for i = 2, #numbers, 1 do\n        if numbers[i]\
    \ > max_value then\n            max_value = numbers[i]\n            max_index\
    \ = i\n        end\n    end\n    return {max_index, max_value}\nend", "    local\
    \ max_index = 1\n    local max_value = numbers[1]\n    for i = 2, #numbers, 1\
    \ do\n        if numbers[i] > max_value then\n            max_value = numbers[i]\n\
    \            max_index = i\n        end\n    end\n    return max_index, max_value\n\
    end", "    local max_index = 1\n    local max_value = numbers[1]\n    for i =\
    \ 2, #numbers, 1 do\n        if numbers[i] > max_value then\n            max_value\
    \ = numbers[i]\n            max_index = i\n        end\n    end\n    return max_index,\
    \ max_value\nend", "    local max_index = 1\n    local max_value = numbers[1]\n\
    \    for i = 2, #numbers, 1 do\n        if numbers[i] > max_value then\n     \
    \       max_value = numbers[i]\n            max_index = i\n        end\n    end\n\
    \    return {max_index, max_value}\nend", "    local max_index = 1\n    local\
    \ max_value = numbers[1]\n    for i = 2, #numbers, 1 do\n        if numbers[i]\
    \ > max_value then\n            max_value = numbers[i]\n            max_index\
    \ = i\n        end\n    end\n    return max_index, max_value\nend", "    local\
    \ result = {}\n    for i=1,#numbers,1 do\n        result[i] = math.max(numbers[i],\
    \ result[i-1])\n    end\n    return result\nend", "    local max_index = 1\n \
    \   local max_value = numbers[1]\n    for i = 2, #numbers, 1 do\n        if numbers[i]\
    \ > max_value then\n            max_value = numbers[i]\n            max_index\
    \ = i\n        end\n    end\n    return max_index, max_value\nend", "    local\
    \ max = numbers[1]\n    for i = 2, #numbers, 1 do\n        max = math.max(max,\
    \ numbers[i])\n    end\n    return max\nend", "    local max_table = {}\n    for\
    \ i = 1, #numbers, 1 do\n        max_table[i] = numbers[i]\n        for j = i\
    \ + 1, #numbers, 1 do\n            if max_table[i] < numbers[j] then\n       \
    \         max_table[i] = numbers[j]\n            end\n        end\n    end\n \
    \   return max_table\nend", "    local max_index = 0\n    local max_value = numbers[1]\n\
    \    for i = 2, #numbers, 1 do\n        if numbers[i] > max_value then\n     \
    \       max_value = numbers[i]\n            max_index = i\n        end\n    end\n\
    \    return max_index, max_value\nend", "    local max_index = 0\n    local max_value\
    \ = numbers[1]\n    for i = 2, #numbers, 1 do\n        if numbers[i] > max_value\
    \ then\n            max_value = numbers[i]\n            max_index = i\n      \
    \  end\n    end\n    return max_index, max_value\nend", "    local max_index =\
    \ 0\n    local max_value = numbers[1]\n    for i = 2, #numbers, 1 do\n       \
    \ if numbers[i] > max_value then\n            max_value = numbers[i]\n       \
    \     max_index = i\n        end\n    end\n    return max_index, max_value\nend",
  "    local max = numbers[1]\n    for i = 2, #numbers, 1 do\n        if numbers[i]\
    \ > max then max = numbers[i]\n    end\n    return max\nend", "    local max_index\
    \ = 1\n    local max_value = numbers[1]\n    for i = 2, #numbers, 1 do\n     \
    \   if numbers[i] > max_value then\n            max_value = numbers[i]\n     \
    \       max_index = i\n        end\n    end\n    return max_index, max_value\n\
    end", "    local max_index = 0\n    local max_value = numbers[1]\n    for i =\
    \ 2, #numbers, 1 do\n        if numbers[i] > max_value then\n            max_value\
    \ = numbers[i]\n            max_index = i\n        end\n    end\n    return max_value,\
    \ max_index\nend", "    local max_index = 1\n    local max_value = numbers[1]\n\
    \    for i = 2, #numbers, 1 do\n        if numbers[i] > max_value then\n     \
    \       max_value = numbers[i]\n            max_index = i\n        end\n    end\n\
    \    return {max_index, max_value}\nend", "    local max_index = 0\n    local\
    \ max_value = numbers[1]\n    for i = 2, #numbers, 1 do\n        if numbers[i]\
    \ > max_value then\n            max_value = numbers[i]\n            max_index\
    \ = i\n        end\n    end\n    return max_index, max_value\nend", "    local\
    \ max = numbers[1]\n    for i = 2, #numbers, 1 do\n        if numbers[i] > max\
    \ then max = numbers[i]\n    end\n    return max\nend", "    local max_index =\
    \ 1\n    local max_value = numbers[1]\n    for i = 2, #numbers, 1 do\n       \
    \ if numbers[i] > max_value then\n            max_value = numbers[i]\n       \
    \     max_index = i\n        end\n    end\n    return max_value, max_index\nend",
  "    local max = 0\n    local result = {}\n    for i=1,#numbers,1 do\n        max\
    \ = math.max(max, numbers[i])\n        result[i] = max\n    end\n    return result\n\
    end", "    local max_index = 1\n    local max_value = numbers[1]\n    for i =\
    \ 2, #numbers, 1 do\n        if numbers[i] > max_value then\n            max_value\
    \ = numbers[i]\n            max_index = i\n        end\n    end\n    return max_index,\
    \ max_value\nend", "    local max_index = 1\n    local max_value = numbers[1]\n\
    \    for i = 2, #numbers, 1 do\n        if numbers[i] > max_value then\n     \
    \       max_value = numbers[i]\n            max_index = i\n        end\n    end\n\
    \    return max_index, max_value\nend", "    local max_index = 0\n    local max_value\
    \ = numbers[1]\n    for i = 2, #numbers, 1 do\n        if numbers[i] > max_value\
    \ then\n            max_value = numbers[i]\n            max_index = i\n      \
    \  end\n    end\n    return {max_value, max_index}\nend", "    local max_index\
    \ = 1\n    local max_value = numbers[1]\n    for i = 2, #numbers, 1 do\n     \
    \   if numbers[i] > max_value then\n            max_value = numbers[i]\n     \
    \       max_index = i\n        end\n    end\n    return {max_index, max_value}\n\
    end", "    local max_index = 0\n    local max_value = numbers[1]\n    for i =\
    \ 2, #numbers, 1 do\n        if numbers[i] > max_value then\n            max_value\
    \ = numbers[i]\n            max_index = i\n        end\n    end\n    return max_index,\
    \ max_value\nend", "    local result = {}\n    for i=1,#numbers,1 do\n       \
    \ result[i] = math.max(numbers[i], result[i-1])\n    end\n    return result\n\
    end", "    local max_table = {}\n    for i=1,#numbers do\n        if numbers[i]\
    \ > max_table[#max_table+1] then\n            max_table[#max_table+1] = numbers[i]\n\
    \        end\n    end\n    return max_table\nend", "    local max_index = 0\n\
    \    local max_value = 0\n    for i = 1, #numbers, 1 do\n        if numbers[i]\
    \ > max_value then\n            max_value = numbers[i]\n            max_index\
    \ = i\n        end\n    end\n    return max_index, max_value\nend", "    local\
    \ table = {}\n    for i=1,#numbers,1 do\n        table[i] = math.max(table[i-1],\
    \ numbers[i])\n    end\n    return table\nend", "    local result = {}\n    for\
    \ i=1,#numbers,1 do\n        result[i] = math.max(numbers[i], result[i-1])\n \
    \   end\n    return result\nend", "    local max = numbers[1]\n    for i = 2,\
    \ #numbers, 1 do\n        if numbers[i] > max then max = numbers[i]\n    end\n\
    \    return max\nend", "    local max_index = 1\n    local max_value = numbers[1]\n\
    \    for i = 2, #numbers, 1 do\n        if numbers[i] > max_value then\n     \
    \       max_value = numbers[i]\n            max_index = i\n        end\n    end\n\
    \    return max_index, max_value\nend", "    local max_index = 0\n    local max_value\
    \ = numbers[1]\n    for i = 2, #numbers, 1 do\n        if numbers[i] > max_value\
    \ then\n            max_value = numbers[i]\n            max_index = i\n      \
    \  end\n    end\n    return {max_index, max_value}\nend", "    local max = numbers[1]\n\
    \    for i = 2, #numbers, 1 do\n        if numbers[i] > max then max = numbers[i]\n\
    \    end\n    return max\nend", "    local max_table = {}\n    for i=1,#numbers,1\
    \ do\n        local max = numbers[i]\n        for j=i+1,#numbers,1 do\n      \
    \      if max < numbers[j] then\n                max = numbers[j]\n          \
    \  end\n        end\n        max_table[#max_table+1] = max\n    end\n    return\
    \ max_table\nend", "    local max_table = {}\n    for i=1,#numbers do\n      \
    \  if numbers[i] > max_table[i] then\n            max_table[i] = numbers[i]\n\
    \        end\n    end\n    return max_table\nend", "    local max = numbers[1]\n\
    \    for i = 2, #numbers, 1 do\n        if numbers[i] > max then max = numbers[i]\n\
    \    end\n    return max\nend", "    local result = {}\n    for i=1,#numbers,1\
    \ do\n        result[i] = math.max(numbers[i], result[i-1])\n    end\n    return\
    \ result\nend", "    local max = numbers[1]\n    for i = 2, #numbers, 1 do\n \
    \       if numbers[i] > max then max = numbers[i]\n    end\n    return max\nend",
  "    local max_table = {}\n    for i=1,#numbers do\n        if numbers[i] > max_table[#max_table]\
    \ then\n            max_table[#max_table+1] = numbers[i]\n        end\n      \
    \  max_table[#max_table] = max_table[#max_table] or numbers[i]\n    end\n    return\
    \ max_table\nend", "    local max_index = 1\n    local max_value = numbers[1]\n\
    \    for i = 2, #numbers, 1 do\n        if numbers[i] > max_value then\n     \
    \       max_value = numbers[i]\n            max_index = i\n        end\n    end\n\
    \    return max_index, max_value\nend", "    local max = numbers[1]\n    for i\
    \ = 2, #numbers, 1 do\n        if numbers[i] > max then max = numbers[i]\n   \
    \ end\n    return max\nend", "    local max_index = 1\n    local max_value = numbers[1]\n\
    \    for i = 2, #numbers, 1 do\n        if numbers[i] > max_value then\n     \
    \       max_value = numbers[i]\n            max_index = i\n        end\n    end\n\
    \    return max_value, max_index\nend", "    local max_table = {}\n    for i=1,#numbers\
    \ do\n        if numbers[i] > max_table[i-1] then\n            max_table[i] =\
    \ numbers[i]\n        end\n    end\n    return max_table\nend", "    local max_index\
    \ = 0\n    local max_value = numbers[1]\n    for i = 2, #numbers, 1 do\n     \
    \   if numbers[i] > max_value then\n            max_value = numbers[i]\n     \
    \       max_index = i\n        end\n    end\n    return max_index, max_value\n\
    end", "    local max_table = {}\n    for i=1,#numbers do\n        max_table[i]\
    \ = math.max(max_table[i-1], numbers[i])\n    end\n    return max_table\nend",
  "    local max = numbers[1]\n    for i = 2, #numbers, 1 do\n        if numbers[i]\
    \ > max then max = numbers[i]\n    end\n    return max\nend", "    local max_index\
    \ = 0\n    local max_value = numbers[1]\n    for i = 2, #numbers, 1 do\n     \
    \   if numbers[i] > max_value then\n            max_value = numbers[i]\n     \
    \       max_index = i\n        end\n    end\n    return max_index, max_value\n\
    end", "    local max_index = 0\n    local max_value = numbers[1]\n    for i =\
    \ 2, #numbers, 1 do\n        if numbers[i] > max_value then\n            max_value\
    \ = numbers[i]\n            max_index = i\n        end\n    end\n    return {max_value,\
    \ max_index}\nend", "    local max_index = 1\n    local max_value = numbers[1]\n\
    \    for i = 2, #numbers, 1 do\n        if numbers[i] > max_value then\n     \
    \       max_value = numbers[i]\n            max_index = i\n        end\n    end\n\
    \    return max_value, max_index\nend", "    local max_index = 0\n    local max_value\
    \ = numbers[1]\n    for i = 2, #numbers, 1 do\n        if numbers[i] > max_value\
    \ then\n            max_value = numbers[i]\n            max_index = i\n      \
    \  end\n    end\n    return {max_value, max_index}\nend", "    local max = numbers[1]\n\
    \    for i = 2, #numbers, 1 do\n        if numbers[i] > max then max = numbers[i]\n\
    \    end\n    return max\nend", "    local max = numbers[1]\n    for i = 2, #numbers,\
    \ 1 do\n        if numbers[i] > max then max = numbers[i]\n    end\n    return\
    \ max\nend", "    local result = {}\n    for i=1,#numbers,1 do\n        result[i]\
    \ = math.max(numbers[i], result[i-1])\n    end\n    return result\nend", "   \
    \ local max_index = 1\n    local max_value = numbers[1]\n    for i = 2, #numbers,\
    \ 1 do\n        if numbers[i] > max_value then\n            max_value = numbers[i]\n\
    \            max_index = i\n        end\n    end\n    return max_index, max_value\n\
    end", "    local max_table = {}\n    local max_index = 0\n    for i = 1, #numbers,\
    \ 1 do\n        if numbers[i] > max_table[max_index] then\n            max_table[max_index]\
    \ = numbers[i]\n            max_index = max_index + 1\n        end\n    end\n\
    \    return max_table\nend", "    local max_table = {}\n    for i=1,#numbers do\n\
    \        max_table[i] = math.max(numbers[i], max_table[i-1])\n    end\n    return\
    \ max_table\nend", "    local result = {}\n    for i=1,#numbers,1 do\n       \
    \ result[i] = math.max(numbers[i], result[i-1])\n    end\n    return result\n\
    end", "    local max = numbers[1]\n    for i = 2, #numbers, 1 do\n        if numbers[i]\
    \ > max then max = numbers[i]\n    end\n    return max\nend", "    local max =\
    \ numbers[1]\n    for i = 2, #numbers, 1 do\n        if numbers[i] > max then\
    \ max = numbers[i]\n    end\n    return max\nend", "    local max_table = {}\n\
    \    for i=1,#numbers do\n        if numbers[i] > max_table[#max_table] then\n\
    \            max_table[#max_table+1] = numbers[i]\n        end\n        max_table[#max_table]\
    \ = max_table[#max_table] or numbers[i]\n    end\n    return max_table\nend",
  "    local max_index = 1\n    local max_value = numbers[1]\n    for i = 2, #numbers,\
    \ 1 do\n        if numbers[i] > max_value then\n            max_value = numbers[i]\n\
    \            max_index = i\n        end\n    end\n    return max_index, max_value\n\
    end", "    local max_index = 1\n    local max_value = numbers[1]\n    for i =\
    \ 2, #numbers, 1 do\n        if numbers[i] > max_value then\n            max_value\
    \ = numbers[i]\n            max_index = i\n        end\n    end\n    return {max_index,\
    \ max_value}\nend", "    local max_index = 0\n    local max_value = numbers[1]\n\
    \    for i = 2, #numbers, 1 do\n        if numbers[i] > max_value then\n     \
    \       max_value = numbers[i]\n            max_index = i\n        end\n    end\n\
    \    return max_index, max_value\nend", "    local max_index = 0\n    local max_value\
    \ = numbers[1]\n    for i = 2, #numbers, 1 do\n        if numbers[i] > max_value\
    \ then\n            max_value = numbers[i]\n            max_index = i\n      \
    \  end\n    end\n    return max_index, max_value\nend", "    local max_table =\
    \ {}\n    local max_index = {}\n    for i = 1, #numbers, 1 do\n        max_index[i]\
    \ = 1\n        max_table[1] = numbers[i]\n    end\n    for i = 2, #numbers, 1\
    \ do\n        for j = 1, #numbers, i do\n            if numbers[j] > max_table[i-1]\
    \ then\n                max_index[i] = j\n                max_table[i] = numbers[j]\n\
    \            end\n        end\n    end\n    return max_table\nend", "    local\
    \ max_index = 1\n    local max_value = numbers[1]\n    for i = 2, #numbers, 1\
    \ do\n        if numbers[i] > max_value then\n            max_value = numbers[i]\n\
    \            max_index = i\n        end\n    end\n    return max_index, max_value\n\
    end", "    local max_index = 0\n    local max_value = numbers[1]\n    for i =\
    \ 2, #numbers, 1 do\n        if numbers[i] > max_value then\n            max_value\
    \ = numbers[i]\n            max_index = i\n        end\n    end\n    return max_index,\
    \ max_value\nend", "    local max_table = {}\n    for i=1,#numbers do\n      \
    \  if numbers[i] > max_table[#max_table] then\n            max_table[#max_table+1]\
    \ = numbers[i]\n        end\n    end\n    return max_table\nend", "    local max_index\
    \ = 0\n    local max_value = 0\n    for i = 1, #numbers, 1 do\n        if numbers[i]\
    \ > max_value then\n            max_value = numbers[i]\n            max_index\
    \ = i\n        end\n    end\n    return max_index, max_value\nend", "    local\
    \ result = {}\n    for i=1,#numbers,1 do\n        result[i] = math.max(numbers[i],\
    \ result[i-1])\n    end\n    return result\nend", "    local max_index = 1\n \
    \   local max_value = numbers[1]\n    for i = 2, #numbers, 1 do\n        if numbers[i]\
    \ > max_value then\n            max_value = numbers[i]\n            max_index\
    \ = i\n        end\n    end\n    return {max_index, max_value}\nend", "    local\
    \ max = numbers[1]\n    for i = 2, #numbers, 1 do\n        if numbers[i] > max\
    \ then max = numbers[i]\n    end\n    return max\nend", "    local max_index =\
    \ 0\n    local max_value = numbers[1]\n    for i = 2, #numbers, 1 do\n       \
    \ if numbers[i] > max_value then\n            max_value = numbers[i]\n       \
    \     max_index = i\n        end\n    end\n    return {max_index, max_value}\n\
    end", "    local max = 0\n    local max_index = 0\n    for i = 1, #numbers, 1\
    \ do\n        if numbers[i] > max then\n            max = numbers[i]\n       \
    \     max_index = i\n        end\n    end\n    return max_index\nend", "    local\
    \ max_index = 1\n    local max_value = numbers[1]\n    for i = 2, #numbers, 1\
    \ do\n        if numbers[i] > max_value then\n            max_value = numbers[i]\n\
    \            max_index = i\n        end\n    end\n    return max_index, max_value\n\
    end", "    local result = {}\n    for i = 1, #numbers, 1 do\n        result[i]\
    \ = math.max(numbers[i], result[i-1] if i > 1 else numbers[i])\n    end\n    return\
    \ result\nend", "    local max_index = 0\n    local max_value = numbers[1]\n \
    \   for i = 2, #numbers, 1 do\n        if numbers[i] > max_value then\n      \
    \      max_value = numbers[i]\n            max_index = i\n        end\n    end\n\
    \    return max_value, max_index\nend", "    local max = numbers[1]\n    for i\
    \ = 2, #numbers, 1 do\n        if numbers[i] > max then max = numbers[i]\n   \
    \ end\n    return max\nend", "    local max = numbers[1]\n    for i = 2, #numbers,\
    \ 1 do\n        if numbers[i] > max then max = numbers[i]\n    end\n    return\
    \ max\nend", "    local max_index = 1\n    local max_value = numbers[1]\n    for\
    \ i = 2, #numbers, 1 do\n        if numbers[i] > max_value then\n            max_value\
    \ = numbers[i]\n            max_index = i\n        end\n    end\n    return max_index,\
    \ max_value\nend", "    local result = {}\n    for i=1,#numbers,1 do\n       \
    \ result[i] = math.max(numbers[i], result[i-1])\n    end\n    return result\n\
    end", "    local max_index = 1\n    local max_value = numbers[1]\n    for i =\
    \ 2, #numbers, 1 do\n        if numbers[i] > max_value then\n            max_value\
    \ = numbers[i]\n            max_index = i\n        end\n    end\n    return {max_index,\
    \ max_value}\nend", "    local result = {}\n    for i=1,#numbers,1 do\n      \
    \  result[i] = math.max(numbers[i], result[i-1])\n    end\n    return result\n\
    end", "    local max_index = 0\n    local max_value = numbers[1]\n    for i =\
    \ 2, #numbers, 1 do\n        if numbers[i] > max_value then\n            max_value\
    \ = numbers[i]\n            max_index = i\n        end\n    end\n    return {max_index,\
    \ max_value}\nend", "    local max = numbers[1]\n    for i = 2, #numbers, 1 do\n\
    \        if numbers[i] > max then max = numbers[i]\n    end\n    return max\n\
    end", "    local max_index = 0\n    local max_value = numbers[1]\n    for i =\
    \ 2, #numbers, 1 do\n        if numbers[i] > max_value then\n            max_value\
    \ = numbers[i]\n            max_index = i\n        end\n    end\n    return max_value,\
    \ max_index\nend", "    local result = {}\n    for i=1,#numbers,1 do\n       \
    \ result[i] = math.max(numbers[i], result[i-1] if i > 1 else numbers[1])\n   \
    \ end\n    return result\nend", "    local result = {}\n    for i = 1, #numbers,\
    \ 1 do\n        result[i] = math.max(numbers[i], result[i - 1])\n    end\n   \
    \ return result\nend", "    local max = 0\n    local max_index = 0\n    for i\
    \ = 1, #numbers, 1 do\n        if numbers[i] > max then\n            max = numbers[i]\n\
    \            max_index = i\n        end\n    end\n    return max_index\nend",
  "    local max = 0\n    local result = {}\n    for i = 1, #numbers, 1 do\n     \
    \   if numbers[i] > max then\n            max = numbers[i]\n            result\
    \ = {max}\n        else\n            if max == numbers[i] then\n             \
    \   result = result .. {max}\n            else\n                result = result\
    \ .. {numbers[i]}\n        end\n    end\n    return result\nend", "    local max_index\
    \ = 0\n    local max_value = 0\n    for i = 1, #numbers, 1 do\n        if numbers[i]\
    \ > max_value then\n            max_value = numbers[i]\n            max_index\
    \ = i\n        end\n    end\n    return max_index\nend", "    local max_index\
    \ = 0\n    local max_value = numbers[1]\n    for i = 2, #numbers, 1 do\n     \
    \   if numbers[i] > max_value then\n            max_value = numbers[i]\n     \
    \       max_index = i\n        end\n    end\n    return max_index, max_value\n\
    end", "    local max_table = {}\n    for i = 1, #numbers, 1 do\n        max_table[i]\
    \ = numbers[i]\n        for j = i + 1, #numbers, 1 do\n            if max_table[j]\
    \ < numbers[j] then\n                max_table[i] = numbers[i]\n             \
    \   max_table[j] = numbers[j]\n            end\n        end\n    end\n    return\
    \ max_table\nend", "    local result = {}\n    for i = 1, #numbers, 1 do\n   \
    \     result[i] = math.max(numbers[i], result[i-1] if i > 1 else numbers[1])\n\
    \    end\n    return result\nend", "    local max = 0\n    local result = {}\n\
    \    for i=1,#numbers,1 do\n        if numbers[i] > max then\n            max\
    \ = numbers[i]\n            result = {max}\n        else\n            if max >\
    \ numbers[i] then\n                result = {max, numbers[i]}\n            else\n\
    \                result = {numbers[i], max}\n        end\n    end\n    return\
    \ result\nend", "    local max_index = 1\n    local max_value = numbers[1]\n \
    \   for i = 2, #numbers, 1 do\n        if numbers[i] > max_value then\n      \
    \      max_value = numbers[i]\n            max_index = i\n        end\n    end\n\
    \    return max_value, max_index\nend", "    local table = {}\n    for i = 1,\
    \ #numbers, 1 do\n        table[i] = math.max(table[i-1], numbers[i])\n    end\n\
    \    return table\nend", "    local max_table = {}\n    for i=1,#numbers do\n\
    \        if numbers[i] > max_table[#max_table] then\n            max_table[#max_table+1]\
    \ = numbers[i]\n        end\n    end\n    return max_table\nend", "    local max_index\
    \ = 1\n    local max_value = numbers[1]\n    for i = 2, #numbers, 1 do\n     \
    \   if numbers[i] > max_value then\n            max_value = numbers[i]\n     \
    \       max_index = i\n        end\n    end\n    return max_index, max_value\n\
    end", "    local max_index = 1\n    local max_value = numbers[1]\n    for i =\
    \ 2, #numbers, 1 do\n        if numbers[i] > max_value then\n            max_value\
    \ = numbers[i]\n            max_index = i\n        end\n    end\n    return {max_index,\
    \ max_value}\nend", "    local max_table = {}\n    for i=1,#numbers,1 do\n   \
    \     max_table[i] = numbers[i]\n        for j=i+1,#numbers,1 do\n           \
    \ if max_table[i] < numbers[j] then\n                max_table[i] = numbers[j]\n\
    \            end\n        end\n    end\n    return max_table\nend", "    local\
    \ max_index = 1\n    local max_value = numbers[1]\n    for i = 2, #numbers, 1\
    \ do\n        if numbers[i] > max_value then\n            max_value = numbers[i]\n\
    \            max_index = i\n        end\n    end\n    return max_index, max_value\n\
    end", "    local max_index = 1\n    local max_value = numbers[1]\n    for i =\
    \ 2, #numbers, 1 do\n        if numbers[i] > max_value then\n            max_value\
    \ = numbers[i]\n            max_index = i\n        end\n    end\n    return max_index,\
    \ max_value\nend", "    local max_table = {}\n    for i=1,#numbers do\n      \
    \  if numbers[i] > max_table[i] then\n            max_table[i] = numbers[i]\n\
    \        end\n    end\n    return max_table\nend", "    local max_index = 0\n\
    \    local max_value = numbers[1]\n    for i = 2, #numbers, 1 do\n        if numbers[i]\
    \ > max_value then\n            max_value = numbers[i]\n            max_index\
    \ = i\n        end\n    end\n    return max_index, max_value\nend", "    local\
    \ max_table = {}\n    for i = 1, #numbers do\n        if numbers[i] > max_table[#max_table\
    \ + 1] then\n            max_table[#max_table + 1] = numbers[i]\n        end\n\
    \        if numbers[i] > max_table[#max_table] then\n            max_table[#max_table]\
    \ = numbers[i]\n        end\n    end\n    return max_table\nend", "    local max\
    \ = numbers[1]\n    for i = 2, #numbers, 1 do\n        max = math.max(max, numbers[i])\n\
    \    end\n    return max\nend", "    local max_index = 1\n    local max_value\
    \ = numbers[1]\n    for i = 2, #numbers, 1 do\n        if numbers[i] > max_value\
    \ then\n            max_value = numbers[i]\n            max_index = i\n      \
    \  end\n    end\n    return max_index, max_value\nend", "    local max_table =\
    \ {}\n    local current_max = nil\n    local current_index = nil\n    for i =\
    \ 1, #numbers, 1 do\n        if current_max == nil or numbers[i] > current_max\
    \ then\n            current_max = numbers[i]\n            current_index = i\n\
    \        end\n        table.insert(max_table, current_max)\n    end\n    return\
    \ max_table\nend", "    local max_index = 0\n    local max_value = numbers[1]\n\
    \    for i = 2, #numbers, 1 do\n        if numbers[i] > max_value then\n     \
    \       max_value = numbers[i]\n            max_index = i\n        end\n    end\n\
    \    return max_index, max_value\nend", "    local max = numbers[1]\n    for i\
    \ = 2, #numbers, 1 do\n        if numbers[i] > max then max = numbers[i]\n   \
    \ end\n    return max\nend", "    local max_index = 0\n    local max_value = numbers[1]\n\
    \    for i = 2, #numbers, 1 do\n        if numbers[i] > max_value then\n     \
    \       max_value = numbers[i]\n            max_index = i\n        end\n    end\n\
    \    return {max_index, max_value}\nend", "    local max_index = 0\n    local\
    \ max_value = numbers[1]\n    for i = 2, #numbers, 1 do\n        if numbers[i]\
    \ > max_value then\n            max_value = numbers[i]\n            max_index\
    \ = i\n        end\n    end\n    return max_index, max_value\nend", "    local\
    \ max = numbers[1]\n    for i = 2, #numbers, 1 do\n        if numbers[i] > max\
    \ then max = numbers[i]\n    end\n    return max\nend", "    local max_table =\
    \ {}\n    for i=1,#numbers do\n        if numbers[i] > max_table[#max_table] then\n\
    \            max_table[#max_table+1] = numbers[i]\n        end\n        max_table[#max_table]\
    \ = max_table[#max_table] or numbers[i]\n    end\n    return max_table\nend",
  "    local result = {}\n    for i=1,#numbers,1 do\n        result[i] = math.max(numbers[i],\
    \ result[i-1])\n    end\n    return result\nend", "    local max_index = 1\n \
    \   local max_value = numbers[1]\n    for i = 2, #numbers, 1 do\n        if numbers[i]\
    \ > max_value then\n            max_value = numbers[i]\n            max_index\
    \ = i\n        end\n    end\n    return max_index, max_value\nend", "    local\
    \ max_index = 1\n    local max_value = numbers[1]\n    for i = 2, #numbers, 1\
    \ do\n        if numbers[i] > max_value then\n            max_value = numbers[i]\n\
    \            max_index = i\n        end\n    end\n    return max_index, max_value\n\
    end", "    local max = 0\n    local result = {}\n    for i = 1, #numbers, 1 do\n\
    \        max = math.max(max, numbers[i])\n        result[i] = max\n    end\n \
    \   return result\nend", "    local max_index = 1\n    local max_value = numbers[1]\n\
    \    for i = 2, #numbers, 1 do\n        if numbers[i] > max_value then\n     \
    \       max_value = numbers[i]\n            max_index = i\n        end\n    end\n\
    \    return max_index, max_value\nend", "    local result = {}\n    for i=1,#numbers,1\
    \ do\n        result[i] = math.max(numbers[i], result[i-1])\n    end\n    return\
    \ result\nend", "    local max_index = 1\n    local max_value = numbers[1]\n \
    \   for i = 2, #numbers, 1 do\n        if numbers[i] > max_value then\n      \
    \      max_value = numbers[i]\n            max_index = i\n        end\n    end\n\
    \    return max_value, max_index\nend", "    local max_index = 1\n    local max_value\
    \ = numbers[1]\n    for i = 2, #numbers, 1 do\n        if numbers[i] > max_value\
    \ then\n            max_value = numbers[i]\n            max_index = i\n      \
    \  end\n    end\n    return max_index, max_value\nend", "    local max_index =\
    \ 1\n    local max_value = numbers[1]\n    for i = 2, #numbers, 1 do\n       \
    \ if numbers[i] > max_value then\n            max_value = numbers[i]\n       \
    \     max_index = i\n        end\n    end\n    return max_index, max_value\nend",
  "    local max = numbers[1]\n    for i = 2, #numbers, 1 do\n        if numbers[i]\
    \ > max then max = numbers[i]\n    end\n    return max\nend", "    local max_index\
    \ = 1\n    local max_value = numbers[1]\n    for i = 2, #numbers, 1 do\n     \
    \   if numbers[i] > max_value then\n            max_value = numbers[i]\n     \
    \       max_index = i\n        end\n    end\n    return max_index, max_value\n\
    end", "    local max_index = 0\n    local max_value = numbers[1]\n    for i =\
    \ 2, #numbers, 1 do\n        if numbers[i] > max_value then\n            max_value\
    \ = numbers[i]\n            max_index = i\n        end\n    end\n    return max_index,\
    \ max_value\nend", "    local max = numbers[1]\n    for i = 2, #numbers, 1 do\n\
    \        if numbers[i] > max then max = numbers[i]\n    end\n    return max\n\
    end", "    local max_table = {}\n    for i = 1, #numbers, 1 do\n        max_table[i]\
    \ = numbers[i]\n        for j = i + 1, #numbers, 1 do\n            if numbers[j]\
    \ > max_table[i] then\n                max_table[i] = numbers[j]\n           \
    \ end\n        end\n    end\n    return max_table\nend", "    local max = 0\n\
    \    local result = {}\n    for i=1,#numbers,1 do\n        if numbers[i] > max\
    \ then\n            max = numbers[i]\n        end\n        result[#result+1] =\
    \ max\n    end\n    return result\nend", "    local max_index = 1\n    local max_value\
    \ = numbers[1]\n    for i = 2, #numbers, 1 do\n        if numbers[i] > max_value\
    \ then\n            max_value = numbers[i]\n            max_index = i\n      \
    \  end\n    end\n    return max_index, max_value\nend", "    local max = numbers[1]\n\
    \    for i = 2, #numbers, 1 do\n        if numbers[i] > max then max = numbers[i]\n\
    \    end\n    return max\nend", "    local max_index = 0\n    local max_value\
    \ = numbers[1]\n    for i = 2, #numbers, 1 do\n        if numbers[i] > max_value\
    \ then\n            max_value = numbers[i]\n            max_index = i\n      \
    \  end\n    end\n    return max_index, max_value\nend", "    local max_index =\
    \ 1\n    local max_value = numbers[1]\n    for i = 2, #numbers, 1 do\n       \
    \ if numbers[i] > max_value then\n            max_value = numbers[i]\n       \
    \     max_index = i\n        end\n    end\n    return max_index, max_value\nend",
  "    local max_table = {}\n    for i=1,#numbers do\n        if numbers[i] > max_table[i]\
    \ then\n            max_table[i] = numbers[i]\n        end\n    end\n    return\
    \ max_table\nend", "    local max_index = 1\n    local max_value = numbers[1]\n\
    \    for i = 2, #numbers, 1 do\n        if numbers[i] > max_value then\n     \
    \       max_value = numbers[i]\n            max_index = i\n        end\n    end\n\
    \    return max_index, max_value\nend", "    local max_index = 1\n    local max_value\
    \ = numbers[1]\n    for i = 2, #numbers, 1 do\n        if numbers[i] > max_value\
    \ then\n            max_value = numbers[i]\n            max_index = i\n      \
    \  end\n    end\n    return max_index, max_value\nend", "    local max_table =\
    \ {}\n    for i = 1, #numbers do\n        max_table[i] = math.max(numbers[i],\
    \ max_table[i-1])\n    end\n    return max_table\nend", "    local max = numbers[1]\n\
    \    for i = 2, #numbers, 1 do\n        if numbers[i] > max then max = numbers[i]\n\
    \    end\n    return max\nend", "    local table = {}\n    for i=1,#numbers do\n\
    \        table[i] = math.max(table[i-1], numbers[i])\n    end\n    return table\n\
    end", "    local max_table = {}\n    for i=1,#numbers do\n        local max =\
    \ numbers[i]\n        for j=i+1,#numbers do\n            if max < numbers[j] then\n\
    \                max = numbers[j]\n            end\n        end\n        max_table[i]\
    \ = max\n    end\n    return max_table\nend", "    local max_index = 1\n    local\
    \ max_value = numbers[1]\n    for i = 2, #numbers, 1 do\n        if numbers[i]\
    \ > max_value then\n            max_value = numbers[i]\n            max_index\
    \ = i\n        end\n    end\n    return {max_index, max_value}\nend", "    local\
    \ max_index = 0\n    local max_value = numbers[1]\n    for i = 2, #numbers, 1\
    \ do\n        if numbers[i] > max_value then\n            max_value = numbers[i]\n\
    \            max_index = i\n        end\n    end\n    return max_index, max_value\n\
    end", "    local max = 0\n    local i = 1\n    while i <= #numbers do\n      \
    \  if numbers[i] > max then max = numbers[i]\n        i = i + 1\n    end\n   \
    \ return max\nend", "    local max_index = 1\n    local max_value = numbers[1]\n\
    \    for i = 2, #numbers, 1 do\n        if numbers[i] > max_value then\n     \
    \       max_value = numbers[i]\n            max_index = i\n        end\n    end\n\
    \    return max_index, max_value\nend", "    local max_index = 0\n    local max_value\
    \ = 0\n    for i = 1, #numbers, 1 do\n        if numbers[i] > max_value then\n\
    \            max_value = numbers[i]\n            max_index = i\n        end\n\
    \    end\n    return max_value, max_index\nend", "    local result = {}\n    for\
    \ i=1,#numbers,1 do\n        result[i] = math.max(numbers[i], result[i-1])\n \
    \   end\n    return result\nend", "    local max = numbers[1]\n    for i = 2,\
    \ #numbers, 1 do\n        max = max if max > numbers[i] else numbers[i]\n    end\n\
    \    return max\nend", "    local max_index = 0\n    local max_value = numbers[1]\n\
    \    for i = 2, #numbers, 1 do\n        if numbers[i] > max_value then\n     \
    \       max_value = numbers[i]\n            max_index = i\n        end\n    end\n\
    \    return max_index, max_value\nend", "    local result = {}\n    for i = 1,\
    \ #numbers, 1 do\n        result[i] = math.max(numbers[i], result[i-1])\n    end\n\
    \    return result\nend", "    local result = {}\n    for i=1,#numbers,1 do\n\
    \        result[i] = math.max(numbers[i], result[i-1])\n    end\n    return result\n\
    end", "    local max_index = 1\n    local max_value = numbers[1]\n    for i =\
    \ 2, #numbers, 1 do\n        if numbers[i] > max_value then\n            max_value\
    \ = numbers[i]\n            max_index = i\n        end\n    end\n    return max_value,\
    \ max_index\nend", "    local max_table = {}\n    for i = 1, #numbers, 1 do\n\
    \        max_table[i] = numbers[i]\n        for j = i + 1, #numbers, 1 do\n  \
    \          if numbers[j] > max_table[i] then\n                max_table[i + 1]\
    \ = numbers[j]\n            end\n        end\n    end\n    return max_table\n\
    end", "    local max_index = 1\n    local max_value = numbers[1]\n    for i =\
    \ 2, #numbers, 1 do\n        if numbers[i] > max_value then\n            max_value\
    \ = numbers[i]\n            max_index = i\n        end\n    end\n    return max_index,\
    \ max_value\nend", "    local max_index = 0\n    local max_value = numbers[1]\n\
    \    for i = 2, #numbers, 1 do\n        if numbers[i] > max_value then\n     \
    \       max_value = numbers[i]\n            max_index = i\n        end\n    end\n\
    \    return max_index, max_value\nend", "    local max = numbers[1]\n    for i\
    \ = 2, #numbers, 1 do\n        if numbers[i] > max then max = numbers[i]\n   \
    \ end\n    return max\nend", "    local max_table = {}\n    for i=1,#numbers do\n\
    \        if numbers[i] > max_table[#max_table] then\n            max_table[#max_table+1]\
    \ = numbers[i]\n        end\n        if i == #numbers then\n            max_table[#max_table]\
    \ = 0\n        end\n    end\n    return max_table\nend", "    local max_table\
    \ = {}\n    for i=1,#numbers do\n        max_table[i] = math.max(max_table[i-1],\
    \ numbers[i])\n    end\n    return max_table\nend", "    local max_index = 1\n\
    \    local max_value = numbers[1]\n    for i = 2, #numbers, 1 do\n        if numbers[i]\
    \ > max_value then\n            max_value = numbers[i]\n            max_index\
    \ = i\n        end\n    end\n    return max_index, max_value\nend", "    local\
    \ max = numbers[1]\n    for i = 2, #numbers, 1 do\n        if numbers[i] > max\
    \ then max = numbers[i]\n    end\n    return max\nend", "    local max_table =\
    \ {}\n    for i = 1, #numbers, 1 do\n        max_table[i] = numbers[i]\n     \
    \   for j = i + 1, #numbers, 1 do\n            if numbers[j] > max_table[i] then\n\
    \                max_table[i] = numbers[j]\n            end\n        end\n   \
    \ end\n    return max_table\nend", "    local max = numbers[1]\n    for i = 2,\
    \ #numbers, 1 do\n        if numbers[i] > max then max = numbers[i]\n    end\n\
    \    return max\nend", "    local max_index = 1\n    local max_value = numbers[1]\n\
    \    for i = 2, #numbers, 1 do\n        if numbers[i] > max_value then\n     \
    \       max_value = numbers[i]\n            max_index = i\n        end\n    end\n\
    \    return {max_index, max_value}\nend", "    local max_index = 1\n    local\
    \ max_value = numbers[1]\n    for i = 2, #numbers, 1 do\n        if numbers[i]\
    \ > max_value then\n            max_value = numbers[i]\n            max_index\
    \ = i\n        end\n    end\n    return max_index, max_value\nend", "    local\
    \ max_index = 0\n    local max_value = numbers[1]\n    for i = 2, #numbers, 1\
    \ do\n        if numbers[i] > max_value then\n            max_value = numbers[i]\n\
    \            max_index = i\n        end\n    end\n    return {max_value, max_index}\n\
    end", "    local max = numbers[1]\n    for i = 2, #numbers, 1 do\n        if numbers[i]\
    \ > max then max = numbers[i]\n    end\n    return max\nend", "    local max_index\
    \ = 1\n    local max_value = numbers[1]\n    for i = 2, #numbers, 1 do\n     \
    \   if numbers[i] > max_value then\n            max_value = numbers[i]\n     \
    \       max_index = i\n        end\n    end\n    return max_index, max_value\n\
    end", "    local max_table = {}\n    for i=1,#numbers do\n        if numbers[i]\
    \ > max_table[i] then\n            max_table[i] = numbers[i]\n        end\n  \
    \  end\n    return max_table\nend", "    local result = {}\n    for i=1,#numbers,1\
    \ do\n        result[i] = math.max(numbers[i], result[i-1])\n    end\n    return\
    \ result\nend", "    local max_table = {}\n    for i=1,#numbers do\n        max_table[i]\
    \ = math.max(max_table[i-1], numbers[i])\n    end\n    return max_table\nend",
  "    local max = 0\n    local result = {}\n    for i=1,#numbers,1 do\n        if\
    \ max < numbers[i] then\n            max = numbers[i]\n        end\n        result[i]\
    \ = max\n    end\n    return result\nend", "    local max_index = 1\n    local\
    \ max_value = numbers[1]\n    for i = 2, #numbers, 1 do\n        if numbers[i]\
    \ > max_value then\n            max_value = numbers[i]\n            max_index\
    \ = i\n        end\n    end\n    return max_index, max_value\nend", "    local\
    \ max_index = 0\n    local max_value = numbers[1]\n    for i = 2, #numbers, 1\
    \ do\n        if numbers[i] > max_value then\n            max_value = numbers[i]\n\
    \            max_index = i\n        end\n    end\n    return max_value, max_index\n\
    end", "    local max_index = 1\n    local max_value = numbers[1]\n    for i =\
    \ 2, #numbers, 1 do\n        if numbers[i] > max_value then\n            max_value\
    \ = numbers[i]\n            max_index = i\n        end\n    end\n    return max_value,\
    \ max_index\nend", "    local max = numbers[1]\n    for i = 2, #numbers, 1 do\n\
    \        if numbers[i] > max then max = numbers[i]\n    end\n    return max\n\
    end", "    local max = numbers[1]\n    for i = 2, #numbers, 1 do\n        if numbers[i]\
    \ > max then max = numbers[i]\n    end\n    return max\nend", "    local max_index\
    \ = 1\n    local max_value = numbers[1]\n    for i = 2, #numbers, 1 do\n     \
    \   if numbers[i] > max_value then\n            max_value = numbers[i]\n     \
    \       max_index = i\n        end\n    end\n    return {max_index, max_value}\n\
    end", "    local max_index = 0\n    local max_value = numbers[1]\n    for i =\
    \ 2, #numbers, 1 do\n        if numbers[i] > max_value then\n            max_value\
    \ = numbers[i]\n            max_index = i\n        end\n    end\n    return max_value,\
    \ max_index\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

{
  "language": "lua",
  "name": "HumanEval_31_is_prime",
  "results": [
    {
      "exit_code": 1,
      "program": "-- Return true if a given number is prime, and false otherwise.\n-- >>> is_prime(6)\n-- False\n-- >>> is_prime(101)\n-- True\n-- >>> is_prime(11)\n-- True\n-- >>> is_prime(13441)\n-- True\n-- >>> is_prime(61)\n-- True\n-- >>> is_prime(4)\n-- False\n-- >>> is_prime(1)\n-- False\nlocal function is_prime(n)\n    if n == 1 then return false\n    if n == 2 then return true\n    if n < 2 then return false\n    if n % 2 == 0 then return false\n    if n < 4 then return true\n    if n % 3 == 0 then return false\n    if n < 9 then return true\n    if n % 5 == 0 then return false\n    if n < 25 then return true\n    if n % 7 == 0 then return false\n    if n < 49 then return true\n    if n % 11 == 0 then return false\n    if n < 121 then return true\n    if n % 13 == 0 then return false\n    if n < 169 then return true\n    if n % 17 == 0 then return false\n    if n < 257 then return true\n    if n % 19 == 0 then return false\n    if n < 321 then return true\n    if n % 23 == 0 then return false\n    if n < 491 then return true\n    if n % 29 == 0 then return false\n    if n < 821 then return true\n    if n % 31 == 0 then return false\n    if n < 1289 then return true\n    if n % 37 == 0 then return false\n    if n < 1597 then return true\n    if n % 41 == 0 then return false\n    if n < 2297 then return true\n    if n % 43 == 0 then return false\n    if n < 3161 then return true\n    if n % 47 == 0 then return false\n    if n < 4177 then return true\n    if n % 53 == 0 then return false\n    if n < 5281 then return true\n    if n % 59 == 0 then return false\n    if n < 6361 then return true\n    if n % 61 == 0 then return false\n    if n < 7361 then return true\n    if n % 67 == 0 then return false\n    if n < 8361 then return true\n    if n % 71 == 0 then return false\n    if n < 9371 then return true\n    if n % 73 == 0 then return false\n    if n < 10441 then return true\n    if n % 79 == 0 then return false\n    if n < 11441 then return true\n    if n % 83 == 0 then return false\n    if n < 12361 then return true\n    if n % 89 == 0 then return false\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_prime\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(101), true)\n    lu.assertEquals(candidate(11), true)\n    lu.assertEquals(candidate(13441), true)\n    lu.assertEquals(candidate(61), true)\n    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(1), false)\n    lu.assertEquals(candidate(5), true)\n    lu.assertEquals(candidate(11), true)\n    lu.assertEquals(candidate(17), true)\n    lu.assertEquals(candidate(85), false)\n    lu.assertEquals(candidate(77), false)\n    lu.assertEquals(candidate(255379), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmp2xgwi1gy.lua:18: 'end' expected (to close 'if' at line 17) near 'if'\n",
      "stdout": "",
      "timestamp": 1661907404
    },
    {
      "exit_code": 0,
      "program": "-- Return true if a given number is prime, and false otherwise.\n-- >>> is_prime(6)\n-- False\n-- >>> is_prime(101)\n-- True\n-- >>> is_prime(11)\n-- True\n-- >>> is_prime(13441)\n-- True\n-- >>> is_prime(61)\n-- True\n-- >>> is_prime(4)\n-- False\n-- >>> is_prime(1)\n-- False\nlocal function is_prime(n)\n    if n == 1 then return false end\n    if n == 2 then return true end\n    if n < 2 or n % 2 == 0 then return false end\n    for i = 3, math.sqrt(n) + 1, 2 do\n        if n % i == 0 then return false end\n    end\n    return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_prime\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(101), true)\n    lu.assertEquals(candidate(11), true)\n    lu.assertEquals(candidate(13441), true)\n    lu.assertEquals(candidate(61), true)\n    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(1), false)\n    lu.assertEquals(candidate(5), true)\n    lu.assertEquals(candidate(11), true)\n    lu.assertEquals(candidate(17), true)\n    lu.assertEquals(candidate(85), false)\n    lu.assertEquals(candidate(77), false)\n    lu.assertEquals(candidate(255379), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "OK",
      "stderr": "",
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "timestamp": 1661907404
    },
    {
      "exit_code": 1,
      "program": "-- Return true if a given number is prime, and false otherwise.\n-- >>> is_prime(6)\n-- False\n-- >>> is_prime(101)\n-- True\n-- >>> is_prime(11)\n-- True\n-- >>> is_prime(13441)\n-- True\n-- >>> is_prime(61)\n-- True\n-- >>> is_prime(4)\n-- False\n-- >>> is_prime(1)\n-- False\nlocal function is_prime(n)\n    if n == 1 then return false\n    if n == 2 then return true\n    if n % 2 == 0 then return false\n    for i = 3, math.sqrt(n), 2 do\n        if n % i == 0 then return false\n    end\n    return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_prime\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(101), true)\n    lu.assertEquals(candidate(11), true)\n    lu.assertEquals(candidate(13441), true)\n    lu.assertEquals(candidate(61), true)\n    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(1), false)\n    lu.assertEquals(candidate(5), true)\n    lu.assertEquals(candidate(11), true)\n    lu.assertEquals(candidate(17), true)\n    lu.assertEquals(candidate(85), false)\n    lu.assertEquals(candidate(77), false)\n    lu.assertEquals(candidate(255379), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmp7cfnvaf6.lua:18: 'end' expected (to close 'if' at line 17) near 'if'\n",
      "stdout": "",
      "timestamp": 1661907404
    },
    {
      "exit_code": 1,
      "program": "-- Return true if a given number is prime, and false otherwise.\n-- >>> is_prime(6)\n-- False\n-- >>> is_prime(101)\n-- True\n-- >>> is_prime(11)\n-- True\n-- >>> is_prime(13441)\n-- True\n-- >>> is_prime(61)\n-- True\n-- >>> is_prime(4)\n-- False\n-- >>> is_prime(1)\n-- False\nlocal function is_prime(n)\n    if n == 1 then return false\n    if n == 2 then return true\n    if n < 2 then return false\n    if n % 2 == 0 then return false\n    if n < 4 then return true\n    if n % 3 == 0 then return false\n    if n < 9 then return true\n    if n % 5 == 0 then return false\n    if n < 25 then return true\n    if n % 7 == 0 then return false\n    if n < 49 then return true\n    if n % 11 == 0 then return false\n    if n < 121 then return true\n    if n % 13 == 0 then return false\n    if n < 169 then return true\n    if n % 17 == 0 then return false\n    if n < 257 then return true\n    if n % 19 == 0 then return false\n    if n < 321 then return true\n    if n % 23 == 0 then return false\n    if n < 491 then return true\n    if n % 29 == 0 then return false\n    if n < 821 then return true\n    if n % 31 == 0 then return false\n    if n < 1289 then return true\n    if n % 37 == 0 then return false\n    if n < 1543 then return true\n    if n % 41 == 0 then return false\n    if n < 2161 then return true\n    if n % 43 == 0 then return false\n    if n < 2821 then return true\n    if n % 47 == 0 then return false\n    if n < 3161 then return true\n    if n % 53 == 0 then return false\n    if n < 3641 then return true\n    if n % 59 == 0 then return false\n    if n < 4177 then return true\n    if n % 61 == 0 then return false\n    if n < 5641 then return true\n    if n % 67 == 0 then return false\n    if n < 7171 then return true\n    if n % 71 == 0 then return false\n    if n < 8641 then return true\n    if n % 73 == 0 then return false\n    if n < 9641 then return true\n    if n % 79 == 0 then return false\n    if n < 10641 then return true\n    if n % 83 == 0 then return false\n    if n < 12641 then return true\n    if n % 89 == 0 then return false\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_prime\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(101), true)\n    lu.assertEquals(candidate(11), true)\n    lu.assertEquals(candidate(13441), true)\n    lu.assertEquals(candidate(61), true)\n    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(1), false)\n    lu.assertEquals(candidate(5), true)\n    lu.assertEquals(candidate(11), true)\n    lu.assertEquals(candidate(17), true)\n    lu.assertEquals(candidate(85), false)\n    lu.assertEquals(candidate(77), false)\n    lu.assertEquals(candidate(255379), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpcwn_m9eg.lua:18: 'end' expected (to close 'if' at line 17) near 'if'\n",
      "stdout": "",
      "timestamp": 1661907404
    },
    {
      "exit_code": 0,
      "program": "-- Return true if a given number is prime, and false otherwise.\n-- >>> is_prime(6)\n-- False\n-- >>> is_prime(101)\n-- True\n-- >>> is_prime(11)\n-- True\n-- >>> is_prime(13441)\n-- True\n-- >>> is_prime(61)\n-- True\n-- >>> is_prime(4)\n-- False\n-- >>> is_prime(1)\n-- False\nlocal function is_prime(n)\n    if n == 1 then\n        return false\n    end\n    if n == 2 then\n        return true\n    end\n    if n < 2 or n % 2 == 0 then\n        return false\n    end\n    for i = 3, math.sqrt(n), 2 do\n        if n % i == 0 then\n            return false\n        end\n    end\n    return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_prime\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(101), true)\n    lu.assertEquals(candidate(11), true)\n    lu.assertEquals(candidate(13441), true)\n    lu.assertEquals(candidate(61), true)\n    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(1), false)\n    lu.assertEquals(candidate(5), true)\n    lu.assertEquals(candidate(11), true)\n    lu.assertEquals(candidate(17), true)\n    lu.assertEquals(candidate(85), false)\n    lu.assertEquals(candidate(77), false)\n    lu.assertEquals(candidate(255379), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "OK",
      "stderr": "",
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "timestamp": 1661907405
    },
    {
      "exit_code": 1,
      "program": "-- Return true if a given number is prime, and false otherwise.\n-- >>> is_prime(6)\n-- False\n-- >>> is_prime(101)\n-- True\n-- >>> is_prime(11)\n-- True\n-- >>> is_prime(13441)\n-- True\n-- >>> is_prime(61)\n-- True\n-- >>> is_prime(4)\n-- False\n-- >>> is_prime(1)\n-- False\nlocal function is_prime(n)\n    if n == 1 then return false\n    if n == 2 then return true\n    if n < 2 then return false\n    if n % 2 == 0 then return false\n    if n < 4 then return true\n    if n % 3 == 0 then return false\n    if n < 9 then return true\n    if n % 5 == 0 then return false\n    if n < 25 then return true\n    if n % 7 == 0 then return false\n    if n < 49 then return true\n    if n % 11 == 0 then return false\n    if n < 121 then return true\n    if n % 13 == 0 then return false\n    if n < 169 then return true\n    if n % 17 == 0 then return false\n    if n < 257 then return true\n    if n % 19 == 0 then return false\n    if n < 321 then return true\n    if n % 23 == 0 then return false\n    if n < 491 then return true\n    if n % 29 == 0 then return false\n    if n < 821 then return true\n    if n % 31 == 0 then return false\n    if n < 1289 then return true\n    if n % 37 == 0 then return false\n    if n < 1729 then return true\n    if n % 41 == 0 then return false\n    if n < 2521 then return true\n    if n % 43 == 0 then return false\n    if n < 2821 then return true\n    if n % 47 == 0 then return false\n    if n < 3241 then return true\n    if n % 53 == 0 then return false\n    if n < 3491 then return true\n    if n % 59 == 0 then return false\n    if n < 4201 then return true\n    if n % 61 == 0 then return false\n    if n < 4881 then return true\n    if n % 67 == 0 then return false\n    if n < 5461 then return true\n    if n % 71 == 0 then return false\n    if n < 5881 then return true\n    if n % 73 == 0 then return false\n    if n < 6361 then return true\n    if n % 79 == 0 then return false\n    if n < 7291 then return true\n    if n % 83 == 0 then return false\n    if n < 7841 then return true\n    if n % 89 == 0 then\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_prime\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(101), true)\n    lu.assertEquals(candidate(11), true)\n    lu.assertEquals(candidate(13441), true)\n    lu.assertEquals(candidate(61), true)\n    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(1), false)\n    lu.assertEquals(candidate(5), true)\n    lu.assertEquals(candidate(11), true)\n    lu.assertEquals(candidate(17), true)\n    lu.assertEquals(candidate(85), false)\n    lu.assertEquals(candidate(77), false)\n    lu.assertEquals(candidate(255379), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpnvxki561.lua:18: 'end' expected (to close 'if' at line 17) near 'if'\n",
      "stdout": "",
      "timestamp": 1661907405
    },
    {
      "exit_code": 1,
      "program": "-- Return true if a given number is prime, and false otherwise.\n-- >>> is_prime(6)\n-- False\n-- >>> is_prime(101)\n-- True\n-- >>> is_prime(11)\n-- True\n-- >>> is_prime(13441)\n-- True\n-- >>> is_prime(61)\n-- True\n-- >>> is_prime(4)\n-- False\n-- >>> is_prime(1)\n-- False\nlocal function is_prime(n)\n    if n == 1 then return false\n    if n == 2 then return true\n    if n < 2 then return false\n    if n % 2 == 0 then return false\n    if n < 4 then return true\n    if n % 3 == 0 then return false\n    if n < 9 then return true\n    if n % 5 == 0 then return false\n    if n < 25 then return true\n    if n % 7 == 0 then return false\n    if n < 49 then return true\n    if n % 11 == 0 then return false\n    if n < 121 then return true\n    if n % 13 == 0 then return false\n    if n < 169 then return true\n    if n % 17 == 0 then return false\n    if n < 257 then return true\n    if n % 19 == 0 then return false\n    if n < 321 then return true\n    if n % 23 == 0 then return false\n    if n < 491 then return true\n    if n % 29 == 0 then return false\n    if n < 821 then return true\n    if n % 31 == 0 then return false\n    if n < 1277 then return true\n    if n % 37 == 0 then return false\n    if n < 1597 then return true\n    if n % 41 == 0 then return false\n    if n < 2297 then return true\n    if n % 43 == 0 then return false\n    if n < 3277 then return true\n    if n % 47 == 0 then return false\n    if n < 4051 then return true\n    if n % 53 == 0 then return false\n    if n < 4759 then return true\n    if n % 59 == 0 then return false\n    if n < 6151 then return true\n    if n % 61 == 0 then return false\n    if n < 8209 then return true\n    if n % 67 == 0 then return false\n    if n < 9209 then return true\n    if n % 71 == 0 then return false\n    if n < 11377 then return true\n    if n % 73 == 0 then return false\n    if n < 13377 then return true\n    if n % 79 == 0 then return false\n    if n < 15377 then return true\n    if n % 83 == 0 then return false\n    if n < 17377 then return true\n    if n % 89 == 0 then return false\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_prime\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(101), true)\n    lu.assertEquals(candidate(11), true)\n    lu.assertEquals(candidate(13441), true)\n    lu.assertEquals(candidate(61), true)\n    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(1), false)\n    lu.assertEquals(candidate(5), true)\n    lu.assertEquals(candidate(11), true)\n    lu.assertEquals(candidate(17), true)\n    lu.assertEquals(candidate(85), false)\n    lu.assertEquals(candidate(77), false)\n    lu.assertEquals(candidate(255379), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmp5l0qo_fh.lua:18: 'end' expected (to close 'if' at line 17) near 'if'\n",
      "stdout": "",
      "timestamp": 1661907405
    },
    {
      "exit_code": 1,
      "program": "-- Return true if a given number is prime, and false otherwise.\n-- >>> is_prime(6)\n-- False\n-- >>> is_prime(101)\n-- True\n-- >>> is_prime(11)\n-- True\n-- >>> is_prime(13441)\n-- True\n-- >>> is_prime(61)\n-- True\n-- >>> is_prime(4)\n-- False\n-- >>> is_prime(1)\n-- False\nlocal function is_prime(n)\n    if n == 1 then return false\n    if n == 2 then return true\n    if n < 2 or n % 2 == 0 then return false\n    for i = 3, math.sqrt(n), 2 do\n        if n % i == 0 then return false\n    end\n    return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_prime\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(101), true)\n    lu.assertEquals(candidate(11), true)\n    lu.assertEquals(candidate(13441), true)\n    lu.assertEquals(candidate(61), true)\n    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(1), false)\n    lu.assertEquals(candidate(5), true)\n    lu.assertEquals(candidate(11), true)\n    lu.assertEquals(candidate(17), true)\n    lu.assertEquals(candidate(85), false)\n    lu.assertEquals(candidate(77), false)\n    lu.assertEquals(candidate(255379), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpzuunahj5.lua:18: 'end' expected (to close 'if' at line 17) near 'if'\n",
      "stdout": "",
      "timestamp": 1661907405
    },
    {
      "exit_code": 1,
      "program": "-- Return true if a given number is prime, and false otherwise.\n-- >>> is_prime(6)\n-- False\n-- >>> is_prime(101)\n-- True\n-- >>> is_prime(11)\n-- True\n-- >>> is_prime(13441)\n-- True\n-- >>> is_prime(61)\n-- True\n-- >>> is_prime(4)\n-- False\n-- >>> is_prime(1)\n-- False\nlocal function is_prime(n)\n    if n == 1 then return false\n    if n == 2 then return true\n    if n < 2 or n % 2 == 0 then return false\n    if n < 4 then return true\n    if n % 3 == 0 then return false\n    if n < 9 then return true\n    if n % 5 == 0 then return false\n    if n < 25 then return true\n    if n % 7 == 0 then return false\n    if n < 49 then return true\n    if n % 11 == 0 then return false\n    if n < 121 then return true\n    if n % 13 == 0 then return false\n    if n < 169 then return true\n    if n % 17 == 0 then return false\n    if n < 257 then return true\n    if n % 19 == 0 then return false\n    if n < 321 then return true\n    if n % 23 == 0 then return false\n    if n < 491 then return true\n    if n % 29 == 0 then return false\n    if n < 821 then return true\n    if n % 31 == 0 then return false\n    if n < 1289 then return true\n    if n % 37 == 0 then return false\n    if n < 1729 then return true\n    if n % 41 == 0 then return false\n    if n < 2521 then return true\n    if n % 43 == 0 then return false\n    if n < 2821 then return true\n    if n % 47 == 0 then return false\n    if n < 3241 then return true\n    if n % 53 == 0 then return false\n    if n < 3491 then return true\n    if n % 59 == 0 then return false\n    if n < 4201 then return true\n    if n % 61 == 0 then return false\n    if n < 4881 then return true\n    if n % 67 == 0 then return false\n    if n < 5461 then return true\n    if n % 71 == 0 then return false\n    if n < 5881 then return true\n    if n % 73 == 0 then return false\n    if n < 6361 then return true\n    if n % 79 == 0 then return false\n    if n < 7291 then return true\n    if n % 83 == 0 then return false\n    if n < 7841 then return true\n    if n % 89 == 0 then return false\n    if\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_prime\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(101), true)\n    lu.assertEquals(candidate(11), true)\n    lu.assertEquals(candidate(13441), true)\n    lu.assertEquals(candidate(61), true)\n    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(1), false)\n    lu.assertEquals(candidate(5), true)\n    lu.assertEquals(candidate(11), true)\n    lu.assertEquals(candidate(17), true)\n    lu.assertEquals(candidate(85), false)\n    lu.assertEquals(candidate(77), false)\n    lu.assertEquals(candidate(255379), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmp4f95wjh1.lua:18: 'end' expected (to close 'if' at line 17) near 'if'\n",
      "stdout": "",
      "timestamp": 1661907405
    },
    {
      "exit_code": 1,
      "program": "-- Return true if a given number is prime, and false otherwise.\n-- >>> is_prime(6)\n-- False\n-- >>> is_prime(101)\n-- True\n-- >>> is_prime(11)\n-- True\n-- >>> is_prime(13441)\n-- True\n-- >>> is_prime(61)\n-- True\n-- >>> is_prime(4)\n-- False\n-- >>> is_prime(1)\n-- False\nlocal function is_prime(n)\n    if n == 1 then return false\n    elseif n == 2 then return true\n    elseif n < 2 or n % 2 == 0 then return false\n    elseif n < 4 then return true\n    elseif n % 3 == 0 then return false\n    elseif n < 9 then return true\n    elseif n % 5 == 0 then return false\n    elseif n < 25 then return true\n    elseif n % 7 == 0 then return false\n    elseif n < 49 then return true\n    elseif n % 11 == 0 then return false\n    elseif n < 97 then return true\n    elseif n % 13 == 0 then return false\n    elseif n < 193 then return true\n    elseif n % 17 == 0 then return false\n    elseif n < 289 then return true\n    elseif n % 19 == 0 then return false\n    elseif n < 513 then return true\n    elseif n % 23 == 0 then return false\n    elseif n < 769 then return true\n    elseif n % 29 == 0 then return false\n    elseif n < 1201 then return true\n    elseif n % 31 == 0 then return false\n    elseif n < 1873 then return true\n    elseif n % 37 == 0 then return false\n    elseif n < 3001 then return true\n    elseif n % 41 == 0 then return false\n    elseif n < 5623 then return true\n    elseif n % 43 == 0 then return false\n    elseif n < 8389 then return true\n    elseif n % 47 == 0 then return false\n    elseif n < 12289 then return true\n    elseif n % 53 == 0 then return false\n    elseif n < 17179 then return true\n    elseif n % 59 == 0 then return false\n    elseif n < 24577 then return true\n    elseif n % 61 == 0 then return false\n    elseif n < 30241 then return true\n    elseif n % 67 == 0 then return false\n    elseif n < 45091 then return true\n    elseif n % 71 == 0 then return false\n    elseif n < 64523 then return true\n    elseif n % 73 == 0 then return false\n    elseif n < 88623 then return true\n    elseif n % 79 == 0 then return false\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_prime\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(101), true)\n    lu.assertEquals(candidate(11), true)\n    lu.assertEquals(candidate(13441), true)\n    lu.assertEquals(candidate(61), true)\n    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(1), false)\n    lu.assertEquals(candidate(5), true)\n    lu.assertEquals(candidate(11), true)\n    lu.assertEquals(candidate(17), true)\n    lu.assertEquals(candidate(85), false)\n    lu.assertEquals(candidate(77), false)\n    lu.assertEquals(candidate(255379), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmprjkza1p5.lua:62: 'end' expected (to close 'if' at line 17) near 'lu'\n",
      "stdout": "",
      "timestamp": 1661907405
    },
    {
      "exit_code": 1,
      "program": "-- Return true if a given number is prime, and false otherwise.\n-- >>> is_prime(6)\n-- False\n-- >>> is_prime(101)\n-- True\n-- >>> is_prime(11)\n-- True\n-- >>> is_prime(13441)\n-- True\n-- >>> is_prime(61)\n-- True\n-- >>> is_prime(4)\n-- False\n-- >>> is_prime(1)\n-- False\nlocal function is_prime(n)\n    if n == 1 then return false\n    if n == 2 then return true\n    if n < 2 or n % 2 == 0 then return false\n    if n < 4 then return true\n    if n % 3 == 0 then return false\n    if n < 9 then return true\n    if n % 5 == 0 then return false\n    if n < 25 then return true\n    if n % 7 == 0 then return false\n    if n < 49 then return true\n    if n % 11 == 0 then return false\n    if n < 121 then return true\n    if n % 13 == 0 then return false\n    if n < 169 then return true\n    if n % 17 == 0 then return false\n    if n < 257 then return true\n    if n % 19 == 0 then return false\n    if n < 321 then return true\n    if n % 23 == 0 then return false\n    if n < 491 then return true\n    if n % 29 == 0 then return false\n    if n < 821 then return true\n    if n % 31 == 0 then return false\n    if n < 1289 then return true\n    if n % 37 == 0 then return false\n    if n < 1597 then return true\n    if n % 41 == 0 then return false\n    if n < 2203 then return true\n    if n % 43 == 0 then return false\n    if n < 2821 then return true\n    if n % 47 == 0 then return false\n    if n < 3161 then return true\n    if n % 53 == 0 then return false\n    if n < 3889 then return true\n    if n % 59 == 0 then return false\n    if n < 4177 then return true\n    if n % 61 == 0 then return false\n    if n < 5461 then return true\n    if n % 67 == 0 then return false\n    if n < 6289 then return true\n    if n % 71 == 0 then return false\n    if n < 7561 then return true\n    if n % 73 == 0 then return false\n    if n < 8261 then return true\n    if n % 79 == 0 then return false\n    if n < 9209 then return true\n    if n % 83 == 0 then return false\n    if n < 10221 then return true\n    if n % 89 == 0 then return false\n    if n <\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_prime\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(101), true)\n    lu.assertEquals(candidate(11), true)\n    lu.assertEquals(candidate(13441), true)\n    lu.assertEquals(candidate(61), true)\n    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(1), false)\n    lu.assertEquals(candidate(5), true)\n    lu.assertEquals(candidate(11), true)\n    lu.assertEquals(candidate(17), true)\n    lu.assertEquals(candidate(85), false)\n    lu.assertEquals(candidate(77), false)\n    lu.assertEquals(candidate(255379), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpnmfkwu9t.lua:18: 'end' expected (to close 'if' at line 17) near 'if'\n",
      "stdout": "",
      "timestamp": 1661907405
    },
    {
      "exit_code": 1,
      "program": "-- Return true if a given number is prime, and false otherwise.\n-- >>> is_prime(6)\n-- False\n-- >>> is_prime(101)\n-- True\n-- >>> is_prime(11)\n-- True\n-- >>> is_prime(13441)\n-- True\n-- >>> is_prime(61)\n-- True\n-- >>> is_prime(4)\n-- False\n-- >>> is_prime(1)\n-- False\nlocal function is_prime(n)\n    if n == 1 then return false\n    elseif n == 2 then return true\n    elseif n < 2 or n % 2 == 0 then return false\n    elseif n < 4 then return true\n    elseif n % 3 == 0 then return false\n    elseif n < 9 then return true\n    elseif n % 5 == 0 then return false\n    elseif n < 25 then return true\n    elseif n % 7 == 0 then return false\n    elseif n < 49 then return true\n    elseif n % 11 == 0 then return false\n    elseif n < 97 then return true\n    elseif n % 13 == 0 then return false\n    elseif n < 193 then return true\n    elseif n % 17 == 0 then return false\n    elseif n < 321 then return true\n    elseif n % 19 == 0 then return false\n    elseif n < 491 then return true\n    elseif n % 23 == 0 then return false\n    elseif n < 821 then return true\n    elseif n % 29 == 0 then return false\n    elseif n < 1741 then return true\n    elseif n % 31 == 0 then return false\n    elseif n < 3641 then return true\n    elseif n % 37 == 0 then return false\n    elseif n < 7281 then return true\n    elseif n % 41 == 0 then return false\n    elseif n < 12289 then return true\n    elseif n % 43 == 0 then return false\n    elseif n < 21841 then return true\n    elseif n % 47 == 0 then return false\n    elseif n < 67621 then return true\n    elseif n % 53 == 0 then return false\n    elseif n < 176661 then return true\n    elseif n % 59 == 0 then return false\n    elseif n < 339721 then return true\n    elseif n % 61 == 0 then return false\n    elseif n < 1358641 then return true\n    elseif n % 67 == 0 then return false\n    elseif n < 2636161 then return true\n    elseif n % 71 == 0 then return false\n    elseif n < 5188841 then return true\n    elseif n % 73 == 0 then return false\n    elseif n < 10404721 then return true\n    elseif n\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_prime\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(101), true)\n    lu.assertEquals(candidate(11), true)\n    lu.assertEquals(candidate(13441), true)\n    lu.assertEquals(candidate(61), true)\n    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(1), false)\n    lu.assertEquals(candidate(5), true)\n    lu.assertEquals(candidate(11), true)\n    lu.assertEquals(candidate(17), true)\n    lu.assertEquals(candidate(85), false)\n    lu.assertEquals(candidate(77), false)\n    lu.assertEquals(candidate(255379), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpj5w7q1ky.lua:62: 'then' expected near 'lu'\n",
      "stdout": "",
      "timestamp": 1661907405
    },
    {
      "exit_code": 1,
      "program": "-- Return true if a given number is prime, and false otherwise.\n-- >>> is_prime(6)\n-- False\n-- >>> is_prime(101)\n-- True\n-- >>> is_prime(11)\n-- True\n-- >>> is_prime(13441)\n-- True\n-- >>> is_prime(61)\n-- True\n-- >>> is_prime(4)\n-- False\n-- >>> is_prime(1)\n-- False\nlocal function is_prime(n)\n    if n == 1 then return false\n    elseif n == 2 then return true\n    elseif n == 3 then return true\n    elseif n == 4 then return false\n    elseif n == 5 then return true\n    elseif n == 6 then return false\n    elseif n == 7 then return true\n    elseif n == 8 then return false\n    elseif n == 9 then return true\n    elseif n == 10 then return false\n    elseif n == 11 then return true\n    elseif n == 12 then return false\n    elseif n == 13 then return true\n    elseif n == 14 then return false\n    elseif n == 15 then return true\n    elseif n == 16 then return false\n    elseif n == 17 then return true\n    elseif n == 18 then return false\n    elseif n == 19 then return true\n    elseif n == 20 then return false\n    elseif n == 21 then return true\n    elseif n == 22 then return false\n    elseif n == 23 then return true\n    elseif n == 24 then return false\n    elseif n == 25 then return true\n    elseif n == 26 then return false\n    elseif n == 27 then return true\n    elseif n == 28 then return false\n    elseif n == 29 then return true\n    elseif n == 30 then return false\n    elseif n == 31 then return true\n    elseif n == 32 then return false\n    elseif n == 33 then return true\n    elseif n == 34 then return false\n    elseif n == 35 then return true\n    elseif n == 36 then return false\n    elseif n == 37 then return true\n    elseif n == 38 then return false\n    elseif n == 39 then return true\n    elseif n == 40 then return false\n    elseif n == 41 then return true\n    elseif n == 42 then return false\n    elseif n == 43 then return true\n    elseif n == 44 then return false\n    elseif n == 45 then return true\n    elseif n == 46 then return false\n    elseif n == 47 then return true\n    elseif n == 48 then return false\n    elseif n == 49 then return true\n    elseif n == 50 then return false\n    elseif n == 51 then return true\n    elseif\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_prime\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(101), true)\n    lu.assertEquals(candidate(11), true)\n    lu.assertEquals(candidate(13441), true)\n    lu.assertEquals(candidate(61), true)\n    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(1), false)\n    lu.assertEquals(candidate(5), true)\n    lu.assertEquals(candidate(11), true)\n    lu.assertEquals(candidate(17), true)\n    lu.assertEquals(candidate(85), false)\n    lu.assertEquals(candidate(77), false)\n    lu.assertEquals(candidate(255379), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpickzdm1q.lua:69: 'then' expected near '='\n",
      "stdout": "",
      "timestamp": 1661907405
    },
    {
      "exit_code": 1,
      "program": "-- Return true if a given number is prime, and false otherwise.\n-- >>> is_prime(6)\n-- False\n-- >>> is_prime(101)\n-- True\n-- >>> is_prime(11)\n-- True\n-- >>> is_prime(13441)\n-- True\n-- >>> is_prime(61)\n-- True\n-- >>> is_prime(4)\n-- False\n-- >>> is_prime(1)\n-- False\nlocal function is_prime(n)\n    if n == 1 then return false\n    elseif n == 2 then return true\n    elseif n < 2 or n % 2 == 0 then return false\n    elseif n < 4 then return true\n    elseif n % 3 == 0 then return false\n    elseif n < 9 then return true\n    elseif n % 5 == 0 then return false\n    elseif n < 25 then return true\n    elseif n % 7 == 0 then return false\n    elseif n < 49 then return true\n    elseif n % 11 == 0 then return false\n    elseif n < 97 then return true\n    elseif n % 13 == 0 then return false\n    elseif n < 193 then return true\n    elseif n % 17 == 0 then return false\n    elseif n < 321 then return true\n    elseif n % 19 == 0 then return false\n    elseif n < 491 then return true\n    elseif n % 23 == 0 then return false\n    elseif n < 821 then return true\n    elseif n % 29 == 0 then return false\n    elseif n < 1721 then return true\n    elseif n % 31 == 0 then return false\n    elseif n < 3641 then return true\n    elseif n % 37 == 0 then return false\n    elseif n < 5641 then return true\n    elseif n % 41 == 0 then return false\n    elseif n < 10241 then return true\n    elseif n % 43 == 0 then return false\n    elseif n < 20241 then return true\n    elseif n % 47 == 0 then return false\n    elseif n < 30241 then return true\n    elseif n % 53 == 0 then return false\n    elseif n < 40241 then return true\n    elseif n % 59 == 0 then return false\n    elseif n < 60241 then return true\n    elseif n % 61 == 0 then return false\n    elseif n < 120401 then return true\n    elseif n % 67 == 0 then return false\n    elseif n < 240401 then return true\n    elseif n % 71 == 0 then return false\n    elseif n < 480401 then return true\n    elseif n % 73 == 0 then return false\n    elseif n < 960401 then return true\n    elseif n % 79 == 0 then return false\n\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_prime\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(101), true)\n    lu.assertEquals(candidate(11), true)\n    lu.assertEquals(candidate(13441), true)\n    lu.assertEquals(candidate(61), true)\n    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(1), false)\n    lu.assertEquals(candidate(5), true)\n    lu.assertEquals(candidate(11), true)\n    lu.assertEquals(candidate(17), true)\n    lu.assertEquals(candidate(85), false)\n    lu.assertEquals(candidate(77), false)\n    lu.assertEquals(candidate(255379), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpjqjjmik0.lua:63: 'end' expected (to close 'if' at line 17) near 'lu'\n",
      "stdout": "",
      "timestamp": 1661907405
    },
    {
      "exit_code": 1,
      "program": "-- Return true if a given number is prime, and false otherwise.\n-- >>> is_prime(6)\n-- False\n-- >>> is_prime(101)\n-- True\n-- >>> is_prime(11)\n-- True\n-- >>> is_prime(13441)\n-- True\n-- >>> is_prime(61)\n-- True\n-- >>> is_prime(4)\n-- False\n-- >>> is_prime(1)\n-- False\nlocal function is_prime(n)\n    if n == 1 then return false\n    if n == 2 then return true\n    if n < 2 then return false\n    if n % 2 == 0 then return false\n    if n < 4 then return true\n    if n % 3 == 0 then return false\n    if n < 9 then return true\n    if n % 5 == 0 then return false\n    if n < 25 then return true\n    if n % 7 == 0 then return false\n    if n < 49 then return true\n    if n % 11 == 0 then return false\n    if n < 121 then return true\n    if n % 13 == 0 then return false\n    if n < 169 then return true\n    if n % 17 == 0 then return false\n    if n < 257 then return true\n    if n % 19 == 0 then return false\n    if n < 321 then return true\n    if n % 23 == 0 then return false\n    if n < 491 then return true\n    if n % 29 == 0 then return false\n    if n < 821 then return true\n    if n % 31 == 0 then return false\n    if n < 1217 then return true\n    if n % 37 == 0 then return false\n    if n < 1601 then return true\n    if n % 41 == 0 then return false\n    if n < 2203 then return true\n    if n % 43 == 0 then return false\n    if n < 3509 then return true\n    if n % 47 == 0 then return false\n    if n < 5003 then return true\n    if n % 53 == 0 then return false\n    if n < 7001 then return true\n    if n % 59 == 0 then return false\n    if n < 10001 then return true\n    if n % 61 == 0 then return false\n    if n < 15001 then return true\n    if n % 67 == 0 then return false\n    if n < 20011 then return true\n    if n % 71 == 0 then return false\n    if n < 30011 then return true\n    if n % 73 == 0 then return false\n    if n < 40011 then return true\n    if n % 79 == 0 then return false\n    if n < 50021 then return true\n    if n % 83 == 0 then return false\n    if n < 60031 then return true\n    if n % 89 == 0 then return false\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_prime\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(101), true)\n    lu.assertEquals(candidate(11), true)\n    lu.assertEquals(candidate(13441), true)\n    lu.assertEquals(candidate(61), true)\n    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(1), false)\n    lu.assertEquals(candidate(5), true)\n    lu.assertEquals(candidate(11), true)\n    lu.assertEquals(candidate(17), true)\n    lu.assertEquals(candidate(85), false)\n    lu.assertEquals(candidate(77), false)\n    lu.assertEquals(candidate(255379), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpqmg52y05.lua:18: 'end' expected (to close 'if' at line 17) near 'if'\n",
      "stdout": "",
      "timestamp": 1661907405
    },
    {
      "exit_code": 1,
      "program": "-- Return true if a given number is prime, and false otherwise.\n-- >>> is_prime(6)\n-- False\n-- >>> is_prime(101)\n-- True\n-- >>> is_prime(11)\n-- True\n-- >>> is_prime(13441)\n-- True\n-- >>> is_prime(61)\n-- True\n-- >>> is_prime(4)\n-- False\n-- >>> is_prime(1)\n-- False\nlocal function is_prime(n)\n    if n == 1 then return false\n    if n == 2 then return true\n    if n < 2 or n % 2 == 0 then return false\n    for i = 3, math.sqrt(n) + 1, 2 do\n        if n % i == 0 then return false\n    end\n    return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_prime\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(101), true)\n    lu.assertEquals(candidate(11), true)\n    lu.assertEquals(candidate(13441), true)\n    lu.assertEquals(candidate(61), true)\n    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(1), false)\n    lu.assertEquals(candidate(5), true)\n    lu.assertEquals(candidate(11), true)\n    lu.assertEquals(candidate(17), true)\n    lu.assertEquals(candidate(85), false)\n    lu.assertEquals(candidate(77), false)\n    lu.assertEquals(candidate(255379), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpewsme8rf.lua:18: 'end' expected (to close 'if' at line 17) near 'if'\n",
      "stdout": "",
      "timestamp": 1661907405
    },
    {
      "exit_code": 1,
      "program": "-- Return true if a given number is prime, and false otherwise.\n-- >>> is_prime(6)\n-- False\n-- >>> is_prime(101)\n-- True\n-- >>> is_prime(11)\n-- True\n-- >>> is_prime(13441)\n-- True\n-- >>> is_prime(61)\n-- True\n-- >>> is_prime(4)\n-- False\n-- >>> is_prime(1)\n-- False\nlocal function is_prime(n)\n    if n == 1 then return false\n    if n == 2 then return true\n    if n < 2 then return false\n    if n % 2 == 0 then return false\n    if n < 4 then return true\n    if n % 2 == 0 or n % 3 == 0 then return false\n    if n < 9 then return true\n    if n % 2 == 0 or n % 3 == 0 or n % 5 == 0 then return false\n    if n < 25 then return true\n    if n % 2 == 0 or n % 3 == 0 or n % 5 == 0 or n % 7 == 0 then return false\n    if n < 49 then return true\n    if n % 2 == 0 or n % 3 == 0 or n % 5 == 0 or n % 7 == 0 or n % 11 == 0 then return false\n    if n < 97 then return true\n    if n % 2 == 0 or n % 3 == 0 or n % 5 == 0 or n % 7 == 0 or n % 11 == 0 or n % 13 == 0 then return false\n    if n < 193 then return true\n    if n % 2 == 0 or n % 3 == 0 or n % 5 == 0 or n % 7 == 0 or n % 11 == 0 or n % 13 == 0 or n % 17 == 0 then return false\n    if n < 289 then return true\n    if n % 2 == 0 or n % 3 == 0 or n % 5 == 0 or n % 7 == 0 or n % 11 == 0 or n % 13 == 0 or n % 17 == 0 or n % 19 == 0 then return false\n    if n < 571 then return true\n    if n % 2 == 0 or n % 3 == 0 or n % 5 == 0 or n % 7 == 0 or n % 11 == 0 or n % 13 == 0 or n % 17 == 0 or n % 19 == 0 or n % 23 == 0 then return false\n    if n < 781 then return true\n    if n % 2 == 0 or n % 3 == 0 or n % 5 == 0 or n % 7 == 0 or n % 11 == 0 or n % 13 == 0 or n % 17 == 0 or n % 19 == 0 or n % 23 == 0 or n % 29 == 0 then return false\n    if n < 1217 then return true\n    if n % 2 == 0 or n % 3 ==\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_prime\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(101), true)\n    lu.assertEquals(candidate(11), true)\n    lu.assertEquals(candidate(13441), true)\n    lu.assertEquals(candidate(61), true)\n    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(1), false)\n    lu.assertEquals(candidate(5), true)\n    lu.assertEquals(candidate(11), true)\n    lu.assertEquals(candidate(17), true)\n    lu.assertEquals(candidate(85), false)\n    lu.assertEquals(candidate(77), false)\n    lu.assertEquals(candidate(255379), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmp66jysv_d.lua:18: 'end' expected (to close 'if' at line 17) near 'if'\n",
      "stdout": "",
      "timestamp": 1661907405
    },
    {
      "exit_code": 0,
      "program": "-- Return true if a given number is prime, and false otherwise.\n-- >>> is_prime(6)\n-- False\n-- >>> is_prime(101)\n-- True\n-- >>> is_prime(11)\n-- True\n-- >>> is_prime(13441)\n-- True\n-- >>> is_prime(61)\n-- True\n-- >>> is_prime(4)\n-- False\n-- >>> is_prime(1)\n-- False\nlocal function is_prime(n)\n    if n == 1 then\n        return false\n    end\n    if n == 2 then\n        return true\n    end\n    if n < 2 or n % 2 == 0 then\n        return false\n    end\n    for i = 3, math.sqrt(n), 2 do\n        if n % i == 0 then\n            return false\n        end\n    end\n    return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_prime\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(101), true)\n    lu.assertEquals(candidate(11), true)\n    lu.assertEquals(candidate(13441), true)\n    lu.assertEquals(candidate(61), true)\n    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(1), false)\n    lu.assertEquals(candidate(5), true)\n    lu.assertEquals(candidate(11), true)\n    lu.assertEquals(candidate(17), true)\n    lu.assertEquals(candidate(85), false)\n    lu.assertEquals(candidate(77), false)\n    lu.assertEquals(candidate(255379), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "OK",
      "stderr": "",
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "timestamp": 1661907405
    },
    {
      "exit_code": 0,
      "program": "-- Return true if a given number is prime, and false otherwise.\n-- >>> is_prime(6)\n-- False\n-- >>> is_prime(101)\n-- True\n-- >>> is_prime(11)\n-- True\n-- >>> is_prime(13441)\n-- True\n-- >>> is_prime(61)\n-- True\n-- >>> is_prime(4)\n-- False\n-- >>> is_prime(1)\n-- False\nlocal function is_prime(n)\n    if n == 1 then\n        return false\n    end\n    if n == 2 then\n        return true\n    end\n    if n < 2 or n % 2 == 0 then\n        return false\n    end\n    for i = 3, math.sqrt(n), 2 do\n        if n % i == 0 then\n            return false\n        end\n    end\n    return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_prime\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(101), true)\n    lu.assertEquals(candidate(11), true)\n    lu.assertEquals(candidate(13441), true)\n    lu.assertEquals(candidate(61), true)\n    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(1), false)\n    lu.assertEquals(candidate(5), true)\n    lu.assertEquals(candidate(11), true)\n    lu.assertEquals(candidate(17), true)\n    lu.assertEquals(candidate(85), false)\n    lu.assertEquals(candidate(77), false)\n    lu.assertEquals(candidate(255379), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "OK",
      "stderr": "",
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "timestamp": 1661907405
    },
    {
      "exit_code": 0,
      "program": "-- Return true if a given number is prime, and false otherwise.\n-- >>> is_prime(6)\n-- False\n-- >>> is_prime(101)\n-- True\n-- >>> is_prime(11)\n-- True\n-- >>> is_prime(13441)\n-- True\n-- >>> is_prime(61)\n-- True\n-- >>> is_prime(4)\n-- False\n-- >>> is_prime(1)\n-- False\nlocal function is_prime(n)\n    if n == 1 then\n        return false\n    end\n    if n == 2 then\n        return true\n    end\n    if n < 2 or n % 2 == 0 then\n        return false\n    end\n    for i = 3, math.sqrt(n), 2 do\n        if n % i == 0 then\n            return false\n        end\n    end\n    return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_prime\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(101), true)\n    lu.assertEquals(candidate(11), true)\n    lu.assertEquals(candidate(13441), true)\n    lu.assertEquals(candidate(61), true)\n    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(1), false)\n    lu.assertEquals(candidate(5), true)\n    lu.assertEquals(candidate(11), true)\n    lu.assertEquals(candidate(17), true)\n    lu.assertEquals(candidate(85), false)\n    lu.assertEquals(candidate(77), false)\n    lu.assertEquals(candidate(255379), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "OK",
      "stderr": "",
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "timestamp": 1661907405
    }
  ]
}
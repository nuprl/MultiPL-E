name: HumanEval_155_even_odd_count
language: lua
prompt: "-- Given an integer. return a table that has the number of even and odd digits\
  \ respectively.\n-- Example:\n-- >>> even_odd_count(-12) \n-- (1, 1)\n-- >>> even_odd_count(123)\
  \ \n-- (1, 2)\nlocal function even_odd_count(num)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = even_odd_count\n\
  \    lu.assertEquals(candidate(7), {0, 1})\n    lu.assertEquals(candidate(-78),\
  \ {1, 1})\n    lu.assertEquals(candidate(3452), {2, 2})\n    lu.assertEquals(candidate(346211),\
  \ {3, 3})\n    lu.assertEquals(candidate(-345821), {3, 3})\n    lu.assertEquals(candidate(-2),\
  \ {1, 0})\n    lu.assertEquals(candidate(-45347), {2, 3})\n    lu.assertEquals(candidate(0),\
  \ {1, 0})\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local even, odd = 0, 0\n    for i = 1, #num, 2 do\n        if num[i]\
    \ % 2 == 0 then\n            even = even + 1\n        else\n            odd =\
    \ odd + 1\n        end\n    end\n    return even, odd\nend", "    local even,\
    \ odd = 0, 0\n    for i = 1, #num, 2 do\n        if num[i] % 2 == 0 then\n   \
    \         even = even + 1\n        else\n            odd = odd + 1\n        end\n\
    \    end\n    return even, odd\nend", "    local even, odd = 0, 0\n    for i =\
    \ 1, #num do\n        if num[i] % 2 == 0 then\n            even = even + 1\n \
    \       else\n            odd = odd + 1\n        end\n    end\n    return even,\
    \ odd\nend", "    local even, odd = 0, 0\n    for i = 1, #num, 2 do\n        if\
    \ num[i] % 2 == 0 then\n            even = even + 1\n        else\n          \
    \  odd = odd + 1\n        end\n    end\n    return even, odd\nend", "    local\
    \ even, odd = 0, 0\n    for i = 1, #num, 2 do\n        if num[i] % 2 == 0 then\n\
    \            even = even + 1\n        else\n            odd = odd + 1\n      \
    \  end\n    end\n    return even, odd\nend", "    local even = 0\n    local odd\
    \ = 0\n    for i = 1, #num do\n        if num:sub(1, i) % 2 == 0 then\n      \
    \      even = even + 1\n        else\n            odd = odd + 1\n        end\n\
    \    end\n    return even, odd\nend", "    local even_count = 0\n    local odd_count\
    \ = 0\n    for i = 1, #num, 2 do\n        if num[i] % 2 == 0 then\n          \
    \  even_count = even_count + 1\n        end\n        if num[i] % 2 == 1 then\n\
    \            odd_count = odd_count + 1\n        end\n    end\n    return (even_count,\
    \ odd_count)\nend", "    local even_count = 0\n    local odd_count = 0\n    for\
    \ i = 1, #num, 2 do\n        if num[i] % 2 == 0 then\n            even_count =\
    \ even_count + 1\n        else\n            odd_count = odd_count + 1\n      \
    \  end\n    end\n    return (even_count, odd_count)\nend", "    local even = 0\n\
    \    local odd = 0\n    for i = 1, #num, 2 do\n        if num[i] % 2 == 0 then\n\
    \            even = even + 1\n        else\n            odd = odd + 1\n      \
    \  end\n    end\n    return (even, odd)\nend", "    local even_count = 0\n   \
    \ local odd_count = 0\n    for i = 1, #num, 2 do\n        if num[i] % 2 == 0 then\n\
    \            even_count = even_count + 1\n        else\n            odd_count\
    \ = odd_count + 1\n        end\n    end\n    return (even_count, odd_count)\n\
    end", "    local even_count = 0\n    local odd_count = 0\n    for i = 1, #num\
    \ do\n        if num[i] % 2 == 0 then\n            even_count = even_count + 1\n\
    \        else\n            odd_count = odd_count + 1\n        end\n    end\n \
    \   return (even_count, odd_count)\nend", "    local even = 0\n    local odd =\
    \ 0\n    for i = 1, #num do\n        if num[i] % 2 == 0 then\n            even\
    \ = even + 1\n        else\n            odd = odd + 1\n        end\n    end\n\
    \    return (even, odd)\nend", "    local even, odd = 0, 0\n    for i = 1, #num\
    \ do\n        if num[i] % 2 == 0 then\n            even = even + 1\n        else\n\
    \            odd = odd + 1\n        end\n    end\n    return even, odd\nend",
  "    local even, odd = 0, 0\n    for i = 1, #num, 2 do\n        if num[i] % 2 ==\
    \ 0 then\n            even = even + 1\n        else\n            odd = odd + 1\n\
    \        end\n    end\n    return even, odd\nend", "    local even_count = 0\n\
    \    local odd_count = 0\n    for i = 1, #num, 2 do\n        if num[i] % 2 ==\
    \ 0 then\n            even_count = even_count + 1\n        else\n            odd_count\
    \ = odd_count + 1\n        end\n    end\n    return (even_count, odd_count)\n\
    end", "    local even, odd = 0, 0\n    for i = 1, #num, 2 do\n        if num[i]\
    \ % 2 == 0 then\n            even = even + 1\n        else\n            odd =\
    \ odd + 1\n        end\n    end\n    return even, odd\nend", "    local even =\
    \ 0\n    local odd = 0\n    for i = 1, #num do\n        if num[i] % 2 == 0 then\n\
    \            even = even + 1\n        else\n            odd = odd + 1\n      \
    \  end\n    end\n    return (even, odd)\nend", "    local even, odd = 0, 0\n \
    \   for i = 1, #num, 2 do\n        if num[i] % 2 == 0 then\n            even =\
    \ even + 1\n        else\n            odd = odd + 1\n        end\n    end\n  \
    \  return even, odd\nend", "    local even, odd = 0, 0\n    for i = 1, #num, 2\
    \ do\n        if num[i] % 2 == 0 then\n            even = even + 1\n        else\n\
    \            odd = odd + 1\n        end\n    end\n    return even, odd\nend",
  "    local even, odd = 0, 0\n    for i = 1, #num, 2 do\n        if num[i] % 2 ==\
    \ 0 then\n            even = even + 1\n        else\n            odd = odd + 1\n\
    \        end\n    end\n    return even, odd\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

{
  "language": "lua",
  "name": "HumanEval_14_all_prefixes",
  "results": [
    {
      "exit_code": 1,
      "program": "-- Return table of all prefixes from shortest to longest of the input string\n-- >>> all_prefixes('abc')\n-- ['a', 'ab', 'abc']\nlocal function all_prefixes(string)\n    local table = {}\n    for i = 1, #string, 2 do\n        table[string:sub(1, i)] = true\n    end\n    return table\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = all_prefixes\n    lu.assertEquals(candidate(''), {})\n    lu.assertEquals(candidate('asdfgh'), {'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'})\n    lu.assertEquals(candidate('WWW'), {'W', 'WW', 'WWW'})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp95m1aoro.lua:16: expected: {\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"}\nactual: {a=true, asd=true, asdfg=true}\nstack traceback:\n\t/tmp/tmp95m1aoro.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907504
    },
    {
      "exit_code": 1,
      "program": "-- Return table of all prefixes from shortest to longest of the input string\n-- >>> all_prefixes('abc')\n-- ['a', 'ab', 'abc']\nlocal function all_prefixes(string)\n    local prefixes = {}\n    for i = 1, #string, 2 do\n        prefixes[string:sub(1, i)] = true\n    end\n    return prefixes\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = all_prefixes\n    lu.assertEquals(candidate(''), {})\n    lu.assertEquals(candidate('asdfgh'), {'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'})\n    lu.assertEquals(candidate('WWW'), {'W', 'WW', 'WWW'})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpe6vjt_el.lua:16: expected: {\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"}\nactual: {a=true, asd=true, asdfg=true}\nstack traceback:\n\t/tmp/tmpe6vjt_el.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907504
    },
    {
      "exit_code": 1,
      "program": "-- Return table of all prefixes from shortest to longest of the input string\n-- >>> all_prefixes('abc')\n-- ['a', 'ab', 'abc']\nlocal function all_prefixes(string)\n    local prefixes = {}\n    for i = 1, #string, 2 do\n        prefixes[string:sub(1, i)] = true\n    end\n    return prefixes\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = all_prefixes\n    lu.assertEquals(candidate(''), {})\n    lu.assertEquals(candidate('asdfgh'), {'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'})\n    lu.assertEquals(candidate('WWW'), {'W', 'WW', 'WWW'})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpe6vjt_el.lua:16: expected: {\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"}\nactual: {a=true, asd=true, asdfg=true}\nstack traceback:\n\t/tmp/tmpe6vjt_el.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907504
    },
    {
      "exit_code": 1,
      "program": "-- Return table of all prefixes from shortest to longest of the input string\n-- >>> all_prefixes('abc')\n-- ['a', 'ab', 'abc']\nlocal function all_prefixes(string)\n    local prefixes = {}\n    for i = 1, #string, 2 do\n        prefixes[string:sub(1,i)] = true\n    end\n    return prefixes\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = all_prefixes\n    lu.assertEquals(candidate(''), {})\n    lu.assertEquals(candidate('asdfgh'), {'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'})\n    lu.assertEquals(candidate('WWW'), {'W', 'WW', 'WWW'})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphumnog5n.lua:16: expected: {\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"}\nactual: {a=true, asd=true, asdfg=true}\nstack traceback:\n\t/tmp/tmphumnog5n.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907504
    },
    {
      "exit_code": 1,
      "program": "-- Return table of all prefixes from shortest to longest of the input string\n-- >>> all_prefixes('abc')\n-- ['a', 'ab', 'abc']\nlocal function all_prefixes(string)\n    local prefixes = {}\n    for inlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = all_prefixes\n    lu.assertEquals(candidate(''), {})\n    lu.assertEquals(candidate('asdfgh'), {'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'})\n    lu.assertEquals(candidate('WWW'), {'W', 'WW', 'WWW'})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpkdga5wap.lua:7: 'do' expected near '='\n",
      "stdout": "",
      "timestamp": 1661907504
    },
    {
      "exit_code": 1,
      "program": "-- Return table of all prefixes from shortest to longest of the input string\n-- >>> all_prefixes('abc')\n-- ['a', 'ab', 'abc']\nlocal function all_prefixes(string)\n    local table = {}\n    for i = 1, #string, 2 do\n        table[string:sub(1, i)] = true\n    end\n    return table\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = all_prefixes\n    lu.assertEquals(candidate(''), {})\n    lu.assertEquals(candidate('asdfgh'), {'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'})\n    lu.assertEquals(candidate('WWW'), {'W', 'WW', 'WWW'})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp95m1aoro.lua:16: expected: {\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"}\nactual: {a=true, asd=true, asdfg=true}\nstack traceback:\n\t/tmp/tmp95m1aoro.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907504
    },
    {
      "exit_code": 1,
      "program": "-- Return table of all prefixes from shortest to longest of the input string\n-- >>> all_prefixes('abc')\n-- ['a', 'ab', 'abc']\nlocal function all_prefixes(string)\n    local prefixes = {}\n    for i=1,#\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = all_prefixes\n    lu.assertEquals(candidate(''), {})\n    lu.assertEquals(candidate('asdfgh'), {'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'})\n    lu.assertEquals(candidate('WWW'), {'W', 'WW', 'WWW'})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpdzqj_4dq.lua:7: 'do' expected near '='\n",
      "stdout": "",
      "timestamp": 1661907504
    },
    {
      "exit_code": 1,
      "program": "-- Return table of all prefixes from shortest to longest of the input string\n-- >>> all_prefixes('abc')\n-- ['a', 'ab', 'abc']\nlocal function all_prefixes(string)\n    local table = {}\n    for i=1,#                              \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = all_prefixes\n    lu.assertEquals(candidate(''), {})\n    lu.assertEquals(candidate('asdfgh'), {'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'})\n    lu.assertEquals(candidate('WWW'), {'W', 'WW', 'WWW'})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmp98vhjjfx.lua:7: 'do' expected near '='\n",
      "stdout": "",
      "timestamp": 1661907504
    },
    {
      "exit_code": 1,
      "program": "-- Return table of all prefixes from shortest to longest of the input string\n-- >>> all_prefixes('abc')\n-- ['a', 'ab', 'abc']\nlocal function all_prefixes(string)\n    local prefixes = {}\n    for i = 1, #string, 2 do\n        prefixes[string:sub(1,i)] = true\n    end\n    return prefixes\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = all_prefixes\n    lu.assertEquals(candidate(''), {})\n    lu.assertEquals(candidate('asdfgh'), {'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'})\n    lu.assertEquals(candidate('WWW'), {'W', 'WW', 'WWW'})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphumnog5n.lua:16: expected: {\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"}\nactual: {a=true, asd=true, asdfg=true}\nstack traceback:\n\t/tmp/tmphumnog5n.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907504
    },
    {
      "exit_code": 1,
      "program": "-- Return table of all prefixes from shortest to longest of the input string\n-- >>> all_prefixes('abc')\n-- ['a', 'ab', 'abc']\nlocal function all_prefixes(string)\n    local result = {}\n    for i = 1, #string, 2 do\n        if string[i] ~= string[i-1] then\n            result[string[i]] = string[1:i]\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = all_prefixes\n    lu.assertEquals(candidate(''), {})\n    lu.assertEquals(candidate('asdfgh'), {'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'})\n    lu.assertEquals(candidate('WWW'), {'W', 'WW', 'WWW'})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpiwstg5bp.lua:8: ']' expected near ':'\n",
      "stdout": "",
      "timestamp": 1661907504
    },
    {
      "exit_code": 1,
      "program": "-- Return table of all prefixes from shortest to longest of the input string\n-- >>> all_prefixes('abc')\n-- ['a', 'ab', 'abc']\nlocal function all_prefixes(string)\n    local result = {}\n    for i = 1, #string, 1 do\n        for j = 1, #string, 1 do\n            if string[i] == string[j] then\n                table.insert(result, string[1:i])\n                table.insert(result, string[1:j])\n                table.insert(result, string[1:i+j])\n                table.insert(result, string[1:j+i])\n            end\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = all_prefixes\n    lu.assertEquals(candidate(''), {})\n    lu.assertEquals(candidate('asdfgh'), {'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'})\n    lu.assertEquals(candidate('WWW'), {'W', 'WW', 'WWW'})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpn0cwdqta.lua:9: ']' expected near ':'\n",
      "stdout": "",
      "timestamp": 1661907504
    },
    {
      "exit_code": 1,
      "program": "-- Return table of all prefixes from shortest to longest of the input string\n-- >>> all_prefixes('abc')\n-- ['a', 'ab', 'abc']\nlocal function all_prefixes(string)\n    local result = {}\n    for inlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = all_prefixes\n    lu.assertEquals(candidate(''), {})\n    lu.assertEquals(candidate('asdfgh'), {'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'})\n    lu.assertEquals(candidate('WWW'), {'W', 'WW', 'WWW'})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmp84j1tr0o.lua:7: 'do' expected near '='\n",
      "stdout": "",
      "timestamp": 1661907504
    },
    {
      "exit_code": 1,
      "program": "-- Return table of all prefixes from shortest to longest of the input string\n-- >>> all_prefixes('abc')\n-- ['a', 'ab', 'abc']\nlocal function all_prefixes(string)\n    local prefixes = {}\n    for i = 1, #string, 1 do\n        prefixes[string:sub(1, i)] = true\n    end\n    return prefixes\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = all_prefixes\n    lu.assertEquals(candidate(''), {})\n    lu.assertEquals(candidate('asdfgh'), {'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'})\n    lu.assertEquals(candidate('WWW'), {'W', 'WW', 'WWW'})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqgrqbz88.lua:16: expected: {\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"}\nactual: {a=true, as=true, asd=true, asdf=true, asdfg=true, asdfgh=true}\nstack traceback:\n\t/tmp/tmpqgrqbz88.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.001 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907504
    },
    {
      "exit_code": 1,
      "program": "-- Return table of all prefixes from shortest to longest of the input string\n-- >>> all_prefixes('abc')\n-- ['a', 'ab', 'abc']\nlocal function all_prefixes(string)\n    local prefixes = {}\n    for i = 1, #string, 2 do\n        prefixes[string:sub(1, i)] = true\n    end\n    return prefixes\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = all_prefixes\n    lu.assertEquals(candidate(''), {})\n    lu.assertEquals(candidate('asdfgh'), {'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'})\n    lu.assertEquals(candidate('WWW'), {'W', 'WW', 'WWW'})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpe6vjt_el.lua:16: expected: {\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"}\nactual: {a=true, asd=true, asdfg=true}\nstack traceback:\n\t/tmp/tmpe6vjt_el.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907504
    },
    {
      "exit_code": 1,
      "program": "-- Return table of all prefixes from shortest to longest of the input string\n-- >>> all_prefixes('abc')\n-- ['a', 'ab', 'abc']\nlocal function all_prefixes(string)\n    local table = {}\n    for i = 1, #string, 2 do\n        table[string:sub(1, i)] = true\n    end\n    return table\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = all_prefixes\n    lu.assertEquals(candidate(''), {})\n    lu.assertEquals(candidate('asdfgh'), {'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'})\n    lu.assertEquals(candidate('WWW'), {'W', 'WW', 'WWW'})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp95m1aoro.lua:16: expected: {\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"}\nactual: {a=true, asd=true, asdfg=true}\nstack traceback:\n\t/tmp/tmp95m1aoro.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907504
    },
    {
      "exit_code": 1,
      "program": "-- Return table of all prefixes from shortest to longest of the input string\n-- >>> all_prefixes('abc')\n-- ['a', 'ab', 'abc']\nlocal function all_prefixes(string)\n    local table = {}\n    for i = 1, #string, 2 do\n        table[string:sub(1, i)] = true\n    end\n    return table\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = all_prefixes\n    lu.assertEquals(candidate(''), {})\n    lu.assertEquals(candidate('asdfgh'), {'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'})\n    lu.assertEquals(candidate('WWW'), {'W', 'WW', 'WWW'})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp95m1aoro.lua:16: expected: {\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"}\nactual: {a=true, asd=true, asdfg=true}\nstack traceback:\n\t/tmp/tmp95m1aoro.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907504
    },
    {
      "exit_code": 1,
      "program": "-- Return table of all prefixes from shortest to longest of the input string\n-- >>> all_prefixes('abc')\n-- ['a', 'ab', 'abc']\nlocal function all_prefixes(string)\n    local table = {}\n    for inlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = all_prefixes\n    lu.assertEquals(candidate(''), {})\n    lu.assertEquals(candidate('asdfgh'), {'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'})\n    lu.assertEquals(candidate('WWW'), {'W', 'WW', 'WWW'})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpgj8bwdqw.lua:7: 'do' expected near '='\n",
      "stdout": "",
      "timestamp": 1661907504
    },
    {
      "exit_code": 1,
      "program": "-- Return table of all prefixes from shortest to longest of the input string\n-- >>> all_prefixes('abc')\n-- ['a', 'ab', 'abc']\nlocal function all_prefixes(string)\n    local result = {}\n    for i = 1, #string, 2 do\n        for j = 1, #string, i do\n            if string[j] == string[i] then\n                result[string[1:i]] = true\n                break\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = all_prefixes\n    lu.assertEquals(candidate(''), {})\n    lu.assertEquals(candidate('asdfgh'), {'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'})\n    lu.assertEquals(candidate('WWW'), {'W', 'WW', 'WWW'})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpzxnge477.lua:9: ']' expected near ':'\n",
      "stdout": "",
      "timestamp": 1661907504
    },
    {
      "exit_code": 1,
      "program": "-- Return table of all prefixes from shortest to longest of the input string\n-- >>> all_prefixes('abc')\n-- ['a', 'ab', 'abc']\nlocal function all_prefixes(string)\n    local table = {}\n    for inlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = all_prefixes\n    lu.assertEquals(candidate(''), {})\n    lu.assertEquals(candidate('asdfgh'), {'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'})\n    lu.assertEquals(candidate('WWW'), {'W', 'WW', 'WWW'})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpgj8bwdqw.lua:7: 'do' expected near '='\n",
      "stdout": "",
      "timestamp": 1661907504
    },
    {
      "exit_code": 1,
      "program": "-- Return table of all prefixes from shortest to longest of the input string\n-- >>> all_prefixes('abc')\n-- ['a', 'ab', 'abc']\nlocal function all_prefixes(string)\n    local table = {}\n    for i = 1, #string, 2 do\n        table[string:sub(1, i)] = true\n    end\n    return table\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = all_prefixes\n    lu.assertEquals(candidate(''), {})\n    lu.assertEquals(candidate('asdfgh'), {'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'})\n    lu.assertEquals(candidate('WWW'), {'W', 'WW', 'WWW'})\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp95m1aoro.lua:16: expected: {\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"}\nactual: {a=true, asd=true, asdfg=true}\nstack traceback:\n\t/tmp/tmp95m1aoro.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907504
    }
  ]
}
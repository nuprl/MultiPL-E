name: HumanEval_144_simplify
language: lua
prompt: "-- Your task is to implement a function that will simplify the expression\n\
  -- x * n. The function returns true if x * n evaluates to a whole number and false\n\
  -- otherwise. Both x and n, are string representation of a fraction, and have the\
  \ following format,\n-- <numerator>/<denominator> where both numerator and denominator\
  \ are positive whole numbers.\n-- You can assume that x, and n are valid fractions,\
  \ and do not have zero as denominator.\n-- >>> simplify(\"1/5\", \"5/1\")\n-- True\n\
  -- >>> simplify(\"1/6\", \"2/1\")\n-- False\n-- >>> simplify(\"7/10\", \"10/2\"\
  )\n-- False\nlocal function simplify(x, n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = simplify\n\
  \    lu.assertEquals(candidate('1/5', '5/1'), true)\n    lu.assertEquals(candidate('1/6',\
  \ '2/1'), false)\n    lu.assertEquals(candidate('5/1', '3/1'), true)\n    lu.assertEquals(candidate('7/10',\
  \ '10/2'), false)\n    lu.assertEquals(candidate('2/10', '50/10'), true)\n    lu.assertEquals(candidate('7/2',\
  \ '4/2'), true)\n    lu.assertEquals(candidate('11/6', '6/1'), true)\n    lu.assertEquals(candidate('2/3',\
  \ '5/2'), false)\n    lu.assertEquals(candidate('5/2', '3/5'), false)\n    lu.assertEquals(candidate('2/4',\
  \ '8/4'), true)\n    lu.assertEquals(candidate('2/4', '4/2'), true)\n    lu.assertEquals(candidate('1/5',\
  \ '5/1'), true)\n    lu.assertEquals(candidate('1/5', '1/5'), false)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local xn = tostring(x) .. \"/\" .. tostring(n)\n    local xd =\
    \ tostring(x) .. \"/\" .. tostring(n)\n    local xn_d = tostring(x) .. \"/\" ..\
    \ tostring(n) .. \"/\" .. tostring(n)\n    local xd_n = tostring(x) .. \"/\" ..\
    \ tostring(n) .. \"/\" .. tostring(n)\n    local xn_n = tostring(x) .. \"/\" ..\
    \ tostring(n) .. \"/\" .. tostring(n) .. \"/\" .. tostring(n)\n    local xd_d\
    \ = tostring(x) .. \"/\" .. tostring(n) .. \"/\" .. tostring(n) .. \"/\" .. tostring(n)\n\
    \    local xd_n_d = tostring(x) .. \"/\" .. tostring(n) .. \"/\" .. tostring(n)\
    \ .. \"/\" .. tostring(n) .. \"/\" .. tostring(n)\n    local xd_n_n = tostring(x)\
    \ .. \"/\" .. tostring(n) .. \"/\" .. tostring(n) .. \"/\" .. tostring(n) .. \"\
    /\" .. tostring(n) .. \"/\" .. tostring(n)\n    local xn_d_n = tostring(x) ..\
    \ \"/\" .. tostring(n) .. \"/\" .. tostring(n) .. \"/\" .. tostring(n)\n    local\
    \ xn_n_d = tostring(x) .. \"/\" .. tostring(n) .. \"/\" .. tostring(n) .. \"/\"\
    \ .. tostring(n) .. \"/\" .. tostring(n)\n    local xn_n_n = tostring(x) .. \"\
    /\" .. tostring(n) .. \"/\" .. tostring(n) .. \"/\" .. tostring(n) .. \"/\" ..\
    \ tostring(n) .. \"/\" .. tostring(n)\n    local xd_d_n = tostring(x) .. \"/\"\
    \ .. tostring(n) .. \"/\" .. tostring(n) .. \"/\" .. tostring(n)\n    local xd_n_d_n\
    \ = tostring(x) .. \"/\" .. tostring(n", "    local xn = math.floor(math.toFloat(x)\
    \ * math.toFloat(n))\n    return xn == math.toFloat(x) * math.toFloat(n)\nend",
  "    local x, n = tostring(x), tostring(n)\n    local x_n = tostring(x * n)\n  \
    \  if x_n == \"0\" then return true\n    elseif x_n == \"1\" then return false\n\
    \    elseif x_n[1] == \"0\" then return false\n    elseif x_n[2] == \"0\" then\
    \ return false\n    elseif x_n[3] == \"0\" then return false\n    elseif x_n[4]\
    \ == \"0\" then return false\n    elseif x_n[5] == \"0\" then return false\n \
    \   elseif x_n[6] == \"0\" then return false\n    elseif x_n[7] == \"0\" then\
    \ return false\n    elseif x_n[8] == \"0\" then return false\n    elseif x_n[9]\
    \ == \"0\" then return false\n    elseif x_n[10] == \"0\" then return false\n\
    \    elseif x_n[11] == \"0\" then return false\n    elseif x_n[12] == \"0\" then\
    \ return false\n    elseif x_n[13] == \"0\" then return false\n    elseif x_n[14]\
    \ == \"0\" then return false\n    elseif x_n[15] == \"0\" then return false\n\
    \    elseif x_n[16] == \"0\" then return false\n    elseif x_n[17] == \"0\" then\
    \ return false\n    elseif x_n[18] == \"0\" then return false\n    elseif x_n[19]\
    \ == \"0\" then return false\n    elseif x_n[20] == \"0\" then return false\n\
    \    elseif x_n[21] == \"0\" then return false\n    elseif x_n[22] == \"0\" then\
    \ return false\n    elseif x_n[23] == \"0\" then return false\n    elseif x_n[24]\
    \ == \"0\" then return false\n    elseif x_n[25] == \"0\" then return false\n\
    \    elseif x_n[26] == \"0\" then return false\n    elseif x_n[27] == \"0", " \
    \   local xn = math.floor(x * n)\n    return xn == math.floor(xn / n)\nend", " \
    \   local x, n = tostring(x), tostring(n)\n    local xn, nx, nn, xd, nd = math.tonumber(x),\
    \ math.tonumber(n), 1, 1, 1\n    if x == \"0\" then return true end\n    if n\
    \ == \"0\" then return false end\n    if x == \"1\" then return true end\n   \
    \ if n == \"1\" then return false end\n    if x == \"-\" then return false end\n\
    \    if n == \"-\" then return false end\n    if x == \".\" then return false\
    \ end\n    if n == \".\" then return false end\n    if x == \"/\" then return\
    \ false end\n    if n == \"/\" then return false end\n    if x == \"*\" then return\
    \ false end\n    if n == \"*\" then return false end\n    if x == \"**\" then\
    \ return false end\n    if n == \"**\" then return false end\n    if x == \"-\"\
    \ then xn, nx = -xn, -nx end\n    if n == \"-\" then nn, nd = -nn, -nd end\n \
    \   if xn == 0 then return false end\n    if nn == 0 then return false end\n \
    \   if xn < 0 then return false end\n    if nn < 0 then return false end\n   \
    \ if xd == 0 then return false end\n    if nd == 0 then return false end\n   \
    \ if xd < 0 then return false end\n    if nd < 0 then return false end\n    if\
    \ xn == nn then return true end\n    if xn == nd then return true end\n    if\
    \ nn == nd then return true end\n    if xn < nn then return true end\n    if xn\
    \ > nn then return true end\n    if nn < nd then return true end\n    if nn >\
    \ nd then return true end\n    if xn == xd then return true end\n    if xn ==\
    \ nd then return true end\n    if nn == nd then return true end\n    if xn < xd\
    \ then return true end\n    if xn > xd then return true end\n    if nn < nd then\
    \ return true end\n    if nn > nd then return true", "    local x, n\n    if x\
    \ == \"0\" then return true end\n    if n == \"0\" then return false end\n   \
    \ if x == \"1\" then return true end\n    if n == \"1\" then return false end\n\
    \    if x == \"2\" then return true end\n    if n == \"2\" then return false end\n\
    \    if x == \"3\" then return true end\n    if n == \"3\" then return false end\n\
    \    if x == \"4\" then return true end\n    if n == \"4\" then return false end\n\
    \    if x == \"5\" then return true end\n    if n == \"5\" then return false end\n\
    \    if x == \"6\" then return true end\n    if n == \"6\" then return false end\n\
    \    if x == \"7\" then return true end\n    if n == \"7\" then return false end\n\
    \    if x == \"8\" then return true end\n    if n == \"8\" then return false end\n\
    \    if x == \"9\" then return true end\n    if n == \"9\" then return false end\n\
    \    if x == \"10\" then return true end\n    if n == \"10\" then return false\
    \ end\n    if x == \"11\" then return true end\n    if n == \"11\" then return\
    \ false end\n    if x == \"12\" then return true end\n    if n == \"12\" then\
    \ return false end\n    if x == \"13\" then return true end\n    if n == \"13\"\
    \ then return false end\n    if x == \"14\" then return true end\n    if n ==\
    \ \"14\" then return false end\n    if x == \"15\" then return true end\n    if\
    \ n == \"15\" then return false end\n    if x == \"16\" then return true end\n\
    \    if n == \"16\" then return false end\n    if x == \"17\" then return true\
    \ end\n    if n == \"17\" then return false end\n    if x == \"18\" then return\
    \ true end\n    if n == \"18\" then return false end\n    if x == \"19\" then\
    \ return true end\n    if n == \"19\" then return false end\n    if x == \"20\"\
    \ then return true end\n    if n == \"20\" then return false end\n    if", " \
    \   local xn = tostring(x) .. \"/\" .. tostring(n)\n    local xd = math.floor(string.gsub(xn,\
    \ \"/\", \"\") .. \".\")\n    local nd = math.floor(string.gsub(n, \"/\", \"\"\
    ) .. \".\")\n    return xd == nd\nend", "    local x, n\n    if x == \"0\" or\
    \ n == \"0\" then\n        return true\n    end\n    local x, n\n    x = x:gsub(\"\
    ^-\", \"\")\n    n = n:gsub(\"^-\", \"\")\n    if x == \"0\" or n == \"0\" then\n\
    \        return true\n    end\n    local x, n\n    x = x:gsub(\"/\", \"\")\n \
    \   n = n:gsub(\"/\", \"\")\n    if x == \"0\" or n == \"0\" then\n        return\
    \ true\n    end\n    local x, n\n    x = x:gsub(\"^0\", \"\")\n    n = n:gsub(\"\
    ^0\", \"\")\n    if x == \"0\" or n == \"0\" then\n        return true\n    end\n\
    \    local x, n\n    x = x:gsub(\"^1\", \"\")\n    n = n:gsub(\"^1\", \"\")\n\
    \    if x == \"0\" or n == \"0\" then\n        return true\n    end\n    local\
    \ x, n\n    x = x:gsub(\"^2\", \"\")\n    n = n:gsub(\"^2\", \"\")\n    if x ==\
    \ \"0\" or n == \"0\" then\n        return true\n    end\n    local x, n\n   \
    \ x = x:gsub(\"^3\", \"\")\n    n = n:gsub(\"^3\", \"\")\n    if x == \"0\" or\
    \ n == \"0\" then\n        return true\n    end\n    local x, n\n    x = x:gsub(\"\
    ^4\", \"\")\n    n = n:gsub(\"^4\", \"\")\n    if x == \"0\" or n == \"0\" then\n\
    \        return true\n    end\n    local x, n\n    x = x:gsub(\"^5\", \"\")\n\
    \    n = n:gsub(\"^5\", \"\")\n    if x == \"0\" or n == \"0\" then\n        return\
    \ true\n    end\n    local x, n\n    x = x:gsub(\"^6\", \"\")\n    n = n:gsub(\"\
    ^6\", \"\")\n    if x ==", "    local x_n = to_number(x)\n    local n_x = to_number(n)\n\
    \    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    return x_n\
    \ * n_x == math.floor(x_n * n_x)\nend", "    local xn = tostring(x)\n    local\
    \ nn = tostring(n)\n    local xd = math.floor(math.abs(tonumber(xn) / tonumber(nn)))\n\
    \    if xd == 0 then\n        return true\n    else\n        return false\n  \
    \  end\nend", "    local x_n = to_number(x)\n    local n_x = to_number(n)\n  \
    \  if x_n == 0 or n_x == 0 then\n        return true\n    end\n    local x_n_d\
    \ = math.floor(x_n)\n    local n_x_d = math.floor(n_x)\n    if x_n_d / n_x_d ==\
    \ x_n / n_x then\n        return true\n    end\n    return false\nend", "    local\
    \ xn = tostring(x) .. \"/\" .. tostring(n)\n    local xd = tostring(x) .. \"/\"\
    \ .. tostring(n)\n    local xn_int = tostring(x) .. \".\" .. tostring(n)\n   \
    \ local xd_int = tostring(x) .. \".\" .. tostring(n)\n    if xn == xd then\n \
    \       return true\n    else\n        return false\n    end\nend", "    local\
    \ xn = tostring(x)\n    local nn = tostring(n)\n    local xd = math.floor(math.log(xn,\
    \ 2))\n    local nd = math.floor(math.log(nn, 2))\n    local xnumerator = math.floor(math.pow(2,\
    \ xd))\n    local xdenominator = math.pow(2, xd - 1)\n    local nnumerator = math.floor(math.pow(2,\
    \ nd))\n    local ndenominator = math.pow(2, nd - 1)\n    if xnumerator == nnumerator\
    \ and xdenominator == ndenominator then\n        return true\n    else\n     \
    \   return false\nend", "    local x, n\n    if x == \"0\" then\n        return\
    \ true\n    elseif n == \"0\" then\n        return false\n    elseif x == \"1\"\
    \ then\n        return true\n    elseif n == \"1\" then\n        return false\n\
    \    elseif x == \"2\" then\n        return true\n    elseif n == \"2\" then\n\
    \        return false\n    elseif x == \"3\" then\n        return true\n    elseif\
    \ n == \"3\" then\n        return false\n    elseif x == \"4\" then\n        return\
    \ true\n    elseif n == \"4\" then\n        return false\n    elseif x == \"5\"\
    \ then\n        return true\n    elseif n == \"5\" then\n        return false\n\
    \    elseif x == \"6\" then\n        return true\n    elseif n == \"6\" then\n\
    \        return false\n    elseif x == \"7\" then\n        return true\n    elseif\
    \ n == \"7\" then\n        return false\n    elseif x == \"8\" then\n        return\
    \ true\n    elseif n == \"8\" then\n        return false\n    elseif x == \"9\"\
    \ then\n        return true\n    elseif n == \"9\" then\n        return false\n\
    \    else\n        return false\nend", "    local xn = math.floor(x * n)\n   \
    \ return xn == math.floor(xn / n)\nend", "    local x_num, x_den, n_num, n_den\n\
    \    x_num = tonumber(x)\n    x_den = tonumber(x)\n    n_num = tonumber(n)\n \
    \   n_den = tonumber(n)\n    if x_num == 0 or n_num == 0 then\n        return\
    \ false\n    end\n    return x_num * n_den == x_den * n_num\nend", "    local\
    \ xn = tostring(x) .. \"/\" .. tostring(n)\n    local xd = math.floor(math.abs(tonumber(xn)))\n\
    \    local nd = math.floor(math.abs(tonumber(n)))\n    if xd == 0 or nd == 0 then\n\
    \        return true\n    elseif xd == nd then\n        return true\n    else\n\
    \        return false\nend", "    local xn = math.floor(math.toFloat(x) * math.toFloat(n))\n\
    \    return xn == math.toFloat(x) * math.toFloat(n)\nend", "    local x_n = to_number(x)\n\
    \    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return\
    \ true\n    end\n    return x_n * n_x == math.floor(x_n * n_x)\nend", "    local\
    \ x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x ==\
    \ 0 then\n        return true\n    end\n    return x_n * n_x == math.floor(x_n\
    \ * n_x)\nend", "    local xn = to_number(x)\n    local nn = to_number(n)\n  \
    \  if xn == 0 or nn == 0 then\n        return true\n    end\n    return xn / nn\
    \ == xn / nn\nend", "    local x, n\n    x = tostring(x)\n    n = tostring(n)\n\
    \    local x_n = tostring(x * n)\n    local x_n_num = x_n:match(\"^(\\\\d+)/(\\\
    \\d+)$\")\n    if x_n_num then\n        if x_n_num[1] == \"0\" or x_n_num[2] ==\
    \ \"0\" then\n            return false\n        else\n            return true\n\
    \        end\n    else\n        return false\n    end\nend", "    local xn = math.floor(x\
    \ * n)\n    return xn == math.floor(xn / n)\nend", "    local x, n\n    if x ==\
    \ \"0\" or n == \"0\" then\n        return true\n    end\n    local x_n = string.match(x,\
    \ \"^([0-9]+)/([0-9]+)$\")\n    local n_x = string.match(n, \"^([0-9]+)/([0-9]+)$\"\
    )\n    if x_n and n_x then\n        if x_n[1] == n_x[1] and x_n[2] == n_x[2] then\n\
    \            return true\n        end\n    end\n    return false\nend", "    local\
    \ xn = tostring(x) .. \"*\" .. tostring(n)\n    local xd = tostring(x) .. \"/\"\
    \ .. tostring(n)\n    if xn == xd then\n        return true\n    else\n      \
    \  return false\n    end\nend", "    local x, n\n    local x_n, x_d, n_x, n_d,\
    \ x_n_d, x_d_n\n    x_n = tostring(x)\n    x_d = tostring(x / tostring(x))\n \
    \   n_x = tostring(n)\n    n_d = tostring(n / tostring(n))\n    x_n_d = tostring(x\
    \ / n)\n    x_d_n = tostring(x / n / n)\n    return x_n_d == x_d_n\nend", "  \
    \  local xn = tostring(x)\n    local nn = tostring(n)\n    local xn_num = xn:match(\"\
    ^(\\\\d+)/(\\\\d+)$\")\n    local nn_num = nn:match(\"^(\\\\d+)/(\\\\d+)$\")\n\
    \    if xn_num and nn_num then\n        if xn_num[1] == nn_num[1] then\n     \
    \       return true\n        else\n            return false\n        end\n   \
    \ else\n        return false\n    end\nend", "    local xn = to_number(x)\n  \
    \  local nn = to_number(n)\n    if xn == 0 or nn == 0 then\n        return false\n\
    \    end\n    return xn * nn == math.floor(xn * nn)\nend", "    local xn = tostring(x)\
    \ .. \"/\" .. tostring(n)\n    local xd = math.floor(string.tonumber(xn))\n  \
    \  local nd = math.floor(string.tonumber(n))\n    return xd == nd\nend", "   \
    \ local xn = tostring(x) .. \"/\" .. tostring(n)\n    local xd = math.floor(string.tonumber(xn))\n\
    \    local nd = math.floor(string.tonumber(n))\n    if xd == nd then\n       \
    \ return true\n    else\n        return false\nend", "    local xn = tostring(x)\
    \ .. \"*\" .. tostring(n)\n    local xd = tostring(x) .. \"/\" .. tostring(n)\n\
    \    if xn == xd then\n        return true\n    else\n        return false\nend",
  "    local x, n\n    if x == \"0\" then return true end\n    if n == \"0\" then\
    \ return false end\n    if x == \"1\" then return true end\n    if n == \"1\"\
    \ then return false end\n    if x == \"2\" then return true end\n    if n == \"\
    2\" then return false end\n    if x == \"3\" then return true end\n    if n ==\
    \ \"3\" then return false end\n    if x == \"4\" then return true end\n    if\
    \ n == \"4\" then return false end\n    if x == \"5\" then return true end\n \
    \   if n == \"5\" then return false end\n    if x == \"6\" then return true end\n\
    \    if n == \"6\" then return false end\n    if x == \"7\" then return true end\n\
    \    if n == \"7\" then return false end\n    if x == \"8\" then return true end\n\
    \    if n == \"8\" then return false end\n    if x == \"9\" then return true end\n\
    \    if n == \"9\" then return false end\n    if x == \"10\" then return true\
    \ end\n    if n == \"10\" then return false end\n    if x == \"11\" then return\
    \ true end\n    if n == \"11\" then return false end\n    if x == \"12\" then\
    \ return true end\n    if n == \"12\" then return false end\n    if x == \"13\"\
    \ then return true end\n    if n == \"13\" then return false end\n    if x ==\
    \ \"14\" then return true end\n    if n == \"14\" then return false end\n    if\
    \ x == \"15\" then return true end\n    if n == \"15\" then return false end\n\
    \    if x == \"16\" then return true end\n    if n == \"16\" then return false\
    \ end\n    if x == \"17\" then return true end\n    if n == \"17\" then return\
    \ false end\n    if x == \"18\" then return true end\n    if n == \"18\" then\
    \ return false end\n    if x == \"19\" then return true end\n    if n == \"19\"\
    \ then return false end\n    if x == \"20\" then return true end\n    if n ==\
    \ \"20\" then return false end\n    if", "    local x_n = to_number(x)\n    local\
    \ n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n\
    \    end\n    return x_n * n_x == math.floor(x_n * n_x)\nend", "    local xn =\
    \ tostring(x)\n    local nn = tostring(n)\n    local xd = math.floor(math.abs(tonumber(xn)\
    \ / tonumber(nn)))\n    if xd == 0 then\n        return true\n    else\n     \
    \   return false\n    end\nend", "    local x_n = to_number(x)\n    local n_x\
    \ = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n\
    \    return x_n * n_x == math.floor(x_n * n_x)\nend", "    local x, n\n    if\
    \ x == \"0\" or n == \"0\" then\n        return true\n    end\n    local x, n\n\
    \    x = tostring(x)\n    n = tostring(n)\n    local x, n\n    x = x:gsub(\"^-\"\
    , \"\")\n    n = n:gsub(\"^-\", \"\")\n    local x, n\n    x = x:gsub(\"/\", \"\
    \")\n    n = n:gsub(\"/\", \"\")\n    local x, n\n    x = x:gsub(\"^0\", \"\"\
    )\n    n = n:gsub(\"^0\", \"\")\n    local x, n\n    x = x:gsub(\"^1\", \"\")\n\
    \    n = n:gsub(\"^1\", \"\")\n    local x, n\n    x = x:gsub(\"^2\", \"\")\n\
    \    n = n:gsub(\"^2\", \"\")\n    local x, n\n    x = x:gsub(\"^3\", \"\")\n\
    \    n = n:gsub(\"^3\", \"\")\n    local x, n\n    x = x:gsub(\"^4\", \"\")\n\
    \    n = n:gsub(\"^4\", \"\")\n    local x, n\n    x = x:gsub(\"^5\", \"\")\n\
    \    n = n:gsub(\"^5\", \"\")\n    local x, n\n    x = x:gsub(\"^6\", \"\")\n\
    \    n = n:gsub(\"^6\", \"\")\n    local x, n\n    x = x:gsub(\"^7\", \"\")\n\
    \    n = n:gsub(\"^7\", \"\")\n    local x, n\n    x = x:gsub(\"^8\", \"\")\n\
    \    n = n:gsub(\"^8\", \"\")\n    local x, n\n    x = x:gsub(\"^9\", \"\")\n\
    \    n = n:gsub(\"^9\", \"\")\n    local x, n\n    x = x:gsub(\"^10\", \"\")\n\
    \    n = n:gsub(\"^10\", \"\")\n    local x, n\n    x = x:gsub(\"^11\", \"\")\n",
  "    local xn = to_number(x)\n    local nn = to_number(n)\n    if xn == 0 or nn\
    \ == 0 then\n        return true\n    end\n    if xn < 0 or nn < 0 then\n    \
    \    return false\n    end\n    return xn * nn == xn / nn\nend", "    local x_n\
    \ = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n\
    \        return true\n    end\n    return x_n * n_x == math.floor(x_n * n_x)\n\
    end", "    local xn = to_number(x)\n    local nn = to_number(n)\n    if xn ==\
    \ 0 or nn == 0 then\n        return true\n    end\n    if xn < 0 or nn < 0 then\n\
    \        return false\n    end\n    if xn == nn then\n        return true\n  \
    \  end\n    return false\nend", "    local x_n = to_number(x)\n    local n_x =\
    \ to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n\
    \    return x_n * n_x == math.floor(x_n * n_x)\nend", "    local xn = tostring(x)\
    \ .. \"/\" .. tostring(n)\n    local xd = math.floor(string.gsub(xn, \"/(.*)$\"\
    , \"\"))\n    local nd = math.floor(string.gsub(n, \"/(.*)$\", \"\"))\n    return\
    \ xd == nd\nend", "    local x, n = tostring(x), tostring(n)\n    local xn = tostring(x\
    \ * n)\n    if xn == \"0\" then return true end\n    local xd = tostring(x / n)\n\
    \    if xd == \"0\" then return true end\n    return xn == xd\nend", "    local\
    \ x_num = tonumber(x)\n    local n_num = tonumber(n)\n    if x_num == 0 or n_num\
    \ == 0 then\n        return false\n    end\n    return x_num * n_num == math.floor(x_num\
    \ * n_num)\nend", "    local xn = to_number(x)\n    local nn = to_number(n)\n\
    \    if xn == 0 or nn == 0 then\n        return true\n    end\n    return xn *\
    \ nn == math.floor(xn * nn)\nend", "    local xn = to_number(x)\n    local nn\
    \ = to_number(n)\n    if xn == 0 or nn == 0 then\n        return true\n    end\n\
    \    return xn * nn == xn\nend", "    local xn = tostring(x) .. \"/\" .. tostring(n)\n\
    \    local xd = math.floor(math.abs(tonumber(xn)))\n    local nd = math.floor(math.abs(tonumber(n)))\n\
    \    if xd == 0 or nd == 0 then\n        return true\n    else\n        return\
    \ xd == nd\n    end\nend", "    local x_num = tonumber(x)\n    local n_num = tonumber(n)\n\
    \    if x_num == 0 or n_num == 0 then\n        return false\n    end\n    if x_num\
    \ < 0 or n_num < 0 then\n        return false\n    end\n    if x_num < n_num then\n\
    \        return false\n    end\n    return true\nend", "    local xn = to_number(x)\n\
    \    local nn = to_number(n)\n    if xn == 0 or nn == 0 then\n        return false\n\
    \    end\n    if xn < 0 or nn < 0 then\n        return false\n    end\n    if\
    \ xn == nn then\n        return true\n    end\n    return false\nend", "    local\
    \ x, n\n    local x_n, n_x\n    local x_n_x, n_x_n\n    local x_n_x_n, n_x_n_x\n\
    \    local x_n_x_n_x, n_x_n_x_n\n    local x_n_x_n_x_n, n_x_n_x_n_x\n    local\
    \ x_n_x_n_x_n_x, n_x_n_x_n_x_n\n    local x_n_x_n_x_n_x_n, n_x_n_x_n_x_n_x\n \
    \   local x_n_x_n_x_n_x_n_x, n_x_n_x_n_x_n_x_n\n    local x_n_x_n_x_n_x_n_x_n,\
    \ n_x_n_x_n_x_n_x_n_x\n    local x_n_x_n_x_n_x_n_x_n_x, n_x_n_x_n_x_n_x_n_x_n\n\
    \    local x_n_x_n_x_n_x_n_x_n_x_n, n_x_n_x_n_x_n_x_n_x_n_x\n    local x_n_x_n_x_n_x_n_x_n_x_n_x,\
    \ n_x_n_x_n_x_n_x_n_x_n_x_n\n    local x_n_x_n_x_n_x_n_x_n_x_n_x_n, n_x_n_x_n_x_n_x_n_x_n_x_n_x_n\n\
    \    local x_n_x_n_x_n_x_n_x_n_x_n_x_n_x, n_x_n_x_n_x_n_x_n_x_n_x_n_x_n_", " \
    \   local x, n = tostring(x), tostring(n)\n    local xn = tostring(x * n)\n  \
    \  if xn == \"0\" then return true end\n    local xd = tostring(x / n)\n    if\
    \ xd == \"0\" then return true end\n    return xn == xd\nend", "    local xn =\
    \ math.floor(x * n)\n    if xn == 0 then\n        return true\n    else\n    \
    \    return false\n    end\nend", "    local x_num, x_den, n_num, n_den\n    x_num\
    \ = tostring(x)\n    x_den = tostring(x)\n    n_num = tostring(n)\n    n_den =\
    \ tostring(n)\n    if x_num == \"0\" or n_num == \"0\" then\n        return true\n\
    \    elseif x_num == \"1\" or n_num == \"1\" then\n        return false\n    else\n\
    \        return simplify_rec(x_num, x_den, n_num, n_den)\n    end\nend", "   \
    \ local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x\
    \ == 0 then\n        return true\n    end\n    return x_n * n_x == x_n\nend",
  "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or\
    \ n_x == 0 then\n        return true\n    end\n    return x_n * n_x == x_n\nend",
  "    local x_n = string.match(x, \"^([0-9]+)/([0-9]+)$\")\n    local n_x = string.match(n,\
    \ \"^([0-9]+)/([0-9]+)$\")\n    if x_n and n_x then\n        return math.floor(x_n[1]\
    \ * n_x[1] / math.gcd(x_n[1], n_x[1])) == x_n[2] and\n            math.floor(x_n[2]\
    \ * n_x[2] / math.gcd(x_n[2], n_x[2])) == n_x[2]\n    end\n    return false\n\
    end", "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n\
    \ == 0 or n_x == 0 then\n        return true\n    end\n    return x_n * n_x ==\
    \ math.floor(x_n * n_x)\nend", "    local xn = tostring(x) .. \"/\" .. tostring(n)\n\
    \    local xd = math.floor(string.tonumber(xn))\n    local nd = math.floor(string.tonumber(n))\n\
    \    if xd == nd then\n        return true\n    else\n        return false\nend",
  "    local x, n\n    if x == \"0\" or n == \"0\" then\n        return true\n   \
    \ end\n    local x, n\n    if x == \"0\" or n == \"0\" then\n        return true\n\
    \    end\n    local x, n\n    if x == \"0\" or n == \"0\" then\n        return\
    \ true\n    end\n    local x, n\n    if x == \"0\" or n == \"0\" then\n      \
    \  return true\n    end\n    local x, n\n    if x == \"0\" or n == \"0\" then\n\
    \        return true\n    end\n    local x, n\n    if x == \"0\" or n == \"0\"\
    \ then\n        return true\n    end\n    local x, n\n    if x == \"0\" or n ==\
    \ \"0\" then\n        return true\n    end\n    local x, n\n    if x == \"0\"\
    \ or n == \"0\" then\n        return true\n    end\n    local x, n\n    if x ==\
    \ \"0\" or n == \"0\" then\n        return true\n    end\n    local x, n\n   \
    \ if x == \"0\" or n == \"0\" then\n        return true\n    end\n    local x,\
    \ n\n    if x == \"0\" or n == \"0\" then\n        return true\n    end\n    local\
    \ x, n\n    if x == \"0\" or n == \"0\" then\n        return true\n    end\n \
    \   local x, n\n    if x == \"0\" or n == \"0\" then\n        return true\n  \
    \  end\n    local x, n\n    if x == \"0\" or n == \"0\" then\n        return true\n\
    \    end\n    local x, n\n    if x == \"0\" or n == \"0\" then\n        return\
    \ true\n    end\n    local x, n\n    if x == \"0\" or n == \"0\" then\n      \
    \  return true\n    end\n    local x, n\n    if x == \"0\" or n == \"0\" then\n\
    \        return true\n    end\n    local x, n\n    if x == \"0\" or n == \"0\"\
    \ then\n        return true\n    end\n    local x, n\n    if", "    local x_n\
    \ = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n\
    \        return true\n    end\n    if x_n < 0 or n_x < 0 then\n        return\
    \ false\n    end\n    if x_n == n_x then\n        return true\n    end\n    return\
    \ false\nend", "    local xn = math.floor(x * n)\n    if xn == math.floor(xn)\
    \ then\n        return true\n    else\n        return false\n    end\nend", " \
    \   local xn = tostring(x)\n    local nn = tostring(n)\n    local xd = tostring(math.floor(math.abs(tonumber(xn)\
    \ / tonumber(nn))))\n    local nd = tostring(math.floor(math.abs(tonumber(nn)\
    \ / tonumber(xn))))\n    return xd == nd\nend", "    local x_n = to_number(x)\n\
    \    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return\
    \ true\n    end\n    return x_n * n_x == math.floor(x_n * n_x)\nend", "    local\
    \ xn = tostring(x) .. \"/\" .. tostring(n)\n    local xd = math.floor(math.sqrt(math.pow(tonumber(xn),\
    \ 2) + 1))\n    local nd = math.floor(math.sqrt(math.pow(tonumber(n), 2) + 1))\n\
    \    if xd == nd then\n        return true\n    else\n        return false\nend",
  "    local xn = tostring(x)\n    local nn = tostring(n)\n    local xd = tostring(math.floor(math.abs(tonumber(xn)\
    \ / tonumber(nn))))\n    local nd = tostring(math.floor(math.abs(tonumber(nn)\
    \ / tonumber(xn))))\n    if xd == \"0\" or nd == \"0\" then\n        return false\n\
    \    end\n    return true\nend", "    local x_n = to_number(x)\n    local n_x\
    \ = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n\
    \    return x_n * n_x == math.floor(x_n * n_x)\nend", "    local x, n\n    local\
    \ x_n, x_d, n_x, n_d, x_n_d, n_x_d\n    x_n = tostring(x)\n    x_d = tostring(x)\n\
    \    n_x = tostring(n)\n    n_d = tostring(n)\n    x_n_d = tostring(x / n)\n \
    \   n_x_d = tostring(n / x)\n    return x_n_d == x_d and n_x_d == n_d\nend", " \
    \   local xn = math.floor(math.fmod(string.gsub(x, \"^\", \"\"), string.gsub(n,\
    \ \"^\", \"\")))\n    return xn == 0\nend", "    local xn = to_number(x)\n   \
    \ local nn = to_number(n)\n    if xn == 0 or nn == 0 then\n        return true\n\
    \    end\n    return xn * nn == math.floor(xn * nn)\nend", "    local x_n = to_number(x)\n\
    \    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return\
    \ true\n    end\n    if x_n < 0 or n_x < 0 then\n        return false\n    end\n\
    \    return x_n * n_x == math.floor(x_n * n_x)\nend", "    local xn = to_number(x)\n\
    \    local nn = to_number(n)\n    if xn == 0 or nn == 0 then\n        return false\n\
    \    end\n    return xn * nn == xn\nend", "    local x_n = to_number(x)\n    local\
    \ n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n\
    \    end\n    return x_n * n_x == x_n\nend", "    local x_n = to_number(x)\n \
    \   local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return\
    \ true\n    end\n    return x_n * n_x == x_n\nend", "    local x_n = to_number(x)\n\
    \    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return\
    \ true\n    end\n    return x_n * n_x == math.floor(x_n * n_x)\nend", "    local\
    \ x_n = string.gsub(x, \"^(.*)/(.*)$\", \"\\\\1/\\\\2\")\n    local n_x = string.gsub(n,\
    \ \"^(.*)/(.*)$\", \"\\\\1/\\\\2\")\n    return x_n == n_x\nend", "    local xn\
    \ = tostring(x) .. \"*\" .. tostring(n)\n    local xd = tostring(x) .. \"/\" ..\
    \ tostring(n)\n    if xn == xd then\n        return true\n    else\n        return\
    \ false\nend\n\"\"\"", "    local xn = to_number(x)\n    local nn = to_number(n)\n\
    \    if xn == 0 or nn == 0 then\n        return false\n    end\n    return xn\
    \ / nn == xn / nn\nend", "    local x, n = tostring(x), tostring(n)\n    local\
    \ x_n = tostring(x / n)\n    local x_n_n = tostring(x / n / n)\n    if x_n ==\
    \ x_n_n then\n        return true\n    else\n        return false\n    end\nend",
  "    local xn = tostring(x) .. \"/\" .. tostring(n)\n    local xd = math.floor(math.sqrt(math.pow(tonumber(xn),\
    \ 2) + 1))\n    if xd == 0 then\n        return true\n    else\n        return\
    \ xn .. \"=\" .. xd .. \"/\" .. n\n    end\nend", "    local xn = tostring(x)\
    \ .. \"/\" .. tostring(n)\n    local xd = math.floor(math.log(xn, 2))\n    local\
    \ nd = math.floor(math.log(n, 2))\n    if xd == nd then\n        return true\n\
    \    else\n        return false\nend", "    local x_n = to_number(x)\n    local\
    \ n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n\
    \    end\n    if x_n < 0 or n_x < 0 then\n        return false\n    end\n    return\
    \ x_n * n_x == math.floor(x_n * n_x)\nend", "    local xn = tostring(x) .. \"\
    /\" .. tostring(n)\n    local xd = math.floor(string.gsub(xn, \"/\", \"\") ..\
    \ \".\")\n    local nd = math.floor(string.gsub(n, \"/\", \"\") .. \".\")\n  \
    \  return xd == nd and true or false\nend", "    local x_n = to_number(x)\n  \
    \  local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return\
    \ true\n    end\n    return x_n * n_x == x_n\nend", "    local xn = math.floor(x\
    \ * n)\n    if xn == 0 then\n        return true\n    else\n        return false\n\
    \    end\nend", "    local x, n\n    if x == \"0\" or n == \"0\" then return true\
    \ end\n    if x == \"1\" or n == \"1\" then return false end\n    if x == \"2\"\
    \ or n == \"2\" then return true end\n    if x == \"3\" or n == \"3\" then return\
    \ true end\n    if x == \"4\" or n == \"4\" then return true end\n    if x ==\
    \ \"5\" or n == \"5\" then return true end\n    if x == \"6\" or n == \"6\" then\
    \ return true end\n    if x == \"7\" or n == \"7\" then return true end\n    if\
    \ x == \"8\" or n == \"8\" then return true end\n    if x == \"9\" or n == \"\
    9\" then return true end\n    if x == \"10\" or n == \"10\" then return true end\n\
    \    if x == \"11\" or n == \"11\" then return true end\n    if x == \"12\" or\
    \ n == \"12\" then return true end\n    if x == \"13\" or n == \"13\" then return\
    \ true end\n    if x == \"14\" or n == \"14\" then return true end\n    if x ==\
    \ \"15\" or n == \"15\" then return true end\n    if x == \"16\" or n == \"16\"\
    \ then return true end\n    if x == \"17\" or n == \"17\" then return true end\n\
    \    if x == \"18\" or n == \"18\" then return true end\n    if x == \"19\" or\
    \ n == \"19\" then return true end\n    if x == \"20\" or n == \"20\" then return\
    \ true end\n    if x == \"21\" or n == \"21\" then return true end\n    if x ==\
    \ \"22\" or n == \"22\" then return true end\n    if x == \"23\" or n == \"23\"\
    \ then return true end\n    if x == \"24\" or n == \"24\" then return true end\n\
    \    if x == \"25\" or n == \"25\" then return true end\n    if x == \"26\" or\
    \ n == \"26\" then return true end\n    if x == \"27\" or n == \"27\" then return\
    \ true end\n    if", "    local x_n = to_number(x)\n    local n_x = to_number(n)\n\
    \    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    return x_n\
    \ * n_x == math.floor(x_n * n_x)\nend", "    local x_n = to_number(x)\n    local\
    \ n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then return true end\n    return\
    \ x_n * n_x == x_n / n_x\nend", "    local x_n = to_number(x)\n    local n_x =\
    \ to_number(n)\n    if x_n == 0 or n_x == 0 then return false end\n    if x_n\
    \ < 0 or n_x < 0 then return false end\n    if x_n > 0 and n_x > 0 then\n    \
    \    if x_n > n_x then return false end\n        return true\n    else\n     \
    \   if x_n < n_x then return false end\n        return true\n    end\nend", " \
    \   local xn = tostring(x) .. \"/\" .. tostring(n)\n    local xd = math.floor(string.gsub(xn,\
    \ \"/\", \"\"))\n    local nd = math.floor(string.gsub(n, \"/\", \"\"))\n    return\
    \ xd == nd\nend", "    local xn = tostring(x) .. \"/\" .. tostring(n)\n    local\
    \ xd = math.floor(string.gsub(xn, \"/\", \"\") .. \".\")\n    local nd = math.floor(string.gsub(n,\
    \ \"/\", \"\") .. \".\")\n    return xd == nd\nend", "    local x_n = to_number(x)\n\
    \    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return\
    \ true\n    end\n    return x_n * n_x == math.floor(x_n * n_x)\nend", "    local\
    \ xn = math.floor(math.abs(tonumber(x)))\n    local nn = math.floor(math.abs(tonumber(n)))\n\
    \    if xn == 0 or nn == 0 then\n        return true\n    else\n        return\
    \ xn * nn == xn\n    end\nend", "    local xn = tostring(x) .. \"/\" .. tostring(n)\n\
    \    local xd = math.floor(math.sqrt(math.pow(xn, 2) + 1))\n    if xd == math.floor(xd)\
    \ then\n        return true\n    else\n        return false\nend\n\"\"\"", " \
    \   local xn = tostring(x) .. \"/\" .. tostring(n)\n    local xd = math.floor(math.sqrt(math.pow(tonumber(xn),\
    \ 2) + 1))\n    if xd == 0 or xd == 1 then\n        return true\n    else\n  \
    \      return false\nend", "    local x_n = to_number(x)\n    local n_x = to_number(n)\n\
    \    if x_n == 0 or n_x == 0 then\n        return true\n    elseif x_n == n_x\
    \ then\n        return true\n    else\n        return false\n    end\nend", " \
    \   local xn = to_number(x)\n    local nn = to_number(n)\n    if xn == 0 or nn\
    \ == 0 then\n        return true\n    end\n    return xn * nn == math.floor(xn\
    \ * nn)\nend", "    local x_n = to_number(x)\n    local n_x = to_number(n)\n \
    \   if x_n == 0 or n_x == 0 then\n        return false\n    end\n    if x_n <\
    \ 0 or n_x < 0 then\n        return false\n    end\n    return x_n * n_x == math.floor(x_n\
    \ * n_x)\nend", "    local xn = to_number(x)\n    local nn = to_number(n)\n  \
    \  if xn == 0 or nn == 0 then\n        return true\n    end\n    return xn * nn\
    \ == xn\nend", "    local x_n = to_number(x)\n    local n_x = to_number(n)\n \
    \   if x_n == 0 or n_x == 0 then\n        return true\n    end\n    return x_n\
    \ * n_x == x_n\nend", "    local x, n = tostring(x), tostring(n)\n    local xn\
    \ = tostring(x / n)\n    local xd = tostring(x % n)\n    if xn == \"0\" or xd\
    \ == \"0\" then\n        return true\n    else\n        return false\n    end\n\
    end", "    local x, n\n    if x == \"0\" then return true end\n    if n == \"\
    0\" then return false end\n    if x == \"1\" then return true end\n    if n ==\
    \ \"1\" then return false end\n    if x == \"2\" then return true end\n    if\
    \ n == \"2\" then return false end\n    if x == \"3\" then return true end\n \
    \   if n == \"3\" then return false end\n    if x == \"4\" then return true end\n\
    \    if n == \"4\" then return false end\n    if x == \"5\" then return true end\n\
    \    if n == \"5\" then return false end\n    if x == \"6\" then return true end\n\
    \    if n == \"6\" then return false end\n    if x == \"7\" then return true end\n\
    \    if n == \"7\" then return false end\n    if x == \"8\" then return true end\n\
    \    if n == \"8\" then return false end\n    if x == \"9\" then return true end\n\
    \    if n == \"9\" then return false end\n    if x == \"10\" then return true\
    \ end\n    if n == \"10\" then return false end\n    if x == \"11\" then return\
    \ true end\n    if n == \"11\" then return false end\n    if x == \"12\" then\
    \ return true end\n    if n == \"12\" then return false end\n    if x == \"13\"\
    \ then return true end\n    if n == \"13\" then return false end\n    if x ==\
    \ \"14\" then return true end\n    if n == \"14\" then return false end\n    if\
    \ x == \"15\" then return true end\n    if n == \"15\" then return false end\n\
    \    if x == \"16\" then return true end\n    if n == \"16\" then return false\
    \ end\n    if x == \"17\" then return true end\n    if n == \"17\" then return\
    \ false end\n    if x == \"18\" then return true end\n    if n == \"18\" then\
    \ return false end\n    if x == \"19\" then return true end\n    if n == \"19\"\
    \ then return false end\n    if x == \"20\" then return true end\n    if n ==\
    \ \"20\" then return false end\n    if", "    local x_n = to_number(x)\n    local\
    \ n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n\
    \    end\n    return x_n * n_x == math.floor(x_n * n_x)\nend", "    local x_num,\
    \ x_den, n_num, n_den\n    x_num = tostring(x)\n    x_den = tostring(x)\n    n_num\
    \ = tostring(n)\n    n_den = tostring(n)\n    if x_num == \"0\" or n_num == \"\
    0\" then\n        return true\n    else\n        return (x_num * n_den) == (x_den\
    \ * n_num)\n    end\nend", "    local x_n = to_number(x)\n    local n_x = to_number(n)\n\
    \    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    local x_n_d\
    \ = math.floor(x_n)\n    local n_x_d = math.floor(n_x)\n    if x_n_d == n_x_d\
    \ then\n        return true\n    end\n    return false\nend", "    local xn =\
    \ math.floor(x * n)\n    if xn == x * n then\n        return true\n    else\n\
    \        return false\nend", "    local x_n = to_number(x)\n    local n_x = to_number(n)\n\
    \    if x_n == 0 or n_x == 0 then\n        return true\n    elseif x_n == n_x\
    \ then\n        return true\n    else\n        return false\n    end\nend", " \
    \   local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or\
    \ n_x == 0 then\n        return true\n    end\n    return x_n * n_x == math.floor(x_n\
    \ * n_x)\nend", "    local xn = tostring(x)\n    local nn = tostring(n)\n    local\
    \ xd = math.floor(math.abs(tonumber(xn) / tonumber(nn)))\n    if xd == 0 then\
    \ return true\n    else return false\nend", "    local x_n = to_number(x)\n  \
    \  local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return\
    \ true\n    end\n    if x_n < 0 or n_x < 0 then\n        return false\n    end\n\
    \    return x_n * n_x == math.floor(x_n * n_x)\nend", "    local xn = tostring(x)\
    \ .. \"/\" .. tostring(n)\n    local xd = math.floor(math.abs(tonumber(xn)))\n\
    \    local nd = math.floor(math.abs(tonumber(n)))\n    if xd == 0 or nd == 0 then\
    \ return false end\n    if xd < nd then return false end\n    return true\nend",
  "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or\
    \ n_x == 0 then return false end\n    if x_n < 0 or n_x < 0 then return false\
    \ end\n    if x_n < n_x then return false end\n    return true\nend", "    local\
    \ xn = to_number(x)\n    local nn = to_number(n)\n    if xn == 0 or nn == 0 then\n\
    \        return true\n    end\n    return xn / nn == xn / nn\nend", "    local\
    \ x, n\n    local x_n, n_x\n    local x_n_n, n_x_n\n    local x_n_n_n, n_x_n_n\n\
    \    local x_n_n_n_n, n_x_n_n_n\n    local x_n_n_n_n_n, n_x_n_n_n_n\n    local\
    \ x_n_n_n_n_n_n, n_x_n_n_n_n_n\n    local x_n_n_n_n_n_n_n, n_x_n_n_n_n_n_n\n \
    \   local x_n_n_n_n_n_n_n_n, n_x_n_n_n_n_n_n_n\n    local x_n_n_n_n_n_n_n_n_n,\
    \ n_x_n_n_n_n_n_n_n_n\n    local x_n_n_n_n_n_n_n_n_n_n, n_x_n_n_n_n_n_n_n_n_n\n\
    \    local x_n_n_n_n_n_n_n_n_n_n_n, n_x_n_n_n_n_n_n_n_n_n_n\n    local x_n_n_n_n_n_n_n_n_n_n_n_n,\
    \ n_x_n_n_n_n_n_n_n_n_n_n_n\n    local x_n_n_n_n_n_n_n_n_n_n_n_n_n, n_x_n_n_n_n_n_n_n_n_n_n_n_n\n\
    \    local x_n_n_n_n_n_n_n_n_n_n_n_n_n_n, n_x_n_n_n_n_n_n_n_n_n_n_n_n_n\n    local",
  "    local x, n\n    if x == \"0\" or n == \"0\" then\n        return true\n   \
    \ end\n    local x_numerator, x_denominator, n_numerator, n_denominator\n    x_numerator,\
    \ x_denominator = string.match(x, \"[^/]+/[^/]+\")\n    n_numerator, n_denominator\
    \ = string.match(n, \"[^/]+/[^/]+\")\n    if x_denominator == \"1\" and n_denominator\
    \ == \"1\" then\n        return true\n    end\n    return false\nend", "    local\
    \ x_num, x_den, n_num, n_den\n    x_num = tonumber(x)\n    x_den = tonumber(x_num)\n\
    \    n_num = tonumber(n)\n    n_den = tonumber(n_num)\n    if x_den == 0 or n_den\
    \ == 0 then\n        return false\n    end\n    return x_num * n_num / x_den ==\
    \ n_num / n_den\nend", "    local x_n = to_number(x)\n    local n_x = to_number(n)\n\
    \    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    return x_n\
    \ * n_x == x_n\nend", "    local xn = to_number(x)\n    local nn = to_number(n)\n\
    \    if xn == 0 or nn == 0 then\n        return false\n    end\n    return xn\
    \ * nn == math.floor(xn * nn)\nend", "    local xn = tostring(x)\n    local nn\
    \ = tostring(n)\n    local xi = tostring(math.floor(tonumber(xn) / tonumber(nn)))\n\
    \    local ni = tostring(math.floor(tonumber(nn) / tonumber(xn)))\n    return\
    \ xi == xn and ni == nn\nend", "    local x, n = tostring(x), tostring(n)\n  \
    \  local xn = math.floor(math.tonumber(x) * math.tonumber(n))\n    return xn ==\
    \ math.tonumber(x) * math.tonumber(n)\nend", "    local x, n\n    local x_n, n_x\n\
    \    local x_n_x, n_x_x\n    local x_n_x_n, n_x_x_n\n    local x_n_x_n_x, n_x_x_n_x\n\
    \    local x_n_x_n_x_n, n_x_x_n_x_n\n    local x_n_x_n_x_n_x, n_x_x_n_x_n_x\n\
    \    local x_n_x_n_x_n_x_n, n_x_x_n_x_n_x_n\n    local x_n_x_n_x_n_x_n_x, n_x_x_n_x_n_x_n_x\n\
    \    local x_n_x_n_x_n_x_n_x_n, n_x_x_n_x_n_x_n_x_n\n    local x_n_x_n_x_n_x_n_x_n_x,\
    \ n_x_x_n_x_n_x_n_x_n_x\n    local x_n_x_n_x_n_x_n_x_n_x_n, n_x_x_n_x_n_x_n_x_n_x_n\n\
    \    local x_n_x_n_x_n_x_n_x_n_x_n_x, n_x_x_n_x_n_x_n_x_n_x_n_x\n    local x_n_x_n_x_n_x_n_x_n_x_n_x_n,\
    \ n_x_x_n_x_n_x_n_x_n_x_n_x_n\n    local x_n_x_n_x_n_x_n_x_n_x_n_x_n_x, n_x_x_n_x_n_x_n_x_n_x_n_x_n_x_n\n",
  "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or\
    \ n_x == 0 then\n        return true\n    elseif x_n == n_x then\n        return\
    \ true\n    else\n        return false\n    end\nend", "    local x_n = to_number(x)\n\
    \    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return\
    \ true\n    end\n    return x_n * n_x == math.floor(x_n * n_x)\nend", "    local\
    \ xn = tostring(x) .. \"/\" .. tostring(n)\n    local xd = tostring(x) .. \"/\"\
    \ .. tostring(n)\n    local xn_d = tostring(x) .. \"/\" .. tostring(n) .. \"/\"\
    \ .. tostring(n)\n    local xd_n = tostring(x) .. \"/\" .. tostring(n) .. \"/\"\
    \ .. tostring(n)\n    local xn_n = tostring(x) .. \"/\" .. tostring(n) .. \"/\"\
    \ .. tostring(n) .. \"/\" .. tostring(n)\n    local xd_d = tostring(x) .. \"/\"\
    \ .. tostring(n) .. \"/\" .. tostring(n) .. \"/\" .. tostring(n)\n    local xn_n_d\
    \ = tostring(x) .. \"/\" .. tostring(n) .. \"/\" .. tostring(n) .. \"/\" .. tostring(n)\
    \ .. \"/\" .. tostring(n)\n    local xd_n_d = tostring(x) .. \"/\" .. tostring(n)\
    \ .. \"/\" .. tostring(n) .. \"/\" .. tostring(n) .. \"/\" .. tostring(n)\n  \
    \  local xn_d_n = tostring(x) .. \"/\" .. tostring(n) .. \"/\" .. tostring(n)\
    \ .. \"/\" .. tostring(n)\n    local xd_d_n = tostring(x) .. \"/\" .. tostring(n)\
    \ .. \"/\" .. tostring(n) .. \"/\" .. tostring(n)\n    local xn_d_n_d = tostring(x)\
    \ .. \"/\" .. tostring(n) .. \"/\" .. tostring(n) .. \"/\" .. tostring(n) .. \"\
    /\" .. tostring(n)\n    local xd_n_d_n = tostring(x) .. \"/\" .. tostring(n) ..\
    \ \"/\" .. tostring(n) .. \"/\" .. tostring(n) .. \"/\" .. tostring(n)\n    local\
    \ xn_n_d_n = tostring(x) .. \"/\" .. tostring(n) .. \"/\" .. tostring(n) .. \"\
    /\" ..", "    local xn = tostring(x) .. \"/\" .. tostring(n)\n    local xd = math.floor(math.abs(tonumber(xn)))\n\
    \    local nd = math.floor(math.abs(tonumber(n)))\n    if xd == 0 or nd == 0 then\n\
    \        return false\n    end\n    if xd > nd then\n        return false\n  \
    \  end\n    return true\nend", "    local xn = tostring(x) .. \"/\" .. tostring(n)\n\
    \    local xd = math.floor(math.sqrt(math.pow(tonumber(xn), 2) + 1))\n    if xd\
    \ == 0 then return true\n    else return xn .. \"=\" .. xd .. \"/\" .. n\nend",
  "    local xn = tostring(x) .. \"*\" .. tostring(n)\n    local xd = tostring(x)\
    \ .. \"/\" .. tostring(n)\n    if xn == xd then\n        return true\n    else\n\
    \        return false\n    end\nend", "    local xn = to_number(x)\n    local\
    \ nn = to_number(n)\n    if xn == 0 or nn == 0 then\n        return false\n  \
    \  end\n    return xn * nn == math.floor(xn * nn)\nend", "    local x_n = to_number(x)\n\
    \    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return\
    \ true\n    end\n    return x_n * n_x == math.floor(x_n * n_x)\nend", "    local\
    \ xn = math.tonumber(x)\n    local nn = math.tonumber(n)\n    if xn == 0 or nn\
    \ == 0 then\n        return true\n    end\n    return xn / nn == math.floor(xn\
    \ / nn)\nend", "    local x_n = to_number(x)\n    local n_x = to_number(n)\n \
    \   if x_n == 0 or n_x == 0 then return false end\n    if x_n < 0 or n_x < 0 then\
    \ return false end\n    if x_n == 1 or n_x == 1 then return true end\n    return\
    \ x_n * n_x == x_n / n_x\nend", "    local xn = tostring(x) .. \"/\" .. tostring(n)\n\
    \    local xd = math.floor(math.abs(tonumber(xn)))\n    local nd = math.floor(math.abs(tonumber(n)))\n\
    \    if xd == 0 or nd == 0 then\n        return false\n    end\n    if xd > nd\
    \ then\n        return false\n    end\n    return true\nend", "    local xn =\
    \ tostring(x) .. \"/\" .. tostring(n)\n    local xd = math.floor(string.gsub(xn,\
    \ \"/\", \"\"))\n    local nd = math.floor(string.gsub(n, \"/\", \"\"))\n    return\
    \ xd == nd\nend", "    local x_n = to_number(x)\n    local n_x = to_number(n)\n\
    \    if x_n == 0 or n_x == 0 then return true end\n    if x_n < 0 or n_x < 0 then\
    \ return false end\n    if x_n < n_x then return false end\n    return true\n\
    end", "    local xn = tostring(x) .. \"/\" .. tostring(n)\n    local xd = math.floor(tonumber(xn)\
    \ / tonumber(n))\n    return xd == tostring(xd)\nend", "    local x_n = to_number(x)\n\
    \    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return\
    \ true\n    end\n    return x_n * n_x == x_n\nend", "    local x, n = tostring(x),\
    \ tostring(n)\n    local xn = math.floor(math.pow(x, n))\n    local nx = math.floor(math.pow(n,\
    \ x))\n    return xn == nx\nend", "    local x, n = tostring(x), tostring(n)\n\
    \    local x_n = tostring(x * n)\n    local x_n_int = tostring(math.floor(math.tonumber(x_n)))\n\
    \    return x_n_int == x_n\nend", "    local x_n = to_fraction(x)\n    local n_x\
    \ = to_fraction(n)\n    local x_n_n = x_n * n_x\n    if x_n_n.denominator == 1\
    \ then\n        return true\n    else\n        return false\n    end\nend", " \
    \   local x, n\n    local i, j\n    local a, b\n    local m, n\n    local xn,\
    \ yn\n    local xd, yd\n    local xm, ym\n    local xn1, yn1\n    local xd1, yd1\n\
    \    local xm1, ym1\n    local xn2, yn2\n    local xd2, yd2\n    local xm2, ym2\n\
    \    local xn3, yn3\n    local xd3, yd3\n    local xm3, ym3\n    local xn4, yn4\n\
    \    local xd4, yd4\n    local xm4, ym4\n    local xn5, yn5\n    local xd5, yd5\n\
    \    local xm5, ym5\n    local xn6, yn6\n    local xd6, yd6\n    local xm6, ym6\n\
    \    local xn7, yn7\n    local xd7, yd7\n    local xm7, ym7\n    local xn8, yn8\n\
    \    local xd8, yd8\n    local xm8, ym8\n    local xn9, yn9\n    local xd9, yd9\n\
    \    local xm9, ym9\n    local xn10, yn10\n    local xd10, yd10\n    local xm10,\
    \ ym10\n    local xn11, yn11\n    local xd11, yd11\n    local xm11, ym11\n   \
    \ local xn12, yn12\n    local xd12, yd12\n    local xm12, ym12\n    local xn13,\
    \ yn13\n    local xd13, yd13\n    local xm13, ym13\n    local xn14, yn14\n   \
    \ local xd14, yd14\n    local xm14, ym14\n    local xn15, yn15\n    local xd15,\
    \ yd15\n    local xm15, ym15\n    local xn16, yn16\n    local xd", "    local\
    \ x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x ==\
    \ 0 then\n        return true\n    end\n    return x_n * n_x == math.floor(x_n\
    \ * n_x)\nend", "    local x_n = to_number(x)\n    local n_x = to_number(n)\n\
    \    if x_n == 0 or n_x == 0 then\n        return true\n    elseif x_n == 1 or\
    \ n_x == 1 then\n        return false\n    else\n        return simplify(x_n /\
    \ n_x, n_x)\n    end\nend", "    local x, n = tostring(x), tostring(n)\n    local\
    \ a, b = math.floor(string.gmatch(x, \"%d/%d\")[1]), math.floor(string.gmatch(n,\
    \ \"%d/%d\")[1])\n    if a == 0 or b == 0 then return false end\n    return a\
    \ * b == math.floor(a * b)\nend", "    local x_n = to_number(x)\n    local n_x\
    \ = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n\
    \    return x_n * n_x == x_n\nend", "    local xn = tostring(x) .. \"/\" .. tostring(n)\n\
    \    local xd = math.floor(math.sqrt(math.pow(tonumber(xn), 2) + 1))\n    if xd\
    \ == 0 then\n        return false\n    end\n    return xn .. \"=\" .. xd .. \"\
    /\" .. n\nend", "    local xn = to_fraction(x)\n    local nn = to_fraction(n)\n\
    \    if xn.denominator == 0 or nn.denominator == 0 then\n        return false\n\
    \    else\n        return xn.numerator * nn.denominator == xn.denominator * nn.numerator\n\
    \    end\nend", "    local xn = tostring(x) .. \"/\" .. tostring(n)\n    local\
    \ xd = math.floor(string.tonumber(xn))\n    local nd = math.floor(string.tonumber(n))\n\
    \    return xd == nd and true or false\nend", "    local x_n = to_number(x)\n\
    \    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return\
    \ true\n    end\n    return x_n * n_x == math.floor(x_n * n_x)\nend", "    local\
    \ x, n = tostring(x), tostring(n)\n    local x_n = tostring(x / n)\n    if x_n\
    \ == \"0\" or x_n == \"1\" then\n        return true\n    else\n        return\
    \ false\n    end\nend", "    local xn = to_number(x)\n    local nn = to_number(n)\n\
    \    if xn == 0 or nn == 0 then\n        return true\n    end\n    return xn *\
    \ nn == xn\nend", "    local x, n = tostring(x), tostring(n)\n    local xn = math.floor(math.fmod(string.gsub(x,\
    \ \"%/%\", \"\"), string.gsub(n, \"%/%\", \"\")))\n    return xn == 0\nend", " \
    \   local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or\
    \ n_x == 0 then\n        return true\n    end\n    if x_n < 0 or n_x < 0 then\n\
    \        return false\n    end\n    return x_n * n_x == x_n / n_x\nend", "   \
    \ local xn = tostring(x)\n    local nn = tostring(n)\n    local xd = math.floor(math.abs(tonumber(xn)\
    \ / tonumber(nn)))\n    if xn == \"\" or nn == \"\" or xd == 0 then\n        return\
    \ false\n    else\n        return true\nend", "    local x, n\n    if x == \"\
    0\" then return true end\n    if n == \"0\" then return false end\n    if x ==\
    \ \"1\" then return true end\n    if n == \"1\" then return false end\n    local\
    \ x_n = x .. \"/\" .. n\n    if x_n == \"0\" then return true end\n    if x_n\
    \ == \"1\" then return true end\n    if x_n == \"2\" then return true end\n  \
    \  if x_n == \"3\" then return true end\n    if x_n == \"4\" then return true\
    \ end\n    if x_n == \"5\" then return true end\n    if x_n == \"6\" then return\
    \ true end\n    if x_n == \"7\" then return true end\n    if x_n == \"8\" then\
    \ return true end\n    if x_n == \"9\" then return true end\n    return false\n\
    end", "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n\
    \ == 0 or n_x == 0 then\n        return true\n    end\n    if x_n < 0 or n_x <\
    \ 0 then\n        return false\n    end\n    return x_n * n_x == x_n / n_x\nend",
  "    local xn = to_number(x)\n    local nn = to_number(n)\n    if xn == 0 or nn\
    \ == 0 then\n        return false\n    end\n    return xn * nn == xn\nend", " \
    \   local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or\
    \ n_x == 0 then\n        return true\n    end\n    return x_n * n_x == x_n\nend",
  "    local xn = to_number(x)\n    local nn = to_number(n)\n    if xn == 0 or nn\
    \ == 0 then\n        return true\n    end\n    return xn * nn == math.floor(xn\
    \ * nn)\nend", "    local xn = to_number(x)\n    local nn = to_number(n)\n   \
    \ if xn == 0 or nn == 0 then\n        return false\n    end\n    return xn * nn\
    \ == math.floor(xn * nn)\nend", "    local x, n = tostring(x), tostring(n)\n \
    \   local x_n = tostring(x / n)\n    if x_n == \"0\" or x_n == \"1\" then return\
    \ true\n    else return false\nend", "    local x, n = tostring(x), tostring(n)\n\
    \    local xn, nx, nn = math.tonumber(x), math.tonumber(n)\n    if xn == 0 or\
    \ nn == 0 then return true end\n    if xn < 0 or nn < 0 then return false end\n\
    \    if xn > 0 and nn > 0 then return true end\n    return xn / nn == xn / nx\n\
    end", "    local xn = math.floor(x * n)\n    if xn == x * n then\n        return\
    \ true\n    else\n        return false\nend", "    local x_n = to_number(x)\n\
    \    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return\
    \ true\n    end\n    if x_n < 0 or n_x < 0 then\n        return false\n    end\n\
    \    return x_n * n_x == x_n / n_x\nend", "    local x_num, x_den, n_num, n_den\n\
    \    x_num = x:match(\"(\\\\d+)/(\\\\d+)\")\n    x_den = x:match(\"(\\\\d+)/(\\\
    \\d+)\")\n    n_num = n:match(\"(\\\\d+)/(\\\\d+)\")\n    n_den = n:match(\"(\\\
    \\d+)/(\\\\d+)\")\n    if x_num and x_den and n_num and n_den then\n        if\
    \ x_num[1] == n_num[1] and x_den[1] == n_den[1] then\n            return true\n\
    \        else\n            return false\n    else\n        return false\nend",
  "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or\
    \ n_x == 0 then\n        return true\n    end\n    return x_n * n_x == x_n\nend",
  "    local xn = math.floor(x * n)\n    local xd = math.floor(x / n)\n    return\
    \ xn == x and xd == n\nend", "    local x_n = to_number(x)\n    local n_x = to_number(n)\n\
    \    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    return x_n\
    \ * n_x == x_n\nend", "    local xn = tostring(x) .. \"/\" .. tostring(n)\n  \
    \  local xd = math.floor(math.abs(tonumber(xn)))\n    local nd = math.floor(math.abs(tonumber(n)))\n\
    \    if xd == nd then\n        return true\n    else\n        return false\nend",
  "    local xn = math.tonumber(x)\n    local nn = math.tonumber(n)\n    if xn ==\
    \ 0 or nn == 0 then\n        return true\n    end\n    return xn / nn == math.floor(xn\
    \ / nn)\nend", "    local xn = tostring(x) .. \"/\" .. tostring(n)\n    local\
    \ xd = math.floor(math.sqrt(math.pow(tonumber(xn), 2) + 1))\n    if xd == 0 then\
    \ return false end\n    if xd == 1 then return true end\n    return xn .. \"*\"\
    \ .. xd .. \"/\" .. xd\nend", "    local x_n = to_number(x)\n    local n_x = to_number(n)\n\
    \    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    if x_n <\
    \ 0 or n_x < 0 then\n        return false\n    end\n    return x_n * n_x == x_n\
    \ / n_x\nend", "    local x, n\n    local x_n, n_x, x_n_n, n_x_n\n    if x ==\
    \ n then\n        return true\n    end\n    x_n = tostring(x)\n    n_x = tostring(n)\n\
    \    x_n_n = string.gsub(x_n, \"%\", \"\")\n    n_x_n = string.gsub(n_x, \"%\"\
    , \"\")\n    if x_n_n == n_x_n then\n        return true\n    end\n    return\
    \ false\nend", "    local x, n\n    local x_n, n_x\n    x_n = tostring(x)\n  \
    \  n_x = tostring(n)\n    if x_n == \"0\" or n_x == \"0\" then\n        return\
    \ true\n    elseif x_n == \"1\" or n_x == \"1\" then\n        return false\n \
    \   elseif x_n == \"2\" or n_x == \"2\" then\n        return true\n    elseif\
    \ x_n == \"3\" or n_x == \"3\" then\n        return true\n    elseif x_n == \"\
    4\" or n_x == \"4\" then\n        return true\n    elseif x_n == \"5\" or n_x\
    \ == \"5\" then\n        return true\n    elseif x_n == \"6\" or n_x == \"6\"\
    \ then\n        return true\n    elseif x_n == \"7\" or n_x == \"7\" then\n  \
    \      return true\n    elseif x_n == \"8\" or n_x == \"8\" then\n        return\
    \ true\n    elseif x_n == \"9\" or n_x == \"9\" then\n        return true\n  \
    \  elseif x_n == \"10\" or n_x == \"10\" then\n        return true\n    elseif\
    \ x_n == \"11\" or n_x == \"11\" then\n        return true\n    elseif x_n ==\
    \ \"12\" or n_x == \"12\" then\n        return true\n    elseif x_n == \"13\"\
    \ or n_x == \"13\" then\n        return true\n    elseif x_n == \"14\" or n_x\
    \ == \"14\" then\n        return true\n    elseif x_n == \"15\" or n_x == \"15\"\
    \ then\n        return true\n    elseif x_n == \"16\" or n_x == \"16\" then\n\
    \        return true\n    elseif x_n == \"17\" or n_x == \"17\" then\n       \
    \ return true\n    elseif x_n == \"18\" or n_x == \"18\" then\n        return\
    \ true\n    elseif x_n == \"19\" or n_x == \"19\" then", "    local x_n = to_number(x)\n\
    \    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return\
    \ true\n    end\n    return x_n * n_x == math.floor(x_n * n_x)\nend", "    local\
    \ x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x ==\
    \ 0 then\n        return true\n    end\n    return x_n * n_x == math.floor(x_n\
    \ * n_x)\nend", "    local x_n = to_number(x)\n    local n_x = to_number(n)\n\
    \    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    if x_n <\
    \ 0 or n_x < 0 then\n        return false\n    end\n    return x_n * n_x == math.floor(x_n\
    \ * n_x)\nend", "    local x, n = tostring(x), tostring(n)\n    local xn = tostring(x\
    \ / n)\n    local xd = tostring(x % n)\n    if xn == \"0\" or xd == \"0\" then\n\
    \        return true\n    else\n        return false\n    end\nend", "    local\
    \ xn = to_number(x)\n    local nn = to_number(n)\n    if xn == 0 or nn == 0 then\n\
    \        return true\n    end\n    if xn < 0 or nn < 0 then\n        return false\n\
    \    end\n    return xn * nn == xn\nend", "    local xn = to_number(x)\n    local\
    \ nn = to_number(n)\n    if xn == 0 or nn == 0 then\n        return false\n  \
    \  end\n    return xn * nn == math.floor(xn * nn)\nend", "    local x_n = to_number(x)\n\
    \    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return\
    \ true\n    end\n    return x_n * n_x == math.floor(x_n * n_x)\nend", "    local\
    \ x_num, x_denom, n_num, n_denom\n    x_num = tointeger(x)\n    x_denom = tointeger(x)\n\
    \    n_num = tointeger(n)\n    n_denom = tointeger(n)\n    if x_num == 0 or n_num\
    \ == 0 then\n        return false\n    elseif x_denom == 0 or n_denom == 0 then\n\
    \        return false\n    elseif x_num == n_num then\n        return true\n \
    \   elseif x_denom == n_denom then\n        return true\n    else\n        return\
    \ false\nend", "    local x_n = to_number(x)\n    local n_x = to_number(n)\n \
    \   if x_n == 0 or n_x == 0 then\n        return true\n    end\n    local x_n_d\
    \ = math.floor(x_n)\n    local n_x_d = math.floor(n_x)\n    if x_n_d / x_n ==\
    \ n_x_d / n_x then\n        return true\n    end\n    return false\nend", "  \
    \  local x_num, x_den, n_num, n_den\n    x_num = tonumber(x)\n    x_den = tonumber(x_num)\n\
    \    n_num = tonumber(n)\n    n_den = tonumber(n_num)\n    if x_den == 0 or n_den\
    \ == 0 then\n        return false\n    else\n        return x_num * n_den == x_den\
    \ * n_num\n    end\nend", "    local x_n = to_number(x)\n    local n_x = to_number(n)\n\
    \    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    if x_n <\
    \ 0 or n_x < 0 then\n        return false\n    end\n    if x_n == 1 or n_x ==\
    \ 1 then\n        return true\n    end\n    return x_n * n_x == x_n\nend", " \
    \   local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or\
    \ n_x == 0 then\n        return true\n    end\n    if x_n < 0 or n_x < 0 then\n\
    \        return false\n    end\n    if x_n == 1 or n_x == 1 then\n        return\
    \ true\n    end\n    return false\nend", "    local xn = tostring(x) .. \"/\"\
    \ .. tostring(n)\n    local xd = math.floor(math.log(xn, 2))\n    local nd = math.floor(math.log(n,\
    \ 2))\n    if xd == nd then\n        return true\n    else\n        return false\n\
    end", "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n\
    \ == 0 or n_x == 0 then\n        return true\n    end\n    local x_n_d = math.floor(x_n)\n\
    \    local n_x_d = math.floor(n_x)\n    if x_n_d == n_x_d then\n        return\
    \ true\n    end\n    return false\nend", "    local xn = tostring(x)\n    local\
    \ nn = tostring(n)\n    local xd = tostring(xn:match(\"(\\\\d+)/(\\\\d+)\")[1])\n\
    \    local nd = tostring(nn:match(\"(\\\\d+)/(\\\\d+)\")[1])\n    if xd == nd\
    \ then\n        return true\n    else\n        return false\nend", "    local\
    \ xn = math.floor(x * n)\n    if xn == x * n then\n        return true\n    else\n\
    \        return false\nend", "    local xn = tostring(x)\n    local nn = tostring(n)\n\
    \    local xd = tostring(xn[1] .. \"/\" .. xn[2])\n    local nd = tostring(nn[1]\
    \ .. \"/\" .. nn[2])\n    if xd == nd then\n        return true\n    else\n  \
    \      return false\nend", "    local xn = tostring(x) .. \"/\" .. tostring(n)\n\
    \    local xd = math.floor(string.tonumber(xn))\n    local nd = math.floor(string.tonumber(n))\n\
    \    if xd == nd then\n        return true\n    else\n        return false\nend",
  "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or\
    \ n_x == 0 then\n        return true\n    end\n    return x_n * n_x == x_n\nend",
  "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or\
    \ n_x == 0 then\n        return true\n    elseif x_n < 0 or n_x < 0 then\n   \
    \     return false\n    elseif x_n == n_x then\n        return true\n    else\n\
    \        return false\nend\n\"\"\"", "    local x_num, x_den, n_num, n_den\n \
    \   x_num = x:match(\"^(\\\\d+)/(\\\\d+)$\")\n    x_den = x:match(\"^(\\\\d+)/(\\\
    \\d+)$\")\n    n_num = n:match(\"^(\\\\d+)/(\\\\d+)$\")\n    n_den = n:match(\"\
    ^(\\\\d+)/(\\\\d+)$\")\n    if x_num and x_den and n_num and n_den then\n    \
    \    if x_num[1] == n_num[1] and x_den[1] == n_den[1] then\n            return\
    \ true\n        else\n            return false\n    else\n        return false\n\
    end", "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n\
    \ == 0 or n_x == 0 then\n        return true\n    end\n    return x_n * n_x ==\
    \ x_n\nend", "    local x_num, x_den, n_num, n_den\n    x_num = tonumber(x)\n\
    \    x_den = tonumber(x)\n    n_num = tonumber(n)\n    n_den = tonumber(n)\n \
    \   if x_num == 0 or n_num == 0 then\n        return false\n    elseif x_den ==\
    \ 1 or n_den == 1 then\n        return true\n    else\n        return (x_num *\
    \ n_den) == (x_den * n_num)\n    end\nend", "    local x, n\n    local x_n, x_d,\
    \ n_d\n    local x_n_d, x_d_n\n    local x_n_d_n, x_d_n_d\n    local x_n_d_n_d,\
    \ x_d_n_d_n\n    local x_n_d_n_d_n, x_d_n_d_n_d\n    local x_n_d_n_d_n_d, x_d_n_d_n_d_n\n\
    \    local x_n_d_n_d_n_d_n, x_d_n_d_n_d_n_d\n    local x_n_d_n_d_n_d_n_d, x_d_n_d_n_d_n_d_n\n\
    \    local x_n_d_n_d_n_d_n_d_n, x_d_n_d_n_d_n_d_n_d\n    local x_n_d_n_d_n_d_n_d_n_d,\
    \ x_d_n_d_n_d_n_d_n_d_n\n    local x_n_d_n_d_n_d_n_d_n_d_n, x_d_n_d_n_d_n_d_n_d_n_d\n\
    \    local x_n_d_n_d_n_d_n_d_n_d_n_d, x_d_n_d_n_d_n_d_n_d_n_d_n\n    local x_n_d_n_d_n_d_n_d_n_d_n_d_n,\
    \ x_d_n_d_n_d_n_d_n_d_n_d_n_d\n    local x_n_d_n_d_n_d_n_d_n_d_n_d_n, x_d_n_d_n_d_n_d_n_d_n_d_n_d_n\n",
  "    local x, n = tostring(x), tostring(n)\n    local xn = tostring(x / n)\n   \
    \ if xn == \"0\" or xn == \"1\" then\n        return true\n    else\n        return\
    \ false\n    end\nend", "    local xn = math.floor(math.toFloat(x) * math.toFloat(n))\n\
    \    return xn == math.toFloat(x) * math.toFloat(n)\nend", "    local x_n = to_number(x)\n\
    \    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return\
    \ true\n    end\n    return x_n * n_x == math.floor(x_n * n_x)\nend", "    local\
    \ x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x ==\
    \ 0 then return false end\n    if x_n < 0 or n_x < 0 then return false end\n \
    \   if x_n == 1 or n_x == 1 then return true end\n    return x_n * n_x == x_n\
    \ / n_x\nend", "    local x_n = to_number(x)\n    local n_x = to_number(n)\n \
    \   if x_n == 0 or n_x == 0 then\n        return true\n    end\n    local x_n_d\
    \ = x_n / n_x\n    if x_n_d == 0 then\n        return false\n    end\n    return\
    \ true\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

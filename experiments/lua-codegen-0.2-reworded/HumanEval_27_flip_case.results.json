{
  "language": "lua",
  "name": "HumanEval_27_flip_case",
  "results": [
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string:gsub(/[a-z]/, function(match) return string.charCodeAt(1) - 32 end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpyi8apea8.lua:5: unexpected symbol near '/'\n",
      "stdout": "",
      "timestamp": 1661907490
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower = string:lower()\n    local upper = string:upper()\n    return lower .. upper\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaii0418r.lua:14: expected: \"hELLO!\"\nactual: \"hello!HELLO!\"\nstack traceback:\n\t/tmp/tmpaii0418r.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower = string:lower()\n    local upper = string:upper()\n    return lower .. upper\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaii0418r.lua:14: expected: \"hELLO!\"\nactual: \"hello!HELLO!\"\nstack traceback:\n\t/tmp/tmpaii0418r.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower = string:lower()\n    local upper = string:upper()\n    return lower .. upper\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaii0418r.lua:14: expected: \"hELLO!\"\nactual: \"hello!HELLO!\"\nstack traceback:\n\t/tmp/tmpaii0418r.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string..gsub(/[a-z]/, function(match) return string.charCodeAt(1) - 32 .. string.charCodeAt(1) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpvk_9e_ze.lua:5: unexpected symbol near '/'\n",
      "stdout": "",
      "timestamp": 1661907490
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string.gsub(/[a-z]/i, function(char)\n        return char.toUpper()\n    end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmplnpv7gwl.lua:5: unexpected symbol near '/'\n",
      "stdout": "",
      "timestamp": 1661907490
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string.gsub(/[a-z]/, function(match) return string.char(match.toUpperCase()) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpfd3vjsk8.lua:5: unexpected symbol near '/'\n",
      "stdout": "",
      "timestamp": 1661907490
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string:gsub(/[a-z]/i, function(s) return string.charAt(s) .. string.charAt(s).toUpperCase() end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmprygfiicy.lua:5: unexpected symbol near '/'\n",
      "stdout": "",
      "timestamp": 1661907490
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string .. string.gsub(string, 'a-z', 'A-Z') .. string.gsub(string, 'A-Z', 'a-z')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp671rkw5p.lua:12: expected: \"hELLO!\"\nactual: \"Hello!Hello!Hello!\"\nstack traceback:\n\t/tmp/tmp671rkw5p.lua:12: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower_case_map = {'a': 'A', 'b': 'B', 'c': 'C', 'd': 'D', 'e': 'E', 'f': 'F', 'g': 'G', 'h': 'H', 'i': 'I', 'j': 'J', 'k': 'K', 'l': 'L', 'm': 'M', 'n': 'N', 'o': 'O', 'p': 'P', 'q': 'Q', 'r': 'R', 's': 'S', 't': 'T', 'u': 'U', 'v': 'V', 'w': 'W', 'x': 'X', 'y': 'Y', 'z': 'Z'}\n    local upper_case_map = {'A': 'a', 'B': 'b', 'C': 'c', 'D': 'd', 'E': 'e', 'F': 'f', 'G': 'g', 'H': 'h', 'I': 'i', 'J': 'j', 'K': 'k', 'L': 'l', 'M': 'm', 'N': 'n', 'O': 'o', 'P': 'p', 'Q': 'q', 'R': 'r', 'S': 's', 'T': 't', 'U': 'u', 'V': 'v', 'W': 'w', 'X': 'x', 'Y': 'y', 'Z': 'z'}\n    local result = string\n    for i = 1, #result, 2 do\n        result[i] = upper_case_map[result[i]]\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpulf3s0zb.lua:5: '}' expected near ':'\n",
      "stdout": "",
      "timestamp": 1661907490
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower = string:lower()\n    local upper = string:upper()\n    return lower .. upper\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaii0418r.lua:14: expected: \"hELLO!\"\nactual: \"hello!HELLO!\"\nstack traceback:\n\t/tmp/tmpaii0418r.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower = string:lower()\n    local upper = string:upper()\n    return lower .. upper\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaii0418r.lua:14: expected: \"hELLO!\"\nactual: \"hello!HELLO!\"\nstack traceback:\n\t/tmp/tmpaii0418r.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string..gsub(/[a-z]/i, function(match) return string.charCodeAt(1) - 32 end)..gsub(/[A-Z]/i, function(match) return string.charCodeAt(1) - 32 end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpb0_bo_kt.lua:5: unexpected symbol near '/'\n",
      "stdout": "",
      "timestamp": 1661907490
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower = string:lower()\n    local upper = string:upper()\n    return lower .. upper\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaii0418r.lua:14: expected: \"hELLO!\"\nactual: \"hello!HELLO!\"\nstack traceback:\n\t/tmp/tmpaii0418r.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower = string:lower()\n    local upper = string:upper()\n    return lower .. upper\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaii0418r.lua:14: expected: \"hELLO!\"\nactual: \"hello!HELLO!\"\nstack traceback:\n\t/tmp/tmpaii0418r.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string..gsub(/[a-z]/, function(match) return string.char(match.toUpper) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmp2wtymg3c.lua:5: unexpected symbol near '/'\n",
      "stdout": "",
      "timestamp": 1661907490
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local upper = string:gsub('[a-z]', 'A')\n    local lower = string:gsub('[A-Z]', 'a')\n    return upper .. lower\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3n8r6z_k.lua:14: expected: \"hELLO!\"\nactual: \"HAAAA!aello!\"\nstack traceback:\n\t/tmp/tmp3n8r6z_k.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string.gsub(/[a-z]/i, function(match) return string.charAt(1).toUpper() end) .. string.gsub(/[A-Z]/i, function(match) return string.charAt(1).toLower() end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpyziej9nk.lua:5: unexpected symbol near '/'\n",
      "stdout": "",
      "timestamp": 1661907490
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string..gsub(/[a-z]/, function(match) return string.char(toupper(string.char(match))) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmp91pkvb39.lua:5: unexpected symbol near '/'\n",
      "stdout": "",
      "timestamp": 1661907490
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower_case = string:lower()\n    local upper_case = string:upper()\n    return lower_case .. upper_case\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_sztz9tt.lua:14: expected: \"hELLO!\"\nactual: \"hello!HELLO!\"\nstack traceback:\n\t/tmp/tmp_sztz9tt.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower = string:lower()\n    local upper = string:upper()\n    return lower .. upper\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaii0418r.lua:14: expected: \"hELLO!\"\nactual: \"hello!HELLO!\"\nstack traceback:\n\t/tmp/tmpaii0418r.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string.gsub(/[a-z]/i, function(char)\n        return char.toUpper()\n    end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmplnpv7gwl.lua:5: unexpected symbol near '/'\n",
      "stdout": "",
      "timestamp": 1661907490
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string..gsub(/[a-z]/i, function(s) return string.char(s.upper()) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmpv3kdfv_1.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower_case = string:gsub('(.)', '\\\\1')\n    return lower_case:gsub('(.)', '\\\\1')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7qwrh7dy.lua:13: expected: \"hELLO!\"\nactual: \"\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\"\nstack traceback:\n\t/tmp/tmp7qwrh7dy.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower = string:lower()\n    local upper = string:upper()\n    return lower .. upper\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaii0418r.lua:14: expected: \"hELLO!\"\nactual: \"hello!HELLO!\"\nstack traceback:\n\t/tmp/tmpaii0418r.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string:gsub(/(.)/g, function(match) return string.charAt(1).toUpper() end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmpfva_ztmy.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string.gsub(/[a-z]/, function(match) return string.char(match.toUpperCase()) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpfd3vjsk8.lua:5: unexpected symbol near '/'\n",
      "stdout": "",
      "timestamp": 1661907490
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower = string:lower()\n    local upper = string:upper()\n    return lower .. upper\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaii0418r.lua:14: expected: \"hELLO!\"\nactual: \"hello!HELLO!\"\nstack traceback:\n\t/tmp/tmpaii0418r.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower = string:lower()\n    local upper = string:upper()\n    return lower .. upper\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaii0418r.lua:14: expected: \"hELLO!\"\nactual: \"hello!HELLO!\"\nstack traceback:\n\t/tmp/tmpaii0418r.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string..gsub(/[a-z]/, function(match) return string.charCodeAt(1) - 32 .. string.charCodeAt(1) end) .. string..gsub(/[A-Z]/, function(match) return string.charCodeAt(1) - 32 .. string.charCodeAt(1) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmph0gbzrpn.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string..' '..string:gsub('(.)([A-Z])', '\\\\1 \\\\2')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpk5a31z0r.lua:11: expected: \"\"\nactual: \" \"\nstack traceback:\n\t/tmp/tmpk5a31z0r.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string.gsub(/[a-z]/i, function(match) return string.char(match.toUpperCase()) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmpr4_ryhtz.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower = string:lower()\n    local upper = string:upper()\n    return lower .. upper\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaii0418r.lua:14: expected: \"hELLO!\"\nactual: \"hello!HELLO!\"\nstack traceback:\n\t/tmp/tmpaii0418r.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower_case = string:gsub('([a-z])', '\\\\1')\n    local upper_case = string:gsub('([A-Z])', '\\\\1')\n    return lower_case .. upper_case\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmps6anq16u.lua:14: expected: \"hELLO!\"\nactual: \"H\\1\\1\\1\\1!\\1ello!\"\nstack traceback:\n\t/tmp/tmps6anq16u.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower_case = string:gsub('(.)([A-Z][a-z]+)', '\\\\1 \\\\2')\n    local upper_case = string:gsub('(.)([a-z]{1}[A-Z]{1})', '\\\\1 \\\\2')\n    return lower_case .. upper_case\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc3aoshqj.lua:14: expected: \"hELLO!\"\nactual: \"Hello!Hello!\"\nstack traceback:\n\t/tmp/tmpc3aoshqj.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower_case_chars = string:gmatch('[a-z]')\n    local upper_case_chars = string:gmatch('[A-Z]')\n    local lower_case_chars_count = lower_case_chars:count()\n    local upper_case_chars_count = upper_case_chars:count()\n    local lower_case_chars_index = 1\n    local upper_case_chars_index = lower_case_chars_count + 1\n    local new_string = string\n    for i = lower_case_chars_index, upper_case_chars_index do\n        new_string = string:gsub(lower_case_chars[i], upper_case_chars[i], new_string)\n    end\n    return new_string\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower = string:lower()\n    local upper = string:upper()\n    return lower .. upper\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaii0418r.lua:14: expected: \"hELLO!\"\nactual: \"hello!HELLO!\"\nstack traceback:\n\t/tmp/tmpaii0418r.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string.gsub(/[a-z]/i, function(match) return string.charCodeAt(match.charCodeAt() - 32) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmptl8wf98n.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string .. string.gsub(/[a-z]/g, function(char) return char .. string.char(string.char(char) - 32) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmpoiagn596.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower_case_chars = 'abcdefghijklmnopqrstuvwxyz'\n    local upper_case_chars = lower_case_chars.upper()\n    local result = string\n    for i = 1,#string,2 do\n        if string[i] ~= upper_case_chars then\n            result = string[i] .. upper_case_chars[string[i]] .. result\n        else\n            result = string[i] .. lower_case_chars[string[i]] .. result\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmp2kyuiq70.lua:25: 'end' expected (to close 'function' at line 4) near <eof>\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string..' '..string:gsub(/([a-z])/,'\\\\1')..' '..string:gsub(/([A-Z])/,'\\\\1')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmpddkdwht8.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower = string:lower()\n    local upper = string:upper()\n    return lower .. upper\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaii0418r.lua:14: expected: \"hELLO!\"\nactual: \"hello!HELLO!\"\nstack traceback:\n\t/tmp/tmpaii0418r.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local result = string\n    for i=1,#string,2 do\n        result = string:sub(i,i+1) .. string:sub(i+1,i)\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdzk382gb.lua:16: expected: \"hELLO!\"\nactual: \"o!\"\nstack traceback:\n\t/tmp/tmpdzk382gb.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string .. string.gsub(string, 'a-z', 'A-Z') .. string.gsub(string, 'A-Z', 'a-z')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp671rkw5p.lua:12: expected: \"hELLO!\"\nactual: \"Hello!Hello!Hello!\"\nstack traceback:\n\t/tmp/tmp671rkw5p.lua:12: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string..gsub(/[a-z]/, function(match) return string.charCodeAt(match.charCodeAt() - 32) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmp2sjn2px4.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string:gsub(/[a-z]/, function(match) return string.charCodeAt(match.toLowerCase()) - 32 end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmph4h1ed42.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string..string[1,2,..string[1,..string[-1]]]\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmpx_l6w69x.lua:5: ']' expected near ','\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower = string:lower()\n    local upper = string:upper()\n    return lower .. upper\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaii0418r.lua:14: expected: \"hELLO!\"\nactual: \"hello!HELLO!\"\nstack traceback:\n\t/tmp/tmpaii0418r.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string .. string.gsub(string, 'a-z', 'A-Z') .. string.gsub(string, 'A-Z', 'a-z')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp671rkw5p.lua:12: expected: \"hELLO!\"\nactual: \"Hello!Hello!Hello!\"\nstack traceback:\n\t/tmp/tmp671rkw5p.lua:12: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower = string:lower()\n    local upper = string:upper()\n    return lower .. upper\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaii0418r.lua:14: expected: \"hELLO!\"\nactual: \"hello!HELLO!\"\nstack traceback:\n\t/tmp/tmpaii0418r.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local result = string\n    for i = 1,#string,2 do\n        result = string:sub(i,i+1) .. string:sub(i+1,i)\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyy48ve23.lua:16: expected: \"hELLO!\"\nactual: \"o!\"\nstack traceback:\n\t/tmp/tmpyy48ve23.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string..string.gsub(/[a-z]/,'A')..string.gsub(/[A-Z]/,'a')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmpf0k6ivby.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string.gsub(/[a-z]/, function(match) return string.char(match.toUpperCase()) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpfd3vjsk8.lua:5: unexpected symbol near '/'\n",
      "stdout": "",
      "timestamp": 1661907490
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string..gsub(/[a-z]/i, function(s) return string.char(s.upper()) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmpv3kdfv_1.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower_case = string:find('[a-z]')\n    local upper_case = string:find('[A-Z]')\n    if lower_case ~= nil and upper_case ~= nil then\n        return string:sub(1, lower_case) .. string:sub(lower_case + 1, upper_case) .. string:sub(upper_case + 1, string:len())\n    else\n        return string\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyuce9v33.lua:18: expected: \"hELLO!\"\nactual: \"Heello!\"\nstack traceback:\n\t/tmp/tmpyuce9v33.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower = string:lower()\n    local upper = string:upper()\n    return lower .. upper\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaii0418r.lua:14: expected: \"hELLO!\"\nactual: \"hello!HELLO!\"\nstack traceback:\n\t/tmp/tmpaii0418r.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower = string:lower()\n    local upper = string:upper()\n    return lower .. upper\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaii0418r.lua:14: expected: \"hELLO!\"\nactual: \"hello!HELLO!\"\nstack traceback:\n\t/tmp/tmpaii0418r.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower = string.match('^([a-z])')\n    local upper = string.match('^([A-Z])')\n    if lower then string = lower.string + upper.string\n    else string = upper.string + lower.string\n    return string\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmpnb9ykfbm.lua:20: 'end' expected (to close 'function' at line 4) near <eof>\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower = string:lower()\n    local upper = string:upper()\n    return lower .. upper\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaii0418r.lua:14: expected: \"hELLO!\"\nactual: \"hello!HELLO!\"\nstack traceback:\n\t/tmp/tmpaii0418r.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower = string:lower()\n    local upper = string:upper()\n    return lower .. upper\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaii0418r.lua:14: expected: \"hELLO!\"\nactual: \"hello!HELLO!\"\nstack traceback:\n\t/tmp/tmpaii0418r.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower_case_chars = string:gmatch('[a-z]')\n    local upper_case_chars = string:gmatch('[A-Z]')\n    local lower_case_chars_count = lower_case_chars:count()\n    local upper_case_chars_count = upper_case_chars:count()\n    local lower_case_chars_index = 1\n    local upper_case_chars_index = lower_case_chars_count + 1\n    local result = string\n    while lower_case_chars_index <= lower_case_chars_count and upper_case_chars_index <= upper_case_chars_count do\n        result = result:gsub(lower_case_chars[lower_case_chars_index], upper_case_chars[upper_case_chars_index])\n        lower_case_chars_index = lower_case_chars_index + 1\n        upper_case_chars_index = upper_case_chars_index + 1\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnvl41f7c.lua:7: attempt to index a function value (local 'lower_case_chars')\nstack traceback:\n\t/tmp/tmpnvl41f7c.lua:7: in local 'candidate'\n\t/tmp/tmpnvl41f7c.lua:23: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string.gsub(/[a-z]/i, function(match) return string.charAt(1).toUpperCase() end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmp7x04ty1r.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local result = string\n    for i = 1, #string, 2 do\n        result = string:gsub(string[i], string[i] .. string[i])\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmptoszvnzi.lua:7: attempt to concatenate a nil value (field '?')\nstack traceback:\n\t/tmp/tmptoszvnzi.lua:7: in local 'candidate'\n\t/tmp/tmptoszvnzi.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string .. string.gsub(string, 'a-z', 'A-Z') .. string.gsub(string, 'A-Z', 'a-z')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp671rkw5p.lua:12: expected: \"hELLO!\"\nactual: \"Hello!Hello!Hello!\"\nstack traceback:\n\t/tmp/tmp671rkw5p.lua:12: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string..string.gsub(/[a-z]/,'A')..string.gsub(/[A-Z]/,'a')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmpf0k6ivby.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower = string:lower()\n    local upper = string:upper()\n    return lower .. upper\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaii0418r.lua:14: expected: \"hELLO!\"\nactual: \"hello!HELLO!\"\nstack traceback:\n\t/tmp/tmpaii0418r.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string .. string.gsub(/[a-z]/i, function(s) return string.char(s.upper()) end) .. string.gsub(/[A-Z]/i, function(s) return string.char(s.lower()) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmpazkpk_et.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string..gsub(/[a-z]/i, function(char)\n        return char..gsub(/[A-Z]/, function(char)\n            return char..gsub(/[a-z]/, function(char)\n                return char..gsub(/[0-9]/, function(char)\n                    return char..gsub(/[A-Z]/, function(char)\n                        return char..gsub(/[a-z]/, function(char)\n                            return char..gsub(/[0-9]/, function(char)\n                                return char..gsub(/[A-Z]/, function(char)\n                                    return char..gsub(/[a-z]/, function(char)\n                                        return char..gsub(/[0-9]/, function(char)\n                                            return char..gsub(/[A-Z]/, function(char)\n                                                return char..gsub(/[a-z]/, function(char)\n                                                    return char..gsub(/[0-9]/, function(char)\n                                                        return char..gsub(/[A-Z]/, function(char)\n                                                            return char..gsub(/[a-z]/, function(char)\n                                                                return char..gsub(/[0-9]/, function(char)\n                                                                    return char..gsub(/[A-Z]/, function(char)\n                                                                        return char..gsub(/[a-z]/, function(char)\n                                                                            return char..gsub(/[0-9]/, function(char)\n                                                                                return char..gsub(/[A-Z]/, function(char)\n                                                                                    return char..gsub(/[a-z]/, function(char)\n                                                                                        return char..gsub(/[0-9]/, function(char)\n                                                                                            return char..gsub(/[A-Z]/, function(char)\n                                                                                                return char..gsub(/[a-z\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmp671rwwzs.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string:gsub(/[a-z]/, function(match) return string.charCodeAt(match.to) - 32 end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmp3ulx9ins.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lowercase_chars = string:gmatch('[a-z]')\n    local uppercase_chars = string:gmatch('[A-Z]')\n    local lowercase_chars_index = lowercase_chars:gmatchindex()\n    local uppercase_chars_index = uppercase_chars:gmatchindex()\n    local lowercase_chars_count = lowercase_chars:gsub('', lowercase_chars_index)\n    local uppercase_chars_count = uppercase_chars:gsub('', uppercase_chars_index)\n    local lowercase_chars_count_index = lowercase_chars_count:gmatchindex()\n    local uppercase_chars_count_index = uppercase_chars_count:gmatchindex()\n    local lowercase_chars_count_count = lowercase_chars_count:gsub('', lowercase_chars_count_index)\n    local uppercase_chars_count_count = uppercase_chars_count:gsub('', uppercase_chars_count_index)\n    local lowercase_chars_count_count_index = lowercase_chars_count_count:gmatchindex()\n    local uppercase_chars_count_count_index = uppercase_chars_count_count:gmatchindex()\n    local lowercase_chars_count_count_count = lowercase_chars_count_count:gsub('', lowercase_chars_count_count_index)\n    local uppercase_chars_count_count_count = uppercase_chars_count_count:gsub('', uppercase_chars_count_count_index)\n    local lowercase_chars_count_count_count_index = lowercase_chars_count_count_count:gmatchindex()\n    local uppercase_chars_count_count_count_index = uppercase_chars_count_count_count:gmatchindex()\n    local lowercase_chars_count_count_count_count = lowercase_chars_count_count_count:\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmpn_mksu0k.lua:22: function arguments expected near '='\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string .. string.gsub(/[a-z]/i, function(match) return string.charCodeAt(match.charCodeAt() + 26) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmp8fosmjqd.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string .. string.gsub(string, 'a-z', 'A-Z') .. string.gsub(string, 'A-Z', 'a-z')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp671rkw5p.lua:12: expected: \"hELLO!\"\nactual: \"Hello!Hello!Hello!\"\nstack traceback:\n\t/tmp/tmp671rkw5p.lua:12: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower = string:lower()\n    local upper = string:upper()\n    return lower .. upper\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaii0418r.lua:14: expected: \"hELLO!\"\nactual: \"hello!HELLO!\"\nstack traceback:\n\t/tmp/tmpaii0418r.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lowercase_chars = string:gmatch('[a-z]')\n    local uppercase_chars = string:gmatch('[A-Z]')\n    local result = string\n    for _, lowercase_char in pairs(lowercase_chars) do\n        result = string:gsub(lowercase_char, string.char(toupper(lowercase_char)))\n    end\n    for _, uppercase_char in pairs(uppercase_chars) do\n        result = string:gsub(uppercase_char, string.char(tolower(uppercase_char)))\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppfsx09mk.lua:8: bad argument #1 to 'for iterator' (table expected, got function)\nstack traceback:\n\t/tmp/tmppfsx09mk.lua:8: in local 'candidate'\n\t/tmp/tmppfsx09mk.lua:20: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string..gsub(/[a-z]/i, function(char)\n        return char..gsub(/[A-Z]/, function(char)\n            return char..gsub(/[a-z]/, function(char)\n                return char..gsub(/[0-9]/, function(char)\n                    return char..gsub(/[A-Z]/, function(char)\n                        return char..gsub(/[a-z]/, function(char)\n                            return char..gsub(/[0-9]/, function(char)\n                                return char..gsub(/[A-Z]/, function(char)\n                                    return char..gsub(/[a-z]/, function(char)\n                                        return char..gsub(/[0-9]/, function(char)\n                                            return char..gsub(/[A-Z]/, function(char)\n                                                return char..gsub(/[a-z]/, function(char)\n                                                    return char..gsub(/[0-9]/, function(char)\n                                                        return char..gsub(/[A-Z]/, function(char)\n                                                            return char..gsub(/[a-z]/, function(char)\n                                                                return char..gsub(/[0-9]/, function(char)\n                                                                    return char..gsub(/[A-Z]/, function(char)\n                                                                        return char..gsub(/[a-z]/, function(char)\n                                                                            return char..gsub(/[0-9]/, function(char)\n                                                                                return char..gsub(/[A-Z]/, function(char)\n                                                                                    return char..gsub(/[a-z]/, function(char)\n                                                                                        return char..gsub(/[0-9]/, function(char)\n                                                                                            return char..gsub(/[A-Z]/, function(char)\n                                                                                                return char..gsub(/[a-z\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmp671rwwzs.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lowercase_chars = string:gmatch('[a-z]')\n    local uppercase_chars = string:gmatch('[A-Z]')\n    local lowercase_chars_index = lowercase_chars:gmatchindex()\n    local uppercase_chars_index = uppercase_chars:gmatchindex()\n    local lowercase_chars_count = lowercase_chars:gsub('', lowercase_chars_index)\n    local uppercase_chars_count = uppercase_chars:gsub('', uppercase_chars_index)\n    local lowercase_chars_count_index = lowercase_chars_count:gmatchindex()\n    local uppercase_chars_count_index = uppercase_chars_count:gmatchindex()\n    local lowercase_chars_count_count = lowercase_chars_count:gsub('', lowercase_chars_count_index)\n    local uppercase_chars_count_count = uppercase_chars_count:gsub('', uppercase_chars_count_index)\n    local lowercase_chars_count_count_index = lowercase_chars_count_count:gmatchindex()\n    local uppercase_chars_count_count_index = uppercase_chars_count_count:gmatchindex()\n    local lowercase_chars_count_count_count = lowercase_chars_count_count:gsub('', lowercase_chars_count_count_index)\n    local uppercase_chars_count_count_count = uppercase_chars_count_count:gsub('', uppercase_chars_count_count_index)\n    local result = string\n    for i = 1, lowercase_chars_count_count - 1 do\n        result = string:gsub(lowercase_chars_count[i], lowercase_chars_count_count[i])\n    end\n    for i = 1, uppercase_chars_count_count - 1 do\n        result = string:gsub(uppercase_chars_count[\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmpghir46vx.lua:25: ']' expected near '='\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string.gsub(/[a-z]/i, function(match) return string.charCodeAt(match.toUpperCase()) + string.charCodeAt(match.toLowerCase())\n    end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmpqnjnxotp.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string:gsub(/[a-z]/, function(match) return string.charCodeAt(match.toLowerCase()) - 32 end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmph4h1ed42.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string.gsub(/[a-z]/i, function(char)\n        return char.toUpper()\n    end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmplnpv7gwl.lua:5: unexpected symbol near '/'\n",
      "stdout": "",
      "timestamp": 1661907490
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower = string:lower()\n    local upper = string:upper()\n    return lower .. upper\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaii0418r.lua:14: expected: \"hELLO!\"\nactual: \"hello!HELLO!\"\nstack traceback:\n\t/tmp/tmpaii0418r.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string..gsub(/[a-z]/, function(match) return string.char(toupper(match.char())) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmpc6912zso.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower = string:lower()\n    local upper = string:upper()\n    return lower .. upper\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaii0418r.lua:14: expected: \"hELLO!\"\nactual: \"hello!HELLO!\"\nstack traceback:\n\t/tmp/tmpaii0418r.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string.gsub(/[a-z]/, function(match) return string.char(match.toUpperCase()) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpfd3vjsk8.lua:5: unexpected symbol near '/'\n",
      "stdout": "",
      "timestamp": 1661907490
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string..gsub(/[a-z]/i, function(s) return string.char(s.upper()) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmpv3kdfv_1.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string.gsub(/[a-z]/i, function(match) return string.charCodeAt(match.charCodeAt() - 32) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmptl8wf98n.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string..gsub(/[a-z]/, function(match) return string.char(match.toUpper) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmp2wtymg3c.lua:5: unexpected symbol near '/'\n",
      "stdout": "",
      "timestamp": 1661907490
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string.gsub(/[a-z]/, function(match) return string.char(match.toUpperCase()) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpfd3vjsk8.lua:5: unexpected symbol near '/'\n",
      "stdout": "",
      "timestamp": 1661907490
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string.gsub(/[a-z]/, function(match) return string.char(match.toUpperCase()) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpfd3vjsk8.lua:5: unexpected symbol near '/'\n",
      "stdout": "",
      "timestamp": 1661907490
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string:gsub(/[a-z]/, function(match) return string.charCodeAt(match.toLowerCase()) + string.charCodeAt(match.toUpperCase()) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmpk1pqu6kt.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string..gsub(/[a-z]/i, function(match) return string.charCodeAt(1) - 32 .. string.charCodeAt(1) end) .. string..gsub(/[A-Z]/i, function(match) return string.charCodeAt(1) - 32 .. string.charCodeAt(1) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmpx1x0zi69.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower_case = string:gsub('(.)([A-Z][a-z]+)', '\\\\1 \\\\2')\n    local upper_case = string:gsub('(.)([a-z]{1}[A-Z]+)', '\\\\1 \\\\2')\n    return lower_case .. upper_case\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphb5fil3m.lua:14: expected: \"hELLO!\"\nactual: \"Hello!Hello!\"\nstack traceback:\n\t/tmp/tmphb5fil3m.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower = string:lower()\n    local upper = string:upper()\n    return lower .. upper\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaii0418r.lua:14: expected: \"hELLO!\"\nactual: \"hello!HELLO!\"\nstack traceback:\n\t/tmp/tmpaii0418r.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower = string:lower()\n    local upper = string:upper()\n    return lower .. upper\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaii0418r.lua:14: expected: \"hELLO!\"\nactual: \"hello!HELLO!\"\nstack traceback:\n\t/tmp/tmpaii0418r.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string..gsub(/[a-z]/i, function(char)\n        return char..gsub(/[A-Z]/, 'a')..char..gsub(/[a-z]/, 'A')\n    end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmpefinv3oh.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower_case = string:gsub('(.)([A-Z][a-z]+)', '\\\\1 \\\\2')\n    local upper_case = string:gsub('(.)([a-z][A-Z]+)', '\\\\1 \\\\2')\n    return lower_case .. upper_case\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9ywh8kfb.lua:14: expected: \"hELLO!\"\nactual: \"Hello!Hello!\"\nstack traceback:\n\t/tmp/tmp9ywh8kfb.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string.gsub(/[a-z]/, function(match) return string.char(match.toUpperCase()) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpfd3vjsk8.lua:5: unexpected symbol near '/'\n",
      "stdout": "",
      "timestamp": 1661907490
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local result = string\n    for i = 1, #string, 2 do\n        result = string:sub(i, i) .. string:sub(i + 1, i + 1)\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpafkns8cj.lua:16: expected: \"hELLO!\"\nactual: \"o!\"\nstack traceback:\n\t/tmp/tmpafkns8cj.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string .. string.gsub(string, 'a-z', 'A-Z') .. string.gsub(string, 'A-Z', 'a-z')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp671rkw5p.lua:12: expected: \"hELLO!\"\nactual: \"Hello!Hello!Hello!\"\nstack traceback:\n\t/tmp/tmp671rkw5p.lua:12: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower = string:lower()\n    local upper = string:upper()\n    return lower .. upper\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaii0418r.lua:14: expected: \"hELLO!\"\nactual: \"hello!HELLO!\"\nstack traceback:\n\t/tmp/tmpaii0418r.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string.gsub(/[a-z]/i, function(match) return string.charAt(1).toUpper() end) .. string.gsub(/[A-Z]/i, function(match) return string.charAt(1).toLower() end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpyziej9nk.lua:5: unexpected symbol near '/'\n",
      "stdout": "",
      "timestamp": 1661907490
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower_case_characters = 'abcdefghijklmnopqrstuvwxyz'\n    local upper_case_characters = lower_case_characters.upper()\n    local result = string\n    for i = 1,#string,2 do\n        result = string:gsub(lower_case_characters, upper_case_characters)\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpmsdfz5cx.lua:6: bad argument #1 to 'upper' (string expected, got no value)\nstack traceback:\n\t/tmp/tmpmsdfz5cx.lua:6: in local 'candidate'\n\t/tmp/tmpmsdfz5cx.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower_case = string:gsub('(.)([A-Z][a-z]+)', '\\\\1 \\\\2')\n    local upper_case = string:gsub('(.)([a-z][A-Z]+)', '\\\\1 \\\\2')\n    return lower_case .. upper_case\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9ywh8kfb.lua:14: expected: \"hELLO!\"\nactual: \"Hello!Hello!\"\nstack traceback:\n\t/tmp/tmp9ywh8kfb.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower = string:lower()\n    local upper = string:upper()\n    return lower .. upper\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaii0418r.lua:14: expected: \"hELLO!\"\nactual: \"hello!HELLO!\"\nstack traceback:\n\t/tmp/tmpaii0418r.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string:gsub(/[a-z]/, function(match) return string.charCodeAt(match.to) - string.charCodeAt(match.from) + string.charCodeAt(match.from)\n    end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmp1mzkrr97.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string..gsub(/[a-z]/, function(match) return string.char(string.char.toUpper(match)) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmpigaejrqy.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string.gsub(/[a-z]/i, function(match) return string.charCodeAt(match.toUpperCase()) + string.charCodeAt(match.toLowerCase())\n    end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmpqnjnxotp.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower = string:lower()\n    local upper = string:upper()\n    return lower .. upper\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaii0418r.lua:14: expected: \"hELLO!\"\nactual: \"hello!HELLO!\"\nstack traceback:\n\t/tmp/tmpaii0418r.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string.gsub(/[a-z]/, function(match) return string.char(match.toUpperCase()) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpfd3vjsk8.lua:5: unexpected symbol near '/'\n",
      "stdout": "",
      "timestamp": 1661907490
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower = string:lower()\n    local upper = string:upper()\n    return lower .. upper\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaii0418r.lua:14: expected: \"hELLO!\"\nactual: \"hello!HELLO!\"\nstack traceback:\n\t/tmp/tmpaii0418r.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string.gsub(/[a-z]/i, function(match) return string.charAt(1).toUpper() end) .. string.gsub(/[A-Z]/i, function(match) return string.charAt(1).toLower() end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpyziej9nk.lua:5: unexpected symbol near '/'\n",
      "stdout": "",
      "timestamp": 1661907490
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string:gsub(/[a-z]/, function(match) return string.charCodeAt(match.toLowerCase()) + string.charCodeAt(match.toUpperCase()) - string.charCodeAt(match) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmphlu1b0c9.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string:gsub(/[a-z]/, function(match) return string.charCodeAt(match.toLowerCase()) + string.charCodeAt(match.toUpperCase()) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmpk1pqu6kt.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string .. string.gsub(string, 'a-z', 'A-Z') .. string.gsub(string, 'A-Z', 'a-z')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp671rkw5p.lua:12: expected: \"hELLO!\"\nactual: \"Hello!Hello!Hello!\"\nstack traceback:\n\t/tmp/tmp671rkw5p.lua:12: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string:gsub(/[a-z]/, function(match) return string.charCodeAt(match.length) - string.charCodeAt(match.length) + string.charCodeAt(match.length) - 97 end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmpp_73zwm4.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string..gsub(/[a-z]/, function(match) return string.char(string.char.toUpper(match)) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmpigaejrqy.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lowercase_chars = string:gmatch('[a-z]')\n    local uppercase_chars = string:gmatch('[A-Z]')\n    local lowercase_chars_count = lowercase_chars:len()\n    local uppercase_chars_count = uppercase_chars:len()\n    local lowercase_chars_index = 1\n    local uppercase_chars_index = lowercase_chars_count + 1\n    local new_string = string\n    while lowercase_chars_index <= lowercase_chars_count and uppercase_chars_index <= uppercase_chars_count do\n        new_string = string:gsub(lowercase_chars[lowercase_chars_index], '\\1' .. uppercase_chars[uppercase_chars_index])\n        lowercase_chars_index = lowercase_chars_index + 1\n        uppercase_chars_index = uppercase_chars_index + 1\n    end\n    return new_string\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpwlfmby3l.lua:7: attempt to index a function value (local 'lowercase_chars')\nstack traceback:\n\t/tmp/tmpwlfmby3l.lua:7: in local 'candidate'\n\t/tmp/tmpwlfmby3l.lua:23: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string .. string.gsub(/[a-z]/i, function(char)\n        return char .. char.toUpper\n    end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmpr3m3n6l4.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string.gsub(/[a-z]/i, function(match) return string.charCodeAt(match.toUpperCase()) + string.charCodeAt(match.toLowerCase()) - string.charCodeAt(match) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmpv7x7kpwk.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower = string:lower()\n    local upper = string:upper()\n    return lower .. upper\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaii0418r.lua:14: expected: \"hELLO!\"\nactual: \"hello!HELLO!\"\nstack traceback:\n\t/tmp/tmpaii0418r.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string.gsub(/[a-z]/, function(match) return string.char(match.toUpperCase()) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpfd3vjsk8.lua:5: unexpected symbol near '/'\n",
      "stdout": "",
      "timestamp": 1661907490
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower = string:lower()\n    local upper = string:upper()\n    return lower .. upper\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaii0418r.lua:14: expected: \"hELLO!\"\nactual: \"hello!HELLO!\"\nstack traceback:\n\t/tmp/tmpaii0418r.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string.gsub(/[a-z]/i, function(match) return string.charAt(1).toUpper() end) .. string.gsub(/[A-Z]/i, function(match) return string.charAt(1).toLower() end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpyziej9nk.lua:5: unexpected symbol near '/'\n",
      "stdout": "",
      "timestamp": 1661907490
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string.gsub(/[a-z]/, function(match) return string.char(match.toUpperCase()) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpfd3vjsk8.lua:5: unexpected symbol near '/'\n",
      "stdout": "",
      "timestamp": 1661907490
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local result = string\n    for i = 1,#string,2 do\n        result = string:sub(i,i) .. string:sub(i+1,i+1)\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdzamj2cy.lua:16: expected: \"hELLO!\"\nactual: \"o!\"\nstack traceback:\n\t/tmp/tmpdzamj2cy.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower = string:lower()\n    local upper = string:upper()\n    return lower .. upper\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaii0418r.lua:14: expected: \"hELLO!\"\nactual: \"hello!HELLO!\"\nstack traceback:\n\t/tmp/tmpaii0418r.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower = string:lower()\n    local upper = string:upper()\n    return lower .. upper\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaii0418r.lua:14: expected: \"hELLO!\"\nactual: \"hello!HELLO!\"\nstack traceback:\n\t/tmp/tmpaii0418r.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string..gsub(/[a-z]/i, function(match) return string.charCodeAt(1) - 32 end) ..gsub(/[A-Z]/i, function(match) return string.charCodeAt(1) - 32 end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmpb3u1dlx3.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local result = string\n    for i = 1, #string, 2 do\n        result = string:sub(i, i) .. string:sub(i + 1, i + 1)\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpafkns8cj.lua:16: expected: \"hELLO!\"\nactual: \"o!\"\nstack traceback:\n\t/tmp/tmpafkns8cj.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower_case_characters = 'abcdefghijklmnopqrstuvwxyz'\n    local upper_case_characters = lower_case_characters.upper()\n    local result = string\n    for i = 1,#string,2 do\n        result = string:gsub(lower_case_characters, upper_case_characters)\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpmsdfz5cx.lua:6: bad argument #1 to 'upper' (string expected, got no value)\nstack traceback:\n\t/tmp/tmpmsdfz5cx.lua:6: in local 'candidate'\n\t/tmp/tmpmsdfz5cx.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lowercase_chars = string:gmatch('[a-z]')\n    local uppercase_chars = string:gmatch('[A-Z]')\n    local lowercase_chars_count = lowercase_chars:count()\n    local uppercase_chars_count = uppercase_chars:count()\n    if lowercase_chars_count > 0 and uppercase_chars_count > 0 then\n        string = string:gsub(lowercase_chars, function(match) return string:sub(match, 1, 1):upper() end)\n        string = string:gsub(uppercase_chars, function(match) return string:sub(match, 1, 1):lower() end)\n    end\n    return string\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpfft92dpn.lua:7: attempt to index a function value (local 'lowercase_chars')\nstack traceback:\n\t/tmp/tmpfft92dpn.lua:7: in local 'candidate'\n\t/tmp/tmpfft92dpn.lua:19: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string..gsub(/[a-z]/i, function(char)\n        return char..gsub(/[A-Z]/, function(char)\n            return char..gsub(/[a-z]/, function(char)\n                return char..gsub(/[0-9]/, function(char)\n                    return char..gsub(/[A-Z]/, function(char)\n                        return char..gsub(/[a-z]/, function(char)\n                            return char..gsub(/[0-9]/, function(char)\n                                return char..gsub(/[A-Z]/, function(char)\n                                    return char..gsub(/[a-z]/, function(char)\n                                        return char..gsub(/[0-9]/, function(char)\n                                            return char..gsub(/[A-Z]/, function(char)\n                                                return char..gsub(/[a-z]/, function(char)\n                                                    return char..gsub(/[0-9]/, function(char)\n                                                        return char..gsub(/[A-Z]/, function(char)\n                                                            return char..gsub(/[a-z]/, function(char)\n                                                                return char..gsub(/[0-9]/, function(char)\n                                                                    return char..gsub(/[A-Z]/, function(char)\n                                                                        return char..gsub(/[a-z]/, function(char)\n                                                                            return char..gsub(/[0-9]/, function(char)\n                                                                                return char..gsub(/[A-Z]/, function(char)\n                                                                                    return char..gsub(/[a-z]/, function(char)\n                                                                                        return char..gsub(/[0-9]/, function(char)\n                                                                                            return char..gsub(/[A-Z]/, function(char)\n                                                                                                return char..gsub(/[a-z\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmp671rwwzs.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string.gsub(/[a-z]/i, function(match) return string.charCodeAt(match.charCodeAt() + 26) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmpcs8wl97q.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower = string:lower()\n    local upper = string:upper()\n    return lower .. upper\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaii0418r.lua:14: expected: \"hELLO!\"\nactual: \"hello!HELLO!\"\nstack traceback:\n\t/tmp/tmpaii0418r.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower = string:lower()\n    local upper = string:upper()\n    return lower .. upper\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaii0418r.lua:14: expected: \"hELLO!\"\nactual: \"hello!HELLO!\"\nstack traceback:\n\t/tmp/tmpaii0418r.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local result = string\n    for i = 1, #string, 2 do\n        result = string:sub(i, i) .. string:sub(i+1, i+1)\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp80p2f93i.lua:16: expected: \"hELLO!\"\nactual: \"o!\"\nstack traceback:\n\t/tmp/tmp80p2f93i.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string..gsub(/[a-z]/i, function(s) return string.char(s.upper()) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmpv3kdfv_1.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower = string:lower()\n    local upper = string:upper()\n    return lower .. upper\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaii0418r.lua:14: expected: \"hELLO!\"\nactual: \"hello!HELLO!\"\nstack traceback:\n\t/tmp/tmpaii0418r.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower = string:lower()\n    local upper = string:upper()\n    return lower .. upper\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaii0418r.lua:14: expected: \"hELLO!\"\nactual: \"hello!HELLO!\"\nstack traceback:\n\t/tmp/tmpaii0418r.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string .. string.gsub(string, 'a-z', 'A-Z') .. string.gsub(string, 'A-Z', 'a-z')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp671rkw5p.lua:12: expected: \"hELLO!\"\nactual: \"Hello!Hello!Hello!\"\nstack traceback:\n\t/tmp/tmp671rkw5p.lua:12: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower_case = string:gsub('(.)', '\\\\1')\n    return lower_case:gsub('(.)', '\\\\1')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7qwrh7dy.lua:13: expected: \"hELLO!\"\nactual: \"\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\"\nstack traceback:\n\t/tmp/tmp7qwrh7dy.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower_case_characters = string:gmatch('[a-z]')\n    local upper_case_characters = string:gmatch('[A-Z]')\n    local lower_case_characters_count = lower_case_characters:len()\n    local upper_case_characters_count = upper_case_characters:len()\n    local lower_case_characters_index = 1\n    local upper_case_characters_index = 1\n    local new_string = string\n    while lower_case_characters_index <= lower_case_characters_count and upper_case_characters_index <= upper_case_characters_count do\n        if lower_case_characters[lower_case_characters_index] == upper_case_characters[upper_case_characters_index] then\n            new_string = string:gsub(lower_case_characters[lower_case_characters_index], upper_case_characters[upper_case_characters_index])\n            lower_case_characters_index = lower_case_characters_index + 1\n            upper_case_characters_index = upper_case_characters_index + 1\n        else\n            if lower_case_characters_index < lower_case_characters_count then\n                new_string = new_string:gsub(lower_case_characters[lower_case_characters_index], lower_case_characters[lower_case_characters_index])\n                lower_case_characters_index = lower_case_characters_index + 1\n            else\n                new_string = new_string:gsub(upper_case_characters[upper_case_characters_index], upper_case_characters[upper_case_characters_index])\n                upper_case_characters_index = upper_case_characters_index + 1\n        end\n    end\n    return new_string\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmpjxu0a7rt.lua:37: 'end' expected (to close 'function' at line 4) near <eof>\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string..gsub(/[a-z]/, function(match) return string.char(toupper(string.char(match))) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmp91pkvb39.lua:5: unexpected symbol near '/'\n",
      "stdout": "",
      "timestamp": 1661907490
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower = string:lower()\n    local upper = string:upper()\n    return lower .. upper\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaii0418r.lua:14: expected: \"hELLO!\"\nactual: \"hello!HELLO!\"\nstack traceback:\n\t/tmp/tmpaii0418r.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string .. string:gsub(/[a-z]/, function(match) return string.charCodeAt(1) - 32 .. string.charCodeAt(1) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmpdsykfka3.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string .. string.gsub(string, 'a-z', 'A-Z') .. string.gsub(string, 'A-Z', 'a-z')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp671rkw5p.lua:12: expected: \"hELLO!\"\nactual: \"Hello!Hello!Hello!\"\nstack traceback:\n\t/tmp/tmp671rkw5p.lua:12: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string.gsub(/[a-z]/, function(match) return string.char(match.charCodeAt(1) + 32) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmpjrgwwywl.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower = string:lower()\n    local upper = string:upper()\n    return lower .. upper\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaii0418r.lua:14: expected: \"hELLO!\"\nactual: \"hello!HELLO!\"\nstack traceback:\n\t/tmp/tmpaii0418r.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string.gsub(/[a-z]/, function(match) return string.char(match.toUpperCase()) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpfd3vjsk8.lua:5: unexpected symbol near '/'\n",
      "stdout": "",
      "timestamp": 1661907490
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string .. string:gsub(/[a-z]/i, function(match) return string.charCodeAt(1) - 32 .. string.charCodeAt(1) .. string.charCodeAt(1) .. string.charCodeAt(1) .. string.charCodeAt(1) .. string.charCodeAt(1) .. string.charCodeAt(1) .. string.charCodeAt(1) .. string.charCodeAt(1) .. string.charCodeAt(1) .. string.charCodeAt(1) .. string.charCodeAt(1) .. string.charCodeAt(1) .. string.charCodeAt(1) .. string.charCodeAt(1) .. string.charCodeAt(1) .. string.charCodeAt(1) .. string.charCodeAt(1) .. string.charCodeAt(1) .. string.charCodeAt(1) .. string.charCodeAt(1) .. string.charCodeAt(1) .. string.charCodeAt(1) .. string.charCodeAt(1) .. string.charCodeAt(1) .. string.charCodeAt(1) .. string.charCodeAt(1) .. string.charCodeAt(1) .. string.charCodeAt(1) .. string.charCodeAt(1) .. string.charCodeAt(1) .. string.charCodeAt(1) .. string.charCodeAt(1) .. string.charCodeAt(1) .. string.charCodeAt(1) .. string.charCodeAt(1) .. string.charCodeAt(1) .. string.charCodeAt(1) .. string.charCodeAt(1) .. string.charCodeAt(1) .. string.charCodeAt(1) .. string.charCodeAt(1) .. string.charCodeAt(1) .. string.charCodeAt(1) .. string.charCodeAt(1) .. string.charCodeAt(1) .. string.charCodeAt(1) .. string.charCodeAt(1) .. string.charCodeAt(1) .. string.charCodeAt(1) .. string.charCodeAt(1) .. string.charCodeAt(1) .. string.charCodeAt(1) .. string.charCodeAt(1) .. string\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmph3x8ftqh.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower = string:lower()\n    local upper = string:upper()\n    return lower .. upper\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaii0418r.lua:14: expected: \"hELLO!\"\nactual: \"hello!HELLO!\"\nstack traceback:\n\t/tmp/tmpaii0418r.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lowercase_chars = 'abcdefghijklmnopqrstuvwxyz'\n    local uppercase_chars = lowercase_chars.upper()\n    local lowercase_chars_regex = lowercase_chars.match('')\n    local uppercase_chars_regex = uppercase_chars.match('')\n    return string.gsub(lowercase_chars_regex, function(match) return uppercase_chars[match.charCodeAt(1) - 97] end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmptdsov3hk.lua:6: bad argument #1 to 'upper' (string expected, got no value)\nstack traceback:\n\t/tmp/tmptdsov3hk.lua:6: in local 'candidate'\n\t/tmp/tmptdsov3hk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower_case_chars = 'abcdefghijklmnopqrstuvwxyz'\n    local upper_case_chars = lower_case_chars.upper()\n    local result = string\n    for i = 1,#string,2 do\n        result = string:gsub(lower_case_chars, upper_case_chars)\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp49twxe32.lua:6: bad argument #1 to 'upper' (string expected, got no value)\nstack traceback:\n\t/tmp/tmp49twxe32.lua:6: in local 'candidate'\n\t/tmp/tmp49twxe32.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local result = string\n    for i = 1,#string,2 do\n        result = string:replace(string:sub(string, i, i+1), string:sub(string, i+1, i), string:sub(string, i, i+1))\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp6snjgkfk.lua:7: bad argument #1 to 'sub' (number expected, got string)\nstack traceback:\n\t/tmp/tmp6snjgkfk.lua:7: in local 'candidate'\n\t/tmp/tmp6snjgkfk.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string..gsub(/[a-z]/, function(match) return string.char(toupper(match.char())) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmpc6912zso.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string .. string.gsub(string, 'a-z', 'A-Z') .. string.gsub(string, 'A-Z', 'a-z')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp671rkw5p.lua:12: expected: \"hELLO!\"\nactual: \"Hello!Hello!Hello!\"\nstack traceback:\n\t/tmp/tmp671rkw5p.lua:12: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string..gsub(/[a-z]/i, function(s) return string.char(s.upper()) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmpv3kdfv_1.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string..' '..string:gsub(/([a-z])/,'\\\\1')..' '..string:gsub(/([A-Z])/,'\\\\1')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmpddkdwht8.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string.gsub(/[a-z]/i, function(match) return string.charCodeAt(match.toLowerCase()) + string.charCodeAt(match.toUpperCase()) - string.charCodeAt(match) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmpcdk2m5vq.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string..string.gsub(/[a-z]/,'A')..string.gsub(/[A-Z]/,'a')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmpf0k6ivby.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string..gsub(/[a-z]/, function(char)\n        return char..gsub(/[A-Z]/, function(char)\n            return char..gsub(/^./, function(char)\n                return char.toUpper()\n            )\n        )\n    )\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmp2s7ezzbd.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string.gsub(/[a-z]/i, function(match) return string.charCodeAt(match.toLowerCase()) + string.charCodeAt(match.toUpperCase())\n    end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmpzta5xvdw.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string..gsub(/[a-z]/, function(char)\n        return char..gsub(/[A-Z]/, function(char)\n            return char\n        )\n    )\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmp57b03haq.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string..gsub(/[a-z]/i, function(match) return string.charCodeAt(1) - 32 end)..gsub(/[A-Z]/i, function(match) return string.charCodeAt(1) - 32 end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpb0_bo_kt.lua:5: unexpected symbol near '/'\n",
      "stdout": "",
      "timestamp": 1661907490
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lowercase = string:find('[a-z]')\n    local uppercase = string:find('[A-Z]')\n    if lowercase ~= nil and uppercase ~= nil then\n        return string:gsub(string, '[a-z]', '[A-Z]')\n    else\n        return string\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmplfkxpcbj.lua:8: bad argument #3 to 'gsub' (number expected, got string)\nstack traceback:\n\t/tmp/tmplfkxpcbj.lua:8: in local 'candidate'\n\t/tmp/tmplfkxpcbj.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string .. string.gsub(string, 'a-z', 'A-Z') .. string.gsub(string, 'A-Z', 'a-z')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp671rkw5p.lua:12: expected: \"hELLO!\"\nactual: \"Hello!Hello!Hello!\"\nstack traceback:\n\t/tmp/tmp671rkw5p.lua:12: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string.gsub(/[a-z]/i, function(match) return string.char(match.toUpperCase()) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmpr4_ryhtz.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower = string:lower()\n    local upper = string:upper()\n    return lower .. upper\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaii0418r.lua:14: expected: \"hELLO!\"\nactual: \"hello!HELLO!\"\nstack traceback:\n\t/tmp/tmpaii0418r.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string .. string.gsub(string, 'a-z', 'A-Z') .. string.gsub(string, 'A-Z', 'a-z')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp671rkw5p.lua:12: expected: \"hELLO!\"\nactual: \"Hello!Hello!Hello!\"\nstack traceback:\n\t/tmp/tmp671rkw5p.lua:12: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string..' '..string:gsub('(.)([A-Z][a-z]+)', function(match) return string:sub(1, 1)..string:sub(2, 2)..match[2] end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7l5utidf.lua:11: expected: \"\"\nactual: \" \"\nstack traceback:\n\t/tmp/tmp7l5utidf.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string..gsub(/[a-z]/, function(char)\n        return char..gsub(/[A-Z]/, function(char)\n            return char..gsub(/[a-z]/, function(char)\n                return char..gsub(/[A-Z]/, function(char)\n                    return char..gsub(/[a-z]/, function(char)\n                        return char..gsub(/[A-Z]/, function(char)\n                            return char..gsub(/[a-z]/, function(char)\n                                return char..gsub(/[A-Z]/, function(char)\n                                    return char..gsub(/[a-z]/, function(char)\n                                        return char..gsub(/[A-Z]/, function(char)\n                                            return char..gsub(/[a-z]/, function(char)\n                                                return char..gsub(/[A-Z]/, function(char)\n                                                    return char..gsub(/[a-z]/, function(char)\n                                                        return char..gsub(/[A-Z]/, function(char)\n                                                            return char..gsub(/[a-z]/, function(char)\n                                                                return char..gsub(/[A-Z]/, function(char)\n                                                                    return char..gsub(/[a-z]/, function(char)\n                                                                        return char..gsub(/[A-Z]/, function(char)\n                                                                            return char..gsub(/[a-z]/, function(char)\n                                                                                return char..gsub(/[A-Z]/, function(char)\n                                                                                    return char..gsub(/[a-z]/, function(char)\n                                                                                        return char..gsub(/[A-Z]/, function(char)\n                                                                                            return char..gsub(/[a-z]/, function(char)\n                                                                                                return char..gsub(/[A-Z]/,\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmpadglofo6.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local result = string\n    for i = 1, #string, 2 do\n        result = string:sub(i, i) .. string:sub(i+1, i+1)\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp80p2f93i.lua:16: expected: \"hELLO!\"\nactual: \"o!\"\nstack traceback:\n\t/tmp/tmp80p2f93i.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string.gsub(/[a-z]/i, function(match) return string.charCodeAt(match.toUpperCase()) + string.charCodeAt(match.toLowerCase()) - string.charCodeAt(match) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmpv7x7kpwk.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string..gsub(/[a-z]/, function(match) return string.char(match.toUpper) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmp2wtymg3c.lua:5: unexpected symbol near '/'\n",
      "stdout": "",
      "timestamp": 1661907490
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string .. string.gsub(string, 'a-z', 'A-Z') .. string.gsub(string, 'A-Z', 'a-z')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp671rkw5p.lua:12: expected: \"hELLO!\"\nactual: \"Hello!Hello!Hello!\"\nstack traceback:\n\t/tmp/tmp671rkw5p.lua:12: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string..gsub(/[a-z]/, function(match) return string.char(string.char(match) - 32) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmpfnaklov_.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string.gsub(/[a-z]/i, function(match) return string.charCodeAt(match.length) - 32 end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmphx_q_n0p.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower = string:lower()\n    local upper = string:upper()\n    return lower .. upper\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaii0418r.lua:14: expected: \"hELLO!\"\nactual: \"hello!HELLO!\"\nstack traceback:\n\t/tmp/tmpaii0418r.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower = string:lower()\n    local upper = string:upper()\n    return lower .. upper\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaii0418r.lua:14: expected: \"hELLO!\"\nactual: \"hello!HELLO!\"\nstack traceback:\n\t/tmp/tmpaii0418r.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower = string:lower()\n    local upper = string:upper()\n    return lower .. upper\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaii0418r.lua:14: expected: \"hELLO!\"\nactual: \"hello!HELLO!\"\nstack traceback:\n\t/tmp/tmpaii0418r.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string..gsub(/[a-z]/, function(match) return string.charCodeAt(1) - 32 .. string.charCodeAt(1) end) .. string..gsub(/[A-Z]/, function(match) return string.charCodeAt(1) - 32 .. string.charCodeAt(1) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmph0gbzrpn.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower = string:lower()\n    local upper = string:upper()\n    return lower .. upper\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaii0418r.lua:14: expected: \"hELLO!\"\nactual: \"hello!HELLO!\"\nstack traceback:\n\t/tmp/tmpaii0418r.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string..gsub(/[a-z]/i, function(c) return string.charCodeAt(c) - 32 end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmph862dmp0.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string.gsub(/[a-z]/i, function(s) return string.char(s.upper()) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmpqz473m8i.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower_case = string:gsub('([a-z])', '\\\\1')\n    local upper_case = string:gsub('([A-Z])', '\\\\1')\n    return lower_case .. upper_case\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmps6anq16u.lua:14: expected: \"hELLO!\"\nactual: \"H\\1\\1\\1\\1!\\1ello!\"\nstack traceback:\n\t/tmp/tmps6anq16u.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string.gsub(/[a-z]/, function(match) return string.char(match.charCodeAt(1) + 32) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmpjrgwwywl.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string..gsub(/[a-z]/i, function(s) return string.char(s.upper()) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmpv3kdfv_1.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string.gsub(/[a-z]/, function(match) return string.char(match.toUpperCase()) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpfd3vjsk8.lua:5: unexpected symbol near '/'\n",
      "stdout": "",
      "timestamp": 1661907490
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string.gsub(/[a-z]/, function(match) return string.char(match.toUpperCase()) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpfd3vjsk8.lua:5: unexpected symbol near '/'\n",
      "stdout": "",
      "timestamp": 1661907490
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower_case_characters = 'abcdefghijklmnopqrstuvwxyz'\n    local upper_case_characters = lower_case_characters.upper()\n    local result = string\n    for i = 1,#string,2 do\n        result = string:gsub(lower_case_characters, upper_case_characters)\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpmsdfz5cx.lua:6: bad argument #1 to 'upper' (string expected, got no value)\nstack traceback:\n\t/tmp/tmpmsdfz5cx.lua:6: in local 'candidate'\n\t/tmp/tmpmsdfz5cx.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string.gsub(/[a-z]/, function(match) return string.char(match.toUpperCase()) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpfd3vjsk8.lua:5: unexpected symbol near '/'\n",
      "stdout": "",
      "timestamp": 1661907490
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string.gsub(/[a-z]/, function(match) return string.char(match.toUpperCase()) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "lua: /tmp/tmpfd3vjsk8.lua:5: unexpected symbol near '/'\n",
      "stdout": "",
      "timestamp": 1661907490
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local result = string\n    for i = 1, #string, 2 do\n        result = string:gsub(string[i], string[i] .. string[i])\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmptoszvnzi.lua:7: attempt to concatenate a nil value (field '?')\nstack traceback:\n\t/tmp/tmptoszvnzi.lua:7: in local 'candidate'\n\t/tmp/tmptoszvnzi.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower = string:lower()\n    local upper = string:upper()\n    return lower .. upper\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaii0418r.lua:14: expected: \"hELLO!\"\nactual: \"hello!HELLO!\"\nstack traceback:\n\t/tmp/tmpaii0418r.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string..gsub(/[a-z]/, function(match) return string.char(match.toUpper()) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292515,
      "stdout": "",
      "stderr": "lua: /tmp/tmpgiiijxnd.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower_case_chars = string:gmatch('[a-z]')\n    local upper_case_chars = string:gmatch('[A-Z]')\n    local lower_case_chars_count = lower_case_chars:len()\n    local upper_case_chars_count = upper_case_chars:len()\n    local lower_case_chars_index = 1\n    local upper_case_chars_index = lower_case_chars_count + 1\n    local result = string\n    while lower_case_chars_index <= lower_case_chars_count and upper_case_chars_index <= upper_case_chars_count do\n        result = string:gsub(lower_case_chars[lower_case_chars_index], upper_case_chars[upper_case_chars_index])\n        lower_case_chars_index = lower_case_chars_index + 1\n        upper_case_chars_index = upper_case_chars_index + 1\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292515,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpuuai94zw.lua:7: attempt to index a function value (local 'lower_case_chars')\nstack traceback:\n\t/tmp/tmpuuai94zw.lua:7: in local 'candidate'\n\t/tmp/tmpuuai94zw.lua:23: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "exit_code": 1,
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower = string:lower()\n    local upper = string:upper()\n    return lower .. upper\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "status": "Exception",
      "stderr": "",
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaii0418r.lua:14: expected: \"hELLO!\"\nactual: \"hello!HELLO!\"\nstack traceback:\n\t/tmp/tmpaii0418r.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "timestamp": 1661907490
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string..gsub(/[a-z]/i, function(s) return string.char(s.upper()) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmpv3kdfv_1.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string..gsub(/[a-z]/i, function(match) return string.charCodeAt(match.charCodeAt() - 32) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292515,
      "stdout": "",
      "stderr": "lua: /tmp/tmp5x_hitp6.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    return string..gsub(/[a-z]/, function(match) return string.char(toupper(match.char())) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292514,
      "stdout": "",
      "stderr": "lua: /tmp/tmpc6912zso.lua:5: unexpected symbol near '/'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n    local lower_case_chars = string:gmatch('[a-z]')\n    local upper_case_chars = string:gmatch('[A-Z]')\n    local lower_case_chars_count = lower_case_chars:len()\n    local upper_case_chars_count = upper_case_chars:len()\n    local lower_case_chars_index = 1\n    local upper_case_chars_index = lower_case_chars_count + 1\n    local new_string = string\n    for i = 1, lower_case_chars_count do\n        new_string = string:gsub(lower_case_chars[i], upper_case_chars[i], new_string)\n    end\n    for i = upper_case_chars_index, upper_case_chars_count do\n        new_string = string:gsub(upper_case_chars[i], lower_case_chars[i], new_string)\n    end\n    return new_string\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1664292515,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmph62y0d8d.lua:7: attempt to index a function value (local 'lower_case_chars')\nstack traceback:\n\t/tmp/tmph62y0d8d.lua:7: in local 'candidate'\n\t/tmp/tmph62y0d8d.lua:24: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
name: HumanEval_30_get_positive
language: lua
prompt: "-- Return only positive numbers in the table.\n-- >>> get_positive([-1, 2,\
  \ -4, 5, 6])\n-- [2, 5, 6]\n-- >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0, 123,\
  \ 1, -10])\n-- [5, 3, 2, 3, 9, 123, 1]\nlocal function get_positive(l)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_positive\n\
  \    lu.assertEquals(candidate({-1, -2, 4, 5, 6}), {4, 5, 6})\n    lu.assertEquals(candidate({5,\
  \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10}), {5, 3, 2, 3, 3, 9, 123, 1})\n    lu.assertEquals(candidate({-1,\
  \ -2}), {})\n    lu.assertEquals(candidate({}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    return l:filter(function(x) return x > 0)\nend", "    local t =\
    \ {}\n    for i = 1, #l do\n        if l[i] > 0 then\n            table.insert(t,\
    \ l[i])\n        end\n    end\n    return t\nend", "    local t = {}\n    for\
    \ i, v in ipairs(l) do\n        if v > 0 then t[v] = true end\n    end\n    return\
    \ t\nend", "    local pos = {}\n    for _, v in ipairs(l) do\n        if v > 0\
    \ then\n            table.insert(pos, v)\n        end\n    end\n    return pos\n\
    end", "    local t = {}\n    for i=1,#                                       \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                   ", "    return l:filter(function(v) return\
    \ v > 0)\nend", "    local t = {}\n    for _, v in ipairs(l) do\n        if v\
    \ > 0 then t[v] = true end\n    return t\nend", "    local pos = {}\n    for _,\
    \ v in ipairs(l) do\n        if v > 0 then\n            pos[v] = true\n      \
    \  end\n    end\n    return unpack(pos)\nend", "    local t = {}\n    for i, v\
    \ in ipairs(l) do\n        if v > 0 then\n            table.insert(t, v)\n   \
    \     end\n    end\n    return t\nend", "    local t = {}\n    for i = 1, #l,\
    \ 2 do\n        if l[i] > 0 then\n            table.insert(t, l[i])\n        end\n\
    \    end\n    return t\nend", "    local t = {}\n    for i=1,#", "    local t\
    \ = {}\n    for i=1,#", "    local pos = {}\n    for i=1,#                   \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                       ", "    local t = {}\n\
    \    for _,v in ipairs(l) do\n        if v > 0 then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return t\nend", "    local t = {}\n    for _,v\
    \ in ipairs(l) do\n        if v > 0 then\n            table.insert(t, v)\n   \
    \     end\n    end\n    return t\nend", "    local pos = {}\n    for _, v in ipairs(l)\
    \ do\n        if v > 0 then\n            pos[v] = true\n        end\n    end\n\
    \    return unpack(pos)\nend", "    local t = {}\n    for _, v in ipairs(l) do\n\
    \        if v > 0 then t[v] = true end\n    end\n    return t\nend", "    return\
    \ l:filter(function(v) v > 0)\nend", "    local t = {}\n    for i = 1, #l, 1 do\n\
    \        if l[i] > 0 then\n            table.insert(t, l[i])\n        end\n  \
    \  end\n    return t\nend", "    local pos = {}\n    for _, v in ipairs(l) do\n\
    \        if v > 0 then\n            table.insert(pos, v)\n        end\n    end\n\
    \    return pos\nend", "    local pos = {}\n    for i, v in ipairs(l) do\n   \
    \     if v > 0 then\n            table.insert(pos, v)\n        end\n    end\n\
    \    return pos\nend", "    local pos = {}\n    for i, v in ipairs(l) do\n   \
    \     if v > 0 then\n            pos[v] = true\n        end\n    end\n    return\
    \ unpack(pos)\nend", "    local t = {}\n    for _,v in ipairs(l) do\n        if\
    \ v > 0 then\n            table.insert(t, v)\n        end\n    end\n    return\
    \ t\nend", "    local pos = {}\n    for i, v in ipairs(l) do\n        if v > 0\
    \ then\n            pos[i] = v\n        end\n    end\n    return pos\nend", " \
    \   local t = {}\n    for i, v in ipairs(l) do\n        if v > 0 then t[v] = true\
    \ end\n    end\n    return t\nend", "    local pos = {}\n    for _, v in ipairs(l)\
    \ do\n        if v > 0 then\n            pos[v] = true\n        end\n    end\n\
    \    return unpack(pos)\nend", "    local pos = {}\n    for i, v in ipairs(l)\
    \ do\n        if v > 0 then\n            pos[v] = true\n        end\n    end\n\
    \    return unpack(pos)\nend", "    local t = {}\n    for i = 1, #l do\n     \
    \   if l[i] > 0 then\n            table.insert(t, l[i])\n        end\n    end\n\
    \    return t\nend", "    local pos = {}\n    for _, v in ipairs(l) do\n     \
    \   if v > 0 then\n            pos[v] = true\n        end\n    end\n    return\
    \ pos\nend", "    local t = {}\n    for i=1,#l do\n        if l[i] > 0 then\n\
    \            table.insert(t, l[i])\n        end\n    end\n    return t\nend",
  "    local t = {}\n    for i, v in ipairs(l) do\n        if v > 0 then t[v] = true\
    \ end\n    end\n    return t\nend", "    local t = {}\n    for i = 1, #l do\n\
    \        if l[i] > 0 then\n            table.insert(t, l[i])\n        end\n  \
    \  end\n    return t\nend", "    local pos = {}\n    for _, v in ipairs(l) do\n\
    \        if v > 0 then\n            table.insert(pos, v)\n        end\n    end\n\
    \    return pos\nend", "    local t = {}\n    for i, v in ipairs(l) do\n     \
    \   if v > 0 then t[v] = true end\n    end\n    return t\nend", "    local t =\
    \ {}\n    for i, v in ipairs(l) do\n        if v > 0 then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return t\nend", "    local t = {}\n    for i =\
    \ 1, #l do\n        if l[i] > 0 then\n            table.insert(t, l[i])\n    \
    \    end\n    end\n    return t\nend", "    return l:filter(function(x) return\
    \ x > 0)\nend", "    return l:filter(function(x) return x > 0)\nend", "    local\
    \ pos = {}\n    for i, v in ipairs(l) do\n        if v > 0 then\n            table.insert(pos,\
    \ v)\n        end\n    end\n    return pos\nend", "    local t = {}\n    for i,\
    \ v in ipairs(l) do\n        if v > 0 then t[v] = true end\n    end\n    return\
    \ t\nend", "    local t = {}\n    for i=1,#l do\n        if l[i] > 0 then\n  \
    \          table.insert(t, l[i])\n        end\n    end\n    return t\nend", " \
    \   local t = {}\n    for i=1,#l do\n        if l[i] > 0 then\n            table.insert(t,\
    \ l[i])\n        end\n    end\n    return t\nend", "    local t = {}\n    for\
    \ i = 1, #l, 2 do\n        if l[i] > 0 then\n            table.insert(t, l[i])\n\
    \        end\n    end\n    return t\nend", "    return l:filter(function(x) return\
    \ x > 0)\nend", "    local t = {}\n    for i=1,#l do\n        if l[i] > 0 then\n\
    \            table.insert(t, l[i])\n        end\n    end\n    return t\nend",
  "    local t = {}\n    for i=1,#l do\n        if l[i] > 0 then\n            table.insert(t,\
    \ l[i])\n        end\n    end\n    return t\nend", "    local t = {}\n    for\
    \ i, v in ipairs(l) do\n        if v > 0 then\n            table.insert(t, v)\n\
    \        end\n    end\n    return t\nend", "    local t = {}\n    for i, v in\
    \ ipairs(l) do\n        if v > 0 then t[v] = true end\n    end\n    return t\n\
    end", "    local t = {}\n    for i = 1, #l, 2 do\n        if l[i] > 0 then\n \
    \           table.insert(t, l[i])\n        end\n    end\n    return t\nend", " \
    \   local pos = {}\n    for i, v in ipairs(l) do\n        if v > 0 then\n    \
    \        pos[v] = i\n        end\n    end\n    return pos\nend", "    local pos\
    \ = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n            table.insert(pos,\
    \ v)\n        end\n    end\n    return pos\nend", "    local t = {}\n    for i=1,#l\
    \ do\n        if l[i] > 0 then\n            table.insert(t, l[i])\n        end\n\
    \    end\n    return t\nend", "    local t = {}\n    for i, v in ipairs(l) do\n\
    \        if v > 0 then\n            table.insert(t, v)\n        end\n    end\n\
    \    return t\nend", "    local pos = {}\n    for _, v in ipairs(l) do\n     \
    \   if v > 0 then\n            table.insert(pos, v)\n        end\n    end\n  \
    \  return pos\nend", "    local pos = {}\n    for _,v in ipairs(l) do\n      \
    \  if v > 0 then\n            table.insert(pos, v)\n        end\n    end\n   \
    \ return pos\nend", "    local t = {}\n    for i, v in ipairs(l) do\n        if\
    \ v > 0 then\n            table.insert(t, v)\n        end\n    end\n    return\
    \ t\nend", "    local t = {}\n    for i=1,#l do\n        if l[i] > 0 then\n  \
    \          table.insert(t, l[i])\n        end\n    end\n    return t\nend", " \
    \   local t = {}\n    for i, v in ipairs(l) do\n        if v > 0 then\n      \
    \      table.insert(t, v)\n        end\n    end\n    return t\nend", "    local\
    \ t = {}\n    for i = 1, #l do\n        if l[i] > 0 then\n            table.insert(t,\
    \ l[i])\n        end\n    end\n    return t\nend", "    local t = {}\n    for\
    \ i=1,#l do\n        if l[i] > 0 then\n            table.insert(t, l[i])\n   \
    \     end\n    end\n    return t\nend", "    local pos = {}\n    for _,v in ipairs(l)\
    \ do\n        if v > 0 then\n            pos[v] = true\n        end\n    end\n\
    \    return pos\nend", "    local t = {}\n    for i, v in ipairs(l) do\n     \
    \   if v > 0 then t[v] = true end\n    end\n    return t\nend", "    local t =\
    \ {}\n    for i, v in ipairs(l) do\n        if v > 0 then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return t\nend", "    local t = {}\n    for i=1,#l\
    \ do\n        if l[i] > 0 then\n            table.insert(t, l[i])\n        end\n\
    \    end\n    return t\nend", "    local t = {}\n    for i, v in ipairs(l) do\n\
    \        if v > 0 then\n            table.insert(t, v)\n        end\n    end\n\
    \    return t\nend", "    local t = {}\n    for _, v in ipairs(l) do\n       \
    \ if v > 0 then t[v] = true end\n    end\n    return t\nend", "    local pos =\
    \ {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n            pos[v]\
    \ = true\n        end\n    end\n    return unpack(pos)\nend", "    local t = {}\n\
    \    for i=1,#l do\n        if l[i] > 0 then\n            table.insert(t, l[i])\n\
    \        end\n    end\n    return t\nend", "    return l:filter(function(x) return\
    \ x > 0)\nend", "    local pos = {}\n    for i, v in ipairs(l) do\n        if\
    \ v > 0 then\n            table.insert(pos, v)\n        end\n    end\n    return\
    \ pos\nend", "    local t = {}\n    for i, v in ipairs(l) do\n        if v > 0\
    \ then t[v] = true end\n    end\n    return t\nend", "    local t = {}\n    for\
    \ i, v in ipairs(l) do\n        if v > 0 then\n            table.insert(t, v)\n\
    \        end\n    end\n    return t\nend", "    local t = {}\n    for i, v in\
    \ ipairs(l) do\n        if v > 0 then t[v] = true end\n    end\n    return t\n\
    end", "    return l:filter(function(x) return x > 0)\nend", "    local t = {}\n\
    \    for i=1,#l do\n        if l[i] > 0 then\n            table.insert(t, l[i])\n\
    \        end\n    end\n    return t\nend", "    local t = {}\n    for i, v in\
    \ ipairs(l) do\n        if v > 0 then\n            table.insert(t, v)\n      \
    \  end\n    end\n    return t\nend", "    return l:filter(function(x) return x\
    \ > 0)\nend", "    local t = {}\n    for i=1,#l do\n        if l[i] > 0 then\n\
    \            table.insert(t, l[i])\n        end\n    end\n    return t\nend",
  "    return l:filter(function(x) return x > 0)\nend", "    local pos = {}\n    for\
    \ i, v in ipairs(l) do\n        if v > 0 then\n            pos[v] = true\n   \
    \     end\n    end\n    return unpack(pos)\nend", "    local t = {}\n    for _,\
    \ v in ipairs(l) do\n        if v > 0 then t[v] = true end\n    end\n    return\
    \ t\nend", "    local pos = {}\n    for i = 1, #l, 2 do\n        if l[i] > 0 then\n\
    \            pos[l[i]] = true\n        end\n    end\n    return pos\nend", " \
    \   local t = {}\n    for i, v in ipairs(l) do\n        if v > 0 then\n      \
    \      table.insert(t, v)\n        end\n    end\n    return t\nend", "    local\
    \ t = {}\n    for i, v in ipairs(l) do\n        if v > 0 then t[v] = true end\n\
    \    end\n    return t\nend", "    local t = {}\n    for i, v in ipairs(l) do\n\
    \        if v > 0 then t[v] = true end\n    end\n    return t\nend", "    local\
    \ t = {}\n    for i = 1, #l do\n        if l[i] > 0 then\n            table.insert(t,\
    \ l[i])\n        end\n    end\n    return t\nend", "    local pos = {}\n    for\
    \ _,v in ipairs(l) do\n        if v > 0 then\n            pos[v] = true\n    \
    \    end\n    end\n    return unpack(pos)\nend", "    local t = {}\n    for i,\
    \ v in ipairs(l) do\n        if v > 0 then t[v] = true end\n    end\n    return\
    \ t\nend", "    local t = {}\n    for i, v in ipairs(l) do\n        if v > 0 then\
    \ t[v] = true end\n    end\n    return t\nend", "    local pos = {}\n    for i\
    \ = 1, #l, 2 do\n        if l[i] > 0 then\n            table.insert(pos, l[i])\n\
    \        end\n    end\n    return pos\nend", "    local pos = {}\n    for _, v\
    \ in ipairs(l) do\n        if v > 0 then\n            table.insert(pos, v)\n \
    \       end\n    end\n    return pos\nend", "    local pos = {}\n    for i, v\
    \ in ipairs(l) do\n        if v > 0 then\n            table.insert(pos, v)\n \
    \       end\n    end\n    return pos\nend", "    local t = {}\n    for i=1,#l\
    \ do\n        if l[i] > 0 then\n            table.insert(t, l[i])\n        end\n\
    \    end\n    return t\nend", "    local pos = {}\n    for i, v in ipairs(l) do\n\
    \        if v > 0 then\n            table.insert(pos, v)\n        end\n    end\n\
    \    return pos\nend", "    local pos = {}\n    for i, v in ipairs(l) do\n   \
    \     if v > 0 then\n            pos[v] = true\n        end\n    end\n    return\
    \ unpack(pos)\nend", "    local t = {}\n    for i=1,#l do\n        if l[i] > 0\
    \ then\n            table.insert(t, l[i])\n        end\n    end\n    return t\n\
    end", "    local t = {}\n    for i, v in ipairs(l) do\n        if v > 0 then t[v]\
    \ = true end\n    end\n    return t\nend", "    return l:filter(function(x) return\
    \ x > 0)\nend", "    local pos = {}\n    for _, v in ipairs(l) do\n        if\
    \ v > 0 then\n            pos[v] = true\n        end\n    end\n    return unpack(pos)\n\
    end", "    local t = {}\n    for i, v in ipairs(l) do\n        if v > 0 then t[v]\
    \ = true end\n    end\n    return t\nend", "    local t = {}\n    for i=1,#l do\n\
    \        if l[i] > 0 then\n            table.insert(t, l[i])\n        end\n  \
    \  end\n    return t\nend", "    local pos = {}\n    for _, v in ipairs(l) do\n\
    \        if v > 0 then\n            pos[v] = true\n        end\n    end\n    return\
    \ pos\nend", "    local t = {}\n    for i, v in ipairs(l) do\n        if v > 0\
    \ then\n            table.insert(t, v)\n        end\n    end\n    return t\nend",
  "    local pos = {}\n    for i, v in ipairs(l) do\n        if v > 0 then\n     \
    \       pos[v] = true\n        end\n    end\n    return unpack(pos)\nend", " \
    \   local pos = {}\n    for i=1,#l do\n        if l[i] > 0 then\n            pos[l[i]]\
    \ = true\n        end\n    end\n    return pos\nend", "    local t = {}\n    for\
    \ i, v in ipairs(l) do\n        if v > 0 then t[v] = true end\n    end\n    return\
    \ t\nend", "    local pos = {}\n    for _,v in ipairs(l) do\n        if v > 0\
    \ then\n            table.insert(pos, v)\n        end\n    end\n    return pos\n\
    end", "    local pos = {}\n    for i, v in ipairs(l) do\n        if v > 0 then\n\
    \            pos[i] = v\n        end\n    end\n    return pos\nend", "    local\
    \ t = {}\n    for i=1,#l do\n        if l[i] > 0 then\n            table.insert(t,\
    \ l[i])\n        end\n    end\n    return t\nend", "    local t = {}\n    for\
    \ i=1,#l do\n        if l[i] > 0 then\n            table.insert(t, l[i])\n   \
    \     end\n    end\n    return t\nend", "    local t = {}\n    for i, v in ipairs(l)\
    \ do\n        if v > 0 then\n            table.insert(t, v)\n        end\n   \
    \ end\n    return t\nend", "    local t = {}\n    for i = 1, #l do\n        if\
    \ l[i] > 0 then\n            table.insert(t, l[i])\n        end\n    end\n   \
    \ return t\nend", "    local t = {}\n    for _, v in ipairs(l) do\n        if\
    \ v > 0 then t[v] = true end\n    end\n    return t\nend", "    local pos = {}\n\
    \    for _, v in ipairs(l) do\n        if v > 0 then\n            pos[v] = true\n\
    \        end\n    end\n    return unpack(pos)\nend", "    local t = {}\n    for\
    \ i=1,#l do\n        if l[i] > 0 then\n            table.insert(t, l[i])\n   \
    \     end\n    end\n    return t\nend", "    local t = {}\n    for i, v in ipairs(l)\
    \ do\n        if v > 0 then\n            table.insert(t, v)\n        end\n   \
    \ end\n    return t\nend", "    local t = {}\n    for i = 1, #l do\n        if\
    \ l[i] > 0 then\n            table.insert(t, l[i])\n        end\n    end\n   \
    \ return t\nend", "    return l:filter(function(x) return x > 0)\nend", "    local\
    \ t = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return t\nend", "    local pos = {}\n    for _,\
    \ v in ipairs(l) do\n        if v > 0 then\n            pos[v] = true\n      \
    \  end\n    end\n    return unpack(pos)\nend", "    local t = {}\n    for _, v\
    \ in ipairs(l) do\n        if v > 0 then\n            table.insert(t, v)\n   \
    \     end\n    end\n    return t\nend", "    local t = {}\n    for i, v in ipairs(l)\
    \ do\n        if v > 0 then t[v] = true end\n    end\n    return t\nend", "  \
    \  local t = {}\n    for i, v in ipairs(l) do\n        if v > 0 then\n       \
    \     table.insert(t, v)\n        end\n    end\n    return t\nend", "    local\
    \ pos = {}\n    for i, v in ipairs(l) do\n        if v > 0 then\n            pos[v]\
    \ = true\n        end\n    end\n    return unpack(pos)\nend", "    local pos =\
    \ {}\n    for i, v in ipairs(l) do\n        if v > 0 then\n            pos[v]\
    \ = true\n        end\n    end\n    return unpack(pos)\nend", "    local t = {}\n\
    \    for i=1,#l do\n        if l[i] > 0 then\n            table.insert(t, l[i])\n\
    \        end\n    end\n    return t\nend", "    local t = {}\n    for i, v in\
    \ ipairs(l) do\n        if v > 0 then t[v] = true end\n    end\n    return t\n\
    end", "    local pos = {}\n    for i, v in ipairs(l) do\n        if v > 0 then\n\
    \            pos[v] = true\n        end\n    end\n    return unpack(pos)\nend",
  "    return l:filter(function(x) return x > 0)\nend", "    local t = {}\n    for\
    \ i, v in ipairs(l) do\n        if v > 0 then t[v] = true end\n    end\n    return\
    \ t\nend", "    local pos = {}\n    for _, v in ipairs(l) do\n        if v > 0\
    \ then\n            table.insert(pos, v)\n        end\n    end\n    return pos\n\
    end", "    local pos = {}\n    for _,v in ipairs(l) do\n        if v > 0 then\n\
    \            table.insert(pos, v)\n        end\n    end\n    return pos\nend",
  "    local pos = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n     \
    \       table.insert(pos, v)\n        end\n    end\n    return pos\nend", "  \
    \  return l:filter(function (x) return x > 0)\nend", "    return l:filter(function\
    \ (x) return x > 0)\nend", "    local t = {}\n    for i, v in ipairs(l) do\n \
    \       if v > 0 then\n            table.insert(t, v)\n        end\n    end\n\
    \    return t\nend", "    return l:filter(function(x) return x > 0)\nend", " \
    \   local t = {}\n    for i=1,#l do\n        if l[i] > 0 then\n            table.insert(t,\
    \ l[i])\n        end\n    end\n    return t\nend", "    local t = {}\n    for\
    \ i=1,#l do\n        if l[i] > 0 then\n            table.insert(t, l[i])\n   \
    \     end\n    end\n    return t\nend", "    local t = {}\n    for i=1,#l do\n\
    \        if l[i] > 0 then\n            table.insert(t, l[i])\n        end\n  \
    \  end\n    return t\nend", "    return l:filter(function(x) return x > 0)\nend",
  "    return l:filter(function(x) return x > 0)\nend", "    local pos = {}\n    for\
    \ i, v in ipairs(l) do\n        if v > 0 then\n            pos[v] = true\n   \
    \     end\n    end\n    return unpack(pos)\nend", "    return l:filter(function(x)\
    \ return x > 0)\nend", "    local pos = {}\n    for i, v in ipairs(l) do\n   \
    \     if v > 0 then\n            pos[v] = i\n        end\n    end\n    return\
    \ pos\nend", "    local t = {}\n    for i, v in ipairs(l) do\n        if v > 0\
    \ then\n            table.insert(t, v)\n        end\n    end\n    return t\nend",
  "    local t = {}\n    for i=1,#l do\n        if l[i] > 0 then\n            table.insert(t,\
    \ l[i])\n        end\n    end\n    return t\nend", "    local pos = {}\n    for\
    \ i, v in ipairs(l) do\n        if v > 0 then\n            pos[i] = v\n      \
    \  end\n    end\n    return pos\nend", "    return l:filter(function(x) return\
    \ x > 0)\nend", "    local t = {}\n    for i, v in ipairs(l) do\n        if v\
    \ > 0 then t[v] = true end\n    end\n    return t\nend", "    local t = {}\n \
    \   for i, v in ipairs(l) do\n        if v > 0 then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return t\nend", "    local pos = {}\n    for _,\
    \ v in ipairs(l) do\n        if v > 0 then\n            table.insert(pos, v)\n\
    \        end\n    end\n    return pos\nend", "    local pos = {}\n    for i, v\
    \ in ipairs(l) do\n        if v > 0 then\n            table.insert(pos, v)\n \
    \       end\n    end\n    return pos\nend", "    local t = {}\n    for i=1,#l\
    \ do\n        if l[i] > 0 then\n            table.insert(t, l[i])\n        end\n\
    \    end\n    return t\nend", "    local pos = {}\n    for i, v in ipairs(l) do\n\
    \        if v > 0 then\n            pos[v] = true\n        end\n    end\n    return\
    \ unpack(pos)\nend", "    local t = {}\n    for i, v in ipairs(l) do\n       \
    \ if v > 0 then\n            table.insert(t, v)\n        end\n    end\n    return\
    \ t\nend", "    return l:filter(function(x) return x > 0)\nend", "    local t\
    \ = {}\n    for i=1,#l do\n        if l[i] > 0 then\n            table.insert(t,\
    \ l[i])\n        end\n    end\n    return t\nend", "    local t = {}\n    for\
    \ i=1,#l do\n        if l[i] > 0 then\n            table.insert(t, l[i])\n   \
    \     end\n    end\n    return t\nend", "    local t = {}\n    for i = 1, #l,\
    \ 2 do\n        if l[i] > 0 then\n            table.insert(t, l[i])\n        end\n\
    \    end\n    return t\nend", "    local pos = {}\n    for i = 1, #l, 2 do\n \
    \       if l[i] > 0 then\n            pos[#pos + 1] = l[i]\n        end\n    end\n\
    \    return pos\nend", "    local t = {}\n    for i, v in ipairs(l) do\n     \
    \   if v > 0 then\n            table.insert(t, v)\n        end\n    end\n    return\
    \ t\nend", "    local t = {}\n    for i, v in ipairs(l) do\n        if v > 0 then\
    \ t[v] = true end\n    end\n    return t\nend", "    local pos = {}\n    for i,\
    \ v in ipairs(l) do\n        if v > 0 then\n            table.insert(pos, v)\n\
    \        end\n    end\n    return pos\nend", "    local pos = {}\n    for _, v\
    \ in ipairs(l) do\n        if v > 0 then\n            table.insert(pos, v)\n \
    \       end\n    end\n    return pos\nend", "    local t = {}\n    for i=1,#l\
    \ do\n        if l[i] > 0 then\n            table.insert(t, l[i])\n        end\n\
    \    end\n    return t\nend", "    local pos = {}\n    for _, v in ipairs(l) do\n\
    \        if v > 0 then\n            pos[v] = true\n        end\n    end\n    return\
    \ unpack(pos)\nend", "    local t = {}\n    for i, v in ipairs(l) do\n       \
    \ if v > 0 then\n            table.insert(t, v)\n        end\n    end\n    return\
    \ t\nend", "    return l:filter(function(x) return x > 0)\nend", "    local t\
    \ = {}\n    for i = 1, #l, 2 do\n        if l[i] > 0 then\n            table.insert(t,\
    \ l[i])\n        end\n    end\n    return t\nend", "    local t = {}\n    for\
    \ i, v in ipairs(l) do\n        if v > 0 then\n            table.insert(t, v)\n\
    \        end\n    end\n    return t\nend", "    local t = {}\n    for i, v in\
    \ ipairs(l) do\n        if v > 0 then\n            table.insert(t, v)\n      \
    \  end\n    end\n    return t\nend", "    local pos = {}\n    for _, v in ipairs(l)\
    \ do\n        if v > 0 then\n            table.insert(pos, v)\n        end\n \
    \   end\n    return pos\nend", "    local pos = {}\n    for _,v in ipairs(l) do\n\
    \        if v > 0 then\n            table.insert(pos, v)\n        end\n    end\n\
    \    return pos\nend", "    local t = {}\n    for i=1,#l do\n        if l[i] >\
    \ 0 then\n            table.insert(t, l[i])\n        end\n    end\n    return\
    \ t\nend", "    local t = {}\n    for i=1,#l do\n        if l[i] > 0 then\n  \
    \          table.insert(t, l[i])\n        end\n    end\n    return t\nend", " \
    \   local t = {}\n    for i, v in ipairs(l) do\n        if v > 0 then\n      \
    \      table.insert(t, v)\n        end\n    end\n    return t\nend", "    local\
    \ t = {}\n    for i, v in ipairs(l) do\n        if v > 0 then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return t\nend", "    local t = {}\n    for i=1,#l\
    \ do\n        if l[i] > 0 then\n            table.insert(t, l[i])\n        end\n\
    \    end\n    return t\nend", "    return l:filter(function(x) return x > 0)\n\
    end", "    local t = {}\n    for i, v in ipairs(l) do\n        if v > 0 then\n\
    \            table.insert(t, v)\n        end\n    end\n    return t\nend", " \
    \   local t = {}\n    for i=1,#l do\n        if l[i] > 0 then\n            table.insert(t,\
    \ l[i])\n        end\n    end\n    return t\nend", "    local pos = {}\n    for\
    \ i, v in ipairs(l) do\n        if v > 0 then\n            table.insert(pos, v)\n\
    \        end\n    end\n    return pos\nend", "    local pos = {}\n    for _, v\
    \ in ipairs(l) do\n        if v > 0 then\n            table.insert(pos, v)\n \
    \       end\n    end\n    return pos\nend", "    local t = {}\n    for i, v in\
    \ ipairs(l) do\n        if v > 0 then\n            table.insert(t, v)\n      \
    \  end\n    end\n    return t\nend", "    local t = {}\n    for i = 1, #l, 2 do\n\
    \        if l[i] > 0 then\n            table.insert(t, l[i])\n        end\n  \
    \  end\n    return t\nend", "    local pos = {}\n    for i=1,#l do\n        if\
    \ l[i] > 0 then\n            pos[l[i]] = true\n        end\n    end\n    return\
    \ pos\nend", "    local pos = {}\n    for _, v in ipairs(l) do\n        if v >\
    \ 0 then\n            pos[v] = true\n        end\n    end\n    return unpack(pos)\n\
    end", "    local pos = {}\n    for i = 1, #l, 2 do\n        if l[i] > 0 then\n\
    \            pos[l[i]] = true\n        end\n    end\n    return pos\nend", " \
    \   local t = {}\n    for i, v in ipairs(l) do\n        if v > 0 then t[v] = true\
    \ end\n    end\n    return t\nend", "    local t = {}\n    for i=1,#l do\n   \
    \     if l[i] > 0 then\n            table.insert(t, l[i])\n        end\n    end\n\
    \    return t\nend", "    local t = {}\n    for _, v in ipairs(l) do\n       \
    \ if v > 0 then\n            table.insert(t, v)\n        end\n    end\n    return\
    \ t\nend", "    local t = {}\n    for i, v in ipairs(l) do\n        if v > 0 then\n\
    \            table.insert(t, v)\n        end\n    end\n    return t\nend", " \
    \   local t = {}\n    for i, v in ipairs(l) do\n        if v > 0 then\n      \
    \      table.insert(t, v)\n        end\n    end\n    return t\nend", "    local\
    \ t = {}\n    for i=1,#l do\n        if l[i] > 0 then\n            table.insert(t,\
    \ l[i])\n        end\n    end\n    return t\nend", "    local pos = {}\n    for\
    \ _, v in ipairs(l) do\n        if v > 0 then\n            pos[v] = true\n   \
    \     end\n    end\n    return unpack(pos)\nend", "    local pos = {}\n    for\
    \ i=1,#l do\n        if l[i] > 0 then\n            pos[l[i]] = true\n        end\n\
    \    end\n    return pos\nend", "    local t = {}\n    for i=1,#l do\n       \
    \ if l[i] > 0 then\n            table.insert(t, l[i])\n        end\n    end\n\
    \    return t\nend", "    local t = {}\n    for i, v in ipairs(l) do\n       \
    \ if v > 0 then\n            table.insert(t, v)\n        end\n    end\n    return\
    \ t\nend", "    local t = {}\n    for i, v in ipairs(l) do\n        if v > 0 then\n\
    \            table.insert(t, v)\n        end\n    end\n    return t\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

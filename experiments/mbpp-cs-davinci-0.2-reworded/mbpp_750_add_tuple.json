{
  "name": "mbpp_750_add_tuple",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to add the given tuple to the given list.\n    public static List<long> AddTuple(List<long> test_list, long test_tup) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_750_add_tuple.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(AddTuple((new List<long>(new long[]{(long)5L, (long)6L, (long)7L})), (long)Tuple.Create(9L, 10L)).Equals((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)9L, (long)10L}))));\n    Debug.Assert(AddTuple((new List<long>(new long[]{(long)6L, (long)7L, (long)8L})), (long)Tuple.Create(10L, 11L)).Equals((new List<long>(new long[]{(long)6L, (long)7L, (long)8L, (long)10L, (long)11L}))));\n    Debug.Assert(AddTuple((new List<long>(new long[]{(long)7L, (long)8L, (long)9L})), (long)Tuple.Create(11L, 12L)).Equals((new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)11L, (long)12L}))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        test_list.Add(test_tup);\n        return test_list;",
    "        test_list.Add(test_tup);\n        return test_list;",
    "        test_list.Add(test_tup);\n        return test_list;",
    "        test_list.Add(test_tup);\n        return test_list;",
    "        test_list.Add(test_tup);\n        return test_list;",
    "        test_list.Add(test_tup);\n        return test_list;",
    "        test_list.Add(test_tup);\n        return test_list;",
    "        test_list.Add(test_tup);\n        return test_list;",
    "        test_list.Add(test_tup);\n        return test_list;",
    "        test_list.Add(test_tup);\n        return test_list;",
    "        test_list.Add(test_tup);\n        return test_list;",
    "        // Write your code here.\n        test_list.Add(test_tup);\n        return test_list;",
    "        test_list.Add(test_tup);\n        return test_list;",
    "        test_list.Add(test_tup);\n        return test_list;",
    "        test_list.Add(test_tup);\n        return test_list;",
    "        test_list.Add(test_tup);\n        return test_list;",
    "        test_list.Add(test_tup);\n        return test_list;",
    "        test_list.Add(test_tup);\n        return test_list;",
    "        test_list.Add(test_tup);\n        return test_list;",
    "        test_list.Add(test_tup);\n        return test_list;"
  ]
}
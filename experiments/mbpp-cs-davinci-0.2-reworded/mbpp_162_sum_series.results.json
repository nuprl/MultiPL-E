{
  "name": "mbpp_162_sum_series",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_162_sum_series.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n; i += 2) {\n            sum += n - i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        if (n < 0) {\n            throw new ArgumentException(\"n must be >= 0\");\n        }\n        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return 1;\n        }\n        if (n == 2) {\n            return 3;\n        }\n        if (n == 3) {\n            return 6;\n        }\n        if (n == 4) {\n            return 10;\n        }\n        if (n == 5) {\n            return 15;\n        }\n        if (n == 6) {\n            return 21;\n        }\n        if (n == 7) {\n            return 28;\n        }\n        if (n == 8) {\n            return 36;\n        }\n        if (n == 9) {\n            return 45;\n        }\n        if (n == 10) {\n            return 55;\n        }\n        if (n == 11) {\n            return 66;\n        }\n        if (n == 12) {\n            return 78;\n        }\n        if (n == 13) {\n            return 91;\n        }\n        if (n == 14) {\n            return 105;\n        }\n        if (n == 15) {\n            return 120;\n        }\n        if (n == 16) {\n            return 136;\n        }\n        if (n == 17) {\n            return 153;\n        }\n        if (n == 18) {\n            return 171;\n        }\n        if (n == 19) {\n            return 190;\n        }\n        if (n == 20) {\n            return 210;\n        }\n        if (n == 21) {\n            return 231;\n        }\n        if (n == 22) {\n            return 253;\n        }\n        if (n == 23) {\n            return 276;\n        }\n        if (n == 24) {\n            return 300;\n        }\n        if (n == 25) {\n            return 325;\n        }\n        if (n == 26) {\n            return 351;\n        }\n        if (n == 27) {\n            return 378;\n        }\n        if (n == 28) {\n           \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpwmzzjm7d.cs(101,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpwmzzjm7d.cs(107,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n/2; i++) {\n            sum += n - 2*i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cad59b0991b8402d8c2e931761851f17>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9617b303e3c14505a1e4e9548971c714>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n; i += 2) {\n            sum += n - i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9617b303e3c14505a1e4e9548971c714>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        if (n == 0) return 0;\n        if (n % 2 == 0) return n + SumSeries(n - 2);\n        return n - 1 + SumSeries(n - 3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1666124096,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <19355b1808dc4d0c97b2fdedbcb76810>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1666124096,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d653013119c54678ba68d8792cb8ad94>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d653013119c54678ba68d8792cb8ad94>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1666124096,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cca5c151cf8f4e6cb677a55b83914a35>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cca5c151cf8f4e6cb677a55b83914a35>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9617b303e3c14505a1e4e9548971c714>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9617b303e3c14505a1e4e9548971c714>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9617b303e3c14505a1e4e9548971c714>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9617b303e3c14505a1e4e9548971c714>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n; i += 2) {\n            sum += n - i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9617b303e3c14505a1e4e9548971c714>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1666124096,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d653013119c54678ba68d8792cb8ad94>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d653013119c54678ba68d8792cb8ad94>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i <= n/2; i++) {\n            sum += n - 2*i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1666124096,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n; i += 2) {\n            sum += n - i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9617b303e3c14505a1e4e9548971c714>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - (2 * i);\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1666124096,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3b8eed41abc44dd78b80ceb8b2c5f307>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n/2; i++) {\n            sum += n - 2*i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cad59b0991b8402d8c2e931761851f17>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += (n - 2 * i);\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1666124096,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1666124096,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d653013119c54678ba68d8792cb8ad94>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d653013119c54678ba68d8792cb8ad94>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n; i += 2) {\n            sum += n - i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9617b303e3c14505a1e4e9548971c714>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1666124096,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d653013119c54678ba68d8792cb8ad94>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d653013119c54678ba68d8792cb8ad94>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += (n - 2 * i);\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1666124096,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9617b303e3c14505a1e4e9548971c714>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n; i += 2) {\n            sum += n - i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9617b303e3c14505a1e4e9548971c714>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = n;\n        long i = 1;\n        while (n - 2 * i >= 0) {\n            sum += n - 2 * i;\n            i++;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1666124096,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i < n / 2; i++) {\n            sum += n - (2 * i);\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1666124096,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5da5a09c92014a909d6236885276eda1>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n/2; i++) {\n            sum += n - 2*i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cad59b0991b8402d8c2e931761851f17>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n; i += 2) {\n            sum += n - i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9617b303e3c14505a1e4e9548971c714>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - (2 * i);\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1666124096,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        // Sum of series is n * (n+1) / 2\n        return n * (n + 1) / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1666124096,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9fddb1a00dcc4d6a89ea4e6cf3439e37>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9fddb1a00dcc4d6a89ea4e6cf3439e37>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1666124096,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cca5c151cf8f4e6cb677a55b83914a35>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cca5c151cf8f4e6cb677a55b83914a35>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1666124096,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d653013119c54678ba68d8792cb8ad94>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d653013119c54678ba68d8792cb8ad94>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9617b303e3c14505a1e4e9548971c714>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1666124096,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cca5c151cf8f4e6cb677a55b83914a35>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cca5c151cf8f4e6cb677a55b83914a35>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9617b303e3c14505a1e4e9548971c714>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n; i += 2) {\n            sum += n - i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7906b22e0be842cd80dda87b60a89806>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9617b303e3c14505a1e4e9548971c714>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n; i += 2) {\n            sum += n - i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (int i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9617b303e3c14505a1e4e9548971c714>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - (2 * i);\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1666124096,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3b8eed41abc44dd78b80ceb8b2c5f307>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
      "timestamp": 1665510664,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
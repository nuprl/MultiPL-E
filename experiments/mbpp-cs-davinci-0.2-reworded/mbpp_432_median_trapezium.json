{
  "name": "mbpp_432_median_trapezium",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the median length of a trapezium.\n    public static float MedianTrapezium(long base1, long base2, long height) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_432_median_trapezium.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(MedianTrapezium((15L), (25L), (35L)) == (float)20L);\n    Debug.Assert(MedianTrapezium((10L), (20L), (30L)) == (float)15L);\n    Debug.Assert(MedianTrapezium((6L), (9L), (4L)) == (7.5f));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        return (float)((base1 + base2) * height / 2);",
    "        return (base1 + base2) * height / 4;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float) (base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (base1 + base2) / 2f * height;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        float median = (base1 + base2) / 2;\n        return median * height;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (base1 + base2) / 2 * height;",
    "        float median = (float)(base1 + base2) / 2;\n        return (float)Math.Sqrt(Math.Pow(median, 2) + Math.Pow(height, 2));",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)((base1 + base2) * height) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2 * height;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)((base1 + base2) * height) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (base1 + base2) / 2 * height;",
    "        float median = (float)(base1 + base2) / 2;\n        return median;",
    "        return (float)(base1 + base2) / 2;",
    "        return (base1 + base2) / 2 * height;",
    "        return (float)(base1 + base2) / 4 * height;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (base1 + base2) / 2f * height;",
    "        return (base1 + base2) / 2.0f * height;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)((base1 + base2) * height) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (base1 + base2) / 2;",
    "        float median = (float)(base1 + base2) / 2;\n        return median;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2 * height;",
    "        return (base1 + base2) / 2 * height;",
    "        return (base1 + base2) / 2f * height;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2 + 2 * Math.Sqrt(base1 * base2 + height * height)) / 4;",
    "        return (float)(base1 + base2) / 2 * height;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (base1 + base2) / 2 * height;",
    "        return (float)(base1 + base2) / 2;",
    "        return (base1 + base2) / 2 * height;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)((base1 + base2) * height) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (base1 + base2) / 2 * height;",
    "        return (base1 + base2) / 2f * height;",
    "        return (base1 + base2) / 2 * height;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (base1 + base2) / 2f * height;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 4 * height;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (base1 + base2) / 2f * height;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2 + 2 * Math.Sqrt(base1 * base2 + height * height)) / 4;",
    "        return (base1 + base2) / 2 * height;",
    "        return (float)(base1 + base2 + 2 * Math.Sqrt(base1 * base2 + height * height)) / 4;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 4 * height;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)((base1 + base2) * height) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (base1 + base2) / 2 * height;",
    "        return (base1 + base2) / 2f * height;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (base1 + base2) / 2 * height;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 4 * height;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (base1 + base2) / 2f * height;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)((base1 + base2) * height) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (base1 + base2) / 2 * height;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2 + 2 * Math.Sqrt(base1 * base2 + height * height)) / 4;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (base1 + base2) / 2 * height;",
    "        return (base1 + base2) / 2;",
    "        return (base1 + base2) / 2 * height;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (base1 + base2) / 2 * height;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (base1 + base2) / 2 * height;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float) (base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;",
    "        return (float)(base1 + base2) / 2;"
  ]
}
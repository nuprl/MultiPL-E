{
  "name": "mbpp_745_divisible_by_digits",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/csthon-exercises/lambda/csthon-lambda-exercise-24.php\n    public static List<long> DivisibleByDigits(long startnum, long endnum) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_745_divisible_by_digits.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(DivisibleByDigits((1L), (22L)).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)11L, (long)12L, (long)15L, (long)22L}))));\n    Debug.Assert(DivisibleByDigits((1L), (15L)).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)11L, (long)12L, (long)15L}))));\n    Debug.Assert(DivisibleByDigits((20L), (25L)).Equals((new List<long>(new long[]{(long)22L, (long)24L}))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            foreach (char c in i.ToString()) {\n                if (i % (c - '0') != 0) {\n                    isDivisible = false;\n                    break;\n                }\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (IsDivisibleByDigits(i)) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i.ToString().Select(x => int.Parse(x.ToString())).Where(x => x != 0).All(x => i % x == 0)) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool divisible = true;\n            long temp = i;\n            while (temp > 0) {\n                long digit = temp % 10;\n                if (digit == 0 || i % digit != 0) {\n                    divisible = false;\n                    break;\n                }\n                temp /= 10;\n            }\n            if (divisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool flag = true;\n            foreach (char c in i.ToString()) {\n                if (i % (c - '0') != 0) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) result.Add(i);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool divisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    divisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (divisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            var digits = i.ToString().ToCharArray();\n            foreach (var digit in digits) {\n                if (i % (digit - '0') != 0) {\n                    isDivisible = false;\n                    break;\n                }\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool divisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    divisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (divisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i.ToString().ToCharArray().All(x => i % (x - '0') == 0)) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            foreach (char c in i.ToString()) {\n                if (i % (c - '0') != 0) {\n                    isDivisible = false;\n                    break;\n                }\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            var digits = i.ToString().Select(c => int.Parse(c.ToString())).ToList();\n            if (digits.All(d => d != 0 && i % d == 0)) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> results = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                results.Add(i);\n            }\n        }\n        return results;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool divisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    divisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (divisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long temp = i;\n            while (temp > 0) {\n                long digit = temp % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                temp /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> res = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool divisible = true;\n            long n = i;\n            while (n > 0) {\n                long d = n % 10;\n                if (d == 0 || i % d != 0) {\n                    divisible = false;\n                    break;\n                }\n                n /= 10;\n            }\n            if (divisible) {\n                res.Add(i);\n            }\n        }\n        return res;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool divisible = true;\n            long temp = i;\n            while (temp > 0) {\n                long digit = temp % 10;\n                if (digit == 0 || i % digit != 0) {\n                    divisible = false;\n                    break;\n                }\n                temp /= 10;\n            }\n            if (divisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool divisible = true;\n            long current = i;\n            while (current > 0) {\n                long digit = current % 10;\n                if (digit == 0 || i % digit != 0) {\n                    divisible = false;\n                    break;\n                }\n                current /= 10;\n            }\n            if (divisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool divisible = true;\n            long temp = i;\n            while (temp > 0) {\n                long digit = temp % 10;\n                if (digit == 0 || i % digit != 0) {\n                    divisible = false;\n                    break;\n                }\n                temp /= 10;\n            }\n            if (divisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool divisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit != 0 && i % digit != 0) {\n                    divisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (divisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0) {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool divisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    divisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (divisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for(long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while(num > 0) {\n                long digit = num % 10;\n                if(digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if(isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0) {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long temp = i;\n            while (temp > 0) {\n                long digit = temp % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                temp /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i.ToString().Select(c => (int)Char.GetNumericValue(c)).All(d => i % d == 0)) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool divisible = true;\n            foreach (char c in i.ToString()) {\n                if (c == '0') {\n                    divisible = false;\n                    break;\n                }\n                if (i % (c - '0') != 0) {\n                    divisible = false;\n                    break;\n                }\n            }\n            if (divisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool divisible = true;\n            long temp = i;\n            while (temp > 0) {\n                long digit = temp % 10;\n                if (digit == 0 || i % digit != 0) {\n                    divisible = false;\n                    break;\n                }\n                temp /= 10;\n            }\n            if (divisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool divisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    divisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (divisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long n = i;\n            while (n > 0) {\n                long digit = n % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                n /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long temp = i;\n            while (temp > 0) {\n                long digit = temp % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                temp /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            foreach (char c in i.ToString()) {\n                if (i % int.Parse(c.ToString()) != 0) {\n                    isDivisible = false;\n                    break;\n                }\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool divisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    divisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (divisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool divisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0) {\n                    divisible = false;\n                    break;\n                }\n                if (i % digit != 0) {\n                    divisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (divisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            var digits = i.ToString().Select(x => int.Parse(x.ToString())).ToList();\n            if (digits.All(x => i % x == 0)) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            foreach (char c in i.ToString()) {\n                if (c == '0') {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % (c - '0') != 0) {\n                    isDivisible = false;\n                    break;\n                }\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool divisible = true;\n            foreach (char c in i.ToString()) {\n                if (c == '0') {\n                    divisible = false;\n                    break;\n                }\n                if (i % (c - '0') != 0) {\n                    divisible = false;\n                    break;\n                }\n            }\n            if (divisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit != 0 && i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool divisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0) {\n                    divisible = false;\n                    break;\n                }\n                if (i % digit != 0) {\n                    divisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (divisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long temp = i;\n            while (temp > 0) {\n                long digit = temp % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                temp /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long temp = i;\n            while (temp > 0) {\n                long digit = temp % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                temp /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool divisible = true;\n            string num = i.ToString();\n            foreach (char c in num) {\n                if (c == '0') {\n                    divisible = false;\n                    break;\n                }\n                if (i % (c - '0') != 0) {\n                    divisible = false;\n                    break;\n                }\n            }\n            if (divisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool divisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    divisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (divisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long temp = i;\n            while (temp > 0) {\n                long digit = temp % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                temp /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long temp = i;\n            while (temp > 0) {\n                long digit = temp % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                temp /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool divisible = true;\n            foreach (char c in i.ToString()) {\n                if (c == '0') {\n                    divisible = false;\n                    break;\n                }\n                if (i % (c - '0') != 0) {\n                    divisible = false;\n                    break;\n                }\n            }\n            if (divisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0) {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool divisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    divisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (divisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            var digits = i.ToString().ToCharArray().Select(x => int.Parse(x.ToString())).ToList();\n            if (digits.All(x => i % x == 0)) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool divisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    divisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (divisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> results = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool divisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    divisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (divisible) {\n                results.Add(i);\n            }\n        }\n        return results;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long temp = i;\n            while (temp > 0) {\n                long digit = temp % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                temp /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            foreach (char c in i.ToString()) {\n                if (c == '0') {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % (c - '0') != 0) {\n                    isDivisible = false;\n                    break;\n                }\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool divisible = true;\n            long n = i;\n            while (n > 0) {\n                long d = n % 10;\n                if (d == 0 || i % d != 0) {\n                    divisible = false;\n                    break;\n                }\n                n /= 10;\n            }\n            if (divisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            var digits = i.ToString().Select(c => int.Parse(c.ToString()));\n            if (digits.All(d => d != 0 && i % d == 0)) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long temp = i;\n            while (temp > 0) {\n                long digit = temp % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                temp /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            foreach (char c in i.ToString()) {\n                if (i % (c - '0') != 0) {\n                    isDivisible = false;\n                    break;\n                }\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> divisible = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool divisibleByDigits = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    divisibleByDigits = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (divisibleByDigits) {\n                divisible.Add(i);\n            }\n        }\n        return divisible;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i.ToString().ToCharArray().All(c => i % (c - '0') == 0)) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i.ToString().All(x => i % int.Parse(x.ToString()) == 0)) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool divisible = true;\n            long j = i;\n            while (j > 0) {\n                long digit = j % 10;\n                if (digit == 0) {\n                    divisible = false;\n                    break;\n                }\n                if (i % digit != 0) {\n                    divisible = false;\n                    break;\n                }\n                j /= 10;\n            }\n            if (divisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0) {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> results = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long temp = i;\n            while (temp > 0) {\n                long digit = temp % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                temp /= 10;\n            }\n            if (isDivisible) {\n                results.Add(i);\n            }\n        }\n        return results;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool divisible = true;\n            foreach (char c in i.ToString()) {\n                if (i % int.Parse(c.ToString()) != 0) {\n                    divisible = false;\n                    break;\n                }\n            }\n            if (divisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0) {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long temp = i;\n            while (temp > 0) {\n                long digit = temp % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                temp /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            foreach (char c in i.ToString()) {\n                if (c == '0') {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % (c - '0') != 0) {\n                    isDivisible = false;\n                    break;\n                }\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long temp = i;\n            while (temp > 0) {\n                long digit = temp % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                temp /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool divisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    divisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (divisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit != 0 && i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool divisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    divisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (divisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            foreach (char c in i.ToString()) {\n                if (c == '0') {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % (c - '0') != 0) {\n                    isDivisible = false;\n                    break;\n                }\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> ret = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool divisible = true;\n            long temp = i;\n            while (temp > 0) {\n                long digit = temp % 10;\n                if (digit == 0 || i % digit != 0) {\n                    divisible = false;\n                    break;\n                }\n                temp /= 10;\n            }\n            if (divisible) {\n                ret.Add(i);\n            }\n        }\n        return ret;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i.ToString().All(c => i % (c - '0') == 0)) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> results = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            foreach (char c in i.ToString()) {\n                if (c == '0') {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % int.Parse(c.ToString()) != 0) {\n                    isDivisible = false;\n                    break;\n                }\n            }\n            if (isDivisible) {\n                results.Add(i);\n            }\n        }\n        return results;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long temp = i;\n            while (temp > 0) {\n                long digit = temp % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                temp /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool divisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    divisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (divisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool divisible = true;\n            foreach (char c in i.ToString()) {\n                if (c == '0') {\n                    divisible = false;\n                    break;\n                }\n                if (i % (c - '0') != 0) {\n                    divisible = false;\n                    break;\n                }\n            }\n            if (divisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            foreach (char c in i.ToString()) {\n                if (i % (c - '0') != 0) {\n                    isDivisible = false;\n                    break;\n                }\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for(long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while(num > 0) {\n                long digit = num % 10;\n                if(digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if(isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool divisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    divisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (divisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i.ToString().ToCharArray().All(c => i % (c - '0') == 0)) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            foreach (char c in i.ToString()) {\n                if (i % (c - '0') != 0) {\n                    isDivisible = false;\n                    break;\n                }\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0) {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            var digits = i.ToString().Select(x => int.Parse(x.ToString())).ToList();\n            if (digits.All(x => i % x == 0)) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long temp = i;\n            while (temp > 0) {\n                long digit = temp % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                temp /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (IsDivisibleByDigits(i)) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0) {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            foreach (char c in i.ToString()) {\n                if (c == '0') {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % (c - '0') != 0) {\n                    isDivisible = false;\n                    break;\n                }\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long temp = i;\n            while (temp > 0) {\n                long digit = temp % 10;\n                if (digit != 0 && i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                temp /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            foreach (char c in i.ToString()) {\n                if (i % (c - '0') != 0) {\n                    isDivisible = false;\n                    break;\n                }\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> results = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i.ToString().ToCharArray().All(c => i % int.Parse(c.ToString()) == 0)) {\n                results.Add(i);\n            }\n        }\n        return results;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit != 0 && i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long temp = i;\n            while (temp > 0) {\n                long digit = temp % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                temp /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (IsDivisibleByDigits(i)) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long temp = i;\n            while (temp > 0) {\n                long digit = temp % 10;\n                if (digit == 0) {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                temp /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long n = i;\n            while (n > 0) {\n                long digit = n % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                n /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i.ToString().Select(x => int.Parse(x.ToString())).All(x => i % x == 0)) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            foreach (char c in i.ToString()) {\n                if (c == '0') {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % (c - '0') != 0) {\n                    isDivisible = false;\n                    break;\n                }\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            var digits = i.ToString().Select(c => int.Parse(c.ToString())).ToList();\n            if (digits.All(d => d != 0 && i % d == 0)) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long temp = i;\n            while (temp > 0) {\n                long digit = temp % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                temp /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (IsDivisibleByDigits(i)) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool divisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    divisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (divisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool divisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    divisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (divisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            foreach (char c in i.ToString()) {\n                if (i % int.Parse(c.ToString()) != 0) {\n                    isDivisible = false;\n                    break;\n                }\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long temp = i;\n            while (temp > 0) {\n                long digit = temp % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                temp /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long temp = i;\n            while (temp > 0) {\n                long digit = temp % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                temp /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long temp = i;\n            while (temp > 0) {\n                long digit = temp % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                temp /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool divisible = true;\n            long temp = i;\n            while (temp > 0) {\n                long digit = temp % 10;\n                if (digit == 0 || i % digit != 0) {\n                    divisible = false;\n                    break;\n                }\n                temp /= 10;\n            }\n            if (divisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0) {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool divisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    divisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (divisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool ok = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    ok = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (ok) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool divisible = true;\n            long n = i;\n            while (n > 0) {\n                long digit = n % 10;\n                if (digit == 0) {\n                    divisible = false;\n                    break;\n                }\n                if (i % digit != 0) {\n                    divisible = false;\n                    break;\n                }\n                n = n / 10;\n            }\n            if (divisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool divisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    divisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (divisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long temp = i;\n            while (temp > 0) {\n                long digit = temp % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                temp /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            foreach (char c in i.ToString()) {\n                if (c == '0') {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % (c - '0') != 0) {\n                    isDivisible = false;\n                    break;\n                }\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i < endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0) {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool divisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    divisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (divisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit != 0 && i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            var digits = i.ToString().Select(x => int.Parse(x.ToString()));\n            if (digits.All(x => x != 0 && i % x == 0)) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i.ToString().ToCharArray().All(c => i % int.Parse(c.ToString()) == 0)) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            foreach (char c in i.ToString()) {\n                if (c == '0') {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % (c - '0') != 0) {\n                    isDivisible = false;\n                    break;\n                }\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool divisible = true;\n            long n = i;\n            while (n > 0) {\n                long digit = n % 10;\n                if (digit == 0 || i % digit != 0) {\n                    divisible = false;\n                    break;\n                }\n                n /= 10;\n            }\n            if (divisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0) {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long n = i;\n            while (n > 0) {\n                long digit = n % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                n /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0) {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool divisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (i % digit != 0) {\n                    divisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (divisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0) {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0) {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool divisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    divisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (divisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool divisible = true;\n            long temp = i;\n            while (temp > 0) {\n                long digit = temp % 10;\n                if (digit == 0 || i % digit != 0) {\n                    divisible = false;\n                    break;\n                }\n                temp /= 10;\n            }\n            if (divisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long n = i;\n            while (n > 0) {\n                long digit = n % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                n /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i.ToString().All(x => i % int.Parse(x.ToString()) == 0)) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            var digits = i.ToString().Select(x => int.Parse(x.ToString())).ToList();\n            if (digits.All(x => i % x == 0)) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = startnum; i <= endnum; i++) {\n            bool isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.Add(i);\n            }\n        }\n        return result;"
  ]
}
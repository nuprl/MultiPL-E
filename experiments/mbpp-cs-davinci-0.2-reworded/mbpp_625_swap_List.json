{
  "name": "mbpp_625_swap_List",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to interchange the first and last element in a given list.\n    public static List<long> SwapList(List<long> newList) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_625_swap_List.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(SwapList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))));\n    Debug.Assert(SwapList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)4L}))).Equals((new List<long>(new long[]{(long)4L, (long)2L, (long)3L, (long)4L, (long)1L}))));\n    Debug.Assert(SwapList((new List<long>(new long[]{(long)4L, (long)5L, (long)6L}))).Equals((new List<long>(new long[]{(long)6L, (long)5L, (long)4L}))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count-1];\n        newList[newList.Count-1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count-1];\n        newList[newList.Count-1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long first = newList[0];\n        long last = newList[newList.Count - 1];\n        newList[0] = last;\n        newList[newList.Count - 1] = first;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long first = newList[0];\n        long last = newList[newList.Count - 1];\n        newList[0] = last;\n        newList[newList.Count - 1] = first;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;",
    "        long temp = newList[0];\n        newList[0] = newList[newList.Count - 1];\n        newList[newList.Count - 1] = temp;\n        return newList;"
  ]
}
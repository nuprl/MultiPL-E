{
  "name": "mbpp_228_all_Bits_Set_In_The_Given_Range",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_228_all_Bits_Set_In_The_Given_Range.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprtogmqrh.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprtogmqrh.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << (l - 1))) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdsfh_tru.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpdsfh_tru.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // We can use the bitwise and operator to check if all the bits are set in the given range.\n        // We can use the bitwise left shift operator to shift the bits to the left.\n        // We can use the bitwise or operator to set the bits in the given range.\n        // We can use the bitwise and operator to check if all the bits are set in the given range.\n        // We can use the bitwise left shift operator to shift the bits to the left.\n        // We can use the bitwise or operator to set the bits in the given range.\n        // We can use the bitwise and operator to check if all the bits are set in the given range.\n        // We can use the bitwise left shift operator to shift the bits to the left.\n        // We can use the bitwise or operator to set the bits in the given range.\n        // We can use the bitwise and operator to check if all the bits are set in the given range.\n        // We can use the bitwise left shift operator to shift the bits to the left.\n        // We can use the bitwise or operator to set the bits in the given range.\n        // We can use the bitwise and operator to check if all the bits are set in the given range.\n        // We can use the bitwise left shift operator to shift the bits to the left.\n        // We can use the bitwise or operator to set the bits in the given range.\n        // We can use the bitwise and operator to check if all the bits are set in the given range.\n        // We can use the bitwise left shift operator to shift the bits to the left.\n        // We can use the bitwise or operator to set the bits in the given range.\n        // We can use the bitwise and operator to check if all the bits are set in the given range.\n        // We can use the bitwise left shift operator to shift the bits to the left.\n        // We can use the bitwise or operator to set the bits in the given range.\n        // We can use the bitwise and operator to check if all the bits are set in the given range.\n        // We can use the bitwise left shift operator to shift the bits to the left.\n        // We can use the bitwise or operator to set the bits in the given range.\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpm2fd0n0b.cs(10,24): error CS0161: 'Problem.AllBitsSetInTheGivenRange(long, long, long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprtogmqrh.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask <<= l;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbjyaqig6.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpbjyaqig6.cs(12,9): error CS0019: Operator '<<=' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprtogmqrh.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return ((n >> l) & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp32aw13l1.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp32aw13l1.cs(12,18): error CS0019: Operator '>>' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprtogmqrh.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << (l - 1))) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdsfh_tru.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpdsfh_tru.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << (l - 1))) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdsfh_tru.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpdsfh_tru.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // if all the bits are unset in the given range, then the bitwise AND of the number and the range will be zero.\n        return (n & ((1 << r) - 1)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp465ox_7m.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask = mask << l;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdl64qa0r.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpdl64qa0r.cs(12,16): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long x = n >> l;\n        long y = n << (64 - r);\n        return x == 0 && y == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpyzzb0pqr.cs(11,18): error CS0019: Operator '>>' cannot be applied to operands of type 'long' and 'long'\n/tmp/tmpyzzb0pqr.cs(12,18): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask = mask << (l - 1);\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6m_eio19.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp6m_eio19.cs(12,16): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <87dff6c3f9804cf2a46ea639451bb1a0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <87dff6c3f9804cf2a46ea639451bb1a0>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        if (l == 0) {\n            return ((n & ((1 << r) - 1)) == ((1 << r) - 1));\n        }\n        return ((n & (((1 << r) - 1) ^ ((1 << (l - 1)) - 1))) == (((1 << r) - 1) ^ ((1 << (l - 1)) - 1)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjjlqaud5.cs(12,28): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpjjlqaud5.cs(12,47): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpjjlqaud5.cs(14,25): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpjjlqaud5.cs(14,42): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpjjlqaud5.cs(14,69): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpjjlqaud5.cs(14,86): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << (l - 1))) == (mask << (l - 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpokrpgwoa.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpokrpgwoa.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n/tmp/tmpokrpgwoa.cs(12,44): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprtogmqrh.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprtogmqrh.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprtogmqrh.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprtogmqrh.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpk2wus5jh.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpk2wus5jh.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == (mask << l);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprw8uc6az.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmprw8uc6az.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n/tmp/tmprw8uc6az.cs(12,38): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprtogmqrh.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << (l - 1))) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdsfh_tru.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpdsfh_tru.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // The idea is to check whether the bits in the range [l, r] are set or not.\n        // We can do this by checking whether the bits in the range [l, r] are unset or not.\n        // We can do this by checking whether the bits in the range [0, r] are unset or not.\n        // We can do this by checking whether the bits in the range [0, r] are set or not.\n        // We can do this by checking whether the bits in the range [0, r] are set or not.\n        // We can do this by checking whether the bits in the range [0, r] are set or not.\n        // We can do this by checking whether the bits in the range [0, r] are set or not.\n        // We can do this by checking whether the bits in the range [0, r] are set or not.\n        // We can do this by checking whether the bits in the range [0, r] are set or not.\n        // We can do this by checking whether the bits in the range [0, r] are set or not.\n        // We can do this by checking whether the bits in the range [0, r] are set or not.\n        // We can do this by checking whether the bits in the range [0, r] are set or not.\n        // We can do this by checking whether the bits in the range [0, r] are set or not.\n        // We can do this by checking whether the bits in the range [0, r] are set or not.\n        // We can do this by checking whether the bits in the range [0, r] are set or not.\n        // We can do this by checking whether the bits in the range [0, r] are set or not.\n        // We can do this by checking whether the bits in the range [0, r] are set or not.\n        // We can do this by checking whether the bits in the range [0, r] are set or not.\n        // We can do this by checking whether the bits in the range [0, r] are set or not.\n        // We can do this by checking whether the bits in the range [0, r] are set or not.\n        // We can do this by checking whether the\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkrteja00.cs(10,24): error CS0161: 'Problem.AllBitsSetInTheGivenRange(long, long, long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprtogmqrh.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprtogmqrh.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprtogmqrh.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpk2wus5jh.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpk2wus5jh.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << (l - 1))) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdsfh_tru.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpdsfh_tru.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpk2wus5jh.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpk2wus5jh.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0)\n                return false;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpyje3bapg.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << r) - 1;\n        mask = mask ^ ((1 << l) - 1);\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp905umbkp.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp905umbkp.cs(12,25): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // if the bit is set in the range, return false\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpc54co2o4.cs(13,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpk2wus5jh.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpk2wus5jh.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpk2wus5jh.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpk2wus5jh.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpk2wus5jh.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpk2wus5jh.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask <<= l - 1;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvhj_12sz.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpvhj_12sz.cs(12,9): error CS0019: Operator '<<=' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // n = n & ((1 << r) - 1);\n        // n = n >> l;\n        // return n == 0;\n        return ((n >> l) & ((1 << (r - l + 1)) - 1)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpou7lmc12.cs(14,18): error CS0019: Operator '>>' cannot be applied to operands of type 'long' and 'long'\n/tmp/tmpou7lmc12.cs(14,30): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask = mask << (l - 1);\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6m_eio19.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp6m_eio19.cs(12,16): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpk2wus5jh.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpk2wus5jh.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask = mask << (l - 1);\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6m_eio19.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp6m_eio19.cs(12,16): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << (l - 1))) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdsfh_tru.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpdsfh_tru.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprtogmqrh.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << (l - 1))) == (mask << (l - 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpokrpgwoa.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpokrpgwoa.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n/tmp/tmpokrpgwoa.cs(12,44): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask = mask << l;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdl64qa0r.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpdl64qa0r.cs(12,16): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << r) - 1;\n        mask = mask ^ ((1 << l) - 1);\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp905umbkp.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp905umbkp.cs(12,25): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask = mask << (l - 1);\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6m_eio19.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp6m_eio19.cs(12,16): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return ((n >> l) & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp32aw13l1.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp32aw13l1.cs(12,18): error CS0019: Operator '>>' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask = mask << (l - 1);\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6m_eio19.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp6m_eio19.cs(12,16): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask = mask << l;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdl64qa0r.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpdl64qa0r.cs(12,16): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpk2wus5jh.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpk2wus5jh.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprtogmqrh.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprtogmqrh.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask = mask << (l - 1);\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6m_eio19.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp6m_eio19.cs(12,16): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask <<= l - 1;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvhj_12sz.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpvhj_12sz.cs(12,9): error CS0019: Operator '<<=' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // The idea is to create a mask with all bits set in the range [l, r]\n        // and then check if the bitwise AND of the mask and the given number is equal to the mask.\n        long mask = 0;\n        for (long i = l; i <= r; i++) {\n            mask |= (1 << i);\n        }\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpusz6ztpi.cs(15,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpk2wus5jh.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpk2wus5jh.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // n = 1010101010101010101010101010101010101010101010101010101010101010\n        // l = 10\n        // r = 20\n        // n >> l = 101010101010101010101010101010101010101010101010101010101010101\n        // n >> r = 10101010101010101010101010101010101010101010101010101010101010\n        // n >> l & n >> r = 10101010101010101010101010101010101010101010101010101010101010\n        // n >> l & n >> r == n >> l = True\n        return (n >> l & n >> r) == (n >> l);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6lq58en5.cs(18,17): error CS0019: Operator '>>' cannot be applied to operands of type 'long' and 'long'\n/tmp/tmp6lq58en5.cs(18,26): error CS0019: Operator '>>' cannot be applied to operands of type 'long' and 'long'\n/tmp/tmp6lq58en5.cs(18,38): error CS0019: Operator '>>' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprtogmqrh.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        long mask = (1 << (r - l + 1)) - 1;\n        mask = mask << (l - 1);\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp02_dg8vn.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp02_dg8vn.cs(13,16): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprtogmqrh.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << (l - 1))) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdsfh_tru.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpdsfh_tru.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask = mask << (l - 1);\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6m_eio19.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp6m_eio19.cs(12,16): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprtogmqrh.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprtogmqrh.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprtogmqrh.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask = mask << (l - 1);\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6m_eio19.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp6m_eio19.cs(12,16): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << (l - 1))) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp979reyrx.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp979reyrx.cs(13,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask <<= l - 1;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvhj_12sz.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpvhj_12sz.cs(12,9): error CS0019: Operator '<<=' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask = mask << (l - 1);\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6m_eio19.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp6m_eio19.cs(12,16): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprtogmqrh.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpk2wus5jh.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpk2wus5jh.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpam53jud0.cs(14,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpam53jud0.cs(15,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpk2wus5jh.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpk2wus5jh.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask <<= l - 1;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvhj_12sz.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpvhj_12sz.cs(12,9): error CS0019: Operator '<<=' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << (l - 1))) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp979reyrx.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp979reyrx.cs(13,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask = mask << l;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdl64qa0r.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpdl64qa0r.cs(12,16): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpk2wus5jh.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpk2wus5jh.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long x = (1 << (r - l + 1)) - 1;\n        x = x << (l - 1);\n        return (n & x) == x;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp7ux6vi4r.cs(11,19): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp7ux6vi4r.cs(12,13): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << (l - 1))) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdsfh_tru.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpdsfh_tru.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return ((n >> l) & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp32aw13l1.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp32aw13l1.cs(12,18): error CS0019: Operator '>>' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprtogmqrh.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << (l - 1))) == (mask << (l - 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpokrpgwoa.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpokrpgwoa.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n/tmp/tmpokrpgwoa.cs(12,44): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1lu16eg4.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << (l - 1))) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdsfh_tru.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpdsfh_tru.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << (l - 1))) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp979reyrx.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp979reyrx.cs(13,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprtogmqrh.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpk2wus5jh.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpk2wus5jh.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpk2wus5jh.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpk2wus5jh.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprtogmqrh.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return ((n >> l) & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp32aw13l1.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp32aw13l1.cs(12,18): error CS0019: Operator '>>' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpc979abav.cs(13,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // if all bits are set in the given range then the result of the following operation will be zero.\n        return (n & ((1 << (r - l + 1)) - 1) << l) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbxxlvdk4.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << (l - 1))) == mask << (l - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpugku3wtc.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpugku3wtc.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n/tmp/tmpugku3wtc.cs(12,43): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << r) - 1;\n        mask = mask ^ ((1 << l) - 1);\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp905umbkp.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp905umbkp.cs(12,25): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprtogmqrh.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // We will use the concept of bitwise AND operation.\n        // If all the bits are set in the given range then the result of the bitwise AND operation will be non-zero.\n        // If any of the bit is unset in the given range then the result of the bitwise AND operation will be zero.\n        // We will use the concept of bitwise AND operation.\n        // If all the bits are set in the given range then the result of the bitwise AND operation will be non-zero.\n        // If any of the bit is unset in the given range then the result of the bitwise AND operation will be zero.\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << (l - 1))) != 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpmd28s5tr.cs(17,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpmd28s5tr.cs(18,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == (mask << l);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprw8uc6az.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmprw8uc6az.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n/tmp/tmprw8uc6az.cs(12,38): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // if n is 0, then all bits are unset.\n        if (n == 0) {\n            return true;\n        }\n        // if l is 0, then all bits are unset.\n        if (l == 0) {\n            return true;\n        }\n        // if r is 0, then all bits are unset.\n        if (r == 0) {\n            return true;\n        }\n        // if l is greater than r, then all bits are unset.\n        if (l > r) {\n            return true;\n        }\n        // if l is greater than n, then all bits are unset.\n        if (l > n) {\n            return true;\n        }\n        // if r is greater than n, then all bits are unset.\n        if (r > n) {\n            return true;\n        }\n        // if l is equal to r, then all bits are unset.\n        if (l == r) {\n            return true;\n        }\n        // if l is equal to n, then all bits are unset.\n        if (l == n) {\n            return true;\n        }\n        // if r is equal to n, then all bits are unset.\n        if (r == n) {\n            return true;\n        }\n        // if l is equal to 1, then all bits are unset.\n        if (l == 1) {\n            return true;\n        }\n        // if r is equal to 1, then all bits are unset.\n        if (r == 1) {\n            return true;\n        }\n        // if l is equal to 2, then all bits are unset.\n        if (l == 2) {\n            return true;\n        }\n        // if r is equal to 2, then all bits are unset.\n        if (r == 2) {\n            return true;\n        }\n        // if l is equal to 3, then all bits are unset.\n        if (l == 3) {\n            return true;\n        }\n        // if r is equal to 3, then all bits are unset.\n        if (r == 3) {\n            return true;\n        }\n        // if l is equal to\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_at4umli.cs(10,24): error CS0161: 'Problem.AllBitsSetInTheGivenRange(long, long, long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << (l - 1))) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdsfh_tru.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpdsfh_tru.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpk2wus5jh.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpk2wus5jh.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // n = n & ((1 << r) - 1);\n        // n = n & ((1 << l) - 1);\n        // return n == 0;\n        return ((n & ((1 << r) - 1)) & ((1 << l) - 1)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8j6xc0df.cs(14,24): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp8j6xc0df.cs(14,42): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << (l - 1))) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdsfh_tru.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpdsfh_tru.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprtogmqrh.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // The idea is to left shift 1 by r-1 bits and then right shift by r-l+1 bits.\n        // If the result is equal to 0, then all the bits in the range are unset.\n        return ((1L << (r - 1)) >> (r - l + 1)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpfk3tgq3d.cs(13,18): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long x = n;\n        for (long i = l; i <= r; i++) {\n            x = x & ~(1 << i);\n        }\n        return x == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjlbu4yub.cs(13,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // If the number is 0, then all bits are unset.\n        if (n == 0) {\n            return true;\n        }\n        // If the number is not 0, then check if the bits are unset in the given range.\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1aj99bag.cs(17,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask = mask << (l - 1);\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6m_eio19.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp6m_eio19.cs(12,16): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1lu16eg4.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpk2wus5jh.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpk2wus5jh.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << (l - 1))) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdsfh_tru.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpdsfh_tru.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << (l - 1))) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdsfh_tru.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpdsfh_tru.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // If all bits are set in the given range, then the range should be all 1s.\n        // So we can check if the range is all 1s or not.\n        long range = r - l + 1;\n        long mask = (1 << range) - 1;\n        return ((n >> l) & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp4j2ffn3_.cs(14,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp4j2ffn3_.cs(15,18): error CS0019: Operator '>>' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpk2wus5jh.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpk2wus5jh.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprtogmqrh.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask <<= l - 1;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvhj_12sz.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpvhj_12sz.cs(12,9): error CS0019: Operator '<<=' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return ((n >> l) & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp32aw13l1.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp32aw13l1.cs(12,18): error CS0019: Operator '>>' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return ((n >> l) & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp32aw13l1.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp32aw13l1.cs(12,18): error CS0019: Operator '>>' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // long n = 0b1010101010101010101010101010101010101010101010101010101010101010;\n        // long l = 0;\n        // long r = 63;\n        // long n = 0b1010101010101010101010101010101010101010101010101010101010101010;\n        // long l = 0;\n        // long r = 63;\n        // long n = 0b1010101010101010101010101010101010101010101010101010101010101010;\n        // long l = 0;\n        // long r = 63;\n        // long n = 0b1010101010101010101010101010101010101010101010101010101010101010;\n        // long l = 0;\n        // long r = 63;\n        // long n = 0b1010101010101010101010101010101010101010101010101010101010101010;\n        // long l = 0;\n        // long r = 63;\n        // long n = 0b1010101010101010101010101010101010101010101010101010101010101010;\n        // long l = 0;\n        // long r = 63;\n        // long n = 0b1010101010101010101010101010101010101010101010101010101010101010;\n        // long l = 0;\n        // long r = 63;\n        // long n = 0b1010101010101010101010101010101010101010101010101010101010101010;\n        // long l = 0;\n        // long r = 63;\n        // long n = 0b1010101010101010101010101010101010101010101010101010101010101010;\n        // long l = 0;\n        // long r = 63;\n        // long n = 0b\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8g8p7tx1.cs(10,24): error CS0161: 'Problem.AllBitsSetInTheGivenRange(long, long, long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprtogmqrh.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << r) - 1;\n        mask = mask ^ ((1 << l) - 1);\n        return (n & mask) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnbp9fwcs.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpnbp9fwcs.cs(12,25): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return ((n >> l) & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp32aw13l1.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp32aw13l1.cs(12,18): error CS0019: Operator '>>' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprtogmqrh.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << (l - 1))) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdsfh_tru.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpdsfh_tru.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // if the given range is not valid\n        if (l > r) {\n            return false;\n        }\n        // if the given range is valid\n        else {\n            // if the given range is not valid\n            if (l < 0 || r < 0) {\n                return false;\n            }\n            // if the given range is valid\n            else {\n                // if the given number is negative\n                if (n < 0) {\n                    return false;\n                }\n                // if the given number is positive\n                else {\n                    // if the given range is not valid\n                    if (l > 63 || r > 63) {\n                        return false;\n                    }\n                    // if the given range is valid\n                    else {\n                        // if the given range is not valid\n                        if (l == 0 && r == 0) {\n                            return false;\n                        }\n                        // if the given range is valid\n                        else {\n                            // if the given range is not valid\n                            if (l == 0 && r == 1) {\n                                return false;\n                            }\n                            // if the given range is valid\n                            else {\n                                // if the given range is not valid\n                                if (l == 0 && r == 2) {\n                                    return false;\n                                }\n                                // if the given range is valid\n                                else {\n                                    // if the given range is not valid\n                                    if (l == 0 && r == 3) {\n                                        return false;\n                                    }\n                                    // if the given range is valid\n                                    else {\n                                        // if the given range is not valid\n                                        if (l == 0 && r == 4) {\n                                            return false;\n                                        }\n                                        // if the given range is valid\n                                        else {\n                                            // if the given range is not valid\n                                            if (l == 0 && r == 5) {\n                                                return false;\n                                            }\n                                            // if the given range is valid\n                                            else {\n                                                // if the given range is not valid\n                                                if (l == 0 && r == 6) {\n                                                    return false;\n                                                }\n                                               \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmponndxfoy.cs(77,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmponndxfoy.cs(83,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprtogmqrh.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpk2wus5jh.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpk2wus5jh.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << (l - 1))) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdsfh_tru.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpdsfh_tru.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask = mask << (l - 1);\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6m_eio19.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp6m_eio19.cs(12,16): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask <<= l - 1;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvhj_12sz.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpvhj_12sz.cs(12,9): error CS0019: Operator '<<=' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << (l - 1))) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdsfh_tru.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpdsfh_tru.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpk2wus5jh.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpk2wus5jh.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // if the bit is set in the given range then return false\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmps8wa8uh4.cs(13,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprtogmqrh.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return ((n >> l) & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp32aw13l1.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp32aw13l1.cs(12,18): error CS0019: Operator '>>' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == (mask << l);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprw8uc6az.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmprw8uc6az.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n/tmp/tmprw8uc6az.cs(12,38): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return ((n >> l) & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp32aw13l1.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp32aw13l1.cs(12,18): error CS0019: Operator '>>' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask <<= l - 1;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvhj_12sz.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpvhj_12sz.cs(12,9): error CS0019: Operator '<<=' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // We need to check if all the bits are set in the range [l, r].\n        // We can do this by checking if the bitwise AND of the number and the number with all bits set in the range [l, r] is equal to the number with all bits set in the range [l, r].\n        long allBitsSetInTheGivenRange = ((1 << (r - l + 1)) - 1) << (l - 1);\n        return (n & allBitsSetInTheGivenRange) == allBitsSetInTheGivenRange;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123372,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp4t4afo3h.cs(13,44): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpk2wus5jh.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpk2wus5jh.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpc979abav.cs(13,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask = mask << (l - 1);\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6m_eio19.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp6m_eio19.cs(12,16): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprtogmqrh.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << (l - 1))) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdsfh_tru.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpdsfh_tru.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpk2wus5jh.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpk2wus5jh.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << (l - 1))) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123372,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi4_wbezw.cs(14,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpi4_wbezw.cs(15,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprtogmqrh.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // We need to check if all the bits are set in the range [l, r]\n        // We can do this by checking if the bits in the range [0, r] are set, and then checking if the bits in the range [0, l-1] are unset.\n        // If both of these are true, then all the bits in the range [l, r] are set.\n        // We can do this by using the following formula:\n        // (n >> r) == (1 << (r - l + 1)) - 1\n        // (n >> (l - 1)) == 0\n        // We can also use the following formula:\n        // (n >> l) == (1 << (r - l + 1)) - 1\n        // (n >> (r + 1)) == 0\n        // We can also use the following formula:\n        // (n >> l) == (1 << (r - l + 1)) - 1\n        // (n << (64 - r - 1)) == 0\n        // We can also use the following formula:\n        // (n >> r) == (1 << (r - l + 1)) - 1\n        // (n << (64 - l + 1)) == 0\n        // We can also use the following formula:\n        // (n >> r) == (1 << (r - l + 1)) - 1\n        // (n << (64 - l)) == 0\n        // We can also use the following formula:\n        // (n >> l) == (1 << (r - l + 1)) - 1\n        // (n << (64 - r)) == 0\n        // We can also use the following formula:\n        // (n >> l) == (1 << (r - l + 1)) - 1\n        // (n << (64 - r - 1)) == 0\n        // We can also use the following formula:\n        // (n >> r) == (1 << (r - l + 1)) - 1\n        // (n << (64 - l)) == 0\n        // We can also use the following formula:\n        // (n >> r) == (1 << (r - l + 1)) - 1\n        // (n << (64 - l + 1)) == 0\n        // We can also use the\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123372,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp2r54t60n.cs(10,24): error CS0161: 'Problem.AllBitsSetInTheGivenRange(long, long, long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <211fb1d382db421fb58e2a10e8f441a2>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask = mask << (l - 1);\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6m_eio19.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp6m_eio19.cs(12,16): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpk2wus5jh.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpk2wus5jh.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // We need to check if all the bits in the range [l, r] are set or not.\n        // We can do this by creating a mask and then checking if the mask is equal to the number.\n        // We can create a mask by shifting 1 to the left by r - l + 1 times.\n        // Then we need to shift the mask to the left by l - 1 times.\n        // Then we need to subtract 1 from the mask.\n        // Then we need to check if the number is equal to the mask.\n        // We can do this by using the bitwise AND operator.\n        // If the number is equal to the mask, then all the bits are set.\n        // If the number is not equal to the mask, then not all the bits are set.\n        // We can do this by using the bitwise AND operator.\n        // If the number is equal to the mask, then all the bits are set.\n        // If the number is not equal to the mask, then not all the bits are set.\n        long mask = (1 << (r - l + 1)) - 1;\n        mask = mask << (l - 1);\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123372,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp9p76ggdq.cs(23,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp9p76ggdq.cs(24,16): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask <<= (l - 1);\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123372,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6vahae4p.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp6vahae4p.cs(12,9): error CS0019: Operator '<<=' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << (l - 1))) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdsfh_tru.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpdsfh_tru.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << r) - 1;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123372,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpgx9w2lwy.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask = mask << (l - 1);\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6m_eio19.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp6m_eio19.cs(12,16): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return ((n >> l) & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp32aw13l1.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp32aw13l1.cs(12,18): error CS0019: Operator '>>' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpk2wus5jh.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpk2wus5jh.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << (l - 1))) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdsfh_tru.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpdsfh_tru.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << (l - 1))) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdsfh_tru.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpdsfh_tru.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprtogmqrh.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // The idea is to left shift 1 by r - 1 and then right shift it by l - 1.\n        // If the result is equal to n then all the bits are unset in the given range.\n        return (n & ((1 << (r - 1)) >> (l - 1))) == n;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123372,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp2xwqmwzl.cs(13,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask <<= l - 1;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvhj_12sz.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpvhj_12sz.cs(12,9): error CS0019: Operator '<<=' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << (l - 1))) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdsfh_tru.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpdsfh_tru.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return ((n >> l) & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp32aw13l1.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp32aw13l1.cs(12,18): error CS0019: Operator '>>' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << (l - 1))) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdsfh_tru.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpdsfh_tru.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprtogmqrh.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long x = (1 << (r - l + 1)) - 1;\n        return (n & x) == x;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123372,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzfhi86sj.cs(11,19): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprtogmqrh.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Initialize result \n        bool result = true;\n\n        // Check if all bits are set in the given range \n        for (long i = l; i <= r; i++) {\n            // If any bit is not set in the given range \n            if ((n & (1 << i)) == 0) {\n                result = false;\n                break;\n            }\n        }\n\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123372,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpltim8_cv.cs(17,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // if all bits are set in the given range, then the bitwise AND of the number and the range should be equal to the range.\n        return (n & ((1 << (r - l + 1)) - 1) << (l - 1)) == ((1 << (r - l + 1)) - 1) << (l - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123372,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5j_ee2rw.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp5j_ee2rw.cs(12,63): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << (int)i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7acf5969dcb64f9d87828d228e04274b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7acf5969dcb64f9d87828d228e04274b>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask = mask << l;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdl64qa0r.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpdl64qa0r.cs(12,16): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (int)(r - l + 1)) - 1;\n        mask = mask << (int)l;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b59b4d61fb1346dc9138b8ec672a677b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b59b4d61fb1346dc9138b8ec672a677b>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // The idea is to left shift 1 by l-1 and right shift 1 by r-1 and then do a bitwise AND of the two numbers.\n        // If the result is 0, then all the bits are unset in the given range.\n        long num = (1 << (l - 1)) & (1 << (r - 1));\n        return (num & n) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123372,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpf74c5t82.cs(13,21): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpf74c5t82.cs(13,38): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << (l - 1))) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdsfh_tru.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpdsfh_tru.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask = mask << l;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdl64qa0r.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpdl64qa0r.cs(12,16): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask = mask << (l - 1);\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6m_eio19.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp6m_eio19.cs(12,16): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprtogmqrh.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprtogmqrh.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask <<= l - 1;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvhj_12sz.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpvhj_12sz.cs(12,9): error CS0019: Operator '<<=' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask = mask << (l - 1);\n        return ((n & mask) == mask);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123372,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjjm5wn4j.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpjjm5wn4j.cs(12,16): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask <<= l - 1;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvhj_12sz.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpvhj_12sz.cs(12,9): error CS0019: Operator '<<=' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprtogmqrh.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == (mask << l);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprw8uc6az.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmprw8uc6az.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n/tmp/tmprw8uc6az.cs(12,38): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprtogmqrh.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprtogmqrh.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpk2wus5jh.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpk2wus5jh.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpk2wus5jh.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpk2wus5jh.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // Write your code here\n        long mask = 0;\n        for (long i = l; i <= r; i++) {\n            mask = mask | (1 << i);\n        }\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123372,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpinl84sn2.cs(14,28): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return (n & (mask << l)) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpk2wus5jh.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpk2wus5jh.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask = mask << l;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdl64qa0r.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpdl64qa0r.cs(12,16): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        mask <<= l - 1;\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123371,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvhj_12sz.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpvhj_12sz.cs(12,9): error CS0019: Operator '<<=' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << (r - l + 1)) - 1;\n        return ((n >> l) & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp32aw13l1.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmp32aw13l1.cs(12,18): error CS0019: Operator '>>' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        for (long i = l; i <= r; i++) {\n            if ((n & (1 << i)) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510488,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprtogmqrh.cs(12,23): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        // TODO: Write - Your - Code\n        long mask = (1 << (r - l + 1)) - 1;\n        mask = mask << (l - 1);\n        return (n & mask) == mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123372,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpt6yv1nm8.cs(12,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpt6yv1nm8.cs(13,16): error CS0019: Operator '<<' cannot be applied to operands of type 'long' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether all the bits are unset in the given range or not.\n    public static bool AllBitsSetInTheGivenRange(long n, long l, long r) {\n        long mask = (1 << r) - 1;\n        mask = mask ^ ((1 << (l - 1)) - 1);\n        return (n & mask) == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllBitsSetInTheGivenRange((4L), (1L), (2L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((17L), (2L), (4L)) == (true));\n    Debug.Assert(AllBitsSetInTheGivenRange((39L), (4L), (6L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123372,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnnovaq8q.cs(11,22): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n/tmp/tmpnnovaq8q.cs(12,25): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
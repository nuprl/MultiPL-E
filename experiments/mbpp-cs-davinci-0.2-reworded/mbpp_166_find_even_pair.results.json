{
  "name": "mbpp_166_find_even_pair",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_166_find_even_pair.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        // Write your code here.\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5bb6d7ae00b848aabf716e8362dc0dcc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5bb6d7ae00b848aabf716e8362dc0dcc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long even = 0;\n        long odd = 0;\n        foreach (long a in A) {\n            if (a % 2 == 0) {\n                even++;\n            } else {\n                odd++;\n            }\n        }\n        return even * (even - 1) / 2 + odd * (odd - 1) / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122765,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // Count the number of even and odd numbers.\n        long even = 0, odd = 0;\n        foreach (long a in A) {\n            if (a % 2 == 0) even++;\n            else odd++;\n        }\n        // Even xor even = even, odd xor odd = even, even xor odd = odd.\n        // So the number of even pairs is even * even + odd * odd.\n        return even * even + odd * odd;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122765,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c69a37bcebac446d8df5f2003aa44db5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c69a37bcebac446d8df5f2003aa44db5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122765,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1228fee9ac4f467bbbebae4b5569bc42>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1228fee9ac4f467bbbebae4b5569bc42>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122765,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // Return the number of even pairs.\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122765,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long even = 0;\n        long odd = 0;\n        for (int i = 0; i < A.Count; i++) {\n            if (A[i] % 2 == 0) {\n                even++;\n            } else {\n                odd++;\n            }\n        }\n        return even * odd;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122765,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <58f8ec6c354f4182bfd57cb74ddfe299>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <58f8ec6c354f4182bfd57cb74ddfe299>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122765,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <21b802de08e24fff890fcbb08296de05>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <21b802de08e24fff890fcbb08296de05>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long even = 0;\n        long odd = 0;\n        foreach (long a in A) {\n            if (a % 2 == 0) {\n                even++;\n            } else {\n                odd++;\n            }\n        }\n        return even * (even - 1) / 2 + odd * (odd - 1) / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122765,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // We can use the fact that a^b = c iff a^c = b.\n        // We can also use the fact that a^b = c iff a^c = b^d for any d.\n        // So we can count the number of times each value appears in the list, and then for each value,\n        // we can count the number of times it appears in the list xor'd with an even number.\n        // We can then multiply the number of times each value appears in the list by the number of times\n        // it appears xor'd with an even number, and sum these values.\n        // This will give us the number of pairs that xor to an even number.\n        // We can then divide by 2 to get the number of pairs.\n        // We can also use the fact that a^b = c iff a^c = b^d for any d, so we can count the number of times\n        // each value appears in the list xor'd with an even number, and then multiply this by the number of\n        // times each value appears in the list.\n        // This will give us the number of pairs that xor to an even number.\n        // We can then divide by 2 to get the number of pairs.\n        // We can also use the fact that a^b = c iff a^c = b^d for any d, so we can count the number of times\n        // each value appears in the list xor'd with an even number, and then multiply this by the number of\n        // times each value appears in the list.\n        // This will give us the number of pairs that xor to an even number.\n        // We can then divide by 2 to get the number of pairs.\n        // We can also use the fact that a^b = c iff a^c = b^d for any d, so we can count the number of times\n        // each value appears in the list xor'd with an even number, and then multiply this by the number of\n        // times each value appears in the list.\n        // This will give us the number of pairs that xor to an even number.\n        // We can then divide by 2 to get the number of pairs.\n        // We can also use the fact that a^b = c iff a^\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122765,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpyinjwgjc.cs(10,24): error CS0161: 'Problem.FindEvenPair(List<long>)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long even = 0;\n        long odd = 0;\n        foreach (var a in A) {\n            if (a % 2 == 0) {\n                even++;\n            } else {\n                odd++;\n            }\n        }\n        return even * odd;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122765,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4c647e04f3de492e81b8bf1fa24f6547>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4c647e04f3de492e81b8bf1fa24f6547>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        int n = A.Count;\n        long res = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    res++;\n                }\n            }\n        }\n        return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122765,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122765,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1228fee9ac4f467bbbebae4b5569bc42>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1228fee9ac4f467bbbebae4b5569bc42>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122765,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // Write your code here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122765,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4304678d6aeb46a7943eb4ac275b0456>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4304678d6aeb46a7943eb4ac275b0456>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        var even = new HashSet<long>();\n        var odd = new HashSet<long>();\n        foreach (var a in A) {\n            if (a % 2 == 0) {\n                even.Add(a);\n            } else {\n                odd.Add(a);\n            }\n        }\n        long count = 0;\n        foreach (var a in even) {\n            if (even.Contains(a ^ 2)) {\n                count++;\n            }\n        }\n        foreach (var a in odd) {\n            if (odd.Contains(a ^ 2)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122765,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a04a8c59a746492dba75369ef76817b0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a04a8c59a746492dba75369ef76817b0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for(int i = 0; i < A.Count; i++) {\n            for(int j = i + 1; j < A.Count; j++) {\n                if((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122765,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // We can use the fact that xor is commutative and associative to group the numbers by their parity.\n        // Then we can count the number of pairs of numbers that xor to an even number.\n        // For example, if we have an array of [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], we can group the numbers by their parity:\n        // Even: [2, 4, 6, 8, 10]\n        // Odd: [1, 3, 5, 7, 9]\n        // Then we can count the number of pairs of even numbers that xor to an even number.\n        // There are 5 even numbers, so there are 5 choose 2 = 10 pairs.\n        // All of these pairs xor to an even number, so we add 10 to our count.\n        // Then we can count the number of pairs of odd numbers that xor to an even number.\n        // There are 5 odd numbers, so there are 5 choose 2 = 10 pairs.\n        // All of these pairs xor to an odd number, so we don't add anything to our count.\n        // Finally, we can count the number of pairs that contain one even number and one odd number.\n        // There are 5 even numbers and 5 odd numbers, so there are 5 * 5 = 25 pairs.\n        // Half of these pairs xor to an even number, so we add 12 to our count.\n        // The final count is 10 + 10 + 12 = 32.\n        // We can generalize this to any number of even and odd numbers.\n        long even = 0;\n        long odd = 0;\n        foreach (long x in A) {\n            if ((x & 1) == 0) {\n                even++;\n            } else {\n                odd++;\n            }\n        }\n        long evenPairs = even * (even - 1) / 2;\n        long oddPairs = odd * (odd - 1) / 2;\n        long mixedPairs = even * odd;\n        return evenPairs + mixedPairs;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122765,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6940bedd6c294e029898255cca9a02d3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6940bedd6c294e029898255cca9a02d3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // We can use a bit array to count the number of elements that have a particular bit set.\n        // Then we can use this to count the number of elements that have the same bit set.\n        // This is the number of pairs that xor to an odd number.\n        // The number of pairs that xor to an even number is the number of pairs minus the number of odd pairs.\n        // We can use this to count the number of pairs that xor to an even number.\n        // We can use this to count the number of pairs that xor to an even number.\n        // We can use this to count the number of pairs that xor to an even number.\n        // We can use this to count the number of pairs that xor to an even number.\n        // We can use this to count the number of pairs that xor to an even number.\n        // We can use this to count the number of pairs that xor to an even number.\n        // We can use this to count the number of pairs that xor to an even number.\n        // We can use this to count the number of pairs that xor to an even number.\n        // We can use this to count the number of pairs that xor to an even number.\n        // We can use this to count the number of pairs that xor to an even number.\n        // We can use this to count the number of pairs that xor to an even number.\n        // We can use this to count the number of pairs that xor to an even number.\n        // We can use this to count the number of pairs that xor to an even number.\n        // We can use this to count the number of pairs that xor to an even number.\n        // We can use this to count the number of pairs that xor to an even number.\n        // We can use this to count the number of pairs that xor to an even number.\n        // We can use this to count the number of pairs that xor to an even number.\n        // We can use this to count the number of pairs that xor to an even number.\n        // We can use this to count the number of pairs that xor to an even number.\n        // We can use this to count the number of pairs that xor to an even number.\n        // We can use\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122765,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp24vd6oku.cs(10,24): error CS0161: 'Problem.FindEvenPair(List<long>)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function\n        long count = 0;\n        for(int i = 0; i < A.Count; i++) {\n            for(int j = i + 1; j < A.Count; j++) {\n                if((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122765,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122765,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1228fee9ac4f467bbbebae4b5569bc42>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1228fee9ac4f467bbbebae4b5569bc42>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // Write your code here\n        // To debug: Console.Error.WriteLine(\"Debug messages...\");\n        long count = 0;\n        for (int i = 0; i < A.Count; i++)\n        {\n            for (int j = i; j < A.Count; j++)\n            {\n                if ((A[i] ^ A[j]) % 2 == 0)\n                {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122765,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <61639fc26908486a9346f34fa44f7cc5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <61639fc26908486a9346f34fa44f7cc5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122765,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1228fee9ac4f467bbbebae4b5569bc42>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1228fee9ac4f467bbbebae4b5569bc42>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // We can use the fact that xor is commutative to reduce the number of pairs we need to check.\n        // We can also use the fact that xor is associative to reduce the number of operations we need to perform.\n        // We can also use the fact that xor is its own inverse to reduce the number of operations we need to perform.\n        // We can also use the fact that xor is distributive over addition to reduce the number of operations we need to perform.\n        // We can also use the fact that xor is distributive over multiplication to reduce the number of operations we need to perform.\n        // We can also use the fact that xor is distributive over subtraction to reduce the number of operations we need to perform.\n        // We can also use the fact that xor is distributive over division to reduce the number of operations we need to perform.\n        // We can also use the fact that xor is distributive over exponentiation to reduce the number of operations we need to perform.\n        // We can also use the fact that xor is distributive over modulus to reduce the number of operations we need to perform.\n        // We can also use the fact that xor is distributive over bitwise and to reduce the number of operations we need to perform.\n        // We can also use the fact that xor is distributive over bitwise or to reduce the number of operations we need to perform.\n        // We can also use the fact that xor is distributive over bitwise xor to reduce the number of operations we need to perform.\n        // We can also use the fact that xor is distributive over bitwise not to reduce the number of operations we need to perform.\n        // We can also use the fact that xor is distributive over logical and to reduce the number of operations we need to perform.\n        // We can also use the fact that xor is distributive over logical or to reduce the number of operations we need to perform.\n        // We can also use the fact that xor is distributive over logical xor to reduce the number of operations we need to perform.\n        // We can also use the fact that xor is distributive over logical not to reduce the number of operations we need to perform.\n        // We can also use the fact that xor is distributive over comparison to reduce the number of operations we\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122765,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpio4m9h2f.cs(10,24): error CS0161: 'Problem.FindEvenPair(List<long>)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // Your code goes here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122765,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <905cba5133364e1384f4313c7e806867>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <905cba5133364e1384f4313c7e806867>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        // Your code here.\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122765,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8e151a2a429a48489cb6d66f1adeef4c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8e151a2a429a48489cb6d66f1adeef4c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement me!\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122765,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fb7da13d56404c8ebe2744ee23689293>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fb7da13d56404c8ebe2744ee23689293>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long result = 0;\n        long[] evens = new long[A.Count];\n        long[] odds = new long[A.Count];\n        for (int i = 0; i < A.Count; i++) {\n            if (A[i] % 2 == 0) {\n                evens[i] = 1;\n            } else {\n                odds[i] = 1;\n            }\n        }\n        for (int i = 0; i < A.Count; i++) {\n            result += evens[i] * (A.Count - i - 1);\n            result += odds[i] * i;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122765,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <82b92492953d4c7284ba86beb001b12a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <82b92492953d4c7284ba86beb001b12a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122765,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1228fee9ac4f467bbbebae4b5569bc42>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1228fee9ac4f467bbbebae4b5569bc42>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // We can do this in O(n) time by counting the number of even and odd numbers in the list.\n        // Then we can pair up the even numbers with each other and the odd numbers with each other.\n        // The number of pairs is the product of the number of even numbers and the number of odd numbers.\n        long even = 0;\n        long odd = 0;\n        foreach (long x in A) {\n            if (x % 2 == 0) {\n                even++;\n            } else {\n                odd++;\n            }\n        }\n        return even * odd;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122765,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6cb75f87036446b185726ba2b6c63e8a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6cb75f87036446b185726ba2b6c63e8a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // We can use a hash table to count the number of times each number appears in the list.\n        var counts = new Dictionary<long, long>();\n        foreach (var a in A) {\n            if (!counts.ContainsKey(a)) {\n                counts[a] = 0;\n            }\n            counts[a]++;\n        }\n        // Now we can count the number of pairs that xor to an even number.\n        long result = 0;\n        foreach (var kvp in counts) {\n            var a = kvp.Key;\n            var count = kvp.Value;\n            // If a xor a is even, then there are count * (count - 1) / 2 pairs of a's that xor to an even number.\n            if ((a ^ a) % 2 == 0) {\n                result += count * (count - 1) / 2;\n            }\n            // If a xor b is even, then there are count * counts[b] pairs of a's and b's that xor to an even number.\n            foreach (var b in counts.Keys) {\n                if ((a ^ b) % 2 == 0) {\n                    result += count * counts[b];\n                }\n            }\n        }\n        // We counted each pair twice, so we divide the result by 2.\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8ccd2602d80c44719797bb303f021752>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8ccd2602d80c44719797bb303f021752>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122765,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <21b802de08e24fff890fcbb08296de05>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <21b802de08e24fff890fcbb08296de05>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // We can use the fact that xor is commutative and associative to group the numbers into pairs.\n        // We can also use the fact that xor is its own inverse to group the numbers into pairs of equal numbers.\n        // We can then use the fact that xor is distributive over addition to count the number of pairs of equal numbers.\n        // We can then use the fact that xor is distributive over addition to count the number of pairs of equal numbers.\n        // We can then use the fact that xor is distributive over addition to count the number of pairs of equal numbers.\n        // We can then use the fact that xor is distributive over addition to count the number of pairs of equal numbers.\n        // We can then use the fact that xor is distributive over addition to count the number of pairs of equal numbers.\n        // We can then use the fact that xor is distributive over addition to count the number of pairs of equal numbers.\n        // We can then use the fact that xor is distributive over addition to count the number of pairs of equal numbers.\n        // We can then use the fact that xor is distributive over addition to count the number of pairs of equal numbers.\n        // We can then use the fact that xor is distributive over addition to count the number of pairs of equal numbers.\n        // We can then use the fact that xor is distributive over addition to count the number of pairs of equal numbers.\n        // We can then use the fact that xor is distributive over addition to count the number of pairs of equal numbers.\n        // We can then use the fact that xor is distributive over addition to count the number of pairs of equal numbers.\n        // We can then use the fact that xor is distributive over addition to count the number of pairs of equal numbers.\n        // We can then use the fact that xor is distributive over addition to count the number of pairs of equal numbers.\n        // We can then use the fact that xor is distributive over addition to count the number of pairs of equal numbers.\n        // We can then use the fact that xor is distributive over addition to count the number of pairs of equal numbers.\n        // We can then use the fact that xor is distributive over addition to count the number of pairs of equal numbers.\n       \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122766,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_rcyg7mv.cs(10,24): error CS0161: 'Problem.FindEvenPair(List<long>)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // We can do this in O(n) time and O(n) space.\n        // First, we count the number of even and odd numbers.\n        // Then, we count the number of pairs of even and odd numbers.\n        // Then, we count the number of pairs of even and even numbers.\n        // Then, we count the number of pairs of odd and odd numbers.\n        // Then, we return the sum of the number of pairs of even and odd numbers,\n        // the number of pairs of even and even numbers, and the number of pairs of odd and odd numbers.\n        long evenCount = 0;\n        long oddCount = 0;\n        foreach (long a in A) {\n            if (a % 2 == 0) {\n                evenCount++;\n            } else {\n                oddCount++;\n            }\n        }\n        return evenCount * oddCount + evenCount * (evenCount - 1) / 2 + oddCount * (oddCount - 1) / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c0cb4b211d914c389bff996d82139e27>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c0cb4b211d914c389bff996d82139e27>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122765,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // Your code here.\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122765,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1228fee9ac4f467bbbebae4b5569bc42>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1228fee9ac4f467bbbebae4b5569bc42>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
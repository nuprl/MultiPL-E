{
  "name": "mbpp_471_find_remainder",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_471_find_remainder.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        for (int i = 0; i < arr.Count; i++) {\n            result = (result * arr[i]) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        // Write your code here\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long a in arr) {\n            result = (result * a) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        // Write your code here.\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long item in arr) {\n            result = (result * item) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        // Write your code here\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach(long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long prod = 1;\n        foreach (long i in arr) {\n            prod = (prod * i) % n;\n        }\n        return prod;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long res = 1;\n        foreach (long item in arr) {\n            res = (res * item) % n;\n        }\n        return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122814,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        // Write your code here\n        long result = 1;\n        for (int i = 0; i < arr.Count; i++) {\n            result = (result * arr[i]) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122814,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        // Write your code here\n        long result = 1;\n        foreach (var item in arr) {\n            result = (result * item) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122814,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        for (int i = 0; i < arr.Count; i++) {\n            result = (result * arr[i]) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach(var i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122814,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        // Write your code here\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122814,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long product = 1;\n        for (int i = 0; i < arr.Count; i++) {\n            product = (product * arr[i]) % n;\n        }\n        return product;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122814,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        // Write your code here\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        // Write your code here\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        // Write your code here\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122814,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        // Write your code here\n        long result = 1;\n        foreach (var item in arr)\n        {\n            result = (result * item) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122814,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach(long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (var i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122814,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        // Write your code here\n        long result = 1;\n        foreach (long item in arr) {\n            result = (result * item) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122814,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        // Write your code here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122814,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5633f0092ed44f95b12cb2e8eca38598>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (var item in arr) {\n            result = (result * item) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122814,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        // Write your code here\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122814,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        // Write your code here\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122814,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long product = 1;\n        foreach (long num in arr) {\n            product = (product * num) % n;\n        }\n        return product;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122814,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        // Write your code here\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122814,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        // Write your code here\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122814,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        // Write your code here\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        for (int i = 0; i < arr.Count; i++) {\n            result = (result * arr[i]) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        // Write your code here\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        for (int i = 0; i < arr.Count; i++) {\n            result = (result * arr[i]) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        // Write your code here.\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        // Write your code here\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122814,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        // Write your code here\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (var item in arr) {\n            result = (result * item) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122814,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        // Write your code here\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122814,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long prod = 1;\n        foreach (long i in arr) {\n            prod = (prod * i) % n;\n        }\n        return prod;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        for (int i = 0; i < arr.Count; i++) {\n            result = (result * arr[i]) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long res = 1;\n        foreach (long i in arr) {\n            res = (res * i) % n;\n        }\n        return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122814,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        // Write your code here\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122814,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        // Write your code here\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122814,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        // Write your code here\n        long result = 1;\n        for (int i = 0; i < arr.Count; i++) {\n            result = (result * arr[i]) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122814,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach(long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long num in arr) {\n            result *= num;\n            result %= n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122814,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        // Write your code here\n        long result = 1;\n        foreach (var item in arr) {\n            result = (result * item) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122814,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        // Write your code here\n        long product = 1;\n        foreach (long i in arr) {\n            product = (product * i) % n;\n        }\n        return product;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122814,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        // Write your code here\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122814,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        // Write your code here\n        long result = 1;\n        for (int i = 0; i < arr.Count; i++) {\n            result = (result * arr[i]) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122814,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        // Write your code here\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122814,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long remainder = 1;\n        foreach (long num in arr) {\n            remainder = (remainder * num) % n;\n        }\n        return remainder;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122814,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long x in arr) {\n            result = (result * x) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122814,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (var item in arr) {\n            result = (result * item) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122814,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (var item in arr) {\n            result = (result * item) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122814,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        // Write your code here\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122814,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        // Write your code here\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long a in arr) {\n            result = (result * a) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        // Write your code here\n        long result = 1;\n        foreach (var item in arr)\n        {\n            result = (result * item) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122814,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        // Write your code here\n        long result = 1;\n        for (int i = 0; i < arr.Count; i++) {\n            result = (result * arr[i]) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122814,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (var item in arr) {\n            result = (result * item) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122814,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long num in arr) {\n            result = (result * num) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the product of the list multiplication modulo n.\n    public static long FindRemainder(List<long> arr, long n) {\n        long result = 1;\n        foreach (long i in arr) {\n            result = (result * i) % n;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)100L, (long)10L, (long)5L, (long)25L, (long)35L, (long)14L})), (11L)) == (9L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)1L, (long)1L})), (1L)) == (0L));\n    Debug.Assert(FindRemainder((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (2L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_415_max_Product",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find a pair with highest product from a given list of integers.\n    public static long MaxProduct(List<long> arr) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_415_max_Product.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxProduct((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)7L, (long)0L, (long)8L, (long)4L}))) == (long)Tuple.Create(7L, 8L));\n    Debug.Assert(MaxProduct((new List<long>(new long[]{(long)0L, (long)-1L, (long)-2L, (long)-4L, (long)5L, (long)0L, (long)-6L}))) == (long)Tuple.Create(-4L, -6L));\n    Debug.Assert(MaxProduct((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (long)Tuple.Create(2L, 3L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        long max = arr[0];\n        long secondMax = arr[1];\n        long min = arr[0];\n        long secondMin = arr[1];\n        for (int i = 0; i < arr.Count; i++) {\n            if (arr[i] > max) {\n                secondMax = max;\n                max = arr[i];\n            } else if (arr[i] > secondMax) {\n                secondMax = arr[i];\n            }\n            if (arr[i] < min) {\n                secondMin = min;\n                min = arr[i];\n            } else if (arr[i] < secondMin) {\n                secondMin = arr[i];\n            }\n        }\n        return Math.Max(max * secondMax, min * secondMin);",
    "        arr.Sort();\n        return Math.Max(arr[0] * arr[1] * arr[arr.Count - 1], arr[arr.Count - 1] * arr[arr.Count - 2] * arr[arr.Count - 3]);",
    "        long max1 = arr[0];\n        long max2 = arr[1];\n        long max3 = arr[2];\n        long min1 = arr[0];\n        long min2 = arr[1];\n        long min3 = arr[2];\n        long max = arr[0] * arr[1] * arr[2];\n        for (int i = 3; i < arr.Count; i++) {\n            if (arr[i] > max1) {\n                max3 = max2;\n                max2 = max1;\n                max1 = arr[i];\n            } else if (arr[i] > max2) {\n                max3 = max2;\n                max2 = arr[i];\n            } else if (arr[i] > max3) {\n                max3 = arr[i];\n            }\n            if (arr[i] < min1) {\n                min3 = min2;\n                min2 = min1;\n                min1 = arr[i];\n            } else if (arr[i] < min2) {\n                min3 = min2;\n                min2 = arr[i];\n            } else if (arr[i] < min3) {\n                min3 = arr[i];\n            }\n            long temp = arr[i] * max1 * max2;\n            if (temp > max) {\n                max = temp;\n            }\n            temp = arr[i] * min1 * min2;\n            if (temp > max) {\n                max = temp;\n            }\n        }\n        return max;",
    "        long max = arr[0];\n        long secondMax = arr[1];\n        long min = arr[0];\n        long secondMin = arr[1];\n        for (int i = 0; i < arr.Count; i++) {\n            if (arr[i] > max) {\n                secondMax = max;\n                max = arr[i];\n            } else if (arr[i] > secondMax) {\n                secondMax = arr[i];\n            }\n            if (arr[i] < min) {\n                secondMin = min;\n                min = arr[i];\n            } else if (arr[i] < secondMin) {\n                secondMin = arr[i];\n            }\n        }\n        return Math.Max(max * secondMax, min * secondMin);",
    "        long max1 = long.MinValue;\n        long max2 = long.MinValue;\n        long max3 = long.MinValue;\n        long min1 = long.MaxValue;\n        long min2 = long.MaxValue;\n        foreach (long n in arr) {\n            if (n > max1) {\n                max3 = max2;\n                max2 = max1;\n                max1 = n;\n            } else if (n > max2) {\n                max3 = max2;\n                max2 = n;\n            } else if (n > max3) {\n                max3 = n;\n            }\n            if (n < min1) {\n                min2 = min1;\n                min1 = n;\n            } else if (n < min2) {\n                min2 = n;\n            }\n        }\n        return Math.Max(max1 * max2 * max3, max1 * min1 * min2);",
    "        long max = arr[0];\n        long secondMax = arr[1];\n        long min = arr[0];\n        long secondMin = arr[1];\n        for (int i = 0; i < arr.Count; i++) {\n            if (arr[i] > max) {\n                secondMax = max;\n                max = arr[i];\n            } else if (arr[i] > secondMax) {\n                secondMax = arr[i];\n            }\n            if (arr[i] < min) {\n                secondMin = min;\n                min = arr[i];\n            } else if (arr[i] < secondMin) {\n                secondMin = arr[i];\n            }\n        }\n        long result = max * secondMax;\n        if (min * secondMin > result) {\n            result = min * secondMin;\n        }\n        return result;",
    "        long max1 = long.MinValue;\n        long max2 = long.MinValue;\n        long max3 = long.MinValue;\n        long min1 = long.MaxValue;\n        long min2 = long.MaxValue;\n        foreach (long num in arr) {\n            if (num > max1) {\n                max3 = max2;\n                max2 = max1;\n                max1 = num;\n            } else if (num > max2) {\n                max3 = max2;\n                max2 = num;\n            } else if (num > max3) {\n                max3 = num;\n            }\n            if (num < min1) {\n                min2 = min1;\n                min1 = num;\n            } else if (num < min2) {\n                min2 = num;\n            }\n        }\n        return Math.Max(max1 * max2 * max3, max1 * min1 * min2);",
    "        if (arr.Count < 2) {\n            throw new ArgumentException(\"Array must contain at least 2 elements\");\n        }\n        long max = arr[0];\n        long secondMax = arr[1];\n        if (secondMax > max) {\n            long tmp = max;\n            max = secondMax;\n            secondMax = tmp;\n        }\n        for (int i = 2; i < arr.Count; i++) {\n            if (arr[i] > max) {\n                secondMax = max;\n                max = arr[i];\n            } else if (arr[i] > secondMax) {\n                secondMax = arr[i];\n            }\n        }\n        return max * secondMax;",
    "        long max = arr[0];\n        long secondMax = arr[1];\n        long maxProduct = max * secondMax;\n        for (int i = 2; i < arr.Count; i++) {\n            if (arr[i] > max) {\n                secondMax = max;\n                max = arr[i];\n            } else if (arr[i] > secondMax) {\n                secondMax = arr[i];\n            }\n            maxProduct = Math.Max(maxProduct, max * secondMax);\n        }\n        return maxProduct;",
    "        long max = arr[0];\n        long min = arr[0];\n        long maxProduct = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            long temp = max;\n            max = Math.Max(Math.Max(max * arr[i], min * arr[i]), arr[i]);\n            min = Math.Min(Math.Min(temp * arr[i], min * arr[i]), arr[i]);\n            if (max > maxProduct) {\n                maxProduct = max;\n            }\n        }\n        return maxProduct;",
    "        long max = arr[0];\n        long secondMax = arr[1];\n        long min = arr[0];\n        long secondMin = arr[1];\n        for (int i = 2; i < arr.Count; i++) {\n            long curr = arr[i];\n            if (curr > max) {\n                secondMax = max;\n                max = curr;\n            } else if (curr > secondMax) {\n                secondMax = curr;\n            }\n            if (curr < min) {\n                secondMin = min;\n                min = curr;\n            } else if (curr < secondMin) {\n                secondMin = curr;\n            }\n        }\n        return Math.Max(max * secondMax, min * secondMin);",
    "        long max1 = arr[0];\n        long max2 = arr[1];\n        long max3 = arr[2];\n        long min1 = arr[0];\n        long min2 = arr[1];\n        long min3 = arr[2];\n        for (int i = 3; i < arr.Count; i++) {\n            if (arr[i] > max1) {\n                max3 = max2;\n                max2 = max1;\n                max1 = arr[i];\n            } else if (arr[i] > max2) {\n                max3 = max2;\n                max2 = arr[i];\n            } else if (arr[i] > max3) {\n                max3 = arr[i];\n            }\n            if (arr[i] < min1) {\n                min3 = min2;\n                min2 = min1;\n                min1 = arr[i];\n            } else if (arr[i] < min2) {\n                min3 = min2;\n                min2 = arr[i];\n            } else if (arr[i] < min3) {\n                min3 = arr[i];\n            }\n        }\n        return Math.Max(max1 * max2 * max3, max1 * min1 * min2);",
    "        long max1 = long.MinValue;\n        long max2 = long.MinValue;\n        long max3 = long.MinValue;\n        long min1 = long.MaxValue;\n        long min2 = long.MaxValue;\n        foreach (long num in arr) {\n            if (num > max1) {\n                max3 = max2;\n                max2 = max1;\n                max1 = num;\n            } else if (num > max2) {\n                max3 = max2;\n                max2 = num;\n            } else if (num > max3) {\n                max3 = num;\n            }\n            if (num < min1) {\n                min2 = min1;\n                min1 = num;\n            } else if (num < min2) {\n                min2 = num;\n            }\n        }\n        return Math.Max(max1 * max2 * max3, max1 * min1 * min2);",
    "        long max1 = arr[0];\n        long max2 = arr[1];\n        long min1 = arr[0];\n        long min2 = arr[1];\n        for (int i = 2; i < arr.Count; i++) {\n            if (arr[i] > max1) {\n                max2 = max1;\n                max1 = arr[i];\n            } else if (arr[i] > max2) {\n                max2 = arr[i];\n            }\n            if (arr[i] < min1) {\n                min2 = min1;\n                min1 = arr[i];\n            } else if (arr[i] < min2) {\n                min2 = arr[i];\n            }\n        }\n        return Math.Max(max1 * max2, min1 * min2);",
    "        long max = arr[0];\n        long min = arr[0];\n        long result = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] < 0) {\n                long temp = max;\n                max = min;\n                min = temp;\n            }\n            max = Math.Max(arr[i], max * arr[i]);\n            min = Math.Min(arr[i], min * arr[i]);\n            result = Math.Max(result, max);\n        }\n        return result;",
    "        long max = arr[0];\n        long secondMax = arr[1];\n        if (max < secondMax) {\n            long temp = max;\n            max = secondMax;\n            secondMax = temp;\n        }\n        for (int i = 2; i < arr.Count; i++) {\n            if (arr[i] > max) {\n                secondMax = max;\n                max = arr[i];\n            } else if (arr[i] > secondMax) {\n                secondMax = arr[i];\n            }\n        }\n        return max * secondMax;",
    "        long max1 = arr[0];\n        long max2 = arr[1];\n        long min1 = arr[0];\n        long min2 = arr[1];\n        long max = arr[0] * arr[1];\n        for (int i = 2; i < arr.Count; i++) {\n            long curr = arr[i];\n            if (curr > max1) {\n                max2 = max1;\n                max1 = curr;\n            } else if (curr > max2) {\n                max2 = curr;\n            }\n            if (curr < min1) {\n                min2 = min1;\n                min1 = curr;\n            } else if (curr < min2) {\n                min2 = curr;\n            }\n            if (curr * max1 > max) {\n                max = curr * max1;\n            }\n            if (curr * min1 > max) {\n                max = curr * min1;\n            }\n        }\n        return max;",
    "        long max1 = arr[0];\n        long max2 = arr[1];\n        long min1 = arr[0];\n        long min2 = arr[1];\n        for (int i = 2; i < arr.Count; i++) {\n            if (arr[i] > max1) {\n                max2 = max1;\n                max1 = arr[i];\n            } else if (arr[i] > max2) {\n                max2 = arr[i];\n            }\n            if (arr[i] < min1) {\n                min2 = min1;\n                min1 = arr[i];\n            } else if (arr[i] < min2) {\n                min2 = arr[i];\n            }\n        }\n        return Math.Max(max1 * max2, min1 * min2);",
    "        // Sort the array in descending order\n        arr.Sort();\n        arr.Reverse();\n        // Return the product of the first two elements\n        return arr[0] * arr[1];",
    "        long max1 = long.MinValue;\n        long max2 = long.MinValue;\n        long max3 = long.MinValue;\n        long min1 = long.MaxValue;\n        long min2 = long.MaxValue;\n        foreach (long x in arr) {\n            if (x > max1) {\n                max3 = max2;\n                max2 = max1;\n                max1 = x;\n            } else if (x > max2) {\n                max3 = max2;\n                max2 = x;\n            } else if (x > max3) {\n                max3 = x;\n            }\n            if (x < min1) {\n                min2 = min1;\n                min1 = x;\n            } else if (x < min2) {\n                min2 = x;\n            }\n        }\n        return Math.Max(max1 * max2 * max3, max1 * min1 * min2);"
  ]
}
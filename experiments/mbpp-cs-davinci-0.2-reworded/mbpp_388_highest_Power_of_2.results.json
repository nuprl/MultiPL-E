{
  "name": "mbpp_388_highest_Power_of_2",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_388_highest_Power_of_2.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long highestPowerOf2 = 1;\n        while (highestPowerOf2 <= n) {\n            highestPowerOf2 *= 2;\n        }\n        return highestPowerOf2 / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long highestPowerOf2 = 1;\n        while (highestPowerOf2 <= n) {\n            highestPowerOf2 *= 2;\n        }\n        return highestPowerOf2 / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long highest = 1;\n        while (highest <= n) {\n            highest *= 2;\n        }\n        return highest / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123402,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p <<= 1;\n        }\n        return p >> 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123402,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        return (long)Math.Pow(2, Math.Floor(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123402,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        // Your code here\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123402,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long res = 1;\n        while (res <= n) {\n            res *= 2;\n        }\n        return res / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123402,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long res = 1;\n        while (res <= n) {\n            res *= 2;\n        }\n        return res / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123402,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        // Your code here\n        long i = 1;\n        while (i <= n) {\n            i *= 2;\n        }\n        return i/2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123402,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result <<= 1;\n        }\n        return result >> 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123402,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long highest = 1;\n        while (highest <= n) {\n            highest *= 2;\n        }\n        return highest / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123402,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        // TODO: Implement this function\n        long i = 1;\n        while (i < n) {\n            i *= 2;\n        }\n        return i / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123402,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3bac9543912547e6a6840e2fca67d4f5>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result <<= 1;\n        }\n        return result >> 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123402,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result <<= 1;\n        }\n        return result >> 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123402,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long highest = 1;\n        while (highest * 2 <= n) {\n            highest *= 2;\n        }\n        return highest;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123402,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        // n = n | (n >> 1);\n        // n = n | (n >> 2);\n        // n = n | (n >> 4);\n        // n = n | (n >> 8);\n        // n = n | (n >> 16);\n        // n = n | (n >> 32);\n        // return (n + 1) >> 1;\n        // return (long)Math.Pow(2, (int)Math.Log(n, 2));\n        return 1L << (int)(Math.Log(n, 2));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123402,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long i = 1;\n        while (i <= n) {\n            i *= 2;\n        }\n        return i / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123402,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        // Your code here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123402,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d153f7150e984609b06685070bf6a702>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d153f7150e984609b06685070bf6a702>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long i = 1;\n        while (i <= n) {\n            i *= 2;\n        }\n        return i / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123402,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long highestPower = 1;\n        while (highestPower <= n) {\n            highestPower *= 2;\n        }\n        return highestPower / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123402,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        // Your code goes here.\n        long i = 1;\n        while (i <= n) {\n            i *= 2;\n        }\n        return i / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123402,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p <<= 1;\n        }\n        return p >> 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123402,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long res = 1;\n        while (res <= n) {\n            res *= 2;\n        }\n        return res / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123402,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result <<= 1;\n        }\n        return result >> 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123402,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long highest = 1;\n        while (highest <= n) {\n            highest *= 2;\n        }\n        return highest / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123402,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        // Fill in the code here.\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123402,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long highestPower = 1;\n        while (highestPower <= n) {\n            highestPower *= 2;\n        }\n        return highestPower / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123402,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        // We start with the highest power of 2 that is less than or equal to n.\n        long power = 1;\n        while (power <= n) {\n            power *= 2;\n        }\n        // We return the highest power of 2 that is less than n.\n        return power / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123402,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        if (n < 1) {\n            return 0;\n        }\n        long highestPower = 1;\n        while (highestPower <= n) {\n            highestPower *= 2;\n        }\n        return highestPower / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123402,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        return (long)Math.Pow(2, Math.Floor(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123402,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result < n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123402,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1e6f9a23a93c479a9d5f9ab267950d4f>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long res = 1;\n        while (res <= n) {\n            res *= 2;\n        }\n        return res / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123402,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        // Write your code here.\n        // return 0;\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123402,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result <<= 1;\n        }\n        return result >> 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123402,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p <<= 1;\n        }\n        return p >> 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123402,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result <<= 1;\n        }\n        return result >> 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123402,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p <<= 1;\n        }\n        return p >> 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123402,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long res = 1;\n        while (res <= n) {\n            res *= 2;\n        }\n        return res / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123402,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result <<= 1;\n        }\n        return result >> 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123402,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long highest = 1;\n        while (highest <= n) {\n            highest *= 2;\n        }\n        return highest / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123402,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long highestPower = 1;\n        while (highestPower <= n) {\n            highestPower *= 2;\n        }\n        return highestPower / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1666123402,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long result = 1;\n        while (result <= n) {\n            result *= 2;\n        }\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the highest power of 2 that is less than or equal to n.\n    public static long HighestPowerOf2(long n) {\n        long p = 1;\n        while (p <= n) {\n            p *= 2;\n        }\n        return p / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HighestPowerOf2((10L)) == (8L));\n    Debug.Assert(HighestPowerOf2((19L)) == (16L));\n    Debug.Assert(HighestPowerOf2((32L)) == (32L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
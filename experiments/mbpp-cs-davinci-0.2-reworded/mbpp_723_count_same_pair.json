{
  "name": "mbpp_723_count_same_pair",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // The input is defined as two lists of the same length. Write a function to count indices where the lists have the same values.\n    public static long CountSamePair(List<long> nums1, List<long> nums2) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_723_count_same_pair.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSamePair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L})), (new List<long>(new long[]{(long)2L, (long)2L, (long)3L, (long)1L, (long)2L, (long)6L, (long)7L, (long)9L}))) == (4L));\n    Debug.Assert(CountSamePair((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)-1L, (long)-5L, (long)6L, (long)0L, (long)-3L, (long)-2L, (long)3L, (long)4L, (long)6L, (long)8L})), (new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)-1L, (long)-5L, (long)6L, (long)4L, (long)-3L, (long)-2L, (long)3L, (long)4L, (long)6L, (long)8L}))) == (11L));\n    Debug.Assert(CountSamePair((new List<long>(new long[]{(long)2L, (long)4L, (long)-6L, (long)-9L, (long)11L, (long)-12L, (long)14L, (long)-5L, (long)17L})), (new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)-1L, (long)-5L, (long)6L, (long)4L, (long)-3L, (long)-2L, (long)3L, (long)4L, (long)6L, (long)8L}))) == (1L));\n    Debug.Assert(CountSamePair((new List<long>(new long[]{(long)0L, (long)1L, (long)1L, (long)2L})), (new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)2L}))) == (3L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        // Your code here.\n        return 0;",
    "        // TODO: Implement this function.\n        return 0;",
    "        // Your code here.",
    "        long count = 0;\n        for (int i = 0; i < nums1.Count; i++) {\n            if (nums1[i] == nums2[i]) {\n                count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < nums1.Count; i++) {\n            if (nums1[i] == nums2[i]) {\n                count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < nums1.Count; i++) {\n            if (nums1[i] == nums2[i]) {\n                count++;\n            }\n        }\n        return count;",
    "        // Your code here\n        return 0;",
    "        // Your code here\n        return 0;",
    "        long count = 0;\n        for (int i = 0; i < nums1.Count; i++) {\n            if (nums1[i] == nums2[i]) {\n                count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < nums1.Count; i++) {\n            if (nums1[i] == nums2[i]) {\n                count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < nums1.Count; i++) {\n            if (nums1[i] == nums2[i]) {\n                count++;\n            }\n        }\n        return count;",
    "        // Your code here\n        return 0;",
    "        long count = 0;\n        for (int i = 0; i < nums1.Count; i++) {\n            if (nums1[i] == nums2[i]) {\n                count++;\n            }\n        }\n        return count;",
    "        // Your code here\n        return 0;",
    "        long count = 0;\n        for (int i = 0; i < nums1.Count; i++) {\n            if (nums1[i] == nums2[i]) {\n                count++;\n            }\n        }\n        return count;",
    "        // TODO: Implement this function.\n        return 0;",
    "        long count = 0;\n        for (int i = 0; i < nums1.Count; i++) {\n            if (nums1[i] == nums2[i]) {\n                count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < nums1.Count; i++) {\n            if (nums1[i] == nums2[i]) {\n                count++;\n            }\n        }\n        return count;",
    "        // Your code here\n        return 0;",
    "        // Write your code here\n        return 0;"
  ]
}
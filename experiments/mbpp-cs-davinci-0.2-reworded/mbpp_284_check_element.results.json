{
  "name": "mbpp_284_check_element",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_284_check_element.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return list.Equals(element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bljm1vt.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            var intList = (List<int>)list;\n            var intElement = (int)element;\n            foreach (var item in intList) {\n                if (item != intElement) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<string>) {\n            var stringList = (List<string>)list;\n            var stringElement = (string)element;\n            foreach (var item in stringList) {\n                if (item != stringElement) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<char>) {\n            var charList = (List<char>)list;\n            var charElement = (char)element;\n            foreach (var item in charList) {\n                if (item != charElement) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<bool>) {\n            var boolList = (List<bool>)list;\n            var boolElement = (bool)element;\n            foreach (var item in boolList) {\n                if (item != boolElement) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<double>) {\n            var doubleList = (List<double>)list;\n            var doubleElement = (double)element;\n            foreach (var item in doubleList) {\n                if (item != doubleElement) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<float>) {\n            var floatList = (List<float>)list;\n            var floatElement = (float)element;\n            foreach (var item in floatList) {\n                if (item != floatElement) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<long>) {\n            var longList = (List<long>)list;\n            var longElement = (long)element;\n            foreach (var item in longList) {\n                if (item != longElement) {\n                    return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpesqw8fy7.cs(72,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpesqw8fy7.cs(73,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpesqw8fy7.cs(74,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpesqw8fy7.cs(75,128): error CS1525: Invalid expression term 'object'\n/tmp/tmpesqw8fy7.cs(78,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> list2 = (List<int>)list;\n            int element2 = (int)element;\n            for (int i = 0; i < list2.Count; i++) {\n                if (list2[i] != element2) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<string>) {\n            List<string> list2 = (List<string>)list;\n            string element2 = (string)element;\n            for (int i = 0; i < list2.Count; i++) {\n                if (list2[i] != element2) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<double>) {\n            List<double> list2 = (List<double>)list;\n            double element2 = (double)element;\n            for (int i = 0; i < list2.Count; i++) {\n                if (list2[i] != element2) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<float>) {\n            List<float> list2 = (List<float>)list;\n            float element2 = (float)element;\n            for (int i = 0; i < list2.Count; i++) {\n                if (list2[i] != element2) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<long>) {\n            List<long> list2 = (List<long>)list;\n            long element2 = (long)element;\n            for (int i = 0; i < list2.Count; i++) {\n                if (list2[i] != element2) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<bool>) {\n            List<bool> list2 = (List<bool>)list;\n            bool element2 = (bool)element;\n            for (int i = 0; i < list2.Count; i++) {\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8b968jfb.cs(66,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmp8b968jfb.cs(67,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8b968jfb.cs(68,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8b968jfb.cs(69,128): error CS1525: Invalid expression term 'object'\n/tmp/tmp8b968jfb.cs(72,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return list.Equals(element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bljm1vt.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Write your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpsr8u1v3i.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpsr8u1v3i.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpsr8u1v3i.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjlxtp9cu.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<object>) {\n            foreach (object item in (List<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1q0y3vwf.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp1q0y3vwf.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp1q0y3vwf.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (var item in (IEnumerable<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmps8smym3f.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmps8smym3f.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmps8smym3f.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> l = (List<int>)list;\n            int e = (int)element;\n            for (int i = 0; i < l.Count; i++) {\n                if (l[i] != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<string>) {\n            List<string> l = (List<string>)list;\n            string e = (string)element;\n            for (int i = 0; i < l.Count; i++) {\n                if (l[i] != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<double>) {\n            List<double> l = (List<double>)list;\n            double e = (double)element;\n            for (int i = 0; i < l.Count; i++) {\n                if (l[i] != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<float>) {\n            List<float> l = (List<float>)list;\n            float e = (float)element;\n            for (int i = 0; i < l.Count; i++) {\n                if (l[i] != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<long>) {\n            List<long> l = (List<long>)list;\n            long e = (long)element;\n            for (int i = 0; i < l.Count; i++) {\n                if (l[i] != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<bool>) {\n            List<bool> l = (List<bool>)list;\n            bool e = (bool)element;\n            for (int i = 0; i < l.Count; i++) {\n                if (l[i] != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpuja9lxr0.cs(65,33): error CS1525: Invalid expression term '}'\n/tmp/tmpuja9lxr0.cs(65,33): error CS1026: ) expected\n/tmp/tmpuja9lxr0.cs(65,33): error CS1002: ; expected\n/tmp/tmpuja9lxr0.cs(68,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpuja9lxr0.cs(69,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpuja9lxr0.cs(70,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> intList = (List<int>)list;\n            int intElement = (int)element;\n            foreach (int i in intList) {\n                if (i != intElement) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<string>) {\n            List<string> stringList = (List<string>)list;\n            string stringElement = (string)element;\n            foreach (string s in stringList) {\n                if (s != stringElement) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<char>) {\n            List<char> charList = (List<char>)list;\n            char charElement = (char)element;\n            foreach (char c in charList) {\n                if (c != charElement) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<bool>) {\n            List<bool> boolList = (List<bool>)list;\n            bool boolElement = (bool)element;\n            foreach (bool b in boolList) {\n                if (b != boolElement) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<float>) {\n            List<float> floatList = (List<float>)list;\n            float floatElement = (float)element;\n            foreach (float f in floatList) {\n                if (f != floatElement) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<double>) {\n            List<double> doubleList = (List<double>)list;\n            double doubleElement = (double)element;\n            foreach (double d in doubleList) {\n                if (d != doubleElement) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<long>) {\n            List<long> longList = (List<long>)list;\n            long longElement = (long)element;\n            foreach (long\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpyys9mvod.cs(68,22): error CS1525: Invalid expression term 'long'\n/tmp/tmpyys9mvod.cs(68,26): error CS1515: 'in' expected\n/tmp/tmpyys9mvod.cs(68,26): error CS0230: Type and identifier are both required in a foreach statement\n/tmp/tmpyys9mvod.cs(68,26): error CS1525: Invalid expression term '}'\n/tmp/tmpyys9mvod.cs(68,26): error CS1026: ) expected\n/tmp/tmpyys9mvod.cs(68,26): error CS1002: ; expected\n/tmp/tmpyys9mvod.cs(70,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpyys9mvod.cs(71,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpyys9mvod.cs(72,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpyys9mvod.cs(73,128): error CS1525: Invalid expression term 'object'\n/tmp/tmpyys9mvod.cs(76,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Write your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpsr8u1v3i.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpsr8u1v3i.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpsr8u1v3i.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjlxtp9cu.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjlxtp9cu.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            var l = list as List<int>;\n            return l.All(x => x == (int)element);\n        }\n        if (list is List<string>) {\n            var l = list as List<string>;\n            return l.All(x => x == (string)element);\n        }\n        if (list is List<double>) {\n            var l = list as List<double>;\n            return l.All(x => x == (double)element);\n        }\n        if (list is List<float>) {\n            var l = list as List<float>;\n            return l.All(x => x == (float)element);\n        }\n        if (list is List<char>) {\n            var l = list as List<char>;\n            return l.All(x => x == (char)element);\n        }\n        if (list is List<bool>) {\n            var l = list as List<bool>;\n            return l.All(x => x == (bool)element);\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpg2jyt62t.cs(38,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpg2jyt62t.cs(39,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpg2jyt62t.cs(40,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjlxtp9cu.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return list.Equals(element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bljm1vt.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (var item in (IEnumerable<object>)list) {\n                if (!item.Equals(element)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpj8ufrljg.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpj8ufrljg.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpj8ufrljg.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return list.Equals(element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bljm1vt.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjlxtp9cu.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here.\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8ealjyd8.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8ealjyd8.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8ealjyd8.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (var item in (IEnumerable<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmps8smym3f.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmps8smym3f.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmps8smym3f.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkrkr2lvi.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpkrkr2lvi.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpkrkr2lvi.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is string) {\n            string str = (string)list;\n            if (element is string) {\n                string str2 = (string)element;\n                for (int i = 0; i < str.Length; i++) {\n                    if (str[i] != str2[0]) {\n                        return false;\n                    }\n                }\n                return true;\n            }\n            else {\n                return false;\n            }\n        }\n        else if (list is int[]) {\n            int[] arr = (int[])list;\n            if (element is int) {\n                int num = (int)element;\n                for (int i = 0; i < arr.Length; i++) {\n                    if (arr[i] != num) {\n                        return false;\n                    }\n                }\n                return true;\n            }\n            else {\n                return false;\n            }\n        }\n        else {\n            return false;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpqtsrla1h.cs(46,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpqtsrla1h.cs(47,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpqtsrla1h.cs(48,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3u2r1s0x.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp3u2r1s0x.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp3u2r1s0x.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if(list is IEnumerable<object>) {\n            foreach(object item in (IEnumerable<object>)list) {\n                if(item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpmy7at6ks.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpmy7at6ks.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpmy7at6ks.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<object>) {\n            foreach (var item in (List<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcp2a29zq.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpcp2a29zq.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpcp2a29zq.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return list.Equals(element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bljm1vt.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjlxtp9cu.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here.\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8ealjyd8.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8ealjyd8.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8ealjyd8.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object> listOfObjects) {\n            foreach (object obj in listOfObjects) {\n                if (!obj.Equals(element)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpu_bn30yc.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpu_bn30yc.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpu_bn30yc.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here.\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8ealjyd8.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8ealjyd8.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8ealjyd8.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkrkr2lvi.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpkrkr2lvi.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpkrkr2lvi.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> listInt = (List<int>)list;\n            int elementInt = (int)element;\n            foreach (int i in listInt) {\n                if (i != elementInt) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<double>) {\n            List<double> listDouble = (List<double>)list;\n            double elementDouble = (double)element;\n            foreach (double i in listDouble) {\n                if (i != elementDouble) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<string>) {\n            List<string> listString = (List<string>)list;\n            string elementString = (string)element;\n            foreach (string i in listString) {\n                if (i != elementString) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<char>) {\n            List<char> listChar = (List<char>)list;\n            char elementChar = (char)element;\n            foreach (char i in listChar) {\n                if (i != elementChar) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<bool>) {\n            List<bool> listBool = (List<bool>)list;\n            bool elementBool = (bool)element;\n            foreach (bool i in listBool) {\n                if (i != elementBool) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8w9m1tc3.cs(64,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8w9m1tc3.cs(65,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8w9m1tc3.cs(66,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkrkr2lvi.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpkrkr2lvi.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpkrkr2lvi.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3u2r1s0x.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp3u2r1s0x.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp3u2r1s0x.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjlxtp9cu.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> l = (List<int>)list;\n            int e = (int)element;\n            for (int i = 0; i < l.Count; i++) {\n                if (l[i] != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<string>) {\n            List<string> l = (List<string>)list;\n            string e = (string)element;\n            for (int i = 0; i < l.Count; i++) {\n                if (l[i] != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<double>) {\n            List<double> l = (List<double>)list;\n            double e = (double)element;\n            for (int i = 0; i < l.Count; i++) {\n                if (l[i] != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<float>) {\n            List<float> l = (List<float>)list;\n            float e = (float)element;\n            for (int i = 0; i < l.Count; i++) {\n                if (l[i] != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<char>) {\n            List<char> l = (List<char>)list;\n            char e = (char)element;\n            for (int i = 0; i < l.Count; i++) {\n                if (l[i] != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<bool>) {\n            List<bool> l = (List<bool>)list;\n            bool e = (bool)element;\n            for (int i = 0; i < l.Count; i++) {\n                if (l[i] != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else {\n            return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmppguul7r_.cs(68,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmppguul7r_.cs(69,129): error CS1525: Invalid expression term 'object'\n/tmp/tmppguul7r_.cs(70,98): error CS1525: Invalid expression term 'object'\n/tmp/tmppguul7r_.cs(71,128): error CS1525: Invalid expression term 'object'\n/tmp/tmppguul7r_.cs(74,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is int[]) {\n            int[] arr = (int[])list;\n            for (int i = 0; i < arr.Length; i++) {\n                if (arr[i] != (int)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is string[]) {\n            string[] arr = (string[])list;\n            for (int i = 0; i < arr.Length; i++) {\n                if (arr[i] != (string)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is char[]) {\n            char[] arr = (char[])list;\n            for (int i = 0; i < arr.Length; i++) {\n                if (arr[i] != (char)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is double[]) {\n            double[] arr = (double[])list;\n            for (int i = 0; i < arr.Length; i++) {\n                if (arr[i] != (double)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is float[]) {\n            float[] arr = (float[])list;\n            for (int i = 0; i < arr.Length; i++) {\n                if (arr[i] != (float)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is long[]) {\n            long[] arr = (long[])list;\n            for (int i = 0; i < arr.Length; i++) {\n                if (arr[i] != (long)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is bool[]) {\n            bool[] arr = (bool[])list;\n            for (int i = 0; i < arr.Length; i++) {\n                if (arr[i] != (bool)element) {\n                    return false;\n               \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpaw_q5m2t.cs(72,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpaw_q5m2t.cs(73,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpaw_q5m2t.cs(74,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpaw_q5m2t.cs(75,128): error CS1525: Invalid expression term 'object'\n/tmp/tmpaw_q5m2t.cs(78,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (var item in (IEnumerable<object>)list) {\n                if (!item.Equals(element)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpj8ufrljg.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpj8ufrljg.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpj8ufrljg.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> l = (List<int>)list;\n            int e = (int)element;\n            foreach (int i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<string>) {\n            List<string> l = (List<string>)list;\n            string e = (string)element;\n            foreach (string i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<char>) {\n            List<char> l = (List<char>)list;\n            char e = (char)element;\n            foreach (char i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<bool>) {\n            List<bool> l = (List<bool>)list;\n            bool e = (bool)element;\n            foreach (bool i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<double>) {\n            List<double> l = (List<double>)list;\n            double e = (double)element;\n            foreach (double i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<float>) {\n            List<float> l = (List<float>)list;\n            float e = (float)element;\n            foreach (float i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<long>) {\n            List<long> l = (List<long>)list;\n            long e = (long)element;\n            foreach (long i in l) {\n                if (i != e) {\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp26g0361g.cs(77,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmp26g0361g.cs(78,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp26g0361g.cs(79,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp26g0361g.cs(80,128): error CS1525: Invalid expression term 'object'\n/tmp/tmp26g0361g.cs(83,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here.\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8ealjyd8.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8ealjyd8.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8ealjyd8.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<object>) {\n            foreach (object item in (List<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1q0y3vwf.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp1q0y3vwf.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp1q0y3vwf.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (var item in (IEnumerable<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmps8smym3f.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmps8smym3f.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmps8smym3f.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjlxtp9cu.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjlxtp9cu.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (var item in (IEnumerable<object>)list) {\n                if (!item.Equals(element)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpj8ufrljg.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpj8ufrljg.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpj8ufrljg.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> listInt = (List<int>)list;\n            int elementInt = (int)element;\n            for (int i = 0; i < listInt.Count; i++) {\n                if (listInt[i] != elementInt) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<double>) {\n            List<double> listDouble = (List<double>)list;\n            double elementDouble = (double)element;\n            for (int i = 0; i < listDouble.Count; i++) {\n                if (listDouble[i] != elementDouble) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<string>) {\n            List<string> listString = (List<string>)list;\n            string elementString = (string)element;\n            for (int i = 0; i < listString.Count; i++) {\n                if (listString[i] != elementString) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<char>) {\n            List<char> listChar = (List<char>)list;\n            char elementChar = (char)element;\n            for (int i = 0; i < listChar.Count; i++) {\n                if (listChar[i] != elementChar) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<bool>) {\n            List<bool> listBool = (List<bool>)list;\n            bool elementBool = (bool)element;\n            for (int i = 0; i < listBool.Count; i++) {\n                if (listBool[i] != elementBool) {\n                    return false;\n                }\n            }\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp20kqvaec.cs(61,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp20kqvaec.cs(62,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp20kqvaec.cs(63,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return list.Equals(element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bljm1vt.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> intList = (List<int>)list;\n            int intElement = (int)element;\n            foreach (int item in intList) {\n                if (item != intElement) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<string>) {\n            List<string> stringList = (List<string>)list;\n            string stringElement = (string)element;\n            foreach (string item in stringList) {\n                if (item != stringElement) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<char>) {\n            List<char> charList = (List<char>)list;\n            char charElement = (char)element;\n            foreach (char item in charList) {\n                if (item != charElement) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<double>) {\n            List<double> doubleList = (List<double>)list;\n            double doubleElement = (double)element;\n            foreach (double item in doubleList) {\n                if (item != doubleElement) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<float>) {\n            List<float> floatList = (List<float>)list;\n            float floatElement = (float)element;\n            foreach (float item in floatList) {\n                if (item != floatElement) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<bool>) {\n            List<bool> boolList = (List<bool>)list;\n            bool boolElement = (bool)element;\n            foreach (bool item in boolList) {\n                if (item != boolElement) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<byte>) {\n            List<byte> byteList = (List<byte>)list;\n            byte byteElement\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3z4i6jqx.cs(73,29): error CS1002: ; expected\n/tmp/tmp3z4i6jqx.cs(75,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmp3z4i6jqx.cs(76,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp3z4i6jqx.cs(77,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp3z4i6jqx.cs(78,128): error CS1525: Invalid expression term 'object'\n/tmp/tmp3z4i6jqx.cs(81,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3u2r1s0x.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp3u2r1s0x.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp3u2r1s0x.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object o in (IEnumerable<object>)list) {\n                if (!o.Equals(element)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp48cnu7_6.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp48cnu7_6.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp48cnu7_6.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            foreach (int item in (List<int>)list) {\n                if (item != (int)element) {\n                    return false;\n                }\n            }\n        } else if (list is List<string>) {\n            foreach (string item in (List<string>)list) {\n                if (item != (string)element) {\n                    return false;\n                }\n            }\n        } else if (list is List<double>) {\n            foreach (double item in (List<double>)list) {\n                if (item != (double)element) {\n                    return false;\n                }\n            }\n        } else if (list is List<float>) {\n            foreach (float item in (List<float>)list) {\n                if (item != (float)element) {\n                    return false;\n                }\n            }\n        } else if (list is List<char>) {\n            foreach (char item in (List<char>)list) {\n                if (item != (char)element) {\n                    return false;\n                }\n            }\n        } else if (list is List<bool>) {\n            foreach (bool item in (List<bool>)list) {\n                if (item != (bool)element) {\n                    return false;\n                }\n            }\n        } else if (list is List<object>) {\n            foreach (object item in (List<object>)list) {\n                if (item != (object)element) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvdlz4urd.cs(57,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpvdlz4urd.cs(58,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpvdlz4urd.cs(59,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<object>) {\n            foreach (object item in (List<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is string) {\n            foreach (char item in (string)list) {\n                if (item != (char)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is int[]) {\n            foreach (int item in (int[])list) {\n                if (item != (int)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is double[]) {\n            foreach (double item in (double[])list) {\n                if (item != (double)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is float[]) {\n            foreach (float item in (float[])list) {\n                if (item != (float)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is long[]) {\n            foreach (long item in (long[])list) {\n                if (item != (long)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is short[]) {\n            foreach (short item in (short[])list) {\n                if (item != (short)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is byte[]) {\n            foreach (byte item in (byte[])list) {\n                if (item != (byte)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is sbyte[]) {\n            foreach (sbyte item in (sbyte[])list) {\n                if (item != (sbyte)element) {\n                    return false;\n                }\n            }\n            return true;\n       \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpz11eu_c8.cs(84,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpz11eu_c8.cs(85,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpz11eu_c8.cs(86,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpz11eu_c8.cs(87,128): error CS1525: Invalid expression term 'object'\n/tmp/tmpz11eu_c8.cs(90,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjlxtp9cu.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            foreach (int i in (List<int>)list) {\n                if (i != (int)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<string>) {\n            foreach (string s in (List<string>)list) {\n                if (s != (string)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<char>) {\n            foreach (char c in (List<char>)list) {\n                if (c != (char)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<bool>) {\n            foreach (bool b in (List<bool>)list) {\n                if (b != (bool)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<double>) {\n            foreach (double d in (List<double>)list) {\n                if (d != (double)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<float>) {\n            foreach (float f in (List<float>)list) {\n                if (f != (float)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<long>) {\n            foreach (long l in (List<long>)list) {\n                if (l != (long)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<byte>) {\n            foreach (byte b in (List<byte>)list) {\n                if (b != (byte)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<sbyte>) {\n            foreach (sbyte sb in (List<sbyte>)list) {\n                if (sb != (sbyte)element) {\n                    return false\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpetka53d7.cs(78,33): error CS1002: ; expected\n/tmp/tmpetka53d7.cs(80,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpetka53d7.cs(81,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpetka53d7.cs(82,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpetka53d7.cs(83,128): error CS1525: Invalid expression term 'object'\n/tmp/tmpetka53d7.cs(86,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> l = (List<int>)list;\n            int e = (int)element;\n            foreach (int i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<double>) {\n            List<double> l = (List<double>)list;\n            double e = (double)element;\n            foreach (double i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<string>) {\n            List<string> l = (List<string>)list;\n            string e = (string)element;\n            foreach (string i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<char>) {\n            List<char> l = (List<char>)list;\n            char e = (char)element;\n            foreach (char i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<bool>) {\n            List<bool> l = (List<bool>)list;\n            bool e = (bool)element;\n            foreach (bool i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpeg9xdycy.cs(64,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpeg9xdycy.cs(65,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpeg9xdycy.cs(66,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> l = (List<int>)list;\n            foreach (int i in l) {\n                if (i != (int)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<double>) {\n            List<double> l = (List<double>)list;\n            foreach (double i in l) {\n                if (i != (double)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<string>) {\n            List<string> l = (List<string>)list;\n            foreach (string i in l) {\n                if (i != (string)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<char>) {\n            List<char> l = (List<char>)list;\n            foreach (char i in l) {\n                if (i != (char)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<bool>) {\n            List<bool> l = (List<bool>)list;\n            foreach (bool i in l) {\n                if (i != (bool)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<object>) {\n            List<object> l = (List<object>)list;\n            foreach (object i in l) {\n                if (i != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmphrxtxa9c.cs(68,129): error CS1525: Invalid expression term 'object'\n/tmp/tmphrxtxa9c.cs(69,98): error CS1525: Invalid expression term 'object'\n/tmp/tmphrxtxa9c.cs(70,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjlxtp9cu.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return list.Equals(element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bljm1vt.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return list.Equals(element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bljm1vt.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3u2r1s0x.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp3u2r1s0x.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp3u2r1s0x.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> list1 = (List<int>)list;\n            int element1 = (int)element;\n            foreach (int i in list1) {\n                if (i != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<string>) {\n            List<string> list1 = (List<string>)list;\n            string element1 = (string)element;\n            foreach (string i in list1) {\n                if (i != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<double>) {\n            List<double> list1 = (List<double>)list;\n            double element1 = (double)element;\n            foreach (double i in list1) {\n                if (i != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<float>) {\n            List<float> list1 = (List<float>)list;\n            float element1 = (float)element;\n            foreach (float i in list1) {\n                if (i != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<char>) {\n            List<char> list1 = (List<char>)list;\n            char element1 = (char)element;\n            foreach (char i in list1) {\n                if (i != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<bool>) {\n            List<bool> list1 = (List<bool>)list;\n            bool element1 = (bool)element;\n            foreach (bool i in list1) {\n                if (i != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<byte>) {\n            List<byte> list1 = (List<byte>)list;\n            byte element1 = (byte)element;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpagvlsrsu.cs(75,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpagvlsrsu.cs(76,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpagvlsrsu.cs(77,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpagvlsrsu.cs(78,128): error CS1525: Invalid expression term 'object'\n/tmp/tmpagvlsrsu.cs(81,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return list.Equals(element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bljm1vt.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> intList = (List<int>)list;\n            int intElement = (int)element;\n            foreach (int i in intList) {\n                if (i != intElement) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<string>) {\n            List<string> stringList = (List<string>)list;\n            string stringElement = (string)element;\n            foreach (string s in stringList) {\n                if (s != stringElement) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<double>) {\n            List<double> doubleList = (List<double>)list;\n            double doubleElement = (double)element;\n            foreach (double d in doubleList) {\n                if (d != doubleElement) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<char>) {\n            List<char> charList = (List<char>)list;\n            char charElement = (char)element;\n            foreach (char c in charList) {\n                if (c != charElement) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<bool>) {\n            List<bool> boolList = (List<bool>)list;\n            bool boolElement = (bool)element;\n            foreach (bool b in boolList) {\n                if (b != boolElement) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkvdefk8_.cs(66,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpkvdefk8_.cs(67,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpkvdefk8_.cs(68,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkrkr2lvi.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpkrkr2lvi.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpkrkr2lvi.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is int[]) {\n            int[] arr = (int[])list;\n            for (int i = 0; i < arr.Length; i++) {\n                if (arr[i] != (int)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is string[]) {\n            string[] arr = (string[])list;\n            for (int i = 0; i < arr.Length; i++) {\n                if (arr[i] != (string)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is double[]) {\n            double[] arr = (double[])list;\n            for (int i = 0; i < arr.Length; i++) {\n                if (arr[i] != (double)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is char[]) {\n            char[] arr = (char[])list;\n            for (int i = 0; i < arr.Length; i++) {\n                if (arr[i] != (char)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is bool[]) {\n            bool[] arr = (bool[])list;\n            for (int i = 0; i < arr.Length; i++) {\n                if (arr[i] != (bool)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpqqu6x20t.cs(61,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpqqu6x20t.cs(62,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpqqu6x20t.cs(63,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> intList = (List<int>)list;\n            int intElement = (int)element;\n            foreach (int i in intList) {\n                if (i != intElement) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<string>) {\n            List<string> stringList = (List<string>)list;\n            string stringElement = (string)element;\n            foreach (string s in stringList) {\n                if (s != stringElement) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<double>) {\n            List<double> doubleList = (List<double>)list;\n            double doubleElement = (double)element;\n            foreach (double d in doubleList) {\n                if (d != doubleElement) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<float>) {\n            List<float> floatList = (List<float>)list;\n            float floatElement = (float)element;\n            foreach (float f in floatList) {\n                if (f != floatElement) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<long>) {\n            List<long> longList = (List<long>)list;\n            long longElement = (long)element;\n            foreach (long l in longList) {\n                if (l != longElement) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<bool>) {\n            List<bool> boolList = (List<bool>)list;\n            bool boolElement = (bool)element;\n            foreach (bool b in boolList) {\n                if (b != boolElement) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<char>) {\n            List<char> charList = (List<char>)list;\n            char charElement\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp313r7h6o.cs(73,29): error CS1002: ; expected\n/tmp/tmp313r7h6o.cs(75,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmp313r7h6o.cs(76,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp313r7h6o.cs(77,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp313r7h6o.cs(78,128): error CS1525: Invalid expression term 'object'\n/tmp/tmp313r7h6o.cs(81,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjlxtp9cu.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjlxtp9cu.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> l = (List<int>)list;\n            int e = (int)element;\n            foreach (int i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<string>) {\n            List<string> l = (List<string>)list;\n            string e = (string)element;\n            foreach (string i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<double>) {\n            List<double> l = (List<double>)list;\n            double e = (double)element;\n            foreach (double i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<char>) {\n            List<char> l = (List<char>)list;\n            char e = (char)element;\n            foreach (char i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<bool>) {\n            List<bool> l = (List<bool>)list;\n            bool e = (bool)element;\n            foreach (bool i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmps6xvlksk.cs(66,129): error CS1525: Invalid expression term 'object'\n/tmp/tmps6xvlksk.cs(67,98): error CS1525: Invalid expression term 'object'\n/tmp/tmps6xvlksk.cs(68,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> l = (List<int>)list;\n            int e = (int)element;\n            foreach (int i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<string>) {\n            List<string> l = (List<string>)list;\n            string e = (string)element;\n            foreach (string i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<bool>) {\n            List<bool> l = (List<bool>)list;\n            bool e = (bool)element;\n            foreach (bool i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<char>) {\n            List<char> l = (List<char>)list;\n            char e = (char)element;\n            foreach (char i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<double>) {\n            List<double> l = (List<double>)list;\n            double e = (double)element;\n            foreach (double i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<float>) {\n            List<float> l = (List<float>)list;\n            float e = (float)element;\n            foreach (float i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<long>) {\n            List<long> l = (List<long>)list;\n            long e = (long)element;\n            foreach (long i in l) {\n                if (i != e) {\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi16onfz_.cs(77,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpi16onfz_.cs(78,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpi16onfz_.cs(79,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpi16onfz_.cs(80,128): error CS1525: Invalid expression term 'object'\n/tmp/tmpi16onfz_.cs(83,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjlxtp9cu.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjlxtp9cu.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjlxtp9cu.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> l = (List<int>)list;\n            int e = (int)element;\n            for (int i = 0; i < l.Count; i++) {\n                if (l[i] != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<string>) {\n            List<string> l = (List<string>)list;\n            string e = (string)element;\n            for (int i = 0; i < l.Count; i++) {\n                if (l[i] != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<bool>) {\n            List<bool> l = (List<bool>)list;\n            bool e = (bool)element;\n            for (int i = 0; i < l.Count; i++) {\n                if (l[i] != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<char>) {\n            List<char> l = (List<char>)list;\n            char e = (char)element;\n            for (int i = 0; i < l.Count; i++) {\n                if (l[i] != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<double>) {\n            List<double> l = (List<double>)list;\n            double e = (double)element;\n            for (int i = 0; i < l.Count; i++) {\n                if (l[i] != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<float>) {\n            List<float> l = (List<float>)list;\n            float e = (float)element;\n            for (int i = 0; i < l.Count; i++) {\n                if (l[i] != e) {\n                    return false;\n                }\n            }\n            return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpqr85xigu.cs(71,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpqr85xigu.cs(72,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpqr85xigu.cs(73,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpqr85xigu.cs(74,128): error CS1525: Invalid expression term 'object'\n/tmp/tmpqr85xigu.cs(77,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjlxtp9cu.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjlxtp9cu.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> l = (List<int>)list;\n            foreach (int i in l) {\n                if (i != (int)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<double>) {\n            List<double> l = (List<double>)list;\n            foreach (double i in l) {\n                if (i != (double)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<string>) {\n            List<string> l = (List<string>)list;\n            foreach (string i in l) {\n                if (i != (string)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<char>) {\n            List<char> l = (List<char>)list;\n            foreach (char i in l) {\n                if (i != (char)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<bool>) {\n            List<bool> l = (List<bool>)list;\n            foreach (bool i in l) {\n                if (i != (bool)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpus7aqcjc.cs(61,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpus7aqcjc.cs(62,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpus7aqcjc.cs(63,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            foreach (int item in (List<int>)list) {\n                if (item != (int)element) {\n                    return false;\n                }\n            }\n        } else if (list is List<string>) {\n            foreach (string item in (List<string>)list) {\n                if (item != (string)element) {\n                    return false;\n                }\n            }\n        } else if (list is List<double>) {\n            foreach (double item in (List<double>)list) {\n                if (item != (double)element) {\n                    return false;\n                }\n            }\n        } else if (list is List<char>) {\n            foreach (char item in (List<char>)list) {\n                if (item != (char)element) {\n                    return false;\n                }\n            }\n        } else if (list is List<bool>) {\n            foreach (bool item in (List<bool>)list) {\n                if (item != (bool)element) {\n                    return false;\n                }\n            }\n        } else if (list is List<object>) {\n            foreach (object item in (List<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp9gcdjg06.cs(51,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp9gcdjg06.cs(52,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp9gcdjg06.cs(53,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<object>) {\n            foreach (var item in (List<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcp2a29zq.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpcp2a29zq.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpcp2a29zq.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // TODO: Implement this function.\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp51a38rfr.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp51a38rfr.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp51a38rfr.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // TODO: Implement\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpl6xnf82s.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpl6xnf82s.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpl6xnf82s.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (var item in (IEnumerable<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmps8smym3f.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmps8smym3f.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmps8smym3f.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpymov1g38.cs(23,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpymov1g38.cs(24,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpymov1g38.cs(25,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (!item.Equals(element)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpil_hwfjv.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpil_hwfjv.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpil_hwfjv.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<object>) {\n            foreach (object item in (List<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1q0y3vwf.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp1q0y3vwf.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp1q0y3vwf.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // TODO: Implement this function\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpmblm43p7.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpmblm43p7.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpmblm43p7.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here.\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8ealjyd8.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8ealjyd8.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8ealjyd8.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            return ((List<int>)list).All(x => x == (int)element);\n        } else if (list is List<string>) {\n            return ((List<string>)list).All(x => x == (string)element);\n        } else if (list is List<double>) {\n            return ((List<double>)list).All(x => x == (double)element);\n        } else if (list is List<char>) {\n            return ((List<char>)list).All(x => x == (char)element);\n        } else if (list is List<object>) {\n            return ((List<object>)list).All(x => x == element);\n        } else {\n            return false;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5hpf7nae.cs(26,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp5hpf7nae.cs(27,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp5hpf7nae.cs(28,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // TODO: Implement this function\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpmblm43p7.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpmblm43p7.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpmblm43p7.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> list1 = (List<int>)list;\n            int element1 = (int)element;\n            foreach (int i in list1) {\n                if (i != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<string>) {\n            List<string> list1 = (List<string>)list;\n            string element1 = (string)element;\n            foreach (string i in list1) {\n                if (i != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<double>) {\n            List<double> list1 = (List<double>)list;\n            double element1 = (double)element;\n            foreach (double i in list1) {\n                if (i != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<float>) {\n            List<float> list1 = (List<float>)list;\n            float element1 = (float)element;\n            foreach (float i in list1) {\n                if (i != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<char>) {\n            List<char> list1 = (List<char>)list;\n            char element1 = (char)element;\n            foreach (char i in list1) {\n                if (i != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<bool>) {\n            List<bool> list1 = (List<bool>)list;\n            bool element1 = (bool)element;\n            foreach (bool i in list1) {\n                if (i != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<byte>) {\n            List<byte> list1 = (List<byte>)list;\n            byte element1\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdqvk0kfs.cs(73,26): error CS1002: ; expected\n/tmp/tmpdqvk0kfs.cs(75,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpdqvk0kfs.cs(76,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpdqvk0kfs.cs(77,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpdqvk0kfs.cs(78,128): error CS1525: Invalid expression term 'object'\n/tmp/tmpdqvk0kfs.cs(81,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> l = (List<int>)list;\n            int e = (int)element;\n            foreach (int i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<string>) {\n            List<string> l = (List<string>)list;\n            string e = (string)element;\n            foreach (string i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<char>) {\n            List<char> l = (List<char>)list;\n            char e = (char)element;\n            foreach (char i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<bool>) {\n            List<bool> l = (List<bool>)list;\n            bool e = (bool)element;\n            foreach (bool i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<float>) {\n            List<float> l = (List<float>)list;\n            float e = (float)element;\n            foreach (float i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<double>) {\n            List<double> l = (List<double>)list;\n            double e = (double)element;\n            foreach (double i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<long>) {\n            List<long> l = (List<long>)list;\n            long e = (long)element;\n            foreach (long i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprku1ewrz.cs(75,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmprku1ewrz.cs(76,129): error CS1525: Invalid expression term 'object'\n/tmp/tmprku1ewrz.cs(77,98): error CS1525: Invalid expression term 'object'\n/tmp/tmprku1ewrz.cs(78,128): error CS1525: Invalid expression term 'object'\n/tmp/tmprku1ewrz.cs(81,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (!item.Equals(element)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpil_hwfjv.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpil_hwfjv.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpil_hwfjv.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3u2r1s0x.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp3u2r1s0x.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp3u2r1s0x.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return list.Equals(element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bljm1vt.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IList<object>) {\n            foreach (var item in (IList<object>)list) {\n                if (!item.Equals(element)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpgiab4fwj.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpgiab4fwj.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpgiab4fwj.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (var item in (IEnumerable<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmps8smym3f.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmps8smym3f.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmps8smym3f.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return list.Equals(element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bljm1vt.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3u2r1s0x.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp3u2r1s0x.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp3u2r1s0x.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // TODO: Implement this function\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpmblm43p7.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpmblm43p7.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpmblm43p7.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> list1 = (List<int>)list;\n            int element1 = (int)element;\n            for (int i = 0; i < list1.Count; i++) {\n                if (list1[i] != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<string>) {\n            List<string> list1 = (List<string>)list;\n            string element1 = (string)element;\n            for (int i = 0; i < list1.Count; i++) {\n                if (list1[i] != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<char>) {\n            List<char> list1 = (List<char>)list;\n            char element1 = (char)element;\n            for (int i = 0; i < list1.Count; i++) {\n                if (list1[i] != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<double>) {\n            List<double> list1 = (List<double>)list;\n            double element1 = (double)element;\n            for (int i = 0; i < list1.Count; i++) {\n                if (list1[i] != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<float>) {\n            List<float> list1 = (List<float>)list;\n            float element1 = (float)element;\n            for (int i = 0; i < list1.Count; i++) {\n                if (list1[i] != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<long>) {\n            List<long> list1 = (List<long>)list;\n            long element1 = (long)element;\n            for (int i = 0; i < list1.Count; i++) {\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpyr35qx2f.cs(66,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpyr35qx2f.cs(67,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpyr35qx2f.cs(68,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpyr35qx2f.cs(69,128): error CS1525: Invalid expression term 'object'\n/tmp/tmpyr35qx2f.cs(72,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> intList = (List<int>)list;\n            int intElement = (int)element;\n            foreach (int item in intList) {\n                if (item != intElement) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<string>) {\n            List<string> strList = (List<string>)list;\n            string strElement = (string)element;\n            foreach (string item in strList) {\n                if (item != strElement) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<bool>) {\n            List<bool> boolList = (List<bool>)list;\n            bool boolElement = (bool)element;\n            foreach (bool item in boolList) {\n                if (item != boolElement) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<char>) {\n            List<char> charList = (List<char>)list;\n            char charElement = (char)element;\n            foreach (char item in charList) {\n                if (item != charElement) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<double>) {\n            List<double> doubleList = (List<double>)list;\n            double doubleElement = (double)element;\n            foreach (double item in doubleList) {\n                if (item != doubleElement) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<float>) {\n            List<float> floatList = (List<float>)list;\n            float floatElement = (float)element;\n            foreach (float item in floatList) {\n                if (item != floatElement) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<long>) {\n            List<long> longList = (List<long>)list;\n            long longElement = (long)element;\n            foreach (long\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpaswl0yko.cs(68,22): error CS1525: Invalid expression term 'long'\n/tmp/tmpaswl0yko.cs(68,26): error CS1515: 'in' expected\n/tmp/tmpaswl0yko.cs(68,26): error CS0230: Type and identifier are both required in a foreach statement\n/tmp/tmpaswl0yko.cs(68,26): error CS1525: Invalid expression term '}'\n/tmp/tmpaswl0yko.cs(68,26): error CS1026: ) expected\n/tmp/tmpaswl0yko.cs(68,26): error CS1002: ; expected\n/tmp/tmpaswl0yko.cs(70,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpaswl0yko.cs(71,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpaswl0yko.cs(72,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpaswl0yko.cs(73,128): error CS1525: Invalid expression term 'object'\n/tmp/tmpaswl0yko.cs(76,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // TODO: Implement this function\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpmblm43p7.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpmblm43p7.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpmblm43p7.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is int[]) {\n            int[] arr = (int[])list;\n            for (int i = 0; i < arr.Length; i++) {\n                if (arr[i] != (int)element) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is string[]) {\n            string[] arr = (string[])list;\n            for (int i = 0; i < arr.Length; i++) {\n                if (arr[i] != (string)element) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is char[]) {\n            char[] arr = (char[])list;\n            for (int i = 0; i < arr.Length; i++) {\n                if (arr[i] != (char)element) {\n                    return false;\n                }\n            }\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvsz92t2f.cs(40,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpvsz92t2f.cs(41,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpvsz92t2f.cs(42,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (var item in (IEnumerable<object>)list) {\n                if (!item.Equals(element)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpj8ufrljg.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpj8ufrljg.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpj8ufrljg.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkrkr2lvi.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpkrkr2lvi.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpkrkr2lvi.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is int[]) {\n            int[] arr = (int[])list;\n            for (int i = 0; i < arr.Length; i++) {\n                if (arr[i] != (int)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is string[]) {\n            string[] arr = (string[])list;\n            for (int i = 0; i < arr.Length; i++) {\n                if (arr[i] != (string)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is char[]) {\n            char[] arr = (char[])list;\n            for (int i = 0; i < arr.Length; i++) {\n                if (arr[i] != (char)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is bool[]) {\n            bool[] arr = (bool[])list;\n            for (int i = 0; i < arr.Length; i++) {\n                if (arr[i] != (bool)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is float[]) {\n            float[] arr = (float[])list;\n            for (int i = 0; i < arr.Length; i++) {\n                if (arr[i] != (float)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is double[]) {\n            double[] arr = (double[])list;\n            for (int i = 0; i < arr.Length; i++) {\n                if (arr[i] != (double)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is long[]) {\n            long[] arr = (long[])list;\n            for (int i = 0; i < arr.Length; i++) {\n                if (arr[i] != (long)element) {\n                    return false;\n                }\n            }\n           \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpv9c10ysg.cs(74,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpv9c10ysg.cs(75,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpv9c10ysg.cs(76,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpv9c10ysg.cs(77,128): error CS1525: Invalid expression term 'object'\n/tmp/tmpv9c10ysg.cs(80,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return list.Equals(element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bljm1vt.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return list.Equals(element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bljm1vt.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (!item.Equals(element)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpil_hwfjv.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpil_hwfjv.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpil_hwfjv.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjlxtp9cu.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> l = (List<int>)list;\n            int e = (int)element;\n            foreach (int i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<double>) {\n            List<double> l = (List<double>)list;\n            double e = (double)element;\n            foreach (double i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<string>) {\n            List<string> l = (List<string>)list;\n            string e = (string)element;\n            foreach (string i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<char>) {\n            List<char> l = (List<char>)list;\n            char e = (char)element;\n            foreach (char i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<bool>) {\n            List<bool> l = (List<bool>)list;\n            bool e = (bool)element;\n            foreach (bool i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else {\n            throw new ArgumentException(\"Invalid list type\");\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpfgjq9h03.cs(66,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpfgjq9h03.cs(67,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpfgjq9h03.cs(68,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is int[]) {\n            int[] l = (int[])list;\n            int e = (int)element;\n            for (int i = 0; i < l.Length; i++) {\n                if (l[i] != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is string[]) {\n            string[] l = (string[])list;\n            string e = (string)element;\n            for (int i = 0; i < l.Length; i++) {\n                if (l[i] != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is double[]) {\n            double[] l = (double[])list;\n            double e = (double)element;\n            for (int i = 0; i < l.Length; i++) {\n                if (l[i] != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is float[]) {\n            float[] l = (float[])list;\n            float e = (float)element;\n            for (int i = 0; i < l.Length; i++) {\n                if (l[i] != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is char[]) {\n            char[] l = (char[])list;\n            char e = (char)element;\n            for (int i = 0; i < l.Length; i++) {\n                if (l[i] != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is bool[]) {\n            bool[] l = (bool[])list;\n            bool e = (bool)element;\n            for (int i = 0; i < l.Length; i++) {\n                if (l[i] != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is long[]) {\n            long[] l = (long[])\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkrfru5fo.cs(72,32): error CS1525: Invalid expression term '}'\n/tmp/tmpkrfru5fo.cs(72,32): error CS1002: ; expected\n/tmp/tmpkrfru5fo.cs(74,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpkrfru5fo.cs(75,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpkrfru5fo.cs(76,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpkrfru5fo.cs(77,128): error CS1525: Invalid expression term 'object'\n/tmp/tmpkrfru5fo.cs(80,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjlxtp9cu.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> l = (List<int>)list;\n            int e = (int)element;\n            foreach (int i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<string>) {\n            List<string> l = (List<string>)list;\n            string e = (string)element;\n            foreach (string i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<double>) {\n            List<double> l = (List<double>)list;\n            double e = (double)element;\n            foreach (double i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<float>) {\n            List<float> l = (List<float>)list;\n            float e = (float)element;\n            foreach (float i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<long>) {\n            List<long> l = (List<long>)list;\n            long e = (long)element;\n            foreach (long i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<bool>) {\n            List<bool> l = (List<bool>)list;\n            bool e = (bool)element;\n            foreach (bool i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<char>) {\n            List<char> l = (List<char>)list;\n            char e = (char)element;\n            foreach (char i in l) {\n                if (i != e) {\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprts02_lv.cs(77,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmprts02_lv.cs(78,129): error CS1525: Invalid expression term 'object'\n/tmp/tmprts02_lv.cs(79,98): error CS1525: Invalid expression term 'object'\n/tmp/tmprts02_lv.cs(80,128): error CS1525: Invalid expression term 'object'\n/tmp/tmprts02_lv.cs(83,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return list.Equals(element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bljm1vt.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return list.Equals(element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bljm1vt.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // TODO: Implement this function\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpmblm43p7.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpmblm43p7.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpmblm43p7.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> l = (List<int>)list;\n            int e = (int)element;\n            foreach (int i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<string>) {\n            List<string> l = (List<string>)list;\n            string e = (string)element;\n            foreach (string i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<double>) {\n            List<double> l = (List<double>)list;\n            double e = (double)element;\n            foreach (double i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<char>) {\n            List<char> l = (List<char>)list;\n            char e = (char)element;\n            foreach (char i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<bool>) {\n            List<bool> l = (List<bool>)list;\n            bool e = (bool)element;\n            foreach (bool i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpsjfu4s7t.cs(61,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpsjfu4s7t.cs(62,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpsjfu4s7t.cs(63,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<object>) {\n            foreach (object item in (List<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvd7jrl3g.cs(23,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpvd7jrl3g.cs(24,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpvd7jrl3g.cs(25,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> intList = (List<int>)list;\n            int intElement = (int)element;\n            foreach (int i in intList) {\n                if (i != intElement) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<string>) {\n            List<string> stringList = (List<string>)list;\n            string stringElement = (string)element;\n            foreach (string s in stringList) {\n                if (s != stringElement) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<double>) {\n            List<double> doubleList = (List<double>)list;\n            double doubleElement = (double)element;\n            foreach (double d in doubleList) {\n                if (d != doubleElement) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<float>) {\n            List<float> floatList = (List<float>)list;\n            float floatElement = (float)element;\n            foreach (float f in floatList) {\n                if (f != floatElement) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<char>) {\n            List<char> charList = (List<char>)list;\n            char charElement = (char)element;\n            foreach (char c in charList) {\n                if (c != charElement) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<bool>) {\n            List<bool> boolList = (List<bool>)list;\n            bool boolElement = (bool)element;\n            foreach (bool b in boolList) {\n                if (b != boolElement) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdlnz3s7g.cs(76,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpdlnz3s7g.cs(77,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpdlnz3s7g.cs(78,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (!item.Equals(element)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpil_hwfjv.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpil_hwfjv.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpil_hwfjv.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (!item.Equals(element)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpil_hwfjv.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpil_hwfjv.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpil_hwfjv.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (!item.Equals(element)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpil_hwfjv.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpil_hwfjv.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpil_hwfjv.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> intList = (List<int>)list;\n            int intElement = (int)element;\n            foreach (int i in intList) {\n                if (i != intElement) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<string>) {\n            List<string> stringList = (List<string>)list;\n            string stringElement = (string)element;\n            foreach (string s in stringList) {\n                if (s != stringElement) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<double>) {\n            List<double> doubleList = (List<double>)list;\n            double doubleElement = (double)element;\n            foreach (double d in doubleList) {\n                if (d != doubleElement) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<char>) {\n            List<char> charList = (List<char>)list;\n            char charElement = (char)element;\n            foreach (char c in charList) {\n                if (c != charElement) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<bool>) {\n            List<bool> boolList = (List<bool>)list;\n            bool boolElement = (bool)element;\n            foreach (bool b in boolList) {\n                if (b != boolElement) {\n                    return false;\n                }\n            }\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1tobk10n.cs(61,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp1tobk10n.cs(62,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp1tobk10n.cs(63,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return list.Equals(element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bljm1vt.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<object>) {\n            foreach (object item in (List<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1q0y3vwf.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp1q0y3vwf.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp1q0y3vwf.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list.GetType() == typeof(List<int>)) {\n            List<int> l = (List<int>)list;\n            int e = (int)element;\n            foreach (int i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n        } else if (list.GetType() == typeof(List<double>)) {\n            List<double> l = (List<double>)list;\n            double e = (double)element;\n            foreach (double i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n        } else if (list.GetType() == typeof(List<string>)) {\n            List<string> l = (List<string>)list;\n            string e = (string)element;\n            foreach (string i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n        } else if (list.GetType() == typeof(List<bool>)) {\n            List<bool> l = (List<bool>)list;\n            bool e = (bool)element;\n            foreach (bool i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n        } else if (list.GetType() == typeof(List<char>)) {\n            List<char> l = (List<char>)list;\n            char e = (char)element;\n            foreach (char i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpgg4s0wsi.cs(55,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpgg4s0wsi.cs(56,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpgg4s0wsi.cs(57,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjlxtp9cu.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> l = (List<int>)list;\n            int e = (int)element;\n            foreach (int i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<string>) {\n            List<string> l = (List<string>)list;\n            string e = (string)element;\n            foreach (string i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<double>) {\n            List<double> l = (List<double>)list;\n            double e = (double)element;\n            foreach (double i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<float>) {\n            List<float> l = (List<float>)list;\n            float e = (float)element;\n            foreach (float i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<long>) {\n            List<long> l = (List<long>)list;\n            long e = (long)element;\n            foreach (long i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<short>) {\n            List<short> l = (List<short>)list;\n            short e = (short)element;\n            foreach (short i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<byte>) {\n            List<byte> l = (List<byte>)list;\n            byte e = (byte)element;\n            foreach (byte i in l) {\n                if (i != e) {\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6gzi_svp.cs(77,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmp6gzi_svp.cs(78,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp6gzi_svp.cs(79,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp6gzi_svp.cs(80,128): error CS1525: Invalid expression term 'object'\n/tmp/tmp6gzi_svp.cs(83,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return list.Equals(element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bljm1vt.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return list.Equals(element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bljm1vt.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjlxtp9cu.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // TODO: Implement this function\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpmblm43p7.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpmblm43p7.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpmblm43p7.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> l = (List<int>)list;\n            int e = (int)element;\n            foreach (int i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<double>) {\n            List<double> l = (List<double>)list;\n            double e = (double)element;\n            foreach (double i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<string>) {\n            List<string> l = (List<string>)list;\n            string e = (string)element;\n            foreach (string i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<bool>) {\n            List<bool> l = (List<bool>)list;\n            bool e = (bool)element;\n            foreach (bool i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<char>) {\n            List<char> l = (List<char>)list;\n            char e = (char)element;\n            foreach (char i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<object>) {\n            List<object> l = (List<object>)list;\n            object e = element;\n            foreach (object i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6okh4gim.cs(76,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp6okh4gim.cs(77,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp6okh4gim.cs(78,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjlxtp9cu.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> list1 = (List<int>)list;\n            int element1 = (int)element;\n            foreach (int i in list1) {\n                if (i != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<string>) {\n            List<string> list1 = (List<string>)list;\n            string element1 = (string)element;\n            foreach (string i in list1) {\n                if (i != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<double>) {\n            List<double> list1 = (List<double>)list;\n            double element1 = (double)element;\n            foreach (double i in list1) {\n                if (i != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<float>) {\n            List<float> list1 = (List<float>)list;\n            float element1 = (float)element;\n            foreach (float i in list1) {\n                if (i != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<long>) {\n            List<long> list1 = (List<long>)list;\n            long element1 = (long)element;\n            foreach (long i in list1) {\n                if (i != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<bool>) {\n            List<bool> list1 = (List<bool>)list;\n            bool element1 = (bool)element;\n            foreach (bool i in list1) {\n                if (i != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<char>) {\n            List<char> list1 = (List<char>)list;\n            char element1\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpai_85zm4.cs(73,26): error CS1002: ; expected\n/tmp/tmpai_85zm4.cs(75,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpai_85zm4.cs(76,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpai_85zm4.cs(77,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpai_85zm4.cs(78,128): error CS1525: Invalid expression term 'object'\n/tmp/tmpai_85zm4.cs(81,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> list1 = (List<int>)list;\n            int element1 = (int)element;\n            foreach (int i in list1) {\n                if (i != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<string>) {\n            List<string> list1 = (List<string>)list;\n            string element1 = (string)element;\n            foreach (string i in list1) {\n                if (i != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<double>) {\n            List<double> list1 = (List<double>)list;\n            double element1 = (double)element;\n            foreach (double i in list1) {\n                if (i != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<float>) {\n            List<float> list1 = (List<float>)list;\n            float element1 = (float)element;\n            foreach (float i in list1) {\n                if (i != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<char>) {\n            List<char> list1 = (List<char>)list;\n            char element1 = (char)element;\n            foreach (char i in list1) {\n                if (i != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<bool>) {\n            List<bool> list1 = (List<bool>)list;\n            bool element1 = (bool)element;\n            foreach (bool i in list1) {\n                if (i != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpf96h1p3g.cs(76,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpf96h1p3g.cs(77,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpf96h1p3g.cs(78,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> listInt = (List<int>)list;\n            int elementInt = (int)element;\n            foreach (int i in listInt) {\n                if (i != elementInt) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<string>) {\n            List<string> listString = (List<string>)list;\n            string elementString = (string)element;\n            foreach (string i in listString) {\n                if (i != elementString) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<char>) {\n            List<char> listChar = (List<char>)list;\n            char elementChar = (char)element;\n            foreach (char i in listChar) {\n                if (i != elementChar) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<bool>) {\n            List<bool> listBool = (List<bool>)list;\n            bool elementBool = (bool)element;\n            foreach (bool i in listBool) {\n                if (i != elementBool) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<double>) {\n            List<double> listDouble = (List<double>)list;\n            double elementDouble = (double)element;\n            foreach (double i in listDouble) {\n                if (i != elementDouble) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<float>) {\n            List<float> listFloat = (List<float>)list;\n            float elementFloat = (float)element;\n            foreach (float i in listFloat) {\n                if (i != elementFloat) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<long>) {\n            List<long> listLong = (List<long>)list;\n            long elementLong = (\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp9e0bew2j.cs(73,33): error CS1525: Invalid expression term '}'\n/tmp/tmp9e0bew2j.cs(73,33): error CS1026: ) expected\n/tmp/tmp9e0bew2j.cs(73,33): error CS1002: ; expected\n/tmp/tmp9e0bew2j.cs(75,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmp9e0bew2j.cs(76,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp9e0bew2j.cs(77,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp9e0bew2j.cs(78,128): error CS1525: Invalid expression term 'object'\n/tmp/tmp9e0bew2j.cs(81,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here.\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8ealjyd8.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8ealjyd8.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8ealjyd8.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<object>) {\n            foreach (object item in (List<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1q0y3vwf.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp1q0y3vwf.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp1q0y3vwf.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjlxtp9cu.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjlxtp9cu.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object> && element is object) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpb2xrcy_f.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpb2xrcy_f.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpb2xrcy_f.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return list.Equals(element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bljm1vt.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3u2r1s0x.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp3u2r1s0x.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp3u2r1s0x.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return list.Equals(element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bljm1vt.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (var item in (IEnumerable<object>)list) {\n                if (!item.Equals(element)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpj8ufrljg.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpj8ufrljg.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpj8ufrljg.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Write your code here.\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmptrzhbuwg.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmptrzhbuwg.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmptrzhbuwg.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<object>) {\n            foreach (var item in (List<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcp2a29zq.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpcp2a29zq.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpcp2a29zq.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (var item in (IEnumerable<object>)list) {\n                if (!item.Equals(element)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpj8ufrljg.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpj8ufrljg.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpj8ufrljg.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // TODO: Implement this function\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpmblm43p7.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpmblm43p7.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpmblm43p7.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> l = (List<int>)list;\n            int e = (int)element;\n            foreach (int i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<string>) {\n            List<string> l = (List<string>)list;\n            string e = (string)element;\n            foreach (string i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<bool>) {\n            List<bool> l = (List<bool>)list;\n            bool e = (bool)element;\n            foreach (bool i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<char>) {\n            List<char> l = (List<char>)list;\n            char e = (char)element;\n            foreach (char i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<double>) {\n            List<double> l = (List<double>)list;\n            double e = (double)element;\n            foreach (double i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<float>) {\n            List<float> l = (List<float>)list;\n            float e = (float)element;\n            foreach (float i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<long>) {\n            List<long> l = (List<long>)list;\n            long e = (long)element;\n            foreach (long i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpff7zi5nd.cs(75,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpff7zi5nd.cs(76,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpff7zi5nd.cs(77,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpff7zi5nd.cs(78,128): error CS1525: Invalid expression term 'object'\n/tmp/tmpff7zi5nd.cs(81,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // TODO: Implement this function.\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp51a38rfr.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp51a38rfr.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp51a38rfr.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<object>) {\n            foreach (object item in (List<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvd7jrl3g.cs(23,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpvd7jrl3g.cs(24,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpvd7jrl3g.cs(25,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3u2r1s0x.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp3u2r1s0x.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp3u2r1s0x.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return list.Equals(element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bljm1vt.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> l = (List<int>)list;\n            int e = (int)element;\n            foreach (int i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<double>) {\n            List<double> l = (List<double>)list;\n            double e = (double)element;\n            foreach (double i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<string>) {\n            List<string> l = (List<string>)list;\n            string e = (string)element;\n            foreach (string i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<char>) {\n            List<char> l = (List<char>)list;\n            char e = (char)element;\n            foreach (char i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<bool>) {\n            List<bool> l = (List<bool>)list;\n            bool e = (bool)element;\n            foreach (bool i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpeg9xdycy.cs(64,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpeg9xdycy.cs(65,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpeg9xdycy.cs(66,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (var item in (IEnumerable<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmps8smym3f.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmps8smym3f.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmps8smym3f.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return list.Equals(element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bljm1vt.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjlxtp9cu.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (!CheckElement(item, element)) {\n                    return false;\n                }\n            }\n            return true;\n        } else {\n            return list.Equals(element);\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp24cwek40.cs(23,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp24cwek40.cs(24,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp24cwek40.cs(25,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<object>) {\n            foreach (object item in (List<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1q0y3vwf.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp1q0y3vwf.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp1q0y3vwf.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (!item.Equals(element)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpil_hwfjv.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpil_hwfjv.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpil_hwfjv.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object o in (IEnumerable<object>)list) {\n                if (!o.Equals(element)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp48cnu7_6.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp48cnu7_6.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp48cnu7_6.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> l = (List<int>)list;\n            int e = (int)element;\n            foreach (int i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<string>) {\n            List<string> l = (List<string>)list;\n            string e = (string)element;\n            foreach (string i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<double>) {\n            List<double> l = (List<double>)list;\n            double e = (double)element;\n            foreach (double i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<char>) {\n            List<char> l = (List<char>)list;\n            char e = (char)element;\n            foreach (char i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<bool>) {\n            List<bool> l = (List<bool>)list;\n            bool e = (bool)element;\n            foreach (bool i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpufr5r7bm.cs(64,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpufr5r7bm.cs(65,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpufr5r7bm.cs(66,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return list.Equals(element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bljm1vt.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> list1 = (List<int>)list;\n            int element1 = (int)element;\n            foreach (int i in list1) {\n                if (i != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<string>) {\n            List<string> list1 = (List<string>)list;\n            string element1 = (string)element;\n            foreach (string i in list1) {\n                if (i != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<double>) {\n            List<double> list1 = (List<double>)list;\n            double element1 = (double)element;\n            foreach (double i in list1) {\n                if (i != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<float>) {\n            List<float> list1 = (List<float>)list;\n            float element1 = (float)element;\n            foreach (float i in list1) {\n                if (i != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<char>) {\n            List<char> list1 = (List<char>)list;\n            char element1 = (char)element;\n            foreach (char i in list1) {\n                if (i != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<bool>) {\n            List<bool> list1 = (List<bool>)list;\n            bool element1 = (bool)element;\n            foreach (bool i in list1) {\n                if (i != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<byte>) {\n            List<byte> list1 = (List<byte>)list;\n            byte element1 = (byte)element;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpagvlsrsu.cs(75,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpagvlsrsu.cs(76,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpagvlsrsu.cs(77,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpagvlsrsu.cs(78,128): error CS1525: Invalid expression term 'object'\n/tmp/tmpagvlsrsu.cs(81,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return list.Equals(element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bljm1vt.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<object>) {\n            foreach (object item in (List<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1q0y3vwf.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp1q0y3vwf.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp1q0y3vwf.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<object>) {\n            List<object> list2 = (List<object>)list;\n            foreach (object item in list2) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_fue6kuu.cs(23,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp_fue6kuu.cs(24,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp_fue6kuu.cs(25,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> list2 = (List<int>)list;\n            int element2 = (int)element;\n            for (int i = 0; i < list2.Count; i++) {\n                if (list2[i] != element2) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<string>) {\n            List<string> list2 = (List<string>)list;\n            string element2 = (string)element;\n            for (int i = 0; i < list2.Count; i++) {\n                if (list2[i] != element2) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<double>) {\n            List<double> list2 = (List<double>)list;\n            double element2 = (double)element;\n            for (int i = 0; i < list2.Count; i++) {\n                if (list2[i] != element2) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<float>) {\n            List<float> list2 = (List<float>)list;\n            float element2 = (float)element;\n            for (int i = 0; i < list2.Count; i++) {\n                if (list2[i] != element2) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<long>) {\n            List<long> list2 = (List<long>)list;\n            long element2 = (long)element;\n            for (int i = 0; i < list2.Count; i++) {\n                if (list2[i] != element2) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<bool>) {\n            List<bool> list2 = (List<bool>)list;\n            bool element2 = (bool)element;\n            for (int i = 0; i < list2.Count; i++) {\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8b968jfb.cs(66,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmp8b968jfb.cs(67,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8b968jfb.cs(68,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8b968jfb.cs(69,128): error CS1525: Invalid expression term 'object'\n/tmp/tmp8b968jfb.cs(72,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return list.Equals(element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bljm1vt.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list.GetType() == typeof(List<int>)) {\n            List<int> list1 = (List<int>)list;\n            int element1 = (int)element;\n            foreach (int i in list1) {\n                if (i != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list.GetType() == typeof(List<string>)) {\n            List<string> list1 = (List<string>)list;\n            string element1 = (string)element;\n            foreach (string i in list1) {\n                if (i != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list.GetType() == typeof(List<double>)) {\n            List<double> list1 = (List<double>)list;\n            double element1 = (double)element;\n            foreach (double i in list1) {\n                if (i != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list.GetType() == typeof(List<char>)) {\n            List<char> list1 = (List<char>)list;\n            char element1 = (char)element;\n            foreach (char i in list1) {\n                if (i != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list.GetType() == typeof(List<bool>)) {\n            List<bool> list1 = (List<bool>)list;\n            bool element1 = (bool)element;\n            foreach (bool i in list1) {\n                if (i != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkrgpcvwj.cs(66,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpkrgpcvwj.cs(67,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpkrgpcvwj.cs(68,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> l = (List<int>)list;\n            foreach (int i in l) {\n                if (i != (int)element) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<double>) {\n            List<double> l = (List<double>)list;\n            foreach (double i in l) {\n                if (i != (double)element) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<string>) {\n            List<string> l = (List<string>)list;\n            foreach (string i in l) {\n                if (i != (string)element) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<char>) {\n            List<char> l = (List<char>)list;\n            foreach (char i in l) {\n                if (i != (char)element) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<bool>) {\n            List<bool> l = (List<bool>)list;\n            foreach (bool i in l) {\n                if (i != (bool)element) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<object>) {\n            List<object> l = (List<object>)list;\n            foreach (object i in l) {\n                if (i != element) {\n                    return false;\n                }\n            }\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpwzwhqdyk.cs(64,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpwzwhqdyk.cs(65,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpwzwhqdyk.cs(66,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object> && element is object) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (!item.Equals(element)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpuhcxgmh5.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpuhcxgmh5.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpuhcxgmh5.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return list.Equals(element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bljm1vt.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return list.Equals(element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bljm1vt.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (var item in (IEnumerable<object>)list) {\n                if (!item.Equals(element)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpj8ufrljg.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpj8ufrljg.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpj8ufrljg.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpymov1g38.cs(23,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpymov1g38.cs(24,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpymov1g38.cs(25,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> list1 = (List<int>)list;\n            int element1 = (int)element;\n            foreach (int item in list1) {\n                if (item != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<string>) {\n            List<string> list1 = (List<string>)list;\n            string element1 = (string)element;\n            foreach (string item in list1) {\n                if (item != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<double>) {\n            List<double> list1 = (List<double>)list;\n            double element1 = (double)element;\n            foreach (double item in list1) {\n                if (item != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<char>) {\n            List<char> list1 = (List<char>)list;\n            char element1 = (char)element;\n            foreach (char item in list1) {\n                if (item != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<bool>) {\n            List<bool> list1 = (List<bool>)list;\n            bool element1 = (bool)element;\n            foreach (bool item in list1) {\n                if (item != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpk5d7nz3b.cs(66,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpk5d7nz3b.cs(67,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpk5d7nz3b.cs(68,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> intList = (List<int>)list;\n            int intElement = (int)element;\n            foreach (int i in intList) {\n                if (i != intElement) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<string>) {\n            List<string> stringList = (List<string>)list;\n            string stringElement = (string)element;\n            foreach (string s in stringList) {\n                if (s != stringElement) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<double>) {\n            List<double> doubleList = (List<double>)list;\n            double doubleElement = (double)element;\n            foreach (double d in doubleList) {\n                if (d != doubleElement) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<bool>) {\n            List<bool> boolList = (List<bool>)list;\n            bool boolElement = (bool)element;\n            foreach (bool b in boolList) {\n                if (b != boolElement) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<char>) {\n            List<char> charList = (List<char>)list;\n            char charElement = (char)element;\n            foreach (char c in charList) {\n                if (c != charElement) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpuuxsvyle.cs(66,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpuuxsvyle.cs(67,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpuuxsvyle.cs(68,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3u2r1s0x.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp3u2r1s0x.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp3u2r1s0x.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (!item.Equals(element)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpil_hwfjv.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpil_hwfjv.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpil_hwfjv.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // TODO: Implement this function\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpmblm43p7.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpmblm43p7.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpmblm43p7.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkrkr2lvi.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpkrkr2lvi.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpkrkr2lvi.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list.GetType() == typeof(List<int>)) {\n            List<int> l = (List<int>)list;\n            int e = (int)element;\n            foreach (int i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list.GetType() == typeof(List<string>)) {\n            List<string> l = (List<string>)list;\n            string e = (string)element;\n            foreach (string i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list.GetType() == typeof(List<bool>)) {\n            List<bool> l = (List<bool>)list;\n            bool e = (bool)element;\n            foreach (bool i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list.GetType() == typeof(List<float>)) {\n            List<float> l = (List<float>)list;\n            float e = (float)element;\n            foreach (float i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list.GetType() == typeof(List<double>)) {\n            List<double> l = (List<double>)list;\n            double e = (double)element;\n            foreach (double i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list.GetType() == typeof(List<char>)) {\n            List<char> l = (List<char>)list;\n            char e = (char)element;\n            foreach (char i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list.GetType() == typeof(List<byte>)) {\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmps74l7mji.cs(68,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmps74l7mji.cs(69,129): error CS1525: Invalid expression term 'object'\n/tmp/tmps74l7mji.cs(70,98): error CS1525: Invalid expression term 'object'\n/tmp/tmps74l7mji.cs(71,128): error CS1525: Invalid expression term 'object'\n/tmp/tmps74l7mji.cs(74,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjlxtp9cu.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjlxtp9cu.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> l = (List<int>)list;\n            int e = (int)element;\n            foreach (int i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<float>) {\n            List<float> l = (List<float>)list;\n            float e = (float)element;\n            foreach (float i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<double>) {\n            List<double> l = (List<double>)list;\n            double e = (double)element;\n            foreach (double i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<string>) {\n            List<string> l = (List<string>)list;\n            string e = (string)element;\n            foreach (string i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<char>) {\n            List<char> l = (List<char>)list;\n            char e = (char)element;\n            foreach (char i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<bool>) {\n            List<bool> l = (List<bool>)list;\n            bool e = (bool)element;\n            foreach (bool i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5onq5mga.cs(76,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp5onq5mga.cs(77,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp5onq5mga.cs(78,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here.\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8ealjyd8.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8ealjyd8.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8ealjyd8.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3u2r1s0x.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp3u2r1s0x.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp3u2r1s0x.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (!item.Equals(element)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpil_hwfjv.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpil_hwfjv.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpil_hwfjv.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return list.Equals(element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bljm1vt.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjlxtp9cu.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjlxtp9cu.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is int[]) {\n            int[] arr = (int[])list;\n            for (int i = 0; i < arr.Length; i++) {\n                if (arr[i] != (int)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is string[]) {\n            string[] arr = (string[])list;\n            for (int i = 0; i < arr.Length; i++) {\n                if (arr[i] != (string)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is double[]) {\n            double[] arr = (double[])list;\n            for (int i = 0; i < arr.Length; i++) {\n                if (arr[i] != (double)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is float[]) {\n            float[] arr = (float[])list;\n            for (int i = 0; i < arr.Length; i++) {\n                if (arr[i] != (float)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is char[]) {\n            char[] arr = (char[])list;\n            for (int i = 0; i < arr.Length; i++) {\n                if (arr[i] != (char)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is bool[]) {\n            bool[] arr = (bool[])list;\n            for (int i = 0; i < arr.Length; i++) {\n                if (arr[i] != (bool)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is byte[]) {\n            byte[] arr = (byte[])list;\n            for (int i = 0; i < arr.Length; i++) {\n                if (arr[i] != (byte)element) {\n                    return false;\n                }\n            }\n           \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpf4amv2qy.cs(74,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpf4amv2qy.cs(75,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpf4amv2qy.cs(76,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpf4amv2qy.cs(77,128): error CS1525: Invalid expression term 'object'\n/tmp/tmpf4amv2qy.cs(80,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // TODO: Implement this function\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpmblm43p7.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpmblm43p7.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpmblm43p7.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (var item in (IEnumerable<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmps8smym3f.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmps8smym3f.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmps8smym3f.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return list.Equals(element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bljm1vt.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
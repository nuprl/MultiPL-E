{
  "name": "mbpp_418_Find_Max",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the element of a list having maximum length.\n    public static object FindMax(object lst) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_418_Find_Max.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new object(new List<string>[]{(List<string>)new List<string>(new string[]{(string)\"A\"}), (List<string>)new List<string>(new string[]{(string)\"A\", (string)\"B\"}), (List<string>)new List<string>(new string[]{(string)\"A\", (string)\"B\", (string)\"C\"})}))).Equals((new object(new string[]{(string)\"A\", (string)\"B\", (string)\"C\"}))));\n    Debug.Assert(FindMax((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L}), (List<long>)new List<long>(new long[]{(long)1L, (long)2L}), (List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L})}))).Equals((new object(new long[]{(long)1L, (long)2L, (long)3L}))));\n    Debug.Assert(FindMax((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)1L}), (List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)1L, (long)5L, (long)6L, (long)1L})}))).Equals((new object(new long[]{(long)1L, (long)5L, (long)6L, (long)1L}))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        object max = lst;\n        foreach (object el in (IEnumerable<object>)lst) {\n            if (el.ToString().Length > max.ToString().Length) {\n                max = el;\n            }\n        }\n        return max;",
    "        object max = null;\n        int maxLen = 0;\n        foreach (object obj in (IEnumerable<object>)lst) {\n            int len = obj.ToString().Length;\n            if (len > maxLen) {\n                maxLen = len;\n                max = obj;\n            }\n        }\n        return max;",
    "        object max = lst;\n        foreach (object obj in (IEnumerable<object>)lst) {\n            if (obj.ToString().Length > max.ToString().Length) {\n                max = obj;\n            }\n        }\n        return max;",
    "        object max = lst;\n        foreach (object obj in (IEnumerable<object>)lst) {\n            if (obj.ToString().Length > max.ToString().Length) {\n                max = obj;\n            }\n        }\n        return max;",
    "        object max = lst;\n        foreach (object el in (IEnumerable<object>)lst) {\n            if (len(el) > len(max)) {\n                max = el;\n            }\n        }\n        return max;",
    "        object max = lst;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max.ToString().Length) {\n                max = item;\n            }\n        }\n        return max;",
    "        object max = lst;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max.ToString().Length) {\n                max = item;\n            }\n        }\n        return max;",
    "        if (lst is List<object>) {\n            List<object> l = (List<object>)lst;\n            if (l.Count == 0) {\n                return null;\n            }\n            object max = l[0];\n            for (int i = 1; i < l.Count; i++) {\n                if (Len(l[i]) > Len(max)) {\n                    max = l[i];\n                }\n            }\n            return max;\n        }\n        return null;",
    "        object max = lst;\n        foreach (object obj in (IEnumerable<object>)lst) {\n            if (obj.ToString().Length > max.ToString().Length) {\n                max = obj;\n            }\n        }\n        return max;",
    "        object max = lst;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max.ToString().Length) {\n                max = item;\n            }\n        }\n        return max;",
    "        int max = 0;\n        object max_obj = null;\n        foreach (var obj in (IEnumerable<object>)lst) {\n            int len = obj.ToString().Length;\n            if (len > max) {\n                max = len;\n                max_obj = obj;\n            }\n        }\n        return max_obj;",
    "        object max = lst;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max.ToString().Length) {\n                max = item;\n            }\n        }\n        return max;",
    "        object max = lst;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max.ToString().Length) {\n                max = item;\n            }\n        }\n        return max;",
    "        int max = 0;\n        object max_obj = null;\n        foreach (object obj in (List<object>)lst) {\n            if (obj.ToString().Length > max) {\n                max = obj.ToString().Length;\n                max_obj = obj;\n            }\n        }\n        return max_obj;",
    "        object max = null;\n        int max_len = 0;\n        foreach (object item in (IEnumerable<object>)lst) {\n            int len = 0;\n            if (item is string) {\n                len = ((string)item).Length;\n            } else if (item is IEnumerable<object>) {\n                len = ((IEnumerable<object>)item).Count();\n            }\n            if (len > max_len) {\n                max = item;\n                max_len = len;\n            }\n        }\n        return max;",
    "        object max = lst;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max.ToString().Length) {\n                max = item;\n            }\n        }\n        return max;",
    "        int max = 0;\n        object max_elem = null;\n        foreach (var elem in (IEnumerable<object>)lst) {\n            if (elem.ToString().Length > max) {\n                max = elem.ToString().Length;\n                max_elem = elem;\n            }\n        }\n        return max_elem;",
    "        int max = 0;\n        object max_item = null;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max) {\n                max = item.ToString().Length;\n                max_item = item;\n            }\n        }\n        return max_item;",
    "        var max = lst;\n        foreach (var item in (IEnumerable<object>)lst) {\n            if (item is IEnumerable<object>) {\n                var sub = FindMax(item);\n                if (Length(sub) > Length(max)) {\n                    max = sub;\n                }\n            }\n        }\n        return max;",
    "        var max = lst as IEnumerable<object>;\n        if (max == null) {\n            return lst;\n        }\n        return max.Select(FindMax).OrderByDescending(x => x.ToString().Length).First();"
  ]
}
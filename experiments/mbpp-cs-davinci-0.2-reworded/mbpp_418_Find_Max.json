{
  "name": "mbpp_418_Find_Max",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the element of a list having maximum length.\n    public static object FindMax(object lst) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_418_Find_Max.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new object(new List<string>[]{(List<string>)new List<string>(new string[]{(string)\"A\"}), (List<string>)new List<string>(new string[]{(string)\"A\", (string)\"B\"}), (List<string>)new List<string>(new string[]{(string)\"A\", (string)\"B\", (string)\"C\"})}))).Equals((new object(new string[]{(string)\"A\", (string)\"B\", (string)\"C\"}))));\n    Debug.Assert(FindMax((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L}), (List<long>)new List<long>(new long[]{(long)1L, (long)2L}), (List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L})}))).Equals((new object(new long[]{(long)1L, (long)2L, (long)3L}))));\n    Debug.Assert(FindMax((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)1L}), (List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)1L, (long)5L, (long)6L, (long)1L})}))).Equals((new object(new long[]{(long)1L, (long)5L, (long)6L, (long)1L}))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        object max = lst;\n        foreach (object el in (IEnumerable<object>)lst) {\n            if (el.ToString().Length > max.ToString().Length) {\n                max = el;\n            }\n        }\n        return max;",
    "        object max = null;\n        int maxLen = 0;\n        foreach (object obj in (IEnumerable<object>)lst) {\n            int len = obj.ToString().Length;\n            if (len > maxLen) {\n                maxLen = len;\n                max = obj;\n            }\n        }\n        return max;",
    "        object max = lst;\n        foreach (object obj in (IEnumerable<object>)lst) {\n            if (obj.ToString().Length > max.ToString().Length) {\n                max = obj;\n            }\n        }\n        return max;",
    "        object max = lst;\n        foreach (object obj in (IEnumerable<object>)lst) {\n            if (obj.ToString().Length > max.ToString().Length) {\n                max = obj;\n            }\n        }\n        return max;",
    "        object max = lst;\n        foreach (object el in (IEnumerable<object>)lst) {\n            if (len(el) > len(max)) {\n                max = el;\n            }\n        }\n        return max;",
    "        object max = lst;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max.ToString().Length) {\n                max = item;\n            }\n        }\n        return max;",
    "        object max = lst;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max.ToString().Length) {\n                max = item;\n            }\n        }\n        return max;",
    "        if (lst is List<object>) {\n            List<object> l = (List<object>)lst;\n            if (l.Count == 0) {\n                return null;\n            }\n            object max = l[0];\n            for (int i = 1; i < l.Count; i++) {\n                if (Len(l[i]) > Len(max)) {\n                    max = l[i];\n                }\n            }\n            return max;\n        }\n        return null;",
    "        object max = lst;\n        foreach (object obj in (IEnumerable<object>)lst) {\n            if (obj.ToString().Length > max.ToString().Length) {\n                max = obj;\n            }\n        }\n        return max;",
    "        object max = lst;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max.ToString().Length) {\n                max = item;\n            }\n        }\n        return max;",
    "        int max = 0;\n        object max_obj = null;\n        foreach (var obj in (IEnumerable<object>)lst) {\n            int len = obj.ToString().Length;\n            if (len > max) {\n                max = len;\n                max_obj = obj;\n            }\n        }\n        return max_obj;",
    "        object max = lst;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max.ToString().Length) {\n                max = item;\n            }\n        }\n        return max;",
    "        object max = lst;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max.ToString().Length) {\n                max = item;\n            }\n        }\n        return max;",
    "        int max = 0;\n        object max_obj = null;\n        foreach (object obj in (List<object>)lst) {\n            if (obj.ToString().Length > max) {\n                max = obj.ToString().Length;\n                max_obj = obj;\n            }\n        }\n        return max_obj;",
    "        object max = null;\n        int max_len = 0;\n        foreach (object item in (IEnumerable<object>)lst) {\n            int len = 0;\n            if (item is string) {\n                len = ((string)item).Length;\n            } else if (item is IEnumerable<object>) {\n                len = ((IEnumerable<object>)item).Count();\n            }\n            if (len > max_len) {\n                max = item;\n                max_len = len;\n            }\n        }\n        return max;",
    "        object max = lst;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max.ToString().Length) {\n                max = item;\n            }\n        }\n        return max;",
    "        int max = 0;\n        object max_elem = null;\n        foreach (var elem in (IEnumerable<object>)lst) {\n            if (elem.ToString().Length > max) {\n                max = elem.ToString().Length;\n                max_elem = elem;\n            }\n        }\n        return max_elem;",
    "        int max = 0;\n        object max_item = null;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max) {\n                max = item.ToString().Length;\n                max_item = item;\n            }\n        }\n        return max_item;",
    "        var max = lst;\n        foreach (var item in (IEnumerable<object>)lst) {\n            if (item is IEnumerable<object>) {\n                var sub = FindMax(item);\n                if (Length(sub) > Length(max)) {\n                    max = sub;\n                }\n            }\n        }\n        return max;",
    "        var max = lst as IEnumerable<object>;\n        if (max == null) {\n            return lst;\n        }\n        return max.Select(FindMax).OrderByDescending(x => x.ToString().Length).First();",
    "        var max = lst as IEnumerable<object>;\n        if (max == null) {\n            return lst;\n        }\n        return max.Select(FindMax).Max();",
    "        object max = lst;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max.ToString().Length) {\n                max = item;\n            }\n        }\n        return max;",
    "        int max = 0;\n        object max_obj = null;\n        foreach (object obj in (IEnumerable<object>)lst) {\n            if (obj.ToString().Length > max) {\n                max = obj.ToString().Length;\n                max_obj = obj;\n            }\n        }\n        return max_obj;",
    "        int max = 0;\n        object max_obj = null;\n        foreach (object obj in (IEnumerable<object>)lst) {\n            if (obj.ToString().Length > max) {\n                max = obj.ToString().Length;\n                max_obj = obj;\n            }\n        }\n        return max_obj;",
    "        int max = 0;\n        object max_item = null;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max) {\n                max = item.ToString().Length;\n                max_item = item;\n            }\n        }\n        return max_item;",
    "        object max = lst;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max.ToString().Length) {\n                max = item;\n            }\n        }\n        return max;",
    "        var max = lst;\n        foreach (var item in lst as IEnumerable<object>) {\n            if (item.ToString().Length > max.ToString().Length) {\n                max = item;\n            }\n        }\n        return max;",
    "        object max = lst;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max.ToString().Length) {\n                max = item;\n            }\n        }\n        return max;",
    "        if (lst is List<object>) {\n            int maxLen = 0;\n            object maxItem = null;\n            foreach (object item in (List<object>)lst) {\n                int len = item.ToString().Length;\n                if (len > maxLen) {\n                    maxLen = len;\n                    maxItem = item;\n                }\n            }\n            return maxItem;\n        }\n        return null;",
    "        // Your code here\n        return null;",
    "        // Your code here\n        return null;",
    "        var max = lst as IEnumerable<object>;\n        if (max == null)\n            return null;\n        return max.Aggregate((a, b) => a.ToString().Length > b.ToString().Length ? a : b);",
    "        if (lst == null) {\n            return null;\n        }\n        if (lst is IList<object>) {\n            return ((IList<object>)lst).Max(x => FindMax(x));\n        }\n        return lst;",
    "        int max = 0;\n        object max_item = null;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max) {\n                max = item.ToString().Length;\n                max_item = item;\n            }\n        }\n        return max_item;",
    "        var max = lst;\n        foreach (var item in (IEnumerable<object>)lst) {\n            if (item is IEnumerable<object>) {\n                var itemMax = FindMax(item);\n                if (itemMax is IEnumerable<object> && ((IEnumerable<object>)itemMax).Count() > ((IEnumerable<object>)max).Count()) {\n                    max = itemMax;\n                }\n            }\n        }\n        return max;",
    "        object max = lst;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max.ToString().Length) {\n                max = item;\n            }\n        }\n        return max;",
    "        var max = lst;\n        foreach (var item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max.ToString().Length) {\n                max = item;\n            }\n        }\n        return max;",
    "        var max = lst;\n        foreach (var item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max.ToString().Length) {\n                max = item;\n            }\n        }\n        return max;",
    "        int max = 0;\n        object max_elem = null;\n        foreach (var elem in (IEnumerable<object>)lst) {\n            if (elem.ToString().Length > max) {\n                max = elem.ToString().Length;\n                max_elem = elem;\n            }\n        }\n        return max_elem;",
    "        if (lst is List<object>) {\n            List<object> l = (List<object>)lst;\n            if (l.Count == 0) {\n                return null;\n            }\n            object max = l[0];\n            int max_len = Length(max);\n            for (int i = 1; i < l.Count; i++) {\n                int len = Length(l[i]);\n                if (len > max_len) {\n                    max = l[i];\n                    max_len = len;\n                }\n            }\n            return max;\n        }\n        return null;",
    "        var max = lst;\n        foreach (var item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max.ToString().Length) {\n                max = item;\n            }\n        }\n        return max;",
    "        object max = lst;\n        foreach (object obj in (IEnumerable<object>)lst) {\n            if (obj.ToString().Length > max.ToString().Length) {\n                max = obj;\n            }\n        }\n        return max;",
    "        int max = 0;\n        object max_el = null;\n        foreach (var el in (IEnumerable<object>)lst) {\n            if (el.ToString().Length > max) {\n                max = el.ToString().Length;\n                max_el = el;\n            }\n        }\n        return max_el;",
    "        if (lst is IEnumerable<object>) {\n            var max = 0;\n            var max_item = lst;\n            foreach (var item in (IEnumerable<object>)lst) {\n                var len = FindMax(item);\n                if (len > max) {\n                    max = len;\n                    max_item = item;\n                }\n            }\n            return max_item;\n        }\n        return lst;",
    "        var max = lst as IEnumerable<object>;\n        if (max != null) {\n            return max.Aggregate((a, b) => a.ToString().Length > b.ToString().Length ? a : b);\n        }\n        return lst;",
    "        int max = 0;\n        object max_item = null;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max) {\n                max = item.ToString().Length;\n                max_item = item;\n            }\n        }\n        return max_item;",
    "        if (lst is List<object>) {\n            List<object> l = (List<object>)lst;\n            if (l.Count == 0) {\n                return null;\n            }\n            object max = l[0];\n            for (int i = 1; i < l.Count; i++) {\n                if (Length(l[i]) > Length(max)) {\n                    max = l[i];\n                }\n            }\n            return max;\n        } else {\n            return lst;\n        }",
    "        // Your code here\n        return null;",
    "        var max = lst;\n        foreach (var item in lst as IEnumerable<object>) {\n            if (item.ToString().Length > max.ToString().Length) {\n                max = item;\n            }\n        }\n        return max;",
    "        object max = lst;\n        foreach (object obj in (IEnumerable<object>)lst) {\n            if (obj.ToString().Length > max.ToString().Length) {\n                max = obj;\n            }\n        }\n        return max;",
    "        object max = lst;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max.ToString().Length) {\n                max = item;\n            }\n        }\n        return max;",
    "        int max = 0;\n        object max_obj = null;\n        foreach (object obj in (IEnumerable<object>)lst) {\n            int len = ((IEnumerable<object>)obj).Count();\n            if (len > max) {\n                max = len;\n                max_obj = obj;\n            }\n        }\n        return max_obj;",
    "        object max = lst;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item is IEnumerable<object> && ((IEnumerable<object>)item).Count() > ((IEnumerable<object>)max).Count()) {\n                max = item;\n            }\n        }\n        return max;",
    "        object max = lst;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max.ToString().Length) {\n                max = item;\n            }\n        }\n        return max;",
    "        int max = 0;\n        object max_item = null;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max) {\n                max = item.ToString().Length;\n                max_item = item;\n            }\n        }\n        return max_item;",
    "        object max = lst;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max.ToString().Length) {\n                max = item;\n            }\n        }\n        return max;",
    "        if (lst is string) {\n            return lst;\n        }\n        if (lst is IEnumerable<object>) {\n            var max = \"\";\n            foreach (var item in (IEnumerable<object>)lst) {\n                var item_max = FindMax(item);\n                if (item_max.ToString().Length > max.Length) {\n                    max = item_max.ToString();\n                }\n            }\n            return max;\n        }\n        return \"\";",
    "        if (lst is List<object>) {\n            List<object> l = (List<object>)lst;\n            if (l.Count == 0) {\n                return null;\n            }\n            object max = l[0];\n            int max_len = Length(max);\n            for (int i = 1; i < l.Count; i++) {\n                int len = Length(l[i]);\n                if (len > max_len) {\n                    max = l[i];\n                    max_len = len;\n                }\n            }\n            return max;\n        } else {\n            return lst;\n        }",
    "        object max = lst;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max.ToString().Length) {\n                max = item;\n            }\n        }\n        return max;",
    "        // Your code here\n        return lst;",
    "        // TODO:\n        return null;",
    "        object max = lst;\n        foreach (object x in (IEnumerable<object>)lst) {\n            if (len(x) > len(max)) {\n                max = x;\n            }\n        }\n        return max;",
    "        var max = lst as IEnumerable<object>;\n        if (max == null) {\n            return null;\n        }\n        return max.Aggregate((x, y) => (x as IEnumerable<object>).Count() > (y as IEnumerable<object>).Count() ? x : y);",
    "        // Your code here\n        return null;",
    "        int max = 0;\n        object max_element = null;\n        foreach (object element in (IEnumerable<object>)lst) {\n            if (element.ToString().Length > max) {\n                max = element.ToString().Length;\n                max_element = element;\n            }\n        }\n        return max_element;",
    "        object max = lst;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max.ToString().Length) {\n                max = item;\n            }\n        }\n        return max;",
    "        // Your code here\n        return null;",
    "        var max = lst as IEnumerable<object>;\n        if (max == null) {\n            return lst;\n        }\n        max = max.Select(FindMax);\n        return max.Aggregate((a, b) => a.ToString().Length > b.ToString().Length ? a : b);",
    "        var max = lst;\n        foreach (var item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max.ToString().Length) {\n                max = item;\n            }\n        }\n        return max;",
    "        object max = lst;\n        foreach (object el in (IEnumerable<object>)lst) {\n            if (el.ToString().Length > max.ToString().Length) {\n                max = el;\n            }\n        }\n        return max;",
    "        int max = 0;\n        object max_item = null;\n        foreach (object item in (IEnumerable<object>)lst) {\n            int len = 0;\n            if (item is string) {\n                len = ((string)item).Length;\n            } else if (item is IEnumerable<object>) {\n                len = ((IEnumerable<object>)item).Count();\n            }\n            if (len > max) {\n                max = len;\n                max_item = item;\n            }\n        }\n        return max_item;",
    "        int max = 0;\n        object max_item = null;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max) {\n                max = item.ToString().Length;\n                max_item = item;\n            }\n        }\n        return max_item;",
    "        int max_len = 0;\n        object max_obj = null;\n        foreach (object obj in (IEnumerable<object>)lst) {\n            int len = 0;\n            if (obj is string) {\n                len = ((string)obj).Length;\n            } else if (obj is IEnumerable<object>) {\n                len = ((IEnumerable<object>)obj).Count();\n            }\n            if (len > max_len) {\n                max_len = len;\n                max_obj = obj;\n            }\n        }\n        return max_obj;",
    "        int max = 0;\n        object max_obj = null;\n        foreach (object obj in (List<object>)lst) {\n            if (obj.ToString().Length > max) {\n                max = obj.ToString().Length;\n                max_obj = obj;\n            }\n        }\n        return max_obj;",
    "        int max = 0;\n        object max_obj = null;\n        foreach (object obj in (List<object>)lst) {\n            if (obj.ToString().Length > max) {\n                max = obj.ToString().Length;\n                max_obj = obj;\n            }\n        }\n        return max_obj;",
    "        object max = lst;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max.ToString().Length) {\n                max = item;\n            }\n        }\n        return max;",
    "        var max = lst as IEnumerable<object>;\n        if (max == null) {\n            return lst;\n        }\n        return max.Aggregate((x, y) => FindMax(x).ToString().Length > FindMax(y).ToString().Length ? x : y);",
    "        object max = lst;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max.ToString().Length) {\n                max = item;\n            }\n        }\n        return max;",
    "        int max = 0;\n        object max_obj = null;\n        foreach (object obj in (IEnumerable<object>)lst) {\n            if (obj.ToString().Length > max) {\n                max = obj.ToString().Length;\n                max_obj = obj;\n            }\n        }\n        return max_obj;",
    "        object max = lst;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max.ToString().Length) {\n                max = item;\n            }\n        }\n        return max;",
    "        object max = lst;\n        foreach (object el in (IEnumerable<object>)lst) {\n            if (len(el) > len(max)) {\n                max = el;\n            }\n        }\n        return max;",
    "        object max = lst;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max.ToString().Length) {\n                max = item;\n            }\n        }\n        return max;",
    "        if (lst is List<object>) {\n            var max = 0;\n            var max_elem = lst;\n            foreach (var elem in (List<object>)lst) {\n                var len = FindMax(elem);\n                if (len > max) {\n                    max = len;\n                    max_elem = elem;\n                }\n            }\n            return max_elem;\n        } else {\n            return lst.ToString().Length;\n        }",
    "        int max = 0;\n        object max_obj = null;\n        foreach (object obj in (IEnumerable<object>)lst) {\n            if (obj.ToString().Length > max) {\n                max = obj.ToString().Length;\n                max_obj = obj;\n            }\n        }\n        return max_obj;",
    "        object max = lst;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max.ToString().Length) {\n                max = item;\n            }\n        }\n        return max;",
    "        if (lst is List<object>) {\n            List<object> l = (List<object>)lst;\n            if (l.Count == 0) {\n                return null;\n            }\n            object max = l[0];\n            int maxLen = Length(max);\n            for (int i = 1; i < l.Count; i++) {\n                int len = Length(l[i]);\n                if (len > maxLen) {\n                    max = l[i];\n                    maxLen = len;\n                }\n            }\n            return max;\n        }\n        return null;",
    "        object max = lst;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max.ToString().Length) {\n                max = item;\n            }\n        }\n        return max;",
    "        int max = 0;\n        object max_elem = null;\n        foreach (object elem in (IEnumerable<object>)lst) {\n            if (elem.ToString().Length > max) {\n                max = elem.ToString().Length;\n                max_elem = elem;\n            }\n        }\n        return max_elem;",
    "        object max = lst;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max.ToString().Length) {\n                max = item;\n            }\n        }\n        return max;",
    "        var max = lst as IEnumerable<object>;\n        if (max == null) {\n            return lst;\n        }\n        return max.Select(FindMax).Max();",
    "        int max = 0;\n        object max_obj = null;\n        foreach (object obj in (IEnumerable<object>)lst) {\n            if (obj.ToString().Length > max) {\n                max = obj.ToString().Length;\n                max_obj = obj;\n            }\n        }\n        return max_obj;",
    "        object max = lst;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max.ToString().Length) {\n                max = item;\n            }\n        }\n        return max;",
    "        // Your code here\n        return null;",
    "        int max = 0;\n        object max_obj = null;\n        foreach (object obj in (List<object>)lst) {\n            if (obj is List<object>) {\n                int len = ((List<object>)obj).Count;\n                if (len > max) {\n                    max = len;\n                    max_obj = obj;\n                }\n            }\n        }\n        return max_obj;",
    "        object max = lst;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max.ToString().Length) {\n                max = item;\n            }\n        }\n        return max;",
    "        object max = lst;\n        foreach (object el in (IEnumerable<object>)lst) {\n            if (len(el) > len(max)) {\n                max = el;\n            }\n        }\n        return max;",
    "        object max = lst;\n        foreach (object obj in (IEnumerable<object>)lst) {\n            if (obj.ToString().Length > max.ToString().Length) {\n                max = obj;\n            }\n        }\n        return max;",
    "        if (lst is List<object>) {\n            var max = 0;\n            var max_elem = lst;\n            foreach (var elem in (List<object>)lst) {\n                var len = FindMax(elem);\n                if (len > max) {\n                    max = len;\n                    max_elem = elem;\n                }\n            }\n            return max_elem;\n        } else {\n            return lst.ToString().Length;\n        }",
    "        int max = 0;\n        object max_obj = null;\n        foreach (object obj in (IEnumerable<object>)lst) {\n            int len = 0;\n            if (obj is string) {\n                len = ((string)obj).Length;\n            } else if (obj is IEnumerable<object>) {\n                len = ((IEnumerable<object>)obj).Count();\n            }\n            if (len > max) {\n                max = len;\n                max_obj = obj;\n            }\n        }\n        return max_obj;",
    "        if (lst == null) {\n            return null;\n        }\n        var max = lst;\n        var maxLen = max.ToString().Length;\n        foreach (var item in (IEnumerable<object>)lst) {\n            var len = item.ToString().Length;\n            if (len > maxLen) {\n                max = item;\n                maxLen = len;\n            }\n        }\n        return max;",
    "        object max = lst;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max.ToString().Length) {\n                max = item;\n            }\n        }\n        return max;",
    "        int max = 0;\n        object max_obj = null;\n        foreach (object obj in (IEnumerable<object>)lst) {\n            if (obj.ToString().Length > max) {\n                max = obj.ToString().Length;\n                max_obj = obj;\n            }\n        }\n        return max_obj;",
    "        object max = lst;\n        foreach (object el in lst) {\n            if (len(el) > len(max)) {\n                max = el;\n            }\n        }\n        return max;",
    "        object max = null;\n        int maxLen = 0;\n        foreach (object item in (IEnumerable<object>)lst) {\n            int len = item.ToString().Length;\n            if (len > maxLen) {\n                maxLen = len;\n                max = item;\n            }\n        }\n        return max;",
    "        object max = lst;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max.ToString().Length) {\n                max = item;\n            }\n        }\n        return max;",
    "        int max = 0;\n        object max_obj = null;\n        foreach (object obj in (IEnumerable<object>)lst) {\n            int len = ((IEnumerable<object>)obj).Count();\n            if (len > max) {\n                max = len;\n                max_obj = obj;\n            }\n        }\n        return max_obj;",
    "        int max = 0;\n        object max_elem = null;\n        foreach (object elem in (IEnumerable<object>)lst) {\n            if (elem.ToString().Length > max) {\n                max = elem.ToString().Length;\n                max_elem = elem;\n            }\n        }\n        return max_elem;",
    "        object max = lst;\n        foreach (object o in (IEnumerable<object>)lst) {\n            if (len(o) > len(max)) {\n                max = o;\n            }\n        }\n        return max;",
    "        object max = lst;\n        foreach (object elem in (IEnumerable<object>)lst) {\n            if (len(elem) > len(max)) {\n                max = elem;\n            }\n        }\n        return max;",
    "        int max = 0;\n        object max_obj = null;\n        foreach (object obj in (IEnumerable<object>)lst) {\n            if (obj.ToString().Length > max) {\n                max = obj.ToString().Length;\n                max_obj = obj;\n            }\n        }\n        return max_obj;",
    "        int max = 0;\n        object max_item = null;\n        foreach (object item in (IEnumerable<object>)lst) {\n            int len = ((string)item).Length;\n            if (len > max) {\n                max = len;\n                max_item = item;\n            }\n        }\n        return max_item;",
    "        object max = null;\n        int max_len = 0;\n        foreach (object el in (IEnumerable<object>)lst) {\n            int len = 0;\n            if (el is string) {\n                len = ((string)el).Length;\n            } else if (el is IEnumerable<object>) {\n                len = ((IEnumerable<object>)el).Count();\n            }\n            if (len > max_len) {\n                max = el;\n                max_len = len;\n            }\n        }\n        return max;",
    "        var max = lst as IEnumerable<object>;\n        if (max == null)\n            return lst;\n        max = max.Select(FindMax);\n        return max.Aggregate((x, y) => x.ToString().Length > y.ToString().Length ? x : y);",
    "        int max = 0;\n        object max_obj = null;\n        foreach (object obj in (List<object>)lst) {\n            if (obj is List<object>) {\n                int len = ((List<object>)obj).Count;\n                if (len > max) {\n                    max = len;\n                    max_obj = obj;\n                }\n            }\n        }\n        return max_obj;",
    "        // Your code here\n        return null;",
    "        object max = null;\n        int max_len = 0;\n        foreach (object x in (IEnumerable<object>)lst) {\n            int len = ((IEnumerable<object>)x).Count();\n            if (len > max_len) {\n                max = x;\n                max_len = len;\n            }\n        }\n        return max;",
    "        object max = null;\n        foreach (object obj in lst) {\n            if (max == null || len(obj) > len(max)) {\n                max = obj;\n            }\n        }\n        return max;",
    "        int max = 0;\n        object max_obj = null;\n        foreach (object obj in (IEnumerable<object>)lst) {\n            if (obj.ToString().Length > max) {\n                max = obj.ToString().Length;\n                max_obj = obj;\n            }\n        }\n        return max_obj;",
    "        object max = lst;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max.ToString().Length) {\n                max = item;\n            }\n        }\n        return max;",
    "        int max = 0;\n        object max_item = null;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max) {\n                max = item.ToString().Length;\n                max_item = item;\n            }\n        }\n        return max_item;",
    "        var max = lst as IEnumerable<object>;\n        if (max == null) {\n            return null;\n        }\n        var max_len = 0;\n        var max_elem = new object();\n        foreach (var elem in max) {\n            var len = elem.ToString().Length;\n            if (len > max_len) {\n                max_len = len;\n                max_elem = elem;\n            }\n        }\n        return max_elem;",
    "        int max = 0;\n        object max_item = null;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max) {\n                max = item.ToString().Length;\n                max_item = item;\n            }\n        }\n        return max_item;",
    "        object max = lst;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max.ToString().Length) {\n                max = item;\n            }\n        }\n        return max;",
    "        object max = lst;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max.ToString().Length) {\n                max = item;\n            }\n        }\n        return max;",
    "        object max = lst;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max.ToString().Length) {\n                max = item;\n            }\n        }\n        return max;",
    "        if (lst is string) {\n            return lst;\n        }\n        if (lst is IEnumerable<object>) {\n            var max = \"\";\n            foreach (var item in (IEnumerable<object>)lst) {\n                var item_max = FindMax(item);\n                if (item_max is string && (string)item_max != \"\" && (string)item_max != null) {\n                    if ((string)item_max != \"\" && (string)item_max != null && (string)item_max.Length > (string)max.Length) {\n                        max = item_max;\n                    }\n                }\n            }\n            return max;\n        }\n        return \"\";",
    "        if (lst == null) {\n            return null;\n        }\n        if (lst is string) {\n            return lst;\n        }\n        if (lst is IEnumerable<object>) {\n            var max = lst as IEnumerable<object>;\n            foreach (var item in lst as IEnumerable<object>) {\n                var maxItem = FindMax(item);\n                if (maxItem == null) {\n                    continue;\n                }\n                if (maxItem is string) {\n                    if (max is string) {\n                        if (maxItem.ToString().Length > max.ToString().Length) {\n                            max = maxItem;\n                        }\n                    } else {\n                        max = maxItem;\n                    }\n                }\n            }\n            return max;\n        }\n        return null;",
    "        object max = lst;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max.ToString().Length) {\n                max = item;\n            }\n        }\n        return max;",
    "        object max = lst;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max.ToString().Length) {\n                max = item;\n            }\n        }\n        return max;",
    "        object max = lst;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max.ToString().Length) {\n                max = item;\n            }\n        }\n        return max;",
    "        if (lst is List<object>) {\n            var max = 0;\n            var max_elem = lst;\n            foreach (var elem in (List<object>)lst) {\n                var len = FindMax(elem);\n                if (len > max) {\n                    max = len;\n                    max_elem = elem;\n                }\n            }\n            return max_elem;\n        } else {\n            return lst.ToString().Length;\n        }",
    "        // Your code here\n        return null;",
    "        object max = lst;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max.ToString().Length) {\n                max = item;\n            }\n        }\n        return max;",
    "        int max = 0;\n        object max_obj = null;\n        foreach (object obj in (IEnumerable<object>)lst) {\n            int len = ((IEnumerable<object>)obj).Count();\n            if (len > max) {\n                max = len;\n                max_obj = obj;\n            }\n        }\n        return max_obj;",
    "        object max = lst;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max.ToString().Length) {\n                max = item;\n            }\n        }\n        return max;",
    "        object max = lst;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max.ToString().Length) {\n                max = item;\n            }\n        }\n        return max;",
    "        object max = lst;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item is IEnumerable<object>) {\n                object submax = FindMax(item);\n                if (Length(submax) > Length(max)) {\n                    max = submax;\n                }\n            }\n        }\n        return max;",
    "        // Your code here\n        return null;",
    "        if (lst is List<object>) {\n            var max = 0;\n            var max_item = lst;\n            foreach (var item in (List<object>)lst) {\n                var len = FindMax(item);\n                if (len > max) {\n                    max = len;\n                    max_item = item;\n                }\n            }\n            return max_item;\n        } else {\n            return lst.ToString().Length;\n        }",
    "        object max = lst;\n        foreach (object el in (IEnumerable<object>)lst) {\n            if (len(el) > len(max)) {\n                max = el;\n            }\n        }\n        return max;",
    "        if (lst is List<object>) {\n            var max = lst as List<object>;\n            foreach (var item in lst as List<object>) {\n                if (FindMax(item).ToString().Length > FindMax(max).ToString().Length) {\n                    max = item as List<object>;\n                }\n            }\n            return max;\n        }\n        return lst;",
    "        object max = lst;\n        foreach (object el in (IEnumerable<object>)lst) {\n            if (len(el) > len(max)) {\n                max = el;\n            }\n        }\n        return max;",
    "        if (lst is List<object>) {\n            var max = 0;\n            var max_elem = lst;\n            foreach (var elem in (List<object>)lst) {\n                var len = FindMax(elem);\n                if (len > max) {\n                    max = len;\n                    max_elem = elem;\n                }\n            }\n            return max_elem;\n        } else {\n            return 1;\n        }",
    "        var max = lst as IEnumerable<object>;\n        if (max == null) {\n            return lst;\n        }\n        var max_len = max.Max(x => FindMax(x).ToString().Length);\n        return max.First(x => FindMax(x).ToString().Length == max_len);",
    "        List<object> list = (List<object>)lst;\n        object max = list[0];\n        int maxLen = 0;\n        foreach (object obj in list) {\n            if (obj.ToString().Length > maxLen) {\n                max = obj;\n                maxLen = obj.ToString().Length;\n            }\n        }\n        return max;",
    "        var max = lst as IEnumerable<object>;\n        if (max == null) {\n            return lst;\n        }\n        return max.Select(FindMax).Max();",
    "        object max = lst;\n        foreach (var item in (IEnumerable<object>)lst) {\n            if (item is IEnumerable<object>) {\n                var sub = FindMax(item);\n                if (Length(sub) > Length(max)) {\n                    max = sub;\n                }\n            }\n        }\n        return max;",
    "        int max = 0;\n        object max_item = null;\n        foreach (object item in (IEnumerable<object>)lst) {\n            int len = 0;\n            if (item is string) {\n                len = ((string)item).Length;\n            } else if (item is IEnumerable<object>) {\n                len = ((IEnumerable<object>)item).Count();\n            }\n            if (len > max) {\n                max = len;\n                max_item = item;\n            }\n        }\n        return max_item;",
    "        object max = null;\n        int maxLen = 0;\n        foreach (object o in (IEnumerable<object>)lst) {\n            int len = o.ToString().Length;\n            if (len > maxLen) {\n                maxLen = len;\n                max = o;\n            }\n        }\n        return max;",
    "        int max = 0;\n        object max_elem = null;\n        foreach (object elem in (IEnumerable<object>)lst) {\n            if (elem.ToString().Length > max) {\n                max = elem.ToString().Length;\n                max_elem = elem;\n            }\n        }\n        return max_elem;",
    "        int max = 0;\n        object max_obj = null;\n        foreach (object obj in (IEnumerable<object>)lst) {\n            if (obj.ToString().Length > max) {\n                max = obj.ToString().Length;\n                max_obj = obj;\n            }\n        }\n        return max_obj;",
    "        int max = 0;\n        object max_obj = null;\n        foreach (object obj in (IEnumerable<object>)lst) {\n            if (obj.ToString().Length > max) {\n                max = obj.ToString().Length;\n                max_obj = obj;\n            }\n        }\n        return max_obj;",
    "        var max = lst as IEnumerable<object>;\n        if (max == null) {\n            return null;\n        }\n        return max.Aggregate((x, y) => x.ToString().Length > y.ToString().Length ? x : y);",
    "        if (lst is List<object>) {\n            List<object> l = (List<object>)lst;\n            if (l.Count == 0) {\n                return null;\n            }\n            object max = l[0];\n            foreach (object o in l) {\n                if (Length(o) > Length(max)) {\n                    max = o;\n                }\n            }\n            return max;\n        } else {\n            return lst;\n        }",
    "        int max = 0;\n        object max_obj = null;\n        foreach (object obj in lst as IEnumerable<object>) {\n            if (obj is IEnumerable<object>) {\n                int len = (obj as IEnumerable<object>).Count();\n                if (len > max) {\n                    max = len;\n                    max_obj = obj;\n                }\n            }\n        }\n        return max_obj;",
    "        var max = lst;\n        foreach (var item in lst) {\n            if (item.Length > max.Length) {\n                max = item;\n            }\n        }\n        return max;",
    "        int max = 0;\n        object max_item = null;\n        foreach (object item in (IEnumerable<object>)lst) {\n            int len = ((IEnumerable<object>)item).Count();\n            if (len > max) {\n                max = len;\n                max_item = item;\n            }\n        }\n        return max_item;",
    "        object max = lst;\n        foreach (object obj in (IEnumerable<object>)lst) {\n            if (obj.ToString().Length > max.ToString().Length) {\n                max = obj;\n            }\n        }\n        return max;",
    "        object max = lst;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (len(item) > len(max)) {\n                max = item;\n            }\n        }\n        return max;",
    "        object max = lst;\n        foreach (object obj in (IEnumerable<object>)lst) {\n            if (obj.ToString().Length > max.ToString().Length) {\n                max = obj;\n            }\n        }\n        return max;",
    "        object max = lst;\n        foreach (object el in (IEnumerable<object>)lst) {\n            if (len(el) > len(max)) {\n                max = el;\n            }\n        }\n        return max;",
    "        object max = lst;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max.ToString().Length) {\n                max = item;\n            }\n        }\n        return max;",
    "        object max = lst;\n        foreach (object x in (IEnumerable<object>)lst) {\n            if (len(x) > len(max)) {\n                max = x;\n            }\n        }\n        return max;",
    "        int max = 0;\n        object max_elem = null;\n        foreach (object elem in (IEnumerable<object>)lst) {\n            if (elem.ToString().Length > max) {\n                max = elem.ToString().Length;\n                max_elem = elem;\n            }\n        }\n        return max_elem;",
    "        object max = lst;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max.ToString().Length) {\n                max = item;\n            }\n        }\n        return max;",
    "        if (lst is List<object>) {\n            List<object> list = (List<object>)lst;\n            if (list.Count == 0) {\n                return null;\n            }\n            object max = list[0];\n            int max_len = 0;\n            foreach (object obj in list) {\n                int len = Length(obj);\n                if (len > max_len) {\n                    max_len = len;\n                    max = obj;\n                }\n            }\n            return max;\n        }\n        return null;",
    "        var max = lst as IEnumerable<object>;\n        if (max == null) {\n            return lst;\n        }\n        return max.Aggregate((a, b) => (a as IEnumerable<object>).Count() > (b as IEnumerable<object>).Count() ? a : b);",
    "        object max = lst;\n        foreach (object obj in (IEnumerable<object>)lst) {\n            if (obj.ToString().Length > max.ToString().Length) {\n                max = obj;\n            }\n        }\n        return max;",
    "        int max = 0;\n        object max_obj = null;\n        foreach (object obj in (IEnumerable<object>)lst) {\n            int len = ((IEnumerable<object>)obj).Count();\n            if (len > max) {\n                max = len;\n                max_obj = obj;\n            }\n        }\n        return max_obj;",
    "        if (lst is IList<object>) {\n            int max = 0;\n            object max_obj = null;\n            foreach (object obj in (IList<object>)lst) {\n                int len = Length(obj);\n                if (len > max) {\n                    max = len;\n                    max_obj = obj;\n                }\n            }\n            return max_obj;\n        } else {\n            return lst;\n        }",
    "        var max = lst as IEnumerable<object>;\n        if (max == null) {\n            return lst;\n        }\n        return max.Select(FindMax).Max();",
    "        int max = 0;\n        object max_obj = null;\n        foreach (object obj in (IEnumerable<object>)lst) {\n            int len = ((IEnumerable<object>)obj).Count();\n            if (len > max) {\n                max = len;\n                max_obj = obj;\n            }\n        }\n        return max_obj;",
    "        if (lst == null) {\n            return null;\n        }\n        if (lst is string) {\n            return lst;\n        }\n        if (lst is IEnumerable<object>) {\n            var max = (lst as IEnumerable<object>).First();\n            foreach (var item in lst as IEnumerable<object>) {\n                max = FindMax(max) as string;\n                item = FindMax(item) as string;\n                if (max.Length < item.Length) {\n                    max = item;\n                }\n            }\n            return max;\n        }\n        return null;",
    "        if (lst == null) {\n            return null;\n        }\n        if (lst is IEnumerable<object>) {\n            var max = lst as IEnumerable<object>;\n            foreach (var item in lst as IEnumerable<object>) {\n                var itemMax = FindMax(item);\n                if (itemMax != null && itemMax.ToString().Length > max.ToString().Length) {\n                    max = itemMax;\n                }\n            }\n            return max;\n        }\n        return lst;",
    "        if (lst is List<object>) {\n            List<object> l = (List<object>)lst;\n            if (l.Count == 0) {\n                return null;\n            }\n            object max = l[0];\n            int maxLen = Length(max);\n            for (int i = 1; i < l.Count; i++) {\n                int len = Length(l[i]);\n                if (len > maxLen) {\n                    max = l[i];\n                    maxLen = len;\n                }\n            }\n            return max;\n        }\n        return null;",
    "        if (lst is List<object>) {\n            List<object> l = (List<object>)lst;\n            if (l.Count == 0) {\n                return null;\n            }\n            object max = l[0];\n            int maxLen = Length(max);\n            for (int i = 1; i < l.Count; i++) {\n                int len = Length(l[i]);\n                if (len > maxLen) {\n                    max = l[i];\n                    maxLen = len;\n                }\n            }\n            return max;\n        }\n        return null;",
    "        object max = lst;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max.ToString().Length)\n                max = item;\n        }\n        return max;",
    "        object max = lst;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max.ToString().Length) {\n                max = item;\n            }\n        }\n        return max;",
    "        object max = lst;\n        foreach (object el in (IEnumerable<object>)lst) {\n            if (len(el) > len(max)) {\n                max = el;\n            }\n        }\n        return max;",
    "        var max = lst as IEnumerable<object>;\n        if (max == null) return null;\n        var max_len = 0;\n        var max_obj = new object();\n        foreach (var obj in max) {\n            var len = obj as IEnumerable<object>;\n            if (len == null) continue;\n            if (len.Count() > max_len) {\n                max_len = len.Count();\n                max_obj = obj;\n            }\n        }\n        return max_obj;",
    "        var max = lst as IEnumerable<object>;\n        if (max == null) return lst;\n        return max.Aggregate((a, b) => (a as IEnumerable<object>).Count() > (b as IEnumerable<object>).Count() ? a : b);",
    "        int max = 0;\n        object max_element = null;\n        foreach (object element in (IEnumerable<object>)lst) {\n            if (element.ToString().Length > max) {\n                max = element.ToString().Length;\n                max_element = element;\n            }\n        }\n        return max_element;",
    "        object max = null;\n        int max_len = 0;\n        foreach (object el in (IEnumerable<object>)lst) {\n            int len = 0;\n            if (el is string) {\n                len = ((string)el).Length;\n            } else if (el is IEnumerable<object>) {\n                len = ((IEnumerable<object>)el).Count();\n            }\n            if (len > max_len) {\n                max = el;\n                max_len = len;\n            }\n        }\n        return max;",
    "        if (lst is List<object>) {\n            List<object> l = (List<object>)lst;\n            if (l.Count == 0) {\n                return null;\n            }\n            object max = l[0];\n            foreach (object x in l) {\n                if (x is List<object>) {\n                    object m = FindMax(x);\n                    if (m is List<object>) {\n                        if (((List<object>)m).Count > ((List<object>)max).Count) {\n                            max = m;\n                        }\n                    }\n                }\n            }\n            return max;\n        }\n        return null;",
    "        int max = 0;\n        object max_el = null;\n        foreach (object el in (IEnumerable<object>)lst) {\n            if (el.ToString().Length > max) {\n                max = el.ToString().Length;\n                max_el = el;\n            }\n        }\n        return max_el;",
    "        var max = lst as IEnumerable<object>;\n        if (max == null) {\n            return null;\n        }\n        var max_len = 0;\n        var max_elem = new object();\n        foreach (var elem in max) {\n            var len = elem.ToString().Length;\n            if (len > max_len) {\n                max_len = len;\n                max_elem = elem;\n            }\n        }\n        return max_elem;",
    "        object max = lst;\n        foreach (object el in (IEnumerable<object>)lst) {\n            if (len(el) > len(max)) {\n                max = el;\n            }\n        }\n        return max;",
    "        int max = 0;\n        object max_elem = null;\n        foreach (object elem in (List<object>)lst) {\n            if (elem is List<object>) {\n                object sub_max = FindMax((List<object>)elem);\n                if (sub_max != null) {\n                    int len = ((List<object>)sub_max).Count;\n                    if (len > max) {\n                        max = len;\n                        max_elem = sub_max;\n                    }\n                }\n            }\n        }\n        return max_elem;",
    "        object max = null;\n        int max_len = 0;\n        foreach (object obj in (IEnumerable<object>)lst) {\n            int len = 0;\n            if (obj is string) {\n                len = ((string)obj).Length;\n            } else if (obj is IEnumerable<object>) {\n                len = ((IEnumerable<object>)obj).Count();\n            }\n            if (len > max_len) {\n                max = obj;\n                max_len = len;\n            }\n        }\n        return max;",
    "        int max = 0;\n        object max_obj = null;\n        foreach (object obj in (IEnumerable<object>)lst) {\n            if (obj.ToString().Length > max) {\n                max = obj.ToString().Length;\n                max_obj = obj;\n            }\n        }\n        return max_obj;",
    "        if (lst is List<object>) {\n            var max = lst as List<object>;\n            foreach (var item in lst as List<object>) {\n                if (FindMax(item).ToString().Length > FindMax(max).ToString().Length) {\n                    max = item as List<object>;\n                }\n            }\n            return max;\n        }\n        else {\n            return lst;\n        }",
    "        object max = lst;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max.ToString().Length) {\n                max = item;\n            }\n        }\n        return max;",
    "        if (lst == null) {\n            return null;\n        }\n        if (lst is IList<object>) {\n            IList<object> l = (IList<object>)lst;\n            if (l.Count == 0) {\n                return null;\n            }\n            object max = l[0];\n            int maxLen = FindMax(max).ToString().Length;\n            for (int i = 1; i < l.Count; i++) {\n                object cur = l[i];\n                int curLen = FindMax(cur).ToString().Length;\n                if (curLen > maxLen) {\n                    max = cur;\n                    maxLen = curLen;\n                }\n            }\n            return max;\n        }\n        return lst;",
    "        if (lst == null) {\n            return null;\n        }\n        if (lst is string) {\n            return lst;\n        }\n        if (lst is IEnumerable<object>) {\n            int maxLength = 0;\n            object maxElement = null;\n            foreach (var element in (IEnumerable<object>)lst) {\n                var elementMax = FindMax(element);\n                if (elementMax is string) {\n                    var elementMaxLength = ((string)elementMax).Length;\n                    if (elementMaxLength > maxLength) {\n                        maxLength = elementMaxLength;\n                        maxElement = elementMax;\n                    }\n                }\n            }\n            return maxElement;\n        }\n        throw new ArgumentException(\"Invalid type\");",
    "        object max = lst;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (len(item) > len(max)) {\n                max = item;\n            }\n        }\n        return max;",
    "        if (lst == null) {\n            return null;\n        }\n        if (lst is IEnumerable<object>) {\n            var max = lst as IEnumerable<object>;\n            foreach (var item in lst as IEnumerable<object>) {\n                var itemMax = FindMax(item);\n                if (itemMax != null) {\n                    max = max.Concat(new object[] { itemMax });\n                }\n            }\n            return max;\n        }\n        return null;",
    "        object max = lst;\n        foreach (var item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max.ToString().Length) {\n                max = item;\n            }\n        }\n        return max;",
    "        object max = lst;\n        foreach (object el in (IEnumerable<object>)lst) {\n            if (len(el) > len(max)) {\n                max = el;\n            }\n        }\n        return max;",
    "        object max = lst;\n        foreach (object item in (IEnumerable<object>)lst) {\n            if (item.ToString().Length > max.ToString().Length) {\n                max = item;\n            }\n        }\n        return max;",
    "        object max = lst;\n        foreach (object el in (IEnumerable<object>)lst) {\n            if (len(el) > len(max)) {\n                max = el;\n            }\n        }\n        return max;"
  ]
}
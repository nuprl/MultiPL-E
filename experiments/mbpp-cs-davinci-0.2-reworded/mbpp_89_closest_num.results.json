{
  "name": "mbpp_89_closest_num",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_89_closest_num.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        var s = N.ToString();\n        var n = s.Length;\n        var i = n - 1;\n        while (i > 0 && s[i] <= s[i - 1]) {\n            i--;\n        }\n        if (i == 0) {\n            return -1;\n        }\n        var j = n - 1;\n        while (s[j] >= s[i - 1]) {\n            j--;\n        }\n        var t = s[i - 1];\n        s = s.Remove(i - 1, 1).Insert(i - 1, s[j].ToString());\n        s = s.Remove(j, 1).Insert(j, t.ToString());\n        var k = n - 1;\n        while (i < k) {\n            t = s[i];\n            s = s.Remove(i, 1).Insert(i, s[k].ToString());\n            s = s.Remove(k, 1).Insert(k, t.ToString());\n            i++;\n            k--;\n        }\n        return long.Parse(s);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1665510444,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f67c5d7f69b348fcbcacf2b3847de148>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f67c5d7f69b348fcbcacf2b3847de148>:0 \n\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.ClosestNum (System.Int64 N) [0x0005e] in <f67c5d7f69b348fcbcacf2b3847de148>:0 \n  at Problem.Main (System.String[] args) [0x00025] in <f67c5d7f69b348fcbcacf2b3847de148>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeExcep",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long n = N;\n        long i = 0;\n        while (n > 0) {\n            if ((n & 1) == 1) {\n                break;\n            }\n            i++;\n            n >>= 1;\n        }\n        return N - (1 << i);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1665510444,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplh0i29_t.cs(20,21): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Write your code here\n        // To debug: Console.Error.WriteLine(\"Debug messages...\");\n        long n = N;\n        long max = 0;\n        long min = 0;\n        long mid = 0;\n        long max_mid = 0;\n        long min_mid = 0;\n        long max_min = 0;\n        long min_max = 0;\n        long max_max = 0;\n        long min_min = 0;\n        long max_max_min = 0;\n        long min_min_max = 0;\n        long max_max_max = 0;\n        long min_min_min = 0;\n        long max_max_max_min = 0;\n        long min_min_min_max = 0;\n        long max_max_max_max = 0;\n        long min_min_min_min = 0;\n        long max_max_max_max_min = 0;\n        long min_min_min_min_max = 0;\n        long max_max_max_max_max = 0;\n        long min_min_min_min_min = 0;\n        long max_max_max_max_max_min = 0;\n        long min_min_min_min_min_max = 0;\n        long max_max_max_max_max_max = 0;\n        long min_min_min_min_min_min = 0;\n        long max_max_max_max_max_max_min = 0;\n        long min_min_min_min_min_min_max = 0;\n        long max_max_max_max_max_max_max = 0;\n        long min_min_min_min_min_min_min = 0;\n        long max_max_max_max_max_max_max_min = 0;\n        long min_min_min_min_min_min_min_max = 0;\n        long max_max_max_max_max_max_max_max = 0;\n        long min_min_min_min_min_min_min_min = 0;\n        long max_max_max_max_max_max_max_max_min = 0\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1665510444,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_pfvnbxr.cs(47,53): error CS1002: ; expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        var s = N.ToString();\n        var n = s.Length;\n        var i = n - 1;\n        while (i > 0 && s[i - 1] <= s[i]) i--;\n        if (i == 0) return -1;\n        var j = n - 1;\n        while (s[j] >= s[i - 1]) j--;\n        var t = s[i - 1];\n        s = s.Remove(i - 1, 1).Insert(i - 1, s[j].ToString());\n        s = s.Remove(j, 1).Insert(j, t.ToString());\n        var s1 = s.Substring(0, i);\n        var s2 = s.Substring(i);\n        var s3 = new string(s2.Reverse().ToArray());\n        return long.Parse(s1 + s3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1665510444,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b3be368d7fe448bcbc0f7756149840ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b3be368d7fe448bcbc0f7756149840ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        var bits = new List<bool>();\n        while (N > 0) {\n            bits.Add((N & 1) == 1);\n            N >>= 1;\n        }\n        bits.Reverse();\n        for (int i = 0; i < bits.Count; i++) {\n            if (bits[i] && !bits[i + 1]) {\n                bits[i] = false;\n                bits[i + 1] = true;\n                break;\n            }\n        }\n        long ret = 0;\n        for (int i = 0; i < bits.Count; i++) {\n            ret |= (bits[i] ? 1 : 0) << i;\n        }\n        return ret;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1665510444,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7ae9bdbf620f4c6d8d7bf53af5531a0e>:0 \n\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.ClosestNum (System.Int64 N) [0x0003d] in <7ae9bdbf620f4c6d8d7bf53af5531a0e>:0 \n  at Problem.Main (System.String[] args) [0x00014] in <7ae9bdbf620f4c6d8d7bf53af5531a0e>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.ClosestNum (System.Int64 N) [0x0003d] in <7ae9bdbf620f4c6d8d7bf53af5531a0e>:0 \n  at Problem.Main (System.String[] args) [0x00014] in <7ae9bdbf620f4c6d8d7bf53af5531a0e>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        var n = N;\n        var i = 0;\n        while (n > 0) {\n            if ((n & 1) == 0) {\n                n = n >> 1;\n            } else {\n                n = n >> 1;\n                break;\n            }\n            i++;\n        }\n        return N - (1L << i);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1665510444,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <dbea86c751f94ed7aed496b51bfc86e2>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the number of digits in N\n        int digits = (int)Math.Floor(Math.Log10(N)) + 1;\n        // Find the closest power of 10\n        long closestPower = (long)Math.Pow(10, digits - 1);\n        // Find the closest number\n        long closestNum = 0;\n        for (int i = 0; i < digits; i++) {\n            closestNum += (N / closestPower) * closestPower;\n            N %= closestPower;\n            closestPower /= 10;\n        }\n        return closestNum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1665510444,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <507d3be386b84ffea32fc3adfcb50f80>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <507d3be386b84ffea32fc3adfcb50f80>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the first bit that is 1.\n        int i = 0;\n        while ((N & (1 << i)) == 0) {\n            i++;\n        }\n        // Flip the bit to 0.\n        N &= ~(1 << i);\n        // Set the next bit to 1.\n        N |= (1 << (i - 1));\n        return N;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1665510444,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <30d89a2f5cb74e12a24e27bdf95bf4a3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <30d89a2f5cb74e12a24e27bdf95bf4a3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        var digits = new List<long>();\n        var n = N;\n        while (n > 0) {\n            digits.Add(n % 10);\n            n /= 10;\n        }\n        digits.Reverse();\n        var len = digits.Count;\n        for (int i = 1; i < len; i++) {\n            if (digits[i] < digits[i - 1]) {\n                var tmp = digits[i];\n                digits[i] = digits[i - 1];\n                digits[i - 1] = tmp;\n                break;\n            }\n        }\n        var res = 0L;\n        for (int i = 0; i < len; i++) {\n            res = res * 10 + digits[i];\n        }\n        return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1665510444,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4cd4acadf5a24f5eba8cc39218ea6c1f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4cd4acadf5a24f5eba8cc39218ea6c1f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        var n = N;\n        var i = 0;\n        while (n > 0) {\n            if ((n & 1) == 0) {\n                n >>= 1;\n                i++;\n            } else {\n                n -= 1;\n                break;\n            }\n        }\n        return N - (1 << i);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1665510444,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <78c1ec5d86c84eaaa512bd4e92832ee5>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the first 1 bit from the right.\n        int i = 0;\n        while ((N & (1 << i)) == 0) {\n            i++;\n        }\n        // Find the first 0 bit from the right.\n        int j = i + 1;\n        while ((N & (1 << j)) != 0) {\n            j++;\n        }\n        // Swap the bits.\n        N = N & ~(1 << i) & ~(1 << j);\n        N = N | (1 << i) | (1 << j);\n        return N;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1665510444,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ec288d17dde04ef0accf30c66896af0a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ec288d17dde04ef0accf30c66896af0a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long[] digits = new long[20];\n        long n = N;\n        int len = 0;\n        while (n > 0) {\n            digits[len++] = n % 10;\n            n /= 10;\n        }\n        for (int i = len - 1; i > 0; i--) {\n            if (digits[i] < digits[i - 1]) {\n                long tmp = digits[i - 1];\n                digits[i - 1] = digits[i];\n                digits[i] = tmp;\n                break;\n            }\n        }\n        long res = 0;\n        for (int i = len - 1; i >= 0; i--) {\n            res = res * 10 + digits[i];\n        }\n        return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1665510444,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2170cec180994c8aaae6a3bc4a78b77e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2170cec180994c8aaae6a3bc4a78b77e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long n = N;\n        int i = 0;\n        while (n > 0) {\n            n >>= 1;\n            i++;\n        }\n        long mask = (1L << i) - 1;\n        return N & mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1665510444,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f7a6bbd822142f6b5dc7a99e2c1b1fa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f7a6bbd822142f6b5dc7a99e2c1b1fa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the number of bits in N\n        int bits = (int)Math.Floor(Math.Log(N, 2)) + 1;\n        // Find the largest power of 2 less than N\n        long largestPower = (long)Math.Pow(2, bits - 1);\n        // Find the closest number to N that is smaller than N and is a power of 2\n        return largestPower - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1665510444,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d9fbada57e374550a0be5fb6db140ec8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d9fbada57e374550a0be5fb6db140ec8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        var s = N.ToString();\n        var l = s.Length;\n        var d = s[l - 1];\n        var p = s.Substring(0, l - 1);\n        if (d == '0') {\n            return long.Parse(p + \"9\");\n        }\n        return long.Parse(p + (char)(d - 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1665510444,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the first 1 bit from the right.\n        int i = 0;\n        while ((N & (1 << i)) == 0) {\n            i++;\n        }\n        // Flip the first 1 bit from the right.\n        N = N & ~(1 << i);\n        // Add 1 to the right of the flipped bit.\n        N = N | (1 << (i - 1));\n        return N;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1665510444,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <48564f143a1d414280ccb8c338f12622>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <48564f143a1d414280ccb8c338f12622>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Convert N to binary\n        string binary = Convert.ToString(N, 2);\n        // Find the first 1 from the right\n        int index = binary.LastIndexOf('1');\n        // If there is no 1, then return 0\n        if (index == -1)\n            return 0;\n        // If there is a 1, then flip the bit at index\n        binary = binary.Substring(0, index) + '0' + binary.Substring(index + 1);\n        // Convert the binary string back to decimal\n        return Convert.ToInt64(binary, 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1665510444,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <978d685a94d649178b7a2b483d095764>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the first 1 bit from the right.\n        int i = 0;\n        while ((N & (1 << i)) == 0) {\n            i++;\n        }\n        // Flip the first 0 bit from the right.\n        return N & ~(1 << i);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1665510444,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <568f238c63964061b71957c93d142fb0>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the closest smaller number than n.\n        // The number must be a multiple of 3.\n        // The number must have the same number of digits as n.\n        // The number must be a palindrome.\n        // The number must be less than n.\n        // The number must be greater than 0.\n        // The number must be a multiple of 3.\n        // The number must have the same number of digits as n.\n        // The number must be a palindrome.\n        // The number must be less than n.\n        // The number must be greater than 0.\n        // The number must be a multiple of 3.\n        // The number must have the same number of digits as n.\n        // The number must be a palindrome.\n        // The number must be less than n.\n        // The number must be greater than 0.\n        // The number must be a multiple of 3.\n        // The number must have the same number of digits as n.\n        // The number must be a palindrome.\n        // The number must be less than n.\n        // The number must be greater than 0.\n        // The number must be a multiple of 3.\n        // The number must have the same number of digits as n.\n        // The number must be a palindrome.\n        // The number must be less than n.\n        // The number must be greater than 0.\n        // The number must be a multiple of 3.\n        // The number must have the same number of digits as n.\n        // The number must be a palindrome.\n        // The number must be less than n.\n        // The number must be greater than 0.\n        // The number must be a multiple of 3.\n        // The number must have the same number of digits as n.\n        // The number must be a palindrome.\n        // The number must be less than n.\n        // The number must be greater than 0.\n        // The number must be a multiple of 3.\n        // The number must have the same number of digits as n.\n        // The number must be a palindrome.\n        // The number must be less than n.\n        // The number must be greater than 0.\n        // The number must be a multiple of 3.\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1665510444,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnjgnu383.cs(10,24): error CS0161: 'Problem.ClosestNum(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        var digits = new List<int>();\n        while (N > 0) {\n            digits.Add((int)(N % 10));\n            N /= 10;\n        }\n        digits.Reverse();\n        var n = digits.Count;\n        var i = n - 1;\n        while (i > 0 && digits[i] >= digits[i - 1]) {\n            i--;\n        }\n        if (i == 0) {\n            return -1;\n        }\n        var j = n - 1;\n        while (digits[j] >= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = n - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        var result = 0L;\n        foreach (var d in digits) {\n            result = result * 10 + d;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1665510444,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <34567e123db8456081c47a73780eced3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <34567e123db8456081c47a73780eced3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        var n = N.ToString();\n        var n1 = n.Substring(0, n.Length - 1);\n        var n2 = n.Substring(1);\n        var n3 = n.Substring(0, n.Length - 2) + n[n.Length - 1] + n[n.Length - 2];\n        var n4 = n.Substring(0, n.Length - 2) + n[n.Length - 2] + n[n.Length - 1];\n        var n5 = n.Substring(0, n.Length - 3) + n[n.Length - 1] + n[n.Length - 2] + n[n.Length - 3];\n        var n6 = n.Substring(0, n.Length - 3) + n[n.Length - 2] + n[n.Length - 1] + n[n.Length - 3];\n        var n7 = n.Substring(0, n.Length - 3) + n[n.Length - 3] + n[n.Length - 1] + n[n.Length - 2];\n        var n8 = n.Substring(0, n.Length - 3) + n[n.Length - 3] + n[n.Length - 2] + n[n.Length - 1];\n        var n9 = n.Substring(0, n.Length - 3) + n[n.Length - 2] + n[n.Length - 3] + n[n.Length - 1];\n        var n10 = n.Substring(0, n.Length - 3) + n[n.Length - 1] + n[n.Length - 3] + n[n.Length - 2];\n        var n11 = n.Substring(0, n.Length - 3) + n[n.Length - 3] + n[n.Length - 1] + n[n.Length - 2];\n        var n12 = n.Substring(0, n.Length - 3) + n[n.Length - 3] + n[n.Length - 2] + n[n.Length - 1];\n        var n13 = n.Substring(0, n.Length - 3) + n[n.Length - 1]\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123236,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpo3evhedo.cs(24,65): error CS1002: ; expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the smallest prime factor of N.\n        long p = SmallestPrimeFactor(N);\n        // If N is prime, then the closest number is N-1.\n        if (p == N) return N-1;\n        // Otherwise, the closest number is N/p.\n        return N/p;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123236,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp7__998r2.cs(12,18): error CS0103: The name 'SmallestPrimeFactor' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the closest smaller number than n.\n        // The number must be a multiple of 3.\n        // The number must be a multiple of 5.\n        // The number must be a multiple of 7.\n        // The number must be a multiple of 11.\n        // The number must be a multiple of 13.\n        // The number must be a multiple of 17.\n        // The number must be a multiple of 19.\n        // The number must be a multiple of 23.\n        // The number must be a multiple of 29.\n        // The number must be a multiple of 31.\n        // The number must be a multiple of 37.\n        // The number must be a multiple of 41.\n        // The number must be a multiple of 43.\n        // The number must be a multiple of 47.\n        // The number must be a multiple of 53.\n        // The number must be a multiple of 59.\n        // The number must be a multiple of 61.\n        // The number must be a multiple of 67.\n        // The number must be a multiple of 71.\n        // The number must be a multiple of 73.\n        // The number must be a multiple of 79.\n        // The number must be a multiple of 83.\n        // The number must be a multiple of 89.\n        // The number must be a multiple of 97.\n        // The number must be a multiple of 101.\n        // The number must be a multiple of 103.\n        // The number must be a multiple of 107.\n        // The number must be a multiple of 109.\n        // The number must be a multiple of 113.\n        // The number must be a multiple of 127.\n        // The number must be a multiple of 131.\n        // The number must be a multiple of 137.\n        // The number must be a multiple of 139.\n        // The number must be a multiple of 149.\n        // The number must be a multiple of 151.\n        // The number must be a multiple of 157.\n        // The number must be a multiple of 163.\n        // The number must be a multiple of 167.\n        // The number must be a multiple of 173.\n        // The number must be a multiple of 179.\n        // The number must be a multiple of 181.\n        // The number must be a multiple\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123236,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpfeq52vzf.cs(10,24): error CS0161: 'Problem.ClosestNum(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Convert to binary\n        string bin = Convert.ToString(N, 2);\n        // Find the first 1 from the right\n        int i = bin.Length - 1;\n        while (bin[i] != '1') {\n            i--;\n        }\n        // Swap the first 1 with the next 0\n        bin = bin.Substring(0, i) + '0' + bin.Substring(i + 1);\n        // Find the first 0 from the right\n        i = bin.Length - 1;\n        while (bin[i] != '0') {\n            i--;\n        }\n        // Swap the first 0 with the next 1\n        bin = bin.Substring(0, i) + '1' + bin.Substring(i + 1);\n        // Convert back to decimal\n        return Convert.ToInt64(bin, 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123237,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a1be4360a2874dae9383db1d4948c901>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a1be4360a2874dae9383db1d4948c901>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long n = N;\n        int i = 0;\n        while (n > 0) {\n            n >>= 1;\n            i++;\n        }\n        return 1L << (i - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123237,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1744b090c654420baa6823dc87080b84>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1744b090c654420baa6823dc87080b84>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the closest smaller number than N.\n        // If N is a power of 2, return N/2.\n        // If N is not a power of 2, return the largest power of 2 less than N.\n        if (N == 0) return 0;\n        if (N == 1) return 0;\n        if (N == 2) return 1;\n        if (N == 3) return 2;\n        if (N == 4) return 2;\n        if (N == 5) return 4;\n        if (N == 6) return 4;\n        if (N == 7) return 4;\n        if (N == 8) return 4;\n        if (N == 9) return 8;\n        if (N == 10) return 8;\n        if (N == 11) return 8;\n        if (N == 12) return 8;\n        if (N == 13) return 8;\n        if (N == 14) return 8;\n        if (N == 15) return 8;\n        if (N == 16) return 8;\n        if (N == 17) return 16;\n        if (N == 18) return 16;\n        if (N == 19) return 16;\n        if (N == 20) return 16;\n        if (N == 21) return 16;\n        if (N == 22) return 16;\n        if (N == 23) return 16;\n        if (N == 24) return 16;\n        if (N == 25) return 16;\n        if (N == 26) return 16;\n        if (N == 27) return 16;\n        if (N == 28) return 16;\n        if (N == 29) return 16;\n        if (N == 30) return 16;\n        if (N == 31) return 16;\n        if (N == 32) return 16;\n        if (N == 33) return 32;\n        if (N == 34) return 32;\n        if (N == 35) return 32;\n        if (N == 36) return 32;\n        if (N == 37) return 32;\n        if (N == 38) return 32;\n        if (N == 39) return 32;\n        if (N == 40) return 32;\n        if (N == 41) return 32;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123236,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpk8p_i_ix.cs(10,24): error CS0161: 'Problem.ClosestNum(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the smallest power of 2 that is greater than N.\n        long power = 1;\n        while (power <= N) {\n            power *= 2;\n        }\n        power /= 2;\n        // Find the closest number to N that is a power of 2.\n        if (N - power <= power / 2) {\n            return power;\n        } else {\n            return power * 2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123237,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a87fb2e798a445a1ad4c1196a06a9588>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a87fb2e798a445a1ad4c1196a06a9588>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long[] digits = new long[20];\n        long n = N;\n        int i = 0;\n        while (n > 0) {\n            digits[i++] = n % 10;\n            n /= 10;\n        }\n        i--;\n        int j = i - 1;\n        while (j >= 0 && digits[j] <= digits[j + 1]) j--;\n        if (j < 0) return -1;\n        long min = digits[j + 1];\n        int min_i = j + 1;\n        for (int k = j + 2; k <= i; k++) {\n            if (digits[k] < min && digits[k] > digits[j]) {\n                min = digits[k];\n                min_i = k;\n            }\n        }\n        long temp = digits[j];\n        digits[j] = digits[min_i];\n        digits[min_i] = temp;\n        Array.Sort(digits, j + 1, i - j);\n        long res = 0;\n        for (int k = 0; k <= i; k++) {\n            res = res * 10 + digits[k];\n        }\n        return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123237,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a706146b3fa14815b4845798a7e4d584>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a706146b3fa14815b4845798a7e4d584>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long[] bits = new long[64];\n        long n = N;\n        int i = 0;\n        while (n > 0) {\n            bits[i++] = n % 2;\n            n /= 2;\n        }\n        int j = i - 1;\n        while (j > 0) {\n            if (bits[j] == 1 && bits[j - 1] == 0) {\n                bits[j] = 0;\n                bits[j - 1] = 1;\n                break;\n            }\n            j--;\n        }\n        long res = 0;\n        for (int k = 0; k < i; k++) {\n            res += bits[k] * (long)Math.Pow(2, k);\n        }\n        return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123237,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5103b1d2551445a68d73ab33b9a669f9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5103b1d2551445a68d73ab33b9a669f9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // If N is even, the closest smaller number is N-1.\n        if (N % 2 == 0) {\n            return N - 1;\n        }\n        // If N is odd, the closest smaller number is N-2.\n        else {\n            return N - 2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123237,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <90f147c60abd4724a07c7ac1e308bdbf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <90f147c60abd4724a07c7ac1e308bdbf>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the first bit that is 0\n        long mask = 1;\n        while ((N & mask) != 0) {\n            mask <<= 1;\n        }\n        // Flip the bit\n        mask -= 1;\n        return N ^ mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123237,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <be59f09fa19940e2a2714be432f04093>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <be59f09fa19940e2a2714be432f04093>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the first non-zero bit from the right.\n        int i = 0;\n        while ((N & 1) == 0) {\n            N >>= 1;\n            i++;\n        }\n        // Flip the bit.\n        N ^= 1;\n        // Set all the bits to the right of the flipped bit to 1.\n        N |= (1 << i) - 1;\n        return N;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123237,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5d396a07722b442db48a0b5ffdda503c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the smallest number that is greater than N and is a power of 2.\n        long result = 1;\n        while (result < N) {\n            result *= 2;\n        }\n        // Return the number that is one less than the smallest number.\n        return result / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123237,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3df86bd865bc4664acba93cc40c6c185>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3df86bd865bc4664acba93cc40c6c185>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long n = N;\n        long mask = 1;\n        while ((n & mask) == 0) {\n            mask <<= 1;\n        }\n        return n ^ mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123237,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <72bb8c59faa64e509349d38284c07213>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // We will use the binary representation of N to find the closest number.\n        // We will find the first 1 from the right, and change it to 0.\n        // Then we will change the next 0 to 1.\n        // If there is no 0 to the right of the first 1, then we will change the first 1 to 0.\n        // Then we will change the next 0 to 1.\n        // If there is no 0 to the right of the first 1, then we will change the first 1 to 0.\n        // Then we will change the next 0 to 1.\n        // If there is no 0 to the right of the first 1, then we will change the first 1 to 0.\n        // Then we will change the next 0 to 1.\n        // If there is no 0 to the right of the first 1, then we will change the first 1 to 0.\n        // Then we will change the next 0 to 1.\n        // If there is no 0 to the right of the first 1, then we will change the first 1 to 0.\n        // Then we will change the next 0 to 1.\n        // If there is no 0 to the right of the first 1, then we will change the first 1 to 0.\n        // Then we will change the next 0 to 1.\n        // If there is no 0 to the right of the first 1, then we will change the first 1 to 0.\n        // Then we will change the next 0 to 1.\n        // If there is no 0 to the right of the first 1, then we will change the first 1 to 0.\n        // Then we will change the next 0 to 1.\n        // If there is no 0 to the right of the first 1, then we will change the first 1 to 0.\n        // Then we will change the next 0 to 1.\n        // If there is no 0 to the right of the first 1, then we will change the first 1 to 0.\n        // Then we will change the next 0 to 1.\n        // If there is no 0 to the right of the first 1, then we will change the first 1 to 0.\n        // Then we will change the next 0 to 1.\n        // If there is no 0 to the right of the first 1, then we will change the first 1 to 0.\n        // Then we will change the\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123236,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpr8wcvhy5.cs(10,24): error CS0161: 'Problem.ClosestNum(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Write your code here\n        // To debug: Console.Error.WriteLine(\"Debug messages...\");\n        long n = N;\n        long m = 0;\n        long t = 0;\n        while (n > 0) {\n            long d = n % 10;\n            n /= 10;\n            if (d == 0) {\n                m = m * 10 + d;\n            } else {\n                m = m * 10 + d - 1;\n                t = t * 10 + 9;\n            }\n        }\n        return m + t;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123237,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ed85656c48ac455bb9c26b8597e04d3e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ed85656c48ac455bb9c26b8597e04d3e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the smallest power of 2 greater than N\n        long P = 1;\n        while (P < N) {\n            P <<= 1;\n        }\n        // Find the closest number to N that is a power of 2\n        long Q = P >> 1;\n        if (N - Q < P - N) {\n            return Q;\n        } else {\n            return P;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123237,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <81c1a39360bb418c85fb990d4075f8ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <81c1a39360bb418c85fb990d4075f8ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long n = N;\n        int i = 0;\n        while (n > 0) {\n            if ((n & 1) == 1) {\n                break;\n            }\n            n >>= 1;\n            i++;\n        }\n        return N - (1 << i);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123237,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a89bc381fa8f445992264ad6caa82531>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        var num = N;\n        var count = 0;\n        while (num > 0) {\n            if ((num & 1) == 1) {\n                break;\n            }\n            num >>= 1;\n            count++;\n        }\n        return N - (1 << count);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123237,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8cd610e38af840bb94a67348972f0feb>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long n = N;\n        int i = 0;\n        while (n > 0) {\n            n >>= 1;\n            i++;\n        }\n        return N - (1 << (i - 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123237,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fb2614ccbc6c4e358ac492df62554222>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fb2614ccbc6c4e358ac492df62554222>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long n = N;\n        int i = 0;\n        while (n > 0) {\n            if ((n & 1) == 0) {\n                n--;\n                n |= (1 << i);\n                break;\n            }\n            n >>= 1;\n            i++;\n        }\n        return n;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123237,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <333bf1da2a624bbe90eebf35785b690e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <333bf1da2a624bbe90eebf35785b690e>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        var str = N.ToString();\n        var len = str.Length;\n        var i = len - 1;\n        while (i > 0 && str[i] >= str[i - 1]) {\n            i--;\n        }\n        if (i == 0) {\n            return -1;\n        }\n        var j = len - 1;\n        while (j > i && str[j] >= str[i - 1]) {\n            j--;\n        }\n        var sb = new StringBuilder(str);\n        sb[i - 1] = str[j];\n        sb[j] = str[i - 1];\n        var res = long.Parse(sb.ToString());\n        return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123237,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ea03d54274604402a42257ad94a591b2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ea03d54274604402a42257ad94a591b2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        var digits = new List<int>();\n        while (N > 0) {\n            digits.Add((int)(N % 10));\n            N /= 10;\n        }\n        digits.Reverse();\n        var n = digits.Count;\n        for (int i = n - 1; i > 0; i--) {\n            if (digits[i] < digits[i - 1]) {\n                var temp = digits[i];\n                digits[i] = digits[i - 1];\n                digits[i - 1] = temp;\n                break;\n            }\n        }\n        long ans = 0;\n        for (int i = 0; i < n; i++) {\n            ans = ans * 10 + digits[i];\n        }\n        return ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123237,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <139177a54b7c437e83fc12349f19120b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <139177a54b7c437e83fc12349f19120b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        var b = new StringBuilder();\n        var s = N.ToString();\n        var i = s.Length - 1;\n        while (i > 0 && s[i] <= s[i - 1]) {\n            i--;\n        }\n        if (i == 0) {\n            return -1;\n        }\n        var j = s.Length - 1;\n        while (s[j] >= s[i - 1]) {\n            j--;\n        }\n        b.Append(s.Substring(0, i - 1));\n        b.Append(s[j]);\n        var t = s.Substring(i, s.Length - i);\n        t = t.Remove(t.IndexOf(s[j]), 1);\n        b.Append(t.OrderBy(c => c));\n        return long.Parse(b.ToString());\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123237,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ccfc885a07ad43ffad239834b5099806>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ccfc885a07ad43ffad239834b5099806>:0 \n\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.ClosestNum (System.Int64 N) [0x00067] in <ccfc885a07ad43ffad239834b5099806>:0 \n  at Problem.Main (System.String[] args) [0x00025] in <ccfc885a07ad43ffad239834b5099806>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeExcep",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the first bit that is 1.\n        long bit = 1;\n        while ((bit & N) == 0) {\n            bit <<= 1;\n        }\n        // Flip the first bit that is 1.\n        return N ^ bit;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123237,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c38d984d4816484ea3a6e0460d7866c3>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long n = N;\n        long mask = 1;\n        long count = 0;\n        long num = 0;\n        while (n > 0) {\n            if ((n & mask) == 0) {\n                num |= mask;\n                count++;\n            }\n            n >>= 1;\n            mask <<= 1;\n        }\n        num |= mask;\n        num >>= 1;\n        num |= (mask >> 1) - 1;\n        return num;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123237,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <73fdd452ddf54d7390e71b465149c361>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <73fdd452ddf54d7390e71b465149c361>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Write your code here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123237,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <517538b5b82648c38fc2806850073d2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <517538b5b82648c38fc2806850073d2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long n = N;\n        int i = 0;\n        while (n > 0) {\n            if ((n & 1) == 1) {\n                break;\n            }\n            n >>= 1;\n            i++;\n        }\n        return N - (1 << i);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123237,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a89bc381fa8f445992264ad6caa82531>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long n = N;\n        long m = N;\n        while (n > 0) {\n            n /= 2;\n            m -= n;\n        }\n        return m;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123237,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <83c3950dc52746a5884b0d618985dc84>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <83c3950dc52746a5884b0d618985dc84>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the smallest number that is larger than N.\n        long i = 1;\n        while (i < N) {\n            i *= 2;\n        }\n        // Find the closest number to N that is smaller than N.\n        while (i > N) {\n            i /= 2;\n        }\n        return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123237,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cf78a9f5dafd47698cfccba1cf854fe5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cf78a9f5dafd47698cfccba1cf854fe5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123237,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8d413403462b4e41b0b7f8d318968140>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8d413403462b4e41b0b7f8d318968140>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // The closest smaller number is the number with the same number of 1s\n        // in its binary representation, but with the rightmost 1 moved to the\n        // right by one position.\n        //\n        // Example:\n        // N = 10111010001\n        // Closest smaller number = 10111010000\n        //\n        // To find the rightmost 1, we can use the following trick:\n        // N = 10111010001\n        // N & (N - 1) = 10111010000\n        //\n        // To find the rightmost 1, we can use the following trick:\n        // N = 10111010001\n        // N & (N - 1) = 10111010000\n        //\n        // To find the rightmost 1, we can use the following trick:\n        // N = 10111010001\n        // N & (N - 1) = 10111010000\n        //\n        // To find the rightmost 1, we can use the following trick:\n        // N = 10111010001\n        // N & (N - 1) = 10111010000\n        //\n        // To find the rightmost 1, we can use the following trick:\n        // N = 10111010001\n        // N & (N - 1) = 10111010000\n        //\n        // To find the rightmost 1, we can use the following trick:\n        // N = 10111010001\n        // N & (N - 1) = 10111010000\n        //\n        // To find the rightmost 1, we can use the following trick:\n        // N = 10111010001\n        // N & (N - 1) = 10111010000\n        //\n        // To find the rightmost 1, we can use the following trick:\n        // N = 10111010001\n        // N & (N - 1) = 10111010000\n        //\n        // To find the rightmost 1, we can use the following trick:\n        // N = 10111010001\n        // N & (N - 1) = 10111010000\n        //\n        // To find the rightmost 1, we can use the following trick:\n        // N = 10111010001\n        // N & (N - 1) = 10111010000\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123237,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi5dq0o6o.cs(10,24): error CS0161: 'Problem.ClosestNum(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        var b = new StringBuilder();\n        var s = N.ToString();\n        var n = s.Length;\n        for (int i = 0; i < n; i++) {\n            if (s[i] == '0') {\n                b.Append('9');\n            } else {\n                b.Append((char)(s[i] - 1));\n                b.Append(new String('9', n - i - 1));\n                break;\n            }\n        }\n        return long.Parse(b.ToString());\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123238,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f1d00f3ab0e44268a781f66d38ed7861>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f1d00f3ab0e44268a781f66d38ed7861>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        if (N == 0) return 0;\n        if (N == 1) return 0;\n        if (N == 2) return 1;\n        if (N == 3) return 2;\n        if (N == 4) return 3;\n        if (N == 5) return 4;\n        if (N == 6) return 5;\n        if (N == 7) return 6;\n        if (N == 8) return 7;\n        if (N == 9) return 8;\n        if (N == 10) return 9;\n        if (N == 11) return 9;\n        if (N == 12) return 9;\n        if (N == 13) return 9;\n        if (N == 14) return 9;\n        if (N == 15) return 9;\n        if (N == 16) return 9;\n        if (N == 17) return 9;\n        if (N == 18) return 9;\n        if (N == 19) return 9;\n        if (N == 20) return 9;\n        if (N == 21) return 9;\n        if (N == 22) return 9;\n        if (N == 23) return 9;\n        if (N == 24) return 9;\n        if (N == 25) return 9;\n        if (N == 26) return 9;\n        if (N == 27) return 9;\n        if (N == 28) return 9;\n        if (N == 29) return 9;\n        if (N == 30) return 9;\n        if (N == 31) return 9;\n        if (N == 32) return 9;\n        if (N == 33) return 9;\n        if (N == 34) return 9;\n        if (N == 35) return 9;\n        if (N == 36) return 9;\n        if (N == 37) return 9;\n        if (N == 38) return 9;\n        if (N == 39) return 9;\n        if (N == 40) return 9;\n        if (N == 41) return 9;\n        if (N == 42) return 9;\n        if (N == 43) return 9;\n        if (N == 44) return 9;\n        if (N == 45) return 9;\n        if (N ==\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123237,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpc4eiqbqj.cs(57,17): error CS1525: Invalid expression term '}'\n/tmp/tmpc4eiqbqj.cs(57,17): error CS1026: ) expected\n/tmp/tmpc4eiqbqj.cs(57,17): error CS1002: ; expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long n = N;\n        int i = 0;\n        while (n > 0) {\n            if ((n & 1) == 0) {\n                return N - (1L << i);\n            }\n            n >>= 1;\n            i++;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123238,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c285b5ddfd7148d183fcf4863f6dfb44>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c285b5ddfd7148d183fcf4863f6dfb44>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the first bit that is 1.\n        int i = 0;\n        while (N % 2 == 0) {\n            N /= 2;\n            i++;\n        }\n        // Flip the first bit that is 1.\n        N--;\n        // Add back the trailing zeros.\n        N <<= i;\n        return N;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123237,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <04071d219ae84fe9aabb668c250fd73b>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the closest number that is smaller than N\n        // and has the same number of 1 bits in its binary representation.\n        //\n        // For example, the closest number to 6 (0110 in binary) is 5 (0101 in binary).\n        //\n        // The input number N will always be a positive integer.\n        //\n        // Return -1 if the answer does not exist.\n        //\n        // Example:\n        // Input: N = 6\n        // Output: 5\n        //\n        // Input: N = 156\n        // Output: 152\n        //\n        // Input: N = 217\n        // Output: 217\n        //\n        // Input: N = 1\n        // Output: -1\n        //\n        // Input: N = 2\n        // Output: 1\n        //\n        // Input: N = 3\n        // Output: 2\n        //\n        // Input: N = 4\n        // Output: -1\n        //\n        // Input: N = 5\n        // Output: 4\n        //\n        // Input: N = 7\n        // Output: 6\n        //\n        // Input: N = 8\n        // Output: -1\n        //\n        // Input: N = 9\n        // Output: 8\n        //\n        // Input: N = 10\n        // Output: 9\n        //\n        // Input: N = 11\n        // Output: 10\n        //\n        // Input: N = 12\n        // Output: 11\n        //\n        // Input: N = 13\n        // Output: 12\n        //\n        // Input: N = 14\n        // Output: 13\n        //\n        // Input: N = 15\n        // Output: 14\n        //\n        // Input: N = 16\n        // Output: -1\n        //\n        // Input: N = 17\n        // Output: 16\n        //\n        // Input: N = 18\n        // Output: 17\n        //\n        // Input: N = 19\n        // Output: 18\n        //\n        // Input: N = 20\n        // Output: 19\n        //\n        // Input: N = 21\n        // Output: 20\n        //\n        // Input: N = 22\n        // Output: 21\n        //\n        //\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123237,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1jm0z0yx.cs(10,24): error CS0161: 'Problem.ClosestNum(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long[] digits = new long[20];\n        int n = 0;\n        while (N > 0) {\n            digits[n++] = N % 10;\n            N /= 10;\n        }\n        for (int i = n - 1; i > 0; i--) {\n            if (digits[i] < digits[i - 1]) {\n                long temp = digits[i];\n                digits[i] = digits[i - 1];\n                digits[i - 1] = temp;\n                break;\n            }\n        }\n        long ans = 0;\n        for (int i = 0; i < n; i++) {\n            ans = ans * 10 + digits[i];\n        }\n        return ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123237,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <80c282699c1c4e14bbdfd84684b679eb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <80c282699c1c4e14bbdfd84684b679eb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the closest smaller number than N.\n        // The number must be a multiple of 3.\n        // The number must be a palindrome.\n        // The number must be a prime.\n        // The number must be a palindrome.\n        // The number must be a multiple of 3.\n        // The number must be a palindrome.\n        // The number must be a prime.\n        // The number must be a palindrome.\n        // The number must be a multiple of 3.\n        // The number must be a palindrome.\n        // The number must be a prime.\n        // The number must be a palindrome.\n        // The number must be a multiple of 3.\n        // The number must be a palindrome.\n        // The number must be a prime.\n        // The number must be a palindrome.\n        // The number must be a multiple of 3.\n        // The number must be a palindrome.\n        // The number must be a prime.\n        // The number must be a palindrome.\n        // The number must be a multiple of 3.\n        // The number must be a palindrome.\n        // The number must be a prime.\n        // The number must be a palindrome.\n        // The number must be a multiple of 3.\n        // The number must be a palindrome.\n        // The number must be a prime.\n        // The number must be a palindrome.\n        // The number must be a multiple of 3.\n        // The number must be a palindrome.\n        // The number must be a prime.\n        // The number must be a palindrome.\n        // The number must be a multiple of 3.\n        // The number must be a palindrome.\n        // The number must be a prime.\n        // The number must be a palindrome.\n        // The number must be a multiple of 3.\n        // The number must be a palindrome.\n        // The number must be a prime.\n        // The number must be a palindrome.\n        // The number must be a multiple of 3.\n        // The number must be a palindrome.\n        // The number must be a prime.\n        // The number must be\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123237,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpup57q89a.cs(10,24): error CS0161: 'Problem.ClosestNum(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the first 1 bit from the right.\n        int i = 0;\n        while ((N & (1 << i)) == 0) i++;\n        // Clear the first 1 bit from the right.\n        N &= ~(1 << i);\n        // Set the bit to the right of the cleared bit.\n        N |= (1 << (i - 1));\n        return N;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123237,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <da87fd07fa4d42dbbcd5e8902dddc8ca>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <da87fd07fa4d42dbbcd5e8902dddc8ca>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the number of digits in N.\n        int digits = (int)Math.Floor(Math.Log10(N)) + 1;\n        // Find the largest power of 10 that is less than N.\n        long power = (long)Math.Pow(10, digits - 1);\n        // Find the most significant digit in N.\n        long msd = N / power;\n        // If the most significant digit is 1, we can't subtract any more.\n        if (msd == 1) {\n            return -1;\n        }\n        // Otherwise, subtract 1 from the most significant digit.\n        return N - (msd * power) + ((msd - 1) * power) - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123237,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b988c2ad3fbe41b4b5f1d6287008570b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b988c2ad3fbe41b4b5f1d6287008570b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long[] digits = new long[20];\n        int n = 0;\n        while (N > 0) {\n            digits[n++] = N % 10;\n            N /= 10;\n        }\n        for (int i = n - 1; i > 0; i--) {\n            if (digits[i] > digits[i - 1]) {\n                long temp = digits[i];\n                digits[i] = digits[i - 1];\n                digits[i - 1] = temp;\n                Array.Sort(digits, i, n - i);\n                long result = 0;\n                for (int j = n - 1; j >= 0; j--) {\n                    result = result * 10 + digits[j];\n                }\n                return result;\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123237,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <745320641364415ab3668b4f451b4352>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <745320641364415ab3668b4f451b4352>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        var digits = new List<int>();\n        while (N > 0) {\n            digits.Add((int)(N % 10));\n            N /= 10;\n        }\n        digits.Reverse();\n        var n = digits.Count;\n        for (int i = 1; i < n; i++) {\n            if (digits[i] < digits[i - 1]) {\n                var tmp = digits[i];\n                digits[i] = digits[i - 1];\n                digits[i - 1] = tmp;\n                break;\n            }\n        }\n        long res = 0;\n        for (int i = 0; i < n; i++) {\n            res = res * 10 + digits[i];\n        }\n        return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123238,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2d190bb335334168a1150e74c478f6d9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2d190bb335334168a1150e74c478f6d9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long n = N;\n        long mask = 1;\n        long mask2 = 1;\n        long mask3 = 1;\n        long mask4 = 1;\n        long mask5 = 1;\n        long mask6 = 1;\n        long mask7 = 1;\n        long mask8 = 1;\n        long mask9 = 1;\n        long mask10 = 1;\n        long mask11 = 1;\n        long mask12 = 1;\n        long mask13 = 1;\n        long mask14 = 1;\n        long mask15 = 1;\n        long mask16 = 1;\n        long mask17 = 1;\n        long mask18 = 1;\n        long mask19 = 1;\n        long mask20 = 1;\n        long mask21 = 1;\n        long mask22 = 1;\n        long mask23 = 1;\n        long mask24 = 1;\n        long mask25 = 1;\n        long mask26 = 1;\n        long mask27 = 1;\n        long mask28 = 1;\n        long mask29 = 1;\n        long mask30 = 1;\n        long mask31 = 1;\n        long mask32 = 1;\n        long mask33 = 1;\n        long mask34 = 1;\n        long mask35 = 1;\n        long mask36 = 1;\n        long mask37 = 1;\n        long mask38 = 1;\n        long mask39 = 1;\n        long mask40 = 1;\n        long mask41 = 1;\n        long mask42 = 1;\n        long mask43 = 1;\n        long mask44 = 1;\n        long mask45 = 1;\n        long mask46 = 1;\n        long mask47 = 1;\n        long mask48 = 1;\n        long mask49 = 1;\n        long mask50 = 1;\n        long mask51 = 1;\n        long mask52 = 1;\n        long mask53 = 1;\n        long mask54 = 1;\n        long mask55 = 1;\n        long mask56 = 1;\n        long mask57 = 1;\n        long mask58 = 1;\n        long mask59 = 1;\n        long mask60 = 1;\n        long mask61 = 1;\n        long mask62 = 1;\n        long mask63 = 1;\n       \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123237,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpmaih122v.cs(12,14): warning CS0219: The variable 'mask' is assigned but its value is never used\n/tmp/tmpmaih122v.cs(13,14): warning CS0219: The variable 'mask2' is assigned but its value is never used\n/tmp/tmpmaih122v.cs(14,14): warning CS0219: The variable 'mask3' is assigned but its value is never used\n/tmp/tmpmaih122v.cs(15,14): warning CS0219: The variable 'mask4' is assigned but its value is never used\n/tmp/tmpmaih122v.cs(16,14): warning CS0219: The variable 'mask5' is assigned but its value is never used\n/tmp/tmpmaih122v.cs(17,14): warning CS0219: The variable 'mask6' is assigned but its value is never used\n/tmp/tmpmaih122v.cs(18,14): warning CS0219: The variable 'mask7' is assigned but its value is never used\n/tmp/tmpmaih122v.cs(19,14): warning CS0219: The variable 'mask8' is assigned but its value is never used\n/tmp/tmpmaih122v.cs(20,14): warning CS0219: The variable 'mask9' is assigned but its value is never used\n/tmp/tmpmaih122v.cs(21,14): warning CS0219: The variable 'mask10' is assigned but its value is never used\n/tmp/tmpmaih122v.cs(22,14): warning CS0219: The variable 'mask11' is assigned but its value is never used\n/tmp/tmpmaih122v.cs(23,14): warning CS0219: The variable 'mask12' is assigned but its value is never used\n/tmp/tmpmaih122v.cs(24,14): warning CS0219: The variable 'mask13' is assigned but its value is never used\n/tmp/tmpmaih122v.cs(25,14): warning CS0219: The variable 'mask14' is assigned but its value is never used\n/tmp/tmpmaih122v.cs(26,14): warning CS0219: The variable 'mask15' is assigned but its value is never used\n/tmp/tmpmaih122v.cs(27,14): warning CS0219: The variable 'mask16' is assigned but its value is never used\n/tmp/tmpmaih122v.cs(28,14): warning CS0219: The variable 'mask17' is assigned but its value is never used\n/tmp/tmpmaih122v.cs(29,14): warning CS0219: The variable 'mask18' is assigned but its value is never used\n/tmp/tmpmaih122v.cs(30,",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        var n = N;\n        var bit = 0;\n        while ((n & 1) == 0) {\n            n >>= 1;\n            bit++;\n        }\n        return N - (1 << bit);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123237,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7ae5dd2eaea04c92bfbed74ddd5bb21f>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        var digits = new List<int>();\n        while (N > 0) {\n            digits.Add((int)(N % 10));\n            N /= 10;\n        }\n        digits.Reverse();\n        var n = digits.Count;\n        for (int i = 1; i < n; i++) {\n            if (digits[i] < digits[i - 1]) {\n                var temp = digits[i];\n                digits[i] = digits[i - 1];\n                digits[i - 1] = temp;\n                break;\n            }\n        }\n        long result = 0;\n        for (int i = 0; i < n; i++) {\n            result = result * 10 + digits[i];\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123238,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9965b4e9c02e46ecaad6e10841599c33>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9965b4e9c02e46ecaad6e10841599c33>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the largest power of 2 that is less than N.\n        long p = 1;\n        while (p <= N) {\n            p *= 2;\n        }\n        p /= 2;\n        // Find the largest power of 5 that is less than N.\n        long q = 1;\n        while (q <= N) {\n            q *= 5;\n        }\n        q /= 5;\n        // Find the largest power of 2 and 5 that is less than N.\n        long r = Math.Min(p, q);\n        // Find the closest number to N that is a multiple of r.\n        return (N / r) * r;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123238,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <05b809aed0974832a14c850fa0e409cf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <05b809aed0974832a14c850fa0e409cf>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the first bit that is 1\n        int i = 0;\n        while ((N & (1 << i)) == 0) {\n            i++;\n        }\n        // Find the first bit that is 0\n        int j = i + 1;\n        while ((N & (1 << j)) != 0) {\n            j++;\n        }\n        // Flip the bit at j\n        N = N ^ (1 << j);\n        // Set the bits from j-1 to i to 1\n        N = N | ((1 << (j - i)) - 1) << i;\n        return N;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123238,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <128023982c3441b9900d2911eb73f288>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <128023982c3441b9900d2911eb73f288>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the first non-zero digit from the right.\n        int i = 0;\n        while (N % 10 == 0) {\n            N /= 10;\n            i++;\n        }\n        // If the number is a single digit, return -1.\n        if (N < 10) return -1;\n        // Otherwise, return the number with the digit just to the left of the first non-zero digit from the right\n        // decremented by one, and all the digits to the right of it set to 9.\n        return (N / 10 - 1) * (long)Math.Pow(10, i + 1) + 9 * (long)Math.Pow(10, i);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123238,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <43dcdfa41e2549ea92a4772979389f41>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <43dcdfa41e2549ea92a4772979389f41>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the number of bits in N.\n        int bits = (int)Math.Ceiling(Math.Log(N, 2));\n        // Find the largest power of 2 less than N.\n        long pow = (long)Math.Pow(2, bits - 1);\n        // If N is a power of 2, then the closest smaller number is N/2.\n        if (pow == N) {\n            return N / 2;\n        }\n        // Otherwise, the closest smaller number is N - pow.\n        return N - pow;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123238,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <80426af47db54e5d945a73cf51f2f2b5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <80426af47db54e5d945a73cf51f2f2b5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the closest smaller number than N.\n        // If N is a power of 2, then the closest smaller number is N/2.\n        // If N is not a power of 2, then the closest smaller number is the largest power of 2 that is smaller than N.\n        if (N == 1) return 0;\n        if (N % 2 == 0) return N / 2;\n        return ClosestNum(N / 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123238,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6c8879f599184d278c1c07e22208456d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6c8879f599184d278c1c07e22208456d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long[] digits = new long[20];\n        int nDigits = 0;\n        while (N > 0) {\n            digits[nDigits++] = N % 10;\n            N /= 10;\n        }\n        for (int i = nDigits - 1; i > 0; i--) {\n            if (digits[i] < digits[i - 1]) {\n                digits[i - 1]--;\n                for (int j = i; j < nDigits; j++) {\n                    digits[j] = 9;\n                }\n                break;\n            }\n        }\n        long result = 0;\n        for (int i = nDigits - 1; i >= 0; i--) {\n            result = result * 10 + digits[i];\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123238,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c3d40243c12f4eb38e39d59f29fcceb9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c3d40243c12f4eb38e39d59f29fcceb9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        if (N == 0) return 0;\n        if (N == 1) return 0;\n        if (N == 2) return 1;\n        if (N == 3) return 2;\n        if (N == 4) return 3;\n        if (N == 5) return 4;\n        if (N == 6) return 5;\n        if (N == 7) return 6;\n        if (N == 8) return 7;\n        if (N == 9) return 8;\n        if (N == 10) return 9;\n        if (N == 11) return 10;\n        if (N == 12) return 11;\n        if (N == 13) return 12;\n        if (N == 14) return 13;\n        if (N == 15) return 14;\n        if (N == 16) return 15;\n        if (N == 17) return 16;\n        if (N == 18) return 17;\n        if (N == 19) return 18;\n        if (N == 20) return 19;\n        if (N == 21) return 20;\n        if (N == 22) return 21;\n        if (N == 23) return 22;\n        if (N == 24) return 23;\n        if (N == 25) return 24;\n        if (N == 26) return 25;\n        if (N == 27) return 26;\n        if (N == 28) return 27;\n        if (N == 29) return 28;\n        if (N == 30) return 29;\n        if (N == 31) return 30;\n        if (N == 32) return 31;\n        if (N == 33) return 32;\n        if (N == 34) return 33;\n        if (N == 35) return 34;\n        if (N == 36) return 35;\n        if (N == 37) return 36;\n        if (N == 38) return 37;\n        if (N == 39) return 38;\n        if (N == 40) return 39;\n        if (N == 41) return 40;\n        if (N == 42) return 41;\n        if (N == 43) return 42;\n        if (N == 44) return 43;\n        if (N == 45) return 44;\n        if (N ==\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123237,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp7s7ccnef.cs(57,17): error CS1525: Invalid expression term '}'\n/tmp/tmp7s7ccnef.cs(57,17): error CS1026: ) expected\n/tmp/tmp7s7ccnef.cs(57,17): error CS1002: ; expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the first 1 bit from the right.\n        int i = 0;\n        while (((N >> i) & 1) == 0) {\n            i++;\n        }\n        // Flip the i-th bit.\n        return N ^ (1 << i);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123238,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <63cf51d3287741c287564d7b74e12f70>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // TODO: Write your code here\n        // return -1;\n        long res = 0;\n        long temp = N;\n        long count = 0;\n        while (temp > 0) {\n            long rem = temp % 10;\n            temp = temp / 10;\n            if (rem == 0) {\n                count++;\n            } else {\n                break;\n            }\n        }\n        if (count == 0) {\n            return -1;\n        }\n        for (int i = 0; i < count; i++) {\n            res = res * 10 + 9;\n        }\n        return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123238,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e7d1ebb68cfd450d89d81802200d7fcd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e7d1ebb68cfd450d89d81802200d7fcd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long result = 0;\n        long temp = N;\n        int count = 0;\n        while (temp > 0) {\n            if (temp % 2 == 0) {\n                result += (long)Math.Pow(10, count);\n            }\n            temp /= 2;\n            count++;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123238,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <77ff329e038647eea621ee6f4efee9b6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <77ff329e038647eea621ee6f4efee9b6>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long[] digits = new long[20];\n        int n = 0;\n        while (N > 0) {\n            digits[n++] = N % 10;\n            N /= 10;\n        }\n        for (int i = n - 1; i > 0; i--) {\n            if (digits[i] < digits[i - 1]) {\n                long temp = digits[i];\n                digits[i] = digits[i - 1];\n                digits[i - 1] = temp;\n                break;\n            }\n        }\n        long result = 0;\n        for (int i = n - 1; i >= 0; i--) {\n            result = result * 10 + digits[i];\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123238,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a2da7123316b4b5787bb63bdefeb3f1d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a2da7123316b4b5787bb63bdefeb3f1d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        var s = N.ToString();\n        var n = s.Length;\n        var i = n - 1;\n        while (i > 0 && s[i] >= s[i - 1]) {\n            i--;\n        }\n        if (i == 0) {\n            return -1;\n        }\n        var j = n - 1;\n        while (s[j] <= s[i - 1]) {\n            j--;\n        }\n        var t = s[i - 1];\n        s = s.Remove(i - 1, 1);\n        s = s.Insert(i - 1, s[j].ToString());\n        s = s.Remove(j, 1);\n        s = s.Insert(j, t.ToString());\n        var r = s.Substring(0, i);\n        var l = s.Substring(i);\n        var L = l.ToCharArray();\n        Array.Reverse(L);\n        return long.Parse(r + new string(L));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123238,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f3d45e0bdbc74663bcb2c41f5c4551c5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f3d45e0bdbc74663bcb2c41f5c4551c5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long closest = N;\n        long[] digits = new long[20];\n        int len = 0;\n        while (N > 0) {\n            digits[len++] = N % 10;\n            N /= 10;\n        }\n        for (int i = 0; i < len; i++) {\n            for (int d = (i == 0 ? 1 : 0); d < digits[i]; d++) {\n                long num = 0;\n                for (int j = 0; j < i; j++) {\n                    num = num * 10 + digits[j];\n                }\n                num = num * 10 + d;\n                for (int j = i + 1; j < len; j++) {\n                    num = num * 10 + 9;\n                }\n                if (num < closest) {\n                    closest = num;\n                }\n            }\n        }\n        return closest;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123238,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4b8c8c58ab354cf9b6650cd960fa3c20>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4b8c8c58ab354cf9b6650cd960fa3c20>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the number of digits in N\n        int digits = (int)Math.Floor(Math.Log10(N)) + 1;\n        // Find the first digit of N\n        long first = N / (long)Math.Pow(10, digits - 1);\n        // Find the last digit of N\n        long last = N % 10;\n        // If the first digit is 1, then the closest smaller number is N - 1\n        if (first == 1) {\n            return N - 1;\n        }\n        // If the last digit is 0, then the closest smaller number is N - 1\n        else if (last == 0) {\n            return N - 1;\n        }\n        // If the last digit is 1, then the closest smaller number is N - 2\n        else if (last == 1) {\n            return N - 2;\n        }\n        // Otherwise, the closest smaller number is N - last\n        else {\n            return N - last;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123238,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <35f06001e58040dda3f1c14ceca985a4>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long closest = N;\n        long curr = N;\n        while (curr > 0) {\n            if (curr % 10 == 0) {\n                curr--;\n                closest = curr;\n            } else {\n                curr /= 10;\n            }\n        }\n        return closest;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123238,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ac58b7363ebd4e9d862045c2ddf6f8b0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ac58b7363ebd4e9d862045c2ddf6f8b0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123238,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <efc77696bce2410490e8cea2e9d866ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <efc77696bce2410490e8cea2e9d866ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long[] bits = new long[64];\n        for (int i = 0; i < 64; i++) {\n            bits[i] = N & 1;\n            N >>= 1;\n        }\n        int i = 63;\n        while (i > 0 && bits[i] == 0) {\n            i--;\n        }\n        if (i == 0) {\n            return -1;\n        }\n        bits[i] = 0;\n        bits[i - 1] = 1;\n        long result = 0;\n        for (int j = 63; j >= 0; j--) {\n            result <<= 1;\n            result |= bits[j];\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123238,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmptt1dfmiz.cs(12,18): error CS0136: A local or parameter named 'i' cannot be declared in this scope because that name is used in an enclosing local scope to define a local or parameter\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Write your code here\n        // To debug: Console.Error.WriteLine(\"Debug messages...\");\n        long n = N;\n        long[] digits = new long[20];\n        int i = 0;\n        while (n > 0) {\n            digits[i] = n % 10;\n            n /= 10;\n            i++;\n        }\n        i--;\n        long[] digits2 = new long[20];\n        for (int j = 0; j <= i; j++) {\n            digits2[j] = digits[i - j];\n        }\n        long[] digits3 = new long[20];\n        digits3[0] = digits2[0];\n        for (int j = 1; j <= i; j++) {\n            digits3[j] = digits2[j];\n            if (digits3[j] < digits3[j - 1]) {\n                digits3[j - 1]--;\n                for (int k = j; k <= i; k++) {\n                    digits3[k] = 9;\n                }\n            }\n        }\n        long[] digits4 = new long[20];\n        for (int j = 0; j <= i; j++) {\n            digits4[j] = digits3[i - j];\n        }\n        long res = 0;\n        for (int j = 0; j <= i; j++) {\n            res = res * 10 + digits4[j];\n        }\n        return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123238,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <24abb8b928ad4b42825d450bcb9811c0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <24abb8b928ad4b42825d450bcb9811c0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the number of bits in N.\n        int bits = (int)Math.Floor(Math.Log(N, 2)) + 1;\n        // Find the largest power of 2 less than N.\n        long pow = (long)Math.Pow(2, bits - 1);\n        // If N is a power of 2, return N - 1.\n        if (pow == N) return N - 1;\n        // Otherwise, return N - pow.\n        return N - pow;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123238,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cc2748d8a69943ce80addade5ebbd02f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cc2748d8a69943ce80addade5ebbd02f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long[] digits = GetDigits(N);\n        int n = digits.Length;\n        int i = n - 1;\n        while (i > 0 && digits[i - 1] <= digits[i]) {\n            i--;\n        }\n        if (i == 0) {\n            return -1;\n        }\n        int j = n - 1;\n        while (digits[j] >= digits[i - 1]) {\n            j--;\n        }\n        Swap(digits, i - 1, j);\n        j = n - 1;\n        while (i < j) {\n            Swap(digits, i, j);\n            i++;\n            j--;\n        }\n        return GetNum(digits);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123238,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprcxzbl3q.cs(11,25): error CS0103: The name 'GetDigits' does not exist in the current context\n/tmp/tmprcxzbl3q.cs(24,9): error CS0103: The name 'Swap' does not exist in the current context\n/tmp/tmprcxzbl3q.cs(27,13): error CS0103: The name 'Swap' does not exist in the current context\n/tmp/tmprcxzbl3q.cs(31,16): error CS0103: The name 'GetNum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the number of digits in N.\n        int digits = (int)Math.Floor(Math.Log10(N) + 1);\n        // Find the closest power of 10.\n        long power = (long)Math.Pow(10, digits - 1);\n        // Find the rightmost non-zero digit.\n        long right = N % 10;\n        // Find the leftmost digit.\n        long left = N / power;\n        // If the rightmost digit is non-zero, return N - right.\n        if (right != 0) {\n            return N - right;\n        }\n        // If the rightmost digit is zero, return N - left * power.\n        return N - left * power;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123238,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d822739e4a8045168daf344f88e69520>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d822739e4a8045168daf344f88e69520>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long x = N;\n        int p = 0;\n        while ((x & 1) == 0) {\n            x >>= 1;\n            p++;\n        }\n        if (p == 0) {\n            return N - 1;\n        }\n        return N - (1 << p);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123238,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6fc769dc24b7487e85c9aee3b1c16e3d>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Write your code here\n        // To debug: Console.Error.WriteLine(\"Debug messages...\");\n        long result = 0;\n        long i = 0;\n        while (i < N) {\n            i = i * 2 + 1;\n            result++;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123238,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2a0169e590474354a063d26b7b172a2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2a0169e590474354a063d26b7b172a2b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the number of digits in N.\n        int digits = (int)Math.Floor(Math.Log10(N) + 1);\n        // Find the first digit of N.\n        int first = (int)(N / Math.Pow(10, digits - 1));\n        // Find the last digit of N.\n        int last = (int)(N % 10);\n        // If the first digit is 1, then the closest smaller number is 1.\n        if (first == 1) {\n            return 1;\n        }\n        // If the last digit is not 0, then the closest smaller number is N - 1.\n        if (last != 0) {\n            return N - 1;\n        }\n        // If the last digit is 0, then the closest smaller number is N - 2.\n        return N - 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123238,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7bae92658cd14ff8a92a72ebaad83b4b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7bae92658cd14ff8a92a72ebaad83b4b>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long[] digits = new long[19];\n        int len = 0;\n        while (N > 0) {\n            digits[len++] = N % 10;\n            N /= 10;\n        }\n        for (int i = len - 1; i > 0; i--) {\n            if (digits[i] > digits[i - 1]) {\n                long tmp = digits[i];\n                digits[i] = digits[i - 1];\n                digits[i - 1] = tmp;\n                Array.Sort(digits, i, len - i);\n                long res = 0;\n                for (int j = len - 1; j >= 0; j--) {\n                    res = res * 10 + digits[j];\n                }\n                return res;\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123238,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4150b5beb20b4ef7a30a744188435d56>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4150b5beb20b4ef7a30a744188435d56>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the number of digits in N.\n        int digits = (int)Math.Log10(N) + 1;\n        // Find the largest power of 10 less than N.\n        long power = (long)Math.Pow(10, digits - 1);\n        // Find the most significant digit in N.\n        long msd = N / power;\n        // If the most significant digit is 1, then the closest smaller number is N - 1.\n        if (msd == 1) {\n            return N - 1;\n        }\n        // Otherwise, the closest smaller number is N - msd * power.\n        return N - msd * power;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123239,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9ad3e91cf13f4131bde4f42f5ab16e47>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the first bit that is 1.\n        long mask = 1;\n        int i = 0;\n        while ((N & mask) == 0) {\n            mask <<= 1;\n            i++;\n        }\n        // Flip the first bit that is 1.\n        N ^= mask;\n        // Set all bits to the right of the first bit that is 1 to 1.\n        mask = 1;\n        mask <<= i;\n        N |= mask - 1;\n        return N;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123239,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        var digits = new List<int>();\n        while (N > 0) {\n            digits.Add((int)(N % 10));\n            N /= 10;\n        }\n        digits.Reverse();\n        var n = digits.Count;\n        for (int i = n - 1; i > 0; i--) {\n            if (digits[i] > digits[i - 1]) {\n                var min = i;\n                for (int j = i + 1; j < n; j++) {\n                    if (digits[j] < digits[min] && digits[j] > digits[i - 1]) {\n                        min = j;\n                    }\n                }\n                var tmp = digits[i - 1];\n                digits[i - 1] = digits[min];\n                digits[min] = tmp;\n                digits.Sort(i, n - i, Comparer<int>.Create((a, b) => b.CompareTo(a)));\n                break;\n            }\n        }\n        long res = 0;\n        for (int i = 0; i < n; i++) {\n            res = res * 10 + digits[i];\n        }\n        return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123239,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <82dd8b4410e041d4ba0a64ac554eb384>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <82dd8b4410e041d4ba0a64ac554eb384>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        var digits = new List<int>();\n        while (N > 0) {\n            digits.Add((int)(N % 10));\n            N /= 10;\n        }\n        digits.Reverse();\n        var n = digits.Count;\n        var i = 0;\n        while (i < n - 1 && digits[i] <= digits[i + 1]) {\n            i++;\n        }\n        if (i == n - 1) {\n            return -1;\n        }\n        var j = i + 1;\n        while (j < n && digits[j] < digits[i]) {\n            j++;\n        }\n        j--;\n        var tmp = digits[i];\n        digits[i] = digits[j];\n        digits[j] = tmp;\n        var res = 0L;\n        for (var k = 0; k < n; k++) {\n            res = res * 10 + digits[k];\n        }\n        return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123239,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c786e04ff7b246aca4fa77a08cc6458a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c786e04ff7b246aca4fa77a08cc6458a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long n = N;\n        int i = 0;\n        while (n != 0) {\n            if ((n & 1) == 0) {\n                return N & ~((1 << (i + 1)) - 1);\n            }\n            n >>= 1;\n            i++;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123239,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2a7a1611437641f3b1b5403f2ed34e40>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2a7a1611437641f3b1b5403f2ed34e40>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the first 1 bit from the right.\n        int i = 0;\n        while (((N >> i) & 1) == 0) {\n            i++;\n        }\n        // Find the first 0 bit from the right.\n        while (((N >> i) & 1) == 1) {\n            i++;\n        }\n        // Flip the bit.\n        return N ^ (1 << i);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123239,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd2706afd9594384a8cca26f2fa6978a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd2706afd9594384a8cca26f2fa6978a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Write your code here.\n        long n = N;\n        long mask = 1;\n        long count = 0;\n        while (n > 0) {\n            if ((n & 1) == 1) {\n                break;\n            }\n            n = n >> 1;\n            mask = mask << 1;\n            count++;\n        }\n        return N - mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123239,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d8cda9ec58624c4083c5fa3247ffa44f>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        if (N == 0) return 0;\n        var s = Convert.ToString(N, 2);\n        var i = s.Length - 1;\n        while (i > 0 && s[i] == '1') i--;\n        if (i == 0) return 0;\n        var sb = new StringBuilder(s);\n        sb[i] = '1';\n        sb[i + 1] = '0';\n        return Convert.ToInt64(sb.ToString(), 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123239,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fea3cddaf8404388bf47fa8b27d5a413>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fea3cddaf8404388bf47fa8b27d5a413>:0 \n\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.\nParameter name: index\n  at System.Text.StringBuilder.set_Chars (System.Int32 index, System.Char value) [0x00018] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.ClosestNum (System.Int64 N) [0x0",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long n = N;\n        int i = 0;\n        while (n > 0) {\n            n >>= 1;\n            i++;\n        }\n        return N - (1L << (i - 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123239,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2989bd9421ca40cf93c927f087aa5e57>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2989bd9421ca40cf93c927f087aa5e57>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the first non-zero digit.\n        int i = 0;\n        while (N > 0) {\n            if (N % 10 != 0) {\n                break;\n            }\n            N /= 10;\n            i++;\n        }\n        // If the first non-zero digit is 1, we can't do anything.\n        if (N % 10 == 1) {\n            return -1;\n        }\n        // Decrement the first non-zero digit.\n        N--;\n        // Set all the digits after the first non-zero digit to 9.\n        for (int j = 0; j < i; j++) {\n            N *= 10;\n            N += 9;\n        }\n        return N;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123239,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <61c45caaa7f34769b0b1a8077d63b37f>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the first bit that is 1.\n        int i = 0;\n        while (N % 2 == 0) {\n            N /= 2;\n            i++;\n        }\n        // Flip the first bit that is 1.\n        N -= 1;\n        // Add back the trailing zeros.\n        N *= (long)Math.Pow(2, i);\n        return N;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123239,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <62cb46ac0d934f2fa8a536199b5db0a1>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the first bit that is 1.\n        int i = 0;\n        while ((N & (1 << i)) == 0) {\n            i++;\n        }\n        // Flip the bit to 0.\n        N &= ~(1 << i);\n        // Set the bit to the right of the flipped bit to 1.\n        N |= (1 << (i - 1));\n        return N;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123239,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c34e9265b65941ed90cc362e11c0e39a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c34e9265b65941ed90cc362e11c0e39a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        var n = N;\n        var b = new List<int>();\n        while (n > 0) {\n            b.Add((int)(n % 2));\n            n /= 2;\n        }\n        var i = b.Count - 1;\n        while (i > 0 && b[i] == 0) {\n            i--;\n        }\n        if (i == 0) {\n            return 0;\n        }\n        b[i] = 0;\n        b[i - 1] = 1;\n        var r = 0L;\n        for (int j = b.Count - 1; j >= 0; j--) {\n            r = r * 2 + b[j];\n        }\n        return r;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123239,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <77119156feff48a38c83a86e690f7625>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <77119156feff48a38c83a86e690f7625>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long n = N;\n        int i = 0;\n        while (n > 0) {\n            if ((n & 1) == 1) {\n                break;\n            }\n            n >>= 1;\n            i++;\n        }\n        return N - (1 << i);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123237,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a89bc381fa8f445992264ad6caa82531>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long n = N;\n        int i = 0;\n        while (n != 0) {\n            if ((n & 1) == 0) {\n                n = n >> 1;\n                i++;\n            } else {\n                break;\n            }\n        }\n        return N & ~((1 << i) - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123239,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fbf948442c274f048924c06af8fe35e4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fbf948442c274f048924c06af8fe35e4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long[] digits = new long[20];\n        int len = 0;\n        while (N > 0) {\n            digits[len++] = N % 10;\n            N /= 10;\n        }\n        for (int i = len - 1; i > 0; i--) {\n            if (digits[i] < digits[i - 1]) {\n                long tmp = digits[i];\n                digits[i] = digits[i - 1];\n                digits[i - 1] = tmp;\n                Array.Sort(digits, i, len - i);\n                long ans = 0;\n                for (int j = len - 1; j >= 0; j--) {\n                    ans = ans * 10 + digits[j];\n                }\n                return ans;\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123239,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d04ddb4328764fe2923085b3797fc6c4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d04ddb4328764fe2923085b3797fc6c4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long n = N;\n        long x = 0;\n        while (n > 0) {\n            x = (x << 1) | (n & 1);\n            n >>= 1;\n        }\n        return x;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123239,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b7dffedd24b94fa1aaef3cb8e8d9750a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b7dffedd24b94fa1aaef3cb8e8d9750a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long n = N;\n        int i = 0;\n        while (n != 0) {\n            n >>= 1;\n            i++;\n        }\n        return N - (1 << (i - 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123239,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b0f77b64eca343f4b4f6d297886bdaa0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b0f77b64eca343f4b4f6d297886bdaa0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the closest smaller number than N\n        // that is a multiple of 3.\n        long x = N;\n        while (x % 3 != 0) {\n            x--;\n        }\n        return x;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123239,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c4c0c793d94141b0ab924a62671d5ad1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c4c0c793d94141b0ab924a62671d5ad1>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Get the number of bits in N.\n        int numBits = (int)Math.Ceiling(Math.Log(N, 2));\n        // Get the number of bits in N - 1.\n        int numBitsMinusOne = (int)Math.Ceiling(Math.Log(N - 1, 2));\n        // If N - 1 has the same number of bits as N, then N - 1 is the answer.\n        if (numBits == numBitsMinusOne) {\n            return N - 1;\n        }\n        // Otherwise, we need to find the next smallest number with the same number of bits.\n        // We can do this by setting the rightmost 1 bit to 0, and then setting all the bits to the right of it to 1.\n        // For example, if N = 11010101, then we would set the rightmost 1 bit to 0, and then set all the bits to the right of it to 1.\n        // This would give us 11010100.\n        // We can do this by first finding the rightmost 1 bit, then clearing all the bits to the right of it, and then setting all the bits to the right of it.\n        // We can find the rightmost 1 bit by ANDing N with N - 1.\n        // We can clear all the bits to the right of the rightmost 1 bit by ANDing N with N - 1.\n        // We can set all the bits to the right of the rightmost 1 bit by ORing N with N - 1.\n        return N & (N - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123239,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long[] bits = new long[64];\n        long n = N;\n        int i = 0;\n        while (n > 0) {\n            bits[i++] = n % 2;\n            n /= 2;\n        }\n        int j = i - 1;\n        while (j > 0 && bits[j] <= bits[j - 1]) {\n            j--;\n        }\n        if (j == 0) {\n            return -1;\n        }\n        bits[j] = 0;\n        bits[j - 1] = 1;\n        long res = 0;\n        for (int k = i - 1; k >= 0; k--) {\n            res = res * 2 + bits[k];\n        }\n        return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123239,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <330e773a8ea844f090342886f14d7ac4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <330e773a8ea844f090342886f14d7ac4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        if (N == 0) return 0;\n        var s = N.ToString();\n        var i = s.Length - 1;\n        while (i > 0 && s[i] >= s[i - 1]) i--;\n        if (i == 0) return -1;\n        var j = s.Length - 1;\n        while (s[j] >= s[i - 1]) j--;\n        var t = s[j];\n        s = s.Remove(j, 1);\n        s = s.Insert(j, s[i - 1].ToString());\n        s = s.Remove(i - 1, 1);\n        s = s.Insert(i - 1, t.ToString());\n        var k = s.Length - 1;\n        while (i < k) {\n            t = s[i];\n            s = s.Remove(i, 1);\n            s = s.Insert(i, s[k].ToString());\n            s = s.Remove(k, 1);\n            s = s.Insert(k, t.ToString());\n            i++;\n            k--;\n        }\n        return long.Parse(s);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123239,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4827fab3c4de4a32a164e8f66fd62b4e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4827fab3c4de4a32a164e8f66fd62b4e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long[] digits = new long[20];\n        int len = 0;\n        while (N > 0) {\n            digits[len++] = N % 10;\n            N /= 10;\n        }\n        for (int i = len - 1; i > 0; i--) {\n            if (digits[i] > digits[i - 1]) {\n                long temp = digits[i];\n                digits[i] = digits[i - 1];\n                digits[i - 1] = temp;\n                Array.Sort(digits, i, len - i);\n                long res = 0;\n                for (int j = len - 1; j >= 0; j--) {\n                    res = res * 10 + digits[j];\n                }\n                return res;\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123239,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f81ec55553e4bcca2ece27042348e63>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f81ec55553e4bcca2ece27042348e63>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long n = N;\n        int i = 0;\n        // Find position of rightmost non-trailing zero\n        while (((n & 1) == 0) && (n != 0)) {\n            n >>= 1;\n            i++;\n        }\n        // If all digits are 1, then return -1\n        if (i + 1 == 64)\n            return -1;\n        // Flip rightmost non-trailing zero\n        n |= (1 << i);\n        // Clear all bits to the right of p\n        n &= ~((1 << i) - 1);\n        // Insert (k-1) ones on the right\n        n |= (1 << (i - 1)) - 1;\n        return n;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123239,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3e92d3582ddb48a2bb645cecb4af0431>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3e92d3582ddb48a2bb645cecb4af0431>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the number of digits in N\n        int digits = (int)Math.Floor(Math.Log10(N)) + 1;\n        // Find the first digit of N\n        int first = (int)(N / Math.Pow(10, digits - 1));\n        // Find the last digit of N\n        int last = (int)(N % 10);\n        // If the first digit is 1, then the closest number is N - 1\n        if (first == 1) {\n            return N - 1;\n        }\n        // If the last digit is 0, then the closest number is N - 1\n        if (last == 0) {\n            return N - 1;\n        }\n        // If the last digit is 1, then the closest number is N - 2\n        if (last == 1) {\n            return N - 2;\n        }\n        // If the last digit is 2, then the closest number is N - 3\n        if (last == 2) {\n            return N - 3;\n        }\n        // If the last digit is 3, then the closest number is N - 4\n        if (last == 3) {\n            return N - 4;\n        }\n        // If the last digit is 4, then the closest number is N - 5\n        if (last == 4) {\n            return N - 5;\n        }\n        // If the last digit is 5, then the closest number is N - 6\n        if (last == 5) {\n            return N - 6;\n        }\n        // If the last digit is 6, then the closest number is N - 7\n        if (last == 6) {\n            return N - 7;\n        }\n        // If the last digit is 7, then the closest number is N - 8\n        if (last == 7) {\n            return N - 8;\n        }\n        // If the last digit is 8, then the closest number is N - 9\n        if (last == 8) {\n            return N - 9;\n        }\n        // If the last digit is 9, then the closest number is N - 10\n        if (last == 9) {\n            return N - 10;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123239,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b14d9bb8fd50489bbde8b8599de82661>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the first bit that is 1.\n        long mask = 1;\n        while ((N & mask) == 0) {\n            mask <<= 1;\n        }\n        // Clear the first bit that is 1.\n        return N & ~mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123239,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2810be824c634dc5a037eb5fdc80339d>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the number of bits in N.\n        int numBits = (int)Math.Floor(Math.Log(N, 2)) + 1;\n        // Find the next lowest power of 2.\n        long nextPower = (long)Math.Pow(2, numBits - 1);\n        // Find the next highest power of 2.\n        long prevPower = (long)Math.Pow(2, numBits);\n        // Return the closest of the two.\n        return (N - nextPower) > (prevPower - N) ? prevPower : nextPower;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123240,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8b09975a7d3b4e8b8fc7ff8f005acfca>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8b09975a7d3b4e8b8fc7ff8f005acfca>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the first non-zero digit.\n        int i = 0;\n        while (N % 10 == 0) {\n            N /= 10;\n            i++;\n        }\n        // Find the first digit that is smaller than the digit after it.\n        int j = i;\n        while (N % 10 <= (N / 10) % 10) {\n            N /= 10;\n            j++;\n        }\n        // Swap the two digits.\n        N = N / 10 + (N % 10) * (long)Math.Pow(10, j);\n        // Set all digits after the first non-zero digit to zero.\n        N = N - N % (long)Math.Pow(10, i);\n        return N;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123240,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <09699569275c4650a0f0f87cd22707b6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <09699569275c4650a0f0f87cd22707b6>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        var n = N;\n        var i = 0;\n        while (n > 0) {\n            n >>= 1;\n            i++;\n        }\n        var mask = (1L << i) - 1;\n        return N & mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123240,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <193aef0501734a7597c965563f1e18ed>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <193aef0501734a7597c965563f1e18ed>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Convert N to binary\n        string binary = Convert.ToString(N, 2);\n        int len = binary.Length;\n        // Find the first 1 from the right\n        int index = binary.LastIndexOf('1');\n        // If there is no 1, then return 0\n        if (index == -1) return 0;\n        // If there is only one 1, then return 0\n        if (index == len - 1) return 0;\n        // If there is more than one 1, then swap the first 1 from the right with the next 0\n        char[] bin = binary.ToCharArray();\n        bin[index] = '0';\n        bin[index + 1] = '1';\n        // Convert the binary back to decimal\n        return Convert.ToInt64(new string(bin), 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123240,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f26bf284a2944b96a569f6d05588929f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f26bf284a2944b96a569f6d05588929f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long[] digits = new long[20];\n        int i = 0;\n        while (N > 0) {\n            digits[i] = N % 10;\n            N /= 10;\n            i++;\n        }\n        i--;\n        long closest = 0;\n        for (int j = i; j >= 0; j--) {\n            if (digits[j] == 0) {\n                closest = closest * 10 + digits[j];\n                continue;\n            }\n            long temp = closest * 10 + digits[j] - 1;\n            for (int k = j - 1; k >= 0; k--) {\n                temp = temp * 10 + 9;\n            }\n            closest = temp;\n            break;\n        }\n        return closest;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123240,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <33b7d859cf1544f5863fb72cdf79a413>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <33b7d859cf1544f5863fb72cdf79a413>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        var s = N.ToString();\n        var len = s.Length;\n        var i = len - 1;\n        while (i > 0 && s[i] >= s[i - 1]) i--;\n        if (i == 0) return -1;\n        var j = i;\n        while (j < len && s[j] < s[i - 1]) j++;\n        var t = s[i - 1];\n        s = s.Remove(i - 1, 1).Insert(i - 1, s[j - 1].ToString());\n        s = s.Remove(j - 1, 1).Insert(j - 1, t.ToString());\n        s = s.Substring(0, i) + new string(s.Substring(i).Reverse().ToArray());\n        return long.Parse(s);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123240,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <429066c1a9d04c0b80d7be3583a01b21>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <429066c1a9d04c0b80d7be3583a01b21>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        var digits = new List<int>();\n        while (N > 0) {\n            digits.Add((int)(N % 10));\n            N /= 10;\n        }\n        digits.Reverse();\n        for (int i = 0; i < digits.Count - 1; i++) {\n            if (digits[i] > digits[i + 1]) {\n                digits[i]--;\n                for (int j = i + 1; j < digits.Count; j++) {\n                    digits[j] = 9;\n                }\n                break;\n            }\n        }\n        long result = 0;\n        for (int i = 0; i < digits.Count; i++) {\n            result = result * 10 + digits[i];\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123240,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <094e66533c9740e6ad3b2d6ed3479c5e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <094e66533c9740e6ad3b2d6ed3479c5e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        if (N == 0) return 0;\n        if (N == 1) return 0;\n        if (N == 2) return 1;\n        if (N == 3) return 2;\n        if (N == 4) return 3;\n        if (N == 5) return 4;\n        if (N == 6) return 5;\n        if (N == 7) return 6;\n        if (N == 8) return 7;\n        if (N == 9) return 8;\n        if (N == 10) return 9;\n        if (N == 11) return 10;\n        if (N == 12) return 11;\n        if (N == 13) return 12;\n        if (N == 14) return 13;\n        if (N == 15) return 14;\n        if (N == 16) return 15;\n        if (N == 17) return 16;\n        if (N == 18) return 17;\n        if (N == 19) return 18;\n        if (N == 20) return 19;\n        if (N == 21) return 20;\n        if (N == 22) return 21;\n        if (N == 23) return 22;\n        if (N == 24) return 23;\n        if (N == 25) return 24;\n        if (N == 26) return 25;\n        if (N == 27) return 26;\n        if (N == 28) return 27;\n        if (N == 29) return 28;\n        if (N == 30) return 29;\n        if (N == 31) return 30;\n        if (N == 32) return 31;\n        if (N == 33) return 32;\n        if (N == 34) return 33;\n        if (N == 35) return 34;\n        if (N == 36) return 35;\n        if (N == 37) return 36;\n        if (N == 38) return 37;\n        if (N == 39) return 38;\n        if (N == 40) return 39;\n        if (N == 41) return 40;\n        if (N == 42) return 41;\n        if (N == 43) return 42;\n        if (N == 44) return 43;\n        if (N == 45) return 44;\n        if (N ==\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123237,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp7s7ccnef.cs(57,17): error CS1525: Invalid expression term '}'\n/tmp/tmp7s7ccnef.cs(57,17): error CS1026: ) expected\n/tmp/tmp7s7ccnef.cs(57,17): error CS1002: ; expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the first bit that is 0.\n        long mask = 1;\n        while ((N & mask) != 0) {\n            mask <<= 1;\n        }\n        // Flip the first 0 bit.\n        mask -= 1;\n        return N ^ mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123240,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0a9ae0776b1c4bb6a13df8e1e31265d9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0a9ae0776b1c4bb6a13df8e1e31265d9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        var digits = new List<int>();\n        while (N > 0) {\n            digits.Add((int)(N % 10));\n            N /= 10;\n        }\n        digits.Reverse();\n        var n = digits.Count;\n        var i = 0;\n        while (i < n - 1 && digits[i] <= digits[i + 1]) {\n            i++;\n        }\n        if (i == n - 1) {\n            return -1;\n        }\n        var j = i + 1;\n        while (j < n && digits[j] < digits[i]) {\n            j++;\n        }\n        j--;\n        var temp = digits[i];\n        digits[i] = digits[j];\n        digits[j] = temp;\n        var res = 0L;\n        for (var k = 0; k < n; k++) {\n            res = res * 10 + digits[k];\n        }\n        return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123240,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5540f32c0e6c48a2868c1ab28fe8961e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5540f32c0e6c48a2868c1ab28fe8961e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the first 1 bit from the right.\n        int i = 0;\n        while (((N >> i) & 1) == 0) {\n            i++;\n        }\n        // Flip the first 1 bit from the right.\n        return N ^ (1 << i);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123240,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <27c91a1886f24997983cc6c664d0e3a1>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the largest power of 2 that is smaller than N.\n        long power = 1;\n        while (power < N) {\n            power *= 2;\n        }\n        power /= 2;\n        // Find the largest power of 5 that is smaller than N.\n        long power5 = 1;\n        while (power5 < N) {\n            power5 *= 5;\n        }\n        power5 /= 5;\n        // Find the largest power of 10 that is smaller than N.\n        long power10 = 1;\n        while (power10 < N) {\n            power10 *= 10;\n        }\n        power10 /= 10;\n        // Find the largest power of 2, 5, and 10 that is smaller than N.\n        long power2 = Math.Min(power, Math.Min(power5, power10));\n        // Find the closest number to N that is a multiple of power2.\n        long result = N / power2 * power2;\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123240,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c84d5744956143f2bf5c4a4952cf191b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c84d5744956143f2bf5c4a4952cf191b>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the closest smaller number than n.\n        // For example, if n = 10, then the closest smaller number is 9.\n        // If n = 100, then the closest smaller number is 99.\n        // If n = 1, then the closest smaller number is 0.\n        // If n = 0, then the closest smaller number is 0.\n        // If n = -10, then the closest smaller number is -11.\n        // If n = -100, then the closest smaller number is -101.\n        // If n = -1, then the closest smaller number is -1.\n        // If n = -1000000000, then the closest smaller number is -1000000001.\n        // If n = 1000000000, then the closest smaller number is 999999999.\n        // If n = -1000000000, then the closest smaller number is -1000000001.\n        // If n = 1000000000, then the closest smaller number is 999999999.\n        // If n = -1000000000, then the closest smaller number is -1000000001.\n        // If n = 1000000000, then the closest smaller number is 999999999.\n        // If n = -1000000000, then the closest smaller number is -1000000001.\n        // If n = 1000000000, then the closest smaller number is 999999999.\n        // If n = -1000000000, then the closest smaller number is -1000000001.\n        // If n = 1000000000, then the closest smaller number is 999999999.\n        // If n = -1000000000, then the closest smaller number is -1000000001.\n        // If n = 1000000000, then the closest smaller number is 999999999.\n        // If n = -1000000000, then the closest smaller number is -1000000001.\n        // If n = 1000000000, then the closest smaller number is 999999999.\n        // If n = -1000000000, then the closest smaller number is -1000000001.\n        // If n = 1000000000, then the closest smaller number is 999999999.\n        // If n = -1000000000, then the closest smaller number is -1000000001.\n        // If n = 1000000000, then the closest smaller number is 999999999.\n        // If n = -1000000000,\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123240,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpka2080t5.cs(10,24): error CS0161: 'Problem.ClosestNum(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the number of digits in N.\n        int digits = (int)Math.Floor(Math.Log10(N)) + 1;\n        // Find the largest power of 10 less than N.\n        long power = (long)Math.Pow(10, digits - 1);\n        // Find the most significant digit of N.\n        long msd = N / power;\n        // If the most significant digit is 1, then the closest number is N - 1.\n        if (msd == 1) {\n            return N - 1;\n        }\n        // Otherwise, the closest number is the largest number less than N\n        // with the most significant digit one less than the most significant\n        // digit of N.\n        return (msd - 1) * power + (long)(power - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123240,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long[] digits = new long[20];\n        int len = 0;\n        while (N > 0) {\n            digits[len++] = N % 10;\n            N /= 10;\n        }\n        for (int i = len - 1; i > 0; i--) {\n            if (digits[i] < digits[i - 1]) {\n                long temp = digits[i];\n                digits[i] = digits[i - 1];\n                digits[i - 1] = temp;\n                break;\n            }\n        }\n        long result = 0;\n        for (int i = 0; i < len; i++) {\n            result = result * 10 + digits[i];\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123240,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <47be38808dd54211aee86f4d3863a6bf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <47be38808dd54211aee86f4d3863a6bf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Convert N to binary.\n        string N_bin = Convert.ToString(N, 2);\n        // Find the first 1 from the right.\n        int i = N_bin.Length - 1;\n        while (N_bin[i] == '0') {\n            i--;\n        }\n        // Flip the bit at i.\n        N_bin = N_bin.Substring(0, i) + '0' + N_bin.Substring(i + 1);\n        // Find the first 0 from the right.\n        i = N_bin.Length - 1;\n        while (N_bin[i] == '1') {\n            i--;\n        }\n        // Flip the bit at i.\n        N_bin = N_bin.Substring(0, i) + '1' + N_bin.Substring(i + 1);\n        // Convert back to decimal.\n        return Convert.ToInt64(N_bin, 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123240,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1cbe00dff6b54244be01bd417496d708>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1cbe00dff6b54244be01bd417496d708>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long[] digits = new long[20];\n        int len = 0;\n        while (N > 0) {\n            digits[len++] = N % 10;\n            N /= 10;\n        }\n        for (int i = len - 1; i > 0; i--) {\n            if (digits[i] < digits[i - 1]) {\n                long temp = digits[i];\n                digits[i] = digits[i - 1];\n                digits[i - 1] = temp;\n                break;\n            }\n        }\n        long res = 0;\n        for (int i = len - 1; i >= 0; i--) {\n            res = res * 10 + digits[i];\n        }\n        return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123240,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <991ffef7b4d447a2bc0e28428f8ed7df>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <991ffef7b4d447a2bc0e28428f8ed7df>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        var digits = N.ToString().ToCharArray();\n        var len = digits.Length;\n        var i = len - 1;\n        while (i > 0 && digits[i] >= digits[i - 1]) {\n            i--;\n        }\n        if (i == 0) {\n            return -1;\n        }\n        var j = len - 1;\n        while (digits[j] >= digits[i - 1]) {\n            j--;\n        }\n        var tmp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = tmp;\n        Array.Sort(digits, i, len - i);\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123240,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4963dc3f1fc741369fd1b19e1d2498ba>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4963dc3f1fc741369fd1b19e1d2498ba>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the first non-one digit from the right.\n        int i = 0;\n        while (N % 10 == 1) {\n            N /= 10;\n            i++;\n        }\n        // If all digits are 1, return -1.\n        if (N == 0) return -1;\n        // Decrement the digit and fill the rest with 9's.\n        return N / 10 * (long)Math.Pow(10, i + 1) + (N % 10 - 1) * (long)Math.Pow(10, i) + (long)Math.Pow(10, i) - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123240,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4f9ade29b50247dc92db9c2c67e91beb>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the first bit that is 0\n        long mask = 1;\n        while ((N & mask) != 0) {\n            mask <<= 1;\n        }\n        mask >>= 1;\n        return N ^ mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123240,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <21925cffdb24430f8da677f760f51d16>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <21925cffdb24430f8da677f760f51d16>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long n = N;\n        long mask = 1;\n        long bit = 0;\n        long prevBit = 0;\n        long prevMask = 0;\n        while (n > 0) {\n            bit = n & mask;\n            if (bit == 0 && prevBit == 1) {\n                return N - prevMask + bit;\n            }\n            prevMask = mask;\n            prevBit = bit;\n            mask <<= 1;\n            n >>= 1;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123240,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <81f82e6f8d874d39aaeb9484b69da209>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <81f82e6f8d874d39aaeb9484b69da209>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long n = N;\n        long i = 0;\n        while (n > 0) {\n            if ((n & 1) == 1) {\n                break;\n            }\n            i++;\n            n >>= 1;\n        }\n        return N - (1 << i);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1665510444,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplh0i29_t.cs(20,21): error CS0019: Operator '<<' cannot be applied to operands of type 'int' and 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        var s = N.ToString();\n        var l = s.Length;\n        var i = 0;\n        while (i < l - 1 && s[i] <= s[i + 1]) i++;\n        if (i == 0) return -1;\n        var t = s.Substring(0, i) + s[i + 1] + s[i] + s.Substring(i + 2);\n        return long.Parse(t);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123240,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.ClosestNum (System.Int64 N) [0x00054] in <9a6e92db7d5a4341b01be1d2f2289780>:0 \n  at Problem.Main (System.String[] args) [0x00001] in <9a6e92db7d5a4341b01be1d2f2289780>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.ClosestNum (System.Int64 N) [0x00054] in <9a6e92db7d5a4341b01be1d2f2289780>:0 \n  at Problem.Main (System.String[] args) [0x00001] in <9a6e92db7d5a4341b01be1d2f2289780>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long[] digits = new long[20];\n        long n = N;\n        int len = 0;\n        while (n > 0) {\n            digits[len++] = n % 10;\n            n /= 10;\n        }\n        for (int i = len - 1; i > 0; i--) {\n            if (digits[i] < digits[i - 1]) {\n                long tmp = digits[i];\n                digits[i] = digits[i - 1];\n                digits[i - 1] = tmp;\n                break;\n            }\n        }\n        long res = 0;\n        for (int i = 0; i < len; i++) {\n            res = res * 10 + digits[i];\n        }\n        return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123240,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e7b73eae03d1494ba143543baeec5c1a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e7b73eae03d1494ba143543baeec5c1a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long[] digits = new long[20];\n        long n = N;\n        int i = 0;\n        while (n > 0) {\n            digits[i++] = n % 10;\n            n /= 10;\n        }\n        long[] digits2 = new long[i];\n        for (int j = 0; j < i; j++) {\n            digits2[j] = digits[j];\n        }\n        Array.Sort(digits2);\n        int j2 = 0;\n        for (int j = 0; j < i; j++) {\n            if (digits2[j] != digits[j]) {\n                j2 = j;\n                break;\n            }\n        }\n        long temp = digits2[j2];\n        digits2[j2] = digits2[j2 - 1];\n        digits2[j2 - 1] = temp;\n        long result = 0;\n        for (int j = i - 1; j >= 0; j--) {\n            result = result * 10 + digits2[j];\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123240,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.ClosestNum (System.Int64 N) [0x00097] in <1c02b37b57e74d5fb0f085606fde24cc>:0 \n  at Problem.Main (System.String[] args) [0x00001] in <1c02b37b57e74d5fb0f085606fde24cc>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.ClosestNum (System.Int64 N) [0x00097] in <1c02b37b57e74d5fb0f085606fde24cc>:0 \n  at Problem.Main (System.String[] args) [0x00001] in <1c02b37b57e74d5fb0f085606fde24cc>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        var digits = new List<int>();\n        while (N > 0) {\n            digits.Add((int)(N % 10));\n            N /= 10;\n        }\n        digits.Reverse();\n        var n = digits.Count;\n        for (int i = n - 1; i > 0; i--) {\n            if (digits[i] > digits[i - 1]) {\n                var temp = digits[i];\n                digits[i] = digits[i - 1];\n                digits[i - 1] = temp;\n                break;\n            }\n        }\n        long res = 0;\n        for (int i = 0; i < n; i++) {\n            res = res * 10 + digits[i];\n        }\n        return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123240,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3952c739c39c4f32902a4874d644431a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3952c739c39c4f32902a4874d644431a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long n = N;\n        long mask = 1;\n        while ((n & mask) == 0) {\n            mask <<= 1;\n        }\n        mask >>= 1;\n        return N ^ mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123240,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9103b2bf08e4462fb9ad20744ea3a4be>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9103b2bf08e4462fb9ad20744ea3a4be>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the smallest power of 2 that is greater than N\n        long p = 1;\n        while (p < N) {\n            p <<= 1;\n        }\n        // Return the number that is one less than the power of 2\n        return p - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123240,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bb9bed7bd71c4e999a16e0036e530dfa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bb9bed7bd71c4e999a16e0036e530dfa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long n = N;\n        int i = 0;\n        while (n != 0) {\n            if ((n & 1) == 0) {\n                return N - (long)Math.Pow(2, i);\n            }\n            n >>= 1;\n            i++;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123240,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1bde47d53eaf4a16b6a5cb1b8512247b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1bde47d53eaf4a16b6a5cb1b8512247b>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // The number of digits in N.\n        int n = (int)Math.Floor(Math.Log10(N)) + 1;\n        // The number of digits in the closest smaller number.\n        int m = n;\n        // The closest smaller number.\n        long C = N;\n        // The number of digits in the closest smaller number.\n        int c = n;\n        // The number of digits in the current number.\n        int k = n;\n        // The current number.\n        long K = N;\n        // The number of digits in the current number.\n        int kk = n;\n        // The current number.\n        long KK = N;\n        // The number of digits in the current number.\n        int kkk = n;\n        // The current number.\n        long KKK = N;\n        // The number of digits in the current number.\n        int kkkk = n;\n        // The current number.\n        long KKKK = N;\n        // The number of digits in the current number.\n        int kkkkk = n;\n        // The current number.\n        long KKKKK = N;\n        // The number of digits in the current number.\n        int kkkkkk = n;\n        // The current number.\n        long KKKKKK = N;\n        // The number of digits in the current number.\n        int kkkkkkk = n;\n        // The current number.\n        long KKKKKKK = N;\n        // The number of digits in the current number.\n        int kkkkkkkk = n;\n        // The current number.\n        long KKKKKKKK = N;\n        // The number of digits in the current number.\n        int kkkkkkkkk = n;\n        // The current number.\n        long KKKKKKKKK = N;\n        // The number of digits in the current number.\n        int kkkkkkkkkk = n;\n        // The current number.\n        long KKKKKKKKKK = N;\n        // The number of digits in the current number.\n        int kkkkkkkkkkk = n;\n        // The current number.\n        long KKKKKKKKKKK = N;\n        // The number of digits in the current\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123240,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdhwolcd1.cs(10,24): error CS0161: 'Problem.ClosestNum(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long[] digits = new long[20];\n        int n = 0;\n        while (N > 0) {\n            digits[n++] = N % 10;\n            N /= 10;\n        }\n        for (int i = n - 1; i > 0; i--) {\n            if (digits[i] < digits[i - 1]) {\n                long tmp = digits[i];\n                digits[i] = digits[i - 1];\n                digits[i - 1] = tmp;\n                break;\n            }\n        }\n        long res = 0;\n        for (int i = 0; i < n; i++) {\n            res = res * 10 + digits[i];\n        }\n        return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123240,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41dd03f0dbd14b03967180356661fec1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41dd03f0dbd14b03967180356661fec1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long[] digits = new long[20];\n        long n = N;\n        int len = 0;\n        while (n > 0) {\n            digits[len++] = n % 10;\n            n /= 10;\n        }\n        for (int i = len - 1; i > 0; i--) {\n            if (digits[i] < digits[i - 1]) {\n                long tmp = digits[i];\n                digits[i] = digits[i - 1];\n                digits[i - 1] = tmp;\n                break;\n            }\n        }\n        long res = 0;\n        for (int i = len - 1; i >= 0; i--) {\n            res = res * 10 + digits[i];\n        }\n        return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123240,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <27115a63bf13427ca55a3dbd685a0614>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <27115a63bf13427ca55a3dbd685a0614>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        var n = N;\n        var i = 0;\n        while (n > 0) {\n            if ((n & 1) == 0) {\n                n = n >> 1;\n                i++;\n            } else {\n                break;\n            }\n        }\n        return N - (1 << i);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123240,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <95f7a57a6beb4545beb7c2c7b0af554d>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Convert to binary\n        var bin = Convert.ToString(N, 2);\n        var len = bin.Length;\n        var one = bin.LastIndexOf('1');\n        var zero = bin.LastIndexOf('0');\n        if (one == -1) {\n            return 0;\n        }\n        if (one == zero) {\n            return N - (1 << one);\n        }\n        if (one == len - 1) {\n            return N - (1 << one);\n        }\n        if (zero == len - 1) {\n            return N - (1 << one) - (1 << (zero - 1));\n        }\n        return N - (1 << one) - (1 << (zero - 1)) - (1 << (len - 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123240,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <181a31f076de41bb84c37ea2cc249b36>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <181a31f076de41bb84c37ea2cc249b36>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long n = N;\n        long[] a = new long[64];\n        int i = 0;\n        while (n > 0) {\n            a[i++] = n % 2;\n            n /= 2;\n        }\n        int j = 0;\n        for (j = i - 1; j > 0; j--) {\n            if (a[j] == 1 && a[j - 1] == 0) {\n                a[j] = 0;\n                a[j - 1] = 1;\n                break;\n            }\n        }\n        long res = 0;\n        for (int k = 0; k < i; k++) {\n            res += a[k] * (long)Math.Pow(2, k);\n        }\n        return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123240,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <479823897e514a2faafae7e6f2cd2b33>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <479823897e514a2faafae7e6f2cd2b33>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        if (N <= 0) {\n            return -1;\n        }\n        var s = N.ToString();\n        var len = s.Length;\n        var i = len - 1;\n        var j = len - 1;\n        while (i > 0 && s[i] <= s[i - 1]) {\n            i--;\n        }\n        if (i == 0) {\n            return -1;\n        }\n        i--;\n        while (j > i && s[j] < s[i]) {\n            j--;\n        }\n        var t = s[i];\n        s = s.Remove(i, 1);\n        s = s.Insert(i, s[j].ToString());\n        s = s.Remove(j, 1);\n        s = s.Insert(j, t.ToString());\n        var res = long.Parse(s.Substring(0, i + 1) + new string(s.Substring(i + 1).Reverse().ToArray()));\n        return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123240,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <23c2ae7b1aee449086d7fcd10dc1cfb3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <23c2ae7b1aee449086d7fcd10dc1cfb3>:0 \n\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.ClosestNum (System.Int64 N) [0x000a9] in <23c2ae7b1aee449086d7fcd10dc1cfb3>:0 \n  at Problem.Main (System.String[] args) [0x00025] in <23c2ae7b1aee449086d7fcd10dc1cfb3>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeExcep",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the closest smaller number than n.\n        // If n is even, the closest smaller number is n-1.\n        // If n is odd, the closest smaller number is n-2.\n        // If n is a power of 2, the closest smaller number is n/2.\n        // If n is a power of 2 + 1, the closest smaller number is n/2 - 1.\n        // If n is a power of 2 - 1, the closest smaller number is n/2 + 1.\n        // If n is a power of 2 + 2, the closest smaller number is n/2 - 1.\n        // If n is a power of 2 - 2, the closest smaller number is n/2 + 1.\n        // If n is a power of 2 + 3, the closest smaller number is n/2 - 1.\n        // If n is a power of 2 - 3, the closest smaller number is n/2 + 1.\n        // If n is a power of 2 + 4, the closest smaller number is n/2 - 2.\n        // If n is a power of 2 - 4, the closest smaller number is n/2 + 2.\n        // If n is a power of 2 + 5, the closest smaller number is n/2 - 2.\n        // If n is a power of 2 - 5, the closest smaller number is n/2 + 2.\n        // If n is a power of 2 + 6, the closest smaller number is n/2 - 2.\n        // If n is a power of 2 - 6, the closest smaller number is n/2 + 2.\n        // If n is a power of 2 + 7, the closest smaller number is n/2 - 3.\n        // If n is a power of 2 - 7, the closest smaller number is n/2 + 3.\n        // If n is a power of 2 + 8, the closest smaller number is n/2 - 3.\n        // If n is a power of 2 - 8, the closest smaller number is n/2 + 3.\n        // If n is a power of 2 + 9, the closest smaller number is n/2 - 3.\n        // If n is a power of 2 - 9, the closest smaller number is n/2 + 3.\n        // If n is a power of 2 + 10, the closest\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123240,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpx0_fsl84.cs(10,24): error CS0161: 'Problem.ClosestNum(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the first bit that is 1.\n        long mask = 1;\n        while ((N & mask) == 0) {\n            mask <<= 1;\n        }\n        // Flip the first bit that is 1.\n        return N ^ mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a4301bfcc00943999b922848d07dc0c8>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // This is the number of bits in N.\n        int n = (int)Math.Ceiling(Math.Log(N, 2));\n        // This is the number of bits in the closest smaller number.\n        int m = n - 1;\n        // This is the closest smaller number.\n        long M = (long)Math.Pow(2, m) - 1;\n        // This is the number of bits in the difference between N and M.\n        int d = n - m;\n        // This is the difference between N and M.\n        long D = N - M;\n        // This is the number of bits in the closest smaller number that is\n        // greater than D.\n        int k = (int)Math.Ceiling(Math.Log(D, 2));\n        // This is the closest smaller number that is greater than D.\n        long K = (long)Math.Pow(2, k) - 1;\n        // This is the number of bits in the difference between D and K.\n        int h = k - d;\n        // This is the difference between D and K.\n        long H = D - K;\n        // This is the closest smaller number.\n        long C = M + K + H;\n        return C;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <707847fdf3b042bab0c19f0e55cf1915>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <707847fdf3b042bab0c19f0e55cf1915>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the largest power of 2 that is smaller than N.\n        long power = 1;\n        while (power < N) {\n            power *= 2;\n        }\n        power /= 2;\n        // Find the largest power of 5 that is smaller than N.\n        long power5 = 1;\n        while (power5 < N) {\n            power5 *= 5;\n        }\n        power5 /= 5;\n        // Find the largest power of 2 and 5 that is smaller than N.\n        long power2and5 = Math.Min(power, power5);\n        // Find the largest power of 2 and 5 that is smaller than N.\n        long power2or5 = Math.Max(power, power5);\n        // Find the closest number to N that is a power of 2 and 5.\n        if (N - power2and5 < power2or5 - N) {\n            return power2and5;\n        } else {\n            return power2or5;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0ce8fcbd04d945928e62f3d198a72c86>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0ce8fcbd04d945928e62f3d198a72c86>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long[] digits = new long[20];\n        long n = N;\n        int d = 0;\n        while (n > 0) {\n            digits[d++] = n % 10;\n            n /= 10;\n        }\n        for (int i = d - 1; i > 0; i--) {\n            if (digits[i] < digits[i - 1]) {\n                long temp = digits[i];\n                digits[i] = digits[i - 1];\n                digits[i - 1] = temp;\n                break;\n            }\n        }\n        long res = 0;\n        for (int i = 0; i < d; i++) {\n            res = res * 10 + digits[i];\n        }\n        return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4b157d759e184767ae946818ad3549b5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4b157d759e184767ae946818ad3549b5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // If N is even, then the closest smaller number is N - 1.\n        if (N % 2 == 0) {\n            return N - 1;\n        }\n        // If N is odd, then the closest smaller number is N - 2.\n        return N - 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b62a00d2ea0f4a4ea7de6eaa7e0fe169>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b62a00d2ea0f4a4ea7de6eaa7e0fe169>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Convert to binary\n        string binary = Convert.ToString(N, 2);\n        // Find the first 1\n        int firstOne = binary.IndexOf('1');\n        // Find the first 0 after the first 1\n        int firstZero = binary.IndexOf('0', firstOne);\n        // Swap the first 0 and 1\n        char[] binaryArray = binary.ToCharArray();\n        binaryArray[firstZero] = '1';\n        binaryArray[firstOne] = '0';\n        // Convert back to decimal\n        return Convert.ToInt64(new string(binaryArray), 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6f38b268cc1745418fb47b7d7348d3f3>:0 \n\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.ClosestNum (System.Int64 N) [0x00023] in <6f38b268cc1745418fb47b7d7348d3f3>:0 \n  at Problem.Main (System.String[] args) [0x00014] in <6f38b268cc1745418fb47b7d7348d3f3>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.ClosestNum (System.Int64 N) [0x00023] in <6f38b268cc1745418fb47b7d7348d3f3>:0 \n  at Problem.Main (System.String[] args) [0x00014] in <6f38b268cc1745418fb47b7d7348d3f3>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long n = N;\n        long mask = 1;\n        while ((n & mask) == 0) {\n            mask <<= 1;\n        }\n        mask >>= 1;\n        return N ^ mask;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123240,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9103b2bf08e4462fb9ad20744ea3a4be>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9103b2bf08e4462fb9ad20744ea3a4be>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the first bit that is 1.\n        int i = 0;\n        while ((N & (1 << i)) == 0) {\n            i++;\n        }\n        // Find the first bit that is 0.\n        int j = i + 1;\n        while ((N & (1 << j)) != 0) {\n            j++;\n        }\n        // Swap the bits.\n        N = N & ~(1 << i);\n        N = N | (1 << j);\n        // Set all the bits to the right of i to 1.\n        N = N | ((1 << i) - 1);\n        return N;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <81214547f164408e952015e1fd941b25>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <81214547f164408e952015e1fd941b25>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        var s = N.ToString();\n        var n = s.Length;\n        var i = n - 1;\n        while (i > 0 && s[i] >= s[i - 1]) {\n            i--;\n        }\n        if (i == 0) {\n            return -1;\n        }\n        var j = n - 1;\n        while (s[j] >= s[i - 1]) {\n            j--;\n        }\n        var t = s[i - 1];\n        s = s.Remove(i - 1, 1).Insert(i - 1, s[j].ToString());\n        s = s.Remove(j, 1).Insert(j, t.ToString());\n        var k = n - 1;\n        while (i < k) {\n            t = s[i];\n            s = s.Remove(i, 1).Insert(i, s[k].ToString());\n            s = s.Remove(k, 1).Insert(k, t.ToString());\n            i++;\n            k--;\n        }\n        return long.Parse(s);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8fdadfc8551a47d4b6240658583f1734>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8fdadfc8551a47d4b6240658583f1734>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Convert N to a string.\n        string s = N.ToString();\n        // Find the first digit that is not the largest digit in the string.\n        int i = 0;\n        while (i < s.Length - 1 && s[i] >= s[i + 1]) {\n            i++;\n        }\n        // If all digits are the same, return -1.\n        if (i == s.Length - 1) {\n            return -1;\n        }\n        // Find the smallest digit to the right of the digit found in the previous step.\n        int j = i + 1;\n        while (j < s.Length && s[j] < s[i]) {\n            j++;\n        }\n        // Swap the two digits.\n        char temp = s[i];\n        s = s.Remove(i, 1);\n        s = s.Insert(i, s[j - 1].ToString());\n        s = s.Remove(j - 1, 1);\n        s = s.Insert(j - 1, temp.ToString());\n        // Sort the digits to the right of the digit found in the first step.\n        string s2 = s.Substring(i + 1);\n        char[] s2Array = s2.ToCharArray();\n        Array.Sort(s2Array);\n        s2 = new string(s2Array);\n        s = s.Remove(i + 1);\n        s = s.Insert(i + 1, s2);\n        // Convert the string back to a long and return it.\n        return long.Parse(s);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7bc8efa5ad634536a874030927c9bb08>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7bc8efa5ad634536a874030927c9bb08>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        var digits = new List<long>();\n        while (N > 0) {\n            digits.Add(N % 10);\n            N /= 10;\n        }\n        digits.Reverse();\n        var n = digits.Count;\n        for (int i = n - 1; i > 0; i--) {\n            if (digits[i] < digits[i - 1]) {\n                var temp = digits[i];\n                digits[i] = digits[i - 1];\n                digits[i - 1] = temp;\n                break;\n            }\n        }\n        long res = 0;\n        for (int i = 0; i < n; i++) {\n            res = res * 10 + digits[i];\n        }\n        return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a53d1b04b69444b8a1a56e9f5d098970>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a53d1b04b69444b8a1a56e9f5d098970>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long n = N;\n        int i = 0;\n        while (n > 0) {\n            n >>= 1;\n            i++;\n        }\n        return (long)Math.Pow(2, i - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b101936f40924131b2fca8775053cfb5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b101936f40924131b2fca8775053cfb5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the smallest power of 2 that is greater than N.\n        long power = 1;\n        while (power <= N) {\n            power *= 2;\n        }\n        // Return the largest power of 2 that is smaller than N.\n        return power / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <438391212fa84a789636ec92e1595ef5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <438391212fa84a789636ec92e1595ef5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        var digits = new List<int>();\n        while (N > 0) {\n            digits.Add((int)(N % 10));\n            N /= 10;\n        }\n        digits.Reverse();\n        var n = digits.Count;\n        var i = n - 1;\n        while (i > 0 && digits[i] <= digits[i - 1]) {\n            i--;\n        }\n        if (i == 0) {\n            return -1;\n        }\n        var j = n - 1;\n        while (digits[j] >= digits[i - 1]) {\n            j--;\n        }\n        var tmp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = tmp;\n        j = n - 1;\n        while (i < j) {\n            tmp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = tmp;\n            i++;\n            j--;\n        }\n        long res = 0;\n        foreach (var d in digits) {\n            res = res * 10 + d;\n        }\n        return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c1cb8171cad84562808fb6395ab4ee3b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c1cb8171cad84562808fb6395ab4ee3b>:0 \n\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.ClosestNum (System.Int64 N) [0x00086] in ",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        var s = N.ToString();\n        var l = s.Length;\n        var d = s[l - 1];\n        if (d == '0') {\n            return N - 1;\n        }\n        var i = l - 2;\n        while (i >= 0 && s[i] <= d) {\n            i--;\n        }\n        if (i < 0) {\n            return -1;\n        }\n        var t = s[i];\n        s = s.Substring(0, i) + d + new string(t, l - i - 1);\n        return long.Parse(s);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b8606bca7e6743e79b25afb40c01ec81>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b8606bca7e6743e79b25afb40c01ec81>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Convert to binary\n        string bin = Convert.ToString((long)N, 2);\n        // Find the first 1 from the right\n        int i = bin.Length - 1;\n        while (bin[i] == '0') {\n            i--;\n        }\n        // Swap the 1 with the first 0 from the right\n        bin = bin.Substring(0, i) + '0' + bin.Substring(i + 1);\n        i++;\n        while (bin[i] == '1') {\n            i++;\n        }\n        bin = bin.Substring(0, i) + '1' + bin.Substring(i + 1);\n        // Convert back to decimal\n        return Convert.ToInt64(bin, 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.ClosestNum (System.Int64 N) [0x00051] in <e2b9d01925774f9d9c77593e2ad8f4d1>:0 \n  at Problem.Main (System.String[] args) [0x00001] in <e2b9d01925774f9d9c77593e2ad8f4d1>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.ClosestNum (System.Int64 N) [0x00051] in <e2b9d01925774f9d9c77593e2ad8f4d1>:0 \n  at Problem.Main (System.String[] args) [0x00001] in <e2b9d01925774f9d9c77593e2ad8f4d1>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the rightmost set bit\n        long rightOne = N & -N;\n        // Isolate the rightmost set bit\n        long rightOnesPattern = N + rightOne;\n        // Right propagate the rightmost set bit\n        long rightOnesPatternIsolated = N ^ rightOnesPattern;\n        // Right propagate the rightmost set bit again\n        long rightOnesPatternIsolatedRightOne = rightOnesPatternIsolated / rightOne;\n        // Right propagate the rightmost set bit again\n        long rightOnesPatternIsolatedRightOneRightOne = rightOnesPatternIsolatedRightOne >> 2;\n        // Remove the rightmost set bit\n        long result = N - rightOne;\n        // Add the rightmost set bit back\n        result |= rightOnesPatternIsolatedRightOneRightOne;\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8cf1d18f7e624584925f71b3f4baead1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8cf1d18f7e624584925f71b3f4baead1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long result = N;\n        int i = 0;\n        while (result > 0) {\n            if ((result & 1) == 1) {\n                result &= ~(1 << i);\n                break;\n            }\n            i++;\n            result >>= 1;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7d0fa468d8e7424f9b148975c6d309df>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long n = N;\n        long mask = 1;\n        while ((n & mask) == 0) {\n            mask <<= 1;\n        }\n        mask >>= 1;\n        n &= ~mask;\n        n |= mask >> 1;\n        return n;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2aa8d4271ef34803bd3212fa57338bb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2aa8d4271ef34803bd3212fa57338bb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the closest number with the same number of 1 bits in its binary representation.\n        // If there are two equally close numbers, return the smaller one.\n        // If the input is a power of two, return -1.\n        //\n        // Example:\n        // N = 100, return 96\n        // N = 101, return 100\n        // N = 128, return -1\n        //\n        // Hint:\n        // 1. Count the number of trailing zeros in the binary representation of N.\n        // 2. If the number of trailing zeros is 0, then N is a power of two.\n        // 3. If the number of trailing zeros is not 0, then the answer is N - 2^(number of trailing zeros).\n        // 4. To get the number of trailing zeros, you can use the following code:\n        //    int numTrailingZeros = 0;\n        //    while ((N & 1) == 0) {\n        //        N >>= 1;\n        //        numTrailingZeros++;\n        //    }\n        // 5. To subtract 2^(number of trailing zeros) from N, you can use the following code:\n        //    N -= (1 << numTrailingZeros);\n        // 6. To check if N is a power of two, you can use the following code:\n        //    return (N & (N - 1)) == 0;\n        //\n        // Be careful about the case when N = 0.\n        //\n        // Time complexity: O(log N).\n        // Space complexity: O(1).\n        int numTrailingZeros = 0;\n        while ((N & 1) == 0) {\n            N >>= 1;\n            numTrailingZeros++;\n        }\n        if (numTrailingZeros == 0) {\n            return -1;\n        }\n        N -= (1 << numTrailingZeros);\n        return N;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a8ca93d5d46b4754b8851f4591b263d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a8ca93d5d46b4754b8851f4591b263d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        if (N == 0) return 0;\n        int i = 0;\n        while (N != 0) {\n            if ((N & 1) == 0) {\n                return N - (1 << i);\n            }\n            N >>= 1;\n            i++;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c43d309e602448de9ddeb66565a77c43>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c43d309e602448de9ddeb66565a77c43>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long[] A = new long[64];\n        int i = 0;\n        while (N > 0) {\n            A[i] = N % 2;\n            N /= 2;\n            i++;\n        }\n        for (int j = i - 1; j > 0; j--) {\n            if (A[j] == 1 && A[j - 1] == 0) {\n                A[j] = 0;\n                A[j - 1] = 1;\n                break;\n            }\n        }\n        long res = 0;\n        for (int j = 0; j < i; j++) {\n            res += A[j] * (long)Math.Pow(2, j);\n        }\n        return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b3c9fbd1ca194bfc8a48a237624f3cb0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b3c9fbd1ca194bfc8a48a237624f3cb0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long n = N;\n        long m = N;\n        int i = 0;\n        while (n > 0) {\n            if ((n & 1) == 1) {\n                m = m & ~(1L << i);\n                m = m | (1L << (i + 1));\n                break;\n            }\n            n = n >> 1;\n            i++;\n        }\n        return m;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0fc2a3def2084a93bacd60b64a709a25>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        var n = N;\n        var c = 0;\n        while (n > 0) {\n            if ((n & 1) == 1) {\n                break;\n            }\n            c++;\n            n >>= 1;\n        }\n        return N - (1 << c);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3ad67bf72073449aa83c7d03ce19e8d4>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the number of digits in N\n        int digits = (int)Math.Floor(Math.Log10(N)) + 1;\n        // Find the closest power of 10\n        long power = (long)Math.Pow(10, digits - 1);\n        // Find the most significant digit\n        long msd = N / power;\n        // If the most significant digit is 1, then the closest smaller number is N - 1\n        if (msd == 1) {\n            return N - 1;\n        }\n        // Otherwise, the closest smaller number is the next lower power of 10\n        return power / 10;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <934a0186643547b29048fb600a0ad30b>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the closest number with the same number of 1 bits in its binary representation.\n        // If the number of 1 bits is 0, then the closest number is 0.\n        // If the number of 1 bits is 1, then the closest number is 1.\n        // If the number of 1 bits is 2, then the closest number is 2.\n        // If the number of 1 bits is 3, then the closest number is 3.\n        // If the number of 1 bits is 4, then the closest number is 4.\n        // If the number of 1 bits is 5, then the closest number is 5.\n        // If the number of 1 bits is 6, then the closest number is 6.\n        // If the number of 1 bits is 7, then the closest number is 7.\n        // If the number of 1 bits is 8, then the closest number is 8.\n        // If the number of 1 bits is 9, then the closest number is 9.\n        // If the number of 1 bits is 10, then the closest number is 10.\n        // If the number of 1 bits is 11, then the closest number is 11.\n        // If the number of 1 bits is 12, then the closest number is 12.\n        // If the number of 1 bits is 13, then the closest number is 13.\n        // If the number of 1 bits is 14, then the closest number is 14.\n        // If the number of 1 bits is 15, then the closest number is 15.\n        // If the number of 1 bits is 16, then the closest number is 16.\n        // If the number of 1 bits is 17, then the closest number is 17.\n        // If the number of 1 bits is 18, then the closest number is 18.\n        // If the number of 1 bits is 19, then the closest number is 19.\n        // If the number of 1 bits is 20, then the closest number is 20.\n        // If the number of 1 bits is 21, then the closest number is 21.\n        // If the number of 1 bits is 22, then the closest number is 22.\n        // If the number of 1 bits is 23, then the closest number is 23.\n        // If the number of 1 bits is 24, then the closest number is 24.\n        // If the number of 1 bits is 25, then the closest number is 25\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123241,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnxyf9v9b.cs(10,24): error CS0161: 'Problem.ClosestNum(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long[] digits = new long[20];\n        int len = 0;\n        while (N > 0) {\n            digits[len++] = N % 10;\n            N /= 10;\n        }\n        for (int i = len - 1; i > 0; i--) {\n            if (digits[i] < digits[i - 1]) {\n                long tmp = digits[i];\n                digits[i] = digits[i - 1];\n                digits[i - 1] = tmp;\n                break;\n            }\n        }\n        long res = 0;\n        for (int i = len - 1; i >= 0; i--) {\n            res = res * 10 + digits[i];\n        }\n        return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5cec024e83974d0a8eb18d9dedd2603d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5cec024e83974d0a8eb18d9dedd2603d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long[] digits = new long[20];\n        int n = 0;\n        while (N > 0) {\n            digits[n++] = N % 10;\n            N /= 10;\n        }\n        for (int i = n - 1; i > 0; i--) {\n            if (digits[i] < digits[i - 1]) {\n                long temp = digits[i];\n                digits[i] = digits[i - 1];\n                digits[i - 1] = temp;\n                break;\n            }\n        }\n        long result = 0;\n        for (int i = n - 1; i >= 0; i--) {\n            result = result * 10 + digits[i];\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123238,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a2da7123316b4b5787bb63bdefeb3f1d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a2da7123316b4b5787bb63bdefeb3f1d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the closest number with the same number of 1 bits in its binary representation.\n        // If there are two such numbers, return the smaller one.\n        // If N is 0, return -1.\n        // If N is a power of 2, return N - 1.\n        // If N is a power of 2 minus 1, return N - 2.\n        // Otherwise, return the number obtained by flipping the rightmost non-trailing zero bit in the binary representation of N.\n        if (N == 0) return -1;\n        if (N == 1) return 0;\n        if ((N & (N - 1)) == 0) return N - 1;\n        if ((N & (N + 1)) == 0) return N - 2;\n        long mask = 1;\n        while ((N & mask) == 0) mask <<= 1;\n        return N ^ (mask | (mask - 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bed0e9c74b04446cadc87f4ad6444746>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Convert to binary\n        var binary = Convert.ToString(N, 2);\n        var length = binary.Length;\n        var index = binary.LastIndexOf('1');\n        var newBinary = binary.Substring(0, index) + \"10\" + new string('1', length - index - 2);\n        return Convert.ToInt64(newBinary, 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Count cannot be less than zero.\nParameter name: count\n  at System.String.Ctor (System.Char c, System.Int32 count) [0x0000d] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.String.CreateString (System.Char c, System.Int32 count) [0x00000] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at (wrapper managed-to-managed) System.String..ctor(char,int)\n  at Problem.ClosestNum (System.Int64 N) [0x00021] in <da688c63f68648588dc5902e09526dab>:0 \n  at Problem.Main (System.String[] args) [0x00001] in <da688c63f68648588dc5902e09526dab>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Count cannot be less than zero.\nParameter name: count\n  at System.String.Ctor (System.Char c, System.Int32 count) [0x0000d] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.String.CreateString (System.Char c, System.Int32 count) [0x00000] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at (wrapper managed-to-managed) System.String..ctor(char,int)\n  at Problem.ClosestNum (System.Int64 N) [0x00021] in <da688c63f68648588dc5902e09526dab>:0 \n  at Problem.Main (System.String[] args) [0x00001] in <da688c63f68648588dc5902e09526dab>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        if (N == 0) return 0;\n        long[] arr = new long[64];\n        long tmp = N;\n        int i = 0;\n        while (tmp > 0) {\n            arr[i] = tmp % 2;\n            tmp /= 2;\n            i++;\n        }\n        int j = i - 1;\n        while (j > 0) {\n            if (arr[j] == 0 && arr[j - 1] == 1) {\n                arr[j] = 1;\n                arr[j - 1] = 0;\n                break;\n            }\n            j--;\n        }\n        long res = 0;\n        for (int k = i - 1; k >= 0; k--) {\n            res = res * 2 + arr[k];\n        }\n        return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <14dcb405e089489a9643722621bd97e7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <14dcb405e089489a9643722621bd97e7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the number of digits in N.\n        long digits = (long)Math.Floor(Math.Log10(N) + 1);\n        // Find the largest power of 10 less than N.\n        long power = (long)Math.Pow(10, digits - 1);\n        // Find the most significant digit of N.\n        long MSD = N / power;\n        // If the most significant digit is 1, we are already at the smallest number.\n        if (MSD == 1) {\n            return -1;\n        }\n        // Otherwise, subtract 1 from the most significant digit.\n        else {\n            return N - MSD * power + (MSD - 1) * power;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2dc1ce00ae5b40e3bd10924005b16737>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2dc1ce00ae5b40e3bd10924005b16737>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the first bit that is 1.\n        int firstOne = 0;\n        while ((N & (1 << firstOne)) == 0) {\n            firstOne++;\n        }\n        // Find the first bit that is 0.\n        int firstZero = firstOne + 1;\n        while ((N & (1 << firstZero)) != 0) {\n            firstZero++;\n        }\n        // Flip the first bit that is 0.\n        N ^= (1 << firstZero);\n        // Clear all bits after the first bit that is 0.\n        N &= ~((1 << firstZero) - 1);\n        // Set the first bit that is 0 to 1.\n        N |= (1 << (firstZero - 1)) - 1;\n        return N;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c8068439975d4244a000ade5eef65cd6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c8068439975d4244a000ade5eef65cd6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long n = N;\n        int i = 0;\n        while (n != 0) {\n            if ((n & 1) == 1) {\n                break;\n            }\n            i++;\n            n >>= 1;\n        }\n        return N - (1 << i);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123242,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <252cdfbe34614a9d991674c2a566c1e7>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Write your code here.\n        var s = N.ToString();\n        var n = s.Length;\n        var i = n - 1;\n        while (i > 0 && s[i - 1] <= s[i]) {\n            i--;\n        }\n        if (i == 0) {\n            return -1;\n        }\n        var j = n - 1;\n        while (s[j] >= s[i - 1]) {\n            j--;\n        }\n        var temp = s[i - 1];\n        s = s.Remove(i - 1, 1);\n        s = s.Insert(i - 1, s[j].ToString());\n        s = s.Remove(j, 1);\n        s = s.Insert(j, temp.ToString());\n        var result = s.Substring(0, i) + new string(s.Substring(i).OrderBy(c => c).ToArray());\n        return long.Parse(result);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123242,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <23ce8733bde6417f890376786750a5bc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <23ce8733bde6417f890376786750a5bc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long[] digits = new long[20];\n        long n = N;\n        int len = 0;\n        while (n > 0) {\n            digits[len++] = n % 10;\n            n /= 10;\n        }\n        for (int i = len - 1; i > 0; i--) {\n            if (digits[i] < digits[i - 1]) {\n                long temp = digits[i];\n                digits[i] = digits[i - 1];\n                digits[i - 1] = temp;\n                break;\n            }\n        }\n        long res = 0;\n        for (int i = 0; i < len; i++) {\n            res = res * 10 + digits[i];\n        }\n        return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123242,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <81e05e32e4a64256b2341e28988f5a25>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <81e05e32e4a64256b2341e28988f5a25>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        var s = N.ToString();\n        var n = s.Length;\n        var i = n - 1;\n        while (i > 0 && s[i] <= s[i - 1]) {\n            i--;\n        }\n        if (i == 0) {\n            return -1;\n        }\n        var j = n - 1;\n        while (s[j] >= s[i - 1]) {\n            j--;\n        }\n        var t = s[i - 1];\n        s = s.Remove(i - 1, 1);\n        s = s.Insert(i - 1, s[j].ToString());\n        s = s.Remove(j, 1);\n        s = s.Insert(j, t.ToString());\n        var r = s.Substring(0, i);\n        var l = s.Substring(i);\n        l = new string(l.Reverse().ToArray());\n        return long.Parse(r + l);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123242,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c34649fa627d4378b1f3c071656def4a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c34649fa627d4378b1f3c071656def4a>:0 \n\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.ClosestNum (System.Int64 N) [0x0005e] in <c34649fa627d4378b1f3c071656def4a>:0 \n  at Problem.Main (System.String[] args) [0x00025] in <c34649fa627d4378b1f3c071656def4a>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeExcep",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Convert to binary\n        string binary = Convert.ToString(N, 2);\n        // Find the first 1 from the right\n        int firstOne = binary.LastIndexOf('1');\n        // Find the first 0 from the right\n        int firstZero = binary.LastIndexOf('0');\n        // If the first 0 is to the left of the first 1, swap them\n        if (firstZero > firstOne) {\n            char[] arr = binary.ToCharArray();\n            arr[firstZero] = '1';\n            arr[firstOne] = '0';\n            binary = new string(arr);\n        }\n        // Convert back to decimal\n        return Convert.ToInt64(binary, 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123242,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7b98314c31324741be2ff63fc95c3c2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7b98314c31324741be2ff63fc95c3c2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        var digits = new List<long>();\n        while (N > 0) {\n            digits.Add(N % 10);\n            N /= 10;\n        }\n        digits.Reverse();\n        for (int i = 1; i < digits.Count; i++) {\n            if (digits[i] < digits[i - 1]) {\n                digits[i] = 9;\n                digits[i - 1]--;\n                for (int j = i + 1; j < digits.Count; j++) {\n                    digits[j] = 9;\n                }\n                break;\n            }\n        }\n        long res = 0;\n        for (int i = 0; i < digits.Count; i++) {\n            res = res * 10 + digits[i];\n        }\n        return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123242,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <feaf937949b640319d4bdea9b2be71fb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <feaf937949b640319d4bdea9b2be71fb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the first non-zero digit.\n        int i = 0;\n        while (N % 10 == 0) {\n            N /= 10;\n            i++;\n        }\n        // Find the first digit that is smaller than the next digit.\n        while (N % 10 <= (N / 10) % 10) {\n            N /= 10;\n            i++;\n        }\n        // Replace the digit with the largest digit smaller than it.\n        N = (N / 10) * 10 + (N % 10) - 1;\n        // Fill the remaining digits with 9.\n        for (int j = 0; j < i; j++) {\n            N = N * 10 + 9;\n        }\n        return N;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123242,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <816ea688c49946f193703a5055ce4ba0>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the highest bit that is set.\n        int highestBit = 0;\n        while (N > 0) {\n            N >>= 1;\n            highestBit++;\n        }\n        // Flip the highest bit.\n        return (1L << (highestBit - 1)) - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123242,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <abb37366803d468889fc694e2125f0ec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <abb37366803d468889fc694e2125f0ec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long[] digits = new long[20];\n        long n = N;\n        int numDigits = 0;\n        while (n > 0) {\n            digits[numDigits++] = n % 10;\n            n /= 10;\n        }\n        for (int i = numDigits - 1; i > 0; i--) {\n            if (digits[i] < digits[i - 1]) {\n                digits[i - 1]--;\n                for (int j = i; j < numDigits; j++) {\n                    digits[j] = 9;\n                }\n            }\n        }\n        long result = 0;\n        for (int i = numDigits - 1; i >= 0; i--) {\n            result = result * 10 + digits[i];\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123242,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0d705562562048bc8249fd690dedbd32>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0d705562562048bc8249fd690dedbd32>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the first non-zero bit\n        int i = 0;\n        while (N % 2 == 0) {\n            N /= 2;\n            i++;\n        }\n        return N / 2 * (long)Math.Pow(2, i + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123242,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e9f2f48fc25b4edca9c4e1c5c91754f0>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        long[] digits = new long[20];\n        int len = 0;\n        while (N > 0) {\n            digits[len++] = N % 10;\n            N /= 10;\n        }\n        for (int i = len - 1; i > 0; i--) {\n            if (digits[i] < digits[i - 1]) {\n                long temp = digits[i];\n                digits[i] = digits[i - 1];\n                digits[i - 1] = temp;\n                break;\n            }\n        }\n        long res = 0;\n        for (int i = len - 1; i >= 0; i--) {\n            res = res * 10 + digits[i];\n        }\n        return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123240,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <991ffef7b4d447a2bc0e28428f8ed7df>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <991ffef7b4d447a2bc0e28428f8ed7df>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        // Find the closest smaller number than n.\n        // If n is even, divide by 2.\n        // If n is odd, subtract 1.\n        // If n is 1, return 0.\n        if (N == 1) return 0;\n        if (N % 2 == 0) return N / 2;\n        return N - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123242,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4222ae3946304ffa8a950da4b37e70a5>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the closest smaller number than n.\n    public static long ClosestNum(long N) {\n        if (N == 0) return 0;\n        if (N == 1) return 0;\n        if (N == 2) return 1;\n        if (N == 3) return 2;\n        if (N == 4) return 3;\n        if (N == 5) return 4;\n        if (N == 6) return 5;\n        if (N == 7) return 6;\n        if (N == 8) return 7;\n        if (N == 9) return 8;\n        if (N == 10) return 9;\n        if (N == 11) return 9;\n        if (N == 12) return 9;\n        if (N == 13) return 9;\n        if (N == 14) return 9;\n        if (N == 15) return 9;\n        if (N == 16) return 9;\n        if (N == 17) return 9;\n        if (N == 18) return 9;\n        if (N == 19) return 9;\n        if (N == 20) return 9;\n        if (N == 21) return 9;\n        if (N == 22) return 9;\n        if (N == 23) return 9;\n        if (N == 24) return 9;\n        if (N == 25) return 9;\n        if (N == 26) return 9;\n        if (N == 27) return 9;\n        if (N == 28) return 9;\n        if (N == 29) return 9;\n        if (N == 30) return 9;\n        if (N == 31) return 9;\n        if (N == 32) return 9;\n        if (N == 33) return 9;\n        if (N == 34) return 9;\n        if (N == 35) return 9;\n        if (N == 36) return 9;\n        if (N == 37) return 9;\n        if (N == 38) return 9;\n        if (N == 39) return 9;\n        if (N == 40) return 9;\n        if (N == 41) return 9;\n        if (N == 42) return 9;\n        if (N == 43) return 9;\n        if (N == 44) return 9;\n        if (N == 45) return 9;\n        if (N ==\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestNum((11L)) == (10L));\n    Debug.Assert(ClosestNum((7L)) == (6L));\n    Debug.Assert(ClosestNum((12L)) == (11L));\n    }\n\n}\n",
      "timestamp": 1666123237,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpc4eiqbqj.cs(57,17): error CS1525: Invalid expression term '}'\n/tmp/tmpc4eiqbqj.cs(57,17): error CS1026: ) expected\n/tmp/tmpc4eiqbqj.cs(57,17): error CS1002: ; expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
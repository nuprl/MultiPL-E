{
  "name": "mbpp_589_perfect_squares",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find perfect squares between two given numbers.\n    public static List<long> PerfectSquares(long a, long b) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_589_perfect_squares.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(PerfectSquares((1L), (30L)).Equals((new List<long>(new long[]{(long)1L, (long)4L, (long)9L, (long)16L, (long)25L}))));\n    Debug.Assert(PerfectSquares((50L), (100L)).Equals((new List<long>(new long[]{(long)64L, (long)81L, (long)100L}))));\n    Debug.Assert(PerfectSquares((100L), (200L)).Equals((new List<long>(new long[]{(long)100L, (long)121L, (long)144L, (long)169L, (long)196L}))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        var result = new List<long>();\n        for (long i = a; i <= b; i++) {\n            if (IsPerfectSquare(i)) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = a; i <= b; i++) {\n            if (IsPerfectSquare(i)) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        for (long i = a; i <= b; i++) {\n            var sqrt = (long)Math.Sqrt(i);\n            if (sqrt * sqrt == i) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = a; i <= b; i++) {\n            if (IsPerfectSquare(i)) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        for (long i = a; i <= b; i++) {\n            if (IsPerfectSquare(i)) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        for (long i = a; i <= b; i++) {\n            var sqrt = (long)Math.Sqrt(i);\n            if (sqrt * sqrt == i) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        for (long i = a; i <= b; i++) {\n            var sqrt = (long)Math.Sqrt(i);\n            if (sqrt * sqrt == i) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        for (long i = a; i <= b; i++) {\n            var sqrt = Math.Sqrt(i);\n            if (sqrt == (long)sqrt) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        for (long i = a; i <= b; i++) {\n            if (IsPerfectSquare(i)) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> squares = new List<long>();\n        for (long i = a; i <= b; i++) {\n            if (IsPerfectSquare(i)) {\n                squares.Add(i);\n            }\n        }\n        return squares;",
    "        List<long> result = new List<long>();\n        for (long i = a; i <= b; i++) {\n            if (IsPerfectSquare(i)) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        for (long i = a; i <= b; i++) {\n            var sqrt = (long)Math.Sqrt(i);\n            if (sqrt * sqrt == i) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        for (long i = a; i <= b; i++) {\n            var sqrt = Math.Sqrt(i);\n            if (sqrt == (int)sqrt) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        for (long i = a; i <= b; i++) {\n            var sqrt = (long)Math.Sqrt(i);\n            if (sqrt * sqrt == i) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = a; i <= b; i++) {\n            if (IsPerfectSquare(i)) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        for (long i = a; i <= b; i++) {\n            if (IsPerfectSquare(i)) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        for (long i = a; i <= b; i++) {\n            var sqrt = (long)Math.Sqrt(i);\n            if (sqrt * sqrt == i) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        for (long i = a; i <= b; i++) {\n            var sqrt = (long)Math.Sqrt(i);\n            if (sqrt * sqrt == i) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        var squares = new List<long>();\n        var sqrtA = (long)Math.Sqrt(a);\n        var sqrtB = (long)Math.Sqrt(b);\n        for (var i = sqrtA; i <= sqrtB; i++) {\n            var sq = i * i;\n            if (sq >= a && sq <= b) {\n                squares.Add(sq);\n            }\n        }\n        return squares;",
    "        List<long> result = new List<long>();\n        for (long i = a; i <= b; i++) {\n            if (IsPerfectSquare(i)) {\n                result.Add(i);\n            }\n        }\n        return result;"
  ]
}
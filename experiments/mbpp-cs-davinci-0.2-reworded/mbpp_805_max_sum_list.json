{
  "name": "mbpp_805_max_sum_list",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that returns the list in a list of lists whose sum of elements is the highest.\n    public static List<long> MaxSumList(List<List<long>> lists) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_805_max_sum_list.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxSumList((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)10L, (long)11L, (long)12L}))));\n    Debug.Assert(MaxSumList((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)3L, (long)2L, (long)1L}), (List<long>)new List<long>(new long[]{(long)6L, (long)5L, (long)4L}), (List<long>)new List<long>(new long[]{(long)12L, (long)11L, (long)10L})}))).Equals((new List<long>(new long[]{(long)12L, (long)11L, (long)10L}))));\n    Debug.Assert(MaxSumList((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)2L, (long)3L, (long)1L})}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)1L}))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        // Your code here.\n        return null;",
    "        // Your code here\n        return new List<long>();",
    "        // TODO: Implement this function\n        return null;",
    "        // Your code here.\n        return new List<long>();",
    "        var max = lists.Max(l => l.Sum());\n        return lists.First(l => l.Sum() == max);",
    "        List<long> maxList = new List<long>();\n        long maxSum = 0;\n        foreach (List<long> list in lists) {\n            long sum = 0;\n            foreach (long num in list) {\n                sum += num;\n            }\n            if (sum > maxSum) {\n                maxSum = sum;\n                maxList = list;\n            }\n        }\n        return maxList;",
    "        List<long> maxList = new List<long>();\n        long maxSum = 0;\n        foreach (List<long> list in lists) {\n            long sum = 0;\n            foreach (long num in list) {\n                sum += num;\n            }\n            if (sum > maxSum) {\n                maxSum = sum;\n                maxList = list;\n            }\n        }\n        return maxList;",
    "        // Your code here\n        return null;",
    "        // Write your code here\n        return null;",
    "        // TODO: Implement this function\n        return null;",
    "        List<long> max = new List<long>();\n        long maxSum = 0;\n        foreach (List<long> list in lists) {\n            long sum = 0;\n            foreach (long num in list) {\n                sum += num;\n            }\n            if (sum > maxSum) {\n                maxSum = sum;\n                max = list;\n            }\n        }\n        return max;",
    "        // TODO: Implement this function.\n        return null;",
    "        // Your code here\n        return null;",
    "        // Your code here\n        return null;",
    "        long maxSum = 0;\n        List<long> maxList = new List<long>();\n        foreach (List<long> list in lists) {\n            long sum = 0;\n            foreach (long num in list) {\n                sum += num;\n            }\n            if (sum > maxSum) {\n                maxSum = sum;\n                maxList = list;\n            }\n        }\n        return maxList;",
    "        // Your code here\n        return lists.Aggregate((l1, l2) => l1.Sum() > l2.Sum() ? l1 : l2);",
    "        // Your code here\n        return lists.Aggregate((x, y) => x.Sum() > y.Sum() ? x : y);",
    "        // Your code here\n        return null;",
    "        // Your code here.\n        return null;",
    "        // TODO: Implement this function\n        return null;",
    "        // Your code here.",
    "        // Your code goes here.\n        return null;",
    "        // Your code here\n        return null;",
    "        return lists.OrderByDescending(x => x.Sum()).First();",
    "        // Your code here\n        return null;",
    "        // Your code here\n        return null;",
    "        long max = 0;\n        List<long> maxList = new List<long>();\n        foreach (List<long> list in lists) {\n            long sum = 0;\n            foreach (long num in list) {\n                sum += num;\n            }\n            if (sum > max) {\n                max = sum;\n                maxList = list;\n            }\n        }\n        return maxList;",
    "        // Your code here\n        return new List<long>();",
    "        // TODO\n        return null;",
    "        long maxSum = 0;\n        List<long> maxList = new List<long>();\n        foreach (List<long> list in lists) {\n            long sum = 0;\n            foreach (long item in list) {\n                sum += item;\n            }\n            if (sum > maxSum) {\n                maxSum = sum;\n                maxList = list;\n            }\n        }\n        return maxList;",
    "        // Your code here.\n        return null;",
    "        // TODO: Implement this function\n        return null;",
    "        // Your code here.\n        return null;",
    "        // TODO: Implement this function\n        return null;",
    "        // TODO: Implement this function.\n        return null;",
    "        // TODO: Implement me!\n        return null;",
    "        long maxSum = 0;\n        List<long> maxList = new List<long>();\n        foreach (List<long> list in lists) {\n            long sum = 0;\n            foreach (long num in list) {\n                sum += num;\n            }\n            if (sum > maxSum) {\n                maxSum = sum;\n                maxList = list;\n            }\n        }\n        return maxList;",
    "        // TODO: Implement me\n        return null;",
    "        // Your code here\n        return null;",
    "        // Your code here\n        return null;",
    "        // TODO: Implement this function.\n        return null;",
    "        // TODO: Implement this function.\n        return null;",
    "        // Your code here!\n        return null;",
    "        List<long> maxList = new List<long>();\n        long maxSum = 0;\n        foreach (List<long> list in lists) {\n            long sum = 0;\n            foreach (long num in list) {\n                sum += num;\n            }\n            if (sum > maxSum) {\n                maxSum = sum;\n                maxList = list;\n            }\n        }\n        return maxList;",
    "        // Your code here\n        return null;",
    "        long maxSum = 0;\n        List<long> maxList = new List<long>();\n        foreach (List<long> list in lists) {\n            long sum = 0;\n            foreach (long num in list) {\n                sum += num;\n            }\n            if (sum > maxSum) {\n                maxSum = sum;\n                maxList = list;\n            }\n        }\n        return maxList;",
    "        // Your code goes here.\n        return null;",
    "        // Your code here\n        return null;",
    "        // Your code goes here.\n        return new List<long>();",
    "        // TODO: Implement this function\n        return null;",
    "        // TODO: Implement me\n        return null;",
    "        // Write your code here\n        return new List<long>();",
    "        long max = 0;\n        List<long> maxList = null;\n        foreach (List<long> list in lists) {\n            long sum = 0;\n            foreach (long num in list) {\n                sum += num;\n            }\n            if (sum > max) {\n                max = sum;\n                maxList = list;\n            }\n        }\n        return maxList;",
    "        // TODO: Implement this function\n        return null;",
    "        // TODO: Implement this function\n        return null;",
    "        // Your code here.",
    "        // TODO: Implement this function\n        return null;",
    "        // TODO: Implement this function.\n        return null;",
    "        long max = 0;\n        List<long> maxList = new List<long>();\n        foreach (List<long> list in lists) {\n            long sum = 0;\n            foreach (long num in list) {\n                sum += num;\n            }\n            if (sum > max) {\n                max = sum;\n                maxList = list;\n            }\n        }\n        return maxList;",
    "        // Your code here\n        return null;",
    "        long max = 0;\n        List<long> maxList = new List<long>();\n        foreach(List<long> list in lists) {\n            long sum = 0;\n            foreach(long num in list) {\n                sum += num;\n            }\n            if(sum > max) {\n                max = sum;\n                maxList = list;\n            }\n        }\n        return maxList;",
    "        // Your code here\n        return null;",
    "        long maxSum = 0;\n        List<long> maxList = null;\n        foreach (var list in lists) {\n            long sum = 0;\n            foreach (var item in list) {\n                sum += item;\n            }\n            if (sum > maxSum) {\n                maxSum = sum;\n                maxList = list;\n            }\n        }\n        return maxList;",
    "        // TODO: Implement me\n        return null;",
    "        // TODO: Implement this function.\n        return null;",
    "        // TODO: Implement this function.\n        return null;",
    "        // Your code here\n        return new List<long>();",
    "        var max = 0L;\n        var maxList = new List<long>();\n        foreach (var list in lists) {\n            var sum = list.Sum();\n            if (sum > max) {\n                max = sum;\n                maxList = list;\n            }\n        }\n        return maxList;",
    "        // TODO: Implement this function\n        return null;",
    "        List<long> maxList = new List<long>();\n        long maxSum = 0;\n        foreach (List<long> list in lists) {\n            long sum = 0;\n            foreach (long num in list) {\n                sum += num;\n            }\n            if (sum > maxSum) {\n                maxSum = sum;\n                maxList = list;\n            }\n        }\n        return maxList;",
    "        // Your code here\n        return null;",
    "        // Your code goes here.\n        return null;",
    "        // Your code here\n        return null;",
    "        List<long> max = new List<long>();\n        long maxSum = 0;\n        foreach (List<long> list in lists) {\n            long sum = 0;\n            foreach (long num in list) {\n                sum += num;\n            }\n            if (sum > maxSum) {\n                maxSum = sum;\n                max = list;\n            }\n        }\n        return max;",
    "        // Your code goes here.\n        return null;",
    "        // Your code here\n        return null;",
    "        // Your code goes here.\n        return null;",
    "        List<long> maxList = new List<long>();\n        long maxSum = 0;\n        foreach (List<long> list in lists) {\n            long sum = 0;\n            foreach (long num in list) {\n                sum += num;\n            }\n            if (sum > maxSum) {\n                maxSum = sum;\n                maxList = list;\n            }\n        }\n        return maxList;",
    "        // Your code here.\n        return null;",
    "        // TODO\n        return null;",
    "        // Your code here.\n        return null;",
    "        // Your code here\n        return null;",
    "        // Your code here\n        return null;",
    "        // Your code here\n        return new List<long>();",
    "        // Fill in your code here\n        return null;",
    "        // Your code here\n        return lists.OrderByDescending(x => x.Sum()).First();",
    "        List<long> maxList = new List<long>();\n        long maxSum = 0;\n        foreach (List<long> list in lists) {\n            long sum = 0;\n            foreach (long num in list) {\n                sum += num;\n            }\n            if (sum > maxSum) {\n                maxSum = sum;\n                maxList = list;\n            }\n        }\n        return maxList;",
    "        // Your code goes here.\n        return lists.OrderByDescending(x => x.Sum()).First();",
    "        List<long> maxList = new List<long>();\n        long maxSum = 0;\n        foreach (List<long> list in lists) {\n            long sum = 0;\n            foreach (long num in list) {\n                sum += num;\n            }\n            if (sum > maxSum) {\n                maxSum = sum;\n                maxList = list;\n            }\n        }\n        return maxList;",
    "        var maxSum = 0L;\n        var maxList = new List<long>();\n        foreach (var list in lists) {\n            var sum = list.Sum();\n            if (sum > maxSum) {\n                maxSum = sum;\n                maxList = list;\n            }\n        }\n        return maxList;",
    "        long max = 0;\n        List<long> maxList = new List<long>();\n        foreach (List<long> list in lists) {\n            long sum = 0;\n            foreach (long num in list) {\n                sum += num;\n            }\n            if (sum > max) {\n                max = sum;\n                maxList = list;\n            }\n        }\n        return maxList;",
    "        // TODO: Implement this function.\n        // Hint: You can use the MaxBy function to find the list with the highest sum.\n        return lists.MaxBy(list => list.Sum());",
    "        List<long> maxList = new List<long>();\n        long maxSum = 0;\n        foreach (List<long> list in lists) {\n            long sum = 0;\n            foreach (long num in list) {\n                sum += num;\n            }\n            if (sum > maxSum) {\n                maxSum = sum;\n                maxList = list;\n            }\n        }\n        return maxList;",
    "        // Your code here.\n        return null;",
    "        // Your code goes here\n        return null;",
    "        // Your code here.\n        return lists.Aggregate((l1, l2) => l1.Sum() > l2.Sum() ? l1 : l2);",
    "        // Your code here\n        return null;",
    "        return lists.Aggregate((a, b) => a.Sum() > b.Sum() ? a : b);",
    "        // Your code here.\n        return null;",
    "        // Your code here\n        return null;",
    "        // Your code here\n        return null;",
    "        // Your code here\n        return null;",
    "        long maxSum = 0;\n        List<long> maxList = new List<long>();\n        foreach (List<long> list in lists) {\n            long sum = 0;\n            foreach (long num in list) {\n                sum += num;\n            }\n            if (sum > maxSum) {\n                maxSum = sum;\n                maxList = list;\n            }\n        }\n        return maxList;",
    "        List<long> maxList = new List<long>();\n        long maxSum = 0;\n        foreach (List<long> list in lists) {\n            long sum = 0;\n            foreach (long num in list) {\n                sum += num;\n            }\n            if (sum > maxSum) {\n                maxSum = sum;\n                maxList = list;\n            }\n        }\n        return maxList;",
    "        long maxSum = 0;\n        List<long> maxList = new List<long>();\n        foreach (List<long> list in lists) {\n            long sum = 0;\n            foreach (long num in list) {\n                sum += num;\n            }\n            if (sum > maxSum) {\n                maxSum = sum;\n                maxList = list;\n            }\n        }\n        return maxList;",
    "        // Your code here.\n        return null;",
    "        // Your code here\n        return lists.OrderByDescending(x => x.Sum()).First();",
    "        long maxSum = 0;\n        List<long> maxList = new List<long>();\n        foreach (List<long> list in lists) {\n            long sum = 0;\n            foreach (long num in list) {\n                sum += num;\n            }\n            if (sum > maxSum) {\n                maxSum = sum;\n                maxList = list;\n            }\n        }\n        return maxList;",
    "        // Your code here\n        return new List<long>();",
    "        // Your code here.\n        return null;",
    "        // Your code goes here.\n        return null;",
    "        // Your code goes here.\n        return new List<long>();",
    "        List<long> maxList = new List<long>();\n        long maxSum = 0;\n        foreach (List<long> list in lists) {\n            long sum = 0;\n            foreach (long num in list) {\n                sum += num;\n            }\n            if (sum > maxSum) {\n                maxSum = sum;\n                maxList = list;\n            }\n        }\n        return maxList;",
    "        // Your code here\n        return null;",
    "        long max = 0;\n        List<long> maxList = null;\n        foreach (List<long> list in lists) {\n            long sum = 0;\n            foreach (long element in list) {\n                sum += element;\n            }\n            if (sum > max) {\n                max = sum;\n                maxList = list;\n            }\n        }\n        return maxList;",
    "        long maxSum = 0;\n        List<long> maxList = new List<long>();\n        foreach (List<long> list in lists) {\n            long sum = 0;\n            foreach (long num in list) {\n                sum += num;\n            }\n            if (sum > maxSum) {\n                maxSum = sum;\n                maxList = list;\n            }\n        }\n        return maxList;",
    "        long maxSum = 0;\n        List<long> maxList = new List<long>();\n        foreach (List<long> list in lists) {\n            long sum = 0;\n            foreach (long num in list) {\n                sum += num;\n            }\n            if (sum > maxSum) {\n                maxSum = sum;\n                maxList = list;\n            }\n        }\n        return maxList;",
    "        List<long> maxList = new List<long>();\n        long maxSum = 0;\n        foreach (List<long> list in lists) {\n            long sum = 0;\n            foreach (long num in list) {\n                sum += num;\n            }\n            if (sum > maxSum) {\n                maxSum = sum;\n                maxList = list;\n            }\n        }\n        return maxList;",
    "        List<long> maxList = new List<long>();\n        long maxSum = 0;\n        foreach (List<long> list in lists) {\n            long sum = 0;\n            foreach (long num in list) {\n                sum += num;\n            }\n            if (sum > maxSum) {\n                maxSum = sum;\n                maxList = list;\n            }\n        }\n        return maxList;",
    "        // Your code here.\n        return new List<long>();",
    "        List<long> maxList = new List<long>();\n        long maxSum = 0;\n        foreach (List<long> list in lists) {\n            long sum = 0;\n            foreach (long num in list) {\n                sum += num;\n            }\n            if (sum > maxSum) {\n                maxSum = sum;\n                maxList = list;\n            }\n        }\n        return maxList;",
    "        // Your code here\n        return null;",
    "        // TODO: Implement me\n        return null;",
    "        List<long> maxList = new List<long>();\n        long maxSum = 0;\n        foreach (List<long> list in lists) {\n            long sum = 0;\n            foreach (long num in list) {\n                sum += num;\n            }\n            if (sum > maxSum) {\n                maxSum = sum;\n                maxList = list;\n            }\n        }\n        return maxList;",
    "        long max = 0;\n        List<long> maxList = new List<long>();\n        foreach (List<long> list in lists) {\n            long sum = 0;\n            foreach (long num in list) {\n                sum += num;\n            }\n            if (sum > max) {\n                max = sum;\n                maxList = list;\n            }\n        }\n        return maxList;",
    "        // Your code here\n        return null;",
    "        // Your code here\n        return new List<long>();",
    "        // Your code here\n        return null;",
    "        // Your code here\n        return null;",
    "        // Your code here.\n        return null;",
    "        long maxSum = 0;\n        List<long> maxList = new List<long>();\n        foreach (List<long> list in lists) {\n            long sum = 0;\n            foreach (long num in list) {\n                sum += num;\n            }\n            if (sum > maxSum) {\n                maxSum = sum;\n                maxList = list;\n            }\n        }\n        return maxList;",
    "        // Your code here",
    "        long maxSum = 0;\n        List<long> maxList = new List<long>();\n        foreach (List<long> list in lists) {\n            long sum = 0;\n            foreach (long num in list) {\n                sum += num;\n            }\n            if (sum > maxSum) {\n                maxSum = sum;\n                maxList = list;\n            }\n        }\n        return maxList;",
    "        // TODO: Implement this function\n        return null;",
    "        // Your code here.\n        return new List<long>();",
    "        // Your code here\n        return null;",
    "        long max = 0;\n        List<long> maxList = new List<long>();\n        foreach (List<long> list in lists) {\n            long sum = 0;\n            foreach (long num in list) {\n                sum += num;\n            }\n            if (sum > max) {\n                max = sum;\n                maxList = list;\n            }\n        }\n        return maxList;",
    "        List<long> maxList = new List<long>();\n        long maxSum = 0;\n        foreach (List<long> list in lists) {\n            long sum = 0;\n            foreach (long num in list) {\n                sum += num;\n            }\n            if (sum > maxSum) {\n                maxSum = sum;\n                maxList = list;\n            }\n        }\n        return maxList;",
    "        // TODO: Implement me\n        return null;",
    "        // Your code here\n        return null;",
    "        // TODO: Implement this function\n        return null;",
    "        // Your code here\n        return null;",
    "        long max = 0;\n        List<long> maxList = new List<long>();\n        foreach(List<long> list in lists) {\n            long sum = 0;\n            foreach(long num in list) {\n                sum += num;\n            }\n            if(sum > max) {\n                max = sum;\n                maxList = list;\n            }\n        }\n        return maxList;",
    "        // TODO: Implement this function.\n        return null;",
    "        // TODO: Implement this function.\n        return null;",
    "        // Your code here\n        return null;",
    "        // TODO: Implement this function.\n        return null;",
    "        // Your code here\n        return null;",
    "        List<long> maxList = new List<long>();\n        long maxSum = 0;\n        foreach (List<long> list in lists) {\n            long sum = 0;\n            foreach (long num in list) {\n                sum += num;\n            }\n            if (sum > maxSum) {\n                maxSum = sum;\n                maxList = list;\n            }\n        }\n        return maxList;",
    "        // Your code here\n        return null;",
    "        List<long> maxSumList = new List<long>();\n        long maxSum = 0;\n        foreach (List<long> list in lists) {\n            long sum = 0;\n            foreach (long element in list) {\n                sum += element;\n            }\n            if (sum > maxSum) {\n                maxSum = sum;\n                maxSumList = list;\n            }\n        }\n        return maxSumList;",
    "        // Your code here.\n        return null;",
    "        long maxSum = 0;\n        List<long> maxList = new List<long>();\n        foreach (List<long> list in lists) {\n            long sum = 0;\n            foreach (long element in list) {\n                sum += element;\n            }\n            if (sum > maxSum) {\n                maxSum = sum;\n                maxList = list;\n            }\n        }\n        return maxList;",
    "        List<long> maxList = new List<long>();\n        long maxSum = 0;\n        foreach (List<long> list in lists) {\n            long sum = 0;\n            foreach (long num in list) {\n                sum += num;\n            }\n            if (sum > maxSum) {\n                maxSum = sum;\n                maxList = list;\n            }\n        }\n        return maxList;",
    "        long maxSum = 0;\n        List<long> maxList = new List<long>();\n        foreach (List<long> list in lists) {\n            long sum = 0;\n            foreach (long number in list) {\n                sum += number;\n            }\n            if (sum > maxSum) {\n                maxSum = sum;\n                maxList = list;\n            }\n        }\n        return maxList;",
    "        long maxSum = 0;\n        List<long> maxList = new List<long>();\n        foreach (List<long> list in lists) {\n            long sum = 0;\n            foreach (long item in list) {\n                sum += item;\n            }\n            if (sum > maxSum) {\n                maxSum = sum;\n                maxList = list;\n            }\n        }\n        return maxList;",
    "        List<long> max = new List<long>();\n        long maxSum = 0;\n        foreach (List<long> list in lists) {\n            long sum = 0;\n            foreach (long element in list) {\n                sum += element;\n            }\n            if (sum > maxSum) {\n                max = list;\n                maxSum = sum;\n            }\n        }\n        return max;",
    "        // Your code here\n        return null;",
    "        long max = 0;\n        List<long> maxList = new List<long>();\n        foreach (List<long> list in lists) {\n            long sum = 0;\n            foreach (long i in list) {\n                sum += i;\n            }\n            if (sum > max) {\n                max = sum;\n                maxList = list;\n            }\n        }\n        return maxList;",
    "        List<long> maxList = new List<long>();\n        long maxSum = 0;\n        foreach (List<long> list in lists) {\n            long sum = 0;\n            foreach (long num in list) {\n                sum += num;\n            }\n            if (sum > maxSum) {\n                maxList = list;\n                maxSum = sum;\n            }\n        }\n        return maxList;",
    "        // Your code here\n        return null;",
    "        // Your code here.\n        return null;",
    "        // TODO: Implement me\n        return new List<long>();",
    "        // Your code goes here.\n        return null;",
    "        // Your code here\n        return null;",
    "        // Your code here\n        return null;",
    "        // Your code here\n        return null;",
    "        // Your code here\n        return null;",
    "        // Write your code here\n        return null;",
    "        // Your code here\n        return null;",
    "        long maxSum = 0;\n        List<long> maxList = new List<long>();\n        foreach (List<long> list in lists) {\n            long sum = 0;\n            foreach (long num in list) {\n                sum += num;\n            }\n            if (sum > maxSum) {\n                maxSum = sum;\n                maxList = list;\n            }\n        }\n        return maxList;",
    "        // Your code goes here.\n        return null;",
    "        long max = 0;\n        List<long> maxList = new List<long>();\n        foreach (List<long> list in lists) {\n            long sum = 0;\n            foreach (long num in list) {\n                sum += num;\n            }\n            if (sum > max) {\n                max = sum;\n                maxList = list;\n            }\n        }\n        return maxList;",
    "        // TODO: Implement this function\n        return null;",
    "        // Your code here\n        return null;",
    "        // Your code here.\n        return null;",
    "        // Your code here\n        return null;",
    "        // Your code here\n        return null;",
    "        // Your code goes here.\n        return null;",
    "        // TODO: Implement this function.\n        long max = 0;\n        List<long> maxList = new List<long>();\n        foreach (List<long> list in lists) {\n            long sum = 0;\n            foreach (long num in list) {\n                sum += num;\n            }\n            if (sum > max) {\n                max = sum;\n                maxList = list;\n            }\n        }\n        return maxList;",
    "        // Your code here\n        return null;",
    "        // Your code goes here.\n        return null;",
    "        // Your code here.\n        return null;",
    "        // Your code here.",
    "        // Your code here\n        return null;",
    "        // Your code here\n        return new List<long>();",
    "        // Your code here.\n        return null;",
    "        // TODO\n        return null;",
    "        // Your code here\n        return new List<long>();",
    "        List<long> maxList = new List<long>();\n        long maxSum = 0;\n        foreach (List<long> list in lists) {\n            long sum = 0;\n            foreach (long num in list) {\n                sum += num;\n            }\n            if (sum > maxSum) {\n                maxSum = sum;\n                maxList = list;\n            }\n        }\n        return maxList;",
    "        List<long> maxList = new List<long>();\n        long maxSum = 0;\n        foreach (List<long> list in lists) {\n            long sum = 0;\n            foreach (long num in list) {\n                sum += num;\n            }\n            if (sum > maxSum) {\n                maxSum = sum;\n                maxList = list;\n            }\n        }\n        return maxList;",
    "        // Your code here\n        return new List<long>();",
    "        // Your code here\n        return new List<long>();",
    "        // Your code here\n        return null;",
    "        // Your code here\n        return new List<long>();",
    "        // Your code goes here.\n        return null;",
    "        var maxSum = 0L;\n        var maxList = new List<long>();\n        foreach (var list in lists) {\n            var sum = list.Sum();\n            if (sum > maxSum) {\n                maxSum = sum;\n                maxList = list;\n            }\n        }\n        return maxList;",
    "        // TODO\n        return null;",
    "        // Your code here\n        return new List<long>();",
    "        // Your code here\n        return null;"
  ]
}
{
  "name": "mbpp_407_rearrange_bigger",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_407_rearrange_bigger.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to string\n        string s = n.ToString();\n        // Convert to char array\n        char[] c = s.ToCharArray();\n        // Sort the array\n        Array.Sort(c);\n        // Convert back to string\n        string sorted = new string(c);\n        // Convert back to long\n        long sortedLong = long.Parse(sorted);\n        // Check if the number is already the biggest\n        if (sortedLong == n) {\n            return -1;\n        }\n        // Find the next biggest number\n        long nextBiggest = sortedLong;\n        while (nextBiggest <= n) {\n            nextBiggest++;\n        }\n        // Return the next biggest number\n        return nextBiggest;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpfwjp6902.cs(34,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpfwjp6902.cs(35,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpfwjp6902.cs(36,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var len = digits.Length;\n        var i = len - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) i--;\n        if (i == 0) return -1;\n        var j = len - 1;\n        while (digits[j] <= digits[i - 1]) j--;\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = len - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp4wnxho0a.cs(32,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp4wnxho0a.cs(33,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp4wnxho0a.cs(34,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var len = digits.Length;\n        var i = len - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        var j = len - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = len - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1pct5zdt.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp1pct5zdt.cs(39,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp1pct5zdt.cs(40,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to string\n        string s = n.ToString();\n        // Convert to char array\n        char[] c = s.ToCharArray();\n        // Sort in descending order\n        Array.Sort(c);\n        Array.Reverse(c);\n        // Convert to string\n        string r = new string(c);\n        // Convert to long\n        long l = long.Parse(r);\n        // Return\n        return l;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpl288rxrt.cs(26,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpl288rxrt.cs(27,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpl288rxrt.cs(28,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        var j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpsfdahpaa.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to char array\n        char[] digits = n.ToString().ToCharArray();\n        // Find the pivot\n        int pivot = -1;\n        for (int i = digits.Length - 1; i > 0; i--) {\n            if (digits[i] > digits[i - 1]) {\n                pivot = i - 1;\n                break;\n            }\n        }\n        // If no pivot found, return -1\n        if (pivot == -1) {\n            return -1;\n        }\n        // Find the rightmost successor to the pivot\n        int successor = 0;\n        for (int i = digits.Length - 1; i > pivot; i--) {\n            if (digits[i] > digits[pivot]) {\n                successor = i;\n                break;\n            }\n        }\n        // Swap the pivot with its successor\n        char temp = digits[pivot];\n        digits[pivot] = digits[successor];\n        digits[successor] = temp;\n        // Sort the suffix in ascending order\n        Array.Sort(digits, pivot + 1, digits.Length - pivot - 1);\n        // Convert to long\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmphmhhtl1r.cs(43,49): error CS1525: Invalid expression term 'object'\n/tmp/tmphmhhtl1r.cs(44,49): error CS1525: Invalid expression term 'object'\n/tmp/tmphmhhtl1r.cs(45,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        var j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpsfdahpaa.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        var j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpsfdahpaa.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) i--;\n        if (i == 0) return -1;\n        var j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) j--;\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnn79xtdz.cs(31,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpnn79xtdz.cs(32,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpnn79xtdz.cs(33,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // convert to string\n        string s = n.ToString();\n        // convert to list of chars\n        List<char> l = s.ToList();\n        // find the first decreasing digit\n        int i = l.Count - 1;\n        while (i > 0 && l[i - 1] >= l[i]) {\n            i--;\n        }\n        // if i is 0, then there is no bigger number\n        if (i <= 0) {\n            return -1;\n        }\n        // find the smallest digit to the right of i that is greater than l[i - 1]\n        int j = l.Count - 1;\n        while (l[j] <= l[i - 1]) {\n            j--;\n        }\n        // swap l[i - 1] and l[j]\n        char temp = l[i - 1];\n        l[i - 1] = l[j];\n        l[j] = temp;\n        // reverse the digits from i to the end\n        j = l.Count - 1;\n        while (i < j) {\n            temp = l[i];\n            l[i] = l[j];\n            l[j] = temp;\n            i++;\n            j--;\n        }\n        // convert back to string and return\n        return long.Parse(new string(l.ToArray()));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp94nojqgq.cs(46,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp94nojqgq.cs(47,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp94nojqgq.cs(48,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to string\n        string s = n.ToString();\n        // Find the first digit that is smaller than the digit to its right\n        int i = s.Length - 1;\n        while (i > 0 && s[i - 1] >= s[i]) i--;\n        if (i == 0) return -1;\n        // Find the smallest digit to the right of i that is larger than s[i - 1]\n        int j = s.Length - 1;\n        while (s[j] <= s[i - 1]) j--;\n        // Swap s[i - 1] and s[j]\n        char temp = s[i - 1];\n        s = s.Remove(i - 1, 1);\n        s = s.Insert(i - 1, s[j].ToString());\n        s = s.Remove(j, 1);\n        s = s.Insert(j, temp.ToString());\n        // Reverse the digits to the right of i\n        string right = s.Substring(i);\n        char[] charArray = right.ToCharArray();\n        Array.Reverse(charArray);\n        right = new string(charArray);\n        s = s.Remove(i);\n        s = s.Insert(i, right);\n        return long.Parse(s);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp0zhsxqt_.cs(36,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp0zhsxqt_.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp0zhsxqt_.cs(38,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i])\n            i--;\n        if (i <= 0)\n            return -1;\n        var j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1])\n            j--;\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkd2hnvod.cs(34,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpkd2hnvod.cs(35,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpkd2hnvod.cs(36,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        if (n < 10) return -1;\n        var digits = n.ToString().Select(c => c - '0').ToArray();\n        var i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) i--;\n        if (i == 0) return -1;\n        var j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) j--;\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        Array.Reverse(digits, i, digits.Length - i);\n        return long.Parse(new string(digits.Select(d => (char)(d + '0')).ToArray()));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpf4i703iy.cs(25,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpf4i703iy.cs(26,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpf4i703iy.cs(27,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // find the first digit that is smaller than the next digit\n        var digits = n.ToString().ToCharArray();\n        int i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i == 0) {\n            return -1;\n        }\n        // find the smallest digit that is larger than the digit at i - 1\n        int j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        // swap the digits at i - 1 and j\n        char tmp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = tmp;\n        // reverse the digits from i to the end\n        Array.Reverse(digits, i, digits.Length - i);\n        return new string(digits);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdjjmi46e.cs(34,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpdjjmi46e.cs(35,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpdjjmi46e.cs(36,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var index = -1;\n        for (var i = digits.Length - 1; i > 0; i--) {\n            if (digits[i - 1] < digits[i]) {\n                index = i - 1;\n                break;\n            }\n        }\n        if (index == -1) {\n            return -1;\n        }\n        var smallest = index + 1;\n        for (var i = index + 2; i < digits.Length; i++) {\n            if (digits[i] > digits[index] && digits[i] <= digits[smallest]) {\n                smallest = i;\n            }\n        }\n        var temp = digits[index];\n        digits[index] = digits[smallest];\n        digits[smallest] = temp;\n        Array.Sort(digits, index + 1, digits.Length - index - 1);\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8_gg5_y5.cs(35,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp8_gg5_y5.cs(36,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp8_gg5_y5.cs(37,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var len = digits.Length;\n        var i = len - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) i--;\n        if (i <= 0) return -1;\n        var j = len - 1;\n        while (digits[j] <= digits[i - 1]) j--;\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = len - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpyy6zgp4x.cs(32,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpyy6zgp4x.cs(33,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpyy6zgp4x.cs(34,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        if (n < 10) return -1;\n        var digits = new List<int>();\n        while (n > 0) {\n            digits.Add((int)(n % 10));\n            n /= 10;\n        }\n        digits.Reverse();\n        var index = digits.Count - 2;\n        while (index >= 0 && digits[index] >= digits[index + 1]) index--;\n        if (index < 0) return -1;\n        var smallest = index + 1;\n        for (int i = index + 2; i < digits.Count; i++) {\n            if (digits[i] < digits[smallest] && digits[i] > digits[index]) smallest = i;\n        }\n        var temp = digits[index];\n        digits[index] = digits[smallest];\n        digits[smallest] = temp;\n        digits.Sort(index + 1, digits.Count - index - 1, Comparer<int>.Create((x, y) => y.CompareTo(x)));\n        var result = 0L;\n        foreach (var d in digits) result = result * 10 + d;\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbswlg33j.cs(34,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpbswlg33j.cs(35,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpbswlg33j.cs(36,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        var j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return BigInteger.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa137clsj.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpa137clsj.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpa137clsj.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        int i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        int j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return new string(digits);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpg68xzlrc.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpg68xzlrc.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpg68xzlrc.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to char array\n        char[] digits = n.ToString().ToCharArray();\n        // Find the first digit that is smaller than the digit to its right\n        int i = digits.Length - 2;\n        while (i >= 0 && digits[i] >= digits[i + 1]) {\n            i--;\n        }\n        // If no such digit exists, the number is the largest possible\n        if (i < 0) {\n            return -1;\n        }\n        // Find the smallest digit to the right of i that is larger than digits[i]\n        int j = digits.Length - 1;\n        while (digits[j] <= digits[i]) {\n            j--;\n        }\n        // Swap digits[i] and digits[j]\n        char temp = digits[i];\n        digits[i] = digits[j];\n        digits[j] = temp;\n        // Reverse the digits to the right of i\n        Array.Reverse(digits, i + 1, digits.Length - i - 1);\n        // Convert back to long\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpfsj3hdpy.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpfsj3hdpy.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpfsj3hdpy.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var index = digits.Length - 2;\n        while (index >= 0 && digits[index] >= digits[index + 1]) {\n            index--;\n        }\n        if (index < 0) {\n            return -1;\n        }\n        var smallestIndex = index + 1;\n        for (int i = index + 2; i < digits.Length; i++) {\n            if (digits[i] > digits[index] && digits[i] <= digits[smallestIndex]) {\n                smallestIndex = i;\n            }\n        }\n        var temp = digits[index];\n        digits[index] = digits[smallestIndex];\n        digits[smallestIndex] = temp;\n        Array.Sort(digits, index + 1, digits.Length - index - 1);\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122854,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpv38puply.cs(32,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpv38puply.cs(33,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpv38puply.cs(34,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to string\n        string s = n.ToString();\n        // Find the first index where the digit is less than the digit to the right\n        int i = s.Length - 1;\n        while (i > 0 && s[i - 1] >= s[i]) {\n            i--;\n        }\n        // If i == 0, then the number is in descending order, so there is no bigger number\n        if (i == 0) {\n            return -1;\n        }\n        // Find the smallest digit to the right of i that is greater than s[i - 1]\n        int j = s.Length - 1;\n        while (s[j] <= s[i - 1]) {\n            j--;\n        }\n        // Swap s[i - 1] and s[j]\n        char temp = s[i - 1];\n        s = s.Remove(i - 1, 1);\n        s = s.Insert(i - 1, s[j].ToString());\n        s = s.Remove(j, 1);\n        s = s.Insert(j, temp.ToString());\n        // Reverse the digits from i to the end\n        string reversed = new string(s.Substring(i).Reverse().ToArray());\n        s = s.Remove(i);\n        s = s.Insert(i, reversed);\n        // Convert back to long\n        return long.Parse(s);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122854,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1yz09b4y.cs(41,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp1yz09b4y.cs(42,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp1yz09b4y.cs(43,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to string\n        string s = n.ToString();\n        // Find the first digit that is smaller than the digit to the right of it\n        for (int i = s.Length - 2; i >= 0; i--) {\n            if (s[i] < s[i + 1]) {\n                // Find the smallest digit to the right of i that is larger than s[i]\n                int j = s.Length - 1;\n                while (s[j] <= s[i]) {\n                    j--;\n                }\n                // Swap s[i] and s[j]\n                char temp = s[i];\n                s[i] = s[j];\n                s[j] = temp;\n                // Reverse the digits to the right of i\n                int k = i + 1;\n                int l = s.Length - 1;\n                while (k < l) {\n                    temp = s[k];\n                    s[k] = s[l];\n                    s[l] = temp;\n                    k++;\n                    l--;\n                }\n                // Convert back to long\n                return long.Parse(s);\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122854,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpgthpt1xv.cs(42,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpgthpt1xv.cs(43,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpgthpt1xv.cs(44,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i])\n            i--;\n        if (i <= 0)\n            return -1;\n        var j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1])\n            j--;\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkd2hnvod.cs(34,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpkd2hnvod.cs(35,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpkd2hnvod.cs(36,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var index = -1;\n        for (var i = digits.Length - 1; i > 0; i--) {\n            if (digits[i - 1] < digits[i]) {\n                index = i - 1;\n                break;\n            }\n        }\n        if (index == -1) return -1;\n        var smallest = index + 1;\n        for (var i = index + 2; i < digits.Length; i++) {\n            if (digits[i] > digits[index] && digits[i] <= digits[smallest]) {\n                smallest = i;\n            }\n        }\n        var temp = digits[index];\n        digits[index] = digits[smallest];\n        digits[smallest] = temp;\n        Array.Sort(digits, index + 1, digits.Length - index - 1);\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122854,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpitq1ng2s.cs(33,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpitq1ng2s.cs(34,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpitq1ng2s.cs(35,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to string\n        var s = n.ToString();\n        // Find the first decreasing digit\n        var i = s.Length - 1;\n        while (i > 0 && s[i] <= s[i - 1])\n            i--;\n        // If no decreasing digit, then no bigger number\n        if (i == 0)\n            return null;\n        // Find the smallest digit to the right of the decreasing digit\n        var j = i;\n        while (j < s.Length && s[j] > s[i - 1])\n            j++;\n        // Swap the decreasing digit with the smallest digit to the right\n        var t = s[i - 1];\n        s = s.Remove(i - 1, 1).Insert(i - 1, s[j - 1].ToString());\n        s = s.Remove(j - 1, 1).Insert(j - 1, t.ToString());\n        // Reverse the digits to the right of the decreasing digit\n        var r = s.Substring(i).ToCharArray();\n        Array.Reverse(r);\n        s = s.Remove(i).Insert(i, new string(r));\n        // Return the new number\n        return long.Parse(s);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122854,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3qzca5h_.cs(36,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp3qzca5h_.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp3qzca5h_.cs(38,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to string\n        string s = n.ToString();\n        // Get the length\n        int l = s.Length;\n        // Create a list of digits\n        List<int> digits = new List<int>();\n        for (int i = 0; i < l; i++) {\n            digits.Add(int.Parse(s[i].ToString()));\n        }\n        // Find the first digit that is smaller than the digit to its right\n        int index = -1;\n        for (int i = l - 1; i > 0; i--) {\n            if (digits[i] > digits[i - 1]) {\n                index = i - 1;\n                break;\n            }\n        }\n        // If no such digit exists, return -1\n        if (index == -1) {\n            return -1;\n        }\n        // Find the smallest digit to the right of the digit found above that is larger than it\n        int min = int.MaxValue;\n        int minIndex = -1;\n        for (int i = index + 1; i < l; i++) {\n            if (digits[i] > digits[index] && digits[i] < min) {\n                min = digits[i];\n                minIndex = i;\n            }\n        }\n        // Swap the digits\n        int temp = digits[index];\n        digits[index] = digits[minIndex];\n        digits[minIndex] = temp;\n        // Sort the digits to the right of the digit found above\n        digits.Sort(index + 1, l - index - 1, Comparer<int>.Default);\n        // Convert the list of digits to a string\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < l; i++) {\n            sb.Append(digits[i]);\n        }\n        // Convert the string to a long\n        long result = long.Parse(sb.ToString());\n        // Return the result\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122854,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1xyg50ok.cs(58,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp1xyg50ok.cs(59,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp1xyg50ok.cs(60,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to string\n        string s = n.ToString();\n        // Find the first index where the digit is less than the digit to the right\n        int i = s.Length - 2;\n        while (i >= 0 && s[i] >= s[i + 1]) {\n            i--;\n        }\n        // If no such index exists, the number is already the largest possible\n        if (i < 0) {\n            return -1;\n        }\n        // Find the smallest digit to the right of i that is greater than s[i]\n        int j = s.Length - 1;\n        while (s[j] <= s[i]) {\n            j--;\n        }\n        // Swap s[i] and s[j]\n        char temp = s[i];\n        s = s.Remove(i, 1);\n        s = s.Insert(i, s[j].ToString());\n        s = s.Remove(j, 1);\n        s = s.Insert(j, temp.ToString());\n        // Reverse the digits to the right of i\n        s = s.Substring(0, i + 1) + new string(s.Substring(i + 1).Reverse().ToArray());\n        // Return the new number\n        return long.Parse(s);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122854,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp9gxz1ekt.cs(39,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp9gxz1ekt.cs(40,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp9gxz1ekt.cs(41,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var index = digits.Length - 2;\n        while (index >= 0 && digits[index] >= digits[index + 1]) {\n            index--;\n        }\n        if (index < 0) {\n            return -1;\n        }\n        var smallestIndex = index + 1;\n        for (int i = index + 2; i < digits.Length; i++) {\n            if (digits[i] > digits[index] && digits[i] <= digits[smallestIndex]) {\n                smallestIndex = i;\n            }\n        }\n        var temp = digits[index];\n        digits[index] = digits[smallestIndex];\n        digits[smallestIndex] = temp;\n        Array.Sort(digits, index + 1, digits.Length - index - 1);\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122854,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpv38puply.cs(32,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpv38puply.cs(33,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpv38puply.cs(34,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var s = n.ToString();\n        var len = s.Length;\n        var i = len - 1;\n        while (i > 0 && s[i - 1] >= s[i]) i--;\n        if (i == 0) return -1;\n        var j = len - 1;\n        while (s[j] <= s[i - 1]) j--;\n        var t = s[i - 1];\n        s = s.Remove(i - 1, 1);\n        s = s.Insert(i - 1, s[j].ToString());\n        s = s.Remove(j, 1);\n        s = s.Insert(j, t.ToString());\n        s = s.Substring(0, i) + new string(s.Substring(i).OrderBy(c => c).ToArray());\n        return long.Parse(s);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122854,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmppm9l0ncn.cs(27,49): error CS1525: Invalid expression term 'object'\n/tmp/tmppm9l0ncn.cs(28,49): error CS1525: Invalid expression term 'object'\n/tmp/tmppm9l0ncn.cs(29,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i])\n            i--;\n        if (i <= 0)\n            return -1;\n        var j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1])\n            j--;\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkd2hnvod.cs(34,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpkd2hnvod.cs(35,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpkd2hnvod.cs(36,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to string\n        string s = n.ToString();\n        // Find the first digit that is smaller than the digit to its right\n        int i = s.Length - 2;\n        while (i >= 0 && s[i] >= s[i + 1]) {\n            i--;\n        }\n        // If no such digit exists, the number is the largest possible\n        if (i < 0) {\n            return -1;\n        }\n        // Find the smallest digit to the right of i that is larger than s[i]\n        int j = s.Length - 1;\n        while (s[j] <= s[i]) {\n            j--;\n        }\n        // Swap i and j\n        char temp = s[i];\n        s = s.Remove(i, 1);\n        s = s.Insert(i, s[j].ToString());\n        s = s.Remove(j, 1);\n        s = s.Insert(j, temp.ToString());\n        // Reverse the string from i + 1 to the end\n        string left = s.Substring(0, i + 1);\n        string right = s.Substring(i + 1);\n        char[] arr = right.ToCharArray();\n        Array.Reverse(arr);\n        right = new string(arr);\n        // Return the new number\n        return long.Parse(left + right);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122854,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpg182mzqw.cs(43,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpg182mzqw.cs(44,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpg182mzqw.cs(45,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        var j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpsfdahpaa.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var len = digits.Length;\n        for (int i = len - 2; i >= 0; i--) {\n            if (digits[i] < digits[i + 1]) {\n                var min = i + 1;\n                for (int j = i + 2; j < len; j++) {\n                    if (digits[j] < digits[min] && digits[j] > digits[i]) {\n                        min = j;\n                    }\n                }\n                var temp = digits[i];\n                digits[i] = digits[min];\n                digits[min] = temp;\n                Array.Sort(digits, i + 1, len - i - 1);\n                return new string(digits);\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122854,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp0whyn_c5.cs(31,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp0whyn_c5.cs(32,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp0whyn_c5.cs(33,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var index = -1;\n        for (int i = digits.Length - 1; i > 0; i--) {\n            if (digits[i - 1] < digits[i]) {\n                index = i - 1;\n                break;\n            }\n        }\n        if (index == -1) return -1;\n        var smallest = index + 1;\n        for (int i = index + 2; i < digits.Length; i++) {\n            if (digits[i] > digits[index] && digits[i] <= digits[smallest]) {\n                smallest = i;\n            }\n        }\n        var temp = digits[index];\n        digits[index] = digits[smallest];\n        digits[smallest] = temp;\n        Array.Sort(digits, index + 1, digits.Length - index - 1);\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122854,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpmgvzq9te.cs(33,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpmgvzq9te.cs(34,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpmgvzq9te.cs(35,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var index = -1;\n        for (var i = digits.Length - 1; i > 0; i--) {\n            if (digits[i - 1] < digits[i]) {\n                index = i - 1;\n                break;\n            }\n        }\n        if (index == -1) {\n            return -1;\n        }\n        var smallest = index + 1;\n        for (var i = index + 2; i < digits.Length; i++) {\n            if (digits[i] > digits[index] && digits[i] <= digits[smallest]) {\n                smallest = i;\n            }\n        }\n        var temp = digits[index];\n        digits[index] = digits[smallest];\n        digits[smallest] = temp;\n        Array.Sort(digits, index + 1, digits.Length - index - 1);\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8_gg5_y5.cs(35,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp8_gg5_y5.cs(36,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp8_gg5_y5.cs(37,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to char array\n        char[] digits = n.ToString().ToCharArray();\n        // Find the pivot point\n        int pivot = -1;\n        for (int i = digits.Length - 2; i >= 0; i--) {\n            if (digits[i] < digits[i + 1]) {\n                pivot = i;\n                break;\n            }\n        }\n        // If no pivot point, return -1\n        if (pivot == -1) {\n            return -1;\n        }\n        // Find the rightmost successor to the pivot\n        int successor = 0;\n        for (int i = digits.Length - 1; i > pivot; i--) {\n            if (digits[i] > digits[pivot]) {\n                successor = i;\n                break;\n            }\n        }\n        // Swap the pivot with the successor\n        char temp = digits[pivot];\n        digits[pivot] = digits[successor];\n        digits[successor] = temp;\n        // Reverse the suffix\n        Array.Reverse(digits, pivot + 1, digits.Length - pivot - 1);\n        // Return the result\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122854,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa2hp6tvz.cs(43,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpa2hp6tvz.cs(44,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpa2hp6tvz.cs(45,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        var j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpsfdahpaa.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to string\n        string s = n.ToString();\n        // Find the first digit that is smaller than the one to its right\n        int i = s.Length - 2;\n        while (i >= 0 && s[i] >= s[i + 1]) i--;\n        if (i < 0) return -1;\n        // Find the smallest digit to the right of i that is larger than s[i]\n        int j = s.Length - 1;\n        while (s[j] <= s[i]) j--;\n        // Swap s[i] and s[j]\n        char temp = s[i];\n        s = s.Remove(i, 1);\n        s = s.Insert(i, s[j].ToString());\n        s = s.Remove(j, 1);\n        s = s.Insert(j, temp.ToString());\n        // Reverse the digits to the right of i\n        string s2 = s.Substring(i + 1);\n        char[] c = s2.ToCharArray();\n        Array.Reverse(c);\n        s2 = new string(c);\n        s = s.Remove(i + 1);\n        s = s.Insert(i + 1, s2);\n        // Return the result\n        return long.Parse(s);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122854,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprq_reatg.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmprq_reatg.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmprq_reatg.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        string s = n.ToString();\n        int i = s.Length - 1;\n        while (i > 0 && s[i - 1] >= s[i]) i--;\n        if (i == 0) return -1;\n        int j = s.Length - 1;\n        while (s[j] <= s[i - 1]) j--;\n        Swap(s, i - 1, j);\n        j = s.Length - 1;\n        while (i < j) {\n            Swap(s, i, j);\n            i++;\n            j--;\n        }\n        return long.Parse(s);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122854,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpg266nkx0.cs(27,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpg266nkx0.cs(28,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpg266nkx0.cs(29,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var s = n.ToString();\n        var len = s.Length;\n        var i = len - 1;\n        while (i > 0 && s[i - 1] >= s[i])\n            i--;\n        if (i == 0)\n            return -1;\n        var j = len - 1;\n        while (s[j] <= s[i - 1])\n            j--;\n        var t = s[i - 1];\n        s = s.Remove(i - 1, 1);\n        s = s.Insert(i - 1, s[j].ToString());\n        s = s.Remove(j, 1);\n        s = s.Insert(j, t.ToString());\n        var s1 = s.Substring(0, i);\n        var s2 = s.Substring(i);\n        var s3 = new string(s2.ToCharArray().Reverse().ToArray());\n        return long.Parse(s1 + s3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122854,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdld3sny6.cs(32,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpdld3sny6.cs(33,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpdld3sny6.cs(34,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i == 0) {\n            return -1;\n        }\n        var j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return new string(digits);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122854,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp44snbm73.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp44snbm73.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp44snbm73.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var index = digits.Length - 1;\n        while (index > 0 && digits[index - 1] >= digits[index])\n            index--;\n        if (index <= 0)\n            return -1;\n        var swapIndex = digits.Length - 1;\n        while (digits[swapIndex] <= digits[index - 1])\n            swapIndex--;\n        var temp = digits[index - 1];\n        digits[index - 1] = digits[swapIndex];\n        digits[swapIndex] = temp;\n        Array.Sort(digits, index, digits.Length - index);\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122854,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpqwc_ast2.cs(27,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpqwc_ast2.cs(28,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpqwc_ast2.cs(29,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        var j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return new string(digits);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122854,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpf0wtf5fq.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpf0wtf5fq.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpf0wtf5fq.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        var j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpsfdahpaa.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var index = digits.Length - 1;\n        while (index > 0 && digits[index - 1] >= digits[index]) {\n            index--;\n        }\n        if (index <= 0) {\n            return -1;\n        }\n        var swapIndex = digits.Length - 1;\n        while (digits[swapIndex] <= digits[index - 1]) {\n            swapIndex--;\n        }\n        var temp = digits[index - 1];\n        digits[index - 1] = digits[swapIndex];\n        digits[swapIndex] = temp;\n        Array.Sort(digits, index, digits.Length - index);\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122854,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6xu8l8nl.cs(30,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp6xu8l8nl.cs(31,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp6xu8l8nl.cs(32,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var index = digits.Length - 1;\n        while (index > 0 && digits[index - 1] >= digits[index])\n            index--;\n        if (index <= 0)\n            return -1;\n        var swapIndex = digits.Length - 1;\n        while (digits[swapIndex] <= digits[index - 1])\n            swapIndex--;\n        var temp = digits[index - 1];\n        digits[index - 1] = digits[swapIndex];\n        digits[swapIndex] = temp;\n        Array.Reverse(digits, index, digits.Length - index);\n        return BigInteger.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122854,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp099d6z7t.cs(27,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp099d6z7t.cs(28,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp099d6z7t.cs(29,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to string\n        var s = n.ToString();\n        // Find the first digit that is smaller than the digit to its right\n        var i = s.Length - 2;\n        while (i >= 0 && s[i] >= s[i + 1]) i--;\n        // If no such digit exists, the number is the largest possible\n        if (i < 0) return -1;\n        // Find the smallest digit to the right of i that is larger than s[i]\n        var j = s.Length - 1;\n        while (s[j] <= s[i]) j--;\n        // Swap s[i] and s[j]\n        var t = s[i];\n        s = s.Remove(i, 1).Insert(i, s[j].ToString());\n        s = s.Remove(j, 1).Insert(j, t.ToString());\n        // Reverse the digits to the right of i\n        var r = s.Substring(i + 1).Reverse().ToArray();\n        s = s.Remove(i + 1, s.Length - i - 1).Insert(i + 1, new string(r));\n        // Return the result\n        return long.Parse(s);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122854,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1ipjubbs.cs(32,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp1ipjubbs.cs(33,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp1ipjubbs.cs(34,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to string\n        var s = n.ToString();\n        // Find the first decreasing digit\n        var i = s.Length - 1;\n        while (i > 0 && s[i - 1] >= s[i]) {\n            i--;\n        }\n        if (i == 0) {\n            // No decreasing digit found, so no bigger number\n            return null;\n        }\n        // Find the smallest digit to the right of the decreasing digit\n        var j = s.Length - 1;\n        while (s[j] <= s[i - 1]) {\n            j--;\n        }\n        // Swap the digits\n        var c = s[i - 1];\n        s = s.Remove(i - 1, 1);\n        s = s.Insert(i - 1, s[j].ToString());\n        s = s.Remove(j, 1);\n        s = s.Insert(j, c.ToString());\n        // Reverse the digits to the right of the decreasing digit\n        var t = s.Substring(i);\n        var a = t.ToCharArray();\n        Array.Reverse(a);\n        s = s.Remove(i);\n        s += new string(a);\n        // Return the result\n        return long.Parse(s);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122854,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8eap3xrx.cs(43,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp8eap3xrx.cs(44,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp8eap3xrx.cs(45,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) i--;\n        if (i == 0) return -1;\n        var j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) j--;\n        var tmp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = tmp;\n        j = digits.Length - 1;\n        while (i < j) {\n            tmp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = tmp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122854,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpm5cyks8h.cs(31,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpm5cyks8h.cs(32,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpm5cyks8h.cs(33,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // convert to string\n        string s = n.ToString();\n        // find the first non-increasing digit\n        int i = s.Length - 1;\n        while (i > 0 && s[i - 1] >= s[i]) i--;\n        // if all digits are non-increasing, return -1\n        if (i == 0) return -1;\n        // find the smallest digit to the right of the first non-increasing digit\n        int j = s.Length - 1;\n        while (s[j] <= s[i - 1]) j--;\n        // swap the first non-increasing digit with the smallest digit to the right\n        char temp = s[i - 1];\n        s = s.Remove(i - 1, 1);\n        s = s.Insert(i - 1, s[j].ToString());\n        s = s.Remove(j, 1);\n        s = s.Insert(j, temp.ToString());\n        // reverse the digits to the right of the first non-increasing digit\n        string s1 = s.Substring(0, i);\n        string s2 = s.Substring(i);\n        char[] c = s2.ToCharArray();\n        Array.Reverse(c);\n        s2 = new string(c);\n        // return the concatenation of the two strings\n        return long.Parse(s1 + s2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpng8o33z2.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpng8o33z2.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpng8o33z2.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        int i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i])\n            i--;\n        if (i <= 0)\n            return -1;\n        int j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1])\n            j--;\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp2a1rlfel.cs(34,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp2a1rlfel.cs(35,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp2a1rlfel.cs(36,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var index = -1;\n        for (var i = digits.Length - 1; i > 0; i--) {\n            if (digits[i - 1] < digits[i]) {\n                index = i - 1;\n                break;\n            }\n        }\n        if (index == -1) return -1;\n        var smallest = index + 1;\n        for (var i = index + 2; i < digits.Length; i++) {\n            if (digits[i] > digits[index] && digits[i] <= digits[smallest]) {\n                smallest = i;\n            }\n        }\n        var temp = digits[index];\n        digits[index] = digits[smallest];\n        digits[smallest] = temp;\n        Array.Sort(digits, index + 1, digits.Length - index - 1);\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122854,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpitq1ng2s.cs(33,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpitq1ng2s.cs(34,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpitq1ng2s.cs(35,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        var j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpsfdahpaa.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i == 0) {\n            return -1;\n        }\n        var j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpd2149gyt.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpd2149gyt.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpd2149gyt.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var len = digits.Length;\n        var i = len - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        var j = len - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = len - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1pct5zdt.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp1pct5zdt.cs(39,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp1pct5zdt.cs(40,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var last = digits.Length - 1;\n        var i = last;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        var j = last;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = last;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpfhpt8_2x.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpfhpt8_2x.cs(39,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpfhpt8_2x.cs(40,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) i--;\n        if (i == 0) return -1;\n        var j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) j--;\n        Swap(digits, i - 1, j);\n        j = digits.Length - 1;\n        while (i < j) {\n            Swap(digits, i, j);\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzbuatg5w.cs(27,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpzbuatg5w.cs(28,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpzbuatg5w.cs(29,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        if (n < 10) return -1;\n        var digits = n.ToString().ToCharArray();\n        var i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) i--;\n        if (i == 0) return -1;\n        var j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) j--;\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        Array.Reverse(digits, i, digits.Length - i);\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpgjxut_mz.cs(25,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpgjxut_mz.cs(26,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpgjxut_mz.cs(27,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to string\n        var s = n.ToString();\n        // Find the first digit that is smaller than the next\n        for (int i = s.Length - 2; i >= 0; i--) {\n            if (s[i] < s[i + 1]) {\n                // Find the smallest digit that is bigger than the current digit\n                int min = i + 1;\n                for (int j = i + 2; j < s.Length; j++) {\n                    if (s[j] > s[i] && s[j] < s[min]) {\n                        min = j;\n                    }\n                }\n                // Swap the digits\n                var t = s[i];\n                s = s.Remove(i, 1).Insert(i, s[min].ToString());\n                s = s.Remove(min, 1).Insert(min, t.ToString());\n                // Sort the rest of the digits\n                var rest = s.Substring(i + 1);\n                rest = string.Concat(rest.OrderBy(c => c));\n                s = s.Remove(i + 1);\n                s += rest;\n                return long.Parse(s);\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpl22ij6v2.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpl22ij6v2.cs(39,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpl22ij6v2.cs(40,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var len = digits.Length;\n        var i = len - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        var j = len - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = len - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1pct5zdt.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp1pct5zdt.cs(39,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp1pct5zdt.cs(40,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to string\n        string s = n.ToString();\n        // Find the first digit that is less than the digit to its right\n        int i = s.Length - 2;\n        while (i >= 0 && s[i] >= s[i + 1])\n            i--;\n        // If no such digit exists, the number is the largest possible\n        if (i < 0)\n            return -1;\n        // Find the smallest digit to the right of i that is greater than s[i]\n        int j = s.Length - 1;\n        while (s[j] <= s[i])\n            j--;\n        // Swap s[i] and s[j]\n        char temp = s[i];\n        s = s.Substring(0, i) + s[j] + s.Substring(i + 1);\n        s = s.Substring(0, j) + temp + s.Substring(j + 1);\n        // Reverse the substring to the right of i\n        s = s.Substring(0, i + 1) + new string(s.Substring(i + 1).Reverse().ToArray());\n        // Convert back to long\n        return long.Parse(s);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpk3f5evz8.cs(34,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpk3f5evz8.cs(35,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpk3f5evz8.cs(36,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to string and then to char array\n        char[] digits = n.ToString().ToCharArray();\n        // Find the pivot point\n        int pivot = -1;\n        for (int i = digits.Length - 1; i > 0; i--) {\n            if (digits[i - 1] < digits[i]) {\n                pivot = i - 1;\n                break;\n            }\n        }\n        // If no pivot point, return -1\n        if (pivot == -1) {\n            return -1;\n        }\n        // Find the rightmost successor to the pivot\n        int successor = 0;\n        for (int i = digits.Length - 1; i > pivot; i--) {\n            if (digits[i] > digits[pivot]) {\n                successor = i;\n                break;\n            }\n        }\n        // Swap the pivot with the successor\n        char temp = digits[pivot];\n        digits[pivot] = digits[successor];\n        digits[successor] = temp;\n        // Reverse the suffix\n        Array.Reverse(digits, pivot + 1, digits.Length - (pivot + 1));\n        // Return the result\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpc1rdaqc3.cs(43,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpc1rdaqc3.cs(44,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpc1rdaqc3.cs(45,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        var j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpsfdahpaa.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to string\n        var s = n.ToString();\n        // Find the first decreasing digit\n        int i = s.Length - 1;\n        while (i > 0 && s[i - 1] >= s[i]) i--;\n        if (i == 0) return -1;\n        // Find the smallest digit to the right of the first decreasing digit\n        int j = s.Length - 1;\n        while (s[j] <= s[i - 1]) j--;\n        // Swap the first decreasing digit with the smallest digit to the right of it\n        var c = s[i - 1];\n        s = s.Remove(i - 1, 1).Insert(i - 1, s[j].ToString());\n        s = s.Remove(j, 1).Insert(j, c.ToString());\n        // Reverse the digits to the right of the first decreasing digit\n        var r = s.Substring(i).ToCharArray();\n        Array.Reverse(r);\n        s = s.Remove(i).Insert(i, new string(r));\n        return long.Parse(s);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmphw72na7_.cs(31,49): error CS1525: Invalid expression term 'object'\n/tmp/tmphw72na7_.cs(32,49): error CS1525: Invalid expression term 'object'\n/tmp/tmphw72na7_.cs(33,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to char array\n        char[] digits = n.ToString().ToCharArray();\n        // Find the first digit that is smaller than the digit to its right\n        int i = digits.Length - 2;\n        while (i >= 0 && digits[i] >= digits[i + 1]) {\n            i--;\n        }\n        // If no such digit exists, the number is the largest possible\n        if (i < 0) {\n            return -1;\n        }\n        // Find the smallest digit to the right of i that is larger than digits[i]\n        int j = digits.Length - 1;\n        while (digits[j] <= digits[i]) {\n            j--;\n        }\n        // Swap digits[i] and digits[j]\n        char temp = digits[i];\n        digits[i] = digits[j];\n        digits[j] = temp;\n        // Reverse the digits to the right of i\n        Array.Reverse(digits, i + 1, digits.Length - (i + 1));\n        // Return the new number\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprjpceac7.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmprjpceac7.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmprjpceac7.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var len = digits.Length;\n        var i = len - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        var j = len - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = len - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1pct5zdt.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp1pct5zdt.cs(39,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp1pct5zdt.cs(40,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        var j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpsfdahpaa.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert the number to a string\n        string s = n.ToString();\n        // Find the first digit that is smaller than the digit to its right\n        int i = s.Length - 2;\n        while (i >= 0 && s[i] >= s[i + 1]) {\n            i--;\n        }\n        // If no such digit exists, the number is already the largest possible\n        if (i < 0) {\n            return -1;\n        }\n        // Find the smallest digit to the right of the pivot that is larger than the pivot\n        int j = s.Length - 1;\n        while (s[j] <= s[i]) {\n            j--;\n        }\n        // Swap the pivot with the smallest digit to its right\n        char[] chars = s.ToCharArray();\n        char temp = chars[i];\n        chars[i] = chars[j];\n        chars[j] = temp;\n        // Reverse the digits to the right of the pivot\n        Array.Reverse(chars, i + 1, s.Length - i - 1);\n        // Convert the string back to an integer\n        return long.Parse(new string(chars));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpc81ah1oy.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpc81ah1oy.cs(39,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpc81ah1oy.cs(40,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to string\n        string s = n.ToString();\n        // Find the first digit from the right that is smaller than the digit to its right\n        int i = s.Length - 2;\n        while (i >= 0 && s[i] >= s[i + 1]) {\n            i--;\n        }\n        // If no such digit exists, the number is the largest possible\n        if (i < 0) {\n            return -1;\n        }\n        // Find the smallest digit to the right of i that is larger than s[i]\n        int j = s.Length - 1;\n        while (j > i && s[j] <= s[i]) {\n            j--;\n        }\n        // Swap s[i] and s[j]\n        char temp = s[i];\n        s = s.Remove(i, 1);\n        s = s.Insert(i, s[j].ToString());\n        s = s.Remove(j, 1);\n        s = s.Insert(j, temp.ToString());\n        // Reverse the string from i + 1 to the end\n        string t = s.Substring(i + 1);\n        char[] a = t.ToCharArray();\n        Array.Reverse(a);\n        t = new string(a);\n        s = s.Remove(i + 1);\n        s += t;\n        // Return the result\n        return long.Parse(s);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpeukd4uyy.cs(44,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpeukd4uyy.cs(45,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpeukd4uyy.cs(46,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to string\n        string s = n.ToString();\n        // Find the first decreasing digit\n        int i = s.Length - 2;\n        while (i >= 0 && s[i] >= s[i + 1])\n            i--;\n        // If no such digit exists, the number is the largest possible\n        if (i < 0)\n            return -1;\n        // Find the smallest digit to the right of the decreasing digit\n        int j = s.Length - 1;\n        while (s[j] <= s[i])\n            j--;\n        // Swap the digits\n        char temp = s[i];\n        s = s.Remove(i, 1).Insert(i, s[j].ToString());\n        s = s.Remove(j, 1).Insert(j, temp.ToString());\n        // Reverse the digits to the right of the decreasing digit\n        char[] arr = s.Substring(i + 1).ToCharArray();\n        Array.Reverse(arr);\n        s = s.Remove(i + 1).Insert(i + 1, new string(arr));\n        // Return the result\n        return long.Parse(s);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp9t9j_ggw.cs(36,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp9t9j_ggw.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp9t9j_ggw.cs(38,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to array of digits\n        var digits = n.ToString().ToCharArray().Select(x => int.Parse(x.ToString())).ToArray();\n        // Find the first digit that is smaller than the digit to its right\n        int i = digits.Length - 2;\n        while (i >= 0 && digits[i] >= digits[i + 1]) i--;\n        // If no such digit exists, the number is the largest possible\n        if (i < 0) return -1;\n        // Find the smallest digit to the right of the pivot that is larger than the pivot\n        int j = digits.Length - 1;\n        while (j >= 0 && digits[j] <= digits[i]) j--;\n        // Swap the pivot with the smallest digit to the right of the pivot\n        var temp = digits[i];\n        digits[i] = digits[j];\n        digits[j] = temp;\n        // Reverse the digits to the right of the pivot\n        Array.Reverse(digits, i + 1, digits.Length - i - 1);\n        // Return the new number\n        return long.Parse(new string(digits.Select(x => x.ToString()).ToArray()));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmphrcnl_eh.cs(31,49): error CS1525: Invalid expression term 'object'\n/tmp/tmphrcnl_eh.cs(32,49): error CS1525: Invalid expression term 'object'\n/tmp/tmphrcnl_eh.cs(33,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to string\n        string s = n.ToString();\n        // Create a list of digits\n        List<int> digits = new List<int>();\n        foreach (char c in s) {\n            digits.Add(int.Parse(c.ToString()));\n        }\n        // Find the first digit that is smaller than the one to its right\n        int i = 0;\n        for (i = digits.Count - 2; i >= 0; i--) {\n            if (digits[i] < digits[i + 1]) {\n                break;\n            }\n        }\n        // If no such digit exists, return -1\n        if (i < 0) {\n            return -1;\n        }\n        // Find the smallest digit to the right of i that is larger than digits[i]\n        int j = i + 1;\n        for (int k = i + 2; k < digits.Count; k++) {\n            if (digits[k] < digits[j] && digits[k] > digits[i]) {\n                j = k;\n            }\n        }\n        // Swap digits[i] and digits[j]\n        int temp = digits[i];\n        digits[i] = digits[j];\n        digits[j] = temp;\n        // Sort the digits to the right of i\n        digits.Sort(i + 1, digits.Count - i - 1, null);\n        // Convert the list of digits back to a number\n        string result = \"\";\n        foreach (int d in digits) {\n            result += d.ToString();\n        }\n        return long.Parse(result);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpilwu_pcs.cs(50,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpilwu_pcs.cs(51,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpilwu_pcs.cs(52,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        var j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpsfdahpaa.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Find the largest index i such that array[i \u2212 1] < array[i].\n        // If no such index exists, the permutation is the last permutation.\n        var digits = n.ToString().Select(c => c - '0').ToArray();\n        int i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        // Find the largest index j such that j \u2265 i and array[j] > array[i \u2212 1].\n        int j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        // Swap array[j] and array[i \u2212 1].\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        // Reverse the suffix starting at array[i].\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return BigInteger.Parse(new string(digits.Select(d => (char)(d + '0')).ToArray()));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpv0hey809.cs(42,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpv0hey809.cs(43,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpv0hey809.cs(44,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        var j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return new string(digits);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122854,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpf0wtf5fq.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpf0wtf5fq.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpf0wtf5fq.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var index = -1;\n        for (var i = digits.Length - 1; i > 0; i--) {\n            if (digits[i - 1] < digits[i]) {\n                index = i - 1;\n                break;\n            }\n        }\n        if (index == -1) return -1;\n        var smallest = index + 1;\n        for (var i = index + 2; i < digits.Length; i++) {\n            if (digits[i] > digits[index] && digits[i] <= digits[smallest]) {\n                smallest = i;\n            }\n        }\n        var temp = digits[index];\n        digits[index] = digits[smallest];\n        digits[smallest] = temp;\n        Array.Sort(digits, index + 1, digits.Length - index - 1);\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122854,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpitq1ng2s.cs(33,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpitq1ng2s.cs(34,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpitq1ng2s.cs(35,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var len = digits.Length;\n        var i = len - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        var j = len - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = len - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1pct5zdt.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp1pct5zdt.cs(39,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp1pct5zdt.cs(40,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        var j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpsfdahpaa.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to array of digits\n        var digits = n.ToString().Select(x => x - '0').ToArray();\n        // Find the first decreasing digit\n        int i = digits.Length - 2;\n        while (i >= 0 && digits[i] >= digits[i + 1])\n            i--;\n        // If no decreasing digit was found, the number is already the largest possible\n        if (i < 0)\n            return -1;\n        // Find the smallest digit to the right of the decreasing digit that is larger than it\n        int j = digits.Length - 1;\n        while (digits[j] <= digits[i])\n            j--;\n        // Swap the two digits\n        var temp = digits[i];\n        digits[i] = digits[j];\n        digits[j] = temp;\n        // Reverse the digits to the right of the decreasing digit\n        Array.Reverse(digits, i + 1, digits.Length - i - 1);\n        // Convert back to long\n        return long.Parse(new string(digits.Select(x => (char)(x + '0')).ToArray()));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp7ptg59co.cs(34,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp7ptg59co.cs(35,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp7ptg59co.cs(36,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        var j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpsfdahpaa.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i])\n            i--;\n        if (i <= 0)\n            return -1;\n        var j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1])\n            j--;\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkd2hnvod.cs(34,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpkd2hnvod.cs(35,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpkd2hnvod.cs(36,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var len = digits.Length;\n        var i = len - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        var j = len - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = len - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1pct5zdt.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp1pct5zdt.cs(39,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp1pct5zdt.cs(40,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var len = digits.Length;\n        var i = len - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        var j = len - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = len - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1pct5zdt.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp1pct5zdt.cs(39,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp1pct5zdt.cs(40,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to string\n        string s = n.ToString();\n        // Find the first digit that is smaller than the digit to the right\n        int i = s.Length - 1;\n        while (i > 0 && s[i - 1] >= s[i]) {\n            i--;\n        }\n        // If no such digit exists, the number is the largest possible\n        if (i == 0) {\n            return -1;\n        }\n        // Find the smallest digit to the right of the pivot that is larger than the pivot\n        int j = s.Length - 1;\n        while (s[j] <= s[i - 1]) {\n            j--;\n        }\n        // Swap the pivot with the smallest digit to the right\n        char temp = s[i - 1];\n        s = s.Remove(i - 1, 1);\n        s = s.Insert(i - 1, s[j].ToString());\n        s = s.Remove(j, 1);\n        s = s.Insert(j, temp.ToString());\n        // Reverse the digits to the right of the pivot\n        string t = s.Substring(i);\n        char[] a = t.ToCharArray();\n        Array.Reverse(a);\n        t = new string(a);\n        s = s.Remove(i);\n        s = s.Insert(i, t);\n        // Convert back to long\n        return long.Parse(s);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpm9kcf4xj.cs(44,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpm9kcf4xj.cs(45,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpm9kcf4xj.cs(46,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to string\n        var s = n.ToString();\n        // Find the first decreasing digit\n        var i = s.Length - 1;\n        while (i > 0 && s[i - 1] >= s[i]) i--;\n        if (i == 0) return -1;\n        // Find the smallest digit greater than s[i - 1]\n        var j = s.Length - 1;\n        while (s[j] <= s[i - 1]) j--;\n        // Swap s[i - 1] and s[j]\n        var t = s[i - 1];\n        s = s.Remove(i - 1, 1).Insert(i - 1, s[j].ToString());\n        s = s.Remove(j, 1).Insert(j, t.ToString());\n        // Reverse s[i..]\n        s = s.Substring(0, i) + new string(s.Substring(i).Reverse().ToArray());\n        // Convert back to long\n        return long.Parse(s);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmph8tlh1vt.cs(30,49): error CS1525: Invalid expression term 'object'\n/tmp/tmph8tlh1vt.cs(31,49): error CS1525: Invalid expression term 'object'\n/tmp/tmph8tlh1vt.cs(32,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        var j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpsfdahpaa.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var index = digits.Length - 2;\n        while (index >= 0 && digits[index] >= digits[index + 1]) {\n            index--;\n        }\n        if (index < 0) {\n            return -1;\n        }\n        var smallestIndex = index + 1;\n        for (int i = index + 2; i < digits.Length; i++) {\n            if (digits[i] > digits[index] && digits[i] < digits[smallestIndex]) {\n                smallestIndex = i;\n            }\n        }\n        var temp = digits[index];\n        digits[index] = digits[smallestIndex];\n        digits[smallestIndex] = temp;\n        Array.Sort(digits, index + 1, digits.Length - index - 1);\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdkfdaiya.cs(32,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpdkfdaiya.cs(33,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpdkfdaiya.cs(34,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        var j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpsfdahpaa.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to string\n        string s = n.ToString();\n        // Find the first digit that is smaller than the digit to its right\n        int i = s.Length - 2;\n        while (i >= 0 && s[i] >= s[i + 1]) i--;\n        // If no such digit exists, the number is already the largest possible\n        if (i < 0) return -1;\n        // Find the smallest digit to the right of i that is larger than s[i]\n        int j = s.Length - 1;\n        while (s[j] <= s[i]) j--;\n        // Swap s[i] and s[j]\n        char temp = s[i];\n        s = s.Remove(i, 1).Insert(i, s[j].ToString());\n        s = s.Remove(j, 1).Insert(j, temp.ToString());\n        // Reverse the digits to the right of i\n        s = s.Substring(0, i + 1) + new string(s.Substring(i + 1).Reverse().ToArray());\n        // Return the new number\n        return long.Parse(s);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpt6pvsc4q.cs(31,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpt6pvsc4q.cs(32,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpt6pvsc4q.cs(33,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to string\n        string s = n.ToString();\n        // Find the first digit that is smaller than the next digit\n        int i = s.Length - 2;\n        while (i >= 0 && s[i] >= s[i + 1]) {\n            i--;\n        }\n        // If no such digit exists, then the number is the largest possible\n        if (i < 0) {\n            return -1;\n        }\n        // Find the smallest digit to the right of the pivot that is larger than the pivot\n        int j = s.Length - 1;\n        while (s[j] <= s[i]) {\n            j--;\n        }\n        // Swap the pivot and the smallest digit to the right of the pivot\n        char[] c = s.ToCharArray();\n        char temp = c[i];\n        c[i] = c[j];\n        c[j] = temp;\n        // Reverse the digits to the right of the pivot\n        Array.Reverse(c, i + 1, s.Length - i - 1);\n        return long.Parse(new string(c));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpwycrg5uo.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpwycrg5uo.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpwycrg5uo.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var s = n.ToString();\n        var l = s.Length;\n        var i = l - 1;\n        while (i > 0 && s[i - 1] >= s[i]) i--;\n        if (i == 0) return -1;\n        var j = l - 1;\n        while (s[j] <= s[i - 1]) j--;\n        var t = s[i - 1];\n        s = s.Remove(i - 1, 1);\n        s = s.Insert(i - 1, s[j].ToString());\n        s = s.Remove(j, 1);\n        s = s.Insert(j, t.ToString());\n        var r = s.Substring(0, i);\n        var q = s.Substring(i);\n        var p = new string(q.Reverse().ToArray());\n        return long.Parse(r + p);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkph7bjnk.cs(29,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpkph7bjnk.cs(30,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpkph7bjnk.cs(31,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var index = digits.Length - 2;\n        while (index >= 0 && digits[index] >= digits[index + 1]) {\n            index--;\n        }\n        if (index < 0) {\n            return -1;\n        }\n        var smallest = index + 1;\n        for (var i = index + 2; i < digits.Length; i++) {\n            if (digits[i] > digits[index] && digits[i] <= digits[smallest]) {\n                smallest = i;\n            }\n        }\n        var temp = digits[index];\n        digits[index] = digits[smallest];\n        digits[smallest] = temp;\n        Array.Sort(digits, index + 1, digits.Length - index - 1);\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkvqsv3u8.cs(32,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpkvqsv3u8.cs(33,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpkvqsv3u8.cs(34,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        int i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        int j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpmlg_84e8.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpmlg_84e8.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpmlg_84e8.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var index = -1;\n        for (var i = digits.Length - 1; i > 0; i--) {\n            if (digits[i - 1] < digits[i]) {\n                index = i - 1;\n                break;\n            }\n        }\n        if (index == -1) {\n            return -1;\n        }\n        var smallest = index + 1;\n        for (var i = index + 2; i < digits.Length; i++) {\n            if (digits[i] > digits[index] && digits[i] <= digits[smallest]) {\n                smallest = i;\n            }\n        }\n        var temp = digits[index];\n        digits[index] = digits[smallest];\n        digits[smallest] = temp;\n        Array.Sort(digits, index + 1, digits.Length - index - 1);\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8_gg5_y5.cs(35,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp8_gg5_y5.cs(36,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp8_gg5_y5.cs(37,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray().Select(c => (int)Char.GetNumericValue(c)).ToArray();\n        var len = digits.Length;\n        var i = len - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        var j = len - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = len - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits.Select(d => d.ToString()[0]).ToArray()));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpo749bmz6.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpo749bmz6.cs(39,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpo749bmz6.cs(40,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to char array\n        char[] digits = n.ToString().ToCharArray();\n        // Find the pivot point\n        int pivot = -1;\n        for (int i = digits.Length - 1; i > 0; i--) {\n            if (digits[i - 1] < digits[i]) {\n                pivot = i - 1;\n                break;\n            }\n        }\n        // If no pivot point, then no bigger number\n        if (pivot == -1) {\n            return -1;\n        }\n        // Find the rightmost successor to the pivot\n        int successor = 0;\n        for (int i = digits.Length - 1; i > pivot; i--) {\n            if (digits[i] > digits[pivot]) {\n                successor = i;\n                break;\n            }\n        }\n        // Swap the pivot with the successor\n        char temp = digits[pivot];\n        digits[pivot] = digits[successor];\n        digits[successor] = temp;\n        // Reverse the suffix\n        Array.Reverse(digits, pivot + 1, digits.Length - pivot - 1);\n        // Return the result\n        return BigInteger.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpl4gxfn5r.cs(43,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpl4gxfn5r.cs(44,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpl4gxfn5r.cs(45,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to string\n        string s = n.ToString();\n        // Find the first digit that is smaller than the digit to its right\n        int i = s.Length - 2;\n        while (i >= 0 && s[i] >= s[i + 1]) {\n            i--;\n        }\n        // If no such digit exists, then the number is the largest possible\n        if (i < 0) {\n            return -1;\n        }\n        // Find the smallest digit to the right of i that is larger than s[i]\n        int j = s.Length - 1;\n        while (s[j] <= s[i]) {\n            j--;\n        }\n        // Swap s[i] and s[j]\n        char temp = s[i];\n        s = s.Remove(i, 1).Insert(i, s[j].ToString());\n        s = s.Remove(j, 1).Insert(j, temp.ToString());\n        // Reverse the string to the right of i\n        s = s.Substring(0, i + 1) + new string(s.Substring(i + 1).Reverse().ToArray());\n        // Convert back to long and return\n        return long.Parse(s);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpgl69aldo.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpgl69aldo.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpgl69aldo.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to string\n        var s = n.ToString();\n        // Find the first decreasing digit\n        int i = s.Length - 2;\n        while (i >= 0 && s[i] >= s[i + 1]) i--;\n        // If no decreasing digit, then no bigger number\n        if (i < 0) return -1;\n        // Find the smallest digit to the right of the decreasing digit that is bigger than it\n        int j = s.Length - 1;\n        while (s[j] <= s[i]) j--;\n        // Swap the two digits\n        var sb = new StringBuilder(s);\n        sb[i] = s[j];\n        sb[j] = s[i];\n        // Sort the digits to the right of the decreasing digit\n        var sorted = sb.ToString().Substring(i + 1).OrderBy(c => c);\n        // Replace the sorted digits\n        sb.Remove(i + 1, sb.Length - i - 1);\n        sb.Append(sorted);\n        return long.Parse(sb.ToString());\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmptticnyfa.cs(33,49): error CS1525: Invalid expression term 'object'\n/tmp/tmptticnyfa.cs(34,49): error CS1525: Invalid expression term 'object'\n/tmp/tmptticnyfa.cs(35,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var index = digits.Length - 2;\n        while (index >= 0 && digits[index] >= digits[index + 1]) {\n            index--;\n        }\n        if (index < 0) {\n            return -1;\n        }\n        var smallest = index + 1;\n        for (int i = index + 2; i < digits.Length; i++) {\n            if (digits[i] > digits[index] && digits[i] <= digits[smallest]) {\n                smallest = i;\n            }\n        }\n        var temp = digits[index];\n        digits[index] = digits[smallest];\n        digits[smallest] = temp;\n        Array.Sort(digits, index + 1, digits.Length - index - 1);\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp61if01jc.cs(32,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp61if01jc.cs(33,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp61if01jc.cs(34,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var index = -1;\n        for (int i = digits.Length - 1; i > 0; i--) {\n            if (digits[i - 1] < digits[i]) {\n                index = i - 1;\n                break;\n            }\n        }\n        if (index == -1) return -1;\n        var smallest = index + 1;\n        for (int i = index + 2; i < digits.Length; i++) {\n            if (digits[i] > digits[index] && digits[i] <= digits[smallest]) {\n                smallest = i;\n            }\n        }\n        var temp = digits[index];\n        digits[index] = digits[smallest];\n        digits[smallest] = temp;\n        Array.Sort(digits, index + 1, digits.Length - index - 1);\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122854,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpmgvzq9te.cs(33,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpmgvzq9te.cs(34,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpmgvzq9te.cs(35,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = new List<int>();\n        while (n > 0) {\n            digits.Add((int)(n % 10));\n            n /= 10;\n        }\n        digits.Reverse();\n        var i = digits.Count - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        var j = digits.Count - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Count - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        var result = 0L;\n        foreach (var digit in digits) {\n            result = result * 10 + digit;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1aldk8a7.cs(46,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp1aldk8a7.cs(47,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp1aldk8a7.cs(48,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        var j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpsfdahpaa.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var index = -1;\n        for (var i = digits.Length - 1; i > 0; i--) {\n            if (digits[i - 1] < digits[i]) {\n                index = i - 1;\n                break;\n            }\n        }\n        if (index == -1) {\n            return -1;\n        }\n        var smallest = index + 1;\n        for (var i = index + 2; i < digits.Length; i++) {\n            if (digits[i] > digits[index] && digits[i] <= digits[smallest]) {\n                smallest = i;\n            }\n        }\n        var temp = digits[index];\n        digits[index] = digits[smallest];\n        digits[smallest] = temp;\n        Array.Sort(digits, index + 1, digits.Length - index - 1);\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8_gg5_y5.cs(35,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp8_gg5_y5.cs(36,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp8_gg5_y5.cs(37,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to string\n        string s = n.ToString();\n        // Get the length of the string\n        int len = s.Length;\n        // Create an array of integers\n        int[] arr = new int[len];\n        // Convert the string to an array of integers\n        for (int i = 0; i < len; i++) {\n            arr[i] = int.Parse(s[i].ToString());\n        }\n        // Find the first digit that is smaller than the digit to its right\n        int x = -1;\n        for (int i = 0; i < len - 1; i++) {\n            if (arr[i] < arr[i + 1]) {\n                x = i;\n            }\n        }\n        // If no such digit exists, return -1\n        if (x == -1) {\n            return -1;\n        }\n        // Find the smallest digit to the right of x that is greater than arr[x]\n        int y = x + 1;\n        for (int i = x + 1; i < len; i++) {\n            if (arr[i] > arr[x] && arr[i] < arr[y]) {\n                y = i;\n            }\n        }\n        // Swap arr[x] and arr[y]\n        int temp = arr[x];\n        arr[x] = arr[y];\n        arr[y] = temp;\n        // Sort the digits to the right of x in ascending order\n        Array.Sort(arr, x + 1, len - x - 1);\n        // Convert the array to a string\n        string str = \"\";\n        for (int i = 0; i < len; i++) {\n            str += arr[i].ToString();\n        }\n        // Return the string as a long\n        return long.Parse(str);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbnsndg5l.cs(54,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpbnsndg5l.cs(55,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpbnsndg5l.cs(56,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        var j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpsfdahpaa.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to string\n        string s = n.ToString();\n        // Find the first decreasing digit\n        int i = s.Length - 2;\n        while (i >= 0 && s[i] >= s[i + 1]) {\n            i--;\n        }\n        // If there is no decreasing digit, the number is already the largest possible\n        if (i < 0) {\n            return -1;\n        }\n        // Find the smallest digit greater than s[i]\n        int j = s.Length - 1;\n        while (s[j] <= s[i]) {\n            j--;\n        }\n        // Swap the digits\n        char[] c = s.ToCharArray();\n        c[i] = s[j];\n        c[j] = s[i];\n        // Sort the digits after the swapped digit\n        Array.Sort(c, i + 1, c.Length - i - 1);\n        // Return the new number\n        return long.Parse(new string(c));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpyg0ej_4y.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpyg0ej_4y.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpyg0ej_4y.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        var j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return new string(digits);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122854,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpf0wtf5fq.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpf0wtf5fq.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpf0wtf5fq.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to string\n        string s = n.ToString();\n        // Find the first digit that is less than the digit to its right\n        int i = s.Length - 2;\n        while (i >= 0 && s[i] >= s[i + 1]) {\n            i--;\n        }\n        // If no such digit exists, the number is the largest possible\n        if (i < 0) {\n            return -1;\n        }\n        // Find the smallest digit to the right of i that is greater than s[i]\n        int j = s.Length - 1;\n        while (s[j] <= s[i]) {\n            j--;\n        }\n        // Swap s[i] and s[j]\n        char temp = s[i];\n        s = s.Remove(i, 1).Insert(i, s[j].ToString());\n        s = s.Remove(j, 1).Insert(j, temp.ToString());\n        // Reverse the digits to the right of i\n        char[] arr = s.Substring(i + 1).ToCharArray();\n        Array.Reverse(arr);\n        s = s.Remove(i + 1) + new string(arr);\n        // Return the result\n        return long.Parse(s);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp0g2ubtmz.cs(39,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp0g2ubtmz.cs(40,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp0g2ubtmz.cs(41,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to string\n        string s = n.ToString();\n        // Find the first digit that is less than the digit to the right of it\n        for (int i = s.Length - 2; i >= 0; i--) {\n            if (s[i] < s[i + 1]) {\n                // Find the smallest digit to the right of i that is greater than i\n                int j = s.Length - 1;\n                while (s[j] < s[i]) {\n                    j--;\n                }\n                // Swap i and j\n                char temp = s[i];\n                s[i] = s[j];\n                s[j] = temp;\n                // Reverse the digits to the right of i\n                string right = s.Substring(i + 1);\n                char[] rightArray = right.ToCharArray();\n                Array.Reverse(rightArray);\n                s = s.Substring(0, i + 1) + new string(rightArray);\n                // Convert to long and return\n                return long.Parse(s);\n            }\n        }\n        // If no such digit is found, return -1\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp4h0sa5l0.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp4h0sa5l0.cs(39,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp4h0sa5l0.cs(40,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to string\n        var s = n.ToString();\n        // Find the first decreasing digit\n        var i = s.Length - 2;\n        while (i >= 0 && s[i] >= s[i + 1]) i--;\n        if (i < 0) return -1;\n        // Find the smallest digit to the right of i that is greater than s[i]\n        var j = s.Length - 1;\n        while (s[j] <= s[i]) j--;\n        // Swap s[i] and s[j]\n        var c = s[i];\n        s = s.Remove(i, 1);\n        s = s.Insert(i, s[j].ToString());\n        s = s.Remove(j, 1);\n        s = s.Insert(j, c.ToString());\n        // Reverse the string from i + 1 to the end\n        var r = s.Substring(i + 1);\n        r = new string(r.Reverse().ToArray());\n        s = s.Remove(i + 1);\n        s = s.Insert(i + 1, r);\n        // Return the result\n        return long.Parse(s);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp223coh5h.cs(35,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp223coh5h.cs(36,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp223coh5h.cs(37,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var index = digits.Length - 1;\n        while (index > 0 && digits[index - 1] >= digits[index]) {\n            index--;\n        }\n        if (index <= 0) {\n            return -1;\n        }\n        var swapIndex = digits.Length - 1;\n        while (digits[swapIndex] <= digits[index - 1]) {\n            swapIndex--;\n        }\n        var temp = digits[index - 1];\n        digits[index - 1] = digits[swapIndex];\n        digits[swapIndex] = temp;\n        Array.Sort(digits, index, digits.Length - index);\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122854,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6xu8l8nl.cs(30,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp6xu8l8nl.cs(31,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp6xu8l8nl.cs(32,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // convert to string\n        string s = n.ToString();\n        // convert to char array\n        char[] c = s.ToCharArray();\n        // find the first index where the next number is bigger\n        int i = c.Length - 1;\n        while (i > 0 && c[i] <= c[i - 1]) {\n            i--;\n        }\n        // if i is 0 then there is no bigger number\n        if (i == 0) {\n            return -1;\n        }\n        // find the smallest number bigger than c[i - 1]\n        int j = c.Length - 1;\n        while (c[j] <= c[i - 1]) {\n            j--;\n        }\n        // swap c[i - 1] and c[j]\n        char temp = c[i - 1];\n        c[i - 1] = c[j];\n        c[j] = temp;\n        // reverse the rest of the array\n        Array.Reverse(c, i, c.Length - i);\n        // convert back to string\n        string result = new string(c);\n        // convert to long\n        return long.Parse(result);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp239cvjx4.cs(41,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp239cvjx4.cs(42,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp239cvjx4.cs(43,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var index = digits.Length - 2;\n        while (index >= 0 && digits[index] >= digits[index + 1]) {\n            index--;\n        }\n        if (index < 0) {\n            return -1;\n        }\n        var smallestIndex = index + 1;\n        for (var i = index + 2; i < digits.Length; i++) {\n            if (digits[i] > digits[index] && digits[i] <= digits[smallestIndex]) {\n                smallestIndex = i;\n            }\n        }\n        var temp = digits[index];\n        digits[index] = digits[smallestIndex];\n        digits[smallestIndex] = temp;\n        Array.Sort(digits, index + 1, digits.Length - index - 1);\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjiwc3o14.cs(32,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpjiwc3o14.cs(33,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpjiwc3o14.cs(34,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to string\n        string s = n.ToString();\n        // Find the first non-increasing digit\n        int i = s.Length - 1;\n        while (i > 0 && s[i - 1] >= s[i]) {\n            i--;\n        }\n        // If we found one, swap it with the next largest digit\n        if (i > 0) {\n            int j = s.Length - 1;\n            while (s[j] <= s[i - 1]) {\n                j--;\n            }\n            char temp = s[i - 1];\n            s = s.Remove(i - 1, 1).Insert(i - 1, s[j].ToString());\n            s = s.Remove(j, 1).Insert(j, temp.ToString());\n        }\n        // Reverse the rest of the string\n        s = s.Substring(0, i) + new string(s.Substring(i).Reverse().ToArray());\n        // Return the result\n        return long.Parse(s);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpqc4rrhi1.cs(34,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpqc4rrhi1.cs(35,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpqc4rrhi1.cs(36,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var index = digits.Length - 2;\n        while (index >= 0 && digits[index] >= digits[index + 1]) {\n            index--;\n        }\n        if (index == -1) {\n            return -1;\n        }\n        var smallest = index + 1;\n        for (var i = index + 2; i < digits.Length; i++) {\n            if (digits[i] > digits[index] && digits[i] <= digits[smallest]) {\n                smallest = i;\n            }\n        }\n        var temp = digits[index];\n        digits[index] = digits[smallest];\n        digits[smallest] = temp;\n        Array.Sort(digits, index + 1, digits.Length - index - 1);\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpyzchizu6.cs(32,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpyzchizu6.cs(33,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpyzchizu6.cs(34,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = new List<int>();\n        while (n > 0) {\n            digits.Add((int)(n % 10));\n            n /= 10;\n        }\n        digits.Reverse();\n        var i = digits.Count - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        var j = digits.Count - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Count - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        var result = 0L;\n        foreach (var digit in digits) {\n            result = result * 10 + digit;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1aldk8a7.cs(46,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp1aldk8a7.cs(47,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp1aldk8a7.cs(48,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to string\n        string s = n.ToString();\n        // Find the first decreasing digit\n        int i = s.Length - 2;\n        while (i >= 0 && s[i] >= s[i + 1]) i--;\n        if (i < 0) return -1;\n        // Find the smallest digit greater than s[i]\n        int j = s.Length - 1;\n        while (s[j] <= s[i]) j--;\n        // Swap s[i] and s[j]\n        char[] c = s.ToCharArray();\n        char temp = c[i];\n        c[i] = c[j];\n        c[j] = temp;\n        // Reverse the digits after s[i]\n        Array.Reverse(c, i + 1, c.Length - i - 1);\n        // Return the result\n        return long.Parse(new string(c));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpyajahgpe.cs(31,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpyajahgpe.cs(32,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpyajahgpe.cs(33,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        var j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpsfdahpaa.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Create a list of digits\n        List<int> digits = new List<int>();\n        while (n > 0) {\n            digits.Add((int)(n % 10));\n            n /= 10;\n        }\n        // Find the first digit that is smaller than the digit to its right\n        int i = digits.Count - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        // If no such digit exists, the number is the largest possible\n        if (i == 0) {\n            return -1;\n        }\n        // Find the smallest digit to the right of the pivot that is larger than the pivot\n        int j = digits.Count - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        // Swap the pivot with the smallest digit to its right that is larger than the pivot\n        int temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        // Reverse the digits to the right of the pivot\n        j = digits.Count - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        // Convert the list of digits back to a number\n        long result = 0;\n        foreach (int digit in digits) {\n            result = result * 10 + digit;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpwqiqedbf.cs(52,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpwqiqedbf.cs(53,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpwqiqedbf.cs(54,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        var j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpsfdahpaa.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) i--;\n        if (i == 0) return -1;\n        var j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) j--;\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        Array.Reverse(digits, i, digits.Length - i);\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplyxoncu9.cs(24,49): error CS1525: Invalid expression term 'object'\n/tmp/tmplyxoncu9.cs(25,49): error CS1525: Invalid expression term 'object'\n/tmp/tmplyxoncu9.cs(26,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var index = -1;\n        for (int i = digits.Length - 1; i > 0; i--) {\n            if (digits[i - 1] < digits[i]) {\n                index = i - 1;\n                break;\n            }\n        }\n        if (index == -1) {\n            return -1;\n        }\n        var smallest = index + 1;\n        for (int i = index + 2; i < digits.Length; i++) {\n            if (digits[i] > digits[index] && digits[i] <= digits[smallest]) {\n                smallest = i;\n            }\n        }\n        var temp = digits[index];\n        digits[index] = digits[smallest];\n        digits[smallest] = temp;\n        Array.Sort(digits, index + 1, digits.Length - index - 1);\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp2t2oibd7.cs(35,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp2t2oibd7.cs(36,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp2t2oibd7.cs(37,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) i--;\n        if (i == 0) return -1;\n        var j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) j--;\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnn79xtdz.cs(31,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpnn79xtdz.cs(32,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpnn79xtdz.cs(33,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        var j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return new string(digits);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122854,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpf0wtf5fq.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpf0wtf5fq.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpf0wtf5fq.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) i--;\n        if (i <= 0) return -1;\n        var j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) j--;\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa8cgmf_6.cs(31,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpa8cgmf_6.cs(32,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpa8cgmf_6.cs(33,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to string\n        string s = n.ToString();\n        // Find the first digit that is smaller than the digit to its right\n        int i = s.Length - 2;\n        while (i >= 0 && s[i] >= s[i + 1]) i--;\n        // If no such digit exists, the number is the largest possible\n        if (i < 0) return -1;\n        // Find the smallest digit to the right of i that is larger than s[i]\n        int j = s.Length - 1;\n        while (s[j] <= s[i]) j--;\n        // Swap s[i] and s[j]\n        char temp = s[i];\n        s = s.Remove(i, 1);\n        s = s.Insert(i, s[j].ToString());\n        s = s.Remove(j, 1);\n        s = s.Insert(j, temp.ToString());\n        // Reverse the string from i + 1 to the end\n        string end = s.Substring(i + 1);\n        char[] endArray = end.ToCharArray();\n        Array.Reverse(endArray);\n        end = new string(endArray);\n        s = s.Remove(i + 1);\n        s = s.Insert(i + 1, end);\n        // Return the result\n        return long.Parse(s);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpq64rxc1f.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpq64rxc1f.cs(39,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpq64rxc1f.cs(40,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        var j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpsfdahpaa.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to string, then to char array\n        char[] chars = n.ToString().ToCharArray();\n        // Find the first digit that is smaller than the digit to its right\n        int i = chars.Length - 2;\n        while (i >= 0 && chars[i] >= chars[i + 1]) {\n            i--;\n        }\n        // If no such digit exists, the number is already the largest possible\n        if (i < 0) {\n            return -1;\n        }\n        // Find the smallest digit to the right of the pivot that is larger than the pivot\n        int j = chars.Length - 1;\n        while (j >= 0 && chars[j] <= chars[i]) {\n            j--;\n        }\n        // Swap the pivot with the smallest digit to its right\n        char temp = chars[i];\n        chars[i] = chars[j];\n        chars[j] = temp;\n        // Reverse the digits to the right of the pivot\n        Array.Reverse(chars, i + 1, chars.Length - i - 1);\n        // Return the new number\n        return long.Parse(new string(chars));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8rhu33sv.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp8rhu33sv.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp8rhu33sv.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        var j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpsfdahpaa.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) i--;\n        if (i == 0) return -1;\n        var j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) j--;\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnn79xtdz.cs(31,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpnn79xtdz.cs(32,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpnn79xtdz.cs(33,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().Select(c => c - '0').ToArray();\n        int i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) i--;\n        if (i == 0) return -1;\n        int j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) j--;\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        Array.Sort(digits, i, digits.Length - i);\n        return long.Parse(new string(digits.Select(d => (char)(d + '0')).ToArray()));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp42yku82i.cs(24,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp42yku82i.cs(25,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp42yku82i.cs(26,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var index = digits.Length - 1;\n        while (index > 0 && digits[index - 1] >= digits[index]) {\n            index--;\n        }\n        if (index <= 0) {\n            return -1;\n        }\n        var swapIndex = digits.Length - 1;\n        while (digits[swapIndex] <= digits[index - 1]) {\n            swapIndex--;\n        }\n        var temp = digits[index - 1];\n        digits[index - 1] = digits[swapIndex];\n        digits[swapIndex] = temp;\n        swapIndex = digits.Length - 1;\n        while (index < swapIndex) {\n            temp = digits[index];\n            digits[index] = digits[swapIndex];\n            digits[swapIndex] = temp;\n            index++;\n            swapIndex--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplxjhj3h5.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmplxjhj3h5.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmplxjhj3h5.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to string, then to char array\n        char[] digits = n.ToString().ToCharArray();\n        // Find the first digit that is smaller than the digit to its right\n        int i = digits.Length - 2;\n        while (i >= 0 && digits[i] >= digits[i + 1]) {\n            i--;\n        }\n        // If no such digit exists, then no bigger number exists\n        if (i < 0) {\n            return -1;\n        }\n        // Find the smallest digit to the right of i that is greater than digits[i]\n        int j = digits.Length - 1;\n        while (j >= 0 && digits[j] <= digits[i]) {\n            j--;\n        }\n        // Swap digits[i] and digits[j]\n        char temp = digits[i];\n        digits[i] = digits[j];\n        digits[j] = temp;\n        // Reverse the digits to the right of i\n        Array.Reverse(digits, i + 1, digits.Length - (i + 1));\n        // Convert back to long and return\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpfkexynfm.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpfkexynfm.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpfkexynfm.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var index = digits.Length - 1;\n        while (index > 0 && digits[index - 1] >= digits[index]) {\n            index--;\n        }\n        if (index <= 0) {\n            return -1;\n        }\n        var swapIndex = digits.Length - 1;\n        while (digits[swapIndex] <= digits[index - 1]) {\n            swapIndex--;\n        }\n        var temp = digits[index - 1];\n        digits[index - 1] = digits[swapIndex];\n        digits[swapIndex] = temp;\n        Array.Reverse(digits, index, digits.Length - index);\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6tp62ca6.cs(30,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp6tp62ca6.cs(31,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp6tp62ca6.cs(32,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        var j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpsfdahpaa.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        var j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpsfdahpaa.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i == 0) {\n            return -1;\n        }\n        var j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpd2149gyt.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpd2149gyt.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpd2149gyt.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to string\n        var s = n.ToString();\n        // Find the first digit that is smaller than the digit to its right\n        var i = s.Length - 2;\n        while (i >= 0 && s[i] >= s[i + 1]) i--;\n        // If no such digit exists, the number is already the largest possible\n        if (i < 0) return -1;\n        // Find the smallest digit to the right of the pivot that is larger than the pivot\n        var j = s.Length - 1;\n        while (s[j] <= s[i]) j--;\n        // Swap the pivot with the smallest digit to its right that is larger than the pivot\n        var temp = s[i];\n        s = s.Remove(i, 1);\n        s = s.Insert(i, s[j].ToString());\n        s = s.Remove(j, 1);\n        s = s.Insert(j, temp.ToString());\n        // Sort the digits to the right of the pivot in ascending order\n        var sorted = s.Substring(i + 1).OrderBy(c => c).ToArray();\n        s = s.Remove(i + 1);\n        s = s.Insert(i + 1, new string(sorted));\n        // Return the new number\n        return long.Parse(s);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp265hs3jk.cs(35,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp265hs3jk.cs(36,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp265hs3jk.cs(37,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        int i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        int j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return new string(digits);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpg68xzlrc.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpg68xzlrc.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpg68xzlrc.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var len = digits.Length;\n        var i = len - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i == 0) {\n            return -1;\n        }\n        var j = len - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var tmp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = tmp;\n        j = len - 1;\n        while (i < j) {\n            tmp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = tmp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp2qun9y10.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp2qun9y10.cs(39,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp2qun9y10.cs(40,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = new List<int>();\n        while (n > 0) {\n            digits.Add((int)(n % 10));\n            n /= 10;\n        }\n        digits.Reverse();\n        var i = digits.Count - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i == 0) {\n            return -1;\n        }\n        var j = digits.Count - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Count - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        long result = 0;\n        foreach (var digit in digits) {\n            result = result * 10 + digit;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpldbljujy.cs(46,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpldbljujy.cs(47,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpldbljujy.cs(48,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to string\n        string s = n.ToString();\n        // Find the first index from the right where the number is smaller than the one to its right\n        int i = s.Length - 1;\n        while (i > 0 && s[i] <= s[i - 1]) i--;\n        // If we reached the beginning, there is no bigger number\n        if (i == 0) return -1;\n        // Find the smallest number to the right of i that is bigger than s[i - 1]\n        int j = i;\n        while (j < s.Length && s[j] > s[i - 1]) j++;\n        j--;\n        // Swap s[i - 1] and s[j]\n        char temp = s[i - 1];\n        s = s.Remove(i - 1, 1).Insert(i - 1, s[j].ToString());\n        s = s.Remove(j, 1).Insert(j, temp.ToString());\n        // Reverse the string from i to the end\n        s = s.Substring(0, i) + new string(s.Substring(i).Reverse().ToArray());\n        // Return the result\n        return long.Parse(s);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp89rxweur.cs(32,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp89rxweur.cs(33,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp89rxweur.cs(34,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = new List<int>();\n        while (n > 0) {\n            digits.Add((int)(n % 10));\n            n /= 10;\n        }\n        digits.Reverse();\n        var i = digits.Count - 2;\n        while (i >= 0 && digits[i] >= digits[i + 1]) {\n            i--;\n        }\n        if (i < 0) {\n            return -1;\n        }\n        var j = digits.Count - 1;\n        while (digits[j] <= digits[i]) {\n            j--;\n        }\n        var temp = digits[i];\n        digits[i] = digits[j];\n        digits[j] = temp;\n        digits.Reverse(i + 1, digits.Count - i - 1);\n        var result = 0L;\n        foreach (var digit in digits) {\n            result = result * 10 + digit;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplxfg0ul_.cs(39,49): error CS1525: Invalid expression term 'object'\n/tmp/tmplxfg0ul_.cs(40,49): error CS1525: Invalid expression term 'object'\n/tmp/tmplxfg0ul_.cs(41,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var s = n.ToString();\n        var chars = s.ToCharArray();\n        var len = chars.Length;\n        var i = len - 1;\n        while (i > 0 && chars[i - 1] >= chars[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        var j = len - 1;\n        while (j >= i && chars[j] <= chars[i - 1]) {\n            j--;\n        }\n        var temp = chars[i - 1];\n        chars[i - 1] = chars[j];\n        chars[j] = temp;\n        j = len - 1;\n        while (i < j) {\n            temp = chars[i];\n            chars[i] = chars[j];\n            chars[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(chars));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpy8khqc8s.cs(39,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpy8khqc8s.cs(40,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpy8khqc8s.cs(41,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var index = digits.Length - 2;\n        while (index >= 0 && digits[index] >= digits[index + 1]) {\n            index--;\n        }\n        if (index < 0) {\n            return -1;\n        }\n        var smallest = index + 1;\n        for (int i = index + 2; i < digits.Length; i++) {\n            if (digits[i] > digits[index] && digits[i] <= digits[smallest]) {\n                smallest = i;\n            }\n        }\n        var temp = digits[index];\n        digits[index] = digits[smallest];\n        digits[smallest] = temp;\n        Array.Sort(digits, index + 1, digits.Length - index - 1);\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp61if01jc.cs(32,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp61if01jc.cs(33,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp61if01jc.cs(34,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to string\n        string s = n.ToString();\n        // Find the first digit that is smaller than the digit to its right\n        int i = s.Length - 1;\n        while (i > 0 && s[i - 1] >= s[i]) {\n            i--;\n        }\n        // If there is no such digit, return -1\n        if (i == 0) {\n            return -1;\n        }\n        // Find the smallest digit to the right of the digit found above that is larger than it\n        int j = s.Length - 1;\n        while (s[j] <= s[i - 1]) {\n            j--;\n        }\n        // Swap the two digits\n        char temp = s[i - 1];\n        s = s.Remove(i - 1, 1);\n        s = s.Insert(i - 1, s[j].ToString());\n        s = s.Remove(j, 1);\n        s = s.Insert(j, temp.ToString());\n        // Reverse the digits to the right of the digit found above\n        string s1 = s.Substring(0, i);\n        string s2 = s.Substring(i);\n        s2 = new string(s2.Reverse().ToArray());\n        // Return the number\n        return long.Parse(s1 + s2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpn9o_itv_.cs(41,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpn9o_itv_.cs(42,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpn9o_itv_.cs(43,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var index = -1;\n        for (var i = digits.Length - 1; i > 0; i--) {\n            if (digits[i - 1] < digits[i]) {\n                index = i - 1;\n                break;\n            }\n        }\n        if (index == -1) return -1;\n        var smallest = index + 1;\n        for (var i = index + 2; i < digits.Length; i++) {\n            if (digits[i] > digits[index] && digits[i] <= digits[smallest]) {\n                smallest = i;\n            }\n        }\n        var temp = digits[index];\n        digits[index] = digits[smallest];\n        digits[smallest] = temp;\n        Array.Sort(digits, index + 1, digits.Length - index - 1);\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122854,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpitq1ng2s.cs(33,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpitq1ng2s.cs(34,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpitq1ng2s.cs(35,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) i--;\n        if (i == 0) return -1;\n        var j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) j--;\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnn79xtdz.cs(31,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpnn79xtdz.cs(32,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpnn79xtdz.cs(33,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to string\n        string s = n.ToString();\n        // Get the length\n        int len = s.Length;\n        // Create a list of characters\n        List<char> chars = new List<char>(s.ToCharArray());\n        // Create a list of integers\n        List<int> ints = new List<int>();\n        // Loop through the characters\n        for (int i = 0; i < len; i++) {\n            // Add the integer representation of the character to the list\n            ints.Add(int.Parse(chars[i].ToString()));\n        }\n        // Create a boolean to check if we have found the next biggest number\n        bool found = false;\n        // Create a variable to store the index of the number to swap\n        int swapIndex = 0;\n        // Create a variable to store the index of the number to swap with\n        int swapWithIndex = 0;\n        // Create a variable to store the number to swap\n        int swap = 0;\n        // Create a variable to store the number to swap with\n        int swapWith = 0;\n        // Loop through the integers\n        for (int i = len - 1; i > 0; i--) {\n            // Check if the current number is less than the next number\n            if (ints[i] > ints[i - 1]) {\n                // Set the swap index\n                swapIndex = i - 1;\n                // Set the swap number\n                swap = ints[swapIndex];\n                // Set the swap with index\n                swapWithIndex = i;\n                // Set the swap with number\n                swapWith = ints[swapWithIndex];\n                // Loop through the integers\n                for (int j = len - 1; j > swapIndex; j--) {\n                    // Check if the current number is less than the swap number\n                    if (ints[j] > swap) {\n                        // Set the swap with index\n                        swapWithIndex = j;\n                        // Set the swap with number\n                        swapWith = ints[swapWithIndex];\n                    }\n                }\n                // Swap the numbers\n                ints[swapIndex] = swapWith;\n                ints[swapWithIndex] = swap;\n                // Set\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1je0j1iv.cs(61,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmp1je0j1iv.cs(62,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp1je0j1iv.cs(63,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp1je0j1iv.cs(64,50): error CS1525: Invalid expression term 'object'\n/tmp/tmp1je0j1iv.cs(67,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        var j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return new string(digits);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122854,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpf0wtf5fq.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpf0wtf5fq.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpf0wtf5fq.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = new List<int>();\n        while (n > 0) {\n            digits.Add((int)(n % 10));\n            n /= 10;\n        }\n        digits.Reverse();\n        var i = digits.Count - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        var j = digits.Count - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Count - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        var result = 0L;\n        foreach (var digit in digits) {\n            result = result * 10 + digit;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1aldk8a7.cs(46,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp1aldk8a7.cs(47,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp1aldk8a7.cs(48,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var len = digits.Length;\n        var i = len - 1;\n        while (i > 0 && digits[i - 1] >= digits[i])\n            i--;\n        if (i <= 0)\n            return -1;\n        var j = len - 1;\n        while (digits[j] <= digits[i - 1])\n            j--;\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = len - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpxj4kzluw.cs(35,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpxj4kzluw.cs(36,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpxj4kzluw.cs(37,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Get the digits of the number\n        var digits = n.ToString().ToCharArray();\n        // Find the first digit that is smaller than the digit to its right\n        int i = digits.Length - 2;\n        while (i >= 0 && digits[i] >= digits[i + 1]) {\n            i--;\n        }\n        // If no such digit exists, the number is the largest possible\n        if (i < 0) {\n            return -1;\n        }\n        // Find the smallest digit to the right of i that is larger than digits[i]\n        int j = digits.Length - 1;\n        while (digits[j] <= digits[i]) {\n            j--;\n        }\n        // Swap digits[i] and digits[j]\n        var temp = digits[i];\n        digits[i] = digits[j];\n        digits[j] = temp;\n        // Reverse the digits to the right of i\n        Array.Reverse(digits, i + 1, digits.Length - (i + 1));\n        // Return the new number\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpo3fr9o0r.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpo3fr9o0r.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpo3fr9o0r.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to string\n        string s = n.ToString();\n        // Find the first decreasing digit\n        int i = s.Length - 2;\n        while (i >= 0 && s[i] >= s[i + 1]) {\n            i--;\n        }\n        // If no decreasing digit, return -1\n        if (i < 0) {\n            return -1;\n        }\n        // Find the first digit greater than the decreasing digit\n        int j = s.Length - 1;\n        while (s[j] <= s[i]) {\n            j--;\n        }\n        // Swap the decreasing digit and the greater digit\n        char[] c = s.ToCharArray();\n        char temp = c[i];\n        c[i] = c[j];\n        c[j] = temp;\n        // Reverse the digits after the decreasing digit\n        Array.Reverse(c, i + 1, c.Length - i - 1);\n        // Return the new number\n        return long.Parse(new string(c));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpszhoxrjl.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpszhoxrjl.cs(39,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpszhoxrjl.cs(40,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to string\n        var s = n.ToString();\n        // Find the first index where the digit is less than the digit to the right\n        var i = s.Length - 1;\n        while (i > 0 && s[i - 1] >= s[i]) {\n            i--;\n        }\n        // If i is 0, then the number is already the largest possible\n        if (i == 0) {\n            return -1;\n        }\n        // Find the smallest digit to the right of i that is greater than s[i - 1]\n        var j = s.Length - 1;\n        while (s[j] <= s[i - 1]) {\n            j--;\n        }\n        // Swap s[i - 1] and s[j]\n        var temp = s[i - 1];\n        s[i - 1] = s[j];\n        s[j] = temp;\n        // Reverse the digits to the right of i\n        var s2 = s.Substring(i);\n        var s3 = new string(s2.Reverse().ToArray());\n        // Return the new number\n        return long.Parse(s.Substring(0, i) + s3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpd95uw4cs.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpd95uw4cs.cs(39,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpd95uw4cs.cs(40,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        var j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpsfdahpaa.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var max = digits.Max();\n        var maxIndex = Array.IndexOf(digits, max);\n        var min = digits.Min();\n        var minIndex = Array.IndexOf(digits, min);\n        if (maxIndex == 0) {\n            var temp = digits[minIndex];\n            digits[minIndex] = digits[maxIndex];\n            digits[maxIndex] = temp;\n        } else {\n            var temp = digits[minIndex];\n            digits[minIndex] = digits[maxIndex];\n            digits[maxIndex] = temp;\n            Array.Sort(digits, 0, maxIndex);\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvil_bzov.cs(29,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpvil_bzov.cs(30,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpvil_bzov.cs(31,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to string\n        string s = n.ToString();\n        // Find the first digit that is smaller than the digit to its right\n        int i = s.Length - 2;\n        while (i >= 0 && s[i] >= s[i + 1]) {\n            i--;\n        }\n        // If no such digit exists, the number is the largest possible\n        if (i < 0) {\n            return -1;\n        }\n        // Find the smallest digit to the right of i that is larger than s[i]\n        int j = s.Length - 1;\n        while (s[j] <= s[i]) {\n            j--;\n        }\n        // Swap s[i] and s[j]\n        char temp = s[i];\n        s = s.Remove(i, 1).Insert(i, s[j].ToString());\n        s = s.Remove(j, 1).Insert(j, temp.ToString());\n        // Reverse the digits to the right of i\n        string right = s.Substring(i + 1);\n        char[] charArray = right.ToCharArray();\n        Array.Reverse(charArray);\n        right = new string(charArray);\n        s = s.Remove(i + 1);\n        s = s.Insert(i + 1, right);\n        // Return the new number\n        return long.Parse(s);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpwymrxivn.cs(42,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpwymrxivn.cs(43,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpwymrxivn.cs(44,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to string\n        string s = n.ToString();\n        // Convert to char array\n        char[] c = s.ToCharArray();\n        // Get length\n        int len = c.Length;\n        // Find the first index from the right where the digit is less than the next digit\n        int i = len - 1;\n        while (i > 0 && c[i - 1] >= c[i]) {\n            i--;\n        }\n        // If no such index exists, then the number is the largest possible number\n        if (i <= 0) {\n            return -1;\n        }\n        // Find the smallest digit to the right of the index that is greater than the digit at the index\n        int j = len - 1;\n        while (c[j] <= c[i - 1]) {\n            j--;\n        }\n        // Swap the digits\n        char temp = c[i - 1];\n        c[i - 1] = c[j];\n        c[j] = temp;\n        // Reverse the digits to the right of the index\n        j = len - 1;\n        while (i < j) {\n            temp = c[i];\n            c[i] = c[j];\n            c[j] = temp;\n            i++;\n            j--;\n        }\n        // Convert to string\n        s = new string(c);\n        // Convert to long\n        long result = long.Parse(s);\n        // Return the result\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp4qod46a8.cs(52,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp4qod46a8.cs(53,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp4qod46a8.cs(54,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to string\n        string s = n.ToString();\n        // Find the first digit that is smaller than the digit to its right\n        int i = s.Length - 2;\n        while (i >= 0 && s[i] >= s[i + 1])\n            i--;\n        // If no such digit exists, the number is the largest possible\n        if (i < 0)\n            return -1;\n        // Find the smallest digit to the right of i that is larger than s[i]\n        int j = s.Length - 1;\n        while (s[j] <= s[i])\n            j--;\n        // Swap s[i] and s[j]\n        char temp = s[i];\n        s = s.Remove(i, 1);\n        s = s.Insert(i, s[j].ToString());\n        s = s.Remove(j, 1);\n        s = s.Insert(j, temp.ToString());\n        // Reverse the digits to the right of i\n        char[] arr = s.Substring(i + 1).ToCharArray();\n        Array.Reverse(arr);\n        s = s.Remove(i + 1);\n        s += new string(arr);\n        // Return the new number\n        return long.Parse(s);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpayheilt4.cs(39,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpayheilt4.cs(40,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpayheilt4.cs(41,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        var j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpsfdahpaa.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var i = digits.Length - 2;\n        while (i >= 0 && digits[i] >= digits[i + 1]) {\n            i--;\n        }\n        if (i < 0) {\n            return -1;\n        }\n        var j = digits.Length - 1;\n        while (digits[j] <= digits[i]) {\n            j--;\n        }\n        var temp = digits[i];\n        digits[i] = digits[j];\n        digits[j] = temp;\n        Array.Reverse(digits, i + 1, digits.Length - i - 1);\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpyjvkiskh.cs(30,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpyjvkiskh.cs(31,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpyjvkiskh.cs(32,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        int i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        int j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpmlg_84e8.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpmlg_84e8.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpmlg_84e8.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var len = digits.Length;\n        var i = len - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        var j = len - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var tmp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = tmp;\n        j = len - 1;\n        while (i < j) {\n            tmp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = tmp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp284jtqpq.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp284jtqpq.cs(39,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp284jtqpq.cs(40,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = new List<int>();\n        while (n > 0) {\n            digits.Add((int)(n % 10));\n            n /= 10;\n        }\n        digits.Reverse();\n        var index = -1;\n        for (var i = digits.Count - 1; i > 0; i--) {\n            if (digits[i] > digits[i - 1]) {\n                index = i - 1;\n                break;\n            }\n        }\n        if (index == -1) {\n            return -1;\n        }\n        var min = digits[index + 1];\n        var minIndex = index + 1;\n        for (var i = index + 2; i < digits.Count; i++) {\n            if (digits[i] > digits[index] && digits[i] < min) {\n                min = digits[i];\n                minIndex = i;\n            }\n        }\n        var temp = digits[index];\n        digits[index] = digits[minIndex];\n        digits[minIndex] = temp;\n        digits.Sort(index + 1, digits.Count - index - 1, Comparer<int>.Default);\n        var result = 0L;\n        for (var i = 0; i < digits.Count; i++) {\n            result = result * 10 + digits[i];\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp7ob3xx37.cs(46,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp7ob3xx37.cs(47,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp7ob3xx37.cs(48,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        var j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return Int64.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpf47e159b.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpf47e159b.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpf47e159b.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert the number to a string\n        string s = n.ToString();\n        // Convert the string to a list of characters\n        List<char> chars = s.ToList();\n        // Find the first index where the number is less than the next number\n        int i = chars.Count - 1;\n        while (i > 0 && chars[i - 1] >= chars[i]) {\n            i--;\n        }\n        // If the index is 0, then the number is already the largest possible\n        if (i <= 0) {\n            return -1;\n        }\n        // Find the next largest number\n        int j = chars.Count - 1;\n        while (j > 0 && chars[j] <= chars[i - 1]) {\n            j--;\n        }\n        // Swap the two numbers\n        char temp = chars[i - 1];\n        chars[i - 1] = chars[j];\n        chars[j] = temp;\n        // Reverse the numbers after the index\n        j = chars.Count - 1;\n        while (i < j) {\n            temp = chars[i];\n            chars[i] = chars[j];\n            chars[j] = temp;\n            i++;\n            j--;\n        }\n        // Convert the list of characters back to a string\n        s = new string(chars.ToArray());\n        // Convert the string to a long\n        long result = long.Parse(s);\n        // Return the result\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpfs8d_ndf.cs(50,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpfs8d_ndf.cs(51,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpfs8d_ndf.cs(52,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var max = digits.Length - 1;\n        var i = max;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        var j = max;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = max;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmppzr62tvz.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmppzr62tvz.cs(39,49): error CS1525: Invalid expression term 'object'\n/tmp/tmppzr62tvz.cs(40,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var length = digits.Length;\n        var i = length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) i--;\n        if (i == 0) return -1;\n        var j = length - 1;\n        while (digits[j] <= digits[i - 1]) j--;\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmphisot0r9.cs(32,49): error CS1525: Invalid expression term 'object'\n/tmp/tmphisot0r9.cs(33,49): error CS1525: Invalid expression term 'object'\n/tmp/tmphisot0r9.cs(34,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i])\n            i--;\n        if (i <= 0)\n            return -1;\n        var j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1])\n            j--;\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkd2hnvod.cs(34,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpkd2hnvod.cs(35,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpkd2hnvod.cs(36,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var s = n.ToString();\n        var l = s.Length;\n        var a = s.ToCharArray();\n        var i = l - 1;\n        while (i > 0 && a[i - 1] >= a[i]) i--;\n        if (i == 0) return -1;\n        var j = l - 1;\n        while (a[j] <= a[i - 1]) j--;\n        var t = a[i - 1];\n        a[i - 1] = a[j];\n        a[j] = t;\n        Array.Reverse(a, i, l - i);\n        return long.Parse(new string(a));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5a7of86e.cs(26,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp5a7of86e.cs(27,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp5a7of86e.cs(28,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to string\n        var s = n.ToString();\n        // Find the first decreasing digit\n        var i = s.Length - 1;\n        while (i > 0 && s[i - 1] >= s[i]) i--;\n        // If no decreasing digit, return -1\n        if (i == 0) return -1;\n        // Find the smallest digit greater than s[i - 1]\n        var j = s.Length - 1;\n        while (s[j] <= s[i - 1]) j--;\n        // Swap s[i - 1] and s[j]\n        var t = s[i - 1];\n        s = s.Remove(i - 1, 1).Insert(i - 1, s[j].ToString());\n        s = s.Remove(j, 1).Insert(j, t.ToString());\n        // Reverse s[i..]\n        var r = s.Substring(i).Reverse().ToArray();\n        s = s.Remove(i, s.Length - i).Insert(i, new string(r));\n        // Return the result\n        return long.Parse(s);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp542sxm1q.cs(32,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp542sxm1q.cs(33,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp542sxm1q.cs(34,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var len = digits.Length;\n        var i = len - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        var j = len - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = len - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1pct5zdt.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp1pct5zdt.cs(39,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp1pct5zdt.cs(40,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to string\n        string s = n.ToString();\n        // Get the length\n        int len = s.Length;\n        // Create a list of chars\n        List<char> chars = new List<char>();\n        // Add all the chars to the list\n        for (int i = 0; i < len; i++) {\n            chars.Add(s[i]);\n        }\n        // Sort the list\n        chars.Sort();\n        // Create a new string\n        string newS = \"\";\n        // Add all the chars to the new string\n        for (int i = 0; i < len; i++) {\n            newS += chars[i];\n        }\n        // Convert the string to a long\n        long newN = long.Parse(newS);\n        // If the new number is the same as the old number, return -1\n        if (newN == n) {\n            return -1;\n        }\n        // Return the new number\n        return newN;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3kh7yfaw.cs(39,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp3kh7yfaw.cs(40,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp3kh7yfaw.cs(41,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) i--;\n        if (i == 0) return -1;\n        var j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) j--;\n        var tmp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = tmp;\n        Array.Reverse(digits, i, digits.Length - i);\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpldwxzyss.cs(24,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpldwxzyss.cs(25,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpldwxzyss.cs(26,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to string\n        string s = n.ToString();\n        // Find the first digit that is smaller than the digit to its right\n        int i = s.Length - 2;\n        while (i >= 0 && s[i] >= s[i + 1])\n            i--;\n        // If there is no such digit, the number is the largest possible\n        if (i < 0)\n            return -1;\n        // Find the smallest digit to the right of i that is larger than s[i]\n        int j = s.Length - 1;\n        while (s[j] <= s[i])\n            j--;\n        // Swap s[i] and s[j]\n        char temp = s[i];\n        s = s.Remove(i, 1);\n        s = s.Insert(i, s[j].ToString());\n        s = s.Remove(j, 1);\n        s = s.Insert(j, temp.ToString());\n        // Reverse the digits to the right of i\n        s = s.Remove(i + 1);\n        s = s.Insert(i + 1, new string(s.Substring(i + 1).Reverse().ToArray()));\n        // Return the result\n        return long.Parse(s);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpe9nxdiyq.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpe9nxdiyq.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpe9nxdiyq.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to string\n        string s = n.ToString();\n        // Find the first digit that is less than the digit to its right\n        int i = s.Length - 2;\n        while (i >= 0 && s[i] >= s[i + 1])\n            i--;\n        // If no such digit exists, the number is the largest possible\n        if (i < 0)\n            return -1;\n        // Find the smallest digit to the right of i that is greater than s[i]\n        int j = s.Length - 1;\n        while (s[j] <= s[i])\n            j--;\n        // Swap s[i] and s[j]\n        char temp = s[i];\n        s = s.Remove(i, 1);\n        s = s.Insert(i, s[j].ToString());\n        s = s.Remove(j, 1);\n        s = s.Insert(j, temp.ToString());\n        // Reverse the digits to the right of i\n        s = s.Substring(0, i + 1) + new string(s.Substring(i + 1).Reverse().ToArray());\n        // Convert back to long\n        return long.Parse(s);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpewwq8fu9.cs(36,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpewwq8fu9.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpewwq8fu9.cs(38,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        char[] digits = n.ToString().ToCharArray();\n        int i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i])\n            i--;\n        if (i <= 0)\n            return -1;\n        int j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1])\n            j--;\n        char temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp66ifbm3_.cs(34,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp66ifbm3_.cs(35,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp66ifbm3_.cs(36,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to string\n        string s = n.ToString();\n        // Find the first digit that is smaller than the digit to its right\n        int i = s.Length - 2;\n        while (i >= 0 && s[i] >= s[i + 1]) {\n            i--;\n        }\n        // If no such digit exists, the number is already the largest possible\n        if (i < 0) {\n            return -1;\n        }\n        // Find the smallest digit to the right of i that is larger than s[i]\n        int j = s.Length - 1;\n        while (s[j] <= s[i]) {\n            j--;\n        }\n        // Swap s[i] and s[j]\n        char temp = s[i];\n        s = s.Remove(i, 1).Insert(i, s[j].ToString());\n        s = s.Remove(j, 1).Insert(j, temp.ToString());\n        // Reverse the digits to the right of i\n        char[] arr = s.Substring(i + 1).ToCharArray();\n        Array.Reverse(arr);\n        s = s.Remove(i + 1).Insert(i + 1, new string(arr));\n        // Return the new number\n        return long.Parse(s);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp2wvrvodb.cs(39,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp2wvrvodb.cs(40,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp2wvrvodb.cs(41,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        var j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpsfdahpaa.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to string\n        string s = n.ToString();\n        // Find the largest index i such that s[i] < s[i + 1]. If no such index exists, the permutation is the last permutation.\n        int i = s.Length - 2;\n        while (i >= 0 && s[i] >= s[i + 1]) {\n            i--;\n        }\n        if (i < 0) {\n            return -1;\n        }\n        // Find the largest index j such that j \u2265 i and s[j] > s[i]. Such a j must exist, since i + 1 is such an index.\n        int j = s.Length - 1;\n        while (s[j] <= s[i]) {\n            j--;\n        }\n        // Swap s[i] with s[j].\n        char temp = s[i];\n        s = s.Remove(i, 1).Insert(i, s[j].ToString());\n        s = s.Remove(j, 1).Insert(j, temp.ToString());\n        // Reverse the order of all of the elements after index i till the last element.\n        string s1 = s.Substring(0, i + 1);\n        string s2 = s.Substring(i + 1);\n        s2 = new string(s2.Reverse().ToArray());\n        s = s1 + s2;\n        return long.Parse(s);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8m5uonpi.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp8m5uonpi.cs(39,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp8m5uonpi.cs(40,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var len = digits.Length;\n        var i = len - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        var j = len - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = len - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1pct5zdt.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp1pct5zdt.cs(39,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp1pct5zdt.cs(40,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        int i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        int j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpmlg_84e8.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpmlg_84e8.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpmlg_84e8.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var index = digits.Length - 2;\n        while (index >= 0 && digits[index] >= digits[index + 1]) {\n            index--;\n        }\n        if (index < 0) {\n            return -1;\n        }\n        var smallest = index + 1;\n        for (var i = index + 2; i < digits.Length; i++) {\n            if (digits[i] > digits[index] && digits[i] <= digits[smallest]) {\n                smallest = i;\n            }\n        }\n        var temp = digits[index];\n        digits[index] = digits[smallest];\n        digits[smallest] = temp;\n        Array.Sort(digits, index + 1, digits.Length - index - 1);\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkvqsv3u8.cs(32,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpkvqsv3u8.cs(33,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpkvqsv3u8.cs(34,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = new List<int>();\n        while (n > 0) {\n            digits.Add((int)(n % 10));\n            n /= 10;\n        }\n        digits.Reverse();\n        var i = digits.Count - 1;\n        while (i > 0 && digits[i - 1] >= digits[i])\n            i--;\n        if (i <= 0)\n            return -1;\n        var j = digits.Count - 1;\n        while (digits[j] <= digits[i - 1])\n            j--;\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Count - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        long result = 0;\n        foreach (var digit in digits)\n            result = result * 10 + digit;\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjv4cmmxm.cs(42,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpjv4cmmxm.cs(43,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpjv4cmmxm.cs(44,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to char array\n        char[] digits = n.ToString().ToCharArray();\n        // Find the first digit that is less than the digit to its right\n        int i = digits.Length - 2;\n        while (i >= 0 && digits[i] >= digits[i + 1]) {\n            i--;\n        }\n        // If no such digit exists, the number is the largest possible\n        if (i < 0) {\n            return -1;\n        }\n        // Find the smallest digit to the right of the pivot that is greater than the pivot\n        int j = digits.Length - 1;\n        while (digits[j] <= digits[i]) {\n            j--;\n        }\n        // Swap the pivot with the smallest digit to its right\n        char temp = digits[i];\n        digits[i] = digits[j];\n        digits[j] = temp;\n        // Reverse the digits to the right of the pivot\n        Array.Reverse(digits, i + 1, digits.Length - i - 1);\n        // Return the new number\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpq8n1ntr2.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpq8n1ntr2.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpq8n1ntr2.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = new List<int>();\n        while (n > 0) {\n            digits.Add((int)(n % 10));\n            n /= 10;\n        }\n        digits.Reverse();\n        var i = digits.Count - 1;\n        while (i > 0 && digits[i - 1] >= digits[i])\n            i--;\n        if (i <= 0)\n            return -1;\n        var j = digits.Count - 1;\n        while (digits[j] <= digits[i - 1])\n            j--;\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Count - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        var result = 0L;\n        foreach (var digit in digits)\n            result = result * 10 + digit;\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpt0nf2idb.cs(42,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpt0nf2idb.cs(43,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpt0nf2idb.cs(44,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        var j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpsfdahpaa.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        var j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpsfdahpaa.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to string\n        var s = n.ToString();\n        // Get the digits\n        var digits = s.Select(c => c - '0').ToArray();\n        // Find the first digit that is smaller than the digit to its right\n        var i = digits.Length - 2;\n        while (i >= 0 && digits[i] >= digits[i + 1]) {\n            i--;\n        }\n        // If we found one, swap it with the smallest digit to its right that is larger than it\n        if (i >= 0) {\n            var j = digits.Length - 1;\n            while (digits[j] <= digits[i]) {\n                j--;\n            }\n            var temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n        }\n        // Reverse the digits to the right of the one we swapped\n        Array.Reverse(digits, i + 1, digits.Length - i - 1);\n        // Return the result\n        return long.Parse(new string(digits.Select(d => (char)(d + '0')).ToArray()));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_qs4fccn.cs(36,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp_qs4fccn.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp_qs4fccn.cs(38,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var i = digits.Length - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        var j = digits.Length - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Length - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1665517275,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpsfdahpaa.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(38,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpsfdahpaa.cs(39,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to string\n        string s = n.ToString();\n        // Get the length of the string\n        int len = s.Length;\n        // Create a list of the digits\n        List<int> digits = new List<int>();\n        for (int i = 0; i < len; i++) {\n            digits.Add(int.Parse(s[i].ToString()));\n        }\n        // Find the first digit that is smaller than the digit after it\n        int index = -1;\n        for (int i = 0; i < len - 1; i++) {\n            if (digits[i] < digits[i + 1]) {\n                index = i;\n                break;\n            }\n        }\n        // If no such digit exists, return -1\n        if (index == -1) {\n            return -1;\n        }\n        // Find the smallest digit that is larger than the digit at index\n        int min = index + 1;\n        for (int i = index + 2; i < len; i++) {\n            if (digits[i] > digits[index] && digits[i] < digits[min]) {\n                min = i;\n            }\n        }\n        // Swap the digits at index and min\n        int temp = digits[index];\n        digits[index] = digits[min];\n        digits[min] = temp;\n        // Sort the digits after index\n        digits.Sort(index + 1, len - index - 1, null);\n        // Convert the list to a string\n        string result = \"\";\n        for (int i = 0; i < len; i++) {\n            result += digits[i].ToString();\n        }\n        // Return the result\n        return long.Parse(result);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6u3n7nph.cs(54,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp6u3n7nph.cs(55,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp6u3n7nph.cs(56,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var index = digits.Length - 1;\n        while (index > 0 && digits[index - 1] >= digits[index]) {\n            index--;\n        }\n        if (index <= 0) {\n            return -1;\n        }\n        var swapIndex = digits.Length - 1;\n        while (digits[swapIndex] <= digits[index - 1]) {\n            swapIndex--;\n        }\n        var temp = digits[index - 1];\n        digits[index - 1] = digits[swapIndex];\n        digits[swapIndex] = temp;\n        Array.Reverse(digits, index, digits.Length - index);\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6tp62ca6.cs(30,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp6tp62ca6.cs(31,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp6tp62ca6.cs(32,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var last = digits.Length - 1;\n        var i = last;\n        while (i > 0 && digits[i - 1] >= digits[i])\n            i--;\n        if (i == 0)\n            return -1;\n        var j = last;\n        while (digits[j] <= digits[i - 1])\n            j--;\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = last;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpde8vgvr6.cs(35,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpde8vgvr6.cs(36,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpde8vgvr6.cs(37,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to string\n        var s = n.ToString();\n        // Find the first decreasing digit\n        int i = s.Length - 2;\n        while (i >= 0 && s[i] >= s[i + 1]) i--;\n        // If no such digit, then n is the largest possible number\n        if (i < 0) return -1;\n        // Find the smallest digit greater than s[i] to the right of s[i]\n        int j = s.Length - 1;\n        while (s[j] <= s[i]) j--;\n        // Swap s[i] and s[j]\n        var t = s[i];\n        s = s.Remove(i, 1);\n        s = s.Insert(i, s[j].ToString());\n        s = s.Remove(j, 1);\n        s = s.Insert(j, t.ToString());\n        // Sort the digits to the right of s[i] in ascending order\n        var sorted = s.Substring(i + 1).OrderBy(c => c);\n        s = s.Remove(i + 1);\n        s += new string(sorted.ToArray());\n        // Return the result\n        return long.Parse(s);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpmg7onxan.cs(35,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpmg7onxan.cs(36,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpmg7onxan.cs(37,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = n.ToString().ToCharArray();\n        var index = digits.Length - 2;\n        while (index >= 0 && digits[index] >= digits[index + 1]) {\n            index--;\n        }\n        if (index < 0) {\n            return -1;\n        }\n        var smallestIndex = index + 1;\n        for (var i = index + 2; i < digits.Length; i++) {\n            if (digits[i] > digits[index] && digits[i] <= digits[smallestIndex]) {\n                smallestIndex = i;\n            }\n        }\n        var temp = digits[index];\n        digits[index] = digits[smallestIndex];\n        digits[smallestIndex] = temp;\n        Array.Sort(digits, index + 1, digits.Length - index - 1);\n        return long.Parse(new string(digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjiwc3o14.cs(32,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpjiwc3o14.cs(33,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpjiwc3o14.cs(34,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // If the number is less than 10, there is no bigger number\n        if (n < 10) return -1;\n        // Convert the number to a list of digits\n        var digits = n.ToString().Select(c => c - '0').ToList();\n        // Find the first digit that is less than the digit after it\n        int i = digits.Count - 2;\n        while (i >= 0 && digits[i] >= digits[i + 1]) i--;\n        // If there is no such digit, the number is already the biggest\n        if (i < 0) return -1;\n        // Find the smallest digit that is greater than the digit at i\n        int j = digits.Count - 1;\n        while (digits[j] <= digits[i]) j--;\n        // Swap the digits at i and j\n        var temp = digits[i];\n        digits[i] = digits[j];\n        digits[j] = temp;\n        // Reverse the digits after i\n        digits.Reverse(i + 1, digits.Count - i - 1);\n        // Convert the list of digits back to a number\n        return BigInteger.Parse(string.Join(\"\", digits));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122855,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5odm3gyp.cs(33,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp5odm3gyp.cs(34,49): error CS1525: Invalid expression term 'object'\n/tmp/tmp5odm3gyp.cs(35,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        var digits = new List<int>();\n        while (n > 0) {\n            digits.Add((int)(n % 10));\n            n /= 10;\n        }\n        digits.Reverse();\n        var i = digits.Count - 1;\n        while (i > 0 && digits[i - 1] >= digits[i]) {\n            i--;\n        }\n        if (i <= 0) {\n            return -1;\n        }\n        var j = digits.Count - 1;\n        while (digits[j] <= digits[i - 1]) {\n            j--;\n        }\n        var temp = digits[i - 1];\n        digits[i - 1] = digits[j];\n        digits[j] = temp;\n        j = digits.Count - 1;\n        while (i < j) {\n            temp = digits[i];\n            digits[i] = digits[j];\n            digits[j] = temp;\n            i++;\n            j--;\n        }\n        long result = 0;\n        foreach (var d in digits) {\n            result = result * 10 + d;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122856,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprgl8qmok.cs(46,49): error CS1525: Invalid expression term 'object'\n/tmp/tmprgl8qmok.cs(47,49): error CS1525: Invalid expression term 'object'\n/tmp/tmprgl8qmok.cs(48,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to create the next bigger number by rearranging the digits of a given number.\n    public static object RearrangeBigger(long n) {\n        // Convert to string\n        string s = n.ToString();\n        // Find the first decreasing digit\n        int i = s.Length - 1;\n        while (i > 0 && s[i - 1] >= s[i]) i--;\n        // If no decreasing digit, return -1\n        if (i == 0) return -1;\n        // Find the smallest digit greater than s[i - 1]\n        int j = s.Length - 1;\n        while (s[j] <= s[i - 1]) j--;\n        // Swap s[i - 1] and s[j]\n        char temp = s[i - 1];\n        s = s.Remove(i - 1, 1);\n        s = s.Insert(i - 1, s[j].ToString());\n        s = s.Remove(j, 1);\n        s = s.Insert(j, temp.ToString());\n        // Reverse the digits after s[i - 1]\n        string suffix = s.Substring(i);\n        suffix = new string(suffix.Reverse().ToArray());\n        s = s.Remove(i);\n        s += suffix;\n        // Return the result\n        return long.Parse(s);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RearrangeBigger((12L)).Equals((object(21L))));\n    Debug.Assert(RearrangeBigger((10L)).Equals((object(false))));\n    Debug.Assert(RearrangeBigger((102L)).Equals((object(120L))));\n    }\n\n}\n",
      "timestamp": 1666122856,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpctfccdk7.cs(36,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpctfccdk7.cs(37,49): error CS1525: Invalid expression term 'object'\n/tmp/tmpctfccdk7.cs(38,50): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
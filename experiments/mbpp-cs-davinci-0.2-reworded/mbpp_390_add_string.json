{
  "name": "mbpp_390_add_string",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to apply a given format string to all of the elements in a list.\n    public static List<string> AddString(object list_, string str) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_390_add_string.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(AddString((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (\"temp{0}\")).Equals((new List<string>(new string[]{(string)\"temp1\", (string)\"temp2\", (string)\"temp3\", (string)\"temp4\"}))));\n    Debug.Assert(AddString((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\", (string)\"d\"})), (\"python{0}\")).Equals((new List<string>(new string[]{(string)\"pythona\", (string)\"pythonb\", (string)\"pythonc\", (string)\"pythond\"}))));\n    Debug.Assert(AddString((new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L})), (\"string{0}\")).Equals((new List<string>(new string[]{(string)\"string5\", (string)\"string6\", (string)\"string7\", (string)\"string8\"}))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        var list = (List<object>)list_;\n        var result = new List<string>();\n        foreach (var item in list) {\n            result.Add(String.Format(str, item));\n        }\n        return result;",
    "        var list = (List<object>)list_;\n        var result = new List<string>();\n        foreach (var item in list) {\n            result.Add(string.Format(str, item));\n        }\n        return result;",
    "        var list = (List<object>)list_;\n        var result = new List<string>();\n        foreach (var item in list) {\n            result.Add(String.Format(str, item));\n        }\n        return result;",
    "        var list = (List<object>)list_;\n        var result = new List<string>();\n        foreach (var x in list) {\n            result.Add(string.Format(str, x));\n        }\n        return result;",
    "        var list = (List<object>)list_;\n        var result = new List<string>();\n        foreach (var item in list) {\n            result.Add(string.Format(str, item));\n        }\n        return result;",
    "        var list = (List<object>)list_;\n        var result = new List<string>();\n        foreach (var item in list) {\n            result.Add(String.Format(str, item));\n        }\n        return result;",
    "        var list = (List<object>)list_;\n        var result = new List<string>();\n        foreach (var item in list) {\n            result.Add(String.Format(str, item));\n        }\n        return result;",
    "        var list = (List<object>)list_;\n        var result = new List<string>();\n        foreach (var item in list) {\n            result.Add(string.Format(str, item));\n        }\n        return result;",
    "        var list = (List<object>)list_;\n        var result = new List<string>();\n        foreach (var item in list) {\n            result.Add(string.Format(str, item));\n        }\n        return result;",
    "        List<string> list = (List<string>)list_;\n        List<string> result = new List<string>();\n        foreach (var item in list) {\n            result.Add(str + item);\n        }\n        return result;",
    "        var list = (List<object>)list_;\n        return list.Select(x => str.Replace(\"{}\", x.ToString())).ToList();",
    "        var list = (List<object>)list_;\n        var result = new List<string>();\n        foreach (var item in list) {\n            result.Add(String.Format(str, item));\n        }\n        return result;",
    "        var list = (List<object>)list_;\n        var res = new List<string>();\n        foreach (var item in list) {\n            res.Add(string.Format(str, item));\n        }\n        return res;",
    "        var list = (List<object>)list_;\n        var result = new List<string>();\n        foreach (var item in list) {\n            result.Add(string.Format(str, item));\n        }\n        return result;",
    "        var list = (List<object>)list_;\n        var result = new List<string>();\n        foreach (var item in list) {\n            result.Add(String.Format(str, item));\n        }\n        return result;",
    "        var list = (List<object>)list_;\n        var result = new List<string>();\n        foreach (var item in list) {\n            result.Add(string.Format(str, item));\n        }\n        return result;",
    "        var list = (List<object>)list_;\n        return list.Select(x => str + x.ToString()).ToList();",
    "        var list = (List<object>)list_;\n        var result = new List<string>();\n        foreach (var item in list) {\n            result.Add(string.Format(str, item));\n        }\n        return result;",
    "        var list = (List<object>)list_;\n        return list.Select(x => str + x.ToString()).ToList();",
    "        var list = (List<object>)list_;\n        var result = new List<string>();\n        foreach (var item in list) {\n            result.Add(string.Format(str, item));\n        }\n        return result;"
  ]
}
{
  "name": "mbpp_558_digit_distance_nums",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_558_digit_distance_nums.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        // Your code goes here.\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;"
  ]
}
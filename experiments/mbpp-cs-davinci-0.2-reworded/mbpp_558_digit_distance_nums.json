{
  "name": "mbpp_558_digit_distance_nums",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_558_digit_distance_nums.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        // Your code goes here.\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        return n1.ToString().Sum(c => Math.Abs(c - n2.ToString()[n1.ToString().IndexOf(c)]));",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        // Convert the numbers to strings\n        string s1 = n1.ToString();\n        string s2 = n2.ToString();\n        // Find the difference between the two numbers\n        long diff = n1 - n2;\n        // Convert the difference to a string\n        string sdiff = diff.ToString();\n        // Initialize the sum\n        long sum = 0;\n        // Loop through the difference string\n        for (int i = 0; i < sdiff.Length; i++) {\n            // Add the current digit to the sum\n            sum += int.Parse(sdiff[i].ToString());\n        }\n        // Return the sum\n        return sum;",
    "        // Write your code here\n        return 0;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        var s1 = n1.ToString();\n        var s2 = n2.ToString();\n        var diff = 0;\n        for (var i = 0; i < s1.Length; i++) {\n            diff += Math.Abs(s1[i] - s2[i]);\n        }\n        return diff;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        // Convert the numbers to strings\n        string s1 = n1.ToString();\n        string s2 = n2.ToString();\n        // Pad the shorter string with zeros\n        if (s1.Length > s2.Length) {\n            s2 = s2.PadLeft(s1.Length, '0');\n        } else {\n            s1 = s1.PadLeft(s2.Length, '0');\n        }\n        // Convert the strings to arrays of characters\n        char[] c1 = s1.ToCharArray();\n        char[] c2 = s2.ToCharArray();\n        // Sum the differences between the digits\n        long sum = 0;\n        for (int i = 0; i < c1.Length; i++) {\n            sum += Math.Abs(c1[i] - c2[i]);\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        // Convert the numbers to strings\n        string s1 = n1.ToString();\n        string s2 = n2.ToString();\n        // Get the length of the longest string\n        int len = Math.Max(s1.Length, s2.Length);\n        // Pad the shorter string with zeros\n        s1 = s1.PadLeft(len, '0');\n        s2 = s2.PadLeft(len, '0');\n        // Sum the per-digit differences\n        long sum = 0;\n        for (int i = 0; i < len; i++) {\n            sum += Math.Abs(s1[i] - s2[i]);\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        return n1.ToString().Sum(c => Math.Abs(c - n2.ToString()[n1.ToString().IndexOf(c)]));",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        // Convert the integers to strings\n        string s1 = n1.ToString();\n        string s2 = n2.ToString();\n        // Find the difference between the lengths of the strings\n        int diff = Math.Abs(s1.Length - s2.Length);\n        // If the strings are of different lengths, pad the shorter one with zeros\n        if (s1.Length < s2.Length) {\n            s1 = s1.PadLeft(s2.Length, '0');\n        } else if (s2.Length < s1.Length) {\n            s2 = s2.PadLeft(s1.Length, '0');\n        }\n        // Convert the strings to arrays of characters\n        char[] c1 = s1.ToCharArray();\n        char[] c2 = s2.ToCharArray();\n        // Initialize the sum variable\n        long sum = 0;\n        // Iterate through the characters in the arrays\n        for (int i = 0; i < c1.Length; i++) {\n            // Convert the characters to integers\n            int a = int.Parse(c1[i].ToString());\n            int b = int.Parse(c2[i].ToString());\n            // Add the absolute value of the difference between the integers to the sum\n            sum += Math.Abs(a - b);\n        }\n        // Return the sum\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 != 0 || n2 != 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        return n1.ToString().Select(x => (int)Char.GetNumericValue(x)).Sum() - n2.ToString().Select(x => (int)Char.GetNumericValue(x)).Sum();",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs(n1 % 10 - n2 % 10);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        // Convert the integers to strings\n        string s1 = n1.ToString();\n        string s2 = n2.ToString();\n        // Convert the strings to arrays of characters\n        char[] c1 = s1.ToCharArray();\n        char[] c2 = s2.ToCharArray();\n        // Convert the characters to integers\n        int[] i1 = Array.ConvertAll(c1, c => (int)Char.GetNumericValue(c));\n        int[] i2 = Array.ConvertAll(c2, c => (int)Char.GetNumericValue(c));\n        // Find the difference between the two arrays\n        int[] diff = i1.Zip(i2, (x, y) => Math.Abs(x - y)).ToArray();\n        // Sum the difference\n        long sum = 0;\n        foreach (int i in diff) {\n            sum += i;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            if (n1 > 0) {\n                sum += n1 % 10;\n                n1 /= 10;\n            }\n            if (n2 > 0) {\n                sum += n2 % 10;\n                n2 /= 10;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        var s1 = n1.ToString();\n        var s2 = n2.ToString();\n        var diff = 0;\n        for (var i = 0; i < s1.Length; i++) {\n            diff += Math.Abs(s1[i] - s2[i]);\n        }\n        return diff;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        // Convert the numbers to strings.\n        string s1 = n1.ToString();\n        string s2 = n2.ToString();\n        // Find the length of the longest string.\n        int maxLen = Math.Max(s1.Length, s2.Length);\n        // Pad the shorter string with zeros.\n        if (s1.Length < maxLen) {\n            s1 = s1.PadLeft(maxLen, '0');\n        }\n        if (s2.Length < maxLen) {\n            s2 = s2.PadLeft(maxLen, '0');\n        }\n        // Calculate the sum of the per-digit differences.\n        long sum = 0;\n        for (int i = 0; i < maxLen; i++) {\n            sum += Math.Abs(s1[i] - s2[i]);\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        // Convert to strings\n        string s1 = n1.ToString();\n        string s2 = n2.ToString();\n        // Pad with zeros\n        while (s1.Length < s2.Length) {\n            s1 = \"0\" + s1;\n        }\n        while (s2.Length < s1.Length) {\n            s2 = \"0\" + s2;\n        }\n        // Calculate the sum of the per-digit difference\n        long sum = 0;\n        for (int i = 0; i < s1.Length; i++) {\n            sum += Math.Abs(s1[i] - s2[i]);\n        }\n        return sum;",
    "        // Your code here\n        var n1_str = n1.ToString();\n        var n2_str = n2.ToString();\n        var n1_len = n1_str.Length;\n        var n2_len = n2_str.Length;\n        var len = Math.Max(n1_len, n2_len);\n        var n1_arr = new int[len];\n        var n2_arr = new int[len];\n        for (int i = 0; i < len; i++) {\n            if (i < n1_len) {\n                n1_arr[i] = n1_str[i] - '0';\n            } else {\n                n1_arr[i] = 0;\n            }\n            if (i < n2_len) {\n                n2_arr[i] = n2_str[i] - '0';\n            } else {\n                n2_arr[i] = 0;\n            }\n        }\n        var sum = 0;\n        for (int i = 0; i < len; i++) {\n            sum += Math.Abs(n1_arr[i] - n2_arr[i]);\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        // Write your code here\n        return 0;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        // Convert the numbers to strings\n        string s1 = n1.ToString();\n        string s2 = n2.ToString();\n        // Pad the shorter string with zeros\n        if (s1.Length < s2.Length) {\n            s1 = s1.PadLeft(s2.Length, '0');\n        } else if (s2.Length < s1.Length) {\n            s2 = s2.PadLeft(s1.Length, '0');\n        }\n        // Sum the difference between the digits\n        long sum = 0;\n        for (int i = 0; i < s1.Length; i++) {\n            sum += Math.Abs(s1[i] - s2[i]);\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs(n1 % 10 - n2 % 10);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        // Convert the numbers to strings\n        string s1 = n1.ToString();\n        string s2 = n2.ToString();\n        // Find the number of digits in the larger number\n        int maxDigits = Math.Max(s1.Length, s2.Length);\n        // Pad the smaller number with zeros\n        s1 = s1.PadLeft(maxDigits, '0');\n        s2 = s2.PadLeft(maxDigits, '0');\n        // Calculate the sum of the per-digit differences\n        long sum = 0;\n        for (int i = 0; i < maxDigits; i++) {\n            sum += Math.Abs(s1[i] - s2[i]);\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 != 0 || n2 != 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        return n1.ToString().Sum(c => Math.Abs(c - n2.ToString()[n1.ToString().IndexOf(c)]));",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while(n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        // Write your code here\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        long n1_copy = n1;\n        long n2_copy = n2;\n        while (n1_copy > 0) {\n            sum += Math.Abs(n1_copy % 10 - n2_copy % 10);\n            n1_copy /= 10;\n            n2_copy /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 && n2 > 0) {\n            sum += Math.Abs(n1 % 10 - n2 % 10);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        // TODO: Implement this function\n        // return the sum of the per-digit difference between n1 and n2\n        return 0;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 != 0 || n2 != 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        // Your code goes here\n        return 0;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            if (n1 > 0) {\n                sum += n1 % 10;\n                n1 /= 10;\n            }\n            if (n2 > 0) {\n                sum += n2 % 10;\n                n2 /= 10;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        return 0;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        var n1_digits = n1.ToString().Select(c => c - '0').ToArray();\n        var n2_digits = n2.ToString().Select(c => c - '0').ToArray();\n        var max_len = Math.Max(n1_digits.Length, n2_digits.Length);\n        var n1_digits_padded = new int[max_len];\n        var n2_digits_padded = new int[max_len];\n        Array.Copy(n1_digits, n1_digits_padded, n1_digits.Length);\n        Array.Copy(n2_digits, n2_digits_padded, n2_digits.Length);\n        var sum = 0;\n        for (var i = 0; i < max_len; i++) {\n            sum += Math.Abs(n1_digits_padded[i] - n2_digits_padded[i]);\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        return 0;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        // Convert the numbers to strings\n        string s1 = n1.ToString();\n        string s2 = n2.ToString();\n        // Find the difference in length between the two numbers\n        int diff = Math.Abs(s1.Length - s2.Length);\n        // Pad the shorter number with zeros\n        if (s1.Length < s2.Length) {\n            s1 = s1.PadLeft(s1.Length + diff, '0');\n        } else {\n            s2 = s2.PadLeft(s2.Length + diff, '0');\n        }\n        // Calculate the sum of the per-digit difference\n        long sum = 0;\n        for (int i = 0; i < s1.Length; i++) {\n            sum += Math.Abs(s1[i] - s2[i]);\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 != 0 || n2 != 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long result = 0;\n        while (n1 > 0 || n2 > 0) {\n            result += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return result;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        return n1.ToString().Sum(c => Math.Abs(c - n2.ToString()[n1.ToString().IndexOf(c)]));",
    "        return n1.ToString().Sum(c => Math.Abs(c - n2.ToString()[n1.ToString().IndexOf(c)]));",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;"
  ]
}
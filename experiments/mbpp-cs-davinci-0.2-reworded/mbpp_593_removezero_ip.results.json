{
  "name": "mbpp_593_removezero_ip",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_593_removezero_ip.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_parts = ip.Split('.');\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < ip_parts.Length; i++) {\n            if (ip_parts[i][0] == '0') {\n                sb.Append(ip_parts[i].Substring(1));\n            } else {\n                sb.Append(ip_parts[i]);\n            }\n            if (i != ip_parts.Length - 1) {\n                sb.Append(\".\");\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] parts = ip.Split('.');\n        string result = \"\";\n        foreach (string part in parts) {\n            int p = int.Parse(part);\n            if (p == 0) {\n                result += \"0.\";\n            } else {\n                result += p.ToString() + \".\";\n            }\n        }\n        return result.TrimEnd('.');\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] parts = ip.Split('.');\n        for (int i = 0; i < parts.Length; i++) {\n            parts[i] = parts[i].TrimStart('0');\n            if (parts[i] == \"\") parts[i] = \"0\";\n        }\n        return string.Join(\".\", parts);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        var result = new StringBuilder();\n        var isZero = true;\n        foreach (var c in ip) {\n            if (c == '.') {\n                result.Append(c);\n                isZero = true;\n            } else if (c == '0' && isZero) {\n                continue;\n            } else {\n                result.Append(c);\n                isZero = false;\n            }\n        }\n        return result.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] parts = ip.Split('.');\n        StringBuilder sb = new StringBuilder();\n        foreach (string part in parts) {\n            sb.Append(int.Parse(part));\n            sb.Append('.');\n        }\n        sb.Remove(sb.Length - 1, 1);\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_arr = ip.Split('.');\n        string result = \"\";\n        for (int i = 0; i < ip_arr.Length; i++) {\n            result += ip_arr[i].TrimStart('0');\n            if (i != ip_arr.Length - 1) {\n                result += \".\";\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_arr = ip.Split('.');\n        string result = \"\";\n        foreach (string s in ip_arr) {\n            int i = int.Parse(s);\n            result += i.ToString() + \".\";\n        }\n        return result.Substring(0, result.Length - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_arr = ip.Split('.');\n        string[] ip_arr_new = new string[ip_arr.Length];\n        for (int i = 0; i < ip_arr.Length; i++) {\n            ip_arr_new[i] = ip_arr[i].TrimStart('0');\n            if (ip_arr_new[i].Length == 0) {\n                ip_arr_new[i] = \"0\";\n            }\n        }\n        return string.Join(\".\", ip_arr_new);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] parts = ip.Split('.');\n        string result = \"\";\n        foreach (string part in parts) {\n            result += int.Parse(part) + \".\";\n        }\n        return result.Substring(0, result.Length - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_arr = ip.Split('.');\n        string result = \"\";\n        for (int i = 0; i < ip_arr.Length; i++) {\n            int num = int.Parse(ip_arr[i]);\n            if (num == 0) {\n                result += \"0.\";\n            } else {\n                result += num.ToString() + \".\";\n            }\n        }\n        return result.Substring(0, result.Length - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        var parts = ip.Split('.');\n        var result = new StringBuilder();\n        for (int i = 0; i < parts.Length; i++) {\n            var part = parts[i];\n            if (part.Length > 1 && part[0] == '0') {\n                part = part.Substring(1);\n            }\n            result.Append(part);\n            if (i != parts.Length - 1) {\n                result.Append('.');\n            }\n        }\n        return result.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        var ip_arr = ip.Split('.');\n        var ip_arr_new = new string[4];\n        for (int i = 0; i < 4; i++) {\n            ip_arr_new[i] = ip_arr[i].TrimStart('0');\n            if (ip_arr_new[i] == \"\") {\n                ip_arr_new[i] = \"0\";\n            }\n        }\n        return string.Join(\".\", ip_arr_new);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemovezeroIp (System.String ip) [0x00017] in <4423f155ea9c4000a536c495a5d215b3>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <4423f155ea9c4000a536c495a5d215b3>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemovezeroIp (System.String ip) [0x00017] in <4423f155ea9c4000a536c495a5d215b3>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <4423f155ea9c4000a536c495a5d215b3>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        var ipArr = ip.Split('.');\n        var result = \"\";\n        foreach (var item in ipArr) {\n            var temp = item;\n            while (temp.Length > 0 && temp[0] == '0') {\n                temp = temp.Substring(1);\n            }\n            result += temp + \".\";\n        }\n        return result.Substring(0, result.Length - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] parts = ip.Split('.');\n        string result = \"\";\n        for(int i = 0; i < parts.Length; i++) {\n            if(parts[i].Length > 1 && parts[i][0] == '0') {\n                result += parts[i].Substring(1) + \".\";\n            } else {\n                result += parts[i] + \".\";\n            }\n        }\n        return result.Substring(0, result.Length - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_parts = ip.Split('.');\n        string result = \"\";\n        for (int i = 0; i < ip_parts.Length; i++) {\n            if (ip_parts[i].Length > 1 && ip_parts[i][0] == '0') {\n                result += ip_parts[i].Substring(1);\n            } else {\n                result += ip_parts[i];\n            }\n            if (i != ip_parts.Length - 1) {\n                result += \".\";\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        var ipArray = ip.Split('.');\n        var result = new StringBuilder();\n        for (int i = 0; i < ipArray.Length; i++) {\n            var num = int.Parse(ipArray[i]);\n            if (num == 0) {\n                result.Append(\"0\");\n            } else {\n                result.Append(num);\n            }\n            if (i != ipArray.Length - 1) {\n                result.Append(\".\");\n            }\n        }\n        return result.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        var parts = ip.Split('.');\n        var result = new List<string>();\n        foreach (var part in parts) {\n            result.Add(part.TrimStart('0'));\n        }\n        return string.Join(\".\", result);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] parts = ip.Split('.');\n        for (int i = 0; i < parts.Length; i++) {\n            parts[i] = parts[i].TrimStart('0');\n            if (parts[i] == \"\") parts[i] = \"0\";\n        }\n        return string.Join(\".\", parts);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        var parts = ip.Split('.');\n        var sb = new StringBuilder();\n        for (int i = 0; i < parts.Length; i++) {\n            var part = parts[i];\n            if (part.Length > 1 && part[0] == '0') {\n                part = part.Substring(1);\n            }\n            sb.Append(part);\n            if (i != parts.Length - 1) {\n                sb.Append('.');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_split = ip.Split('.');\n        string[] ip_split_new = new string[4];\n        for (int i = 0; i < ip_split.Length; i++) {\n            ip_split_new[i] = ip_split[i].TrimStart('0');\n        }\n        return string.Join(\".\", ip_split_new);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8eeecd921f384a46a3edabdbf9fe912e>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_parts = ip.Split('.');\n        string[] new_ip = new string[4];\n        for (int i = 0; i < 4; i++) {\n            new_ip[i] = ip_parts[i].TrimStart('0');\n            if (new_ip[i] == \"\") {\n                new_ip[i] = \"0\";\n            }\n        }\n        return string.Join(\".\", new_ip);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123732,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemovezeroIp (System.String ip) [0x00017] in <a6f3181496284d7bae31fc2f11b3bcb9>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <a6f3181496284d7bae31fc2f11b3bcb9>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemovezeroIp (System.String ip) [0x00017] in <a6f3181496284d7bae31fc2f11b3bcb9>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <a6f3181496284d7bae31fc2f11b3bcb9>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] parts = ip.Split('.');\n        string result = \"\";\n        foreach (string part in parts) {\n            int num = int.Parse(part);\n            if (result.Length > 0) {\n                result += \".\";\n            }\n            result += num.ToString();\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123732,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        var split = ip.Split('.');\n        var result = \"\";\n        foreach (var s in split) {\n            var i = int.Parse(s);\n            result += i.ToString() + \".\";\n        }\n        return result.Substring(0, result.Length - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123732,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ipParts = ip.Split('.');\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < ipParts.Length; i++) {\n            sb.Append(int.Parse(ipParts[i]));\n            if (i != ipParts.Length - 1) {\n                sb.Append(\".\");\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123732,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ipSplit = ip.Split('.');\n        string result = \"\";\n        for (int i = 0; i < ipSplit.Length; i++) {\n            if (ipSplit[i].Length > 1 && ipSplit[i][0] == '0') {\n                result += ipSplit[i].Substring(1);\n            } else {\n                result += ipSplit[i];\n            }\n            if (i != ipSplit.Length - 1) {\n                result += \".\";\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123732,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        var sb = new StringBuilder();\n        var parts = ip.Split('.');\n        foreach (var part in parts) {\n            sb.Append(int.Parse(part));\n            sb.Append('.');\n        }\n        sb.Length--;\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123732,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_split = ip.Split('.');\n        string[] ip_split_new = new string[4];\n        for (int i = 0; i < 4; i++) {\n            ip_split_new[i] = ip_split[i].TrimStart('0');\n            if (ip_split_new[i] == \"\") {\n                ip_split_new[i] = \"0\";\n            }\n        }\n        return string.Join(\".\", ip_split_new);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123732,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemovezeroIp (System.String ip) [0x00017] in <650745e051c548dcb9cc46ee23a74db2>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <650745e051c548dcb9cc46ee23a74db2>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemovezeroIp (System.String ip) [0x00017] in <650745e051c548dcb9cc46ee23a74db2>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <650745e051c548dcb9cc46ee23a74db2>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_parts = ip.Split('.');\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < ip_parts.Length; i++) {\n            if (ip_parts[i].Length > 1 && ip_parts[i][0] == '0') {\n                sb.Append(ip_parts[i].Substring(1));\n            } else {\n                sb.Append(ip_parts[i]);\n            }\n            if (i != ip_parts.Length - 1) {\n                sb.Append('.');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123732,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ipParts = ip.Split('.');\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < ipParts.Length; i++) {\n            int part = int.Parse(ipParts[i]);\n            sb.Append(part);\n            if (i != ipParts.Length - 1) {\n                sb.Append('.');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123732,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ipArr = ip.Split('.');\n        string result = \"\";\n        foreach (string s in ipArr) {\n            int i = int.Parse(s);\n            result += i.ToString() + \".\";\n        }\n        return result.Substring(0, result.Length - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123732,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] parts = ip.Split('.');\n        string result = \"\";\n        for (int i = 0; i < parts.Length; i++) {\n            result += int.Parse(parts[i]);\n            if (i != parts.Length - 1) {\n                result += \".\";\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123732,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] parts = ip.Split('.');\n        StringBuilder sb = new StringBuilder();\n        foreach (string part in parts) {\n            sb.Append(part.TrimStart('0'));\n            sb.Append('.');\n        }\n        sb.Length--;\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123732,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_arr = ip.Split('.');\n        string result = \"\";\n        for (int i = 0; i < ip_arr.Length; i++) {\n            if (ip_arr[i].Length > 1 && ip_arr[i][0] == '0') {\n                result += ip_arr[i].Substring(1);\n            } else {\n                result += ip_arr[i];\n            }\n            if (i != ip_arr.Length - 1) {\n                result += \".\";\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123732,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        var sb = new StringBuilder();\n        var parts = ip.Split('.');\n        foreach (var part in parts) {\n            var num = int.Parse(part);\n            if (num == 0 && sb.Length == 0) {\n                continue;\n            }\n            sb.Append(num.ToString());\n            sb.Append('.');\n        }\n        sb.Remove(sb.Length - 1, 1);\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123732,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        var sb = new StringBuilder();\n        var parts = ip.Split('.');\n        foreach (var part in parts) {\n            var i = int.Parse(part);\n            if (i == 0) {\n                if (sb.Length > 0) {\n                    sb.Append('.');\n                }\n                continue;\n            }\n            sb.Append(i);\n            sb.Append('.');\n        }\n        sb.Length--;\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123732,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        var result = new StringBuilder();\n        var parts = ip.Split('.');\n        foreach (var part in parts) {\n            var num = int.Parse(part);\n            if (num == 0 && result.Length == 0) {\n                continue;\n            }\n            result.Append(num.ToString());\n            result.Append(\".\");\n        }\n        result.Remove(result.Length - 1, 1);\n        return result.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123732,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_parts = ip.Split('.');\n        string[] ip_parts_new = new string[4];\n        for (int i = 0; i < 4; i++) {\n            ip_parts_new[i] = ip_parts[i].TrimStart('0');\n            if (ip_parts_new[i] == \"\") {\n                ip_parts_new[i] = \"0\";\n            }\n        }\n        return String.Join(\".\", ip_parts_new);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123732,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemovezeroIp (System.String ip) [0x00017] in <6b37557d5ac3459190253371577b9db3>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <6b37557d5ac3459190253371577b9db3>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemovezeroIp (System.String ip) [0x00017] in <6b37557d5ac3459190253371577b9db3>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <6b37557d5ac3459190253371577b9db3>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_array = ip.Split('.');\n        string result = \"\";\n        for (int i = 0; i < ip_array.Length; i++) {\n            if (ip_array[i].Length > 1 && ip_array[i][0] == '0') {\n                result += ip_array[i].Substring(1);\n            } else {\n                result += ip_array[i];\n            }\n            if (i != ip_array.Length - 1) {\n                result += \".\";\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123732,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] octets = ip.Split('.');\n        string[] result = new string[4];\n        for (int i = 0; i < octets.Length; i++) {\n            result[i] = octets[i].TrimStart('0');\n            if (result[i] == \"\") {\n                result[i] = \"0\";\n            }\n        }\n        return string.Join(\".\", result);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123732,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2a02dfe7bb814c9f85e83e5acd3083ac>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_arr = ip.Split('.');\n        string result = \"\";\n        for (int i = 0; i < ip_arr.Length; i++) {\n            if (ip_arr[i].Length > 1 && ip_arr[i][0] == '0') {\n                result += ip_arr[i].Substring(1);\n            } else {\n                result += ip_arr[i];\n            }\n            if (i != ip_arr.Length - 1) {\n                result += \".\";\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123732,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_array = ip.Split('.');\n        string result = \"\";\n        for (int i = 0; i < ip_array.Length; i++) {\n            if (ip_array[i].Length > 1 && ip_array[i][0] == '0') {\n                result += ip_array[i].Substring(1);\n            } else {\n                result += ip_array[i];\n            }\n            if (i != ip_array.Length - 1) {\n                result += \".\";\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123732,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        var ipArray = ip.Split('.');\n        var result = new StringBuilder();\n        foreach (var item in ipArray) {\n            if (item.Length > 1 && item[0] == '0') {\n                result.Append(item.Substring(1));\n            } else {\n                result.Append(item);\n            }\n            result.Append(\".\");\n        }\n        return result.ToString().Substring(0, result.Length - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123732,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_arr = ip.Split('.');\n        string[] new_ip = new string[4];\n        for (int i = 0; i < 4; i++) {\n            new_ip[i] = ip_arr[i].TrimStart('0');\n            if (new_ip[i] == \"\") {\n                new_ip[i] = \"0\";\n            }\n        }\n        return string.Join(\".\", new_ip);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123732,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemovezeroIp (System.String ip) [0x00017] in <737b7c8a9c444245898ffa5c72c67d9f>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <737b7c8a9c444245898ffa5c72c67d9f>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemovezeroIp (System.String ip) [0x00017] in <737b7c8a9c444245898ffa5c72c67d9f>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <737b7c8a9c444245898ffa5c72c67d9f>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] parts = ip.Split('.');\n        string result = \"\";\n        for (int i = 0; i < parts.Length; i++) {\n            if (parts[i][0] == '0') {\n                result += parts[i].Substring(1) + \".\";\n            } else {\n                result += parts[i] + \".\";\n            }\n        }\n        return result.Substring(0, result.Length - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123732,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_split = ip.Split('.');\n        string result = \"\";\n        for (int i = 0; i < ip_split.Length; i++) {\n            if (ip_split[i].Length > 1 && ip_split[i][0] == '0') {\n                result += ip_split[i].Substring(1);\n            } else {\n                result += ip_split[i];\n            }\n            if (i != ip_split.Length - 1) {\n                result += \".\";\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123732,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        // Split the ip address into parts.\n        string[] parts = ip.Split('.');\n        // Iterate through the parts.\n        for (int i = 0; i < parts.Length; i++) {\n            // Remove leading zeroes from the part.\n            parts[i] = parts[i].TrimStart('0');\n            // If the part is empty, set it to 0.\n            if (parts[i] == \"\") parts[i] = \"0\";\n        }\n        // Return the parts joined together.\n        return string.Join(\".\", parts);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123733,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        var sb = new StringBuilder();\n        var parts = ip.Split('.');\n        foreach (var part in parts) {\n            var i = int.Parse(part);\n            if (i == 0) {\n                if (sb.Length == 0) {\n                    sb.Append(\"0\");\n                }\n            } else {\n                sb.Append(i);\n            }\n            sb.Append(\".\");\n        }\n        sb.Length--;\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123733,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] parts = ip.Split('.');\n        string[] newParts = new string[parts.Length];\n        for (int i = 0; i < parts.Length; i++) {\n            newParts[i] = parts[i].TrimStart('0');\n            if (newParts[i].Length == 0) {\n                newParts[i] = \"0\";\n            }\n        }\n        return string.Join(\".\", newParts);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123733,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ipParts = ip.Split('.');\n        StringBuilder sb = new StringBuilder();\n        foreach (string part in ipParts) {\n            sb.Append(part.TrimStart('0'));\n            sb.Append('.');\n        }\n        sb.Remove(sb.Length - 1, 1);\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123733,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] split = ip.Split('.');\n        string result = \"\";\n        foreach (string s in split) {\n            int num = int.Parse(s);\n            result += num.ToString() + \".\";\n        }\n        return result.Substring(0, result.Length - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123733,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        var parts = ip.Split('.');\n        var result = new List<string>();\n        foreach (var part in parts) {\n            var partInt = int.Parse(part);\n            if (partInt == 0) {\n                result.Add(\"0\");\n            } else {\n                result.Add(partInt.ToString());\n            }\n        }\n        return string.Join(\".\", result);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123733,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        var ipArr = ip.Split('.');\n        var result = new List<string>();\n        foreach (var item in ipArr) {\n            var str = item.TrimStart('0');\n            if (str.Length == 0) {\n                str = \"0\";\n            }\n            result.Add(str);\n        }\n        return string.Join('.', result);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123733,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] parts = ip.Split('.');\n        string result = \"\";\n        foreach (string part in parts) {\n            int num = int.Parse(part);\n            if (num == 0) {\n                result += \"0.\";\n            } else {\n                result += num.ToString() + \".\";\n            }\n        }\n        return result.Substring(0, result.Length - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123733,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        var parts = ip.Split('.');\n        var result = new StringBuilder();\n        foreach (var part in parts) {\n            var value = int.Parse(part);\n            if (value == 0) {\n                result.Append(\"0.\");\n            } else {\n                result.Append(value.ToString() + \".\");\n            }\n        }\n        return result.ToString().TrimEnd('.');\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123733,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        var ipArr = ip.Split('.');\n        var result = \"\";\n        for (int i = 0; i < ipArr.Length; i++) {\n            var temp = ipArr[i].TrimStart('0');\n            if (temp == \"\") {\n                temp = \"0\";\n            }\n            result += temp;\n            if (i != ipArr.Length - 1) {\n                result += \".\";\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123733,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ipParts = ip.Split('.');\n        string result = \"\";\n        for (int i = 0; i < ipParts.Length; i++) {\n            result += int.Parse(ipParts[i]);\n            if (i < ipParts.Length - 1) {\n                result += \".\";\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123733,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ipParts = ip.Split('.');\n        string result = \"\";\n        for (int i = 0; i < ipParts.Length; i++) {\n            if (ipParts[i].Length > 1 && ipParts[i][0] == '0') {\n                result += ipParts[i].Substring(1);\n            } else {\n                result += ipParts[i];\n            }\n            if (i != ipParts.Length - 1) {\n                result += \".\";\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123733,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] parts = ip.Split('.');\n        string[] newparts = new string[4];\n        for (int i = 0; i < 4; i++) {\n            newparts[i] = parts[i].TrimStart('0');\n            if (newparts[i] == \"\") {\n                newparts[i] = \"0\";\n            }\n        }\n        return string.Join(\".\", newparts);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123733,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemovezeroIp (System.String ip) [0x00017] in <4e35d9d15e64464bbb08eb49133ba160>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <4e35d9d15e64464bbb08eb49133ba160>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemovezeroIp (System.String ip) [0x00017] in <4e35d9d15e64464bbb08eb49133ba160>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <4e35d9d15e64464bbb08eb49133ba160>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ipParts = ip.Split('.');\n        string result = \"\";\n        foreach (string part in ipParts) {\n            int partInt = int.Parse(part);\n            result += partInt.ToString() + \".\";\n        }\n        return result.Substring(0, result.Length - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123733,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_arr = ip.Split('.');\n        string res = \"\";\n        for (int i = 0; i < ip_arr.Length; i++) {\n            if (ip_arr[i][0] == '0') {\n                res += ip_arr[i].Substring(1);\n            } else {\n                res += ip_arr[i];\n            }\n            if (i != ip_arr.Length - 1) {\n                res += \".\";\n            }\n        }\n        return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123733,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_parts = ip.Split('.');\n        string result = \"\";\n        foreach (string part in ip_parts) {\n            int num = int.Parse(part);\n            result += num.ToString() + \".\";\n        }\n        return result.Substring(0, result.Length - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123733,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        if (ip == null) {\n            return null;\n        }\n        string[] parts = ip.Split('.');\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < parts.Length; i++) {\n            if (parts[i].Length > 1 && parts[i][0] == '0') {\n                sb.Append(parts[i].Substring(1));\n            } else {\n                sb.Append(parts[i]);\n            }\n            if (i != parts.Length - 1) {\n                sb.Append('.');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123733,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ipParts = ip.Split('.');\n        string result = \"\";\n        foreach (string part in ipParts) {\n            int partInt = int.Parse(part);\n            if (result.Length > 0) {\n                result += \".\";\n            }\n            result += partInt.ToString();\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123733,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        var iparr = ip.Split('.');\n        var newip = \"\";\n        for (int i = 0; i < iparr.Length; i++) {\n            var num = iparr[i];\n            if (num.Length > 1 && num[0] == '0') {\n                num = num.Substring(1);\n            }\n            newip += num;\n            if (i != iparr.Length - 1) {\n                newip += \".\";\n            }\n        }\n        return newip;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123733,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] parts = ip.Split('.');\n        StringBuilder sb = new StringBuilder();\n        foreach (string part in parts) {\n            int i = int.Parse(part);\n            if (i == 0) {\n                sb.Append(\"0.\");\n            } else {\n                sb.Append(i.ToString() + \".\");\n            }\n        }\n        return sb.ToString().Substring(0, sb.Length - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123733,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] parts = ip.Split('.');\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < parts.Length; i++) {\n            if (parts[i].Length > 1 && parts[i][0] == '0') {\n                sb.Append(parts[i].Substring(1));\n            } else {\n                sb.Append(parts[i]);\n            }\n            if (i != parts.Length - 1) {\n                sb.Append(\".\");\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123733,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ipParts = ip.Split('.');\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < ipParts.Length; i++) {\n            sb.Append(ipParts[i].TrimStart('0'));\n            if (i != ipParts.Length - 1) {\n                sb.Append('.');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123733,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        var sb = new StringBuilder();\n        var parts = ip.Split('.');\n        foreach (var part in parts) {\n            var i = int.Parse(part);\n            if (i == 0) {\n                if (sb.Length == 0) {\n                    sb.Append(\"0\");\n                }\n            } else {\n                sb.Append(i);\n            }\n            sb.Append(\".\");\n        }\n        sb.Length--;\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123733,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] parts = ip.Split('.');\n        StringBuilder sb = new StringBuilder();\n        foreach (string part in parts) {\n            int i = int.Parse(part);\n            sb.Append(i.ToString());\n            sb.Append(\".\");\n        }\n        sb.Remove(sb.Length - 1, 1);\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123733,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] parts = ip.Split('.');\n        string[] newparts = new string[4];\n        for (int i = 0; i < 4; i++) {\n            newparts[i] = parts[i].TrimStart('0');\n            if (newparts[i] == \"\") {\n                newparts[i] = \"0\";\n            }\n        }\n        return string.Join(\".\", newparts);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123733,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemovezeroIp (System.String ip) [0x00017] in <4e35d9d15e64464bbb08eb49133ba160>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <4e35d9d15e64464bbb08eb49133ba160>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemovezeroIp (System.String ip) [0x00017] in <4e35d9d15e64464bbb08eb49133ba160>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <4e35d9d15e64464bbb08eb49133ba160>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ipParts = ip.Split('.');\n        string result = \"\";\n        for (int i = 0; i < ipParts.Length; i++) {\n            result += int.Parse(ipParts[i]);\n            if (i != ipParts.Length - 1) {\n                result += \".\";\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123733,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_parts = ip.Split('.');\n        string result = \"\";\n        for (int i = 0; i < ip_parts.Length; i++) {\n            if (ip_parts[i].Length > 1 && ip_parts[i][0] == '0') {\n                result += ip_parts[i].Substring(1);\n            } else {\n                result += ip_parts[i];\n            }\n            if (i != ip_parts.Length - 1) {\n                result += \".\";\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        var ipParts = ip.Split('.');\n        var result = new List<string>();\n        foreach (var part in ipParts) {\n            var partInt = int.Parse(part);\n            if (partInt == 0) {\n                result.Add(\"0\");\n            } else {\n                result.Add(partInt.ToString());\n            }\n        }\n        return string.Join(\".\", result);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123733,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_arr = ip.Split('.');\n        string result = \"\";\n        for (int i = 0; i < ip_arr.Length; i++) {\n            if (ip_arr[i][0] == '0') {\n                int j = 0;\n                while (ip_arr[i][j] == '0') {\n                    j++;\n                }\n                result += ip_arr[i].Substring(j) + \".\";\n            } else {\n                result += ip_arr[i] + \".\";\n            }\n        }\n        return result.Substring(0, result.Length - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123733,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ipParts = ip.Split('.');\n        for (int i = 0; i < ipParts.Length; i++) {\n            if (ipParts[i][0] == '0') {\n                ipParts[i] = ipParts[i].Substring(1);\n            }\n        }\n        return string.Join(\".\", ipParts);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123733,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_arr = ip.Split('.');\n        string res = \"\";\n        for (int i = 0; i < ip_arr.Length; i++) {\n            if (ip_arr[i].Length > 1 && ip_arr[i][0] == '0') {\n                res += ip_arr[i].Substring(1) + \".\";\n            } else {\n                res += ip_arr[i] + \".\";\n            }\n        }\n        return res.Substring(0, res.Length - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123733,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ipParts = ip.Split('.');\n        string newIp = \"\";\n        foreach (string part in ipParts) {\n            int partInt = int.Parse(part);\n            if (partInt == 0) {\n                newIp += \"0.\";\n            } else {\n                newIp += partInt.ToString() + \".\";\n            }\n        }\n        return newIp.Substring(0, newIp.Length - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123733,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        var ipParts = ip.Split('.');\n        var result = new StringBuilder();\n        foreach (var part in ipParts) {\n            var partInt = int.Parse(part);\n            result.Append(partInt.ToString());\n            result.Append(\".\");\n        }\n        result.Remove(result.Length - 1, 1);\n        return result.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123733,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] parts = ip.Split('.');\n        StringBuilder sb = new StringBuilder();\n        foreach (string part in parts) {\n            sb.Append(int.Parse(part));\n            sb.Append(\".\");\n        }\n        sb.Remove(sb.Length - 1, 1);\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123733,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ipParts = ip.Split('.');\n        for (int i = 0; i < ipParts.Length; i++) {\n            int part = int.Parse(ipParts[i]);\n            if (part == 0) {\n                ipParts[i] = \"0\";\n            } else {\n                break;\n            }\n        }\n        return string.Join(\".\", ipParts);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7932903a88764f9b9907973fb57c3ca3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7932903a88764f9b9907973fb57c3ca3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_arr = ip.Split('.');\n        if (ip_arr.Length != 4) return null;\n        for (int i = 0; i < 4; i++) {\n            int num = int.Parse(ip_arr[i]);\n            if (num > 255) return null;\n            ip_arr[i] = num.ToString();\n        }\n        return string.Join(\".\", ip_arr);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x00025] in <af81c6b5f3024c00956e65795fc973f6>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x00025] in <af81c6b5f3024c00956e65795fc973f6>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] parts = ip.Split('.');\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < parts.Length; i++) {\n            sb.Append(int.Parse(parts[i]));\n            if (i != parts.Length - 1) {\n                sb.Append(\".\");\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123733,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        var parts = ip.Split('.');\n        var result = new List<string>();\n        foreach(var part in parts) {\n            var s = part.TrimStart('0');\n            if(s.Length == 0) {\n                s = \"0\";\n            }\n            result.Add(s);\n        }\n        return string.Join(\".\", result);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123733,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_parts = ip.Split('.');\n        string result = \"\";\n        for (int i = 0; i < ip_parts.Length; i++) {\n            if (ip_parts[i].Length > 1 && ip_parts[i][0] == '0') {\n                result += ip_parts[i].Substring(1);\n            } else {\n                result += ip_parts[i];\n            }\n            if (i != ip_parts.Length - 1) {\n                result += \".\";\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ipParts = ip.Split('.');\n        string result = \"\";\n        for (int i = 0; i < ipParts.Length; i++) {\n            int part = int.Parse(ipParts[i]);\n            if (part == 0) {\n                result += \"0.\";\n            } else {\n                result += part.ToString() + \".\";\n            }\n        }\n        return result.Substring(0, result.Length - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123733,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        var ipParts = ip.Split('.');\n        var result = new StringBuilder();\n        for (int i = 0; i < ipParts.Length; i++) {\n            var part = ipParts[i];\n            if (part.Length > 1 && part[0] == '0') {\n                part = part.Substring(1);\n            }\n            result.Append(part);\n            if (i < ipParts.Length - 1) {\n                result.Append('.');\n            }\n        }\n        return result.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123733,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] parts = ip.Split('.');\n        StringBuilder sb = new StringBuilder();\n        foreach (var part in parts) {\n            int num = int.Parse(part);\n            sb.Append(num.ToString());\n            sb.Append(\".\");\n        }\n        sb.Remove(sb.Length - 1, 1);\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123733,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        var parts = ip.Split('.');\n        var res = new List<string>();\n        foreach (var part in parts) {\n            var newPart = part.TrimStart('0');\n            if (newPart == \"\") {\n                newPart = \"0\";\n            }\n            res.Add(newPart);\n        }\n        return string.Join(\".\", res);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_parts = ip.Split('.');\n        string[] new_ip_parts = new string[4];\n        for (int i = 0; i < 4; i++) {\n            int part = int.Parse(ip_parts[i]);\n            new_ip_parts[i] = part.ToString();\n        }\n        return string.Join(\".\", new_ip_parts);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123733,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemovezeroIp (System.String ip) [0x00017] in <11ac9dfd60d84a90975c1d8e13cebecb>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <11ac9dfd60d84a90975c1d8e13cebecb>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemovezeroIp (System.String ip) [0x00017] in <11ac9dfd60d84a90975c1d8e13cebecb>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <11ac9dfd60d84a90975c1d8e13cebecb>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_parts = ip.Split('.');\n        string[] new_ip_parts = new string[4];\n        for (int i = 0; i < 4; i++) {\n            new_ip_parts[i] = ip_parts[i].TrimStart('0');\n            if (new_ip_parts[i] == \"\") {\n                new_ip_parts[i] = \"0\";\n            }\n        }\n        return String.Join(\".\", new_ip_parts);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123733,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemovezeroIp (System.String ip) [0x00017] in <e3b3a11f6b70457680267d33809b61bd>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <e3b3a11f6b70457680267d33809b61bd>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemovezeroIp (System.String ip) [0x00017] in <e3b3a11f6b70457680267d33809b61bd>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <e3b3a11f6b70457680267d33809b61bd>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] parts = ip.Split('.');\n        string result = \"\";\n        for (int i = 0; i < parts.Length; i++) {\n            if (parts[i][0] == '0') {\n                result += parts[i].Substring(1);\n            } else {\n                result += parts[i];\n            }\n            if (i != parts.Length - 1) {\n                result += \".\";\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] parts = ip.Split('.');\n        string[] newparts = new string[4];\n        for (int i = 0; i < 4; i++) {\n            newparts[i] = parts[i].TrimStart('0');\n            if (newparts[i] == \"\") {\n                newparts[i] = \"0\";\n            }\n        }\n        return string.Join(\".\", newparts);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123733,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemovezeroIp (System.String ip) [0x00017] in <4e35d9d15e64464bbb08eb49133ba160>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <4e35d9d15e64464bbb08eb49133ba160>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemovezeroIp (System.String ip) [0x00017] in <4e35d9d15e64464bbb08eb49133ba160>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <4e35d9d15e64464bbb08eb49133ba160>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_arr = ip.Split('.');\n        StringBuilder sb = new StringBuilder();\n        foreach (string s in ip_arr) {\n            int i = int.Parse(s);\n            sb.Append(i.ToString());\n            sb.Append(\".\");\n        }\n        sb.Remove(sb.Length - 1, 1);\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123733,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ipParts = ip.Split('.');\n        string result = \"\";\n        foreach (string part in ipParts) {\n            int partInt = int.Parse(part);\n            result += partInt.ToString() + \".\";\n        }\n        return result.Substring(0, result.Length - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123733,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_parts = ip.Split('.');\n        string result = \"\";\n        for (int i = 0; i < ip_parts.Length; i++) {\n            if (ip_parts[i].Length > 1 && ip_parts[i][0] == '0') {\n                ip_parts[i] = ip_parts[i].Substring(1);\n            }\n            result += ip_parts[i];\n            if (i != ip_parts.Length - 1) {\n                result += \".\";\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        var parts = ip.Split('.');\n        var result = new StringBuilder();\n        for (int i = 0; i < parts.Length; i++) {\n            var part = parts[i];\n            if (part.Length > 1 && part[0] == '0') {\n                result.Append(part.Substring(1));\n            } else {\n                result.Append(part);\n            }\n            if (i != parts.Length - 1) {\n                result.Append('.');\n            }\n        }\n        return result.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] arr = ip.Split('.');\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < arr.Length; i++) {\n            if (arr[i].Length > 1 && arr[i][0] == '0') {\n                sb.Append(arr[i].Substring(1));\n            } else {\n                sb.Append(arr[i]);\n            }\n            if (i != arr.Length - 1) {\n                sb.Append('.');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_split = ip.Split('.');\n        string result = \"\";\n        for (int i = 0; i < ip_split.Length; i++) {\n            result += int.Parse(ip_split[i]);\n            if (i != ip_split.Length - 1) {\n                result += \".\";\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_arr = ip.Split('.');\n        string result = \"\";\n        for (int i = 0; i < ip_arr.Length; i++) {\n            if (ip_arr[i].Length > 1 && ip_arr[i][0] == '0') {\n                result += ip_arr[i].Substring(1);\n            } else {\n                result += ip_arr[i];\n            }\n            if (i < ip_arr.Length - 1) {\n                result += \".\";\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] parts = ip.Split('.');\n        string result = \"\";\n        for (int i = 0; i < parts.Length; i++) {\n            result += parts[i].TrimStart('0');\n            if (i != parts.Length - 1) {\n                result += \".\";\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_parts = ip.Split('.');\n        string result = \"\";\n        for (int i = 0; i < ip_parts.Length; i++) {\n            if (ip_parts[i].Length > 1 && ip_parts[i][0] == '0') {\n                result += ip_parts[i].Substring(1);\n            } else {\n                result += ip_parts[i];\n            }\n            if (i != ip_parts.Length - 1) {\n                result += \".\";\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_array = ip.Split('.');\n        string[] new_ip_array = new string[4];\n        for (int i = 0; i < ip_array.Length; i++) {\n            new_ip_array[i] = ip_array[i].TrimStart('0');\n            if (new_ip_array[i] == \"\") {\n                new_ip_array[i] = \"0\";\n            }\n        }\n        return String.Join(\".\", new_ip_array);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <914d90ccb3be476db00ad2b29d445abc>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_parts = ip.Split('.');\n        string result = \"\";\n        for (int i = 0; i < ip_parts.Length; i++) {\n            int part = int.Parse(ip_parts[i]);\n            if (part == 0) {\n                result += \"0.\";\n            } else {\n                result += part.ToString() + \".\";\n            }\n        }\n        return result.Substring(0, result.Length - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] parts = ip.Split('.');\n        string result = \"\";\n        foreach (string part in parts) {\n            int n = int.Parse(part);\n            result += n.ToString() + \".\";\n        }\n        return result.Substring(0, result.Length - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] parts = ip.Split('.');\n        string[] newparts = new string[4];\n        for (int i = 0; i < 4; i++) {\n            newparts[i] = parts[i].TrimStart('0');\n            if (newparts[i] == \"\") {\n                newparts[i] = \"0\";\n            }\n        }\n        return string.Join(\".\", newparts);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123733,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemovezeroIp (System.String ip) [0x00017] in <4e35d9d15e64464bbb08eb49133ba160>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <4e35d9d15e64464bbb08eb49133ba160>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemovezeroIp (System.String ip) [0x00017] in <4e35d9d15e64464bbb08eb49133ba160>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <4e35d9d15e64464bbb08eb49133ba160>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_parts = ip.Split('.');\n        string[] new_ip_parts = new string[4];\n        for (int i = 0; i < 4; i++) {\n            new_ip_parts[i] = ip_parts[i].TrimStart('0');\n            if (new_ip_parts[i] == \"\") {\n                new_ip_parts[i] = \"0\";\n            }\n        }\n        return string.Join(\".\", new_ip_parts);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemovezeroIp (System.String ip) [0x00017] in <979c63c9422e44d5865affe3f3839928>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <979c63c9422e44d5865affe3f3839928>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemovezeroIp (System.String ip) [0x00017] in <979c63c9422e44d5865affe3f3839928>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <979c63c9422e44d5865affe3f3839928>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] parts = ip.Split('.');\n        string result = \"\";\n        foreach (string part in parts) {\n            int num = int.Parse(part);\n            result += num.ToString() + \".\";\n        }\n        return result.Substring(0, result.Length - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_parts = ip.Split('.');\n        string result = \"\";\n        foreach (string part in ip_parts) {\n            result += int.Parse(part) + \".\";\n        }\n        return result.Substring(0, result.Length - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        var result = new StringBuilder();\n        var parts = ip.Split('.');\n        foreach (var part in parts) {\n            var num = int.Parse(part);\n            if (result.Length == 0) {\n                result.Append(num);\n            } else {\n                result.Append(\".\" + num);\n            }\n        }\n        return result.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_parts = ip.Split('.');\n        string[] new_ip_parts = new string[4];\n        for (int i = 0; i < 4; i++) {\n            new_ip_parts[i] = ip_parts[i].TrimStart('0');\n            if (new_ip_parts[i] == \"\") {\n                new_ip_parts[i] = \"0\";\n            }\n        }\n        return string.Join(\".\", new_ip_parts);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemovezeroIp (System.String ip) [0x00017] in <979c63c9422e44d5865affe3f3839928>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <979c63c9422e44d5865affe3f3839928>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemovezeroIp (System.String ip) [0x00017] in <979c63c9422e44d5865affe3f3839928>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <979c63c9422e44d5865affe3f3839928>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] parts = ip.Split('.');\n        string result = \"\";\n        for (int i = 0; i < parts.Length; i++) {\n            if (parts[i].Length > 1 && parts[i][0] == '0') {\n                result += parts[i].Substring(1);\n            } else {\n                result += parts[i];\n            }\n            if (i < parts.Length - 1) {\n                result += \".\";\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_arr = ip.Split('.');\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < ip_arr.Length; i++) {\n            if (ip_arr[i].Length > 1 && ip_arr[i][0] == '0') {\n                sb.Append(ip_arr[i].Substring(1));\n            } else {\n                sb.Append(ip_arr[i]);\n            }\n            if (i != ip_arr.Length - 1) {\n                sb.Append(\".\");\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        var sb = new StringBuilder();\n        var parts = ip.Split('.');\n        foreach (var part in parts) {\n            var num = int.Parse(part);\n            if (num == 0) {\n                sb.Append(\".0\");\n            } else {\n                sb.Append(\".\" + num);\n            }\n        }\n        return sb.ToString().Substring(1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ipParts = ip.Split('.');\n        for (int i = 0; i < ipParts.Length; i++) {\n            ipParts[i] = int.Parse(ipParts[i]).ToString();\n        }\n        return string.Join(\".\", ipParts);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] parts = ip.Split('.');\n        string[] newparts = new string[4];\n        for (int i = 0; i < 4; i++) {\n            newparts[i] = parts[i].TrimStart('0');\n            if (newparts[i] == \"\") {\n                newparts[i] = \"0\";\n            }\n        }\n        return string.Join(\".\", newparts);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123733,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemovezeroIp (System.String ip) [0x00017] in <4e35d9d15e64464bbb08eb49133ba160>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <4e35d9d15e64464bbb08eb49133ba160>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemovezeroIp (System.String ip) [0x00017] in <4e35d9d15e64464bbb08eb49133ba160>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <4e35d9d15e64464bbb08eb49133ba160>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_parts = ip.Split('.');\n        string[] new_ip_parts = new string[4];\n        for (int i = 0; i < 4; i++) {\n            new_ip_parts[i] = ip_parts[i].TrimStart('0');\n            if (new_ip_parts[i] == \"\") {\n                new_ip_parts[i] = \"0\";\n            }\n        }\n        return String.Join(\".\", new_ip_parts);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123733,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemovezeroIp (System.String ip) [0x00017] in <e3b3a11f6b70457680267d33809b61bd>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <e3b3a11f6b70457680267d33809b61bd>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemovezeroIp (System.String ip) [0x00017] in <e3b3a11f6b70457680267d33809b61bd>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <e3b3a11f6b70457680267d33809b61bd>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        var ipArr = ip.Split('.');\n        var result = new StringBuilder();\n        for (int i = 0; i < ipArr.Length; i++) {\n            var num = ipArr[i];\n            if (num.Length > 1 && num[0] == '0') {\n                result.Append(num.Substring(1));\n            } else {\n                result.Append(num);\n            }\n            if (i != ipArr.Length - 1) {\n                result.Append(\".\");\n            }\n        }\n        return result.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ipParts = ip.Split('.');\n        string result = \"\";\n        foreach (string part in ipParts) {\n            int num = int.Parse(part);\n            result += num.ToString() + \".\";\n        }\n        return result.Substring(0, result.Length - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_arr = ip.Split('.');\n        string new_ip = \"\";\n        foreach (string s in ip_arr) {\n            int num = Convert.ToInt32(s);\n            new_ip += num.ToString() + \".\";\n        }\n        return new_ip.Substring(0, new_ip.Length - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_parts = ip.Split('.');\n        for (int i = 0; i < ip_parts.Length; i++) {\n            while (ip_parts[i].Length > 1 && ip_parts[i][0] == '0') {\n                ip_parts[i] = ip_parts[i].Substring(1);\n            }\n        }\n        return string.Join(\".\", ip_parts);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ipParts = ip.Split('.');\n        for (int i = 0; i < ipParts.Length; i++) {\n            while (ipParts[i].Length > 1 && ipParts[i][0] == '0') {\n                ipParts[i] = ipParts[i].Substring(1);\n            }\n        }\n        return string.Join(\".\", ipParts);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_arr = ip.Split('.');\n        string result = \"\";\n        foreach (string s in ip_arr) {\n            int i = int.Parse(s);\n            result += i.ToString() + \".\";\n        }\n        return result.Substring(0, result.Length - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        var parts = ip.Split('.');\n        var result = new StringBuilder();\n        for (int i = 0; i < parts.Length; i++) {\n            var part = parts[i];\n            if (part.Length > 1 && part[0] == '0') {\n                part = part.Substring(1);\n            }\n            result.Append(part);\n            if (i != parts.Length - 1) {\n                result.Append(\".\");\n            }\n        }\n        return result.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] parts = ip.Split('.');\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < parts.Length; i++) {\n            if (parts[i].Length > 1 && parts[i][0] == '0') {\n                sb.Append(parts[i].Substring(1));\n            } else {\n                sb.Append(parts[i]);\n            }\n            if (i < parts.Length - 1) {\n                sb.Append('.');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_arr = ip.Split('.');\n        string new_ip = \"\";\n        for (int i = 0; i < ip_arr.Length; i++) {\n            int num = int.Parse(ip_arr[i]);\n            new_ip += num.ToString();\n            if (i != ip_arr.Length - 1) {\n                new_ip += \".\";\n            }\n        }\n        return new_ip;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_arr = ip.Split('.');\n        StringBuilder sb = new StringBuilder();\n        foreach (string s in ip_arr) {\n            int i = int.Parse(s);\n            sb.Append(i.ToString());\n            sb.Append(\".\");\n        }\n        sb.Remove(sb.Length - 1, 1);\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123733,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] parts = ip.Split('.');\n        string result = \"\";\n        for (int i = 0; i < parts.Length; i++) {\n            int part = int.Parse(parts[i]);\n            if (part == 0) {\n                result += \"0.\";\n            } else {\n                result += part.ToString() + \".\";\n            }\n        }\n        return result.Substring(0, result.Length - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ipParts = ip.Split('.');\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < ipParts.Length; i++) {\n            if (ipParts[i].Length > 1 && ipParts[i][0] == '0') {\n                sb.Append(ipParts[i].Substring(1));\n            } else {\n                sb.Append(ipParts[i]);\n            }\n            if (i != ipParts.Length - 1) {\n                sb.Append(\".\");\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_arr = ip.Split('.');\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < ip_arr.Length; i++) {\n            sb.Append(ip_arr[i].TrimStart('0'));\n            if (i != ip_arr.Length - 1) {\n                sb.Append('.');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        var ipParts = ip.Split('.');\n        var result = new List<string>();\n        foreach (var part in ipParts) {\n            var partInt = int.Parse(part);\n            var partStr = partInt.ToString();\n            result.Add(partStr);\n        }\n        return string.Join(\".\", result);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ipArr = ip.Split('.');\n        string result = \"\";\n        for (int i = 0; i < ipArr.Length; i++) {\n            if (ipArr[i].Length > 1 && ipArr[i][0] == '0') {\n                result += ipArr[i].Substring(1);\n            } else {\n                result += ipArr[i];\n            }\n            if (i != ipArr.Length - 1) {\n                result += \".\";\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_parts = ip.Split('.');\n        string[] new_ip_parts = new string[4];\n        for (int i = 0; i < 4; i++) {\n            new_ip_parts[i] = ip_parts[i].TrimStart('0');\n            if (new_ip_parts[i] == \"\") {\n                new_ip_parts[i] = \"0\";\n            }\n        }\n        return string.Join(\".\", new_ip_parts);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemovezeroIp (System.String ip) [0x00017] in <979c63c9422e44d5865affe3f3839928>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <979c63c9422e44d5865affe3f3839928>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemovezeroIp (System.String ip) [0x00017] in <979c63c9422e44d5865affe3f3839928>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <979c63c9422e44d5865affe3f3839928>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] parts = ip.Split('.');\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < parts.Length; i++) {\n            sb.Append(int.Parse(parts[i]));\n            if (i != parts.Length - 1) {\n                sb.Append(\".\");\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123733,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_arr = ip.Split('.');\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < ip_arr.Length; i++) {\n            if (ip_arr[i].Length > 1 && ip_arr[i][0] == '0') {\n                sb.Append(ip_arr[i].Substring(1));\n            } else {\n                sb.Append(ip_arr[i]);\n            }\n            if (i < ip_arr.Length - 1) {\n                sb.Append('.');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_parts = ip.Split('.');\n        string[] new_ip_parts = new string[4];\n        for (int i = 0; i < 4; i++) {\n            new_ip_parts[i] = ip_parts[i].TrimStart('0');\n            if (new_ip_parts[i] == \"\") {\n                new_ip_parts[i] = \"0\";\n            }\n        }\n        return String.Join(\".\", new_ip_parts);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123733,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemovezeroIp (System.String ip) [0x00017] in <e3b3a11f6b70457680267d33809b61bd>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <e3b3a11f6b70457680267d33809b61bd>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemovezeroIp (System.String ip) [0x00017] in <e3b3a11f6b70457680267d33809b61bd>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <e3b3a11f6b70457680267d33809b61bd>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        var parts = ip.Split('.');\n        var result = \"\";\n        foreach (var part in parts) {\n            var i = int.Parse(part);\n            if (i == 0) {\n                if (result.Length > 0) {\n                    result += \".\";\n                }\n            } else {\n                result += i.ToString();\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ebc67c2683a845d5b94cf58f7c67e099>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ebc67c2683a845d5b94cf58f7c67e099>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        var parts = ip.Split('.');\n        var result = new List<string>();\n        foreach (var part in parts) {\n            var i = 0;\n            while (i < part.Length && part[i] == '0') {\n                i++;\n            }\n            result.Add(part.Substring(i));\n        }\n        return string.Join(\".\", result);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ipParts = ip.Split('.');\n        string result = \"\";\n        for (int i = 0; i < ipParts.Length; i++) {\n            result += int.Parse(ipParts[i]);\n            if (i != ipParts.Length - 1) {\n                result += \".\";\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123733,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        var parts = ip.Split('.');\n        var result = new StringBuilder();\n        foreach (var part in parts) {\n            var num = int.Parse(part);\n            result.Append(num.ToString());\n            result.Append('.');\n        }\n        result.Remove(result.Length - 1, 1);\n        return result.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_parts = ip.Split('.');\n        string result = \"\";\n        foreach (string part in ip_parts) {\n            result += int.Parse(part) + \".\";\n        }\n        return result.Substring(0, result.Length - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_parts = ip.Split('.');\n        string[] new_ip_parts = new string[4];\n        for (int i = 0; i < 4; i++) {\n            new_ip_parts[i] = ip_parts[i].TrimStart('0');\n            if (new_ip_parts[i] == \"\") {\n                new_ip_parts[i] = \"0\";\n            }\n        }\n        return string.Join(\".\", new_ip_parts);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemovezeroIp (System.String ip) [0x00017] in <979c63c9422e44d5865affe3f3839928>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <979c63c9422e44d5865affe3f3839928>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemovezeroIp (System.String ip) [0x00017] in <979c63c9422e44d5865affe3f3839928>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <979c63c9422e44d5865affe3f3839928>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_parts = ip.Split('.');\n        string new_ip = \"\";\n        foreach (string part in ip_parts) {\n            int part_int = Int32.Parse(part);\n            new_ip += part_int.ToString() + \".\";\n        }\n        return new_ip.Substring(0, new_ip.Length - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_arr = ip.Split('.');\n        string result = \"\";\n        foreach (string s in ip_arr) {\n            result += int.Parse(s) + \".\";\n        }\n        return result.Substring(0, result.Length - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ipParts = ip.Split('.');\n        StringBuilder sb = new StringBuilder();\n        foreach (string part in ipParts) {\n            sb.Append(Convert.ToInt32(part).ToString());\n            sb.Append(\".\");\n        }\n        sb.Remove(sb.Length - 1, 1);\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        var parts = ip.Split('.');\n        var result = new StringBuilder();\n        foreach (var part in parts) {\n            var zeroes = part.Length - part.TrimStart('0').Length;\n            result.Append(part.Substring(zeroes));\n            result.Append('.');\n        }\n        return result.ToString().TrimEnd('.');\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] parts = ip.Split('.');\n        string[] newparts = new string[4];\n        for (int i = 0; i < 4; i++) {\n            newparts[i] = parts[i].TrimStart('0');\n            if (newparts[i].Length == 0) {\n                newparts[i] = \"0\";\n            }\n        }\n        return string.Join(\".\", newparts);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemovezeroIp (System.String ip) [0x00017] in <11484bb114e9453f90f4355cc2b0bdd4>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <11484bb114e9453f90f4355cc2b0bdd4>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemovezeroIp (System.String ip) [0x00017] in <11484bb114e9453f90f4355cc2b0bdd4>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <11484bb114e9453f90f4355cc2b0bdd4>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_arr = ip.Split('.');\n        string result = \"\";\n        for (int i = 0; i < ip_arr.Length; i++) {\n            if (ip_arr[i].Length > 1 && ip_arr[i][0] == '0') {\n                result += ip_arr[i].Substring(1);\n            } else {\n                result += ip_arr[i];\n            }\n            if (i != ip_arr.Length - 1) {\n                result += \".\";\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123732,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_arr = ip.Split('.');\n        string result = \"\";\n        for (int i = 0; i < ip_arr.Length; i++) {\n            if (ip_arr[i].Length > 1 && ip_arr[i][0] == '0') {\n                result += ip_arr[i].Substring(1);\n            } else {\n                result += ip_arr[i];\n            }\n            if (i != ip_arr.Length - 1) {\n                result += \".\";\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123732,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_parts = ip.Split('.');\n        string[] new_ip_parts = new string[4];\n        for (int i = 0; i < 4; i++) {\n            new_ip_parts[i] = ip_parts[i].TrimStart('0');\n            if (new_ip_parts[i] == \"\") {\n                new_ip_parts[i] = \"0\";\n            }\n        }\n        return string.Join(\".\", new_ip_parts);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemovezeroIp (System.String ip) [0x00017] in <979c63c9422e44d5865affe3f3839928>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <979c63c9422e44d5865affe3f3839928>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemovezeroIp (System.String ip) [0x00017] in <979c63c9422e44d5865affe3f3839928>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <979c63c9422e44d5865affe3f3839928>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_arr = ip.Split('.');\n        string result = \"\";\n        foreach (string s in ip_arr) {\n            int num = int.Parse(s);\n            result += num.ToString() + \".\";\n        }\n        return result.Substring(0, result.Length - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] parts = ip.Split('.');\n        string result = \"\";\n        foreach (string part in parts) {\n            int num = int.Parse(part);\n            result += num.ToString() + \".\";\n        }\n        return result.Substring(0, result.Length - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] parts = ip.Split('.');\n        string result = \"\";\n        foreach (string part in parts) {\n            int n = int.Parse(part);\n            result += n.ToString() + \".\";\n        }\n        return result.Substring(0, result.Length - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] parts = ip.Split('.');\n        string result = \"\";\n        for (int i = 0; i < parts.Length; i++) {\n            if (parts[i].Length > 1 && parts[i][0] == '0') {\n                result += parts[i].Substring(1);\n            } else {\n                result += parts[i];\n            }\n            if (i != parts.Length - 1) {\n                result += \".\";\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        var parts = ip.Split('.');\n        var result = new List<string>();\n        foreach (var part in parts) {\n            result.Add(part.TrimStart('0'));\n        }\n        return string.Join(\".\", result);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        var ipParts = ip.Split('.');\n        var result = new List<string>();\n        foreach (var part in ipParts) {\n            var partInt = int.Parse(part);\n            if (partInt == 0) {\n                result.Add(\"0\");\n            } else {\n                result.Add(partInt.ToString());\n            }\n        }\n        return string.Join(\".\", result);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123733,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_arr = ip.Split('.');\n        string new_ip = \"\";\n        for (int i = 0; i < ip_arr.Length; i++) {\n            if (ip_arr[i].Length > 1 && ip_arr[i][0] == '0') {\n                new_ip += ip_arr[i].Substring(1);\n            } else {\n                new_ip += ip_arr[i];\n            }\n            if (i != ip_arr.Length - 1) {\n                new_ip += \".\";\n            }\n        }\n        return new_ip;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_parts = ip.Split('.');\n        string[] ip_parts_new = new string[4];\n        for (int i = 0; i < 4; i++) {\n            ip_parts_new[i] = ip_parts[i].TrimStart('0');\n            if (ip_parts_new[i] == \"\") {\n                ip_parts_new[i] = \"0\";\n            }\n        }\n        return string.Join(\".\", ip_parts_new);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemovezeroIp (System.String ip) [0x00017] in <b5ff26f55a474692bca4d2f9a3454630>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <b5ff26f55a474692bca4d2f9a3454630>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemovezeroIp (System.String ip) [0x00017] in <b5ff26f55a474692bca4d2f9a3454630>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <b5ff26f55a474692bca4d2f9a3454630>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_parts = ip.Split('.');\n        string result = \"\";\n        for (int i = 0; i < ip_parts.Length; i++) {\n            int part = int.Parse(ip_parts[i]);\n            if (part == 0) {\n                result += \"0\";\n            } else {\n                result += part.ToString();\n            }\n            if (i != ip_parts.Length - 1) {\n                result += \".\";\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        var parts = ip.Split('.');\n        var result = new List<string>();\n        foreach (var part in parts) {\n            var num = int.Parse(part);\n            result.Add(num.ToString());\n        }\n        return string.Join(\".\", result);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_split = ip.Split('.');\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < ip_split.Length; i++) {\n            sb.Append(Convert.ToInt32(ip_split[i]));\n            if (i != ip_split.Length - 1) {\n                sb.Append(\".\");\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        var ip_arr = ip.Split('.');\n        var res = new List<string>();\n        foreach (var i in ip_arr) {\n            var num = int.Parse(i);\n            if (num == 0) {\n                res.Add(\"0\");\n            } else {\n                res.Add(num.ToString());\n            }\n        }\n        return string.Join(\".\", res);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] parts = ip.Split('.');\n        string result = \"\";\n        for (int i = 0; i < parts.Length; i++) {\n            if (parts[i].Length > 1 && parts[i][0] == '0') {\n                result += parts[i].Substring(1);\n            } else {\n                result += parts[i];\n            }\n            if (i != parts.Length - 1) {\n                result += \".\";\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_arr = ip.Split('.');\n        string res = \"\";\n        for (int i = 0; i < ip_arr.Length; i++) {\n            int num = int.Parse(ip_arr[i]);\n            if (num == 0) {\n                res += \"0\";\n            } else {\n                res += num.ToString();\n            }\n            if (i != ip_arr.Length - 1) {\n                res += \".\";\n            }\n        }\n        return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ipParts = ip.Split('.');\n        StringBuilder sb = new StringBuilder();\n        foreach (string part in ipParts) {\n            int partInt = int.Parse(part);\n            sb.Append(partInt.ToString());\n            sb.Append(\".\");\n        }\n        sb.Remove(sb.Length - 1, 1);\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ipParts = ip.Split('.');\n        string result = \"\";\n        for (int i = 0; i < ipParts.Length; i++) {\n            if (ipParts[i].Length > 1 && ipParts[i][0] == '0') {\n                result += ipParts[i].Substring(1);\n            } else {\n                result += ipParts[i];\n            }\n            if (i != ipParts.Length - 1) {\n                result += \".\";\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123733,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] parts = ip.Split('.');\n        string result = \"\";\n        foreach (string part in parts) {\n            int num = int.Parse(part);\n            result += num.ToString() + \".\";\n        }\n        return result.Substring(0, result.Length - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_split = ip.Split('.');\n        string[] ip_split_new = new string[4];\n        for (int i = 0; i < 4; i++) {\n            ip_split_new[i] = ip_split[i].TrimStart('0');\n            if (ip_split_new[i] == \"\") {\n                ip_split_new[i] = \"0\";\n            }\n        }\n        return String.Join(\".\", ip_split_new);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123736,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemovezeroIp (System.String ip) [0x00017] in <e07c32efdebe483aa37d567d82ef8d72>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <e07c32efdebe483aa37d567d82ef8d72>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemovezeroIp (System.String ip) [0x00017] in <e07c32efdebe483aa37d567d82ef8d72>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <e07c32efdebe483aa37d567d82ef8d72>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_parts = ip.Split('.');\n        string result = \"\";\n        foreach (string part in ip_parts) {\n            int part_int = int.Parse(part);\n            result += part_int.ToString() + \".\";\n        }\n        return result.Substring(0, result.Length - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123736,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        var sb = new StringBuilder();\n        var parts = ip.Split('.');\n        foreach (var part in parts) {\n            var num = int.Parse(part);\n            sb.Append(num.ToString());\n            sb.Append('.');\n        }\n        sb.Length--;\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123736,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_split = ip.Split('.');\n        string[] ip_split_new = new string[4];\n        for (int i = 0; i < 4; i++) {\n            while (ip_split[i].Length > 1 && ip_split[i][0] == '0') {\n                ip_split[i] = ip_split[i].Substring(1);\n            }\n            ip_split_new[i] = ip_split[i];\n        }\n        return string.Join(\".\", ip_split_new);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123736,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemovezeroIp (System.String ip) [0x00027] in <3b7e0e635736419bb06cb91ec5cd20c3>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <3b7e0e635736419bb06cb91ec5cd20c3>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemovezeroIp (System.String ip) [0x00027] in <3b7e0e635736419bb06cb91ec5cd20c3>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <3b7e0e635736419bb06cb91ec5cd20c3>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_parts = ip.Split('.');\n        string result = \"\";\n        for (int i = 0; i < ip_parts.Length; i++) {\n            if (ip_parts[i].Length > 1 && ip_parts[i][0] == '0') {\n                result += ip_parts[i].Substring(1);\n            } else {\n                result += ip_parts[i];\n            }\n            if (i != ip_parts.Length - 1) {\n                result += \".\";\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_arr = ip.Split('.');\n        string new_ip = \"\";\n        for (int i = 0; i < ip_arr.Length; i++) {\n            if (ip_arr[i].Length > 1 && ip_arr[i][0] == '0') {\n                new_ip += ip_arr[i].Substring(1);\n            } else {\n                new_ip += ip_arr[i];\n            }\n            if (i != ip_arr.Length - 1) {\n                new_ip += \".\";\n            }\n        }\n        return new_ip;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        var parts = ip.Split('.');\n        var result = new List<string>();\n        foreach (var part in parts) {\n            var partInt = int.Parse(part);\n            if (partInt == 0) {\n                result.Add(\"0\");\n            } else {\n                result.Add(partInt.ToString());\n            }\n        }\n        return string.Join(\".\", result);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123733,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_split = ip.Split('.');\n        string result = \"\";\n        foreach(string s in ip_split) {\n            int num = int.Parse(s);\n            result += num.ToString() + \".\";\n        }\n        return result.Substring(0, result.Length - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        var result = new StringBuilder();\n        var parts = ip.Split('.');\n        foreach (var part in parts) {\n            var partInt = int.Parse(part);\n            if (partInt == 0 && result.Length == 0) {\n                continue;\n            }\n            result.Append(partInt);\n            result.Append('.');\n        }\n        result.Remove(result.Length - 1, 1);\n        return result.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123736,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_arr = ip.Split('.');\n        string result = \"\";\n        for (int i = 0; i < ip_arr.Length; i++) {\n            result += int.Parse(ip_arr[i]);\n            if (i != ip_arr.Length - 1) {\n                result += \".\";\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123736,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_array = ip.Split('.');\n        string result = \"\";\n        for (int i = 0; i < ip_array.Length; i++) {\n            if (ip_array[i].Length > 1 && ip_array[i][0] == '0') {\n                result += ip_array[i].Substring(1);\n            } else {\n                result += ip_array[i];\n            }\n            if (i != ip_array.Length - 1) {\n                result += \".\";\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123732,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        var sb = new StringBuilder();\n        var parts = ip.Split('.');\n        foreach (var part in parts) {\n            if (part.Length > 1 && part[0] == '0') {\n                sb.Append(part.Substring(1));\n            } else {\n                sb.Append(part);\n            }\n            sb.Append('.');\n        }\n        sb.Remove(sb.Length - 1, 1);\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123736,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] parts = ip.Split('.');\n        string result = \"\";\n        foreach (string part in parts) {\n            int number = int.Parse(part);\n            result += number.ToString() + \".\";\n        }\n        return result.Substring(0, result.Length - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123736,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_split = ip.Split('.');\n        string new_ip = \"\";\n        foreach (string s in ip_split) {\n            int i = int.Parse(s);\n            new_ip += i.ToString() + \".\";\n        }\n        return new_ip.Substring(0, new_ip.Length - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123736,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ipParts = ip.Split('.');\n        string[] newIpParts = new string[4];\n        for (int i = 0; i < 4; i++) {\n            newIpParts[i] = ipParts[i].TrimStart('0');\n            if (newIpParts[i] == \"\") {\n                newIpParts[i] = \"0\";\n            }\n        }\n        return string.Join(\".\", newIpParts);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123736,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemovezeroIp (System.String ip) [0x00017] in <2195aa51f5264070a32fa45745933396>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <2195aa51f5264070a32fa45745933396>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemovezeroIp (System.String ip) [0x00017] in <2195aa51f5264070a32fa45745933396>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <2195aa51f5264070a32fa45745933396>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] parts = ip.Split('.');\n        StringBuilder sb = new StringBuilder();\n        foreach (string part in parts) {\n            int num = int.Parse(part);\n            if (num == 0) {\n                sb.Append(\"0.\");\n            } else {\n                sb.Append(num.ToString() + \".\");\n            }\n        }\n        return sb.ToString().TrimEnd('.');\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123736,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_arr = ip.Split('.');\n        string res = \"\";\n        for (int i = 0; i < ip_arr.Length; i++) {\n            if (ip_arr[i].Length > 1) {\n                if (ip_arr[i][0] == '0') {\n                    ip_arr[i] = ip_arr[i].Substring(1);\n                }\n            }\n            res += ip_arr[i];\n            if (i != ip_arr.Length - 1) {\n                res += \".\";\n            }\n        }\n        return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123736,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        var ipList = ip.Split('.');\n        var sb = new StringBuilder();\n        foreach (var s in ipList) {\n            var i = int.Parse(s);\n            sb.Append(i.ToString());\n            sb.Append('.');\n        }\n        sb.Remove(sb.Length - 1, 1);\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123736,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ipParts = ip.Split('.');\n        string[] result = new string[4];\n        for (int i = 0; i < 4; i++) {\n            result[i] = ipParts[i].TrimStart('0');\n            if (result[i] == \"\") {\n                result[i] = \"0\";\n            }\n        }\n        return string.Join(\".\", result);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123736,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemovezeroIp (System.String ip) [0x00017] in <531d83d50b7d48858d3a3217d8b43408>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <531d83d50b7d48858d3a3217d8b43408>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemovezeroIp (System.String ip) [0x00017] in <531d83d50b7d48858d3a3217d8b43408>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <531d83d50b7d48858d3a3217d8b43408>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_arr = ip.Split('.');\n        string res = \"\";\n        for (int i = 0; i < ip_arr.Length; i++) {\n            if (ip_arr[i].Length > 1 && ip_arr[i][0] == '0') {\n                res += ip_arr[i].Substring(1);\n            } else {\n                res += ip_arr[i];\n            }\n            if (i != ip_arr.Length - 1) {\n                res += \".\";\n            }\n        }\n        return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123736,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_arr = ip.Split('.');\n        string result = \"\";\n        foreach (string s in ip_arr) {\n            int i = int.Parse(s);\n            result += i.ToString() + \".\";\n        }\n        return result.Substring(0, result.Length - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_arr = ip.Split('.');\n        string result = \"\";\n        for (int i = 0; i < ip_arr.Length; i++) {\n            int num = int.Parse(ip_arr[i]);\n            if (num == 0) {\n                result += \"0.\";\n            } else {\n                result += num.ToString() + \".\";\n            }\n        }\n        return result.Substring(0, result.Length - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] parts = ip.Split('.');\n        string result = \"\";\n        foreach (string part in parts) {\n            int num = int.Parse(part);\n            result += num.ToString() + \".\";\n        }\n        return result.Substring(0, result.Length - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_array = ip.Split('.');\n        for (int i = 0; i < ip_array.Length; i++) {\n            if (ip_array[i].Length > 1 && ip_array[i][0] == '0') {\n                ip_array[i] = ip_array[i].Substring(1);\n            }\n        }\n        return string.Join(\".\", ip_array);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123736,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ipParts = ip.Split('.');\n        string result = \"\";\n        for (int i = 0; i < ipParts.Length; i++) {\n            int part = int.Parse(ipParts[i]);\n            if (part == 0) {\n                result += \"0\";\n            } else {\n                result += part.ToString();\n            }\n            if (i < ipParts.Length - 1) {\n                result += \".\";\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123736,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        var ipParts = ip.Split('.');\n        var result = new StringBuilder();\n        for (int i = 0; i < ipParts.Length; i++) {\n            var part = ipParts[i];\n            if (part.Length > 1 && part[0] == '0') {\n                result.Append(part.Substring(1));\n            } else {\n                result.Append(part);\n            }\n            if (i < ipParts.Length - 1) {\n                result.Append('.');\n            }\n        }\n        return result.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123736,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ipArr = ip.Split('.');\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < ipArr.Length; i++) {\n            if (ipArr[i].Length > 1 && ipArr[i][0] == '0') {\n                sb.Append(ipArr[i].Substring(1));\n            } else {\n                sb.Append(ipArr[i]);\n            }\n            if (i != ipArr.Length - 1) {\n                sb.Append('.');\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123736,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] parts = ip.Split('.');\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < parts.Length; i++) {\n            int part = int.Parse(parts[i]);\n            if (part == 0) {\n                sb.Append(\"0\");\n            } else {\n                sb.Append(part);\n            }\n            if (i != parts.Length - 1) {\n                sb.Append(\".\");\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123736,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_parts = ip.Split('.');\n        string[] new_ip = new string[4];\n        for (int i = 0; i < 4; i++) {\n            new_ip[i] = ip_parts[i].TrimStart('0');\n            if (new_ip[i] == \"\") {\n                new_ip[i] = \"0\";\n            }\n        }\n        return string.Join(\".\", new_ip);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123732,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemovezeroIp (System.String ip) [0x00017] in <a6f3181496284d7bae31fc2f11b3bcb9>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <a6f3181496284d7bae31fc2f11b3bcb9>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemovezeroIp (System.String ip) [0x00017] in <a6f3181496284d7bae31fc2f11b3bcb9>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <a6f3181496284d7bae31fc2f11b3bcb9>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_array = ip.Split('.');\n        string result = \"\";\n        foreach (string s in ip_array) {\n            result += int.Parse(s) + \".\";\n        }\n        return result.Substring(0, result.Length - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123736,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] parts = ip.Split('.');\n        string result = \"\";\n        foreach (string part in parts) {\n            int num = int.Parse(part);\n            result += num.ToString() + \".\";\n        }\n        return result.Substring(0, result.Length - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        var parts = ip.Split('.');\n        var result = new List<string>();\n        foreach (var part in parts) {\n            var num = int.Parse(part);\n            result.Add(num.ToString());\n        }\n        return string.Join(\".\", result);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        string[] ip_parts = ip.Split('.');\n        string[] new_ip = new string[4];\n        for (int i = 0; i < 4; i++) {\n            new_ip[i] = ip_parts[i].TrimStart('0');\n            if (new_ip[i] == \"\") {\n                new_ip[i] = \"0\";\n            }\n        }\n        return string.Join(\".\", new_ip);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123732,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemovezeroIp (System.String ip) [0x00017] in <a6f3181496284d7bae31fc2f11b3bcb9>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <a6f3181496284d7bae31fc2f11b3bcb9>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemovezeroIp (System.String ip) [0x00017] in <a6f3181496284d7bae31fc2f11b3bcb9>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <a6f3181496284d7bae31fc2f11b3bcb9>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove leading zeroes from an ip address.\n    public static string RemovezeroIp(string ip) {\n        var parts = ip.Split('.');\n        var result = new List<string>();\n        foreach (var part in parts) {\n            var partInt = int.Parse(part);\n            if (partInt == 0) {\n                result.Add(\"0\");\n            } else {\n                result.Add(partInt.ToString());\n            }\n        }\n        return string.Join(\".\", result);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemovezeroIp((\"216.08.094.196\")).Equals((\"216.8.94.196\")));\n    Debug.Assert(RemovezeroIp((\"12.01.024\")).Equals((\"12.1.24\")));\n    Debug.Assert(RemovezeroIp((\"216.08.094.0196\")).Equals((\"216.8.94.196\")));\n    }\n\n}\n",
      "timestamp": 1666123733,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
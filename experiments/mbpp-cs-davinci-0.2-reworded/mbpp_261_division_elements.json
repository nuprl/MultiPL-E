{
  "name": "mbpp_261_division_elements",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    public static long DivisionElements(long test_tup1, long test_tup2) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_261_division_elements.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(DivisionElements((long)Tuple.Create(10L, 4L, 6L, 9L), (long)Tuple.Create(5L, 2L, 3L, 3L)) == (long)Tuple.Create(2L, 2L, 2L, 3L));\n    Debug.Assert(DivisionElements((long)Tuple.Create(12L, 6L, 8L, 16L), (long)Tuple.Create(6L, 3L, 4L, 4L)) == (long)Tuple.Create(2L, 2L, 2L, 4L));\n    Debug.Assert(DivisionElements((long)Tuple.Create(20L, 14L, 36L, 18L), (long)Tuple.Create(5L, 7L, 6L, 9L)) == (long)Tuple.Create(4L, 2L, 6L, 2L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        return test_tup1 / test_tup2;",
    "        return test_tup1 / test_tup2;",
    "        return test_tup1 / test_tup2;",
    "        return test_tup1 / test_tup2;",
    "        return test_tup1 / test_tup2;",
    "        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        return test_tup1 / test_tup2;",
    "        return test_tup1 / test_tup2;",
    "        return test_tup1 / test_tup2;",
    "        return test_tup1 / test_tup2;",
    "        return test_tup1 / test_tup2;",
    "        return test_tup1 / test_tup2;",
    "        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        return test_tup1 / test_tup2;",
    "        return test_tup1 / test_tup2;",
    "        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        return test_tup1 / test_tup2;",
    "        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        return test_tup1 / test_tup2;",
    "        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        long result = 0;\n        try {\n            result = test_tup1 / test_tup2;\n        } catch (DivideByZeroException) {\n            Console.WriteLine(\"Divide by zero exception\");\n        }\n        return result;",
    "        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        return test_tup1 / test_tup2;",
    "        return test_tup1 / test_tup2;",
    "        return test_tup1 / test_tup2;",
    "        return test_tup1 / test_tup2;"
  ]
}
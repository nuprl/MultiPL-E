{
  "name": "mbpp_66_pos_count",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of positive numbers in a list.\n    public static long PosCount(List<long> list) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_66_pos_count.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(PosCount((new List<long>(new long[]{(long)1L, (long)-2L, (long)3L, (long)-4L}))) == (2L));\n    Debug.Assert(PosCount((new List<long>(new long[]{(long)3L, (long)4L, (long)5L, (long)-1L}))) == (3L));\n    Debug.Assert(PosCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))) == (4L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        long count = 0;\n        foreach (long item in list) {\n            if (item > 0) {\n                count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        foreach (long num in list) {\n            if (num > 0) {\n                count += 1;\n            }\n        }\n        return count;",
    "        return list.Count(x => x > 0);",
    "        long count = 0;\n        foreach (long i in list) {\n            if (i > 0) {\n                count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        foreach (long num in list) {\n            if (num > 0) {\n                count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        foreach (long num in list) {\n            if (num > 0) {\n                count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        foreach (long i in list) {\n            if (i > 0) {\n                count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        foreach (long i in list) {\n            if (i > 0) {\n                count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        foreach (long n in list) {\n            if (n > 0) {\n                count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        foreach (long i in list) {\n            if (i > 0) {\n                count += 1;\n            }\n        }\n        return count;",
    "        long count = 0;\n        foreach (long i in list) {\n            if (i > 0) {\n                count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        foreach (long num in list) {\n            if (num > 0) {\n                count++;\n            }\n        }\n        return count;",
    "        return list.Count(x => x > 0);",
    "        long count = 0;\n        foreach (long i in list) {\n            if (i > 0) {\n                count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        foreach (long num in list) {\n            if (num > 0) {\n                count++;\n            }\n        }\n        return count;",
    "        return list.Where(x => x > 0).Count();",
    "        return list.Count(x => x > 0);",
    "        long count = 0;\n        foreach (long item in list) {\n            if (item > 0) {\n                count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < list.Count; i++) {\n            if (list[i] > 0) {\n                count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        foreach (long i in list) {\n            if (i > 0) {\n                count++;\n            }\n        }\n        return count;"
  ]
}
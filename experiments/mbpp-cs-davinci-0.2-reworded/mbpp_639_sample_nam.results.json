{
  "name": "mbpp_639_sample_nam",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_639_sample_nam.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        // Write your code here\n        long sum = 0;\n        foreach (string name in sample_names) {\n            if (Char.IsUpper(name[0])) {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(x => x[0] >= 'A' && x[0] <= 'Z').Sum(x => x.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        long sum = 0;\n        foreach (string name in sample_names) {\n            if (Char.IsUpper(name[0])) {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(x => x[0] >= 'A' && x[0] <= 'Z').Sum(x => x.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(x => Char.IsUpper(x[0])).Sum(x => x.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        long sum = 0;\n        foreach (string name in sample_names) {\n            if (Char.IsUpper(name[0])) {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(x => x[0] >= 'A' && x[0] <= 'Z').Sum(x => x.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name.First() < 'a').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        // Your code goes here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fc807feb0dba4a95bbcb3c71b0f1886d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fc807feb0dba4a95bbcb3c71b0f1886d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(x => x[0] >= 'A' && x[0] <= 'Z').Sum(x => x.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(x => x[0] >= 'A' && x[0] <= 'Z').Sum(x => x.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(x => x[0] >= 'A' && x[0] <= 'Z').Sum(x => x.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] < 'a').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => Char.IsUpper(name[0])).Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        long sum = 0;\n        foreach (string name in sample_names) {\n            if (Char.IsUpper(name[0])) {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(x => x[0] >= 'A' && x[0] <= 'Z').Sum(x => x.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(x => x[0] >= 'A' && x[0] <= 'Z').Sum(x => x.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        long sum = 0;\n        foreach (string name in sample_names) {\n            if (Char.IsUpper(name[0])) {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        long sum = 0;\n        foreach (string name in sample_names) {\n            if (name[0] >= 'A' && name[0] <= 'Z') {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name.First() >= 'A' && name.First() <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        long sum = 0;\n        foreach (string name in sample_names) {\n            if (Char.IsUpper(name[0])) {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(x => x[0] >= 'A' && x[0] <= 'Z').Sum(x => x.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(x => x[0] >= 'A' && x[0] <= 'Z').Sum(x => x.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        long sum = 0;\n        foreach (string name in sample_names) {\n            if (Char.IsUpper(name[0])) {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(x => x[0] >= 'A' && x[0] <= 'Z').Sum(x => x.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(x => x[0] >= 'A' && x[0] <= 'Z').Sum(x => x.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        long sum = 0;\n        foreach (string name in sample_names) {\n            if (Char.IsUpper(name[0])) {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        long sum = 0;\n        foreach (string name in sample_names) {\n            if (Char.IsUpper(name[0])) {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        // Write your code here\n        long sum = 0;\n        foreach (var name in sample_names) {\n            if (name[0] >= 'A' && name[0] <= 'Z') {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(x => x[0] >= 'A' && x[0] <= 'Z').Sum(x => x.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(x => x[0] >= 'A' && x[0] <= 'Z').Sum(x => x.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(x => x[0] >= 'A' && x[0] <= 'Z').Sum(x => x.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(x => x[0] >= 'A' && x[0] <= 'Z').Sum(x => x.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(x => x[0] >= 'A' && x[0] <= 'Z').Sum(x => x.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        long sum = 0;\n        foreach (string name in sample_names) {\n            if (Char.IsUpper(name[0])) {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(x => x[0] >= 'A' && x[0] <= 'Z').Sum(x => x.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(x => Char.IsUpper(x[0])).Sum(x => x.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(x => x[0] >= 'A' && x[0] <= 'Z').Sum(x => x.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(x => x[0] >= 'A' && x[0] <= 'Z').Sum(x => x.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        long sum = 0;\n        foreach (string name in sample_names) {\n            if (Char.IsUpper(name[0])) {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        long sum = 0;\n        foreach (string name in sample_names) {\n            if (Char.IsUpper(name[0])) {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(x => Char.IsUpper(x[0])).Sum(x => x.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        long sum = 0;\n        foreach (string name in sample_names) {\n            if (Char.IsUpper(name[0])) {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(x => x[0] >= 'A' && x[0] <= 'Z').Sum(x => x.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        // Your code here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e21938fadb0146f69d1e965c5659ac91>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e21938fadb0146f69d1e965c5659ac91>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(x => char.IsUpper(x[0])).Sum(x => x.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        // Write your code here\n        long sum = 0;\n        foreach (string name in sample_names) {\n            if (Char.IsUpper(name[0])) {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(x => x[0] >= 'A' && x[0] <= 'Z').Sum(x => x.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] < 'a').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(x => Char.IsUpper(x[0])).Sum(x => x.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        long sum = 0;\n        foreach (string name in sample_names) {\n            if (name[0] >= 'A' && name[0] <= 'Z') {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        long sum = 0;\n        foreach (string name in sample_names) {\n            if (Char.IsUpper(name[0])) {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        long sum = 0;\n        foreach (string name in sample_names) {\n            if (Char.IsUpper(name[0])) {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(s => s[0] >= 'A' && s[0] <= 'Z').Sum(s => s.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        long sum = 0;\n        foreach (string name in sample_names) {\n            if (Char.IsUpper(name[0])) {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        // Write your code here\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        long sum = 0;\n        foreach (string name in sample_names) {\n            if (Char.IsUpper(name[0])) {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(x => !Char.IsLower(x[0])).Sum(x => x.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        long sum = 0;\n        foreach (string name in sample_names) {\n            if (Char.IsUpper(name[0])) {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(x => x[0] >= 'A' && x[0] <= 'Z').Sum(x => x.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        long sum = 0;\n        foreach (var name in sample_names) {\n            if (name[0] >= 'A' && name[0] <= 'Z') {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        long sum = 0;\n        foreach (string name in sample_names) {\n            if (Char.IsUpper(name[0])) {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        long sum = 0;\n        foreach (string name in sample_names) {\n            if (Char.IsUpper(name[0])) {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(x => x[0] >= 'A' && x[0] <= 'Z').Sum(x => x.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(x => !Char.IsLower(x[0])).Sum(x => x.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        long sum = 0;\n        foreach (string name in sample_names) {\n            if (Char.IsUpper(name[0])) {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(x => Char.IsUpper(x[0])).Sum(x => x.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => char.IsUpper(name[0])).Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        var sum = 0;\n        foreach (var name in sample_names) {\n            if (Char.IsUpper(name[0])) {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] < 'a').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        long sum = 0;\n        foreach (string name in sample_names) {\n            if (name[0] >= 'A' && name[0] <= 'Z') {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(x => x[0] >= 'A' && x[0] <= 'Z').Sum(x => x.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(x => x[0] >= 'A' && x[0] <= 'Z').Sum(x => x.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] < 'a').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name.First() < 'a').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        long sum = 0;\n        foreach (string name in sample_names) {\n            if (Char.IsUpper(name[0])) {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(x => !Char.IsLower(x[0])).Sum(x => x.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(x => x[0] < 'a').Sum(x => x.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(x => x[0] >= 'A' && x[0] <= 'Z').Sum(x => x.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        long sum = 0;\n        foreach (string name in sample_names) {\n            if (Char.IsUpper(name[0])) {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        long sum = 0;\n        foreach (string name in sample_names) {\n            if (Char.IsUpper(name[0])) {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(x => x[0] >= 'A' && x[0] <= 'Z').Sum(x => x.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        long sum = 0;\n        foreach (string name in sample_names) {\n            if (Char.IsUpper(name[0])) {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(x => x[0] >= 'A' && x[0] <= 'Z').Sum(x => x.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        // Write your code here\n        return sample_names.Where(x => x.First() >= 'A' && x.First() <= 'Z').Sum(x => x.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        long sum = 0;\n        foreach (string name in sample_names) {\n            if (Char.IsUpper(name[0])) {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        long sum = 0;\n        foreach (string name in sample_names) {\n            if (Char.IsUpper(name[0])) {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        long sum = 0;\n        foreach (string name in sample_names) {\n            if (Char.IsUpper(name[0])) {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        long total = 0;\n        foreach (string name in sample_names) {\n            if (Char.IsUpper(name[0])) {\n                total += name.Length;\n            }\n        }\n        return total;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => char.IsUpper(name[0])).Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        long sum = 0;\n        foreach (string name in sample_names) {\n            if (Char.IsUpper(name[0])) {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        long sum = 0;\n        foreach (string name in sample_names) {\n            if (Char.IsUpper(name[0])) {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(x => !Char.IsLower(x[0])).Sum(x => x.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        long sum = 0;\n        foreach (string name in sample_names) {\n            if (Char.IsUpper(name[0])) {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] != name.ToLower()[0]).Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(x => x[0] >= 'A' && x[0] <= 'Z').Sum(x => x.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        // Your code here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e21938fadb0146f69d1e965c5659ac91>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e21938fadb0146f69d1e965c5659ac91>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(s => Char.IsUpper(s[0])).Sum(s => s.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] < 'a').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        long sum = 0;\n        foreach (string name in sample_names) {\n            if (Char.IsUpper(name[0])) {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        long sum = 0;\n        foreach (string name in sample_names) {\n            if (Char.IsUpper(name[0])) {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        long sum = 0;\n        foreach (string name in sample_names) {\n            if (name[0] >= 'A' && name[0] <= 'Z') {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => char.IsUpper(name[0])).Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(x => x[0] >= 'A' && x[0] <= 'Z').Sum(x => x.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        long sum = 0;\n        foreach (string name in sample_names) {\n            if (Char.IsUpper(name[0])) {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => char.IsUpper(name[0])).Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(s => s[0] >= 'A' && s[0] <= 'Z').Sum(s => s.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => char.IsUpper(name[0])).Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(x => x[0] >= 'A' && x[0] <= 'Z').Sum(x => x.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        long sum = 0;\n        foreach (string name in sample_names) {\n            if (Char.IsUpper(name[0])) {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name.First() < 'a').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        long sum = 0;\n        foreach(string name in sample_names) {\n            if (Char.IsUpper(name[0])) {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        long sum = 0;\n        foreach (string name in sample_names) {\n            if (Char.IsUpper(name[0])) {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => Char.IsUpper(name[0])).Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(x => !Char.IsLower(x[0])).Sum(x => x.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(x => !Char.IsLower(x[0])).Sum(x => x.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        long sum = 0;\n        foreach (string name in sample_names) {\n            if (Char.IsUpper(name[0])) {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        long sum = 0;\n        foreach (string name in sample_names) {\n            if (Char.IsUpper(name[0])) {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        long sum = 0;\n        foreach (string name in sample_names) {\n            if (Char.IsUpper(name[0])) {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(x => x[0] >= 'A' && x[0] <= 'Z').Sum(x => x.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(x => char.IsUpper(x[0])).Sum(x => x.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(s => s[0] >= 'A' && s[0] <= 'Z').Sum(s => s.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(x => Char.IsUpper(x[0])).Sum(x => x.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => char.IsUpper(name[0])).Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        long sum = 0;\n        foreach (string name in sample_names) {\n            if (name.Length > 0 && Char.IsUpper(name[0])) {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(x => x[0] >= 'A' && x[0] <= 'Z').Sum(x => x.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        long sum = 0;\n        foreach (string name in sample_names) {\n            if (Char.IsUpper(name[0])) {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        long sum = 0;\n        foreach (string name in sample_names) {\n            if (Char.IsUpper(name[0])) {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        long sum = 0;\n        foreach (string name in sample_names) {\n            if (Char.IsUpper(name[0])) {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(x => char.IsUpper(x[0])).Sum(x => x.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] < 'a').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(x => !char.IsLower(x[0])).Sum(x => x.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        long sum = 0;\n        foreach (string name in sample_names) {\n            if (Char.IsLower(name[0])) {\n                continue;\n            }\n            sum += name.Length;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        long sum = 0;\n        foreach (string name in sample_names) {\n            if (Char.IsUpper(name[0])) {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        long sum = 0;\n        foreach (string name in sample_names) {\n            if (Char.IsUpper(name[0])) {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        long sum = 0;\n        foreach (string name in sample_names) {\n            if (Char.IsUpper(name[0])) {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        long sum = 0;\n        foreach (string name in sample_names) {\n            if (Char.IsUpper(name[0])) {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name[0] >= 'A' && name[0] <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        long sum = 0;\n        foreach (string name in sample_names) {\n            if (Char.IsUpper(name[0])) {\n                sum += name.Length;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(name => name.First() >= 'A' && name.First() <= 'Z').Sum(name => name.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    public static long SampleNam(List<string> sample_names) {\n        return sample_names.Where(x => !Char.IsLower(x[0])).Sum(x => x.Length);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"sally\", (string)\"Dylan\", (string)\"rebecca\", (string)\"Diana\", (string)\"Joanne\", (string)\"keith\"}))) == (16L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"php\", (string)\"res\", (string)\"Python\", (string)\"abcd\", (string)\"Java\", (string)\"aaa\"}))) == (10L));\n    Debug.Assert(SampleNam((new List<string>(new string[]{(string)\"abcd\", (string)\"Python\", (string)\"abba\", (string)\"aba\"}))) == (6L));\n    }\n\n}\n",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
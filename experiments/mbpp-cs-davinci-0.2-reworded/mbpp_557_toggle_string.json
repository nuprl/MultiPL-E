{
  "name": "mbpp_557_toggle_string",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to toggle the case of all characters in a string.\n    public static string ToggleString(string str) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_557_toggle_string.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(ToggleString((\"Python\")).Equals((\"pYTHON\")));\n    Debug.Assert(ToggleString((\"Pangram\")).Equals((\"pANGRAM\")));\n    Debug.Assert(ToggleString((\"LIttLE\")).Equals((\"liTTle\")));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length; i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i] = Char.ToUpper(chars[i]);\n            } else {\n                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n        return new string(chars);",
    "        char[] charArray = str.ToCharArray();\n        for (int i = 0; i < charArray.Length; i++) {\n            char letter = charArray[i];\n            if (char.IsLower(letter)) {\n                charArray[i] = char.ToUpper(letter);\n            } else if (char.IsUpper(letter)) {\n                charArray[i] = char.ToLower(letter);\n            }\n        }\n        return new string(charArray);",
    "        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length; i++) {\n            if (chars[i] >= 'A' && chars[i] <= 'Z') {\n                chars[i] = (char)(chars[i] + 32);\n            } else if (chars[i] >= 'a' && chars[i] <= 'z') {\n                chars[i] = (char)(chars[i] - 32);\n            }\n        }\n        return new string(chars);",
    "        char[] arr = str.ToCharArray();\n        for (int i = 0; i < arr.Length; i++) {\n            if (char.IsLower(arr[i])) {\n                arr[i] = char.ToUpper(arr[i]);\n            } else {\n                arr[i] = char.ToLower(arr[i]);\n            }\n        }\n        return new string(arr);",
    "        var sb = new StringBuilder();\n        foreach (var c in str) {\n            if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n            } else {\n                sb.Append(char.ToUpper(c));\n            }\n        }\n        return sb.ToString();",
    "        char[] arr = str.ToCharArray();\n        for (int i = 0; i < arr.Length; i++) {\n            if (char.IsUpper(arr[i])) {\n                arr[i] = char.ToLower(arr[i]);\n            } else {\n                arr[i] = char.ToUpper(arr[i]);\n            }\n        }\n        return new string(arr);",
    "        return new string(str.Select(c => char.IsLetter(c) ? (char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)) : c).ToArray());",
    "        char[] arr = str.ToCharArray();\n        for (int i = 0; i < arr.Length; i++) {\n            if (Char.IsUpper(arr[i])) {\n                arr[i] = Char.ToLower(arr[i]);\n            } else {\n                arr[i] = Char.ToUpper(arr[i]);\n            }\n        }\n        return new string(arr);",
    "        string result = \"\";\n        foreach (char c in str) {\n            if (char.IsUpper(c)) {\n                result += char.ToLower(c);\n            } else {\n                result += char.ToUpper(c);\n            }\n        }\n        return result;",
    "        var sb = new StringBuilder();\n        foreach (var c in str) {\n            if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n            } else {\n                sb.Append(char.ToUpper(c));\n            }\n        }\n        return sb.ToString();",
    "        StringBuilder sb = new StringBuilder();\n        foreach (char c in str) {\n            if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n            } else {\n                sb.Append(char.ToUpper(c));\n            }\n        }\n        return sb.ToString();",
    "        StringBuilder sb = new StringBuilder();\n        foreach (char c in str) {\n            if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n            } else {\n                sb.Append(char.ToUpper(c));\n            }\n        }\n        return sb.ToString();",
    "        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length; i++) {\n            char c = chars[i];\n            if (Char.IsLower(c)) {\n                chars[i] = Char.ToUpper(c);\n            } else {\n                chars[i] = Char.ToLower(c);\n            }\n        }\n        return new string(chars);",
    "        string result = \"\";\n        foreach (char c in str) {\n            if (char.IsUpper(c)) {\n                result += char.ToLower(c);\n            } else {\n                result += char.ToUpper(c);\n            }\n        }\n        return result;",
    "        var sb = new StringBuilder();\n        foreach (var c in str) {\n            if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n            } else {\n                sb.Append(char.ToUpper(c));\n            }\n        }\n        return sb.ToString();",
    "        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length; i++) {\n            char c = chars[i];\n            if (c >= 'a' && c <= 'z') {\n                chars[i] = (char)(c - 'a' + 'A');\n            } else if (c >= 'A' && c <= 'Z') {\n                chars[i] = (char)(c - 'A' + 'a');\n            }\n        }\n        return new string(chars);",
    "        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length; i++) {\n            char c = chars[i];\n            if (c >= 'A' && c <= 'Z') {\n                chars[i] = (char)(c + 32);\n            } else if (c >= 'a' && c <= 'z') {\n                chars[i] = (char)(c - 32);\n            }\n        }\n        return new string(chars);",
    "        StringBuilder sb = new StringBuilder();\n        foreach (char c in str) {\n            if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n            } else {\n                sb.Append(char.ToUpper(c));\n            }\n        }\n        return sb.ToString();",
    "        char[] charArray = str.ToCharArray();\n        for (int i = 0; i < charArray.Length; i++) {\n            charArray[i] = char.IsUpper(charArray[i]) ? char.ToLower(charArray[i]) : char.ToUpper(charArray[i]);\n        }\n        return new string(charArray);",
    "        var sb = new StringBuilder();\n        foreach (var c in str) {\n            if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n            } else {\n                sb.Append(char.ToUpper(c));\n            }\n        }\n        return sb.ToString();"
  ]
}
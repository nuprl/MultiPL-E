{
  "name": "mbpp_108_merge_sorted_list",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to merge three lists into a single sorted list.\n    public static List<long> MergeSortedList(List<long> num1, List<long> num2, List<long> num3) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_108_merge_sorted_list.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(MergeSortedList((new List<long>(new long[]{(long)25L, (long)24L, (long)15L, (long)4L, (long)5L, (long)29L, (long)110L})), (new List<long>(new long[]{(long)19L, (long)20L, (long)11L, (long)56L, (long)25L, (long)233L, (long)154L})), (new List<long>(new long[]{(long)24L, (long)26L, (long)54L, (long)48L}))).Equals((new List<long>(new long[]{(long)4L, (long)5L, (long)11L, (long)15L, (long)19L, (long)20L, (long)24L, (long)24L, (long)25L, (long)25L, (long)26L, (long)29L, (long)48L, (long)54L, (long)56L, (long)110L, (long)154L, (long)233L}))));\n    Debug.Assert(MergeSortedList((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)6L, (long)8L, (long)9L})), (new List<long>(new long[]{(long)2L, (long)5L, (long)7L, (long)11L})), (new List<long>(new long[]{(long)1L, (long)4L, (long)7L, (long)8L, (long)12L}))).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)5L, (long)6L, (long)7L, (long)7L, (long)8L, (long)8L, (long)9L, (long)11L, (long)12L}))));\n    Debug.Assert(MergeSortedList((new List<long>(new long[]{(long)18L, (long)14L, (long)10L, (long)9L, (long)8L, (long)7L, (long)9L, (long)3L, (long)2L, (long)4L, (long)1L})), (new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L})), (new List<long>(new long[]{(long)12L, (long)74L, (long)9L, (long)50L, (long)61L, (long)41L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)7L, (long)8L, (long)9L, (long)9L, (long)9L, (long)10L, (long)12L, (long)14L, (long)14L, (long)18L, (long)22L, (long)25L, (long)25L, (long)35L, (long)41L, (long)50L, (long)58L, (long)61L, (long)65L, (long)74L, (long)75L, (long)85L}))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        List<long> result = new List<long>();\n        int i = 0, j = 0, k = 0;\n        while (i < num1.Count && j < num2.Count && k < num3.Count) {\n            if (num1[i] < num2[j] && num1[i] < num3[k]) {\n                result.Add(num1[i]);\n                i++;\n            } else if (num2[j] < num1[i] && num2[j] < num3[k]) {\n                result.Add(num2[j]);\n                j++;\n            } else {\n                result.Add(num3[k]);\n                k++;\n            }\n        }\n        while (i < num1.Count) {\n            result.Add(num1[i]);\n            i++;\n        }\n        while (j < num2.Count) {\n            result.Add(num2[j]);\n            j++;\n        }\n        while (k < num3.Count) {\n            result.Add(num3[k]);\n            k++;\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        int i = 0, j = 0, k = 0;\n        while (i < num1.Count && j < num2.Count && k < num3.Count) {\n            if (num1[i] < num2[j]) {\n                if (num1[i] < num3[k]) {\n                    result.Add(num1[i]);\n                    i++;\n                } else {\n                    result.Add(num3[k]);\n                    k++;\n                }\n            } else {\n                if (num2[j] < num3[k]) {\n                    result.Add(num2[j]);\n                    j++;\n                } else {\n                    result.Add(num3[k]);\n                    k++;\n                }\n            }\n        }\n        while (i < num1.Count) {\n            result.Add(num1[i]);\n            i++;\n        }\n        while (j < num2.Count) {\n            result.Add(num2[j]);\n            j++;\n        }\n        while (k < num3.Count) {\n            result.Add(num3[k]);\n            k++;\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        int i = 0, j = 0, k = 0;\n        while (i < num1.Count && j < num2.Count && k < num3.Count) {\n            if (num1[i] < num2[j]) {\n                if (num1[i] < num3[k]) {\n                    result.Add(num1[i]);\n                    i++;\n                } else {\n                    result.Add(num3[k]);\n                    k++;\n                }\n            } else {\n                if (num2[j] < num3[k]) {\n                    result.Add(num2[j]);\n                    j++;\n                } else {\n                    result.Add(num3[k]);\n                    k++;\n                }\n            }\n        }\n        while (i < num1.Count) {\n            result.Add(num1[i]);\n            i++;\n        }\n        while (j < num2.Count) {\n            result.Add(num2[j]);\n            j++;\n        }\n        while (k < num3.Count) {\n            result.Add(num3[k]);\n            k++;\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        int i = 0, j = 0, k = 0;\n        while (i < num1.Count && j < num2.Count && k < num3.Count) {\n            if (num1[i] < num2[j]) {\n                if (num1[i] < num3[k]) {\n                    result.Add(num1[i]);\n                    i++;\n                } else {\n                    result.Add(num3[k]);\n                    k++;\n                }\n            } else {\n                if (num2[j] < num3[k]) {\n                    result.Add(num2[j]);\n                    j++;\n                } else {\n                    result.Add(num3[k]);\n                    k++;\n                }\n            }\n        }\n        while (i < num1.Count) {\n            result.Add(num1[i]);\n            i++;\n        }\n        while (j < num2.Count) {\n            result.Add(num2[j]);\n            j++;\n        }\n        while (k < num3.Count) {\n            result.Add(num3[k]);\n            k++;\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        int i = 0, j = 0, k = 0;\n        while (i < num1.Count && j < num2.Count && k < num3.Count) {\n            if (num1[i] < num2[j]) {\n                if (num1[i] < num3[k]) {\n                    result.Add(num1[i]);\n                    i++;\n                } else {\n                    result.Add(num3[k]);\n                    k++;\n                }\n            } else {\n                if (num2[j] < num3[k]) {\n                    result.Add(num2[j]);\n                    j++;\n                } else {\n                    result.Add(num3[k]);\n                    k++;\n                }\n            }\n        }\n        while (i < num1.Count) {\n            result.Add(num1[i]);\n            i++;\n        }\n        while (j < num2.Count) {\n            result.Add(num2[j]);\n            j++;\n        }\n        while (k < num3.Count) {\n            result.Add(num3[k]);\n            k++;\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        int i = 0, j = 0, k = 0;\n        while (i < num1.Count && j < num2.Count && k < num3.Count) {\n            if (num1[i] < num2[j] && num1[i] < num3[k]) {\n                result.Add(num1[i]);\n                i++;\n            } else if (num2[j] < num1[i] && num2[j] < num3[k]) {\n                result.Add(num2[j]);\n                j++;\n            } else {\n                result.Add(num3[k]);\n                k++;\n            }\n        }\n        while (i < num1.Count) {\n            result.Add(num1[i]);\n            i++;\n        }\n        while (j < num2.Count) {\n            result.Add(num2[j]);\n            j++;\n        }\n        while (k < num3.Count) {\n            result.Add(num3[k]);\n            k++;\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        int i = 0, j = 0, k = 0;\n        while (i < num1.Count && j < num2.Count && k < num3.Count) {\n            if (num1[i] < num2[j] && num1[i] < num3[k]) {\n                result.Add(num1[i]);\n                i++;\n            } else if (num2[j] < num1[i] && num2[j] < num3[k]) {\n                result.Add(num2[j]);\n                j++;\n            } else {\n                result.Add(num3[k]);\n                k++;\n            }\n        }\n        while (i < num1.Count) {\n            result.Add(num1[i]);\n            i++;\n        }\n        while (j < num2.Count) {\n            result.Add(num2[j]);\n            j++;\n        }\n        while (k < num3.Count) {\n            result.Add(num3[k]);\n            k++;\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        int i = 0, j = 0, k = 0;\n        while (i < num1.Count && j < num2.Count && k < num3.Count) {\n            if (num1[i] <= num2[j] && num1[i] <= num3[k]) {\n                result.Add(num1[i]);\n                i++;\n            } else if (num2[j] <= num1[i] && num2[j] <= num3[k]) {\n                result.Add(num2[j]);\n                j++;\n            } else {\n                result.Add(num3[k]);\n                k++;\n            }\n        }\n        while (i < num1.Count) {\n            result.Add(num1[i]);\n            i++;\n        }\n        while (j < num2.Count) {\n            result.Add(num2[j]);\n            j++;\n        }\n        while (k < num3.Count) {\n            result.Add(num3[k]);\n            k++;\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        int i = 0, j = 0, k = 0;\n        while (i < num1.Count && j < num2.Count && k < num3.Count) {\n            if (num1[i] < num2[j]) {\n                if (num1[i] < num3[k]) {\n                    result.Add(num1[i]);\n                    i++;\n                } else {\n                    result.Add(num3[k]);\n                    k++;\n                }\n            } else {\n                if (num2[j] < num3[k]) {\n                    result.Add(num2[j]);\n                    j++;\n                } else {\n                    result.Add(num3[k]);\n                    k++;\n                }\n            }\n        }\n        while (i < num1.Count) {\n            result.Add(num1[i]);\n            i++;\n        }\n        while (j < num2.Count) {\n            result.Add(num2[j]);\n            j++;\n        }\n        while (k < num3.Count) {\n            result.Add(num3[k]);\n            k++;\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        int i = 0;\n        int j = 0;\n        int k = 0;\n        while (i < num1.Count && j < num2.Count && k < num3.Count) {\n            if (num1[i] <= num2[j] && num1[i] <= num3[k]) {\n                result.Add(num1[i]);\n                i++;\n            } else if (num2[j] <= num1[i] && num2[j] <= num3[k]) {\n                result.Add(num2[j]);\n                j++;\n            } else if (num3[k] <= num1[i] && num3[k] <= num2[j]) {\n                result.Add(num3[k]);\n                k++;\n            }\n        }\n        while (i < num1.Count) {\n            result.Add(num1[i]);\n            i++;\n        }\n        while (j < num2.Count) {\n            result.Add(num2[j]);\n            j++;\n        }\n        while (k < num3.Count) {\n            result.Add(num3[k]);\n            k++;\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        int i = 0, j = 0, k = 0;\n        while (i < num1.Count && j < num2.Count && k < num3.Count) {\n            if (num1[i] < num2[j]) {\n                if (num1[i] < num3[k]) {\n                    result.Add(num1[i]);\n                    i++;\n                } else {\n                    result.Add(num3[k]);\n                    k++;\n                }\n            } else {\n                if (num2[j] < num3[k]) {\n                    result.Add(num2[j]);\n                    j++;\n                } else {\n                    result.Add(num3[k]);\n                    k++;\n                }\n            }\n        }\n        while (i < num1.Count) {\n            result.Add(num1[i]);\n            i++;\n        }\n        while (j < num2.Count) {\n            result.Add(num2[j]);\n            j++;\n        }\n        while (k < num3.Count) {\n            result.Add(num3[k]);\n            k++;\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        int i = 0, j = 0, k = 0;\n        while (i < num1.Count && j < num2.Count && k < num3.Count) {\n            if (num1[i] < num2[j]) {\n                if (num1[i] < num3[k]) {\n                    result.Add(num1[i]);\n                    i++;\n                } else {\n                    result.Add(num3[k]);\n                    k++;\n                }\n            } else {\n                if (num2[j] < num3[k]) {\n                    result.Add(num2[j]);\n                    j++;\n                } else {\n                    result.Add(num3[k]);\n                    k++;\n                }\n            }\n        }\n        while (i < num1.Count) {\n            result.Add(num1[i]);\n            i++;\n        }\n        while (j < num2.Count) {\n            result.Add(num2[j]);\n            j++;\n        }\n        while (k < num3.Count) {\n            result.Add(num3[k]);\n            k++;\n        }\n        return result;",
    "        var result = new List<long>();\n        var i = 0;\n        var j = 0;\n        var k = 0;\n        while (i < num1.Count && j < num2.Count && k < num3.Count) {\n            if (num1[i] < num2[j]) {\n                if (num1[i] < num3[k]) {\n                    result.Add(num1[i]);\n                    i++;\n                } else {\n                    result.Add(num3[k]);\n                    k++;\n                }\n            } else {\n                if (num2[j] < num3[k]) {\n                    result.Add(num2[j]);\n                    j++;\n                } else {\n                    result.Add(num3[k]);\n                    k++;\n                }\n            }\n        }\n        while (i < num1.Count) {\n            result.Add(num1[i]);\n            i++;\n        }\n        while (j < num2.Count) {\n            result.Add(num2[j]);\n            j++;\n        }\n        while (k < num3.Count) {\n            result.Add(num3[k]);\n            k++;\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        int i = 0, j = 0, k = 0;\n        while (i < num1.Count && j < num2.Count && k < num3.Count) {\n            if (num1[i] < num2[j]) {\n                if (num1[i] < num3[k]) {\n                    result.Add(num1[i]);\n                    i++;\n                } else {\n                    result.Add(num3[k]);\n                    k++;\n                }\n            } else {\n                if (num2[j] < num3[k]) {\n                    result.Add(num2[j]);\n                    j++;\n                } else {\n                    result.Add(num3[k]);\n                    k++;\n                }\n            }\n        }\n        while (i < num1.Count) {\n            result.Add(num1[i]);\n            i++;\n        }\n        while (j < num2.Count) {\n            result.Add(num2[j]);\n            j++;\n        }\n        while (k < num3.Count) {\n            result.Add(num3[k]);\n            k++;\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        int i = 0, j = 0, k = 0;\n        while (i < num1.Count && j < num2.Count && k < num3.Count) {\n            if (num1[i] <= num2[j] && num1[i] <= num3[k]) {\n                result.Add(num1[i]);\n                i++;\n            } else if (num2[j] <= num1[i] && num2[j] <= num3[k]) {\n                result.Add(num2[j]);\n                j++;\n            } else {\n                result.Add(num3[k]);\n                k++;\n            }\n        }\n        while (i < num1.Count) {\n            result.Add(num1[i]);\n            i++;\n        }\n        while (j < num2.Count) {\n            result.Add(num2[j]);\n            j++;\n        }\n        while (k < num3.Count) {\n            result.Add(num3[k]);\n            k++;\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        int i = 0, j = 0, k = 0;\n        while (i < num1.Count && j < num2.Count && k < num3.Count) {\n            if (num1[i] < num2[j]) {\n                if (num1[i] < num3[k]) {\n                    result.Add(num1[i]);\n                    i++;\n                } else {\n                    result.Add(num3[k]);\n                    k++;\n                }\n            } else {\n                if (num2[j] < num3[k]) {\n                    result.Add(num2[j]);\n                    j++;\n                } else {\n                    result.Add(num3[k]);\n                    k++;\n                }\n            }\n        }\n        while (i < num1.Count) {\n            result.Add(num1[i]);\n            i++;\n        }\n        while (j < num2.Count) {\n            result.Add(num2[j]);\n            j++;\n        }\n        while (k < num3.Count) {\n            result.Add(num3[k]);\n            k++;\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        int i = 0, j = 0, k = 0;\n        while (i < num1.Count && j < num2.Count && k < num3.Count) {\n            if (num1[i] < num2[j]) {\n                if (num1[i] < num3[k]) {\n                    result.Add(num1[i]);\n                    i++;\n                } else {\n                    result.Add(num3[k]);\n                    k++;\n                }\n            } else {\n                if (num2[j] < num3[k]) {\n                    result.Add(num2[j]);\n                    j++;\n                } else {\n                    result.Add(num3[k]);\n                    k++;\n                }\n            }\n        }\n        while (i < num1.Count) {\n            result.Add(num1[i]);\n            i++;\n        }\n        while (j < num2.Count) {\n            result.Add(num2[j]);\n            j++;\n        }\n        while (k < num3.Count) {\n            result.Add(num3[k]);\n            k++;\n        }\n        return result;",
    "        var result = new List<long>();\n        var i = 0;\n        var j = 0;\n        var k = 0;\n        while (i < num1.Count && j < num2.Count && k < num3.Count) {\n            if (num1[i] < num2[j]) {\n                if (num1[i] < num3[k]) {\n                    result.Add(num1[i]);\n                    i++;\n                } else {\n                    result.Add(num3[k]);\n                    k++;\n                }\n            } else {\n                if (num2[j] < num3[k]) {\n                    result.Add(num2[j]);\n                    j++;\n                } else {\n                    result.Add(num3[k]);\n                    k++;\n                }\n            }\n        }\n        while (i < num1.Count) {\n            result.Add(num1[i]);\n            i++;\n        }\n        while (j < num2.Count) {\n            result.Add(num2[j]);\n            j++;\n        }\n        while (k < num3.Count) {\n            result.Add(num3[k]);\n            k++;\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        int i = 0, j = 0, k = 0;\n        while (i < num1.Count && j < num2.Count && k < num3.Count) {\n            if (num1[i] < num2[j] && num1[i] < num3[k]) {\n                result.Add(num1[i]);\n                i++;\n            } else if (num2[j] < num1[i] && num2[j] < num3[k]) {\n                result.Add(num2[j]);\n                j++;\n            } else {\n                result.Add(num3[k]);\n                k++;\n            }\n        }\n        while (i < num1.Count) {\n            result.Add(num1[i]);\n            i++;\n        }\n        while (j < num2.Count) {\n            result.Add(num2[j]);\n            j++;\n        }\n        while (k < num3.Count) {\n            result.Add(num3[k]);\n            k++;\n        }\n        return result;",
    "        var result = new List<long>();\n        var i = 0;\n        var j = 0;\n        var k = 0;\n        while (i < num1.Count && j < num2.Count && k < num3.Count) {\n            if (num1[i] < num2[j]) {\n                if (num1[i] < num3[k]) {\n                    result.Add(num1[i]);\n                    i++;\n                } else {\n                    result.Add(num3[k]);\n                    k++;\n                }\n            } else {\n                if (num2[j] < num3[k]) {\n                    result.Add(num2[j]);\n                    j++;\n                } else {\n                    result.Add(num3[k]);\n                    k++;\n                }\n            }\n        }\n        while (i < num1.Count) {\n            result.Add(num1[i]);\n            i++;\n        }\n        while (j < num2.Count) {\n            result.Add(num2[j]);\n            j++;\n        }\n        while (k < num3.Count) {\n            result.Add(num3[k]);\n            k++;\n        }\n        return result;"
  ]
}
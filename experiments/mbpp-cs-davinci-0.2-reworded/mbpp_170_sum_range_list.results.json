{
  "name": "mbpp_170_sum_range_list",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_170_sum_range_list.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (int i = (int)m; i <= n; i++) {\n            sum += list1[i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (int i = (int)m; i <= n; i++) {\n            sum += list1[i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (int i = (int)m; i <= n; i++) {\n            sum += list1[i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (int i = (int)m; i <= n; i++) {\n            sum += list1[i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (int i = (int)m; i <= n; i++) {\n            sum += list1[i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (int i = (int)m; i <= n; i++) {\n            sum += list1[i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (int i = (int)m; i <= n; i++) {\n            sum += list1[i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++)\n            sum += list1[(int)i];\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (int i = (int)m; i <= n; i++) {\n            sum += list1[i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (int i = (int)m; i <= n; i++) {\n            sum += list1[i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (int i = (int)m; i < n; i++) {\n            sum += list1[i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6324c47e25ce43d3a1d09b862a7fa751>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6324c47e25ce43d3a1d09b862a7fa751>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (int i = (int)m; i <= n; i++) {\n            sum += list1[i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        // Your code here\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (int i = (int)m; i <= n; i++) {\n            sum += list1[i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (int i = (int)m; i <= n; i++) {\n            sum += list1[i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (int i = (int)m; i <= n; i++) {\n            sum += list1[i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (int i = (int)m; i <= n; i++) {\n            sum += list1[i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (int i = (int)m; i <= n; i++) {\n            sum += list1[i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (int i = (int)m; i <= n; i++) {\n            sum += list1[i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (int i = (int)m; i <= n; i++) {\n            sum += list1[i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (int i = (int)m; i <= n; i++) {\n            sum += list1[i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (int i = (int)m; i <= n; i++) {\n            sum += list1[i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (int i = (int)m; i <= n; i++) {\n            sum += list1[i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (int i = (int)m; i <= n; i++) {\n            sum += list1[i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (int i = (int)m; i <= n; i++) {\n            sum += list1[i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (int i = (int)m; i <= n; i++) {\n            sum += list1[i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    public static long SumRangeList(List<long> list1, long m, long n) {\n        long sum = 0;\n        for (long i = m; i <= n; i++) {\n            sum += list1[(int)i];\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (8L), (10L)) == (29L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (5L), (7L)) == (16L));\n    Debug.Assert(SumRangeList((new List<long>(new long[]{(long)2L, (long)1L, (long)5L, (long)6L, (long)8L, (long)3L, (long)4L, (long)9L, (long)10L, (long)11L, (long)8L, (long)12L})), (7L), (10L)) == (38L));\n    }\n\n}\n",
      "timestamp": 1665510099,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
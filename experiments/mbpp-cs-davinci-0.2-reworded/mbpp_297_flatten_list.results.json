{
  "name": "mbpp_297_flatten_list",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_297_flatten_list.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            List<object> list = (List<object>)list1;\n            foreach (object item in list) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcwym1gs6.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpcwym1gs6.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpcwym1gs6.cs(25,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi1wmlclu.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi1wmlclu.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi1wmlclu.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6l7ybbje.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6l7ybbje.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        var result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp23s6kvbe.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp23s6kvbe.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp23s6kvbe.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        var list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5la2w4nf.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp5la2w4nf.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp5la2w4nf.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnyt7ui4q.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object obj in (List<object>)list1) {\n                result.AddRange(FlattenList(obj));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp9jue493i.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp9jue493i.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp9jue493i.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6l7ybbje.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnyt7ui4q.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list2 = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                list2.AddRange(FlattenList(item));\n            }\n        } else {\n            list2.Add((long)list1);\n        }\n        return list2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpms4uccng.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpms4uccng.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpms4uccng.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi1wmlclu.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi1wmlclu.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi1wmlclu.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi1wmlclu.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi1wmlclu.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi1wmlclu.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        var list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5la2w4nf.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp5la2w4nf.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp5la2w4nf.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6l7ybbje.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        List<object> list = (List<object>)list1;\n        foreach (var item in list) {\n            if (item is List<object>) {\n                result.AddRange(FlattenList(item));\n            } else {\n                result.Add((long)item);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpfw3o3t29.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpfw3o3t29.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpfw3o3t29.cs(25,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list2 = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                list2.AddRange(FlattenList(item));\n            }\n        } else {\n            list2.Add((long)list1);\n        }\n        return list2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpms4uccng.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpms4uccng.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpms4uccng.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6l7ybbje.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnyt7ui4q.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnyt7ui4q.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list2 = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                list2.AddRange(FlattenList(item));\n            }\n        } else {\n            list2.Add((long)list1);\n        }\n        return list2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpms4uccng.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpms4uccng.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpms4uccng.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi1wmlclu.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi1wmlclu.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi1wmlclu.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi1wmlclu.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi1wmlclu.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi1wmlclu.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list2 = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                list2.AddRange(FlattenList(item));\n            }\n        } else {\n            list2.Add((long)list1);\n        }\n        return list2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123871,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmppzd4_f_4.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmppzd4_f_4.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmppzd4_f_4.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6l7ybbje.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> flatList = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                flatList.AddRange(FlattenList(item));\n            }\n        } else {\n            flatList.Add((long)list1);\n        }\n        return flatList;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123871,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp60guby4y.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp60guby4y.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp60guby4y.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        var list = list1 as List<object>;\n        var result = new List<long>();\n        foreach (var item in list) {\n            if (item is long) {\n                result.Add((long)item);\n            } else {\n                result.AddRange(FlattenList(item));\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123871,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1a0dvx5d.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp1a0dvx5d.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp1a0dvx5d.cs(25,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list2 = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                list2.AddRange(FlattenList(item));\n            }\n        } else {\n            list2.Add((long)list1);\n        }\n        return list2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpms4uccng.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpms4uccng.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpms4uccng.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6l7ybbje.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6l7ybbje.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        var list = new List<long>();\n        foreach (var item in (List<object>)list1) {\n            if (item is long) {\n                list.Add((long)item);\n            } else {\n                list.AddRange(FlattenList(item));\n            }\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123871,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmptbf_g5ls.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmptbf_g5ls.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmptbf_g5ls.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi1wmlclu.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi1wmlclu.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi1wmlclu.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        var list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5la2w4nf.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp5la2w4nf.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp5la2w4nf.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            List<object> list2 = (List<object>)list1;\n            foreach (object item in list2) {\n                if (item is List<object>) {\n                    list.AddRange(FlattenList(item));\n                } else {\n                    list.Add((long)item);\n                }\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123871,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpt0vrj19v.cs(27,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpt0vrj19v.cs(28,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpt0vrj19v.cs(29,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        var list = new List<long>();\n        if (list1 is List<object>) {\n            var list2 = (List<object>)list1;\n            foreach (var item in list2) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123871,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmph4qtxtrc.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmph4qtxtrc.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmph4qtxtrc.cs(25,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        var list = new List<long>();\n        var stack = new Stack<object>();\n        stack.Push(list1);\n        while (stack.Count > 0) {\n            var item = stack.Pop();\n            if (item is List<object>) {\n                var list2 = item as List<object>;\n                for (int i = list2.Count - 1; i >= 0; i--) {\n                    stack.Push(list2[i]);\n                }\n            } else {\n                list.Add((long)item);\n            }\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123871,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1d7l52rj.cs(28,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp1d7l52rj.cs(29,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp1d7l52rj.cs(30,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123871,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpchu_b0bl.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpchu_b0bl.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpchu_b0bl.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123871,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpchu_b0bl.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpchu_b0bl.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpchu_b0bl.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is long) {\n            result.Add((long)list1);\n        } else {\n            foreach (object item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123871,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpclv3ptxe.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpclv3ptxe.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpclv3ptxe.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> flattenedList = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                flattenedList.AddRange(FlattenList(item));\n            }\n        } else {\n            flattenedList.Add((long)list1);\n        }\n        return flattenedList;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123871,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpb2thxtx6.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpb2thxtx6.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpb2thxtx6.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6l7ybbje.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnyt7ui4q.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is long) {\n            list.Add((long)list1);\n        } else {\n            List<object> list2 = (List<object>)list1;\n            foreach (object item in list2) {\n                list.AddRange(FlattenList(item));\n            }\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123871,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpxse3tkoq.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpxse3tkoq.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpxse3tkoq.cs(25,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        var list = new List<long>();\n        if (list1 is long) {\n            list.Add((long)list1);\n        } else {\n            foreach (var item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123871,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpb9bes4dg.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpb9bes4dg.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpb9bes4dg.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            List<object> list2 = (List<object>)list1;\n            foreach (object item in list2) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123871,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjfxhpeep.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpjfxhpeep.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpjfxhpeep.cs(25,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        var list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5la2w4nf.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp5la2w4nf.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp5la2w4nf.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnyt7ui4q.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123871,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpchu_b0bl.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpchu_b0bl.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpchu_b0bl.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnyt7ui4q.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6l7ybbje.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi1wmlclu.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi1wmlclu.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi1wmlclu.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            List<object> list2 = (List<object>)list1;\n            foreach (object item in list2) {\n                if (item is List<object>) {\n                    list.AddRange(FlattenList(item));\n                } else {\n                    list.Add((long)item);\n                }\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123871,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpt0vrj19v.cs(27,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpt0vrj19v.cs(28,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpt0vrj19v.cs(29,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        foreach (object item in (List<object>)list1) {\n            if (item is long) {\n                list.Add((long)item);\n            } else {\n                list.AddRange(FlattenList(item));\n            }\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123871,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpsepjm7y5.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpsepjm7y5.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpsepjm7y5.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi1wmlclu.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi1wmlclu.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi1wmlclu.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6l7ybbje.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnyt7ui4q.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is long) {\n            list.Add((long)list1);\n            return list;\n        }\n        List<object> list2 = (List<object>)list1;\n        foreach (object obj in list2) {\n            list.AddRange(FlattenList(obj));\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123871,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpk2_prbo5.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpk2_prbo5.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpk2_prbo5.cs(25,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            List<object> list = (List<object>)list1;\n            foreach (object item in list) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcwym1gs6.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpcwym1gs6.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpcwym1gs6.cs(25,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123871,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpchu_b0bl.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpchu_b0bl.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpchu_b0bl.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123871,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpchu_b0bl.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpchu_b0bl.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpchu_b0bl.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list2 = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                list2.AddRange(FlattenList(item));\n            }\n        } else {\n            list2.Add((long)list1);\n        }\n        return list2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123871,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmppzd4_f_4.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmppzd4_f_4.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmppzd4_f_4.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123871,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpchu_b0bl.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpchu_b0bl.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpchu_b0bl.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6l7ybbje.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is long) {\n            list.Add((long)list1);\n        } else {\n            foreach (var item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123871,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp89e0t2kf.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp89e0t2kf.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp89e0t2kf.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnyt7ui4q.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi1wmlclu.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi1wmlclu.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi1wmlclu.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6l7ybbje.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6l7ybbje.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnyt7ui4q.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6l7ybbje.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6l7ybbje.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi1wmlclu.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi1wmlclu.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi1wmlclu.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6l7ybbje.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list2 = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                list2.AddRange(FlattenList(item));\n            }\n        } else {\n            list2.Add((long)list1);\n        }\n        return list2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpms4uccng.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpms4uccng.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpms4uccng.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        var list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5la2w4nf.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp5la2w4nf.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp5la2w4nf.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6l7ybbje.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi1wmlclu.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi1wmlclu.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi1wmlclu.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi1wmlclu.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi1wmlclu.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi1wmlclu.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6l7ybbje.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnyt7ui4q.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnyt7ui4q.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            List<object> list = (List<object>)list1;\n            foreach (object item in list) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcwym1gs6.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpcwym1gs6.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpcwym1gs6.cs(25,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi1wmlclu.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi1wmlclu.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi1wmlclu.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi1wmlclu.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi1wmlclu.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi1wmlclu.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6l7ybbje.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6l7ybbje.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnyt7ui4q.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        var list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5la2w4nf.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp5la2w4nf.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp5la2w4nf.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6l7ybbje.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        foreach (var item in (List<object>)list1) {\n            if (item is long) {\n                list.Add((long)item);\n            } else {\n                list.AddRange(FlattenList(item));\n            }\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123871,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5ptjh8zi.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp5ptjh8zi.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp5ptjh8zi.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi1wmlclu.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi1wmlclu.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi1wmlclu.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        var list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5la2w4nf.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp5la2w4nf.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp5la2w4nf.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        var list = (List<object>)list1;\n        var result = new List<long>();\n        foreach (var item in list) {\n            if (item is List<object>) {\n                result.AddRange(FlattenList(item));\n            } else {\n                result.Add((long)item);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123871,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplhf9byny.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmplhf9byny.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmplhf9byny.cs(25,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnyt7ui4q.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        var list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5la2w4nf.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp5la2w4nf.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp5la2w4nf.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123871,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpchu_b0bl.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpchu_b0bl.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpchu_b0bl.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            List<object> list = (List<object>)list1;\n            foreach (object item in list) {\n                if (item is List<object>) {\n                    result.AddRange(FlattenList(item));\n                } else {\n                    result.Add((long)item);\n                }\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123871,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnrn70jsa.cs(27,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnrn70jsa.cs(28,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnrn70jsa.cs(29,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6l7ybbje.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6l7ybbje.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6l7ybbje.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnyt7ui4q.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi1wmlclu.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi1wmlclu.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi1wmlclu.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object obj in (List<object>)list1) {\n                list.AddRange(FlattenList(obj));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123871,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp327buwy7.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp327buwy7.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp327buwy7.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnyt7ui4q.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnyt7ui4q.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnyt7ui4q.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list2 = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                list2.AddRange(FlattenList(item));\n            }\n        } else {\n            list2.Add((long)list1);\n        }\n        return list2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpms4uccng.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpms4uccng.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpms4uccng.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6l7ybbje.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6l7ybbje.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi1wmlclu.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi1wmlclu.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi1wmlclu.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is long) {\n            result.Add((long)list1);\n        } else {\n            foreach (var item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123871,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvstthpr0.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpvstthpr0.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpvstthpr0.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi1wmlclu.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi1wmlclu.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi1wmlclu.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi1wmlclu.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi1wmlclu.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi1wmlclu.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            List<object> list = (List<object>)list1;\n            foreach (var item in list) {\n                if (item is List<object>) {\n                    result.AddRange(FlattenList(item));\n                } else {\n                    result.Add((long)item);\n                }\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123871,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplmgkcqy5.cs(27,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmplmgkcqy5.cs(28,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmplmgkcqy5.cs(29,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi1wmlclu.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi1wmlclu.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi1wmlclu.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is long) {\n            result.Add((long)list1);\n            return result;\n        }\n        List<object> list = (List<object>)list1;\n        foreach (object item in list) {\n            result.AddRange(FlattenList(item));\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123871,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5en6wb7j.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp5en6wb7j.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp5en6wb7j.cs(25,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        var list = list1 as List<object>;\n        var result = new List<long>();\n        if (list == null) {\n            result.Add((long)list1);\n            return result;\n        }\n        foreach (var item in list) {\n            result.AddRange(FlattenList(item));\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123872,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmptwwgvvkl.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmptwwgvvkl.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmptwwgvvkl.cs(25,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6l7ybbje.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi1wmlclu.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi1wmlclu.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi1wmlclu.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnyt7ui4q.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6l7ybbje.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6l7ybbje.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6l7ybbje.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnyt7ui4q.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnyt7ui4q.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6l7ybbje.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        var list2 = new List<long>();\n        foreach (var item in (List<object>)list1) {\n            if (item is long) {\n                list2.Add((long)item);\n            } else {\n                list2.AddRange(FlattenList(item));\n            }\n        }\n        return list2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123872,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpryzmeo35.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpryzmeo35.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpryzmeo35.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6l7ybbje.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnyt7ui4q.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnyt7ui4q.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123871,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpchu_b0bl.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpchu_b0bl.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpchu_b0bl.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi1wmlclu.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi1wmlclu.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi1wmlclu.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnyt7ui4q.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        foreach (var item in (List<object>)list1) {\n            if (item is long) {\n                list.Add((long)item);\n            } else {\n                list.AddRange(FlattenList(item));\n            }\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123871,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5ptjh8zi.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp5ptjh8zi.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp5ptjh8zi.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            List<object> list = (List<object>)list1;\n            foreach (object item in list) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcwym1gs6.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpcwym1gs6.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpcwym1gs6.cs(25,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6l7ybbje.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object element in (List<object>)list1) {\n                list.AddRange(FlattenList(element));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123872,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpu758t4ag.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpu758t4ag.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpu758t4ag.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnyt7ui4q.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnyt7ui4q.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            List<object> list = (List<object>)list1;\n            foreach (object item in list) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcwym1gs6.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpcwym1gs6.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpcwym1gs6.cs(25,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        var list = new List<long>();\n        foreach (var item in (List<object>)list1) {\n            if (item is long) {\n                list.Add((long)item);\n            } else {\n                list.AddRange(FlattenList(item));\n            }\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123871,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmptbf_g5ls.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmptbf_g5ls.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmptbf_g5ls.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is long) {\n            result.Add((long)list1);\n        } else {\n            foreach (var item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123871,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvstthpr0.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpvstthpr0.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpvstthpr0.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123871,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpchu_b0bl.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpchu_b0bl.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpchu_b0bl.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            List<object> list = (List<object>)list1;\n            foreach (object item in list) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcwym1gs6.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpcwym1gs6.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpcwym1gs6.cs(25,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6l7ybbje.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> flatList = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                flatList.AddRange(FlattenList(item));\n            }\n        } else {\n            flatList.Add((long)list1);\n        }\n        return flatList;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123871,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp60guby4y.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp60guby4y.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp60guby4y.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123871,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpchu_b0bl.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpchu_b0bl.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpchu_b0bl.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> newList = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                newList.AddRange(FlattenList(item));\n            }\n        } else {\n            newList.Add((long)list1);\n        }\n        return newList;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123872,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpiz5ivdz7.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpiz5ivdz7.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpiz5ivdz7.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            List<object> list = (List<object>)list1;\n            foreach (var item in list) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123872,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcc_00_wr.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpcc_00_wr.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpcc_00_wr.cs(25,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            List<object> list = (List<object>)list1;\n            foreach (object item in list) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcwym1gs6.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpcwym1gs6.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpcwym1gs6.cs(25,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        var list = (List<object>)list1;\n        var result = new List<long>();\n        foreach (var item in list) {\n            if (item is long) {\n                result.Add((long)item);\n            } else {\n                result.AddRange(FlattenList(item));\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123872,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpd_zbojjk.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpd_zbojjk.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpd_zbojjk.cs(25,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi1wmlclu.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi1wmlclu.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi1wmlclu.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6l7ybbje.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnyt7ui4q.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123871,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpchu_b0bl.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpchu_b0bl.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpchu_b0bl.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnyt7ui4q.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnyt7ui4q.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnyt7ui4q.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        }\n        else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123872,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpqclr_g7e.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpqclr_g7e.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpqclr_g7e.cs(25,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            List<object> list = list1 as List<object>;\n            foreach (object item in list) {\n                if (item is List<object>) {\n                    result.AddRange(FlattenList(item));\n                } else {\n                    result.Add((long)item);\n                }\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123872,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzmalp01c.cs(27,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpzmalp01c.cs(28,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpzmalp01c.cs(29,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6l7ybbje.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6l7ybbje.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123871,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpchu_b0bl.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpchu_b0bl.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpchu_b0bl.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123871,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpchu_b0bl.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpchu_b0bl.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpchu_b0bl.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnyt7ui4q.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6l7ybbje.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnyt7ui4q.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            List<object> list = (List<object>)list1;\n            foreach (object item in list) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcwym1gs6.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpcwym1gs6.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpcwym1gs6.cs(25,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6l7ybbje.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6l7ybbje.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is long) {\n            result.Add((long)list1);\n        } else {\n            foreach (var item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123871,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvstthpr0.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpvstthpr0.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpvstthpr0.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is long) {\n            result.Add((long)list1);\n        } else {\n            foreach (var item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123871,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvstthpr0.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpvstthpr0.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpvstthpr0.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is long) {\n            result.Add((long)list1);\n        } else {\n            foreach (var item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123871,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvstthpr0.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpvstthpr0.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpvstthpr0.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnyt7ui4q.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi1wmlclu.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi1wmlclu.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi1wmlclu.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list2 = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                list2.AddRange(FlattenList(item));\n            }\n        } else {\n            list2.Add((long)list1);\n        }\n        return list2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123871,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmppzd4_f_4.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmppzd4_f_4.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmppzd4_f_4.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list2 = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                list2.AddRange(FlattenList(item));\n            }\n        }\n        else {\n            list2.Add((long)list1);\n        }\n        return list2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123872,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbgsnw95n.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbgsnw95n.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbgsnw95n.cs(25,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        var list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5la2w4nf.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp5la2w4nf.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp5la2w4nf.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnyt7ui4q.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        var result = new List<long>();\n        var list = list1 as List<object>;\n        if (list != null) {\n            foreach (var item in list) {\n                if (item is long) {\n                    result.Add((long)item);\n                } else {\n                    result.AddRange(FlattenList(item));\n                }\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123872,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpc7bsqazs.cs(25,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpc7bsqazs.cs(26,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpc7bsqazs.cs(27,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list2 = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                list2.AddRange(FlattenList(item));\n            }\n        } else {\n            list2.Add((long)list1);\n        }\n        return list2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpms4uccng.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpms4uccng.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpms4uccng.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnyt7ui4q.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnyt7ui4q.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi1wmlclu.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi1wmlclu.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi1wmlclu.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123871,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpchu_b0bl.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpchu_b0bl.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpchu_b0bl.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object obj in (List<object>)list1) {\n                list.AddRange(FlattenList(obj));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123871,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp327buwy7.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp327buwy7.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp327buwy7.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnyt7ui4q.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is long) {\n            result.Add((long)list1);\n        } else {\n            foreach (var item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123871,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvstthpr0.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpvstthpr0.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpvstthpr0.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6l7ybbje.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnyt7ui4q.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnyt7ui4q.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list2 = new List<long>();\n        if (list1 is long) {\n            list2.Add((long)list1);\n        } else {\n            foreach (object item in (List<object>)list1) {\n                list2.AddRange(FlattenList(item));\n            }\n        }\n        return list2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123872,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpwgvvegu4.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpwgvvegu4.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpwgvvegu4.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi1wmlclu.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi1wmlclu.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi1wmlclu.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6l7ybbje.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6l7ybbje.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6l7ybbje.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        var result = new List<long>();\n        var list = list1 as List<object>;\n        if (list != null) {\n            foreach (var item in list) {\n                var sublist = item as List<object>;\n                if (sublist != null) {\n                    result.AddRange(FlattenList(sublist));\n                } else {\n                    result.Add((long)item);\n                }\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123872,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_cubo7d6.cs(26,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp_cubo7d6.cs(27,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp_cubo7d6.cs(28,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list2 = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                list2.AddRange(FlattenList(item));\n            }\n        } else {\n            list2.Add((long)list1);\n        }\n        return list2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpms4uccng.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpms4uccng.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpms4uccng.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> list = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                list.AddRange(FlattenList(item));\n            }\n        } else {\n            list.Add((long)list1);\n        }\n        return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666123871,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpchu_b0bl.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpchu_b0bl.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpchu_b0bl.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (object item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnyt7ui4q.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnyt7ui4q.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to flatten a given nested list structure.\n    public static List<long> FlattenList(object list1) {\n        List<long> result = new List<long>();\n        if (list1 is List<object>) {\n            foreach (var item in (List<object>)list1) {\n                result.AddRange(FlattenList(item));\n            }\n        } else {\n            result.Add((long)list1);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlattenList((new object(new object[]{0L, 10L, new List<long>(new long[]{(long)20L, (long)30L}), 40L, 50L, new List<long>(new long[]{(long)60L, (long)70L, (long)80L}), new List<long>(new long[]{(long)90L, (long)100L, (long)110L, (long)120L})}))).Equals((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)30L, (long)40L, (long)50L, (long)60L, (long)70L, (long)80L, (long)90L, (long)100L, (long)110L, (long)120L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)40L}), (List<long>)new List<long>(new long[]{(long)30L, (long)56L, (long)25L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L}), (List<long>)new List<long>(new long[]{(long)33L}), (List<long>)new List<long>(new long[]{(long)40L})}))).Equals((new List<long>(new long[]{(long)10L, (long)20L, (long)40L, (long)30L, (long)56L, (long)25L, (long)10L, (long)20L, (long)33L, (long)40L}))));\n    Debug.Assert(FlattenList((new object(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)10L, (long)11L, (long)12L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)10L, (long)11L, (long)12L, (long)7L, (long)8L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665510610,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi1wmlclu.cs(22,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi1wmlclu.cs(23,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi1wmlclu.cs(24,35): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
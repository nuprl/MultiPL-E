{
  "name": "mbpp_389_find_lucas",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the n'th lucas number.\n    public static long FindLucas(long n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_389_find_lucas.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindLucas((9L)) == (76L));\n    Debug.Assert(FindLucas((4L)) == (7L));\n    Debug.Assert(FindLucas((3L)) == (4L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        if (n == 0) {\n            return 2;\n        }\n        if (n == 1) {\n            return 1;\n        }\n        return FindLucas(n - 1) + FindLucas(n - 2);",
    "        if (n == 0) return 2;\n        if (n == 1) return 1;\n        return FindLucas(n - 1) + FindLucas(n - 2);",
    "        if (n == 0) return 2;\n        if (n == 1) return 1;\n        return FindLucas(n - 1) + FindLucas(n - 2);",
    "        if (n == 0) return 2;\n        if (n == 1) return 1;\n        return FindLucas(n - 1) + FindLucas(n - 2);",
    "        if (n == 0) return 2;\n        if (n == 1) return 1;\n        return FindLucas(n - 1) + FindLucas(n - 2);",
    "        if (n == 0) return 2;\n        if (n == 1) return 1;\n        return FindLucas(n - 1) + FindLucas(n - 2);",
    "        if (n == 0) return 2;\n        if (n == 1) return 1;\n        return FindLucas(n - 1) + FindLucas(n - 2);",
    "        if (n == 0) return 2;\n        if (n == 1) return 1;\n        return FindLucas(n - 1) + FindLucas(n - 2);",
    "        if (n == 0) return 2;\n        if (n == 1) return 1;\n        return FindLucas(n - 1) + FindLucas(n - 2);",
    "        if (n == 0) return 2;\n        if (n == 1) return 1;\n        return FindLucas(n - 1) + FindLucas(n - 2);",
    "        if (n == 0) return 2;\n        if (n == 1) return 1;\n        return FindLucas(n - 1) + FindLucas(n - 2);",
    "        if (n == 0) return 2;\n        if (n == 1) return 1;\n        return FindLucas(n - 1) + FindLucas(n - 2);",
    "        if (n == 0) {\n            return 2;\n        }\n        if (n == 1) {\n            return 1;\n        }\n        return FindLucas(n - 1) + FindLucas(n - 2);",
    "        if (n == 0) return 2;\n        if (n == 1) return 1;\n        return FindLucas(n - 1) + FindLucas(n - 2);",
    "        if (n == 0) return 2;\n        if (n == 1) return 1;\n        return FindLucas(n - 1) + FindLucas(n - 2);",
    "        if (n == 0) return 2;\n        if (n == 1) return 1;\n        return FindLucas(n - 1) + FindLucas(n - 2);",
    "        if (n == 0) return 2;\n        if (n == 1) return 1;\n        return FindLucas(n - 1) + FindLucas(n - 2);",
    "        if (n == 0)\n            return 2;\n        if (n == 1)\n            return 1;\n        return FindLucas(n - 1) + FindLucas(n - 2);",
    "        if (n == 0) return 2;\n        if (n == 1) return 1;\n        return FindLucas(n - 1) + FindLucas(n - 2);",
    "        if (n == 0) {\n            return 2;\n        } else if (n == 1) {\n            return 1;\n        } else {\n            return FindLucas(n - 1) + FindLucas(n - 2);\n        }"
  ]
}
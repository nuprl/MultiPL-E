{
  "name": "mbpp_633_pair_xor_Sum",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_633_pair_xor_Sum.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        // Write your code here\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            for (long j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpf0zhmron.cs(14,28): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpf0zhmron.cs(14,37): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            for (long j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpf0zhmron.cs(14,28): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpf0zhmron.cs(14,37): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        // Write your code here\n        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            for (long j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdq97tvj2.cs(15,28): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpdq97tvj2.cs(15,37): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            for (long j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpf0zhmron.cs(14,28): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpf0zhmron.cs(14,37): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long res = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                res += arr[i] ^ arr[j];\n            }\n        }\n        return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666123174,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        // Write your code here\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            for (long j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpf0zhmron.cs(14,28): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpf0zhmron.cs(14,37): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            for (long j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpf0zhmron.cs(14,28): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpf0zhmron.cs(14,37): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            for (long j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpf0zhmron.cs(14,28): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpf0zhmron.cs(14,37): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            for (long j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpf0zhmron.cs(14,28): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpf0zhmron.cs(14,37): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        // Write your code here\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        // Write your code here\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long ans = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                ans += arr[i] ^ arr[j];\n            }\n        }\n        return ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666123174,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            for (long j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpf0zhmron.cs(14,28): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpf0zhmron.cs(14,37): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long result = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                result += arr[i] ^ arr[j];\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666123174,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            for (long j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpf0zhmron.cs(14,28): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpf0zhmron.cs(14,37): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            for (long j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpf0zhmron.cs(14,28): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpf0zhmron.cs(14,37): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            for (long j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpf0zhmron.cs(14,28): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpf0zhmron.cs(14,37): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            for (long j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpf0zhmron.cs(14,28): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpf0zhmron.cs(14,37): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            for (long j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpf0zhmron.cs(14,28): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpf0zhmron.cs(14,37): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long result = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                result += arr[i] ^ arr[j];\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666123174,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            for (long j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpf0zhmron.cs(14,28): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpf0zhmron.cs(14,37): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            for (long j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpf0zhmron.cs(14,28): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpf0zhmron.cs(14,37): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            for (long j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpf0zhmron.cs(14,28): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpf0zhmron.cs(14,37): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            for (long j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpf0zhmron.cs(14,28): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpf0zhmron.cs(14,37): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            for (long j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpf0zhmron.cs(14,28): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpf0zhmron.cs(14,37): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        // Write your code here\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        // Write your code here\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long result = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                result += arr[i] ^ arr[j];\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666123174,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        // Write your code here\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        // Write your code here\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666123174,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cd8a226bea4e473dbaea373689b33f74>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cd8a226bea4e473dbaea373689b33f74>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            for (long j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpf0zhmron.cs(14,28): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpf0zhmron.cs(14,37): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        // Write your code here\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        // Write your code here\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            for (long j = i + 1; j < n; j++) {\n                sum += arr[(int)i] ^ arr[(int)j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666123174,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            for (long j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpf0zhmron.cs(14,28): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpf0zhmron.cs(14,37): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            for (long j = 0; j < n; j++) {\n                sum += arr[(int)i] ^ arr[(int)j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666123174,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5eb31c0155d84b06b38f29460f3a4bf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5eb31c0155d84b06b38f29460f3a4bf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        // Write your code here\n        long sum = 0;\n        long[] count = new long[64];\n        for (long i = 0; i < n; i++) {\n            long x = arr[(int)i];\n            for (long j = 0; j < 64; j++) {\n                if ((x & (1 << (int)j)) != 0) {\n                    count[(int)j]++;\n                }\n            }\n        }\n        for (long i = 0; i < 64; i++) {\n            sum += count[(int)i] * (n - count[(int)i]) * (1 << (int)i);\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666123174,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c6779f58bc904c00abd91a56b15ac6aa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c6779f58bc904c00abd91a56b15ac6aa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            for (long j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpf0zhmron.cs(14,28): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpf0zhmron.cs(14,37): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            for (long j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpf0zhmron.cs(14,28): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpf0zhmron.cs(14,37): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the sum of xor of all pairs of numbers in the given list.\n    public static long PairXorSum(List<long> arr, long n) {\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                sum += arr[i] ^ arr[j];\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)5L, (long)9L, (long)7L, (long)6L})), (4L)) == (47L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L, (long)5L})), (3L)) == (12L));\n    Debug.Assert(PairXorSum((new List<long>(new long[]{(long)7L, (long)3L})), (2L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665510134,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
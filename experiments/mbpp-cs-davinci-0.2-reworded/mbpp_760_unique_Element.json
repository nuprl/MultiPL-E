{
  "name": "mbpp_760_unique_Element",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether a list of numbers contains only one distinct element or not.\n    public static bool UniqueElement(List<long> arr) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_760_unique_Element.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueElement((new List<long>(new long[]{(long)1L, (long)1L, (long)1L}))) == (true));\n    Debug.Assert(UniqueElement((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (false));\n    Debug.Assert(UniqueElement((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))) == (false));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        if (arr.Count == 0) return false;\n        long x = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != x) return false;\n        }\n        return true;",
    "        // Write your code here\n        return arr.Distinct().Count() == 1;",
    "        // Write your code here\n        return arr.Distinct().Count() == 1;",
    "        // Your code goes here\n        HashSet<long> set = new HashSet<long>(arr);\n        return set.Count == 1;",
    "        long unique = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            unique ^= arr[i];\n        }\n        return unique == 0;",
    "        // Write your code here\n        return arr.Distinct().Count() == 1;",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long i in arr) {\n            if (set.Contains(i)) {\n                return false;\n            }\n            set.Add(i);\n        }\n        return true;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long first = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != first) {\n                return false;\n            }\n        }\n        return true;",
    "        // Your code here\n        return arr.Distinct().Count() == 1;",
    "        long first = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != first) {\n                return false;\n            }\n        }\n        return true;",
    "        if (arr.Count == 1) {\n            return true;\n        }\n        HashSet<long> set = new HashSet<long>();\n        foreach (long num in arr) {\n            if (set.Contains(num)) {\n                return false;\n            }\n            set.Add(num);\n        }\n        return true;",
    "        if (arr.Count == 1) {\n            return true;\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i + 1; j < arr.Count; j++) {\n                if (arr[i] == arr[j]) {\n                    return false;\n                }\n            }\n        }\n        return true;",
    "        // Your code here\n        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long unique = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != unique) {\n                return false;\n            }\n        }\n        return true;",
    "        if (arr.Count == 0) return false;\n        HashSet<long> set = new HashSet<long>();\n        foreach (long num in arr) {\n            if (set.Contains(num)) return false;\n            set.Add(num);\n        }\n        return true;",
    "        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        long n = arr.Count;\n        long[] count = new long[n];\n        for (int i = 0; i < n; i++) {\n            count[i] = 0;\n        }\n        for (int i = 0; i < n; i++) {\n            count[arr[i]]++;\n        }\n        for (int i = 0; i < n; i++) {\n            if (count[i] > 1) {\n                return false;\n            }\n        }\n        return true;",
    "        // O(n)\n        HashSet<long> set = new HashSet<long>();\n        foreach (long num in arr) {\n            if (set.Contains(num)) {\n                return false;\n            }\n            set.Add(num);\n        }\n        return true;",
    "        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        // Your code here\n        return arr.Distinct().Count() == 1;",
    "        long distinct = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (distinct != arr[i]) {\n                return false;\n            }\n        }\n        return true;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long cur = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (cur != arr[i]) {\n                return false;\n            }\n        }\n        return true;",
    "        return arr.Distinct().Count() == 1;",
    "        long prev = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != prev) {\n                return false;\n            }\n        }\n        return true;",
    "        return arr.Distinct().Count() == 1;",
    "        // Write your code here\n        HashSet<long> set = new HashSet<long>();\n        foreach(long x in arr) {\n            if(set.Contains(x)) {\n                return false;\n            }\n            set.Add(x);\n        }\n        return true;",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long i in arr) {\n            if (set.Contains(i)) {\n                return false;\n            } else {\n                set.Add(i);\n            }\n        }\n        return true;",
    "        // check if the list is empty\n        if (arr.Count == 0) {\n            return false;\n        }\n        // check if the list has only one element\n        if (arr.Count == 1) {\n            return true;\n        }\n        // check if the list has more than one element\n        if (arr.Count > 1) {\n            // sort the list\n            arr.Sort();\n            // check if the first element is equal to the second element\n            if (arr[0] == arr[1]) {\n                return false;\n            }\n            // check if the last element is equal to the second last element\n            if (arr[arr.Count - 1] == arr[arr.Count - 2]) {\n                return false;\n            }\n            // check if any element is equal to the element before it\n            for (int i = 1; i < arr.Count - 1; i++) {\n                if (arr[i] == arr[i - 1]) {\n                    return false;\n                }\n            }\n            // if none of the above conditions are true, then the list has only one distinct element\n            return true;\n        }\n        // if none of the above conditions are true, then the list has only one distinct element\n        return true;",
    "        // Create a dictionary to store the number of times each element appears in the list.\n        Dictionary<long, int> count = new Dictionary<long, int>();\n        // Iterate through the list and increment the count for each element.\n        foreach (long num in arr) {\n            if (count.ContainsKey(num)) {\n                count[num]++;\n            } else {\n                count[num] = 1;\n            }\n        }\n        // Iterate through the dictionary and check if any element appears more than once.\n        foreach (KeyValuePair<long, int> entry in count) {\n            if (entry.Value > 1) {\n                return false;\n            }\n        }\n        // If we get to this point, then the list contains only one distinct element.\n        return true;",
    "        // Your code here\n        return arr.Distinct().Count() == 1;",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long num in arr) {\n            if (set.Contains(num)) {\n                return false;\n            }\n            set.Add(num);\n        }\n        return true;",
    "        if (arr.Count == 1) {\n            return true;\n        }\n        HashSet<long> set = new HashSet<long>();\n        foreach (long num in arr) {\n            if (set.Contains(num)) {\n                return false;\n            }\n            set.Add(num);\n        }\n        return true;",
    "        // Your code here\n        return arr.Distinct().Count() == 1;",
    "        var unique = arr.Distinct();\n        return unique.Count() == 1;",
    "        // Write your code here\n        return arr.Distinct().Count() == 1;",
    "        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        return arr.Distinct().Count() == 1;",
    "        // O(n)\n        HashSet<long> set = new HashSet<long>();\n        foreach (long num in arr) {\n            if (set.Contains(num)) {\n                return false;\n            }\n            set.Add(num);\n        }\n        return true;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long unique = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != unique) {\n                return false;\n            }\n        }\n        return true;",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long num in arr) {\n            if (set.Contains(num)) {\n                return false;\n            }\n            set.Add(num);\n        }\n        return true;",
    "        // Your code here\n        return arr.Distinct().Count() == 1;",
    "        // Write your code here\n        return arr.Distinct().Count() == 1;",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long i in arr) {\n            if (set.Contains(i)) {\n                return false;\n            }\n            set.Add(i);\n        }\n        return true;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long distinct = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != distinct) {\n                return false;\n            }\n        }\n        return true;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long x = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            x ^= arr[i];\n        }\n        return x == 0;",
    "        HashSet<long> hs = new HashSet<long>();\n        foreach (long i in arr) {\n            if (hs.Contains(i)) {\n                return false;\n            }\n            hs.Add(i);\n        }\n        return true;",
    "        // Your code here\n        return arr.Distinct().Count() == 1;",
    "        // Your code goes here\n        return arr.Distinct().Count() == 1;",
    "        // Write your code here\n        return arr.Distinct().Count() == 1;",
    "        // Write your code here\n        return arr.Distinct().Count() == 1;",
    "        // Write your code here\n        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long unique = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != unique) {\n                return false;\n            }\n        }\n        return true;",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long i in arr) {\n            if (set.Contains(i)) {\n                return false;\n            }\n            set.Add(i);\n        }\n        return true;",
    "        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long distinct = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != distinct) {\n                return false;\n            }\n        }\n        return true;",
    "        if (arr.Count == 0) return false;\n        long x = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != x) return false;\n        }\n        return true;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long first = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != first) {\n                return false;\n            }\n        }\n        return true;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long prev = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != prev) {\n                return false;\n            }\n        }\n        return true;",
    "        return arr.Distinct().Count() == 1;",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long i in arr) {\n            if (set.Contains(i)) {\n                return false;\n            }\n            set.Add(i);\n        }\n        return true;",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long x in arr) {\n            if (set.Contains(x)) {\n                return false;\n            }\n            set.Add(x);\n        }\n        return true;",
    "        // Create a dictionary to store the number of occurences of each element\n        Dictionary<long, int> dict = new Dictionary<long, int>();\n        // Loop through the array\n        foreach (long num in arr) {\n            // If the number is not in the dictionary, add it with a count of 1\n            if (!dict.ContainsKey(num)) {\n                dict.Add(num, 1);\n            }\n            // If the number is in the dictionary, increment the count\n            else {\n                dict[num]++;\n            }\n        }\n        // Loop through the dictionary\n        foreach (KeyValuePair<long, int> pair in dict) {\n            // If the count is greater than 1, return false\n            if (pair.Value > 1) {\n                return false;\n            }\n        }\n        // If the loop completes, return true\n        return true;",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long i in arr) {\n            if (set.Contains(i)) {\n                return false;\n            }\n            set.Add(i);\n        }\n        return true;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long unique = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != unique) {\n                return false;\n            }\n        }\n        return true;",
    "        // Your code goes here\n        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 1) {\n            return true;\n        }\n        arr.Sort();\n        for (int i = 0; i < arr.Count - 1; i++) {\n            if (arr[i] == arr[i + 1]) {\n                return false;\n            }\n        }\n        return true;",
    "        // Your code here\n        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        HashSet<long> set = new HashSet<long>();\n        foreach (long num in arr) {\n            if (set.Contains(num)) {\n                return false;\n            }\n            set.Add(num);\n        }\n        return true;",
    "        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long first = arr[0];\n        foreach (long num in arr) {\n            if (num != first) {\n                return false;\n            }\n        }\n        return true;",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long x in arr) {\n            if (set.Contains(x)) {\n                return false;\n            }\n            set.Add(x);\n        }\n        return true;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long first = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != first) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 1) {\n            return true;\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i + 1; j < arr.Count; j++) {\n                if (arr[i] == arr[j]) {\n                    return false;\n                }\n            }\n        }\n        return true;",
    "        // Write your code here\n        HashSet<long> set = new HashSet<long>();\n        foreach (long i in arr) {\n            if (set.Contains(i)) {\n                return false;\n            }\n            set.Add(i);\n        }\n        return true;",
    "        return arr.Distinct().Count() == 1;",
    "        // O(n)\n        HashSet<long> set = new HashSet<long>();\n        foreach (long num in arr) {\n            if (set.Contains(num)) {\n                return false;\n            }\n            set.Add(num);\n        }\n        return true;",
    "        // Your code here\n        return arr.Distinct().Count() == 1;",
    "        // Your code goes here\n        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 1) {\n            return true;\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i + 1; j < arr.Count; j++) {\n                if (arr[i] == arr[j]) {\n                    return false;\n                }\n            }\n        }\n        return true;",
    "        return arr.Distinct().Count() == 1;",
    "        // Your code here\n        return arr.Distinct().Count() == 1;",
    "        // Write your code here\n        return arr.Distinct().Count() == 1;",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long num in arr) {\n            if (set.Contains(num)) {\n                return false;\n            }\n            set.Add(num);\n        }\n        return true;",
    "        // Your code here\n        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long first = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != first) {\n                return false;\n            }\n        }\n        return true;",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long i in arr) {\n            if (set.Contains(i)) {\n                return false;\n            } else {\n                set.Add(i);\n            }\n        }\n        return true;",
    "        return arr.Distinct().Count() == 1;",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long num in arr) {\n            if (set.Contains(num)) {\n                return false;\n            }\n            set.Add(num);\n        }\n        return true;",
    "        var set = new HashSet<long>();\n        foreach (var item in arr) {\n            if (set.Contains(item)) {\n                return false;\n            }\n            set.Add(item);\n        }\n        return true;",
    "        // If the array is empty, it has no unique element.\n        if (arr.Count == 0) {\n            return false;\n        }\n        // If the array has only one element, it has a unique element.\n        if (arr.Count == 1) {\n            return true;\n        }\n        // Sort the array.\n        arr.Sort();\n        // If the first element is not equal to the second element, the first element is the unique element.\n        if (arr[0] != arr[1]) {\n            return true;\n        }\n        // If the last element is not equal to the second-to-last element, the last element is the unique element.\n        if (arr[arr.Count - 1] != arr[arr.Count - 2]) {\n            return true;\n        }\n        // If the array has no unique element, return false.\n        return false;",
    "        // Write your code here\n        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 0) return false;\n        long first = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != first) return false;\n        }\n        return true;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long first = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != first) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        return arr.Distinct().Count() == 1;",
    "        // O(n)\n        // HashSet<long> set = new HashSet<long>();\n        // foreach (long num in arr) {\n        //     if (set.Contains(num)) {\n        //         return false;\n        //     }\n        //     set.Add(num);\n        // }\n        // return true;\n        // O(n)\n        // long[] arr = arr.ToArray();\n        // Array.Sort(arr);\n        // for (int i = 0; i < arr.Length - 1; i++) {\n        //     if (arr[i] == arr[i + 1]) {\n        //         return false;\n        //     }\n        // }\n        // return true;\n        // O(n)\n        // long[] arr = arr.ToArray();\n        // Array.Sort(arr);\n        // for (int i = 0; i < arr.Length - 1; i++) {\n        //     if (arr[i] == arr[i + 1]) {\n        //         return false;\n        //     }\n        // }\n        // return true;\n        // O(n)\n        long[] arr = arr.ToArray();\n        Array.Sort(arr);\n        for (int i = 0; i < arr.Length - 1; i++) {\n            if (arr[i] == arr[i + 1]) {\n                return false;\n            }\n        }\n        return true;",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long num in arr) {\n            if (set.Contains(num)) {\n                return false;\n            }\n            set.Add(num);\n        }\n        return true;",
    "        // Your code goes here\n        return arr.Distinct().Count() == 1;",
    "        // Your code here\n        HashSet<long> set = new HashSet<long>();\n        foreach (long num in arr) {\n            if (set.Contains(num)) {\n                return false;\n            }\n            set.Add(num);\n        }\n        return true;",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long i in arr) {\n            if (set.Contains(i)) {\n                return false;\n            }\n            set.Add(i);\n        }\n        return true;",
    "        return arr.Distinct().Count() == 1;",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long i in arr) {\n            if (set.Contains(i)) {\n                return false;\n            }\n            set.Add(i);\n        }\n        return true;",
    "        // Your code here\n        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long x = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            x ^= arr[i];\n        }\n        return x == 0;",
    "        // Write your code here\n        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long distinct = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != distinct) {\n                return false;\n            }\n        }\n        return true;",
    "        HashSet<long> set = new HashSet<long>();\n        foreach(long i in arr) {\n            if(set.Contains(i)) {\n                return false;\n            }\n            set.Add(i);\n        }\n        return true;",
    "        // Write your code here\n        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 0) return false;\n        long first = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != first) return false;\n        }\n        return true;",
    "        // Your code here\n        return arr.Distinct().Count() == 1;",
    "        // Your code goes here\n        return arr.Distinct().Count() == 1;",
    "        long x = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            x ^= arr[i];\n        }\n        return x == 0;",
    "        // Your code goes here\n        return arr.Distinct().Count() == 1;",
    "        long distinct = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            distinct ^= arr[i];\n        }\n        return distinct == 0;",
    "        // Write your code here\n        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        // Write your code here\n        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long x = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != x) {\n                return false;\n            }\n        }\n        return true;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long unique = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != unique) {\n                return false;\n            }\n        }\n        return true;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long first = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != first) {\n                return false;\n            }\n        }\n        return true;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long first = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != first) {\n                return false;\n            }\n        }\n        return true;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long distinct = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != distinct) {\n                return false;\n            }\n        }\n        return true;",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long i in arr) {\n            if (set.Contains(i)) {\n                return false;\n            }\n            set.Add(i);\n        }\n        return true;",
    "        // Your code here\n        return arr.Distinct().Count() == 1;",
    "        // Write your code here\n        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 0) return false;\n        long distinct = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != distinct) return false;\n        }\n        return true;",
    "        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 0) return false;\n        long first = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != first) return false;\n        }\n        return true;",
    "        // Write your code here\n        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 0) return false;\n        long first = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != first) return false;\n        }\n        return true;",
    "        if (arr.Count == 0) return false;\n        long first = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != first) return false;\n        }\n        return true;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long unique = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != unique) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        return arr.Distinct().Count() == 1;",
    "        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long unique = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != unique) {\n                return false;\n            }\n        }\n        return true;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long first = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != first) {\n                return false;\n            }\n        }\n        return true;",
    "        if(arr.Count == 0) {\n            return false;\n        }\n        long last = arr[0];\n        for(int i = 1; i < arr.Count; i++) {\n            if(arr[i] != last) {\n                return false;\n            }\n        }\n        return true;",
    "        HashSet<long> hs = new HashSet<long>();\n        foreach (long x in arr) {\n            if (hs.Contains(x)) {\n                return false;\n            }\n            hs.Add(x);\n        }\n        return true;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long first = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != first) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 0) return false;\n        long elem = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != elem) return false;\n        }\n        return true;",
    "        // Write your code here\n        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 1) {\n            return true;\n        }\n        long curr = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (curr != arr[i]) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        return arr.Distinct().Count() == 1;",
    "        // Write your code here\n        return arr.Distinct().Count() == 1;",
    "        // Write your code here\n        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long first = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != first) {\n                return false;\n            }\n        }\n        return true;",
    "        if (arr.Count == 1) {\n            return true;\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i + 1; j < arr.Count; j++) {\n                if (arr[i] == arr[j]) {\n                    return false;\n                }\n            }\n        }\n        return true;",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long num in arr) {\n            if (set.Contains(num)) {\n                return false;\n            }\n            set.Add(num);\n        }\n        return true;",
    "        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        HashSet<long> set = new HashSet<long>();\n        foreach (long num in arr) {\n            if (set.Contains(num)) {\n                return false;\n            }\n            set.Add(num);\n        }\n        return true;",
    "        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        if (arr.Count == 0) return false;\n        if (arr.Count == 1) return true;\n        long first = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != first) return false;\n        }\n        return true;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long x = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            x ^= arr[i];\n        }\n        return x == 0;",
    "        // Write your code here\n        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long unique = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != unique) {\n                return false;\n            }\n        }\n        return true;",
    "        if (arr.Count == 0) return false;\n        long x = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            x ^= arr[i];\n        }\n        return x == 0;",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long i in arr) {\n            if (set.Contains(i)) {\n                return false;\n            }\n            set.Add(i);\n        }\n        return true;",
    "        // Your code goes here\n        return arr.Distinct().Count() == 1;",
    "        // O(n)\n        HashSet<long> set = new HashSet<long>();\n        foreach (long x in arr) {\n            if (set.Contains(x)) {\n                return false;\n            }\n            set.Add(x);\n        }\n        return true;",
    "        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long curr = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (curr != arr[i]) {\n                return false;\n            }\n        }\n        return true;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long first = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != first) {\n                return false;\n            }\n        }\n        return true;",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long x in arr) {\n            if (set.Contains(x)) {\n                return false;\n            }\n            set.Add(x);\n        }\n        return true;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long distinct = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != distinct) {\n                return false;\n            }\n        }\n        return true;",
    "        // O(n)\n        HashSet<long> set = new HashSet<long>();\n        foreach (long num in arr) {\n            if (set.Contains(num)) {\n                return false;\n            }\n            set.Add(num);\n        }\n        return true;",
    "        if (arr.Count == 1) {\n            return true;\n        }\n        arr.Sort();\n        for (int i = 0; i < arr.Count - 1; i++) {\n            if (arr[i] == arr[i + 1]) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        // Write your code here\n        return arr.Distinct().Count() == 1;",
    "        // Your code here\n        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long unique = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != unique) {\n                return false;\n            }\n        }\n        return true;",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long i in arr) {\n            if (set.Contains(i)) {\n                return false;\n            }\n            set.Add(i);\n        }\n        return true;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long unique = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            unique ^= arr[i];\n        }\n        return unique == 0;",
    "        if (arr.Count == 1) {\n            return true;\n        }\n        long first = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != first) {\n                return false;\n            }\n        }\n        return true;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long distinct = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != distinct) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        return arr.Distinct().Count() == 1;",
    "        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        HashSet<long> set = new HashSet<long>();\n        foreach (long num in arr) {\n            if (set.Contains(num)) {\n                return false;\n            }\n            set.Add(num);\n        }\n        return true;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long first = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != first) {\n                return false;\n            }\n        }\n        return true;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long unique = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != unique) {\n                return false;\n            }\n        }\n        return true;",
    "        long x = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            x ^= arr[i];\n        }\n        return x == 0;",
    "        HashSet<long> hs = new HashSet<long>();\n        foreach (long x in arr) {\n            if (hs.Contains(x)) {\n                return false;\n            }\n            hs.Add(x);\n        }\n        return true;",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long num in arr) {\n            if (set.Contains(num)) {\n                return false;\n            }\n            set.Add(num);\n        }\n        return true;",
    "        // O(n)\n        HashSet<long> set = new HashSet<long>();\n        foreach (long x in arr) {\n            if (set.Contains(x)) {\n                return false;\n            }\n            set.Add(x);\n        }\n        return true;",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long i in arr) {\n            if (set.Contains(i)) {\n                return false;\n            } else {\n                set.Add(i);\n            }\n        }\n        return true;",
    "        if (arr.Count == 1) {\n            return true;\n        }\n        arr.Sort();\n        for (int i = 0; i < arr.Count - 1; i++) {\n            if (arr[i] == arr[i + 1]) {\n                return false;\n            }\n        }\n        return true;",
    "        // Your code here\n        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 0) return false;\n        long unique = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != unique) return false;\n        }\n        return true;",
    "        // Your code goes here\n        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 0) return false;\n        long first = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != first) return false;\n        }\n        return true;",
    "        // Write your code here\n        HashSet<long> set = new HashSet<long>();\n        foreach (long i in arr) {\n            set.Add(i);\n        }\n        if (set.Count == 1) {\n            return true;\n        }\n        return false;",
    "        // O(n)\n        HashSet<long> set = new HashSet<long>();\n        foreach(long x in arr) {\n            if(set.Contains(x)) return false;\n            set.Add(x);\n        }\n        return true;",
    "        // We can use a dictionary to store the number of times each element appears in the list.\n        // If any element appears more than once, we return false.\n        // Otherwise, we return true.\n        Dictionary<long, int> d = new Dictionary<long, int>();\n        foreach (long x in arr) {\n            if (d.ContainsKey(x)) {\n                return false;\n            }\n            d[x] = 1;\n        }\n        return true;",
    "        long distinct = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != distinct) {\n                return false;\n            }\n        }\n        return true;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long first = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != first) {\n                return false;\n            }\n        }\n        return true;",
    "        if (arr.Count == 0) return false;\n        HashSet<long> set = new HashSet<long>();\n        foreach (long num in arr) {\n            if (set.Contains(num)) return false;\n            set.Add(num);\n        }\n        return true;",
    "        // Your code here\n        return arr.Distinct().Count() == 1;",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long i in arr) {\n            if (set.Contains(i)) {\n                return false;\n            }\n            set.Add(i);\n        }\n        return true;",
    "        // We can use a hashset to store the elements we've seen.\n        // If we see a duplicate, we return false.\n        // If we reach the end of the list, we return true.\n        HashSet<long> seen = new HashSet<long>();\n        foreach (long x in arr) {\n            if (seen.Contains(x)) {\n                return false;\n            }\n            seen.Add(x);\n        }\n        return true;"
  ]
}
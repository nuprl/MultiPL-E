{
  "name": "mbpp_760_unique_Element",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether a list of numbers contains only one distinct element or not.\n    public static bool UniqueElement(List<long> arr) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_760_unique_Element.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueElement((new List<long>(new long[]{(long)1L, (long)1L, (long)1L}))) == (true));\n    Debug.Assert(UniqueElement((new List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))) == (false));\n    Debug.Assert(UniqueElement((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))) == (false));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        if (arr.Count == 0) return false;\n        long x = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != x) return false;\n        }\n        return true;",
    "        // Write your code here\n        return arr.Distinct().Count() == 1;",
    "        // Write your code here\n        return arr.Distinct().Count() == 1;",
    "        // Your code goes here\n        HashSet<long> set = new HashSet<long>(arr);\n        return set.Count == 1;",
    "        long unique = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            unique ^= arr[i];\n        }\n        return unique == 0;",
    "        // Write your code here\n        return arr.Distinct().Count() == 1;",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long i in arr) {\n            if (set.Contains(i)) {\n                return false;\n            }\n            set.Add(i);\n        }\n        return true;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long first = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != first) {\n                return false;\n            }\n        }\n        return true;",
    "        // Your code here\n        return arr.Distinct().Count() == 1;",
    "        long first = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != first) {\n                return false;\n            }\n        }\n        return true;",
    "        if (arr.Count == 1) {\n            return true;\n        }\n        HashSet<long> set = new HashSet<long>();\n        foreach (long num in arr) {\n            if (set.Contains(num)) {\n                return false;\n            }\n            set.Add(num);\n        }\n        return true;",
    "        if (arr.Count == 1) {\n            return true;\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i + 1; j < arr.Count; j++) {\n                if (arr[i] == arr[j]) {\n                    return false;\n                }\n            }\n        }\n        return true;",
    "        // Your code here\n        return arr.Distinct().Count() == 1;",
    "        if (arr.Count == 0) {\n            return false;\n        }\n        long unique = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] != unique) {\n                return false;\n            }\n        }\n        return true;",
    "        if (arr.Count == 0) return false;\n        HashSet<long> set = new HashSet<long>();\n        foreach (long num in arr) {\n            if (set.Contains(num)) return false;\n            set.Add(num);\n        }\n        return true;",
    "        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        long n = arr.Count;\n        long[] count = new long[n];\n        for (int i = 0; i < n; i++) {\n            count[i] = 0;\n        }\n        for (int i = 0; i < n; i++) {\n            count[arr[i]]++;\n        }\n        for (int i = 0; i < n; i++) {\n            if (count[i] > 1) {\n                return false;\n            }\n        }\n        return true;",
    "        // O(n)\n        HashSet<long> set = new HashSet<long>();\n        foreach (long num in arr) {\n            if (set.Contains(num)) {\n                return false;\n            }\n            set.Add(num);\n        }\n        return true;",
    "        return arr.Distinct().Count() == 1;",
    "        return arr.Distinct().Count() == 1;",
    "        // Your code here\n        return arr.Distinct().Count() == 1;"
  ]
}